; ModuleID = '/llk/IR_all_yes/fs/nfs/pnfs.c_pt.bc'
source_filename = "../fs/nfs/pnfs.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+pnfs_register_layoutdriver\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_register_layoutdriver\09\09\09\09"
module asm "\09.long\09__crc_pnfs_register_layoutdriver\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_register_layoutdriver:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_register_layoutdriver\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_register_layoutdriver:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_unregister_layoutdriver\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_unregister_layoutdriver\09\09\09\09"
module asm "\09.long\09__crc_pnfs_unregister_layoutdriver\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_unregister_layoutdriver:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_unregister_layoutdriver\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_unregister_layoutdriver:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_put_lseg\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_put_lseg\09\09\09\09"
module asm "\09.long\09__crc_pnfs_put_lseg\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_put_lseg:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_put_lseg\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_put_lseg:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_destroy_layout\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_destroy_layout\09\09\09\09"
module asm "\09.long\09__crc_pnfs_destroy_layout\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_destroy_layout:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_destroy_layout\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_destroy_layout:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_generic_layout_insert_lseg\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_generic_layout_insert_lseg\09\09\09\09"
module asm "\09.long\09__crc_pnfs_generic_layout_insert_lseg\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_generic_layout_insert_lseg:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_generic_layout_insert_lseg\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_generic_layout_insert_lseg:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_update_layout\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_update_layout\09\09\09\09"
module asm "\09.long\09__crc_pnfs_update_layout\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_update_layout:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_update_layout\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_update_layout:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_error_mark_layout_for_return\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_error_mark_layout_for_return\09\09\09\09"
module asm "\09.long\09__crc_pnfs_error_mark_layout_for_return\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_error_mark_layout_for_return:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_error_mark_layout_for_return\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_error_mark_layout_for_return:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_generic_pg_check_layout\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_generic_pg_check_layout\09\09\09\09"
module asm "\09.long\09__crc_pnfs_generic_pg_check_layout\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_generic_pg_check_layout:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_generic_pg_check_layout\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_generic_pg_check_layout:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_generic_pg_check_range\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_generic_pg_check_range\09\09\09\09"
module asm "\09.long\09__crc_pnfs_generic_pg_check_range\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_generic_pg_check_range:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_generic_pg_check_range\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_generic_pg_check_range:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_generic_pg_init_read\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_generic_pg_init_read\09\09\09\09"
module asm "\09.long\09__crc_pnfs_generic_pg_init_read\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_generic_pg_init_read:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_generic_pg_init_read\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_generic_pg_init_read:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_generic_pg_init_write\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_generic_pg_init_write\09\09\09\09"
module asm "\09.long\09__crc_pnfs_generic_pg_init_write\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_generic_pg_init_write:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_generic_pg_init_write\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_generic_pg_init_write:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_generic_pg_cleanup\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_generic_pg_cleanup\09\09\09\09"
module asm "\09.long\09__crc_pnfs_generic_pg_cleanup\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_generic_pg_cleanup:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_generic_pg_cleanup\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_generic_pg_cleanup:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_generic_pg_test\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_generic_pg_test\09\09\09\09"
module asm "\09.long\09__crc_pnfs_generic_pg_test\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_generic_pg_test:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_generic_pg_test\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_generic_pg_test:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_write_done_resend_to_mds\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_write_done_resend_to_mds\09\09\09\09"
module asm "\09.long\09__crc_pnfs_write_done_resend_to_mds\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_write_done_resend_to_mds:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_write_done_resend_to_mds\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_write_done_resend_to_mds:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_ld_write_done\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_ld_write_done\09\09\09\09"
module asm "\09.long\09__crc_pnfs_ld_write_done\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_ld_write_done:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_ld_write_done\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_ld_write_done:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_generic_pg_writepages\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_generic_pg_writepages\09\09\09\09"
module asm "\09.long\09__crc_pnfs_generic_pg_writepages\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_generic_pg_writepages:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_generic_pg_writepages\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_generic_pg_writepages:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_read_done_resend_to_mds\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_read_done_resend_to_mds\09\09\09\09"
module asm "\09.long\09__crc_pnfs_read_done_resend_to_mds\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_read_done_resend_to_mds:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_read_done_resend_to_mds\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_read_done_resend_to_mds:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_ld_read_done\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_ld_read_done\09\09\09\09"
module asm "\09.long\09__crc_pnfs_ld_read_done\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_ld_read_done:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_ld_read_done\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_ld_read_done:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_read_resend_pnfs\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_read_resend_pnfs\09\09\09\09"
module asm "\09.long\09__crc_pnfs_read_resend_pnfs\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_read_resend_pnfs:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_read_resend_pnfs\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_read_resend_pnfs:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_generic_pg_readpages\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_generic_pg_readpages\09\09\09\09"
module asm "\09.long\09__crc_pnfs_generic_pg_readpages\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_generic_pg_readpages:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_generic_pg_readpages\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_generic_pg_readpages:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_set_lo_fail\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_set_lo_fail\09\09\09\09"
module asm "\09.long\09__crc_pnfs_set_lo_fail\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_set_lo_fail:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_set_lo_fail\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_set_lo_fail:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_set_layoutcommit\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_set_layoutcommit\09\09\09\09"
module asm "\09.long\09__crc_pnfs_set_layoutcommit\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_set_layoutcommit:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_set_layoutcommit\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_set_layoutcommit:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_layoutcommit_inode\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_layoutcommit_inode\09\09\09\09"
module asm "\09.long\09__crc_pnfs_layoutcommit_inode\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_layoutcommit_inode:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_layoutcommit_inode\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_layoutcommit_inode:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_generic_sync\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_generic_sync\09\09\09\09"
module asm "\09.long\09__crc_pnfs_generic_sync\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_generic_sync:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_generic_sync\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_generic_sync:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pnfs_report_layoutstat\22, \22a\22\09"
module asm "\09.weak\09__crc_pnfs_report_layoutstat\09\09\09\09"
module asm "\09.long\09__crc_pnfs_report_layoutstat\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pnfs_report_layoutstat:\09\09\09\09\09"
module asm "\09.asciz \09\22pnfs_report_layoutstat\22\09\09\09\09\09"
module asm "__kstrtabns_pnfs_report_layoutstat:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+layoutstats_timer\22, \22a\22\09"
module asm "\09.weak\09__crc_layoutstats_timer\09\09\09\09"
module asm "\09.long\09__crc_layoutstats_timer\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_layoutstats_timer:\09\09\09\09\09"
module asm "\09.asciz \09\22layoutstats_timer\22\09\09\09\09\09"
module asm "__kstrtabns_layoutstats_timer:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.list_head = type { ptr, ptr }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.kernel_param_ops = type { i32, ptr, ptr, ptr }
%struct.kernel_param = type { ptr, ptr, ptr, i16, i8, i8, %union.anon.80 }
%union.anon.80 = type { ptr }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t, %union.anon.81 }
%struct.atomic_t = type { i32 }
%union.anon.81 = type { i32 }
%struct.cpumask = type { [1 x i32] }
%struct.nfs4_stateid_struct = type { %union.anon.131, i32 }
%union.anon.131 = type { %struct.anon.132 }
%struct.anon.132 = type { i32, [12 x i8] }
%struct.nfs_server = type { ptr, %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, %struct.atomic_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.nfs_fsid, i64, %struct.timespec64, i32, ptr, i32, %struct.nfs_auth_info, ptr, ptr, i32, [3 x i32], [3 x i32], [3 x i32], [3 x i32], i32, i32, ptr, %struct.rpc_wait_queue, ptr, %struct.rb_root, %struct.ida, %struct.ida, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, ptr, %struct.atomic_t, %struct.__kernel_sockaddr_storage, i32, i32, i16, i16, %struct.rpc_wait_queue, i32, ptr, i8 }
%struct.nfs_fsid = type { i64, i64 }
%struct.timespec64 = type { i64, i32 }
%struct.nfs_auth_info = type { i32, [12 x i32] }
%struct.rb_root = type { ptr }
%struct.ida = type { %struct.xarray }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.__kernel_sockaddr_storage = type { %union.anon }
%union.anon = type { ptr, [124 x i8] }
%struct.rpc_wait_queue = type { %struct.spinlock, [4 x %struct.list_head], i8, i8, i8, i16, %struct.rpc_timer, ptr }
%struct.rpc_timer = type { %struct.list_head, i32, %struct.delayed_work }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.hlist_node = type { ptr, ptr }
%struct.pnfs_layoutdriver_type = type { %struct.list_head, i32, ptr, ptr, i32, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.nfs_client = type { %struct.refcount_struct, %struct.atomic_t, i32, i32, i32, %struct.__kernel_sockaddr_storage, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, ptr, i32, ptr, i32, i32, i32, ptr, %struct.list_head, i64, %struct.nfs4_verifier, i32, %struct.spinlock, i32, i32, %struct.delayed_work, %struct.rpc_wait_queue, ptr, ptr, i32, ptr, i32, ptr, i32, i32, ptr, i8, ptr, ptr, ptr, i32, %struct.wait_queue_head, [48 x i8], ptr, %struct.list_head }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.nfs4_verifier = type { [8 x i8] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.nfs_fsinfo = type { ptr, i32, i32, i32, i32, i32, i32, i32, i64, %struct.timespec64, i32, i32, [8 x i32], i32, i32, i32, i32 }
%struct.pnfs_layout_range = type { i32, i64, i64 }
%struct.pnfs_layout_hdr = type { %struct.refcount_struct, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i32, %struct.nfs4_stateid_struct, i32, i32, i32, i64, ptr, ptr, %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.148, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.149, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.150, ptr, %struct.address_space, %struct.list_head, %union.anon.151, i32, i32, ptr, ptr, ptr, ptr }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%union.anon.148 = type { i32 }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%union.anon.149 = type { %struct.callback_head }
%struct.atomic64_t = type { i64 }
%union.anon.150 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%union.anon.151 = type { ptr }
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, i16, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [24 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [24 x i8] }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t, %struct.lockdep_map }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { ptr }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.hlist_head = type { ptr }
%struct.list_lru = type { ptr, %struct.list_head, i32, i8 }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.pnfs_layout_segment = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.pnfs_layout_range, %struct.refcount_struct, i32, i32, ptr }
%struct.nfs_inode = type { i64, %struct.nfs_fh, i32, i32, i32, i32, i32, i32, %struct.rb_root, %struct.list_head, %struct.list_head, %union.anon.165, %struct.list_head, ptr, %struct.list_head, ptr, %struct.rw_semaphore, ptr, i64, i64, ptr, %struct.inode, ptr }
%struct.nfs_fh = type { i16, [128 x i8] }
%union.anon.165 = type { %struct.anon.167 }
%struct.anon.167 = type { %struct.atomic_t, %struct.nfs_mds_commit_info, %struct.mutex }
%struct.nfs_mds_commit_info = type { %struct.atomic_t, %struct.atomic_t, %struct.list_head }
%struct.wait_bit_queue_entry = type { %struct.wait_bit_key, %struct.wait_queue_entry }
%struct.wait_bit_key = type { ptr, i32, i32 }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.cred = type { %struct.atomic_t, %struct.atomic_t, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %union.anon.54 }
%struct.kernel_cap_struct = type { [2 x i32] }
%union.anon.54 = type { %struct.callback_head }
%struct.nfs4_layoutget_args = type { %struct.nfs4_sequence_args, i32, %struct.pnfs_layout_range, i64, i32, ptr, ptr, %struct.nfs4_stateid_struct, %struct.nfs4_layoutdriver_data }
%struct.nfs4_sequence_args = type { ptr, i8 }
%struct.nfs4_layoutdriver_data = type { ptr, i32, i32 }
%struct.nfs4_layoutget = type { %struct.nfs4_layoutget_args, %struct.nfs4_layoutget_res, ptr, ptr, i32 }
%struct.nfs4_layoutget_res = type { %struct.nfs4_sequence_res, i32, i32, %struct.pnfs_layout_range, i32, %struct.nfs4_stateid_struct, ptr }
%struct.nfs4_sequence_res = type { ptr, i32, i32, i32, i32, i32 }
%struct.nfs4_layoutreturn_args = type { %struct.nfs4_sequence_args, ptr, ptr, %struct.pnfs_layout_range, %struct.nfs4_stateid_struct, i32, ptr }
%struct.nfs4_layoutreturn = type { %struct.nfs4_layoutreturn_args, %struct.nfs4_layoutreturn_res, ptr, ptr, ptr, i32, %struct.nfs4_xdr_opaque_data }
%struct.nfs4_layoutreturn_res = type { %struct.nfs4_sequence_res, i32, %struct.nfs4_stateid_struct }
%struct.nfs4_xdr_opaque_data = type { ptr, ptr }
%struct.nfs4_layoutcommit_data = type { %struct.rpc_task, %struct.nfs_fattr, %struct.list_head, ptr, ptr, %struct.nfs4_layoutcommit_args, %struct.nfs4_layoutcommit_res }
%struct.rpc_task = type { %struct.atomic_t, i32, %struct.list_head, ptr, ptr, i32, i32, ptr, %union.anon.4, i32, %struct.rpc_message, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, i32, i16, i16, i16, i8 }
%union.anon.4 = type { %struct.work_struct }
%struct.rpc_message = type { ptr, ptr, ptr, ptr }
%struct.nfs_fattr = type { i32, i16, i32, %struct.kuid_t, %struct.kgid_t, i32, i64, %union.anon.152, %struct.nfs_fsid, i64, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64, i64, %struct.timespec64, %struct.timespec64, i32, i32, ptr, ptr, ptr, ptr }
%union.anon.152 = type { %struct.anon.154 }
%struct.anon.154 = type { i64 }
%struct.nfs4_layoutcommit_args = type { %struct.nfs4_sequence_args, %struct.nfs4_stateid_struct, i64, ptr, ptr, i32, ptr, ptr, ptr }
%struct.nfs4_layoutcommit_res = type { %struct.nfs4_sequence_res, ptr, ptr, i32 }
%struct.nfs4_state = type { %struct.list_head, %struct.list_head, %struct.list_head, ptr, ptr, i32, %struct.spinlock, %struct.seqlock_t, %struct.nfs4_stateid_struct, %struct.nfs4_stateid_struct, i32, i32, i32, i32, %struct.refcount_struct, %struct.wait_queue_head, %struct.callback_head }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.nfs4_xdr_opaque_ops = type { ptr, ptr }
%struct.nfs_open_context = type { %struct.nfs_lock_context, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, %struct.list_head, ptr, %struct.callback_head }
%struct.nfs_lock_context = type { %struct.refcount_struct, %struct.list_head, ptr, ptr, %struct.atomic_t, %struct.callback_head }
%struct.nfs4_threshold = type { i32, i32, i64, i64, i64, i64 }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, ptr, %struct.qstr, ptr, [36 x i8], %struct.lockref, ptr, ptr, i32, ptr, %union.anon.128, %struct.list_head, %struct.list_head, %union.anon.129 }
%struct.hlist_bl_node = type { ptr, ptr }
%struct.qstr = type { %union.anon.8, ptr }
%union.anon.8 = type { i64 }
%struct.lockref = type { %union.anon.10 }
%union.anon.10 = type { %struct.anon.11 }
%struct.anon.11 = type { %struct.spinlock, i32 }
%union.anon.128 = type { %struct.list_head }
%union.anon.129 = type { %struct.hlist_node }
%struct.nfs4_opendata = type { %struct.kref, %struct.nfs_openargs, %struct.nfs_openres, %struct.nfs_open_confirmargs, %struct.nfs_open_confirmres, %struct.nfs4_string, %struct.nfs4_string, ptr, %struct.nfs_fattr, ptr, ptr, ptr, ptr, %struct.iattr, ptr, i32, i8, i8, i8, i8, i32 }
%struct.kref = type { %struct.refcount_struct }
%struct.nfs_openargs = type { %struct.nfs4_sequence_args, ptr, ptr, i32, i32, i32, i32, i64, %struct.stateowner_id, %union.anon.168, ptr, ptr, ptr, ptr, i32, i32, ptr, i16, ptr }
%struct.stateowner_id = type { i64, i32 }
%union.anon.168 = type { %struct.nfs4_stateid_struct }
%struct.nfs_openres = type { %struct.nfs4_sequence_res, %struct.nfs4_stateid_struct, %struct.nfs_fh, %struct.nfs4_change_info, i32, ptr, ptr, ptr, i32, %struct.nfs4_stateid_struct, i32, i32, [3 x i32], ptr, ptr, i32, i32, i32, ptr }
%struct.nfs4_change_info = type { i32, i64, i64 }
%struct.nfs_open_confirmargs = type { %struct.nfs4_sequence_args, ptr, ptr, ptr }
%struct.nfs_open_confirmres = type { %struct.nfs4_sequence_res, %struct.nfs4_stateid_struct, ptr }
%struct.nfs4_string = type { i32, ptr }
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, ptr }
%struct.nfs_pageio_descriptor = type { ptr, ptr, ptr, i32, i32, ptr, ptr, ptr, ptr, ptr, i32, i32, ptr, [1 x %struct.nfs_pgio_mirror], ptr, i32, i16, i8 }
%struct.nfs_pgio_mirror = type { %struct.list_head, i32, i32, i32, i32, i8 }
%struct.nfs_page = type { %struct.list_head, ptr, ptr, i32, i32, i32, i32, %struct.kref, i32, %struct.nfs_write_verifier, ptr, ptr, i16 }
%struct.nfs_write_verifier = type { [8 x i8] }
%struct.nfs_pgio_header = type { ptr, ptr, %struct.list_head, ptr, %struct.nfs_writeverf, i32, ptr, i64, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, %struct.rpc_task, %struct.nfs_fattr, %struct.nfs_pgio_args, %struct.nfs_pgio_res, i32, ptr, i64, %struct.nfs_page_array, ptr, i32, i32 }
%struct.nfs_writeverf = type { %struct.nfs_write_verifier, i32 }
%struct.nfs_pgio_args = type { %struct.nfs4_sequence_args, ptr, ptr, ptr, %struct.nfs4_stateid_struct, i64, i32, i32, ptr, %union.anon.155 }
%union.anon.155 = type { %struct.anon.156 }
%struct.anon.156 = type { ptr, [3 x i32], i32 }
%struct.nfs_pgio_res = type { %struct.nfs4_sequence_res, ptr, i64, i32, %union.anon.157 }
%union.anon.157 = type { %struct.anon.158 }
%struct.anon.158 = type { i32, i32 }
%struct.nfs_page_array = type { ptr, i32, [8 x ptr] }
%struct.rpc_call_ops = type { ptr, ptr, ptr, ptr }
%struct.nfs_iostats = type { [8 x i64], [5 x i64], [27 x i32], [44 x i8] }
%struct.nfs_pgio_completion_ops = type { ptr, ptr, ptr, ptr }
%struct.nfs42_layoutstat_data = type { ptr, %struct.nfs42_layoutstat_args, %struct.nfs42_layoutstat_res }
%struct.nfs42_layoutstat_args = type { %struct.nfs4_sequence_args, ptr, ptr, %struct.nfs4_stateid_struct, i32, ptr }
%struct.nfs42_layoutstat_res = type { %struct.nfs4_sequence_res, i32, i32 }

@set_pnfs_layoutdriver._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str, ptr @.str.1, ptr @.str.2, i32 161, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"\013NFS: %s: cl_exchange_flags 0x%x\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"set_pnfs_layoutdriver\00", [42 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"fs/nfs/pnfs.c\00", [18 x i8] zeroinitializer }, align 32
@set_pnfs_layoutdriver._entry_ptr = internal global ptr @set_pnfs_layoutdriver._entry, section ".printk_index", align 4
@.str.3 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%s-%u\00", [26 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"nfs-layouttype4\00", [16 x i8] zeroinitializer }, align 32
@nfs_debug = external dso_local local_unnamed_addr global i32, align 4
@set_pnfs_layoutdriver._entry.5 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.6, ptr @.str.1, ptr @.str.2, i32 181, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"%s: No pNFS module found!\0A\00", [37 x i8] zeroinitializer }, align 32
@set_pnfs_layoutdriver._entry_ptr.7 = internal global ptr @set_pnfs_layoutdriver._entry.5, section ".printk_index", align 4
@set_pnfs_layoutdriver._entry.8 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.9, ptr @.str.1, ptr @.str.2, i32 189, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [54 x i8], [42 x i8] } { [54 x i8] c"\013NFS: %s: Error initializing pNFS layout driver %u.\0A\00", [42 x i8] zeroinitializer }, align 32
@set_pnfs_layoutdriver._entry_ptr.10 = internal global ptr @set_pnfs_layoutdriver._entry.8, section ".printk_index", align 4
@set_pnfs_layoutdriver._entry.11 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.12, ptr @.str.1, ptr @.str.2, i32 196, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"%s: pNFS module for %u set\0A\00", [36 x i8] zeroinitializer }, align 32
@set_pnfs_layoutdriver._entry_ptr.13 = internal global ptr @set_pnfs_layoutdriver._entry.11, section ".printk_index", align 4
@set_pnfs_layoutdriver._entry.14 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.15, ptr @.str.1, ptr @.str.2, i32 200, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"%s: Using NFSv4 I/O\0A\00", [43 x i8] zeroinitializer }, align 32
@set_pnfs_layoutdriver._entry_ptr.16 = internal global ptr @set_pnfs_layoutdriver._entry.14, section ".printk_index", align 4
@pnfs_register_layoutdriver._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.17, ptr @.str.18, ptr @.str.2, i32 211, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"\013NFS: %s id 0 is reserved\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"pnfs_register_layoutdriver\00", [37 x i8] zeroinitializer }, align 32
@pnfs_register_layoutdriver._entry_ptr = internal global ptr @pnfs_register_layoutdriver._entry, section ".printk_index", align 4
@pnfs_register_layoutdriver._entry.19 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.20, ptr @.str.18, ptr @.str.2, i32 216, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"\013NFS: %s Layout driver must provide alloc_lseg and free_lseg.\0A\00", [32 x i8] zeroinitializer }, align 32
@pnfs_register_layoutdriver._entry_ptr.21 = internal global ptr @pnfs_register_layoutdriver._entry.19, section ".printk_index", align 4
@pnfs_spinlock = internal global { %struct.spinlock, [52 x i8] } { %struct.spinlock { %union.anon.0 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.111, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, [52 x i8] zeroinitializer }, align 32
@pnfs_modules_tbl = internal global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @pnfs_modules_tbl, ptr @pnfs_modules_tbl }, [24 x i8] zeroinitializer }, align 32
@pnfs_register_layoutdriver._entry.22 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.23, ptr @.str.18, ptr @.str.2, i32 226, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"%s Registering id:%u name:%s\0A\00", [34 x i8] zeroinitializer }, align 32
@pnfs_register_layoutdriver._entry_ptr.24 = internal global ptr @pnfs_register_layoutdriver._entry.22, section ".printk_index", align 4
@pnfs_register_layoutdriver._entry.25 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.26, ptr @.str.18, ptr @.str.2, i32 229, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"\013NFS: %s Module with id %d already loaded!\0A\00", [51 x i8] zeroinitializer }, align 32
@pnfs_register_layoutdriver._entry_ptr.27 = internal global ptr @pnfs_register_layoutdriver._entry.25, section ".printk_index", align 4
@__kstrtab_pnfs_register_layoutdriver = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_register_layoutdriver = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_register_layoutdriver = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_register_layoutdriver to i32), ptr @__kstrtab_pnfs_register_layoutdriver, ptr @__kstrtabns_pnfs_register_layoutdriver }, section "___ksymtab_gpl+pnfs_register_layoutdriver", align 4
@pnfs_unregister_layoutdriver._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.28, ptr @.str.29, ptr @.str.2, i32 240, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%s Deregistering id:%u\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"pnfs_unregister_layoutdriver\00", [35 x i8] zeroinitializer }, align 32
@pnfs_unregister_layoutdriver._entry_ptr = internal global ptr @pnfs_unregister_layoutdriver._entry, section ".printk_index", align 4
@__kstrtab_pnfs_unregister_layoutdriver = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_unregister_layoutdriver = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_unregister_layoutdriver = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_unregister_layoutdriver to i32), ptr @__kstrtab_pnfs_unregister_layoutdriver, ptr @__kstrtabns_pnfs_unregister_layoutdriver }, section "___ksymtab_gpl+pnfs_unregister_layoutdriver", align 4
@pnfs_put_layout_hdr.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.30 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"NFS: BUG unfreed layout segments.\0A\00", [61 x i8] zeroinitializer }, align 32
@pnfs_put_lseg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.31, ptr @.str.32, ptr @.str.2, i32 593, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"%s: lseg %p ref %d valid %d\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"pnfs_put_lseg\00", [18 x i8] zeroinitializer }, align 32
@pnfs_put_lseg._entry_ptr = internal global ptr @pnfs_put_lseg._entry, section ".printk_index", align 4
@__kstrtab_pnfs_put_lseg = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_put_lseg = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_put_lseg = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_put_lseg to i32), ptr @__kstrtab_pnfs_put_lseg, ptr @__kstrtabns_pnfs_put_lseg }, section "___ksymtab_gpl+pnfs_put_lseg", align 4
@pnfs_mark_matching_lsegs_invalid._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.33, ptr @.str.34, ptr @.str.2, i32 703, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"%s:Begin lo %p\0A\00", [16 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"pnfs_mark_matching_lsegs_invalid\00", [63 x i8] zeroinitializer }, align 32
@pnfs_mark_matching_lsegs_invalid._entry_ptr = internal global ptr @pnfs_mark_matching_lsegs_invalid._entry, section ".printk_index", align 4
@pnfs_mark_matching_lsegs_invalid._entry.35 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.36, ptr @.str.34, ptr @.str.2, i32 712, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"%s: freeing lseg %p iomode %d seq %u offset %llu length %llu\0A\00", [34 x i8] zeroinitializer }, align 32
@pnfs_mark_matching_lsegs_invalid._entry_ptr.37 = internal global ptr @pnfs_mark_matching_lsegs_invalid._entry.35, section ".printk_index", align 4
@pnfs_mark_matching_lsegs_invalid._entry.38 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.39, ptr @.str.34, ptr @.str.2, i32 716, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"%s:Return %i\0A\00", [18 x i8] zeroinitializer }, align 32
@pnfs_mark_matching_lsegs_invalid._entry_ptr.40 = internal global ptr @pnfs_mark_matching_lsegs_invalid._entry.38, section ".printk_index", align 4
@__kstrtab_pnfs_destroy_layout = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_destroy_layout = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_destroy_layout = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_destroy_layout to i32), ptr @__kstrtab_pnfs_destroy_layout, ptr @__kstrtabns_pnfs_destroy_layout }, section "___ksymtab_gpl+pnfs_destroy_layout", align 4
@pnfs_destroy_layouts_byfsid.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.41 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"RCU-list traversed in non-reader section!\00", [54 x i8] zeroinitializer }, align 32
@pnfs_destroy_layouts_byclid.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@_pnfs_return_layout._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.42, ptr @.str.43, ptr @.str.2, i32 1330, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"NFS: %s for inode %lu\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"_pnfs_return_layout\00", [44 x i8] zeroinitializer }, align 32
@_pnfs_return_layout._entry_ptr = internal global ptr @_pnfs_return_layout._entry, section ".printk_index", align 4
@_pnfs_return_layout._entry.44 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.45, ptr @.str.43, ptr @.str.2, i32 1336, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"NFS: %s no layout to return\0A\00", [35 x i8] zeroinitializer }, align 32
@_pnfs_return_layout._entry_ptr.46 = internal global ptr @_pnfs_return_layout._entry.44, section ".printk_index", align 4
@_pnfs_return_layout._entry.47 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.48, ptr @.str.43, ptr @.str.2, i32 1360, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"NFS: %s no layout segments to return\0A\00", [58 x i8] zeroinitializer }, align 32
@_pnfs_return_layout._entry_ptr.49 = internal global ptr @_pnfs_return_layout._entry.47, section ".printk_index", align 4
@_pnfs_return_layout._entry.50 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.51, ptr @.str.43, ptr @.str.2, i32 1374, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"<-- %s status: %d\0A\00", [45 x i8] zeroinitializer }, align 32
@_pnfs_return_layout._entry_ptr.52 = internal global ptr @_pnfs_return_layout._entry.50, section ".printk_index", align 4
@pnfs_roc.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@pnfs_generic_layout_insert_lseg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.53, ptr @.str.54, ptr @.str.2, i32 1657, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"%s:Begin\0A\00", [22 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"pnfs_generic_layout_insert_lseg\00", [32 x i8] zeroinitializer }, align 32
@pnfs_generic_layout_insert_lseg._entry_ptr = internal global ptr @pnfs_generic_layout_insert_lseg._entry, section ".printk_index", align 4
@pnfs_generic_layout_insert_lseg._entry.55 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.56, ptr @.str.54, ptr @.str.2, i32 1675, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [103 x i8], [57 x i8] } { [103 x i8] c"%s: inserted lseg %p iomode %d offset %llu length %llu before lp %p iomode %d offset %llu length %llu\0A\00", [57 x i8] zeroinitializer }, align 32
@pnfs_generic_layout_insert_lseg._entry_ptr.57 = internal global ptr @pnfs_generic_layout_insert_lseg._entry.55, section ".printk_index", align 4
@pnfs_generic_layout_insert_lseg._entry.58 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.59, ptr @.str.54, ptr @.str.2, i32 1682, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"%s: inserted lseg %p iomode %d offset %llu length %llu at tail\0A\00", [32 x i8] zeroinitializer }, align 32
@pnfs_generic_layout_insert_lseg._entry_ptr.60 = internal global ptr @pnfs_generic_layout_insert_lseg._entry.58, section ".printk_index", align 4
@pnfs_generic_layout_insert_lseg._entry.61 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.62, ptr @.str.54, ptr @.str.2, i32 1686, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"%s:Return\0A\00", [21 x i8] zeroinitializer }, align 32
@pnfs_generic_layout_insert_lseg._entry_ptr.63 = internal global ptr @pnfs_generic_layout_insert_lseg._entry.61, section ".printk_index", align 4
@__kstrtab_pnfs_generic_layout_insert_lseg = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_generic_layout_insert_lseg = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_generic_layout_insert_lseg = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_generic_layout_insert_lseg to i32), ptr @__kstrtab_pnfs_generic_layout_insert_lseg, ptr @__kstrtabns_pnfs_generic_layout_insert_lseg }, section "___ksymtab_gpl+pnfs_generic_layout_insert_lseg", align 4
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@pnfs_update_layout._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.64, ptr @.str.65, ptr @.str.2, i32 2001, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"%s matches recall, use MDS\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"pnfs_update_layout\00", [45 x i8] zeroinitializer }, align 32
@pnfs_update_layout._entry_ptr = internal global ptr @pnfs_update_layout._entry, section ".printk_index", align 4
@pnfs_update_layout._entry.66 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.67, ptr @.str.65, ptr @.str.2, i32 2033, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"%s wait for layoutreturn\0A\00", [38 x i8] zeroinitializer }, align 32
@pnfs_update_layout._entry_ptr.68 = internal global ptr @pnfs_update_layout._entry.66, section ".printk_index", align 4
@pnfs_update_layout._entry.69 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.70, ptr @.str.65, ptr @.str.2, i32 2037, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"%s retrying\0A\00", [19 x i8] zeroinitializer }, align 32
@pnfs_update_layout._entry_ptr.71 = internal global ptr @pnfs_update_layout._entry.69, section ".printk_index", align 4
@pnfs_update_layout._entry.72 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.70, ptr @.str.65, ptr @.str.2, i32 2076, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@pnfs_update_layout._entry_ptr.73 = internal global ptr @pnfs_update_layout._entry.72, section ".printk_index", align 4
@pnfs_update_layout._entry.74 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.75, ptr @.str.65, ptr @.str.2, i32 2175, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [79 x i8], [49 x i8] } { [79 x i8] c"%s: inode %s/%llu pNFS layout segment %s for (%s, offset: %llu, length: %llu)\0A\00", [49 x i8] zeroinitializer }, align 32
@pnfs_update_layout._entry_ptr.76 = internal global ptr @pnfs_update_layout._entry.74, section ".printk_index", align 4
@.str.77 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"not found\00", [22 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"found\00", [26 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"read/write\00", [21 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"read-only\00", [22 x i8] zeroinitializer }, align 32
@__kstrtab_pnfs_update_layout = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_update_layout = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_update_layout = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_update_layout to i32), ptr @__kstrtab_pnfs_update_layout, ptr @__kstrtabns_pnfs_update_layout }, section "___ksymtab_gpl+pnfs_update_layout", align 4
@pnfs_parse_lgopen._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.81, ptr @.str.82, ptr @.str.2, i32 2316, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"%s: entered with status %i\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"pnfs_parse_lgopen\00", [46 x i8] zeroinitializer }, align 32
@pnfs_parse_lgopen._entry_ptr = internal global ptr @pnfs_parse_lgopen._entry, section ".printk_index", align 4
@pnfs_layout_process._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.83, ptr @.str.84, ptr @.str.2, i32 2385, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"%s: Could not allocate layout: error %ld\0A\00", [54 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"pnfs_layout_process\00", [44 x i8] zeroinitializer }, align 32
@pnfs_layout_process._entry_ptr = internal global ptr @pnfs_layout_process._entry, section ".printk_index", align 4
@pnfs_layout_process._entry.85 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.86, ptr @.str.84, ptr @.str.2, i32 2393, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"%s forget reply due to state\0A\00", [34 x i8] zeroinitializer }, align 32
@pnfs_layout_process._entry_ptr.87 = internal global ptr @pnfs_layout_process._entry.85, section ".printk_index", align 4
@pnfs_layout_process._entry.88 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.89, ptr @.str.84, ptr @.str.2, i32 2405, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%s forget reply due to sequence\0A\00", [63 x i8] zeroinitializer }, align 32
@pnfs_layout_process._entry_ptr.90 = internal global ptr @pnfs_layout_process._entry.88, section ".printk_index", align 4
@__const.pnfs_layout_process.range = private unnamed_addr constant { i32, [4 x i8], i64, i64 } { i32 3, [4 x i8] zeroinitializer, i64 0, i64 -1 }, align 8
@pnfs_mark_matching_lsegs_return._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.33, ptr @.str.91, ptr @.str.2, i32 2468, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"pnfs_mark_matching_lsegs_return\00", [32 x i8] zeroinitializer }, align 32
@pnfs_mark_matching_lsegs_return._entry_ptr = internal global ptr @pnfs_mark_matching_lsegs_return._entry, section ".printk_index", align 4
@pnfs_mark_matching_lsegs_return._entry.92 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.93, ptr @.str.91, ptr @.str.2, i32 2481, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"%s: marking lseg %p iomode %d offset %llu length %llu\0A\00", [41 x i8] zeroinitializer }, align 32
@pnfs_mark_matching_lsegs_return._entry_ptr.94 = internal global ptr @pnfs_mark_matching_lsegs_return._entry.92, section ".printk_index", align 4
@__kstrtab_pnfs_error_mark_layout_for_return = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_error_mark_layout_for_return = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_error_mark_layout_for_return = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_error_mark_layout_for_return to i32), ptr @__kstrtab_pnfs_error_mark_layout_for_return, ptr @__kstrtabns_pnfs_error_mark_layout_for_return }, section "___ksymtab_gpl+pnfs_error_mark_layout_for_return", align 4
@__kstrtab_pnfs_generic_pg_check_layout = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_generic_pg_check_layout = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_generic_pg_check_layout = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_generic_pg_check_layout to i32), ptr @__kstrtab_pnfs_generic_pg_check_layout, ptr @__kstrtabns_pnfs_generic_pg_check_layout }, section "___ksymtab_gpl+pnfs_generic_pg_check_layout", align 4
@__kstrtab_pnfs_generic_pg_check_range = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_generic_pg_check_range = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_generic_pg_check_range = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_generic_pg_check_range to i32), ptr @__kstrtab_pnfs_generic_pg_check_range, ptr @__kstrtabns_pnfs_generic_pg_check_range }, section "___ksymtab_gpl+pnfs_generic_pg_check_range", align 4
@__kstrtab_pnfs_generic_pg_init_read = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_generic_pg_init_read = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_generic_pg_init_read = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_generic_pg_init_read to i32), ptr @__kstrtab_pnfs_generic_pg_init_read, ptr @__kstrtabns_pnfs_generic_pg_init_read }, section "___ksymtab_gpl+pnfs_generic_pg_init_read", align 4
@__kstrtab_pnfs_generic_pg_init_write = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_generic_pg_init_write = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_generic_pg_init_write = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_generic_pg_init_write to i32), ptr @__kstrtab_pnfs_generic_pg_init_write, ptr @__kstrtabns_pnfs_generic_pg_init_write }, section "___ksymtab_gpl+pnfs_generic_pg_init_write", align 4
@__kstrtab_pnfs_generic_pg_cleanup = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_generic_pg_cleanup = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_generic_pg_cleanup = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_generic_pg_cleanup to i32), ptr @__kstrtab_pnfs_generic_pg_cleanup, ptr @__kstrtabns_pnfs_generic_pg_cleanup }, section "___ksymtab_gpl+pnfs_generic_pg_cleanup", align 4
@__kstrtab_pnfs_generic_pg_test = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_generic_pg_test = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_generic_pg_test = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_generic_pg_test to i32), ptr @__kstrtab_pnfs_generic_pg_test, ptr @__kstrtabns_pnfs_generic_pg_test }, section "___ksymtab_gpl+pnfs_generic_pg_test", align 4
@__kstrtab_pnfs_write_done_resend_to_mds = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_write_done_resend_to_mds = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_write_done_resend_to_mds = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_write_done_resend_to_mds to i32), ptr @__kstrtab_pnfs_write_done_resend_to_mds, ptr @__kstrtabns_pnfs_write_done_resend_to_mds }, section "___ksymtab_gpl+pnfs_write_done_resend_to_mds", align 4
@__kstrtab_pnfs_ld_write_done = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_ld_write_done = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_ld_write_done = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_ld_write_done to i32), ptr @__kstrtab_pnfs_ld_write_done, ptr @__kstrtabns_pnfs_ld_write_done }, section "___ksymtab_gpl+pnfs_ld_write_done", align 4
@__kstrtab_pnfs_generic_pg_writepages = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_generic_pg_writepages = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_generic_pg_writepages = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_generic_pg_writepages to i32), ptr @__kstrtab_pnfs_generic_pg_writepages, ptr @__kstrtabns_pnfs_generic_pg_writepages }, section "___ksymtab_gpl+pnfs_generic_pg_writepages", align 4
@__kstrtab_pnfs_read_done_resend_to_mds = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_read_done_resend_to_mds = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_read_done_resend_to_mds = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_read_done_resend_to_mds to i32), ptr @__kstrtab_pnfs_read_done_resend_to_mds, ptr @__kstrtabns_pnfs_read_done_resend_to_mds }, section "___ksymtab_gpl+pnfs_read_done_resend_to_mds", align 4
@__kstrtab_pnfs_ld_read_done = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_ld_read_done = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_ld_read_done = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_ld_read_done to i32), ptr @__kstrtab_pnfs_ld_read_done, ptr @__kstrtabns_pnfs_ld_read_done }, section "___ksymtab_gpl+pnfs_ld_read_done", align 4
@__kstrtab_pnfs_read_resend_pnfs = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_read_resend_pnfs = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_read_resend_pnfs = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_read_resend_pnfs to i32), ptr @__kstrtab_pnfs_read_resend_pnfs, ptr @__kstrtabns_pnfs_read_resend_pnfs }, section "___ksymtab_gpl+pnfs_read_resend_pnfs", align 4
@__kstrtab_pnfs_generic_pg_readpages = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_generic_pg_readpages = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_generic_pg_readpages = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_generic_pg_readpages to i32), ptr @__kstrtab_pnfs_generic_pg_readpages, ptr @__kstrtabns_pnfs_generic_pg_readpages }, section "___ksymtab_gpl+pnfs_generic_pg_readpages", align 4
@__kstrtab_pnfs_set_lo_fail = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_set_lo_fail = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_set_lo_fail = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_set_lo_fail to i32), ptr @__kstrtab_pnfs_set_lo_fail, ptr @__kstrtabns_pnfs_set_lo_fail }, section "___ksymtab_gpl+pnfs_set_lo_fail", align 4
@pnfs_set_layoutcommit._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.95, ptr @.str.96, ptr @.str.2, i32 3123, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"%s: Set layoutcommit for inode %lu \00", [60 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"pnfs_set_layoutcommit\00", [42 x i8] zeroinitializer }, align 32
@pnfs_set_layoutcommit._entry_ptr = internal global ptr @pnfs_set_layoutcommit._entry, section ".printk_index", align 4
@pnfs_set_layoutcommit._entry.97 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.98, ptr @.str.96, ptr @.str.2, i32 3132, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"%s: lseg %p end_pos %llu\0A\00", [38 x i8] zeroinitializer }, align 32
@pnfs_set_layoutcommit._entry_ptr.99 = internal global ptr @pnfs_set_layoutcommit._entry.97, section ".printk_index", align 4
@__kstrtab_pnfs_set_layoutcommit = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_set_layoutcommit = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_set_layoutcommit = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_set_layoutcommit to i32), ptr @__kstrtab_pnfs_set_layoutcommit, ptr @__kstrtabns_pnfs_set_layoutcommit }, section "___ksymtab_gpl+pnfs_set_layoutcommit", align 4
@pnfs_layoutcommit_inode._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.100, ptr @.str.101, ptr @.str.2, i32 3170, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"--> %s inode %lu\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"pnfs_layoutcommit_inode\00", [40 x i8] zeroinitializer }, align 32
@pnfs_layoutcommit_inode._entry_ptr = internal global ptr @pnfs_layoutcommit_inode._entry, section ".printk_index", align 4
@pnfs_layoutcommit_inode._entry.102 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.103, ptr @.str.101, ptr @.str.2, i32 3231, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"<-- %s status %d\0A\00", [46 x i8] zeroinitializer }, align 32
@pnfs_layoutcommit_inode._entry_ptr.104 = internal global ptr @pnfs_layoutcommit_inode._entry.102, section ".printk_index", align 4
@__kstrtab_pnfs_layoutcommit_inode = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_layoutcommit_inode = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_layoutcommit_inode = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_layoutcommit_inode to i32), ptr @__kstrtab_pnfs_layoutcommit_inode, ptr @__kstrtabns_pnfs_layoutcommit_inode }, section "___ksymtab_gpl+pnfs_layoutcommit_inode", align 4
@__kstrtab_pnfs_generic_sync = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_generic_sync = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_generic_sync = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_generic_sync to i32), ptr @__kstrtab_pnfs_generic_sync, ptr @__kstrtabns_pnfs_generic_sync }, section "___ksymtab_gpl+pnfs_generic_sync", align 4
@pnfs_mdsthreshold_alloc._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.105, ptr @.str.106, ptr @.str.2, i32 3255, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"%s mdsthreshold allocation failed\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"pnfs_mdsthreshold_alloc\00", [40 x i8] zeroinitializer }, align 32
@pnfs_mdsthreshold_alloc._entry_ptr = internal global ptr @pnfs_mdsthreshold_alloc._entry, section ".printk_index", align 4
@pnfs_report_layoutstat._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.107, ptr @.str.108, ptr @.str.2, i32 3305, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"%s returns %d\0A\00", [17 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"pnfs_report_layoutstat\00", [41 x i8] zeroinitializer }, align 32
@pnfs_report_layoutstat._entry_ptr = internal global ptr @pnfs_report_layoutstat._entry, section ".printk_index", align 4
@__kstrtab_pnfs_report_layoutstat = external dso_local constant [0 x i8], align 1
@__kstrtabns_pnfs_report_layoutstat = external dso_local constant [0 x i8], align 1
@__ksymtab_pnfs_report_layoutstat = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pnfs_report_layoutstat to i32), ptr @__kstrtab_pnfs_report_layoutstat, ptr @__kstrtabns_pnfs_report_layoutstat }, section "___ksymtab_gpl+pnfs_report_layoutstat", align 4
@__param_str_layoutstats_timer = internal constant [24 x i8] c"nfsv4.layoutstats_timer\00", align 1
@param_ops_uint = external dso_local constant %struct.kernel_param_ops, align 4
@layoutstats_timer = dso_local global { i32, [28 x i8] } zeroinitializer, align 32
@__param_layoutstats_timer = internal constant %struct.kernel_param { ptr @__param_str_layoutstats_timer, ptr null, ptr @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.80 { ptr @layoutstats_timer } }, section "__param", align 4
@__UNIQUE_ID_layoutstats_timertype707 = internal constant [38 x i8] c"nfsv4.parmtype=layoutstats_timer:uint\00", section ".modinfo", align 1
@__kstrtab_layoutstats_timer = external dso_local constant [0 x i8], align 1
@__kstrtabns_layoutstats_timer = external dso_local constant [0 x i8], align 1
@__ksymtab_layoutstats_timer = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @layoutstats_timer to i32), ptr @__kstrtab_layoutstats_timer, ptr @__kstrtabns_layoutstats_timer }, section "___ksymtab_gpl+layoutstats_timer", align 4
@find_pnfs_driver._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.109, ptr @.str.110, ptr @.str.2, i32 88, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"%s: Could not grab reference on module\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"find_pnfs_driver\00", [47 x i8] zeroinitializer }, align 32
@find_pnfs_driver._entry_ptr = internal global ptr @find_pnfs_driver._entry, section ".printk_index", align 4
@.str.111 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"pnfs_spinlock\00", [18 x i8] zeroinitializer }, align 32
@find_pnfs_driver_locked._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.112, ptr @.str.113, ptr @.str.2, i32 76, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"%s: Searching for id %u, found %p\0A\00", [61 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"find_pnfs_driver_locked\00", [40 x i8] zeroinitializer }, align 32
@find_pnfs_driver_locked._entry_ptr = internal global ptr @find_pnfs_driver_locked._entry, section ".printk_index", align 4
@pnfs_detach_layout_hdr._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.114, ptr @.str.115, ptr @.str.2, i32 286, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"%s: freeing layout cache %p\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"pnfs_detach_layout_hdr\00", [41 x i8] zeroinitializer }, align 32
@pnfs_detach_layout_hdr._entry_ptr = internal global ptr @pnfs_detach_layout_hdr._entry, section ".printk_index", align 4
@mark_lseg_invalid._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.116, ptr @.str.117, ptr @.str.2, i32 651, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"%s: lseg %p ref %d\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"mark_lseg_invalid\00", [46 x i8] zeroinitializer }, align 32
@mark_lseg_invalid._entry_ptr = internal global ptr @mark_lseg_invalid._entry, section ".printk_index", align 4
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.118 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.120 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@pnfs_layout_free_bulk_destroy_list._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.121, ptr @.str.122, ptr @.str.2, i32 867, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"%s freeing layout for inode %lu\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"pnfs_layout_free_bulk_destroy_list\00", [61 x i8] zeroinitializer }, align 32
@pnfs_layout_free_bulk_destroy_list._entry_ptr = internal global ptr @pnfs_layout_free_bulk_destroy_list._entry, section ".printk_index", align 4
@.str.123 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/wait_bit.h\00", [39 x i8] zeroinitializer }, align 32
@pnfs_send_layoutreturn._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.51, ptr @.str.124, ptr @.str.2, i32 1256, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"pnfs_send_layoutreturn\00", [41 x i8] zeroinitializer }, align 32
@pnfs_send_layoutreturn._entry_ptr = internal global ptr @pnfs_send_layoutreturn._entry, section ".printk_index", align 4
@.str.125 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"include/linux/cred.h\00", [43 x i8] zeroinitializer }, align 32
@__tracepoint_nfs4_layoutreturn_on_close = external dso_local global %struct.tracepoint, align 4
@.str.126 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"fs/nfs/nfs4trace.h\00", [45 x i8] zeroinitializer }, align 32
@trace_nfs4_layoutreturn_on_close.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.127 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.128 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@__tracepoint_pnfs_update_layout = external dso_local global %struct.tracepoint, align 4
@trace_pnfs_update_layout.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@pnfs_within_mdsthreshold._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.129, ptr @.str.130, ptr @.str.2, i32 1846, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"%s bm=0x%x rd_sz=%llu wr_sz=%llu rd_io=%llu wr_io=%llu\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"pnfs_within_mdsthreshold\00", [39 x i8] zeroinitializer }, align 32
@pnfs_within_mdsthreshold._entry_ptr = internal global ptr @pnfs_within_mdsthreshold._entry, section ".printk_index", align 4
@pnfs_within_mdsthreshold._entry.131 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.132, ptr @.str.130, ptr @.str.2, i32 1851, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"%s fsize %llu\0A\00", [17 x i8] zeroinitializer }, align 32
@pnfs_within_mdsthreshold._entry_ptr.133 = internal global ptr @pnfs_within_mdsthreshold._entry.131, section ".printk_index", align 4
@pnfs_within_mdsthreshold._entry.134 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.135, ptr @.str.130, ptr @.str.2, i32 1858, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%s nfsi->read_io %llu\0A\00", [41 x i8] zeroinitializer }, align 32
@pnfs_within_mdsthreshold._entry_ptr.136 = internal global ptr @pnfs_within_mdsthreshold._entry.134, section ".printk_index", align 4
@pnfs_within_mdsthreshold._entry.137 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.132, ptr @.str.130, ptr @.str.2, i32 1866, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@pnfs_within_mdsthreshold._entry_ptr.138 = internal global ptr @pnfs_within_mdsthreshold._entry.137, section ".printk_index", align 4
@pnfs_within_mdsthreshold._entry.139 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.140, ptr @.str.130, ptr @.str.2, i32 1873, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%s nfsi->write_io %llu\0A\00", [40 x i8] zeroinitializer }, align 32
@pnfs_within_mdsthreshold._entry_ptr.141 = internal global ptr @pnfs_within_mdsthreshold._entry.139, section ".printk_index", align 4
@pnfs_within_mdsthreshold._entry.142 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.143, ptr @.str.130, ptr @.str.2, i32 1886, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"<-- %s size %d io %d ret %d\0A\00", [35 x i8] zeroinitializer }, align 32
@pnfs_within_mdsthreshold._entry_ptr.144 = internal global ptr @pnfs_within_mdsthreshold._entry.142, section ".printk_index", align 4
@pnfs_find_alloc_layout._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.145, ptr @.str.146, ptr @.str.2, i32 1738, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"%s Begin ino=%p layout=%p\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"pnfs_find_alloc_layout\00", [41 x i8] zeroinitializer }, align 32
@pnfs_find_alloc_layout._entry_ptr = internal global ptr @pnfs_find_alloc_layout._entry, section ".printk_index", align 4
@pnfs_find_lseg._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.53, ptr @.str.147, ptr @.str.2, i32 1799, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"pnfs_find_lseg\00", [17 x i8] zeroinitializer }, align 32
@pnfs_find_lseg._entry_ptr = internal global ptr @pnfs_find_lseg._entry, section ".printk_index", align 4
@pnfs_find_lseg._entry.148 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.149, ptr @.str.147, ptr @.str.2, i32 1811, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"%s:Return lseg %p ref %d\0A\00", [38 x i8] zeroinitializer }, align 32
@pnfs_find_lseg._entry_ptr.150 = internal global ptr @pnfs_find_lseg._entry.148, section ".printk_index", align 4
@pnfs_alloc_init_layoutget_args._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.151, ptr @.str.152, ptr @.str.2, i32 1079, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"--> %s\0A\00", [24 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"pnfs_alloc_init_layoutget_args\00", [33 x i8] zeroinitializer }, align 32
@pnfs_alloc_init_layoutget_args._entry_ptr = internal global ptr @pnfs_alloc_init_layoutget_args._entry, section ".printk_index", align 4
@nfs4_alloc_pages._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.153, ptr @.str.154, ptr @.str.2, i32 1051, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"%s: can't alloc array of %zu pages\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"nfs4_alloc_pages\00", [47 x i8] zeroinitializer }, align 32
@nfs4_alloc_pages._entry_ptr = internal global ptr @nfs4_alloc_pages._entry, section ".printk_index", align 4
@nfs4_alloc_pages._entry.155 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.156, ptr @.str.154, ptr @.str.2, i32 1058, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"%s: failed to allocate page\0A\00", [35 x i8] zeroinitializer }, align 32
@nfs4_alloc_pages._entry_ptr.157 = internal global ptr @nfs4_alloc_pages._entry.155, section ".printk_index", align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@current_stateid = external dso_local constant %struct.nfs4_stateid_struct, align 4
@pnfs_layout_return_unused_byserver.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@pnfs_should_return_unused_layout.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_nfs4_pnfs_write = external dso_local global %struct.tracepoint, align 4
@trace_nfs4_pnfs_write.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@pnfs_ld_handle_write_error._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.159, ptr @.str.160, ptr @.str.2, i32 2811, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"pnfs write error = %d\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"pnfs_ld_handle_write_error\00", [37 x i8] zeroinitializer }, align 32
@pnfs_ld_handle_write_error._entry_ptr = internal global ptr @pnfs_ld_handle_write_error._entry, section ".printk_index", align 4
@pnfs_try_to_write_data._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.161, ptr @.str.162, ptr @.str.2, i32 2864, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"%s: Writing ino:%lu %u@%llu (how %d)\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"pnfs_try_to_write_data\00", [41 x i8] zeroinitializer }, align 32
@pnfs_try_to_write_data._entry_ptr = internal global ptr @pnfs_try_to_write_data._entry, section ".printk_index", align 4
@pnfs_try_to_write_data._entry.163 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.164, ptr @.str.162, ptr @.str.2, i32 2868, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"%s End (trypnfs:%d)\0A\00", [43 x i8] zeroinitializer }, align 32
@pnfs_try_to_write_data._entry_ptr.165 = internal global ptr @pnfs_try_to_write_data._entry.163, section ".printk_index", align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@__tracepoint_nfs4_pnfs_read = external dso_local global %struct.tracepoint, align 4
@trace_nfs4_pnfs_read.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@pnfs_ld_handle_read_error._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.166, ptr @.str.167, ptr @.str.2, i32 2938, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"pnfs read error = %d\0A\00", [42 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"pnfs_ld_handle_read_error\00", [38 x i8] zeroinitializer }, align 32
@pnfs_ld_handle_read_error._entry_ptr = internal global ptr @pnfs_ld_handle_read_error._entry, section ".printk_index", align 4
@pnfs_try_to_read_data._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.168, ptr @.str.169, ptr @.str.2, i32 2990, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"%s: Reading ino:%lu %u@%llu\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"pnfs_try_to_read_data\00", [42 x i8] zeroinitializer }, align 32
@pnfs_try_to_read_data._entry_ptr = internal global ptr @pnfs_try_to_read_data._entry, section ".printk_index", align 4
@pnfs_try_to_read_data._entry.170 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.164, ptr @.str.169, ptr @.str.2, i32 2995, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@pnfs_try_to_read_data._entry_ptr.171 = internal global ptr @pnfs_try_to_read_data._entry.170, section ".printk_index", align 4
@pnfs_layout_io_set_failed._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.172, ptr @.str.173, ptr @.str.2, i32 506, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"%s Setting layout IOMODE_%s fail bit\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"pnfs_layout_io_set_failed\00", [38 x i8] zeroinitializer }, align 32
@pnfs_layout_io_set_failed._entry_ptr = internal global ptr @pnfs_layout_io_set_failed._entry, section ".printk_index", align 4
@.str.174 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"RW\00", [29 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"READ\00", [27 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 4294957236, i64 4294957272, i64 4294957288]
@__sancov_gen_cov_switch_values.176 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294957236]
@__sancov_gen_cov_switch_values.177 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.178 = internal global [5 x i64] [i64 3, i64 32, i64 4294966766, i64 4294967280, i64 4294967285]
@__sancov_gen_cov_switch_values.179 = internal global [14 x i64] [i64 12, i64 32, i64 4294966784, i64 4294967174, i64 4294967180, i64 4294967186, i64 4294967266, i64 4294967268, i64 4294967269, i64 4294967283, i64 4294967284, i64 4294967289, i64 4294967291, i64 4294967292]
@__sancov_gen_cov_switch_values.180 = internal global [10 x i64] [i64 8, i64 32, i64 0, i64 4294957226, i64 4294957229, i64 4294957230, i64 4294957231, i64 4294957234, i64 4294957271, i64 4294957292]
@__sancov_gen_cov_switch_values.181 = internal global [4 x i64] [i64 2, i64 64, i64 0, i64 -1]
@__sancov_gen_cov_switch_values.182 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.183 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.184 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@___asan_gen_.196 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 160, i32 3 }
@___asan_gen_.202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 172, i32 4 }
@___asan_gen_.208 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 181, i32 3 }
@___asan_gen_.214 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 188, i32 3 }
@___asan_gen_.220 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 196, i32 2 }
@___asan_gen_.226 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 200, i32 2 }
@___asan_gen_.235 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 211, i32 3 }
@___asan_gen_.241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 215, i32 3 }
@___asan_gen_.242 = private unnamed_addr constant [14 x i8] c"pnfs_spinlock\00", align 1
@___asan_gen_.245 = private unnamed_addr constant [17 x i8] c"pnfs_modules_tbl\00", align 1
@___asan_gen_.247 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 55, i32 8 }
@___asan_gen_.253 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 225, i32 3 }
@___asan_gen_.259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 228, i32 3 }
@___asan_gen_.268 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 240, i32 2 }
@___asan_gen_.271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 306, i32 4 }
@___asan_gen_.280 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 591, i32 2 }
@___asan_gen_.289 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 703, i32 2 }
@___asan_gen_.295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 709, i32 4 }
@___asan_gen_.301 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 716, i32 2 }
@___asan_gen_.304 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 900, i32 2 }
@___asan_gen_.313 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1330, i32 2 }
@___asan_gen_.319 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1336, i32 3 }
@___asan_gen_.325 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1360, i32 3 }
@___asan_gen_.331 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1374, i32 2 }
@___asan_gen_.340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1657, i32 2 }
@___asan_gen_.346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1669, i32 3 }
@___asan_gen_.352 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1679, i32 2 }
@___asan_gen_.358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1686, i32 2 }
@___asan_gen_.367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 2001, i32 3 }
@___asan_gen_.373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 2033, i32 3 }
@___asan_gen_.379 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 2037, i32 4 }
@___asan_gen_.382 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 2076, i32 4 }
@___asan_gen_.400 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 2168, i32 2 }
@___asan_gen_.409 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 2316, i32 2 }
@___asan_gen_.418 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 2384, i32 3 }
@___asan_gen_.424 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 2393, i32 3 }
@___asan_gen_.430 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 2405, i32 4 }
@___asan_gen_.436 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 2468, i32 2 }
@___asan_gen_.442 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 2477, i32 4 }
@___asan_gen_.451 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 3122, i32 3 }
@___asan_gen_.457 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 3131, i32 2 }
@___asan_gen_.466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 3170, i32 2 }
@___asan_gen_.472 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 3231, i32 2 }
@___asan_gen_.481 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 3255, i32 3 }
@___asan_gen_.490 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 3305, i32 2 }
@___asan_gen_.491 = private unnamed_addr constant [18 x i8] c"layoutstats_timer\00", align 1
@___asan_gen_.493 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 3321, i32 14 }
@___asan_gen_.502 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 88, i32 3 }
@___asan_gen_.505 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 50, i32 8 }
@___asan_gen_.514 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 76, i32 2 }
@___asan_gen_.523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 286, i32 2 }
@___asan_gen_.532 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 650, i32 3 }
@___asan_gen_.538 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.540, i32 695, i32 2 }
@___asan_gen_.540 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.541 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.540, i32 723, i32 2 }
@___asan_gen_.550 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 866, i32 3 }
@___asan_gen_.552 = private unnamed_addr constant [28 x i8] c"../include/linux/wait_bit.h\00", align 1
@___asan_gen_.553 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.552, i32 73, i32 2 }
@___asan_gen_.559 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1256, i32 2 }
@___asan_gen_.561 = private unnamed_addr constant [24 x i8] c"../include/linux/cred.h\00", align 1
@___asan_gen_.562 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.561, i32 286, i32 3 }
@___asan_gen_.567 = private unnamed_addr constant [22 x i8] c"../fs/nfs/nfs4trace.h\00", align 1
@___asan_gen_.568 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.567, i32 1752, i32 1 }
@___asan_gen_.570 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.571 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.570, i32 108, i32 2 }
@___asan_gen_.580 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1845, i32 2 }
@___asan_gen_.586 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1851, i32 4 }
@___asan_gen_.592 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1857, i32 4 }
@___asan_gen_.595 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1866, i32 4 }
@___asan_gen_.601 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1872, i32 4 }
@___asan_gen_.607 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1886, i32 2 }
@___asan_gen_.616 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1738, i32 2 }
@___asan_gen_.622 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1799, i32 2 }
@___asan_gen_.628 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1810, i32 2 }
@___asan_gen_.637 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1079, i32 2 }
@___asan_gen_.646 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1051, i32 3 }
@___asan_gen_.652 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 1058, i32 4 }
@___asan_gen_.661 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 2811, i32 2 }
@___asan_gen_.670 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 2863, i32 2 }
@___asan_gen_.676 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 2868, i32 2 }
@___asan_gen_.685 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 2938, i32 2 }
@___asan_gen_.694 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 2989, i32 2 }
@___asan_gen_.697 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 2995, i32 2 }
@___asan_gen_.698 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.710 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.711 = private constant [17 x i8] c"../fs/nfs/pnfs.c\00", align 1
@___asan_gen_.712 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 505, i32 2 }
@llvm.compiler.used = appending global [268 x ptr] [ptr @__UNIQUE_ID_layoutstats_timertype707, ptr @__ksymtab_layoutstats_timer, ptr @__ksymtab_pnfs_destroy_layout, ptr @__ksymtab_pnfs_error_mark_layout_for_return, ptr @__ksymtab_pnfs_generic_layout_insert_lseg, ptr @__ksymtab_pnfs_generic_pg_check_layout, ptr @__ksymtab_pnfs_generic_pg_check_range, ptr @__ksymtab_pnfs_generic_pg_cleanup, ptr @__ksymtab_pnfs_generic_pg_init_read, ptr @__ksymtab_pnfs_generic_pg_init_write, ptr @__ksymtab_pnfs_generic_pg_readpages, ptr @__ksymtab_pnfs_generic_pg_test, ptr @__ksymtab_pnfs_generic_pg_writepages, ptr @__ksymtab_pnfs_generic_sync, ptr @__ksymtab_pnfs_layoutcommit_inode, ptr @__ksymtab_pnfs_ld_read_done, ptr @__ksymtab_pnfs_ld_write_done, ptr @__ksymtab_pnfs_put_lseg, ptr @__ksymtab_pnfs_read_done_resend_to_mds, ptr @__ksymtab_pnfs_read_resend_pnfs, ptr @__ksymtab_pnfs_register_layoutdriver, ptr @__ksymtab_pnfs_report_layoutstat, ptr @__ksymtab_pnfs_set_layoutcommit, ptr @__ksymtab_pnfs_set_lo_fail, ptr @__ksymtab_pnfs_unregister_layoutdriver, ptr @__ksymtab_pnfs_update_layout, ptr @__ksymtab_pnfs_write_done_resend_to_mds, ptr @__param_layoutstats_timer, ptr @_pnfs_return_layout._entry, ptr @_pnfs_return_layout._entry.44, ptr @_pnfs_return_layout._entry.47, ptr @_pnfs_return_layout._entry.50, ptr @_pnfs_return_layout._entry_ptr, ptr @_pnfs_return_layout._entry_ptr.46, ptr @_pnfs_return_layout._entry_ptr.49, ptr @_pnfs_return_layout._entry_ptr.52, ptr @find_pnfs_driver._entry, ptr @find_pnfs_driver._entry_ptr, ptr @find_pnfs_driver_locked._entry, ptr @find_pnfs_driver_locked._entry_ptr, ptr @mark_lseg_invalid._entry, ptr @mark_lseg_invalid._entry_ptr, ptr @nfs4_alloc_pages._entry, ptr @nfs4_alloc_pages._entry.155, ptr @nfs4_alloc_pages._entry_ptr, ptr @nfs4_alloc_pages._entry_ptr.157, ptr @pnfs_alloc_init_layoutget_args._entry, ptr @pnfs_alloc_init_layoutget_args._entry_ptr, ptr @pnfs_detach_layout_hdr._entry, ptr @pnfs_detach_layout_hdr._entry_ptr, ptr @pnfs_find_alloc_layout._entry, ptr @pnfs_find_alloc_layout._entry_ptr, ptr @pnfs_find_lseg._entry, ptr @pnfs_find_lseg._entry.148, ptr @pnfs_find_lseg._entry_ptr, ptr @pnfs_find_lseg._entry_ptr.150, ptr @pnfs_generic_layout_insert_lseg._entry, ptr @pnfs_generic_layout_insert_lseg._entry.55, ptr @pnfs_generic_layout_insert_lseg._entry.58, ptr @pnfs_generic_layout_insert_lseg._entry.61, ptr @pnfs_generic_layout_insert_lseg._entry_ptr, ptr @pnfs_generic_layout_insert_lseg._entry_ptr.57, ptr @pnfs_generic_layout_insert_lseg._entry_ptr.60, ptr @pnfs_generic_layout_insert_lseg._entry_ptr.63, ptr @pnfs_layout_free_bulk_destroy_list._entry, ptr @pnfs_layout_free_bulk_destroy_list._entry_ptr, ptr @pnfs_layout_io_set_failed._entry, ptr @pnfs_layout_io_set_failed._entry_ptr, ptr @pnfs_layout_process._entry, ptr @pnfs_layout_process._entry.85, ptr @pnfs_layout_process._entry.88, ptr @pnfs_layout_process._entry_ptr, ptr @pnfs_layout_process._entry_ptr.87, ptr @pnfs_layout_process._entry_ptr.90, ptr @pnfs_layoutcommit_inode._entry, ptr @pnfs_layoutcommit_inode._entry.102, ptr @pnfs_layoutcommit_inode._entry_ptr, ptr @pnfs_layoutcommit_inode._entry_ptr.104, ptr @pnfs_ld_handle_read_error._entry, ptr @pnfs_ld_handle_read_error._entry_ptr, ptr @pnfs_ld_handle_write_error._entry, ptr @pnfs_ld_handle_write_error._entry_ptr, ptr @pnfs_mark_matching_lsegs_invalid._entry, ptr @pnfs_mark_matching_lsegs_invalid._entry.35, ptr @pnfs_mark_matching_lsegs_invalid._entry.38, ptr @pnfs_mark_matching_lsegs_invalid._entry_ptr, ptr @pnfs_mark_matching_lsegs_invalid._entry_ptr.37, ptr @pnfs_mark_matching_lsegs_invalid._entry_ptr.40, ptr @pnfs_mark_matching_lsegs_return._entry, ptr @pnfs_mark_matching_lsegs_return._entry.92, ptr @pnfs_mark_matching_lsegs_return._entry_ptr, ptr @pnfs_mark_matching_lsegs_return._entry_ptr.94, ptr @pnfs_mdsthreshold_alloc._entry, ptr @pnfs_mdsthreshold_alloc._entry_ptr, ptr @pnfs_parse_lgopen._entry, ptr @pnfs_parse_lgopen._entry_ptr, ptr @pnfs_put_lseg._entry, ptr @pnfs_put_lseg._entry_ptr, ptr @pnfs_register_layoutdriver._entry, ptr @pnfs_register_layoutdriver._entry.19, ptr @pnfs_register_layoutdriver._entry.22, ptr @pnfs_register_layoutdriver._entry.25, ptr @pnfs_register_layoutdriver._entry_ptr, ptr @pnfs_register_layoutdriver._entry_ptr.21, ptr @pnfs_register_layoutdriver._entry_ptr.24, ptr @pnfs_register_layoutdriver._entry_ptr.27, ptr @pnfs_report_layoutstat._entry, ptr @pnfs_report_layoutstat._entry_ptr, ptr @pnfs_send_layoutreturn._entry, ptr @pnfs_send_layoutreturn._entry_ptr, ptr @pnfs_set_layoutcommit._entry, ptr @pnfs_set_layoutcommit._entry.97, ptr @pnfs_set_layoutcommit._entry_ptr, ptr @pnfs_set_layoutcommit._entry_ptr.99, ptr @pnfs_try_to_read_data._entry, ptr @pnfs_try_to_read_data._entry.170, ptr @pnfs_try_to_read_data._entry_ptr, ptr @pnfs_try_to_read_data._entry_ptr.171, ptr @pnfs_try_to_write_data._entry, ptr @pnfs_try_to_write_data._entry.163, ptr @pnfs_try_to_write_data._entry_ptr, ptr @pnfs_try_to_write_data._entry_ptr.165, ptr @pnfs_unregister_layoutdriver._entry, ptr @pnfs_unregister_layoutdriver._entry_ptr, ptr @pnfs_update_layout._entry, ptr @pnfs_update_layout._entry.66, ptr @pnfs_update_layout._entry.69, ptr @pnfs_update_layout._entry.72, ptr @pnfs_update_layout._entry.74, ptr @pnfs_update_layout._entry_ptr, ptr @pnfs_update_layout._entry_ptr.68, ptr @pnfs_update_layout._entry_ptr.71, ptr @pnfs_update_layout._entry_ptr.73, ptr @pnfs_update_layout._entry_ptr.76, ptr @pnfs_within_mdsthreshold._entry, ptr @pnfs_within_mdsthreshold._entry.131, ptr @pnfs_within_mdsthreshold._entry.134, ptr @pnfs_within_mdsthreshold._entry.137, ptr @pnfs_within_mdsthreshold._entry.139, ptr @pnfs_within_mdsthreshold._entry.142, ptr @pnfs_within_mdsthreshold._entry_ptr, ptr @pnfs_within_mdsthreshold._entry_ptr.133, ptr @pnfs_within_mdsthreshold._entry_ptr.136, ptr @pnfs_within_mdsthreshold._entry_ptr.138, ptr @pnfs_within_mdsthreshold._entry_ptr.141, ptr @pnfs_within_mdsthreshold._entry_ptr.144, ptr @set_pnfs_layoutdriver._entry, ptr @set_pnfs_layoutdriver._entry.11, ptr @set_pnfs_layoutdriver._entry.14, ptr @set_pnfs_layoutdriver._entry.5, ptr @set_pnfs_layoutdriver._entry.8, ptr @set_pnfs_layoutdriver._entry_ptr, ptr @set_pnfs_layoutdriver._entry_ptr.10, ptr @set_pnfs_layoutdriver._entry_ptr.13, ptr @set_pnfs_layoutdriver._entry_ptr.16, ptr @set_pnfs_layoutdriver._entry_ptr.7, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.6, ptr @.str.9, ptr @.str.12, ptr @.str.15, ptr @.str.17, ptr @.str.18, ptr @.str.20, ptr @pnfs_spinlock, ptr @pnfs_modules_tbl, ptr @.str.23, ptr @.str.26, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.36, ptr @.str.39, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.45, ptr @.str.48, ptr @.str.51, ptr @.str.53, ptr @.str.54, ptr @.str.56, ptr @.str.59, ptr @.str.62, ptr @.str.64, ptr @.str.65, ptr @.str.67, ptr @.str.70, ptr @.str.75, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.86, ptr @.str.89, ptr @.str.91, ptr @.str.93, ptr @.str.95, ptr @.str.96, ptr @.str.98, ptr @.str.100, ptr @.str.101, ptr @.str.103, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @layoutstats_timer, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.132, ptr @.str.135, ptr @.str.140, ptr @.str.143, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.149, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.156, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.164, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175], section "llvm.metadata"
@0 = internal global [176 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_pnfs_layoutdriver._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_pnfs_layoutdriver._entry.5 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_pnfs_layoutdriver._entry.8 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 54, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_pnfs_layoutdriver._entry.11 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @set_pnfs_layoutdriver._entry.14 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_register_layoutdriver._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_register_layoutdriver._entry.19 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_spinlock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.242 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_modules_tbl to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.245 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_register_layoutdriver._entry.22 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_register_layoutdriver._entry.25 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_unregister_layoutdriver._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_put_lseg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_mark_matching_lsegs_invalid._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_mark_matching_lsegs_invalid._entry.35 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_mark_matching_lsegs_invalid._entry.38 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.301 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.301 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.304 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_pnfs_return_layout._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_pnfs_return_layout._entry.44 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_pnfs_return_layout._entry.47 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @_pnfs_return_layout._entry.50 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_generic_layout_insert_lseg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_generic_layout_insert_lseg._entry.55 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 103, i32 160, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_generic_layout_insert_lseg._entry.58 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_generic_layout_insert_lseg._entry.61 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_update_layout._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_update_layout._entry.66 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_update_layout._entry.69 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_update_layout._entry.72 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_update_layout._entry.74 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 79, i32 128, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_parse_lgopen._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_layout_process._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_layout_process._entry.85 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_layout_process._entry.88 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.430 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.430 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_mark_matching_lsegs_return._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_mark_matching_lsegs_return._entry.92 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_set_layoutcommit._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_set_layoutcommit._entry.97 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_layoutcommit_inode._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_layoutcommit_inode._entry.102 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_mdsthreshold_alloc._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.481 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_report_layoutstat._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @layoutstats_timer to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @find_pnfs_driver._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @find_pnfs_driver_locked._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_detach_layout_hdr._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @mark_lseg_invalid._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_layout_free_bulk_destroy_list._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_send_layoutreturn._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_within_mdsthreshold._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_within_mdsthreshold._entry.131 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_within_mdsthreshold._entry.134 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_within_mdsthreshold._entry.137 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.595 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_within_mdsthreshold._entry.139 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_within_mdsthreshold._entry.142 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_find_alloc_layout._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_find_lseg._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.622 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.622 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_find_lseg._entry.148 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_alloc_init_layoutget_args._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nfs4_alloc_pages._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nfs4_alloc_pages._entry.155 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_ld_handle_write_error._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_try_to_write_data._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_try_to_write_data._entry.163 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_ld_handle_read_error._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_try_to_read_data._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_try_to_read_data._entry.170 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pnfs_layout_io_set_failed._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.698 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.710 to i32), i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @unset_pnfs_layoutdriver(ptr noundef %nfss) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pnfs_curr_ld = getelementptr inbounds %struct.nfs_server, ptr %nfss, i32 0, i32 46
  %0 = ptrtoint ptr %pnfs_curr_ld to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pnfs_curr_ld, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end11_crit_edge, label %if.then

entry.if.end11_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

if.then:                                          ; preds = %entry
  %clear_layoutdriver = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %clear_layoutdriver to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %clear_layoutdriver, align 4
  %tobool2.not = icmp eq ptr %3, null
  br i1 %tobool2.not, label %if.then.if.end_crit_edge, label %if.then3

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then3:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call i32 %3(ptr noundef %nfss) #16
  br label %if.end

if.end:                                           ; preds = %if.then3, %if.then.if.end_crit_edge
  %4 = ptrtoint ptr %nfss to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nfss, align 8
  %cl_mds_count = getelementptr inbounds %struct.nfs_client, ptr %5, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %cl_mds_count, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !410
  tail call void @llvm.prefetch.p0(ptr %cl_mds_count, i32 1, i32 3, i32 1) #16
  %6 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %cl_mds_count, ptr %cl_mds_count, i32 1, ptr elementtype(i32) %cl_mds_count) #16, !srcloc !411
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %6, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !412
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i, label %if.then7, label %if.end.if.end9_crit_edge

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

if.then7:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %7 = ptrtoint ptr %nfss to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %nfss, align 8
  tail call void @nfs4_deviceid_purge_client(ptr noundef %8) #16
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %if.end.if.end9_crit_edge
  %9 = ptrtoint ptr %pnfs_curr_ld to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pnfs_curr_ld, align 4
  %owner = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %owner, align 4
  tail call void @module_put(ptr noundef %12) #16
  br label %if.end11

if.end11:                                         ; preds = %if.end9, %entry.if.end11_crit_edge
  %13 = ptrtoint ptr %pnfs_curr_ld to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %pnfs_curr_ld, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @nfs4_deviceid_purge_client(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @module_put(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @set_pnfs_layoutdriver(ptr noundef %server, ptr noundef %mntfh, ptr noundef %fsinfo) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %nlayouttypes = getelementptr inbounds %struct.nfs_fsinfo, ptr %fsinfo, i32 0, i32 11
  %0 = ptrtoint ptr %nlayouttypes to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nlayouttypes, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %entry.do.body65_crit_edge, label %if.end

entry.do.body65_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body65

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %server to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %server, align 8
  %cl_exchange_flags = getelementptr inbounds %struct.nfs_client, ptr %3, i32 0, i32 35
  %4 = ptrtoint ptr %cl_exchange_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cl_exchange_flags, align 8
  %and = and i32 %5, 196608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.end, label %if.end4

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, i32 noundef %5) #19
  br label %do.body65

if.end4:                                          ; preds = %if.end
  %layouttype = getelementptr inbounds %struct.nfs_fsinfo, ptr %fsinfo, i32 0, i32 12
  tail call void @sort(ptr noundef %layouttype, i32 noundef %1, i32 noundef 4, ptr noundef nonnull @ld_cmp, ptr noundef null) #16
  %6 = ptrtoint ptr %nlayouttypes to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nlayouttypes, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp7116.not = icmp eq i32 %7, 0
  br i1 %cmp7116.not, label %if.end4.do.body20_crit_edge, label %if.end4.for.body_crit_edge

if.end4.for.body_crit_edge:                       ; preds = %if.end4
  br label %for.body

if.end4.do.body20_crit_edge:                      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body20

for.cond:                                         ; preds = %if.end14
  %inc = add nuw i32 %i.0117, 1
  %8 = ptrtoint ptr %nlayouttypes to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %nlayouttypes, align 4
  %cmp7 = icmp ult i32 %inc, %9
  br i1 %cmp7, label %for.cond.for.body_crit_edge, label %for.cond.do.body20_crit_edge

for.cond.do.body20_crit_edge:                     ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body20

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %if.end4.for.body_crit_edge
  %i.0117 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %if.end4.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.nfs_fsinfo, ptr %fsinfo, i32 0, i32 12, i32 %i.0117
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %arrayidx, align 4
  %call9 = tail call fastcc ptr @find_pnfs_driver(i32 noundef %11)
  %tobool10.not = icmp eq ptr %call9, null
  br i1 %tobool10.not, label %if.end14, label %for.body.if.end34_crit_edge

for.body.if.end34_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end34

if.end14:                                         ; preds = %for.body
  %call12 = tail call i32 (i1, ptr, ...) @__request_module(i1 noundef zeroext true, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.4, i32 noundef %11) #16
  %call13 = tail call fastcc ptr @find_pnfs_driver(i32 noundef %11)
  %tobool15.not = icmp eq ptr %call13, null
  br i1 %tobool15.not, label %for.cond, label %if.end14.if.end34_crit_edge

if.end14.if.end34_crit_edge:                      ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end34

do.body20:                                        ; preds = %for.cond.do.body20_crit_edge, %if.end4.do.body20_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %12 = load i32, ptr @nfs_debug, align 4
  %and21 = and i32 %12, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and21)
  %tobool22.not = icmp eq i32 %and21, 0
  br i1 %tobool22.not, label %do.body20.do.body65_crit_edge, label %do.end28, !prof !413

do.body20.do.body65_crit_edge:                    ; preds = %do.body20
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body65

do.end28:                                         ; preds = %do.body20
  call void @__sanitizer_cov_trace_pc() #18
  %call30 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.6, ptr noundef nonnull @.str.1) #19
  br label %do.body65

if.end34:                                         ; preds = %if.end14.if.end34_crit_edge, %for.body.if.end34_crit_edge
  %ld_type.2.ph = phi ptr [ %call13, %if.end14.if.end34_crit_edge ], [ %call9, %for.body.if.end34_crit_edge ]
  %pnfs_curr_ld = getelementptr inbounds %struct.nfs_server, ptr %server, i32 0, i32 46
  %13 = ptrtoint ptr %pnfs_curr_ld to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %ld_type.2.ph, ptr %pnfs_curr_ld, align 4
  %set_layoutdriver = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %ld_type.2.ph, i32 0, i32 7
  %14 = ptrtoint ptr %set_layoutdriver to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %set_layoutdriver, align 4
  %tobool35.not = icmp eq ptr %15, null
  br i1 %tobool35.not, label %if.end34.if.end45_crit_edge, label %land.lhs.true

if.end34.if.end45_crit_edge:                      ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end45

land.lhs.true:                                    ; preds = %if.end34
  %call37 = tail call i32 %15(ptr noundef %server, ptr noundef %mntfh) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37)
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %land.lhs.true.if.end45_crit_edge, label %do.end42

land.lhs.true.if.end45_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end45

do.end42:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %call44 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.9, ptr noundef nonnull @.str.1, i32 noundef %11) #19
  %owner = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %ld_type.2.ph, i32 0, i32 3
  %16 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %owner, align 4
  tail call void @module_put(ptr noundef %17) #16
  br label %do.body65

if.end45:                                         ; preds = %land.lhs.true.if.end45_crit_edge, %if.end34.if.end45_crit_edge
  %18 = ptrtoint ptr %server to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %server, align 8
  %cl_mds_count = getelementptr inbounds %struct.nfs_client, ptr %19, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %cl_mds_count, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %cl_mds_count, i32 1, i32 3, i32 1) #16
  %20 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %cl_mds_count, ptr %cl_mds_count, i32 1, ptr elementtype(i32) %cl_mds_count) #16, !srcloc !414
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %21 = load i32, ptr @nfs_debug, align 4
  %and48 = and i32 %21, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and48)
  %tobool49.not = icmp eq i32 %and48, 0
  br i1 %tobool49.not, label %if.end45.cleanup_crit_edge, label %do.end59, !prof !413

if.end45.cleanup_crit_edge:                       ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end59:                                         ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #18
  %call61 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.12, ptr noundef nonnull @.str.1, i32 noundef %11) #19
  br label %cleanup

do.body65:                                        ; preds = %do.end42, %do.end28, %do.body20.do.body65_crit_edge, %do.end, %entry.do.body65_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %22 = load i32, ptr @nfs_debug, align 4
  %and66 = and i32 %22, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and66)
  %tobool67.not = icmp eq i32 %and66, 0
  br i1 %tobool67.not, label %do.body65.do.end82_crit_edge, label %do.end77, !prof !413

do.body65.do.end82_crit_edge:                     ; preds = %do.body65
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end82

do.end77:                                         ; preds = %do.body65
  call void @__sanitizer_cov_trace_pc() #18
  %call79 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.15, ptr noundef nonnull @.str.1) #19
  br label %do.end82

do.end82:                                         ; preds = %do.end77, %do.body65.do.end82_crit_edge
  %pnfs_curr_ld83 = getelementptr inbounds %struct.nfs_server, ptr %server, i32 0, i32 46
  %23 = ptrtoint ptr %pnfs_curr_ld83 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %pnfs_curr_ld83, align 4
  br label %cleanup

cleanup:                                          ; preds = %do.end82, %do.end59, %if.end45.cleanup_crit_edge
  ret void
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #3

; Function Attrs: null_pointer_is_valid
declare dso_local void @sort(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: argmemonly nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define internal i32 @ld_cmp(ptr nocapture noundef readonly %e1, ptr nocapture noundef readonly %e2) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %e1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %e1, align 4
  %2 = ptrtoint ptr %e2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %e2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %1)
  %cmp2 = icmp eq i32 %1, 5
  br i1 %cmp2, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %1)
  %cmp2.1 = icmp eq i32 %1, 3
  br i1 %cmp2.1, label %for.cond.cleanup_crit_edge, label %if.end.1

for.cond.cleanup_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.1:                                         ; preds = %for.cond
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %3)
  %cmp4.1 = icmp eq i32 %3, 3
  br i1 %cmp4.1, label %if.end.1.cleanup_crit_edge, label %for.cond.1

if.end.1.cleanup_crit_edge:                       ; preds = %if.end.1
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond.1:                                       ; preds = %if.end.1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %cmp2.2 = icmp eq i32 %1, 2
  br i1 %cmp2.2, label %for.cond.1.cleanup_crit_edge, label %if.end.2

for.cond.1.cleanup_crit_edge:                     ; preds = %for.cond.1
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.2:                                         ; preds = %for.cond.1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %3)
  %cmp4.2 = icmp eq i32 %3, 2
  br i1 %cmp4.2, label %if.end.2.cleanup_crit_edge, label %for.cond.2

if.end.2.cleanup_crit_edge:                       ; preds = %if.end.2
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond.2:                                       ; preds = %if.end.2
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %1)
  %cmp2.3 = icmp eq i32 %1, 4
  br i1 %cmp2.3, label %for.cond.2.cleanup_crit_edge, label %if.end.3

for.cond.2.cleanup_crit_edge:                     ; preds = %for.cond.2
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.3:                                         ; preds = %for.cond.2
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %3)
  %cmp4.3 = icmp eq i32 %3, 4
  br i1 %cmp4.3, label %if.end.3.cleanup_crit_edge, label %for.cond.3

if.end.3.cleanup_crit_edge:                       ; preds = %if.end.3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond.3:                                       ; preds = %if.end.3
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp2.4 = icmp eq i32 %1, 1
  br i1 %cmp2.4, label %for.cond.3.cleanup_crit_edge, label %if.end.4

for.cond.3.cleanup_crit_edge:                     ; preds = %for.cond.3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.4:                                         ; preds = %for.cond.3
  call void @__sanitizer_cov_trace_pc() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %3)
  %cmp4.4 = icmp eq i32 %3, 1
  %spec.select = zext i1 %cmp4.4 to i32
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %3)
  %cmp4 = icmp eq i32 %3, 5
  br i1 %cmp4, label %if.end.cleanup_crit_edge, label %for.cond

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %if.end.cleanup_crit_edge, %if.end.4, %for.cond.3.cleanup_crit_edge, %if.end.3.cleanup_crit_edge, %for.cond.2.cleanup_crit_edge, %if.end.2.cleanup_crit_edge, %for.cond.1.cleanup_crit_edge, %if.end.1.cleanup_crit_edge, %for.cond.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -1, %entry.cleanup_crit_edge ], [ 1, %if.end.cleanup_crit_edge ], [ -1, %for.cond.cleanup_crit_edge ], [ 1, %if.end.1.cleanup_crit_edge ], [ -1, %for.cond.1.cleanup_crit_edge ], [ 1, %if.end.2.cleanup_crit_edge ], [ -1, %for.cond.2.cleanup_crit_edge ], [ 1, %if.end.3.cleanup_crit_edge ], [ -1, %for.cond.3.cleanup_crit_edge ], [ %spec.select, %if.end.4 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @find_pnfs_driver(i32 noundef %id) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_spin_lock(ptr noundef nonnull @pnfs_spinlock) #16
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %entry
  %local.0.in.i = phi ptr [ @pnfs_modules_tbl, %entry ], [ %local.0.i, %for.body.i.for.cond.i_crit_edge ]
  %0 = ptrtoint ptr %local.0.in.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %local.0.i = load ptr, ptr %local.0.in.i, align 4
  %cmp.not.i = icmp eq ptr %local.0.i, @pnfs_modules_tbl
  br i1 %cmp.not.i, label %for.cond.i.do.body.i_crit_edge, label %for.body.i

for.cond.i.do.body.i_crit_edge:                   ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i

for.body.i:                                       ; preds = %for.cond.i
  %id1.i = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %local.0.i, i32 0, i32 1
  %1 = ptrtoint ptr %id1.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %id1.i, align 4
  %cmp2.i = icmp eq i32 %2, %id
  br i1 %cmp2.i, label %for.body.i.do.body.i_crit_edge, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i

for.body.i.do.body.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i

do.body.i:                                        ; preds = %for.body.i.do.body.i_crit_edge, %for.cond.i.do.body.i_crit_edge
  %local.1.i = phi ptr [ %local.0.i, %for.body.i.do.body.i_crit_edge ], [ null, %for.cond.i.do.body.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %3 = load i32, ptr @nfs_debug, align 4
  %and.i = and i32 %3, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.body.i.find_pnfs_driver_locked.exit_crit_edge, label %do.end.i, !prof !413

do.body.i.find_pnfs_driver_locked.exit_crit_edge: ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %find_pnfs_driver_locked.exit

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.112, ptr noundef nonnull @.str.113, i32 noundef %id, ptr noundef %local.1.i) #19
  br label %find_pnfs_driver_locked.exit

find_pnfs_driver_locked.exit:                     ; preds = %do.end.i, %do.body.i.find_pnfs_driver_locked.exit_crit_edge
  %cmp.not = icmp eq ptr %local.1.i, null
  br i1 %cmp.not, label %find_pnfs_driver_locked.exit.if.end9_crit_edge, label %land.lhs.true

find_pnfs_driver_locked.exit.if.end9_crit_edge:   ; preds = %find_pnfs_driver_locked.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

land.lhs.true:                                    ; preds = %find_pnfs_driver_locked.exit
  %owner = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %local.1.i, i32 0, i32 3
  %4 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %owner, align 4
  %call1 = tail call zeroext i1 @try_module_get(ptr noundef %5) #16
  br i1 %call1, label %land.lhs.true.if.end9_crit_edge, label %do.body

land.lhs.true.if.end9_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

do.body:                                          ; preds = %land.lhs.true
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %6 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %6, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.body.if.end9_crit_edge, label %do.end, !prof !413

do.body.if.end9_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

do.end:                                           ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.109, ptr noundef nonnull @.str.110) #19
  br label %if.end9

if.end9:                                          ; preds = %do.end, %do.body.if.end9_crit_edge, %land.lhs.true.if.end9_crit_edge, %find_pnfs_driver_locked.exit.if.end9_crit_edge
  %local.0 = phi ptr [ %local.1.i, %land.lhs.true.if.end9_crit_edge ], [ null, %find_pnfs_driver_locked.exit.if.end9_crit_edge ], [ null, %do.end ], [ null, %do.body.if.end9_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef nonnull @pnfs_spinlock) #16
  ret ptr %local.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__request_module(i1 noundef zeroext, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pnfs_register_layoutdriver(ptr noundef %ld_type) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %id = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %ld_type, i32 0, i32 1
  %0 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %do.end, label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18) #19
  br label %cleanup

if.end:                                           ; preds = %entry
  %alloc_lseg = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %ld_type, i32 0, i32 11
  %2 = ptrtoint ptr %alloc_lseg to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %alloc_lseg, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %if.end.do.end6_crit_edge, label %lor.lhs.false

if.end.do.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end6

lor.lhs.false:                                    ; preds = %if.end
  %free_lseg = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %ld_type, i32 0, i32 12
  %4 = ptrtoint ptr %free_lseg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %free_lseg, align 4
  %tobool2.not = icmp eq ptr %5, null
  br i1 %tobool2.not, label %lor.lhs.false.do.end6_crit_edge, label %if.end9

lor.lhs.false.do.end6_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end6

do.end6:                                          ; preds = %lor.lhs.false.do.end6_crit_edge, %if.end.do.end6_crit_edge
  %call8 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.20, ptr noundef nonnull @.str.18) #19
  br label %cleanup

if.end9:                                          ; preds = %lor.lhs.false
  tail call void @_raw_spin_lock(ptr noundef nonnull @pnfs_spinlock) #16
  %6 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %id, align 4
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %if.end9
  %local.0.in.i = phi ptr [ @pnfs_modules_tbl, %if.end9 ], [ %local.0.i, %for.body.i.for.cond.i_crit_edge ]
  %8 = ptrtoint ptr %local.0.in.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %local.0.i = load ptr, ptr %local.0.in.i, align 4
  %cmp.not.i = icmp eq ptr %local.0.i, @pnfs_modules_tbl
  br i1 %cmp.not.i, label %for.cond.i.do.body.i_crit_edge, label %for.body.i

for.cond.i.do.body.i_crit_edge:                   ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i

for.body.i:                                       ; preds = %for.cond.i
  %id1.i = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %local.0.i, i32 0, i32 1
  %9 = ptrtoint ptr %id1.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %id1.i, align 4
  %cmp2.i = icmp eq i32 %10, %7
  br i1 %cmp2.i, label %for.body.i.do.body.i_crit_edge, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i

for.body.i.do.body.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i

do.body.i:                                        ; preds = %for.body.i.do.body.i_crit_edge, %for.cond.i.do.body.i_crit_edge
  %local.1.i = phi ptr [ %local.0.i, %for.body.i.do.body.i_crit_edge ], [ null, %for.cond.i.do.body.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %11 = load i32, ptr @nfs_debug, align 4
  %and.i = and i32 %11, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %do.body.i.find_pnfs_driver_locked.exit_crit_edge, label %do.end.i, !prof !413

do.body.i.find_pnfs_driver_locked.exit_crit_edge: ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %find_pnfs_driver_locked.exit

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %call.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.112, ptr noundef nonnull @.str.113, i32 noundef %7, ptr noundef %local.1.i) #19
  br label %find_pnfs_driver_locked.exit

find_pnfs_driver_locked.exit:                     ; preds = %do.end.i, %do.body.i.find_pnfs_driver_locked.exit_crit_edge
  %tobool12.not = icmp eq ptr %local.1.i, null
  br i1 %tobool12.not, label %if.then13, label %do.end30

if.then13:                                        ; preds = %find_pnfs_driver_locked.exit
  %12 = load ptr, ptr @pnfs_modules_tbl, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %ld_type, ptr noundef nonnull @pnfs_modules_tbl, ptr noundef %12) #16
  br i1 %call.i.i, label %if.end.i.i, label %if.then13.list_add.exit_crit_edge

if.then13.list_add.exit_crit_edge:                ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #18
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %ld_type, ptr %prev1.i.i, align 4
  %14 = ptrtoint ptr %ld_type to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %12, ptr %ld_type, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %ld_type, i32 0, i32 1
  %15 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr @pnfs_modules_tbl, ptr %prev3.i.i, align 4
  store volatile ptr %ld_type, ptr @pnfs_modules_tbl, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.then13.list_add.exit_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %16 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %16, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool15.not = icmp eq i32 %and, 0
  br i1 %tobool15.not, label %list_add.exit.if.end34_crit_edge, label %do.end21, !prof !413

list_add.exit.if.end34_crit_edge:                 ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end34

do.end21:                                         ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %id, align 4
  %name = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %ld_type, i32 0, i32 2
  %19 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %name, align 4
  %call24 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.23, ptr noundef nonnull @.str.18, i32 noundef %18, ptr noundef %20) #19
  br label %if.end34

do.end30:                                         ; preds = %find_pnfs_driver_locked.exit
  call void @__sanitizer_cov_trace_pc() #18
  %21 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %id, align 4
  %call33 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.26, ptr noundef nonnull @.str.18, i32 noundef %22) #19
  br label %if.end34

if.end34:                                         ; preds = %do.end30, %do.end21, %list_add.exit.if.end34_crit_edge
  %status.0 = phi i32 [ -22, %do.end30 ], [ 0, %do.end21 ], [ 0, %list_add.exit.if.end34_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef nonnull @pnfs_spinlock) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end34, %do.end6, %do.end
  %retval.0 = phi i32 [ -22, %do.end ], [ %status.0, %if.end34 ], [ -22, %do.end6 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_unregister_layoutdriver(ptr noundef %ld_type) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %0 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %0, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end4_crit_edge, label %do.end, !prof !413

entry.do.end4_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end4

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %id = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %ld_type, i32 0, i32 1
  %1 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %id, align 4
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.28, ptr noundef nonnull @.str.29, i32 noundef %2) #19
  br label %do.end4

do.end4:                                          ; preds = %do.end, %entry.do.end4_crit_edge
  tail call void @_raw_spin_lock(ptr noundef nonnull @pnfs_spinlock) #16
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %ld_type) #16
  br i1 %call.i.i, label %if.end.i.i, label %do.end4.list_del.exit_crit_edge

do.end4.list_del.exit_crit_edge:                  ; preds = %do.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit

if.end.i.i:                                       ; preds = %do.end4
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %ld_type, i32 0, i32 1
  %3 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %prev.i.i, align 4
  %5 = ptrtoint ptr %ld_type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ld_type, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %4, ptr %prev1.i.i.i, align 4
  %8 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %6, ptr %4, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %do.end4.list_del.exit_crit_edge
  %9 = ptrtoint ptr %ld_type to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 256 to ptr), ptr %ld_type, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %ld_type, i32 0, i32 1
  %10 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef nonnull @pnfs_spinlock) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_get_layout_hdr(ptr noundef %lo) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %lo, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %lo, i32 1, i32 3, i32 1) #16
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %lo, ptr %lo, i32 1, ptr elementtype(i32) %lo) #16, !srcloc !415
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %tobool1.not.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i, label %entry.if.end15.sink.split.i.i.i_crit_edge, label %if.else.i.i.i, !prof !416

entry.if.end15.sink.split.i.i.i_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i:                                    ; preds = %entry
  %add.i.i.i = add i32 %asmresult.i.i.i.i.i, 1
  %1 = or i32 %add.i.i.i, %asmresult.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %.not.i.i.i = icmp sgt i32 %1, -1
  br i1 %.not.i.i.i, label %if.else.i.i.i.refcount_inc.exit_crit_edge, label %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, !prof !413

if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i.refcount_inc.exit_crit_edge:        ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %refcount_inc.exit

if.end15.sink.split.i.i.i:                        ; preds = %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, %entry.if.end15.sink.split.i.i.i_crit_edge
  %.sink.i.i.i = phi i32 [ 2, %entry.if.end15.sink.split.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %lo, i32 noundef %.sink.i.i.i) #16
  br label %refcount_inc.exit

refcount_inc.exit:                                ; preds = %if.end15.sink.split.i.i.i, %if.else.i.i.i.refcount_inc.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_put_layout_hdr(ptr noundef %lo) local_unnamed_addr #0 align 64 {
entry:
  %recall_range.i.i = alloca %struct.pnfs_layout_range, align 8
  %cred.i = alloca ptr, align 4
  %stateid.i = alloca %struct.nfs4_stateid_struct, align 4
  %iomode.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %lo, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %plh_inode = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 15
  %0 = ptrtoint ptr %plh_inode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %plh_inode, align 4
  %plh_flags.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 8
  %2 = ptrtoint ptr %plh_flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %plh_flags.i, align 4
  %4 = and i32 %3, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %if.end.pnfs_layoutreturn_before_put_layout_hdr.exit_crit_edge, label %if.end.i

if.end.pnfs_layoutreturn_before_put_layout_hdr.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_layoutreturn_before_put_layout_hdr.exit

if.end.i:                                         ; preds = %if.end
  %i_lock.i = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock.i) #16
  %5 = ptrtoint ptr %plh_flags.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %plh_flags.i, align 4
  %7 = and i32 %6, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not.i63 = icmp eq i32 %7, 0
  br i1 %tobool.not.i63, label %if.end.i.if.else.i_crit_edge, label %pnfs_layout_need_return.exit

if.end.i.if.else.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

pnfs_layout_need_return.exit:                     ; preds = %if.end.i
  %plh_return_iomode.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 12
  %8 = ptrtoint ptr %plh_return_iomode.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %plh_return_iomode.i, align 8
  %plh_return_seq.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 11
  %10 = ptrtoint ptr %plh_return_seq.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %plh_return_seq.i, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %recall_range.i.i) #16
  %12 = ptrtoint ptr %recall_range.i.i to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 -1, ptr %recall_range.i.i, align 8
  store i32 %9, ptr %recall_range.i.i, align 8
  %offset.i.i = getelementptr inbounds %struct.pnfs_layout_range, ptr %recall_range.i.i, i32 0, i32 1
  %13 = ptrtoint ptr %offset.i.i to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 0, ptr %offset.i.i, align 8
  %length.i.i = getelementptr inbounds %struct.pnfs_layout_range, ptr %recall_range.i.i, i32 0, i32 2
  %14 = ptrtoint ptr %length.i.i to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 -1, ptr %length.i.i, align 8
  %plh_return_segs.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 5
  %call.i.i = call i32 @pnfs_mark_matching_lsegs_return(ptr noundef nonnull %lo, ptr noundef %plh_return_segs.i.i, ptr noundef nonnull %recall_range.i.i, i32 noundef %11) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -16, i32 %call.i.i)
  %cmp.i.i.not = icmp eq i32 %call.i.i, -16
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %recall_range.i.i) #16
  br i1 %cmp.i.i.not, label %pnfs_layout_need_return.exit.if.else.i_crit_edge, label %if.then2.i

pnfs_layout_need_return.exit.if.else.i_crit_edge: ; preds = %pnfs_layout_need_return.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

if.then2.i:                                       ; preds = %pnfs_layout_need_return.exit
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cred.i) #16
  %15 = ptrtoint ptr %cred.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr inttoptr (i32 -1 to ptr), ptr %cred.i, align 4, !annotation !417
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %stateid.i) #16
  %16 = call ptr @memset(ptr %stateid.i, i32 255, i32 20)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %iomode.i) #16
  %17 = ptrtoint ptr %iomode.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 -1, ptr %iomode.i, align 4, !annotation !417
  %call3.i = call fastcc zeroext i1 @pnfs_prepare_layoutreturn(ptr noundef nonnull %lo, ptr noundef nonnull %stateid.i, ptr noundef nonnull %cred.i, ptr noundef nonnull %iomode.i) #16
  call void @_raw_spin_unlock(ptr noundef %i_lock.i) #16
  br i1 %call3.i, label %if.then6.i, label %if.then2.i.if.end8.i_crit_edge

if.then2.i.if.end8.i_crit_edge:                   ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8.i

if.then6.i:                                       ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #18
  %18 = ptrtoint ptr %iomode.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %iomode.i, align 4
  %call7.i = call fastcc i32 @pnfs_send_layoutreturn(ptr noundef nonnull %lo, ptr noundef nonnull %stateid.i, ptr noundef nonnull %cred.i, i32 noundef %19, i1 noundef zeroext false) #16
  br label %if.end8.i

if.end8.i:                                        ; preds = %if.then6.i, %if.then2.i.if.end8.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %iomode.i) #16
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %stateid.i) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cred.i) #16
  br label %pnfs_layoutreturn_before_put_layout_hdr.exit

if.else.i:                                        ; preds = %pnfs_layout_need_return.exit.if.else.i_crit_edge, %if.end.i.if.else.i_crit_edge
  call void @_raw_spin_unlock(ptr noundef %i_lock.i) #16
  br label %pnfs_layoutreturn_before_put_layout_hdr.exit

pnfs_layoutreturn_before_put_layout_hdr.exit:     ; preds = %if.else.i, %if.end8.i, %if.end.pnfs_layoutreturn_before_put_layout_hdr.exit_crit_edge
  %i_lock = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 18
  %call = call zeroext i1 @refcount_dec_and_lock(ptr noundef nonnull %lo, ptr noundef %i_lock) #16
  br i1 %call, label %if.then1, label %pnfs_layoutreturn_before_put_layout_hdr.exit.cleanup_crit_edge

pnfs_layoutreturn_before_put_layout_hdr.exit.cleanup_crit_edge: ; preds = %pnfs_layoutreturn_before_put_layout_hdr.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then1:                                         ; preds = %pnfs_layoutreturn_before_put_layout_hdr.exit
  %plh_segs = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 4
  %20 = ptrtoint ptr %plh_segs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile ptr, ptr %plh_segs, align 4
  %cmp.i.not = icmp eq ptr %21, %plh_segs
  br i1 %cmp.i.not, label %if.then1.if.end40_crit_edge, label %land.end

if.then1.if.end40_crit_edge:                      ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end40

land.end:                                         ; preds = %if.then1
  %.b59 = load i1, ptr @pnfs_put_layout_hdr.__already_done, align 1
  br i1 %.b59, label %land.end.if.end40_crit_edge, label %if.then10, !prof !413

land.end.if.end40_crit_edge:                      ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end40

if.then10:                                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @pnfs_put_layout_hdr.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 306, i32 noundef 9, ptr noundef nonnull @.str.30) #16
  br label %if.end40

if.end40:                                         ; preds = %if.then10, %land.end.if.end40_crit_edge, %if.then1.if.end40_crit_edge
  %22 = ptrtoint ptr %plh_inode to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %plh_inode, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %24 = load i32, ptr @nfs_debug, align 4
  %and.i = and i32 %24, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i61 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i61, label %if.end40.pnfs_detach_layout_hdr.exit_crit_edge, label %do.end.i, !prof !413

if.end40.pnfs_detach_layout_hdr.exit_crit_edge:   ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_detach_layout_hdr.exit

do.end.i:                                         ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #18
  %call4.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.114, ptr noundef nonnull @.str.115, ptr noundef nonnull %lo) #19
  br label %pnfs_detach_layout_hdr.exit

pnfs_detach_layout_hdr.exit:                      ; preds = %do.end.i, %if.end40.pnfs_detach_layout_hdr.exit_crit_edge
  %layout.i = getelementptr i8, ptr %23, i32 -32
  %25 = ptrtoint ptr %layout.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr null, ptr %layout.i, align 8
  %write_io.i = getelementptr i8, ptr %23, i32 -24
  %26 = call ptr @memset(ptr %write_io.i, i32 0, i32 16)
  %i_state41 = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 24
  %27 = ptrtoint ptr %i_state41 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %i_state41, align 8
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  call fastcc void @pnfs_free_layout_hdr(ptr noundef nonnull %lo)
  %and = and i32 %28, 96
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool43.not = icmp eq i32 %and, 0
  br i1 %tobool43.not, label %pnfs_detach_layout_hdr.exit.cleanup_crit_edge, label %if.then44

pnfs_detach_layout_hdr.exit.cleanup_crit_edge:    ; preds = %pnfs_detach_layout_hdr.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then44:                                        ; preds = %pnfs_detach_layout_hdr.exit
  call void @__sanitizer_cov_trace_pc() #18
  call void @wake_up_var(ptr noundef nonnull %lo) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then44, %pnfs_detach_layout_hdr.exit.cleanup_crit_edge, %pnfs_layoutreturn_before_put_layout_hdr.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @refcount_dec_and_lock(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pnfs_free_layout_hdr(ptr noundef %lo) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %plh_inode = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 15
  %0 = ptrtoint ptr %plh_inode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %plh_inode, align 4
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i.i, align 16
  %pnfs_curr_ld = getelementptr inbounds %struct.nfs_server, ptr %5, i32 0, i32 46
  %6 = ptrtoint ptr %pnfs_curr_ld to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pnfs_curr_ld, align 4
  %plh_flags = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 8
  %call1 = tail call i32 @_test_and_clear_bit(i32 noundef 9, ptr noundef %plh_flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  %8 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %5, align 8
  %cl_lock = getelementptr inbounds %struct.nfs_client, ptr %9, i32 0, i32 23
  tail call void @_raw_spin_lock(ptr noundef %cl_lock) #16
  %plh_layouts = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 2
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %plh_layouts) #16
  br i1 %call.i.i, label %if.end.i.i, label %if.then.list_del_rcu.exit_crit_edge

if.then.list_del_rcu.exit_crit_edge:              ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 2, i32 1
  %10 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %prev.i.i, align 4
  %12 = ptrtoint ptr %plh_layouts to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %plh_layouts, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %11, ptr %prev1.i.i.i, align 4
  %15 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile ptr %13, ptr %11, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %if.then.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 2, i32 1
  %16 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  tail call void @_raw_spin_unlock(ptr noundef %cl_lock) #16
  br label %if.end

if.end:                                           ; preds = %list_del_rcu.exit, %entry.if.end_crit_edge
  %plh_lc_cred = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 14
  %17 = ptrtoint ptr %plh_lc_cred to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %plh_lc_cred, align 8
  %tobool.not.i = icmp eq ptr %18, null
  br i1 %tobool.not.i, label %if.end.put_cred.exit_crit_edge, label %do.body.i

if.end.put_cred.exit_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %put_cred.exit

do.body.i:                                        ; preds = %if.end
  %call.i.i9 = tail call zeroext i1 @creds_are_invalid(ptr noundef nonnull %18) #16
  br i1 %call.i.i9, label %if.then.i.i, label %do.body.i.__validate_creds.exit.i_crit_edge, !prof !416

do.body.i.__validate_creds.exit.i_crit_edge:      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %__validate_creds.exit.i

if.then.i.i:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @__invalid_creds(ptr noundef nonnull %18, ptr noundef nonnull @.str.125, i32 noundef 286) #16
  br label %__validate_creds.exit.i

__validate_creds.exit.i:                          ; preds = %if.then.i.i, %do.body.i.__validate_creds.exit.i_crit_edge
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %18, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !410
  tail call void @llvm.prefetch.p0(ptr nonnull %18, i32 1, i32 3, i32 1) #16
  %19 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %18, ptr nonnull %18, i32 1, ptr nonnull elementtype(i32) %18) #16, !srcloc !411
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %19, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !412
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then1.i, label %__validate_creds.exit.i.put_cred.exit_crit_edge

__validate_creds.exit.i.put_cred.exit_crit_edge:  ; preds = %__validate_creds.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %put_cred.exit

if.then1.i:                                       ; preds = %__validate_creds.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @__put_cred(ptr noundef nonnull %18) #16
  br label %put_cred.exit

put_cred.exit:                                    ; preds = %if.then1.i, %__validate_creds.exit.i.put_cred.exit_crit_edge, %if.end.put_cred.exit_crit_edge
  %free_layout_hdr = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %7, i32 0, i32 10
  %20 = ptrtoint ptr %free_layout_hdr to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %free_layout_hdr, align 4
  tail call void %21(ptr noundef %lo) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wake_up_var(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @nfs4_layout_refresh_old_stateid(ptr nocapture noundef %dst, ptr nocapture noundef writeonly %dst_range, ptr noundef %inode) local_unnamed_addr #0 align 64 {
entry:
  %range = alloca %struct.pnfs_layout_range, align 8
  %head = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %range) #16
  %0 = call ptr @memcpy(ptr %range, ptr @__const.pnfs_layout_process.range, i32 24)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %head) #16
  %1 = getelementptr inbounds %struct.list_head, ptr %head, i32 0, i32 1
  %2 = ptrtoint ptr %head to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %head, ptr %head, align 4
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %head, ptr %1, align 4
  %i_lock = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18
  call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %layout = getelementptr i8, ptr %inode, i32 -32
  %4 = ptrtoint ptr %layout to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %layout, align 8
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.out_crit_edge, label %land.lhs.true

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

land.lhs.true:                                    ; preds = %entry
  %plh_flags.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %5, i32 0, i32 8
  %6 = ptrtoint ptr %plh_flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %plh_flags.i, align 4
  %8 = and i32 %7, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp.i = icmp eq i32 %8, 0
  br i1 %cmp.i, label %land.lhs.true2, label %land.lhs.true.out_crit_edge

land.lhs.true.out_crit_edge:                      ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

land.lhs.true2:                                   ; preds = %land.lhs.true
  %plh_stateid = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %5, i32 0, i32 9
  %other.i = getelementptr inbounds %struct.anon.132, ptr %dst, i32 0, i32 1
  %other1.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %5, i32 0, i32 9, i32 0, i32 0, i32 1
  %bcmp.i = call i32 @bcmp(ptr noundef dereferenceable(12) %other.i, ptr noundef dereferenceable(12) %other1.i, i32 12) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i)
  %cmp.i25 = icmp eq i32 %bcmp.i, 0
  br i1 %cmp.i25, label %if.then, label %land.lhs.true2.out_crit_edge

land.lhs.true2.out_crit_edge:                     ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.then:                                          ; preds = %land.lhs.true2
  %9 = ptrtoint ptr %plh_stateid to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %plh_stateid, align 4
  %11 = ptrtoint ptr %dst to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %dst, align 4
  %sub.i = sub i32 %10, %12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp.i26 = icmp sgt i32 %sub.i, 0
  br i1 %cmp.i26, label %if.end, label %if.then6

if.then6:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %inc.i = add i32 %12, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %inc.i)
  %cmp.i27 = icmp eq i32 %inc.i, 0
  %spec.select.i = select i1 %cmp.i27, i32 1, i32 %inc.i
  %13 = ptrtoint ptr %dst to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %spec.select.i, ptr %dst, align 4
  br label %out

if.end:                                           ; preds = %if.then
  %call7 = call i32 @pnfs_mark_matching_lsegs_return(ptr noundef nonnull %5, ptr noundef nonnull %head, ptr noundef nonnull %range, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -16, i32 %call7)
  %cmp.not = icmp eq i32 %call7, -16
  br i1 %cmp.not, label %if.end.out_crit_edge, label %if.then8

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.then8:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %plh_stateid to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %plh_stateid, align 4
  %16 = ptrtoint ptr %dst to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %dst, align 4
  %17 = call ptr @memcpy(ptr %dst_range, ptr %range, i32 24)
  br label %out

out:                                              ; preds = %if.then8, %if.end.out_crit_edge, %if.then6, %land.lhs.true2.out_crit_edge, %land.lhs.true.out_crit_edge, %entry.out_crit_edge
  %ret.0.off0 = phi i1 [ true, %if.then8 ], [ false, %if.end.out_crit_edge ], [ true, %if.then6 ], [ false, %land.lhs.true2.out_crit_edge ], [ false, %land.lhs.true.out_crit_edge ], [ false, %entry.out_crit_edge ]
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  %18 = ptrtoint ptr %head to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %head, align 4
  %cmp.i.not.i = icmp eq ptr %19, %head
  br i1 %cmp.i.not.i, label %out.pnfs_free_lseg_list.exit_crit_edge, label %out.for.body.i_crit_edge

out.for.body.i_crit_edge:                         ; preds = %out
  br label %for.body.i

out.pnfs_free_lseg_list.exit_crit_edge:           ; preds = %out
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg_list.exit

for.body.i:                                       ; preds = %pnfs_free_lseg.exit.i.for.body.i_crit_edge, %out.for.body.i_crit_edge
  %lseg.021.i = phi ptr [ %tmp.0.i, %pnfs_free_lseg.exit.i.for.body.i_crit_edge ], [ %19, %out.for.body.i_crit_edge ]
  %20 = ptrtoint ptr %lseg.021.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %tmp.0.i = load ptr, ptr %lseg.021.i, align 8
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %lseg.021.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %for.body.i.list_del.exit.i_crit_edge

for.body.i.list_del.exit.i_crit_edge:             ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %lseg.021.i, i32 0, i32 1
  %21 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %prev.i.i.i, align 4
  %23 = ptrtoint ptr %lseg.021.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %lseg.021.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %22, ptr %prev1.i.i.i.i, align 4
  %26 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %24, ptr %22, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %for.body.i.list_del.exit.i_crit_edge
  %27 = ptrtoint ptr %lseg.021.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr inttoptr (i32 256 to ptr), ptr %lseg.021.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %lseg.021.i, i32 0, i32 1
  %28 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %lseg.021.i, null
  br i1 %cmp.not.i.i, label %list_del.exit.i.pnfs_free_lseg.exit.i_crit_edge, label %if.then.i.i

list_del.exit.i.pnfs_free_lseg.exit.i_crit_edge:  ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg.exit.i

if.then.i.i:                                      ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %pls_layout.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.021.i, i32 0, i32 7
  %29 = ptrtoint ptr %pls_layout.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %pls_layout.i.i, align 4
  %plh_inode.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %30, i32 0, i32 15
  %31 = ptrtoint ptr %plh_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %plh_inode.i.i, align 4
  %i_sb.i.i.i = getelementptr inbounds %struct.inode, ptr %32, i32 0, i32 8
  %33 = ptrtoint ptr %i_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %i_sb.i.i.i, align 4
  %s_fs_info.i.i.i.i = getelementptr inbounds %struct.super_block, ptr %34, i32 0, i32 33
  %35 = ptrtoint ptr %s_fs_info.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %s_fs_info.i.i.i.i, align 16
  %pnfs_curr_ld.i.i = getelementptr inbounds %struct.nfs_server, ptr %36, i32 0, i32 46
  %37 = ptrtoint ptr %pnfs_curr_ld.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %pnfs_curr_ld.i.i, align 4
  %free_lseg.i.i = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %38, i32 0, i32 12
  %39 = ptrtoint ptr %free_lseg.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %free_lseg.i.i, align 4
  call void %40(ptr noundef nonnull %lseg.021.i) #16
  br label %pnfs_free_lseg.exit.i

pnfs_free_lseg.exit.i:                            ; preds = %if.then.i.i, %list_del.exit.i.pnfs_free_lseg.exit.i_crit_edge
  %cmp.not.i = icmp eq ptr %tmp.0.i, %head
  br i1 %cmp.not.i, label %pnfs_free_lseg.exit.i.pnfs_free_lseg_list.exit_crit_edge, label %pnfs_free_lseg.exit.i.for.body.i_crit_edge

pnfs_free_lseg.exit.i.for.body.i_crit_edge:       ; preds = %pnfs_free_lseg.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

pnfs_free_lseg.exit.i.pnfs_free_lseg_list.exit_crit_edge: ; preds = %pnfs_free_lseg.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg_list.exit

pnfs_free_lseg_list.exit:                         ; preds = %pnfs_free_lseg.exit.i.pnfs_free_lseg_list.exit_crit_edge, %out.pnfs_free_lseg_list.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %head) #16
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %range) #16
  ret i1 %ret.0.off0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pnfs_mark_matching_lsegs_return(ptr noundef %lo, ptr noundef %tmp_list, ptr noundef readonly %return_range, i32 noundef %seq) local_unnamed_addr #0 align 64 {
entry:
  %agg.tmp.sroa.0.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %0 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %0, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.body6_crit_edge, label %do.end, !prof !413

entry.do.body6_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body6

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.33, ptr noundef nonnull @.str.91, ptr noundef %lo) #19
  br label %do.body6

do.body6:                                         ; preds = %do.end, %entry.do.body6_crit_edge
  %plh_inode = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 15
  %1 = ptrtoint ptr %plh_inode to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %plh_inode, align 4
  %i_lock = getelementptr inbounds %struct.inode, ptr %2, i32 0, i32 18
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i)
  %3 = ptrtoint ptr %i_lock to i32
  call void @__asan_load4_noabort(i32 %3)
  %agg.tmp.sroa.0.0.copyload.i = load volatile i32, ptr %i_lock, align 4
  %4 = ptrtoint ptr %agg.tmp.sroa.0.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile i32 %agg.tmp.sroa.0.0.copyload.i, ptr %agg.tmp.sroa.0.i, align 4
  %lock.sroa.0.0.extract.shift.i.i = lshr i32 %agg.tmp.sroa.0.0.copyload.i, 16
  %conv.i.i = and i32 %agg.tmp.sroa.0.0.copyload.i, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i.i, i32 %lock.sroa.0.0.extract.shift.i.i)
  %cmp.i.i.not = icmp eq i32 %conv.i.i, %lock.sroa.0.0.extract.shift.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i)
  br i1 %cmp.i.i.not, label %do.body18, label %do.end26, !prof !416

do.body18:                                        ; preds = %do.body6
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/nfs/pnfs.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2470, 0\0A.popsection", ""() #16, !srcloc !418
  unreachable

do.end26:                                         ; preds = %do.body6
  %plh_flags = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 8
  %5 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %plh_flags, align 4
  %plh_return_segs = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 5
  %plh_segs = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 4
  %7 = ptrtoint ptr %plh_segs to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %plh_segs, align 8
  %cmp.not153 = icmp eq ptr %8, %plh_segs
  br i1 %cmp.not153, label %do.end26.if.end82_crit_edge, label %for.body.lr.ph

do.end26.if.end82_crit_edge:                      ; preds = %do.end26
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end82

for.body.lr.ph:                                   ; preds = %do.end26
  %9 = and i32 %6, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool28.not = icmp eq i32 %9, 0
  %spec.select = select i1 %tobool28.not, ptr %tmp_list, ptr %plh_return_segs
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %seq)
  %cmp.not.i = icmp eq i32 %seq, 0
  %cmp1.i = icmp eq ptr %return_range, null
  %offset1.i.i.i = getelementptr inbounds %struct.pnfs_layout_range, ptr %return_range, i32 0, i32 1
  %length2.i.i.i = getelementptr inbounds %struct.pnfs_layout_range, ptr %return_range, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %tmp_list.addr.1158 = phi ptr [ %spec.select, %for.body.lr.ph ], [ %tmp_list.addr.3, %for.inc.for.body_crit_edge ]
  %lseg.0157 = phi ptr [ %8, %for.body.lr.ph ], [ %next.0160, %for.inc.for.body_crit_edge ]
  %remaining.0154 = phi i32 [ 0, %for.body.lr.ph ], [ %remaining.1, %for.inc.for.body_crit_edge ]
  %10 = ptrtoint ptr %lseg.0157 to i32
  call void @__asan_load4_noabort(i32 %10)
  %next.0160 = load ptr, ptr %lseg.0157, align 8
  br i1 %cmp.not.i, label %for.body.if.end.i_crit_edge, label %land.lhs.true.i

for.body.if.end.i_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %for.body
  %pls_seq.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.0157, i32 0, i32 5
  %11 = ptrtoint ptr %pls_seq.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %pls_seq.i, align 4
  %sub.i.i = sub i32 %12, %seq
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i118 = icmp sgt i32 %sub.i.i, 0
  br i1 %cmp.i.i118, label %land.lhs.true.i.for.inc_crit_edge, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

land.lhs.true.i.for.inc_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %for.body.if.end.i_crit_edge
  br i1 %cmp1.i, label %if.end.i.do.body43_crit_edge, label %if.end3.i

if.end.i.do.body43_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body43

if.end3.i:                                        ; preds = %if.end.i
  %13 = ptrtoint ptr %return_range to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %return_range, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %14)
  %cmp.i8.i = icmp eq i32 %14, 3
  br i1 %cmp.i8.i, label %if.end3.i.land.rhs.i.i_crit_edge, label %lor.lhs.false.i.i

if.end3.i.land.rhs.i.i_crit_edge:                 ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs.i.i

lor.lhs.false.i.i:                                ; preds = %if.end3.i
  %pls_range.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.0157, i32 0, i32 3
  %15 = ptrtoint ptr %pls_range.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %pls_range.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %14)
  %cmp3.i.i = icmp eq i32 %16, %14
  br i1 %cmp3.i.i, label %lor.lhs.false.i.i.land.rhs.i.i_crit_edge, label %lor.lhs.false.i.i.for.inc_crit_edge

lor.lhs.false.i.i.for.inc_crit_edge:              ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

lor.lhs.false.i.i.land.rhs.i.i_crit_edge:         ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %lor.lhs.false.i.i.land.rhs.i.i_crit_edge, %if.end3.i.land.rhs.i.i_crit_edge
  %offset.i.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.0157, i32 0, i32 3, i32 1
  %17 = ptrtoint ptr %offset.i.i.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %offset.i.i.i, align 8
  %length.i.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.0157, i32 0, i32 3, i32 2
  %19 = ptrtoint ptr %length.i.i.i to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %length.i.i.i, align 8
  %21 = tail call i64 @llvm.uadd.sat.i64(i64 %18, i64 %20) #16
  %22 = ptrtoint ptr %offset1.i.i.i to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %offset1.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %21)
  %cmp.i.i.i.i = icmp eq i64 %21, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %23, i64 %21)
  %cmp1.i.i.i.i = icmp ult i64 %23, %21
  %or.cond.i.i.i.i = or i1 %cmp.i.i.i.i, %cmp1.i.i.i.i
  br i1 %or.cond.i.i.i.i, label %pnfs_match_lseg_recall.exit, label %land.rhs.i.i.for.inc_crit_edge

land.rhs.i.i.for.inc_crit_edge:                   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

pnfs_match_lseg_recall.exit:                      ; preds = %land.rhs.i.i
  %24 = ptrtoint ptr %length2.i.i.i to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %length2.i.i.i, align 8
  %26 = tail call i64 @llvm.uadd.sat.i64(i64 %23, i64 %25) #16
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %26)
  %cmp2.i.i.i.i = icmp eq i64 %26, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %18, i64 %26)
  %cmp3.i.i.i.i = icmp ult i64 %18, %26
  %spec.select.i.i.i.i = or i1 %cmp2.i.i.i.i, %cmp3.i.i.i.i
  br i1 %spec.select.i.i.i.i, label %pnfs_match_lseg_recall.exit.do.body43_crit_edge, label %pnfs_match_lseg_recall.exit.for.inc_crit_edge

pnfs_match_lseg_recall.exit.for.inc_crit_edge:    ; preds = %pnfs_match_lseg_recall.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

pnfs_match_lseg_recall.exit.do.body43_crit_edge:  ; preds = %pnfs_match_lseg_recall.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body43

do.body43:                                        ; preds = %pnfs_match_lseg_recall.exit.do.body43_crit_edge, %if.end.i.do.body43_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %27 = load i32, ptr @nfs_debug, align 4
  %and44 = and i32 %27, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and44)
  %tobool45.not = icmp eq i32 %and44, 0
  br i1 %tobool45.not, label %do.body43.do.end62_crit_edge, label %do.end55, !prof !413

do.body43.do.end62_crit_edge:                     ; preds = %do.body43
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end62

do.end55:                                         ; preds = %do.body43
  call void @__sanitizer_cov_trace_pc() #18
  %pls_range = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.0157, i32 0, i32 3
  %28 = ptrtoint ptr %pls_range to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %pls_range, align 8
  %offset = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.0157, i32 0, i32 3, i32 1
  %30 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %offset, align 8
  %length = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.0157, i32 0, i32 3, i32 2
  %32 = ptrtoint ptr %length to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %length, align 8
  %call59 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.93, ptr noundef nonnull @.str.91, ptr noundef %lseg.0157, i32 noundef %29, i64 noundef %31, i64 noundef %33) #19
  br label %do.end62

do.end62:                                         ; preds = %do.end55, %do.body43.do.end62_crit_edge
  %pls_flags = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.0157, i32 0, i32 6
  %34 = ptrtoint ptr %pls_flags to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %pls_flags, align 4
  %36 = and i32 %35, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool64.not = icmp eq i32 %36, 0
  %spec.select115 = select i1 %tobool64.not, ptr %tmp_list.addr.1158, ptr %plh_return_segs
  %call.i = tail call i32 @_test_and_clear_bit(i32 noundef 0, ptr noundef %pls_flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %do.end62.if.end71_crit_edge, label %do.body.i

do.end62.if.end71_crit_edge:                      ; preds = %do.end62
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end71

do.body.i:                                        ; preds = %do.end62
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %37 = load i32, ptr @nfs_debug, align 4
  %and.i = and i32 %37, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %do.body.i.mark_lseg_invalid.exit_crit_edge, label %do.end.i, !prof !413

do.body.i.mark_lseg_invalid.exit_crit_edge:       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mark_lseg_invalid.exit

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %pls_refcount.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.0157, i32 0, i32 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %pls_refcount.i, i32 noundef 4) #16
  %38 = ptrtoint ptr %pls_refcount.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %pls_refcount.i, align 4
  %call7.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.116, ptr noundef nonnull @.str.117, ptr noundef %lseg.0157, i32 noundef %39) #19
  br label %mark_lseg_invalid.exit

mark_lseg_invalid.exit:                           ; preds = %do.end.i, %do.body.i.mark_lseg_invalid.exit_crit_edge
  %call10.i = tail call fastcc zeroext i1 @pnfs_lseg_dec_and_remove_zero(ptr noundef %lseg.0157, ptr noundef %spec.select115) #16
  br i1 %call10.i, label %mark_lseg_invalid.exit.for.inc_crit_edge, label %mark_lseg_invalid.exit.if.end71_crit_edge

mark_lseg_invalid.exit.if.end71_crit_edge:        ; preds = %mark_lseg_invalid.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end71

mark_lseg_invalid.exit.for.inc_crit_edge:         ; preds = %mark_lseg_invalid.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end71:                                         ; preds = %mark_lseg_invalid.exit.if.end71_crit_edge, %do.end62.if.end71_crit_edge
  %inc = add i32 %remaining.0154, 1
  tail call void @_set_bit(i32 noundef 3, ptr noundef %pls_flags) #16
  br label %for.inc

for.inc:                                          ; preds = %if.end71, %mark_lseg_invalid.exit.for.inc_crit_edge, %pnfs_match_lseg_recall.exit.for.inc_crit_edge, %land.rhs.i.i.for.inc_crit_edge, %lor.lhs.false.i.i.for.inc_crit_edge, %land.lhs.true.i.for.inc_crit_edge
  %remaining.1 = phi i32 [ %remaining.0154, %mark_lseg_invalid.exit.for.inc_crit_edge ], [ %inc, %if.end71 ], [ %remaining.0154, %pnfs_match_lseg_recall.exit.for.inc_crit_edge ], [ %remaining.0154, %land.lhs.true.i.for.inc_crit_edge ], [ %remaining.0154, %lor.lhs.false.i.i.for.inc_crit_edge ], [ %remaining.0154, %land.rhs.i.i.for.inc_crit_edge ]
  %tmp_list.addr.3 = phi ptr [ %spec.select115, %mark_lseg_invalid.exit.for.inc_crit_edge ], [ %spec.select115, %if.end71 ], [ %tmp_list.addr.1158, %pnfs_match_lseg_recall.exit.for.inc_crit_edge ], [ %tmp_list.addr.1158, %land.lhs.true.i.for.inc_crit_edge ], [ %tmp_list.addr.1158, %lor.lhs.false.i.i.for.inc_crit_edge ], [ %tmp_list.addr.1158, %land.rhs.i.i.for.inc_crit_edge ]
  %cmp.not = icmp eq ptr %next.0160, %plh_segs
  br i1 %cmp.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.inc
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %remaining.1)
  %tobool79.not = icmp eq i32 %remaining.1, 0
  br i1 %tobool79.not, label %for.end.if.end82_crit_edge, label %if.then80

for.end.if.end82_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end82

if.then80:                                        ; preds = %for.end
  %40 = ptrtoint ptr %return_range to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %return_range, align 8
  %plh_return_iomode.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 12
  %42 = ptrtoint ptr %plh_return_iomode.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %plh_return_iomode.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %cmp.not.i119 = icmp eq i32 %43, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %43, i32 %41)
  %cmp2.not.i = icmp eq i32 %43, %41
  %44 = or i1 %cmp.not.i119, %cmp2.not.i
  %iomode.addr.0.i = select i1 %44, i32 %41, i32 3
  %45 = ptrtoint ptr %plh_return_iomode.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %iomode.addr.0.i, ptr %plh_return_iomode.i, align 8
  tail call void @_set_bit(i32 noundef 5, ptr noundef %plh_flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %seq)
  %cmp4.i = icmp eq i32 %seq, 0
  br i1 %cmp4.i, label %if.then5.i, label %if.then80.if.end6.i_crit_edge

if.then80.if.end6.i_crit_edge:                    ; preds = %if.then80
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6.i

if.then5.i:                                       ; preds = %if.then80
  call void @__sanitizer_cov_trace_pc() #18
  %plh_stateid.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 9
  %46 = ptrtoint ptr %plh_stateid.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %plh_stateid.i, align 4
  br label %if.end6.i

if.end6.i:                                        ; preds = %if.then5.i, %if.then80.if.end6.i_crit_edge
  %seq.addr.0.i = phi i32 [ %47, %if.then5.i ], [ %seq, %if.then80.if.end6.i_crit_edge ]
  %plh_return_seq.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 11
  %48 = ptrtoint ptr %plh_return_seq.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %plh_return_seq.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %tobool.not.i120 = icmp eq i32 %49, 0
  %sub.i.i121 = sub i32 %seq.addr.0.i, %49
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i121)
  %cmp.i.i122 = icmp sgt i32 %sub.i.i121, 0
  %or.cond.i = select i1 %tobool.not.i120, i1 true, i1 %cmp.i.i122
  br i1 %or.cond.i, label %if.then8.i, label %if.end6.i.if.end10.i_crit_edge

if.end6.i.if.end10.i_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i

if.then8.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  %50 = ptrtoint ptr %plh_return_seq.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %seq.addr.0.i, ptr %plh_return_seq.i, align 4
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then8.i, %if.end6.i.if.end10.i_crit_edge
  %plh_barrier.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 10
  %51 = ptrtoint ptr %plh_barrier.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %plh_barrier.i.i, align 8
  %sub.i.i.i = sub i32 %seq.addr.0.i, %52
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i)
  %cmp.i.i.i = icmp sgt i32 %sub.i.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %52)
  %tobool.not.i.i = icmp eq i32 %52, 0
  %or.cond.i.i = or i1 %tobool.not.i.i, %cmp.i.i.i
  br i1 %or.cond.i.i, label %if.then.i.i, label %if.end10.i.cleanup_crit_edge

if.end10.i.cleanup_crit_edge:                     ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  %53 = ptrtoint ptr %plh_barrier.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %seq.addr.0.i, ptr %plh_barrier.i.i, align 8
  br label %cleanup

if.end82:                                         ; preds = %for.end.if.end82_crit_edge, %do.end26.if.end82_crit_edge
  %54 = ptrtoint ptr %plh_return_segs to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load volatile ptr, ptr %plh_return_segs, align 4
  %cmp.i.not = icmp eq ptr %55, %plh_return_segs
  br i1 %cmp.i.not, label %if.end82.cleanup_crit_edge, label %if.then86

if.end82.cleanup_crit_edge:                       ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then86:                                        ; preds = %if.end82
  %56 = ptrtoint ptr %return_range to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %return_range, align 8
  %plh_return_iomode.i123 = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 12
  %58 = ptrtoint ptr %plh_return_iomode.i123 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %plh_return_iomode.i123, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %cmp.not.i124 = icmp eq i32 %59, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %59, i32 %57)
  %cmp2.not.i125 = icmp eq i32 %59, %57
  %60 = or i1 %cmp.not.i124, %cmp2.not.i125
  %iomode.addr.0.i126 = select i1 %60, i32 %57, i32 3
  %61 = ptrtoint ptr %plh_return_iomode.i123 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %iomode.addr.0.i126, ptr %plh_return_iomode.i123, align 8
  tail call void @_set_bit(i32 noundef 5, ptr noundef %plh_flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %seq)
  %cmp4.i128 = icmp eq i32 %seq, 0
  br i1 %cmp4.i128, label %if.then5.i130, label %if.then86.if.end6.i137_crit_edge

if.then86.if.end6.i137_crit_edge:                 ; preds = %if.then86
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6.i137

if.then5.i130:                                    ; preds = %if.then86
  call void @__sanitizer_cov_trace_pc() #18
  %plh_stateid.i129 = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 9
  %62 = ptrtoint ptr %plh_stateid.i129 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %plh_stateid.i129, align 4
  br label %if.end6.i137

if.end6.i137:                                     ; preds = %if.then5.i130, %if.then86.if.end6.i137_crit_edge
  %seq.addr.0.i131 = phi i32 [ %63, %if.then5.i130 ], [ %seq, %if.then86.if.end6.i137_crit_edge ]
  %plh_return_seq.i132 = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 11
  %64 = ptrtoint ptr %plh_return_seq.i132 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %plh_return_seq.i132, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool.not.i133 = icmp eq i32 %65, 0
  %sub.i.i134 = sub i32 %seq.addr.0.i131, %65
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i134)
  %cmp.i.i135 = icmp sgt i32 %sub.i.i134, 0
  %or.cond.i136 = select i1 %tobool.not.i133, i1 true, i1 %cmp.i.i135
  br i1 %or.cond.i136, label %if.then8.i138, label %if.end6.i137.if.end10.i144_crit_edge

if.end6.i137.if.end10.i144_crit_edge:             ; preds = %if.end6.i137
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i144

if.then8.i138:                                    ; preds = %if.end6.i137
  call void @__sanitizer_cov_trace_pc() #18
  %66 = ptrtoint ptr %plh_return_seq.i132 to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %seq.addr.0.i131, ptr %plh_return_seq.i132, align 4
  br label %if.end10.i144

if.end10.i144:                                    ; preds = %if.then8.i138, %if.end6.i137.if.end10.i144_crit_edge
  %plh_barrier.i.i139 = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 10
  %67 = ptrtoint ptr %plh_barrier.i.i139 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %plh_barrier.i.i139, align 8
  %sub.i.i.i140 = sub i32 %seq.addr.0.i131, %68
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i140)
  %cmp.i.i.i141 = icmp sgt i32 %sub.i.i.i140, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %tobool.not.i.i142 = icmp eq i32 %68, 0
  %or.cond.i.i143 = or i1 %tobool.not.i.i142, %cmp.i.i.i141
  br i1 %or.cond.i.i143, label %if.then.i.i145, label %if.end10.i144.cleanup_crit_edge

if.end10.i144.cleanup_crit_edge:                  ; preds = %if.end10.i144
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i.i145:                                   ; preds = %if.end10.i144
  call void @__sanitizer_cov_trace_pc() #18
  %69 = ptrtoint ptr %plh_barrier.i.i139 to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %seq.addr.0.i131, ptr %plh_barrier.i.i139, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.then.i.i145, %if.end10.i144.cleanup_crit_edge, %if.end82.cleanup_crit_edge, %if.then.i.i, %if.end10.i.cleanup_crit_edge
  %retval.0 = phi i32 [ -2, %if.end82.cleanup_crit_edge ], [ -16, %if.end10.i.cleanup_crit_edge ], [ -16, %if.then.i.i ], [ 0, %if.end10.i144.cleanup_crit_edge ], [ 0, %if.then.i.i145 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_free_lseg_list(ptr noundef %free_me) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %free_me to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %free_me, align 4
  %cmp.i.not = icmp eq ptr %1, %free_me
  br i1 %cmp.i.not, label %entry.cleanup_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body:                                         ; preds = %pnfs_free_lseg.exit.for.body_crit_edge, %entry.for.body_crit_edge
  %lseg.021 = phi ptr [ %tmp.0, %pnfs_free_lseg.exit.for.body_crit_edge ], [ %1, %entry.for.body_crit_edge ]
  %2 = ptrtoint ptr %lseg.021 to i32
  call void @__asan_load4_noabort(i32 %2)
  %tmp.0 = load ptr, ptr %lseg.021, align 8
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %lseg.021) #16
  br i1 %call.i.i, label %if.end.i.i, label %for.body.list_del.exit_crit_edge

for.body.list_del.exit_crit_edge:                 ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit

if.end.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %lseg.021, i32 0, i32 1
  %3 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %prev.i.i, align 4
  %5 = ptrtoint ptr %lseg.021 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %lseg.021, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %4, ptr %prev1.i.i.i, align 4
  %8 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %6, ptr %4, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %for.body.list_del.exit_crit_edge
  %9 = ptrtoint ptr %lseg.021 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 256 to ptr), ptr %lseg.021, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %lseg.021, i32 0, i32 1
  %10 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %cmp.not.i = icmp eq ptr %lseg.021, null
  br i1 %cmp.not.i, label %list_del.exit.pnfs_free_lseg.exit_crit_edge, label %if.then.i

list_del.exit.pnfs_free_lseg.exit_crit_edge:      ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg.exit

if.then.i:                                        ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #18
  %pls_layout.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.021, i32 0, i32 7
  %11 = ptrtoint ptr %pls_layout.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %pls_layout.i, align 4
  %plh_inode.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %12, i32 0, i32 15
  %13 = ptrtoint ptr %plh_inode.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %plh_inode.i, align 4
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %14, i32 0, i32 8
  %15 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %i_sb.i.i, align 4
  %s_fs_info.i.i.i = getelementptr inbounds %struct.super_block, ptr %16, i32 0, i32 33
  %17 = ptrtoint ptr %s_fs_info.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %s_fs_info.i.i.i, align 16
  %pnfs_curr_ld.i = getelementptr inbounds %struct.nfs_server, ptr %18, i32 0, i32 46
  %19 = ptrtoint ptr %pnfs_curr_ld.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %pnfs_curr_ld.i, align 4
  %free_lseg.i = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %20, i32 0, i32 12
  %21 = ptrtoint ptr %free_lseg.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %free_lseg.i, align 4
  tail call void %22(ptr noundef nonnull %lseg.021) #16
  br label %pnfs_free_lseg.exit

pnfs_free_lseg.exit:                              ; preds = %if.then.i, %list_del.exit.pnfs_free_lseg.exit_crit_edge
  %cmp.not = icmp eq ptr %tmp.0, %free_me
  br i1 %cmp.not, label %pnfs_free_lseg.exit.cleanup_crit_edge, label %pnfs_free_lseg.exit.for.body_crit_edge

pnfs_free_lseg.exit.for.body_crit_edge:           ; preds = %pnfs_free_lseg.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

pnfs_free_lseg.exit.cleanup_crit_edge:            ; preds = %pnfs_free_lseg.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %pnfs_free_lseg.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pnfs_mark_layout_stateid_invalid(ptr noundef %lo, ptr noundef %lseg_list) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %plh_flags = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 8
  tail call void @_set_bit(i32 noundef 6, ptr noundef %plh_flags) #16
  %plh_segs = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 4
  %0 = ptrtoint ptr %plh_segs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %plh_segs, align 8
  %cmp.not44 = icmp eq ptr %1, %plh_segs
  br i1 %cmp.not44, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %pnfs_clear_lseg_state.exit.for.body_crit_edge, %entry.for.body_crit_edge
  %lseg.045 = phi ptr [ %next.0, %pnfs_clear_lseg_state.exit.for.body_crit_edge ], [ %1, %entry.for.body_crit_edge ]
  %2 = ptrtoint ptr %lseg.045 to i32
  call void @__asan_load4_noabort(i32 %2)
  %next.0 = load ptr, ptr %lseg.045, align 8
  %pls_flags.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.045, i32 0, i32 6
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %pls_flags.i) #16
  tail call void @_clear_bit(i32 noundef 3, ptr noundef %pls_flags.i) #16
  %call.i = tail call i32 @_test_and_clear_bit(i32 noundef 0, ptr noundef %pls_flags.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %for.body.if.end.i_crit_edge, label %if.then.i

for.body.if.end.i_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then.i:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %call3.i = tail call fastcc zeroext i1 @pnfs_lseg_dec_and_remove_zero(ptr noundef %lseg.045, ptr noundef %lseg_list) #16
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %for.body.if.end.i_crit_edge
  %call5.i = tail call i32 @_test_and_clear_bit(i32 noundef 2, ptr noundef %pls_flags.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %if.end.i.pnfs_clear_lseg_state.exit_crit_edge, label %if.then7.i

if.end.i.pnfs_clear_lseg_state.exit_crit_edge:    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_clear_lseg_state.exit

if.then7.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %call8.i = tail call fastcc zeroext i1 @pnfs_lseg_dec_and_remove_zero(ptr noundef %lseg.045, ptr noundef %lseg_list) #16
  br label %pnfs_clear_lseg_state.exit

pnfs_clear_lseg_state.exit:                       ; preds = %if.then7.i, %if.end.i.pnfs_clear_lseg_state.exit_crit_edge
  %cmp.not = icmp eq ptr %next.0, %plh_segs
  br i1 %cmp.not, label %pnfs_clear_lseg_state.exit.for.end_crit_edge, label %pnfs_clear_lseg_state.exit.for.body_crit_edge

pnfs_clear_lseg_state.exit.for.body_crit_edge:    ; preds = %pnfs_clear_lseg_state.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

pnfs_clear_lseg_state.exit.for.end_crit_edge:     ; preds = %pnfs_clear_lseg_state.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %pnfs_clear_lseg_state.exit.for.end_crit_edge, %entry.for.end_crit_edge
  %plh_return_iomode.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 12
  %3 = ptrtoint ptr %plh_return_iomode.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %plh_return_iomode.i, align 8
  %plh_return_seq.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 11
  %4 = ptrtoint ptr %plh_return_seq.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %plh_return_seq.i, align 4
  tail call void @_clear_bit(i32 noundef 5, ptr noundef %plh_flags) #16
  %5 = ptrtoint ptr %plh_segs to i32
  call void @__asan_load4_noabort(i32 %5)
  %lseg.015.i = load ptr, ptr %plh_segs, align 8
  %cmp.not16.i = icmp eq ptr %lseg.015.i, %plh_segs
  br i1 %cmp.not16.i, label %for.end.pnfs_clear_layoutreturn_info.exit_crit_edge, label %for.body.lr.ph.i

for.end.pnfs_clear_layoutreturn_info.exit_crit_edge: ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_clear_layoutreturn_info.exit

for.body.lr.ph.i:                                 ; preds = %for.end
  %plh_stateid.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 9
  %plh_barrier.i.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 10
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %lseg.017.i = phi ptr [ %lseg.015.i, %for.body.lr.ph.i ], [ %lseg.0.i, %for.inc.i.for.body.i_crit_edge ]
  %pls_flags.i33 = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.017.i, i32 0, i32 6
  %6 = ptrtoint ptr %pls_flags.i33 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %pls_flags.i33, align 4
  %8 = and i32 %7, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.not.i34 = icmp eq i32 %8, 0
  br i1 %tobool.not.i34, label %for.body.i.for.inc.i_crit_edge, label %if.end.i35

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.end.i35:                                       ; preds = %for.body.i
  %pls_range.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.017.i, i32 0, i32 3
  %9 = ptrtoint ptr %pls_range.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %pls_range.i, align 8
  %11 = ptrtoint ptr %plh_return_iomode.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %plh_return_iomode.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %cmp.not.i.i = icmp eq i32 %12, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %10)
  %cmp2.not.i.i = icmp eq i32 %12, %10
  %13 = or i1 %cmp.not.i.i, %cmp2.not.i.i
  %iomode.addr.0.i.i = select i1 %13, i32 %10, i32 3
  %14 = ptrtoint ptr %plh_return_iomode.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %iomode.addr.0.i.i, ptr %plh_return_iomode.i, align 8
  tail call void @_set_bit(i32 noundef 5, ptr noundef %plh_flags) #16
  %15 = ptrtoint ptr %plh_stateid.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %plh_stateid.i.i, align 4
  %17 = ptrtoint ptr %plh_return_seq.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %plh_return_seq.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.not.i.i = icmp eq i32 %18, 0
  %sub.i.i.i = sub i32 %16, %18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i)
  %cmp.i.i.i = icmp sgt i32 %sub.i.i.i, 0
  %or.cond.i.i = select i1 %tobool.not.i.i, i1 true, i1 %cmp.i.i.i
  br i1 %or.cond.i.i, label %if.then8.i.i, label %if.end.i35.if.end10.i.i_crit_edge

if.end.i35.if.end10.i.i_crit_edge:                ; preds = %if.end.i35
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i.i

if.then8.i.i:                                     ; preds = %if.end.i35
  call void @__sanitizer_cov_trace_pc() #18
  %19 = ptrtoint ptr %plh_return_seq.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %16, ptr %plh_return_seq.i, align 4
  br label %if.end10.i.i

if.end10.i.i:                                     ; preds = %if.then8.i.i, %if.end.i35.if.end10.i.i_crit_edge
  %20 = ptrtoint ptr %plh_barrier.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %plh_barrier.i.i.i, align 8
  %sub.i.i.i.i = sub i32 %16, %21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i.i)
  %cmp.i.i.i.i = icmp sgt i32 %sub.i.i.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool.not.i.i.i = icmp eq i32 %21, 0
  %or.cond.i.i.i = or i1 %tobool.not.i.i.i, %cmp.i.i.i.i
  br i1 %or.cond.i.i.i, label %if.then.i.i.i, label %if.end10.i.i.for.inc.i_crit_edge

if.end10.i.i.for.inc.i_crit_edge:                 ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then.i.i.i:                                    ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %22 = ptrtoint ptr %plh_barrier.i.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %16, ptr %plh_barrier.i.i.i, align 8
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i.i.i, %if.end10.i.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %23 = ptrtoint ptr %lseg.017.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %lseg.0.i = load ptr, ptr %lseg.017.i, align 8
  %cmp.not.i = icmp eq ptr %lseg.0.i, %plh_segs
  br i1 %cmp.not.i, label %for.inc.i.pnfs_clear_layoutreturn_info.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.pnfs_clear_layoutreturn_info.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_clear_layoutreturn_info.exit

pnfs_clear_layoutreturn_info.exit:                ; preds = %for.inc.i.pnfs_clear_layoutreturn_info.exit_crit_edge, %for.end.pnfs_clear_layoutreturn_info.exit_crit_edge
  %plh_return_segs.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 5
  %24 = ptrtoint ptr %plh_return_segs.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %plh_return_segs.i, align 8
  %cmp.not23.i = icmp eq ptr %25, %plh_return_segs.i
  br i1 %cmp.not23.i, label %pnfs_clear_layoutreturn_info.exit.pnfs_free_returned_lsegs.exit_crit_edge, label %for.body.lr.ph.i36

pnfs_clear_layoutreturn_info.exit.pnfs_free_returned_lsegs.exit_crit_edge: ; preds = %pnfs_clear_layoutreturn_info.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_returned_lsegs.exit

for.body.lr.ph.i36:                               ; preds = %pnfs_clear_layoutreturn_info.exit
  %prev.i2.i.i = getelementptr inbounds %struct.list_head, ptr %lseg_list, i32 0, i32 1
  br label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %for.inc.i40.land.rhs.i.i.i_crit_edge, %for.body.lr.ph.i36
  %lseg.024.i = phi ptr [ %25, %for.body.lr.ph.i36 ], [ %next.026.i, %for.inc.i40.land.rhs.i.i.i_crit_edge ]
  %26 = ptrtoint ptr %lseg.024.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %next.026.i = load ptr, ptr %lseg.024.i, align 8
  %offset.i.i.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.024.i, i32 0, i32 3, i32 1
  %27 = ptrtoint ptr %offset.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %offset.i.i.i.i, align 8
  %length.i.i.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.024.i, i32 0, i32 3, i32 2
  %29 = ptrtoint ptr %length.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %length.i.i.i.i, align 8
  %31 = tail call i64 @llvm.uadd.sat.i64(i64 %28, i64 %30) #16
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %31)
  %cmp.i.i.i.i.i = icmp eq i64 %31, -1
  %32 = or i64 %30, %28
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %32)
  %cmp1.i.i.i.i.i = icmp ne i64 %32, 0
  %or.cond.i.i.i.i.i = or i1 %cmp.i.i.i.i.i, %cmp1.i.i.i.i.i
  br i1 %or.cond.i.i.i.i.i, label %if.then.i38, label %land.rhs.i.i.i.for.inc.i40_crit_edge

land.rhs.i.i.i.for.inc.i40_crit_edge:             ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i40

if.then.i38:                                      ; preds = %land.rhs.i.i.i
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %lseg.024.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then.i38.__list_del_entry.exit.i.i_crit_edge

if.then.i38.__list_del_entry.exit.i.i_crit_edge:  ; preds = %if.then.i38
  call void @__sanitizer_cov_trace_pc() #18
  br label %__list_del_entry.exit.i.i

if.end.i.i.i:                                     ; preds = %if.then.i38
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %lseg.024.i, i32 0, i32 1
  %33 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %prev.i.i.i, align 4
  %35 = ptrtoint ptr %lseg.024.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %lseg.024.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %34, ptr %prev1.i.i.i.i, align 4
  %38 = ptrtoint ptr %34 to i32
  call void @__asan_store4_noabort(i32 %38)
  store volatile ptr %36, ptr %34, align 4
  br label %__list_del_entry.exit.i.i

__list_del_entry.exit.i.i:                        ; preds = %if.end.i.i.i, %if.then.i38.__list_del_entry.exit.i.i_crit_edge
  %39 = ptrtoint ptr %prev.i2.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %prev.i2.i.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %lseg.024.i, ptr noundef %40, ptr noundef %lseg_list) #16
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %__list_del_entry.exit.i.i.for.inc.i40_crit_edge

__list_del_entry.exit.i.i.for.inc.i40_crit_edge:  ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i40

if.end.i.i.i.i:                                   ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %41 = ptrtoint ptr %prev.i2.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %lseg.024.i, ptr %prev.i2.i.i, align 4
  %42 = ptrtoint ptr %lseg.024.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %lseg_list, ptr %lseg.024.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %lseg.024.i, i32 0, i32 1
  %43 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %40, ptr %prev3.i.i.i.i, align 4
  %44 = ptrtoint ptr %40 to i32
  call void @__asan_store4_noabort(i32 %44)
  store volatile ptr %lseg.024.i, ptr %40, align 4
  br label %for.inc.i40

for.inc.i40:                                      ; preds = %if.end.i.i.i.i, %__list_del_entry.exit.i.i.for.inc.i40_crit_edge, %land.rhs.i.i.i.for.inc.i40_crit_edge
  %cmp.not.i39 = icmp eq ptr %next.026.i, %plh_return_segs.i
  br i1 %cmp.not.i39, label %for.inc.i40.pnfs_free_returned_lsegs.exit_crit_edge, label %for.inc.i40.land.rhs.i.i.i_crit_edge

for.inc.i40.land.rhs.i.i.i_crit_edge:             ; preds = %for.inc.i40
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs.i.i.i

for.inc.i40.pnfs_free_returned_lsegs.exit_crit_edge: ; preds = %for.inc.i40
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_returned_lsegs.exit

pnfs_free_returned_lsegs.exit:                    ; preds = %for.inc.i40.pnfs_free_returned_lsegs.exit_crit_edge, %pnfs_clear_layoutreturn_info.exit.pnfs_free_returned_lsegs.exit_crit_edge
  %45 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %plh_flags, align 4
  %47 = and i32 %46, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool.not = icmp eq i32 %47, 0
  br i1 %tobool.not, label %pnfs_free_returned_lsegs.exit.if.end_crit_edge, label %land.lhs.true

pnfs_free_returned_lsegs.exit.if.end_crit_edge:   ; preds = %pnfs_free_returned_lsegs.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true:                                    ; preds = %pnfs_free_returned_lsegs.exit
  %call15 = tail call i32 @_test_and_set_bit(i32 noundef 4, ptr noundef %plh_flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call15)
  %tobool16.not = icmp eq i32 %call15, 0
  br i1 %tobool16.not, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %call.i.i.i42 = tail call zeroext i1 @__kasan_check_write(ptr noundef %plh_flags, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !419
  tail call void @llvm.prefetch.p0(ptr %plh_flags, i32 1, i32 3, i32 1) #16
  %48 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %plh_flags, ptr %plh_flags, i32 8, ptr elementtype(i32) %plh_flags) #16, !srcloc !420
  tail call void @_clear_bit(i32 noundef 4, ptr noundef %plh_flags) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !421
  tail call void @wake_up_bit(ptr noundef %plh_flags, i32 noundef 3) #16
  %plh_inode.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 15
  %49 = ptrtoint ptr %plh_inode.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %plh_inode.i, align 4
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %50, i32 0, i32 8
  %51 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %i_sb.i.i, align 4
  %s_fs_info.i.i.i = getelementptr inbounds %struct.super_block, ptr %52, i32 0, i32 33
  %53 = ptrtoint ptr %s_fs_info.i.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %s_fs_info.i.i.i, align 16
  %roc_rpcwaitq.i = getelementptr inbounds %struct.nfs_server, ptr %54, i32 0, i32 47
  tail call void @rpc_wake_up(ptr noundef %roc_rpcwaitq.i) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %pnfs_free_returned_lsegs.exit.if.end_crit_edge
  %55 = ptrtoint ptr %plh_segs to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile ptr, ptr %plh_segs, align 4
  %cmp.i = icmp ne ptr %56, %plh_segs
  %lnot.ext = zext i1 %cmp.i to i32
  ret i32 %lnot.ext
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pnfs_clear_layoutreturn_waitbit(ptr noundef %lo) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %plh_flags = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 8
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %plh_flags, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !419
  tail call void @llvm.prefetch.p0(ptr %plh_flags, i32 1, i32 3, i32 1) #16
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %plh_flags, ptr %plh_flags, i32 8, ptr elementtype(i32) %plh_flags) #16, !srcloc !420
  tail call void @_clear_bit(i32 noundef 4, ptr noundef %plh_flags) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !421
  tail call void @wake_up_bit(ptr noundef %plh_flags, i32 noundef 3) #16
  %plh_inode = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 15
  %1 = ptrtoint ptr %plh_inode to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %plh_inode, align 4
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %2, i32 0, i32 8
  %3 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 33
  %5 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %s_fs_info.i.i, align 16
  %roc_rpcwaitq = getelementptr inbounds %struct.nfs_server, ptr %6, i32 0, i32 47
  tail call void @rpc_wake_up(ptr noundef %roc_rpcwaitq) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_put_lseg(ptr noundef %lseg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %lseg, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %do.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %0 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %0, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %do.body.do.end10_crit_edge, label %do.end, !prof !413

do.body.do.end10_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end10

do.end:                                           ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %pls_refcount = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %pls_refcount, i32 noundef 4) #16
  %1 = ptrtoint ptr %pls_refcount to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile i32, ptr %pls_refcount, align 4
  %pls_flags = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 6
  %3 = ptrtoint ptr %pls_flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %pls_flags, align 4
  %and1.i = and i32 %4, 1
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.32, ptr noundef nonnull %lseg, i32 noundef %2, i32 noundef %and1.i) #19
  br label %do.end10

do.end10:                                         ; preds = %do.end, %do.body.do.end10_crit_edge
  %pls_layout = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 7
  %5 = ptrtoint ptr %pls_layout to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %pls_layout, align 4
  %plh_inode = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %6, i32 0, i32 15
  %7 = ptrtoint ptr %plh_inode to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %plh_inode, align 4
  %pls_refcount11 = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 4
  %i_lock = getelementptr inbounds %struct.inode, ptr %8, i32 0, i32 18
  %call12 = tail call zeroext i1 @refcount_dec_and_lock(ptr noundef %pls_refcount11, ptr noundef %i_lock) #16
  br i1 %call12, label %if.then13, label %do.end10.cleanup_crit_edge

do.end10.cleanup_crit_edge:                       ; preds = %do.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then13:                                        ; preds = %do.end10
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %6, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %6, i32 1, i32 3, i32 1) #16
  %9 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %6, ptr %6, i32 1, ptr elementtype(i32) %6) #16, !srcloc !415
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %9, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then13.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !416

if.then13.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then13
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %10 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %10)
  %.not.i.i.i.i = icmp sgt i32 %10, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !413

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_get_layout_hdr.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then13.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then13.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %6, i32 noundef %.sink.i.i.i.i) #16
  br label %pnfs_get_layout_hdr.exit

pnfs_get_layout_hdr.exit:                         ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge
  tail call fastcc void @pnfs_layout_remove_lseg(ptr noundef %6, ptr noundef nonnull %lseg)
  %pls_flags.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 6
  %call.i = tail call i32 @_test_and_clear_bit(i32 noundef 3, ptr noundef %pls_flags.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %pnfs_get_layout_hdr.exit.if.then.i34_crit_edge, label %land.lhs.true.i

pnfs_get_layout_hdr.exit.if.then.i34_crit_edge:   ; preds = %pnfs_get_layout_hdr.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i34

land.lhs.true.i:                                  ; preds = %pnfs_get_layout_hdr.exit
  %plh_flags.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %6, i32 0, i32 8
  %11 = ptrtoint ptr %plh_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %plh_flags.i.i, align 4
  %13 = and i32 %12, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp.i.i = icmp eq i32 %13, 0
  br i1 %cmp.i.i, label %if.then.i, label %land.lhs.true.i.if.then.i34_crit_edge

land.lhs.true.i.if.then.i34_crit_edge:            ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i34

if.then.i:                                        ; preds = %land.lhs.true.i
  %pls_range.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 3
  %14 = ptrtoint ptr %pls_range.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %pls_range.i, align 8
  %plh_return_iomode.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %6, i32 0, i32 12
  %16 = ptrtoint ptr %plh_return_iomode.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %plh_return_iomode.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp.not.i.i = icmp eq i32 %17, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %17, i32 %15)
  %cmp2.not.i.i = icmp eq i32 %17, %15
  %18 = or i1 %cmp.not.i.i, %cmp2.not.i.i
  %iomode.addr.0.i.i = select i1 %18, i32 %15, i32 3
  %19 = ptrtoint ptr %plh_return_iomode.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %iomode.addr.0.i.i, ptr %plh_return_iomode.i.i, align 8
  tail call void @_set_bit(i32 noundef 5, ptr noundef %plh_flags.i.i) #16
  %plh_stateid.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %6, i32 0, i32 9
  %20 = ptrtoint ptr %plh_stateid.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %plh_stateid.i.i, align 4
  %plh_return_seq.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %6, i32 0, i32 11
  %22 = ptrtoint ptr %plh_return_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %plh_return_seq.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool.not.i.i = icmp eq i32 %23, 0
  %sub.i.i.i = sub i32 %21, %23
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i)
  %cmp.i.i.i = icmp sgt i32 %sub.i.i.i, 0
  %or.cond.i.i = select i1 %tobool.not.i.i, i1 true, i1 %cmp.i.i.i
  br i1 %or.cond.i.i, label %if.then8.i.i, label %if.then.i.if.end10.i.i_crit_edge

if.then.i.if.end10.i.i_crit_edge:                 ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i.i

if.then8.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %24 = ptrtoint ptr %plh_return_seq.i.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %21, ptr %plh_return_seq.i.i, align 4
  br label %if.end10.i.i

if.end10.i.i:                                     ; preds = %if.then8.i.i, %if.then.i.if.end10.i.i_crit_edge
  %plh_barrier.i.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %6, i32 0, i32 10
  %25 = ptrtoint ptr %plh_barrier.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %plh_barrier.i.i.i, align 8
  %sub.i.i.i.i = sub i32 %21, %26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i.i)
  %cmp.i.i.i.i = icmp sgt i32 %sub.i.i.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.not.i.i.i = icmp eq i32 %26, 0
  %or.cond.i.i.i = or i1 %tobool.not.i.i.i, %cmp.i.i.i.i
  br i1 %or.cond.i.i.i, label %if.then.i.i.i, label %if.end10.i.i.pnfs_set_plh_return_info.exit.i_crit_edge

if.end10.i.i.pnfs_set_plh_return_info.exit.i_crit_edge: ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_set_plh_return_info.exit.i

if.then.i.i.i:                                    ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %27 = ptrtoint ptr %plh_barrier.i.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %21, ptr %plh_barrier.i.i.i, align 8
  br label %pnfs_set_plh_return_info.exit.i

pnfs_set_plh_return_info.exit.i:                  ; preds = %if.then.i.i.i, %if.end10.i.i.pnfs_set_plh_return_info.exit.i_crit_edge
  %plh_return_segs.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %6, i32 0, i32 5
  %call.i.i.i33 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef nonnull %lseg) #16
  br i1 %call.i.i.i33, label %if.end.i.i.i, label %pnfs_set_plh_return_info.exit.i.__list_del_entry.exit.i.i_crit_edge

pnfs_set_plh_return_info.exit.i.__list_del_entry.exit.i.i_crit_edge: ; preds = %pnfs_set_plh_return_info.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %__list_del_entry.exit.i.i

if.end.i.i.i:                                     ; preds = %pnfs_set_plh_return_info.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %lseg, i32 0, i32 1
  %28 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %prev.i.i.i, align 4
  %30 = ptrtoint ptr %lseg to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %lseg, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %29, ptr %prev1.i.i.i.i, align 4
  %33 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %31, ptr %29, align 4
  br label %__list_del_entry.exit.i.i

__list_del_entry.exit.i.i:                        ; preds = %if.end.i.i.i, %pnfs_set_plh_return_info.exit.i.__list_del_entry.exit.i.i_crit_edge
  %prev.i2.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %6, i32 0, i32 5, i32 1
  %34 = ptrtoint ptr %prev.i2.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %prev.i2.i.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef nonnull %lseg, ptr noundef %35, ptr noundef %plh_return_segs.i) #16
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %__list_del_entry.exit.i.i.pnfs_cache_lseg_for_layoutreturn.exit.thread39_crit_edge

__list_del_entry.exit.i.i.pnfs_cache_lseg_for_layoutreturn.exit.thread39_crit_edge: ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_cache_lseg_for_layoutreturn.exit.thread39

if.end.i.i.i.i:                                   ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %36 = ptrtoint ptr %prev.i2.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %lseg, ptr %prev.i2.i.i, align 4
  %37 = ptrtoint ptr %lseg to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %plh_return_segs.i, ptr %lseg, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %lseg, i32 0, i32 1
  %38 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %35, ptr %prev3.i.i.i.i, align 4
  %39 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %lseg, ptr %35, align 4
  br label %pnfs_cache_lseg_for_layoutreturn.exit.thread39

pnfs_cache_lseg_for_layoutreturn.exit.thread39:   ; preds = %if.end.i.i.i.i, %__list_del_entry.exit.i.i.pnfs_cache_lseg_for_layoutreturn.exit.thread39_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  br label %pnfs_free_lseg.exit

if.then.i34:                                      ; preds = %land.lhs.true.i.if.then.i34_crit_edge, %pnfs_get_layout_hdr.exit.if.then.i34_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  %40 = ptrtoint ptr %pls_layout to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %pls_layout, align 4
  %plh_inode.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %41, i32 0, i32 15
  %42 = ptrtoint ptr %plh_inode.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %plh_inode.i, align 4
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %43, i32 0, i32 8
  %44 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %i_sb.i.i, align 4
  %s_fs_info.i.i.i = getelementptr inbounds %struct.super_block, ptr %45, i32 0, i32 33
  %46 = ptrtoint ptr %s_fs_info.i.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %s_fs_info.i.i.i, align 16
  %pnfs_curr_ld.i = getelementptr inbounds %struct.nfs_server, ptr %47, i32 0, i32 46
  %48 = ptrtoint ptr %pnfs_curr_ld.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %pnfs_curr_ld.i, align 4
  %free_lseg.i = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %49, i32 0, i32 12
  %50 = ptrtoint ptr %free_lseg.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %free_lseg.i, align 4
  tail call void %51(ptr noundef nonnull %lseg) #16
  br label %pnfs_free_lseg.exit

pnfs_free_lseg.exit:                              ; preds = %if.then.i34, %pnfs_cache_lseg_for_layoutreturn.exit.thread39
  tail call void @pnfs_put_layout_hdr(ptr noundef %6)
  br label %cleanup

cleanup:                                          ; preds = %pnfs_free_lseg.exit, %do.end10.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pnfs_layout_remove_lseg(ptr noundef %lo, ptr noundef %lseg) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pls_flags = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 6
  %0 = ptrtoint ptr %pls_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %pls_flags, align 4
  %and1.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %do.end, !prof !413

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.2, i32 noundef 554, i32 noundef 9, ptr noundef null) #16
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  %call.i.i54 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %lseg) #16
  br i1 %call.i.i54, label %if.end.i.i, label %if.end.list_del_init.exit_crit_edge

if.end.list_del_init.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %lseg, i32 0, i32 1
  %2 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prev.i.i, align 4
  %4 = ptrtoint ptr %lseg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %lseg, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %3, ptr %prev1.i.i.i, align 4
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %5, ptr %3, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %if.end.list_del_init.exit_crit_edge
  %8 = ptrtoint ptr %lseg to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %lseg, ptr %lseg, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %lseg, i32 0, i32 1
  %9 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %lseg, ptr %prev.i3.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %lo, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !422
  tail call void @llvm.prefetch.p0(ptr %lo, i32 1, i32 3, i32 1) #16
  %10 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %lo, ptr %lo, i32 1, ptr elementtype(i32) %lo) #16, !srcloc !423
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %10, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp slt i32 %asmresult.i.i.i.i.i, 2
  br i1 %cmp.i.i, label %if.then3.i.i, label %list_del_init.exit.refcount_dec.exit_crit_edge, !prof !416

list_del_init.exit.refcount_dec.exit_crit_edge:   ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %refcount_dec.exit

if.then3.i.i:                                     ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @refcount_warn_saturate(ptr noundef %lo, i32 noundef 4) #16
  br label %refcount_dec.exit

refcount_dec.exit:                                ; preds = %if.then3.i.i, %list_del_init.exit.refcount_dec.exit_crit_edge
  %11 = ptrtoint ptr %pls_flags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %pls_flags, align 4
  %13 = and i32 %12, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool22.not = icmp eq i32 %13, 0
  br i1 %tobool22.not, label %if.end24, label %refcount_dec.exit.if.end39_crit_edge

refcount_dec.exit.if.end39_crit_edge:             ; preds = %refcount_dec.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end39

if.end24:                                         ; preds = %refcount_dec.exit
  %plh_segs = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 4
  %14 = ptrtoint ptr %plh_segs to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %plh_segs, align 4
  %cmp.i.not = icmp eq ptr %15, %plh_segs
  br i1 %cmp.i.not, label %land.lhs.true, label %if.end24.if.end39_crit_edge

if.end24.if.end39_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end39

land.lhs.true:                                    ; preds = %if.end24
  %plh_flags = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 8
  %16 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %plh_flags, align 4
  %18 = and i32 %17, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool28.not = icmp eq i32 %18, 0
  br i1 %tobool28.not, label %land.lhs.true29, label %land.lhs.true.if.end39_crit_edge

land.lhs.true.if.end39_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end39

land.lhs.true29:                                  ; preds = %land.lhs.true
  %19 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %plh_flags, align 4
  %21 = and i32 %20, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool32.not = icmp eq i32 %21, 0
  br i1 %tobool32.not, label %if.then33, label %land.lhs.true29.if.end39_crit_edge

land.lhs.true29.if.end39_crit_edge:               ; preds = %land.lhs.true29
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end39

if.then33:                                        ; preds = %land.lhs.true29
  %plh_outstanding = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %plh_outstanding, i32 noundef 4) #16
  %22 = ptrtoint ptr %plh_outstanding to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %plh_outstanding, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp = icmp eq i32 %23, 0
  br i1 %cmp, label %if.then35, label %if.then33.if.end37_crit_edge

if.then33.if.end37_crit_edge:                     ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end37

if.then35:                                        ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_set_bit(i32 noundef 6, ptr noundef %plh_flags) #16
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %if.then33.if.end37_crit_edge
  tail call void @_clear_bit(i32 noundef 2, ptr noundef %plh_flags) #16
  br label %if.end39

if.end39:                                         ; preds = %if.end37, %land.lhs.true29.if.end39_crit_edge, %land.lhs.true.if.end39_crit_edge, %if.end24.if.end39_crit_edge, %refcount_dec.exit.if.end39_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pnfs_mark_matching_lsegs_invalid(ptr noundef %lo, ptr noundef %tmp_list, ptr noundef readonly %recall_range, i32 noundef %seq) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %0 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %0, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end5_crit_edge, label %do.end, !prof !413

entry.do.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end5

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.33, ptr noundef nonnull @.str.34, ptr noundef %lo) #19
  br label %do.end5

do.end5:                                          ; preds = %do.end, %entry.do.end5_crit_edge
  %plh_segs = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 4
  %1 = ptrtoint ptr %plh_segs to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %plh_segs, align 4
  %cmp.i.not = icmp eq ptr %2, %plh_segs
  br i1 %cmp.i.not, label %do.end5.cleanup_crit_edge, label %for.cond.preheader

do.end5.cleanup_crit_edge:                        ; preds = %do.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond.preheader:                               ; preds = %do.end5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %seq)
  %cmp.not.i = icmp eq i32 %seq, 0
  %cmp1.i = icmp eq ptr %recall_range, null
  %offset1.i.i.i = getelementptr inbounds %struct.pnfs_layout_range, ptr %recall_range, i32 0, i32 1
  %length2.i.i.i = getelementptr inbounds %struct.pnfs_layout_range, ptr %recall_range, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.cond.preheader
  %lseg.097 = phi ptr [ %2, %for.cond.preheader ], [ %next.098, %for.inc.for.body_crit_edge ]
  %remaining.096 = phi i32 [ 0, %for.cond.preheader ], [ %remaining.1, %for.inc.for.body_crit_edge ]
  %3 = ptrtoint ptr %lseg.097 to i32
  call void @__asan_load4_noabort(i32 %3)
  %next.098 = load ptr, ptr %lseg.097, align 8
  br i1 %cmp.not.i, label %for.body.if.end.i_crit_edge, label %land.lhs.true.i

for.body.if.end.i_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %for.body
  %pls_seq.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.097, i32 0, i32 5
  %4 = ptrtoint ptr %pls_seq.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pls_seq.i, align 4
  %sub.i.i = sub i32 %5, %seq
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp sgt i32 %sub.i.i, 0
  br i1 %cmp.i.i, label %land.lhs.true.i.for.inc_crit_edge, label %land.lhs.true.i.if.end.i_crit_edge

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

land.lhs.true.i.for.inc_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %for.body.if.end.i_crit_edge
  br i1 %cmp1.i, label %if.end.i.do.body23_crit_edge, label %if.end3.i

if.end.i.do.body23_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body23

if.end3.i:                                        ; preds = %if.end.i
  %6 = ptrtoint ptr %recall_range to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %recall_range, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %7)
  %cmp.i8.i = icmp eq i32 %7, 3
  br i1 %cmp.i8.i, label %if.end3.i.land.rhs.i.i_crit_edge, label %lor.lhs.false.i.i

if.end3.i.land.rhs.i.i_crit_edge:                 ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs.i.i

lor.lhs.false.i.i:                                ; preds = %if.end3.i
  %pls_range.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.097, i32 0, i32 3
  %8 = ptrtoint ptr %pls_range.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %pls_range.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %9, i32 %7)
  %cmp3.i.i = icmp eq i32 %9, %7
  br i1 %cmp3.i.i, label %lor.lhs.false.i.i.land.rhs.i.i_crit_edge, label %lor.lhs.false.i.i.for.inc_crit_edge

lor.lhs.false.i.i.for.inc_crit_edge:              ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

lor.lhs.false.i.i.land.rhs.i.i_crit_edge:         ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs.i.i

land.rhs.i.i:                                     ; preds = %lor.lhs.false.i.i.land.rhs.i.i_crit_edge, %if.end3.i.land.rhs.i.i_crit_edge
  %offset.i.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.097, i32 0, i32 3, i32 1
  %10 = ptrtoint ptr %offset.i.i.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %offset.i.i.i, align 8
  %length.i.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.097, i32 0, i32 3, i32 2
  %12 = ptrtoint ptr %length.i.i.i to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %length.i.i.i, align 8
  %14 = tail call i64 @llvm.uadd.sat.i64(i64 %11, i64 %13) #16
  %15 = ptrtoint ptr %offset1.i.i.i to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %offset1.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %14)
  %cmp.i.i.i.i = icmp eq i64 %14, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %16, i64 %14)
  %cmp1.i.i.i.i = icmp ult i64 %16, %14
  %or.cond.i.i.i.i = or i1 %cmp.i.i.i.i, %cmp1.i.i.i.i
  br i1 %or.cond.i.i.i.i, label %pnfs_match_lseg_recall.exit, label %land.rhs.i.i.for.inc_crit_edge

land.rhs.i.i.for.inc_crit_edge:                   ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

pnfs_match_lseg_recall.exit:                      ; preds = %land.rhs.i.i
  %17 = ptrtoint ptr %length2.i.i.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %length2.i.i.i, align 8
  %19 = tail call i64 @llvm.uadd.sat.i64(i64 %16, i64 %18) #16
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %19)
  %cmp2.i.i.i.i = icmp eq i64 %19, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %11, i64 %19)
  %cmp3.i.i.i.i = icmp ult i64 %11, %19
  %spec.select.i.i.i.i = or i1 %cmp2.i.i.i.i, %cmp3.i.i.i.i
  br i1 %spec.select.i.i.i.i, label %pnfs_match_lseg_recall.exit.do.body23_crit_edge, label %pnfs_match_lseg_recall.exit.for.inc_crit_edge

pnfs_match_lseg_recall.exit.for.inc_crit_edge:    ; preds = %pnfs_match_lseg_recall.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

pnfs_match_lseg_recall.exit.do.body23_crit_edge:  ; preds = %pnfs_match_lseg_recall.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body23

do.body23:                                        ; preds = %pnfs_match_lseg_recall.exit.do.body23_crit_edge, %if.end.i.do.body23_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %20 = load i32, ptr @nfs_debug, align 4
  %and24 = and i32 %20, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and24)
  %tobool25.not = icmp eq i32 %and24, 0
  br i1 %tobool25.not, label %do.body23.do.end42_crit_edge, label %do.end35, !prof !413

do.body23.do.end42_crit_edge:                     ; preds = %do.body23
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end42

do.end35:                                         ; preds = %do.body23
  call void @__sanitizer_cov_trace_pc() #18
  %pls_range = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.097, i32 0, i32 3
  %21 = ptrtoint ptr %pls_range to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %pls_range, align 8
  %pls_seq = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.097, i32 0, i32 5
  %23 = ptrtoint ptr %pls_seq to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %pls_seq, align 4
  %offset = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.097, i32 0, i32 3, i32 1
  %25 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %offset, align 8
  %length = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.097, i32 0, i32 3, i32 2
  %27 = ptrtoint ptr %length to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %length, align 8
  %call39 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.36, ptr noundef nonnull @.str.34, ptr noundef %lseg.097, i32 noundef %22, i32 noundef %24, i64 noundef %26, i64 noundef %28) #19
  br label %do.end42

do.end42:                                         ; preds = %do.end35, %do.body23.do.end42_crit_edge
  %pls_flags.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.097, i32 0, i32 6
  %call.i = tail call i32 @_test_and_clear_bit(i32 noundef 0, ptr noundef %pls_flags.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %do.end42.mark_lseg_invalid.exit.thread_crit_edge, label %do.body.i

do.end42.mark_lseg_invalid.exit.thread_crit_edge: ; preds = %do.end42
  call void @__sanitizer_cov_trace_pc() #18
  br label %mark_lseg_invalid.exit.thread

do.body.i:                                        ; preds = %do.end42
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %29 = load i32, ptr @nfs_debug, align 4
  %and.i = and i32 %29, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %do.body.i.mark_lseg_invalid.exit_crit_edge, label %do.end.i, !prof !413

do.body.i.mark_lseg_invalid.exit_crit_edge:       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mark_lseg_invalid.exit

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %pls_refcount.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.097, i32 0, i32 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %pls_refcount.i, i32 noundef 4) #16
  %30 = ptrtoint ptr %pls_refcount.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %pls_refcount.i, align 4
  %call7.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.116, ptr noundef nonnull @.str.117, ptr noundef %lseg.097, i32 noundef %31) #19
  br label %mark_lseg_invalid.exit

mark_lseg_invalid.exit:                           ; preds = %do.end.i, %do.body.i.mark_lseg_invalid.exit_crit_edge
  %call10.i = tail call fastcc zeroext i1 @pnfs_lseg_dec_and_remove_zero(ptr noundef %lseg.097, ptr noundef %tmp_list) #16
  br i1 %call10.i, label %mark_lseg_invalid.exit.for.inc_crit_edge, label %mark_lseg_invalid.exit.mark_lseg_invalid.exit.thread_crit_edge

mark_lseg_invalid.exit.mark_lseg_invalid.exit.thread_crit_edge: ; preds = %mark_lseg_invalid.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %mark_lseg_invalid.exit.thread

mark_lseg_invalid.exit.for.inc_crit_edge:         ; preds = %mark_lseg_invalid.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

mark_lseg_invalid.exit.thread:                    ; preds = %mark_lseg_invalid.exit.mark_lseg_invalid.exit.thread_crit_edge, %do.end42.mark_lseg_invalid.exit.thread_crit_edge
  %inc93 = add i32 %remaining.096, 1
  br label %for.inc

for.inc:                                          ; preds = %mark_lseg_invalid.exit.thread, %mark_lseg_invalid.exit.for.inc_crit_edge, %pnfs_match_lseg_recall.exit.for.inc_crit_edge, %land.rhs.i.i.for.inc_crit_edge, %lor.lhs.false.i.i.for.inc_crit_edge, %land.lhs.true.i.for.inc_crit_edge
  %remaining.1 = phi i32 [ %remaining.096, %pnfs_match_lseg_recall.exit.for.inc_crit_edge ], [ %inc93, %mark_lseg_invalid.exit.thread ], [ %remaining.096, %mark_lseg_invalid.exit.for.inc_crit_edge ], [ %remaining.096, %land.lhs.true.i.for.inc_crit_edge ], [ %remaining.096, %lor.lhs.false.i.i.for.inc_crit_edge ], [ %remaining.096, %land.rhs.i.i.for.inc_crit_edge ]
  %cmp.not = icmp eq ptr %next.098, %plh_segs
  br i1 %cmp.not, label %do.body53, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

do.body53:                                        ; preds = %for.inc
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %32 = load i32, ptr @nfs_debug, align 4
  %and54 = and i32 %32, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and54)
  %tobool55.not = icmp eq i32 %and54, 0
  br i1 %tobool55.not, label %do.body53.cleanup_crit_edge, label %do.end65, !prof !413

do.body53.cleanup_crit_edge:                      ; preds = %do.body53
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end65:                                         ; preds = %do.body53
  call void @__sanitizer_cov_trace_pc() #18
  %call67 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.39, ptr noundef nonnull @.str.34, i32 noundef %remaining.1) #19
  br label %cleanup

cleanup:                                          ; preds = %do.end65, %do.body53.cleanup_crit_edge, %do.end5.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %do.end5.cleanup_crit_edge ], [ %remaining.1, %do.end65 ], [ %remaining.1, %do.body53.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_destroy_layout(ptr noundef %nfsi) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @__pnfs_destroy_layout(ptr noundef %nfsi)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__pnfs_destroy_layout(ptr noundef %nfsi) unnamed_addr #0 align 64 {
entry:
  %tmp_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp_list) #16
  %0 = getelementptr inbounds %struct.list_head, ptr %tmp_list, i32 0, i32 1
  %1 = ptrtoint ptr %tmp_list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %tmp_list, ptr %tmp_list, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %tmp_list, ptr %0, align 4
  %i_lock = getelementptr inbounds %struct.nfs_inode, ptr %nfsi, i32 0, i32 21, i32 18
  call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %layout = getelementptr inbounds %struct.nfs_inode, ptr %nfsi, i32 0, i32 17
  %3 = ptrtoint ptr %layout to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %layout, align 8
  %tobool.not = icmp eq ptr %4, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %vfs_inode = getelementptr inbounds %struct.nfs_inode, ptr %nfsi, i32 0, i32 21
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %4, i32 noundef 4) #16
  call void @llvm.prefetch.p0(ptr nonnull %4, i32 1, i32 3, i32 1) #16
  %5 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %4, ptr nonnull %4, i32 1, ptr nonnull elementtype(i32) %4) #16, !srcloc !415
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %5, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !416

if.then.if.end15.sink.split.i.i.i.i_crit_edge:    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %6 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %6)
  %.not.i.i.i.i = icmp sgt i32 %6, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !413

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_get_layout_hdr.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef nonnull %4, i32 noundef %.sink.i.i.i.i) #16
  br label %pnfs_get_layout_hdr.exit

pnfs_get_layout_hdr.exit:                         ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge
  %call = call i32 @pnfs_mark_layout_stateid_invalid(ptr noundef nonnull %4, ptr noundef nonnull %tmp_list)
  %plh_flags.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %4, i32 0, i32 8
  %call.i = call i32 @_test_and_clear_bit(i32 noundef 0, ptr noundef %plh_flags.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %pnfs_get_layout_hdr.exit.pnfs_layout_clear_fail_bit.exit_crit_edge, label %if.then.i

pnfs_get_layout_hdr.exit.pnfs_layout_clear_fail_bit.exit_crit_edge: ; preds = %pnfs_get_layout_hdr.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_layout_clear_fail_bit.exit

if.then.i:                                        ; preds = %pnfs_get_layout_hdr.exit
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %4, i32 noundef 4) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !422
  call void @llvm.prefetch.p0(ptr nonnull %4, i32 1, i32 3, i32 1) #16
  %7 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %4, ptr nonnull %4, i32 1, ptr nonnull elementtype(i32) %4) #16, !srcloc !423
  %asmresult.i.i.i.i.i.i17 = extractvalue { i32, i32, i32 } %7, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i17)
  %cmp.i.i.i = icmp slt i32 %asmresult.i.i.i.i.i.i17, 2
  br i1 %cmp.i.i.i, label %if.then3.i.i.i, label %if.then.i.pnfs_layout_clear_fail_bit.exit_crit_edge, !prof !416

if.then.i.pnfs_layout_clear_fail_bit.exit_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_layout_clear_fail_bit.exit

if.then3.i.i.i:                                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @refcount_warn_saturate(ptr noundef nonnull %4, i32 noundef 4) #16
  br label %pnfs_layout_clear_fail_bit.exit

pnfs_layout_clear_fail_bit.exit:                  ; preds = %if.then3.i.i.i, %if.then.i.pnfs_layout_clear_fail_bit.exit_crit_edge, %pnfs_get_layout_hdr.exit.pnfs_layout_clear_fail_bit.exit_crit_edge
  %call.i19 = call i32 @_test_and_clear_bit(i32 noundef 1, ptr noundef %plh_flags.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i19)
  %tobool.not.i20 = icmp eq i32 %call.i19, 0
  br i1 %tobool.not.i20, label %pnfs_layout_clear_fail_bit.exit.pnfs_layout_clear_fail_bit.exit26_crit_edge, label %if.then.i24

pnfs_layout_clear_fail_bit.exit.pnfs_layout_clear_fail_bit.exit26_crit_edge: ; preds = %pnfs_layout_clear_fail_bit.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_layout_clear_fail_bit.exit26

if.then.i24:                                      ; preds = %pnfs_layout_clear_fail_bit.exit
  %call.i.i.i.i.i21 = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %4, i32 noundef 4) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !422
  call void @llvm.prefetch.p0(ptr nonnull %4, i32 1, i32 3, i32 1) #16
  %8 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %4, ptr nonnull %4, i32 1, ptr nonnull elementtype(i32) %4) #16, !srcloc !423
  %asmresult.i.i.i.i.i.i22 = extractvalue { i32, i32, i32 } %8, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i22)
  %cmp.i.i.i23 = icmp slt i32 %asmresult.i.i.i.i.i.i22, 2
  br i1 %cmp.i.i.i23, label %if.then3.i.i.i25, label %if.then.i24.pnfs_layout_clear_fail_bit.exit26_crit_edge, !prof !416

if.then.i24.pnfs_layout_clear_fail_bit.exit26_crit_edge: ; preds = %if.then.i24
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_layout_clear_fail_bit.exit26

if.then3.i.i.i25:                                 ; preds = %if.then.i24
  call void @__sanitizer_cov_trace_pc() #18
  call void @refcount_warn_saturate(ptr noundef nonnull %4, i32 noundef 4) #16
  br label %pnfs_layout_clear_fail_bit.exit26

pnfs_layout_clear_fail_bit.exit26:                ; preds = %if.then3.i.i.i25, %if.then.i24.pnfs_layout_clear_fail_bit.exit26_crit_edge, %pnfs_layout_clear_fail_bit.exit.pnfs_layout_clear_fail_bit.exit26_crit_edge
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  %9 = ptrtoint ptr %tmp_list to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile ptr, ptr %tmp_list, align 4
  %cmp.i.not.i = icmp eq ptr %10, %tmp_list
  br i1 %cmp.i.not.i, label %pnfs_layout_clear_fail_bit.exit26.pnfs_free_lseg_list.exit_crit_edge, label %pnfs_layout_clear_fail_bit.exit26.for.body.i_crit_edge

pnfs_layout_clear_fail_bit.exit26.for.body.i_crit_edge: ; preds = %pnfs_layout_clear_fail_bit.exit26
  br label %for.body.i

pnfs_layout_clear_fail_bit.exit26.pnfs_free_lseg_list.exit_crit_edge: ; preds = %pnfs_layout_clear_fail_bit.exit26
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg_list.exit

for.body.i:                                       ; preds = %pnfs_free_lseg.exit.i.for.body.i_crit_edge, %pnfs_layout_clear_fail_bit.exit26.for.body.i_crit_edge
  %lseg.021.i = phi ptr [ %tmp.0.i, %pnfs_free_lseg.exit.i.for.body.i_crit_edge ], [ %10, %pnfs_layout_clear_fail_bit.exit26.for.body.i_crit_edge ]
  %11 = ptrtoint ptr %lseg.021.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %tmp.0.i = load ptr, ptr %lseg.021.i, align 8
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %lseg.021.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %for.body.i.list_del.exit.i_crit_edge

for.body.i.list_del.exit.i_crit_edge:             ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %lseg.021.i, i32 0, i32 1
  %12 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %prev.i.i.i, align 4
  %14 = ptrtoint ptr %lseg.021.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %lseg.021.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %13, ptr %prev1.i.i.i.i, align 4
  %17 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %15, ptr %13, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %for.body.i.list_del.exit.i_crit_edge
  %18 = ptrtoint ptr %lseg.021.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr inttoptr (i32 256 to ptr), ptr %lseg.021.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %lseg.021.i, i32 0, i32 1
  %19 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %lseg.021.i, null
  br i1 %cmp.not.i.i, label %list_del.exit.i.pnfs_free_lseg.exit.i_crit_edge, label %if.then.i.i

list_del.exit.i.pnfs_free_lseg.exit.i_crit_edge:  ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg.exit.i

if.then.i.i:                                      ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %pls_layout.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.021.i, i32 0, i32 7
  %20 = ptrtoint ptr %pls_layout.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pls_layout.i.i, align 4
  %plh_inode.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %21, i32 0, i32 15
  %22 = ptrtoint ptr %plh_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %plh_inode.i.i, align 4
  %i_sb.i.i.i = getelementptr inbounds %struct.inode, ptr %23, i32 0, i32 8
  %24 = ptrtoint ptr %i_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %i_sb.i.i.i, align 4
  %s_fs_info.i.i.i.i = getelementptr inbounds %struct.super_block, ptr %25, i32 0, i32 33
  %26 = ptrtoint ptr %s_fs_info.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %s_fs_info.i.i.i.i, align 16
  %pnfs_curr_ld.i.i = getelementptr inbounds %struct.nfs_server, ptr %27, i32 0, i32 46
  %28 = ptrtoint ptr %pnfs_curr_ld.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %pnfs_curr_ld.i.i, align 4
  %free_lseg.i.i = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %29, i32 0, i32 12
  %30 = ptrtoint ptr %free_lseg.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %free_lseg.i.i, align 4
  call void %31(ptr noundef nonnull %lseg.021.i) #16
  br label %pnfs_free_lseg.exit.i

pnfs_free_lseg.exit.i:                            ; preds = %if.then.i.i, %list_del.exit.i.pnfs_free_lseg.exit.i_crit_edge
  %cmp.not.i = icmp eq ptr %tmp.0.i, %tmp_list
  br i1 %cmp.not.i, label %pnfs_free_lseg.exit.i.pnfs_free_lseg_list.exit_crit_edge, label %pnfs_free_lseg.exit.i.for.body.i_crit_edge

pnfs_free_lseg.exit.i.for.body.i_crit_edge:       ; preds = %pnfs_free_lseg.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

pnfs_free_lseg.exit.i.pnfs_free_lseg_list.exit_crit_edge: ; preds = %pnfs_free_lseg.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg_list.exit

pnfs_free_lseg_list.exit:                         ; preds = %pnfs_free_lseg.exit.i.pnfs_free_lseg_list.exit_crit_edge, %pnfs_layout_clear_fail_bit.exit26.pnfs_free_lseg_list.exit_crit_edge
  %call4 = call i32 @nfs_commit_inode(ptr noundef %vfs_inode, i32 noundef 0) #16
  call void @pnfs_put_layout_hdr(ptr noundef nonnull %4)
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  br label %if.end

if.end:                                           ; preds = %if.else, %pnfs_free_lseg_list.exit
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp_list) #16
  ret ptr %4
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_destroy_layout_final(ptr noundef %nfsi) local_unnamed_addr #0 align 64 {
entry:
  %__wbq_entry = alloca %struct.wait_bit_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @__pnfs_destroy_layout(ptr noundef %nfsi)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.if.end15_crit_edge, label %do.body1

entry.if.end15_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

do.body1:                                         ; preds = %entry
  tail call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 792) #16
  %i_lock.i = getelementptr inbounds %struct.nfs_inode, ptr %nfsi, i32 0, i32 21, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock.i) #16
  %layout.i = getelementptr inbounds %struct.nfs_inode, ptr %nfsi, i32 0, i32 17
  %0 = ptrtoint ptr %layout.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %layout.i, align 8
  %cmp.i.not = icmp eq ptr %1, %call
  tail call void @_raw_spin_unlock(ptr noundef %i_lock.i) #16
  br i1 %cmp.i.not, label %if.end, label %do.body1.if.end15_crit_edge

do.body1.if.end15_crit_edge:                      ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

if.end:                                           ; preds = %do.body1
  %call7 = tail call ptr @__var_waitqueue(ptr noundef nonnull %call) #16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %__wbq_entry) #16
  %2 = getelementptr inbounds %struct.wait_bit_queue_entry, ptr %__wbq_entry, i32 0, i32 1
  %3 = call ptr @memset(ptr %__wbq_entry, i32 255, i32 32)
  call void @init_wait_var_entry(ptr noundef nonnull %__wbq_entry, ptr noundef nonnull %call, i32 noundef 0) #16
  %call828 = call i32 @prepare_to_wait_event(ptr noundef %call7, ptr noundef %2, i32 noundef 2) #16
  call void @_raw_spin_lock(ptr noundef %i_lock.i) #16
  %4 = ptrtoint ptr %layout.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %layout.i, align 8
  %cmp.i25.not29 = icmp eq ptr %5, %call
  call void @_raw_spin_unlock(ptr noundef %i_lock.i) #16
  br i1 %cmp.i25.not29, label %if.end.cleanup_crit_edge, label %if.end.for.end_crit_edge

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

if.end.cleanup_crit_edge:                         ; preds = %if.end
  br label %cleanup

cleanup:                                          ; preds = %cleanup.cleanup_crit_edge, %if.end.cleanup_crit_edge
  call void @schedule() #16
  %call8 = call i32 @prepare_to_wait_event(ptr noundef %call7, ptr noundef %2, i32 noundef 2) #16
  call void @_raw_spin_lock(ptr noundef %i_lock.i) #16
  %6 = ptrtoint ptr %layout.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %layout.i, align 8
  %cmp.i25.not = icmp eq ptr %7, %call
  call void @_raw_spin_unlock(ptr noundef %i_lock.i) #16
  br i1 %cmp.i25.not, label %cleanup.cleanup_crit_edge, label %cleanup.for.end_crit_edge

cleanup.for.end_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

cleanup.cleanup_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.end:                                          ; preds = %cleanup.for.end_crit_edge, %if.end.for.end_crit_edge
  call void @finish_wait(ptr noundef %call7, ptr noundef %2) #16
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %__wbq_entry) #16
  br label %if.end15

if.end15:                                         ; preds = %for.end, %do.body1.if.end15_crit_edge, %entry.if.end15_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__var_waitqueue(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_wait_var_entry(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prepare_to_wait_event(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pnfs_destroy_layouts_byfsid(ptr noundef %clp, ptr nocapture noundef readonly %fsid, i1 noundef zeroext %is_recall) local_unnamed_addr #0 align 64 {
entry:
  %layout_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %layout_list) #16
  %0 = getelementptr inbounds %struct.list_head, ptr %layout_list, i32 0, i32 1
  %1 = ptrtoint ptr %layout_list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %layout_list, ptr %layout_list, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %layout_list, ptr %0, align 4
  %cl_lock = getelementptr inbounds %struct.nfs_client, ptr %clp, i32 0, i32 23
  call void @_raw_spin_lock(ptr noundef %cl_lock) #16
  %3 = call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %6, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #16, !srcloc !424
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #16
  %call.i = call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 696, ptr noundef nonnull @.str.119) #16
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %cl_superblocks = getelementptr inbounds %struct.nfs_client, ptr %clp, i32 0, i32 10
  br label %restart

restart:                                          ; preds = %if.end15.restart_crit_edge, %rcu_read_lock.exit
  %call = call i32 @rcu_read_lock_any_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %restart.do.end_crit_edge

restart.do.end_crit_edge:                         ; preds = %restart
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

land.lhs.true:                                    ; preds = %restart
  %call1 = call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true3

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %.b44 = load i1, ptr @pnfs_destroy_layouts_byfsid.__warned, align 1
  br i1 %.b44, label %land.lhs.true3.do.end_crit_edge, label %if.then

land.lhs.true3.do.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

if.then:                                          ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @pnfs_destroy_layouts_byfsid.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 900, ptr noundef nonnull @.str.41) #16
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true3.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %restart.do.end_crit_edge
  %7 = ptrtoint ptr %cl_superblocks to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pn54 = load volatile ptr, ptr %cl_superblocks, align 4
  %cmp.not56 = icmp eq ptr %.pn54, %cl_superblocks
  br i1 %cmp.not56, label %do.end.for.end_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.for.end_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %do.end.for.body_crit_edge
  %.pn57 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn54, %do.end.for.body_crit_edge ]
  %fsid11 = getelementptr i8, ptr %.pn57, i32 124
  %bcmp = call i32 @bcmp(ptr noundef dereferenceable(16) %fsid11, ptr noundef dereferenceable(16) %fsid, i32 16) #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %cmp13.not = icmp eq i32 %bcmp, 0
  br i1 %cmp13.not, label %if.end15, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end15:                                         ; preds = %for.body
  %server.058 = getelementptr i8, ptr %.pn57, i32 -4
  %call16 = call fastcc i32 @pnfs_layout_bulk_destroy_byserver_locked(ptr noundef %clp, ptr noundef %server.058, ptr noundef nonnull %layout_list)
  %cmp17.not = icmp eq i32 %call16, 0
  br i1 %cmp17.not, label %if.end15.for.inc_crit_edge, label %if.end15.restart_crit_edge

if.end15.restart_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  br label %restart

if.end15.for.inc_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

for.inc:                                          ; preds = %if.end15.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %8 = ptrtoint ptr %.pn57 to i32
  call void @__asan_load4_noabort(i32 %8)
  %.pn = load volatile ptr, ptr %.pn57, align 4
  %cmp.not = icmp eq ptr %.pn, %cl_superblocks
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %do.end.for.end_crit_edge
  %call.i45 = call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i45, label %for.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i48

for.end.rcu_read_unlock.exit_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

land.lhs.true.i48:                                ; preds = %for.end
  %call1.i46 = call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i46)
  %tobool.not.i47 = icmp eq i32 %call1.i46, 0
  br i1 %tobool.not.i47, label %land.lhs.true.i48.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i50

land.lhs.true.i48.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i48
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

land.lhs.true2.i50:                               ; preds = %land.lhs.true.i48
  %.b4.i49 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i49, label %land.lhs.true2.i50.rcu_read_unlock.exit_crit_edge, label %if.then.i51

land.lhs.true2.i50.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i50
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

if.then.i51:                                      ; preds = %land.lhs.true2.i50
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 724, ptr noundef nonnull @.str.120) #16
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i51, %land.lhs.true2.i50.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i48.rcu_read_unlock.exit_crit_edge, %for.end.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #16, !srcloc !425
  %9 = call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i.i52 = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i.i.i52 to ptr
  %preempt_count.i.i.i.i53 = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i.i.i53 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i.i.i53, align 4
  %sub.i.i.i = add i32 %12, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i53, align 4
  call void @rcu_read_unlock_strict() #16
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #16
  call void @_raw_spin_unlock(ptr noundef %cl_lock) #16
  %13 = ptrtoint ptr %layout_list to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %layout_list, align 4
  %cmp.i.not = icmp eq ptr %14, %layout_list
  br i1 %cmp.i.not, label %rcu_read_unlock.exit.cleanup_crit_edge, label %if.end33

rcu_read_unlock.exit.cleanup_crit_edge:           ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end33:                                         ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #18
  %call35 = call fastcc i32 @pnfs_layout_free_bulk_destroy_list(ptr noundef nonnull %layout_list, i1 noundef zeroext %is_recall)
  br label %cleanup

cleanup:                                          ; preds = %if.end33, %rcu_read_unlock.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call35, %if.end33 ], [ 0, %rcu_read_unlock.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %layout_list) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_any_held() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @pnfs_layout_bulk_destroy_byserver_locked(ptr noundef %clp, ptr noundef readonly %server, ptr noundef %layout_list) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %layouts = getelementptr inbounds %struct.nfs_server, ptr %server, i32 0, i32 53
  %0 = ptrtoint ptr %layouts to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %layouts, align 8
  %cmp.not92 = icmp eq ptr %1, %layouts
  br i1 %cmp.not92, label %entry.cleanup_crit_edge, label %for.body.lr.ph

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %super = getelementptr inbounds %struct.nfs_server, ptr %server, i32 0, i32 34
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %.pn.in93 = phi ptr [ %1, %for.body.lr.ph ], [ %.pn95, %for.inc.for.body_crit_edge ]
  %2 = ptrtoint ptr %.pn.in93 to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn95 = load ptr, ptr %.pn.in93, align 8
  %plh_flags = getelementptr i8, ptr %.pn.in93, i32 40
  %3 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %plh_flags, align 4
  %5 = and i32 %4, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %lor.lhs.false, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

lor.lhs.false:                                    ; preds = %for.body
  %6 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %plh_flags, align 4
  %8 = and i32 %7, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool10.not = icmp eq i32 %8, 0
  br i1 %tobool10.not, label %lor.lhs.false11, label %lor.lhs.false.for.inc_crit_edge

lor.lhs.false.for.inc_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %plh_bulk_destroy = getelementptr i8, ptr %.pn.in93, i32 8
  %9 = ptrtoint ptr %plh_bulk_destroy to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile ptr, ptr %plh_bulk_destroy, align 4
  %cmp.i.not = icmp eq ptr %10, %plh_bulk_destroy
  br i1 %cmp.i.not, label %if.end, label %lor.lhs.false11.for.inc_crit_edge

lor.lhs.false11.for.inc_crit_edge:                ; preds = %lor.lhs.false11
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end:                                           ; preds = %lor.lhs.false11
  %11 = ptrtoint ptr %super to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %super, align 4
  %call14 = tail call zeroext i1 @nfs_sb_active(ptr noundef %12) #16
  br i1 %call14, label %if.end16, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %plh_inode.i = getelementptr i8, ptr %.pn.in93, i32 92
  %13 = ptrtoint ptr %plh_inode.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %plh_inode.i, align 4
  %call.i58 = tail call ptr @igrab(ptr noundef %14) #16
  %tobool.not.i59 = icmp eq ptr %call.i58, null
  br i1 %tobool.not.i59, label %if.else, label %if.then19

if.then19:                                        ; preds = %if.end16
  %call21 = tail call i32 @_test_and_clear_bit(i32 noundef 9, ptr noundef %plh_flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.then19.if.end25_crit_edge, label %if.then23

if.then19.if.end25_crit_edge:                     ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end25

if.then23:                                        ; preds = %if.then19
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in93) #16
  br i1 %call.i.i, label %if.end.i.i, label %if.then23.list_del_rcu.exit_crit_edge

if.then23.list_del_rcu.exit_crit_edge:            ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in93, i32 0, i32 1
  %15 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev.i.i, align 4
  %17 = ptrtoint ptr %.pn.in93 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %.pn.in93, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %prev1.i.i.i, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %18, ptr %16, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %if.then23.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.list_head, ptr %.pn.in93, i32 0, i32 1
  %21 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  br label %if.end25

if.end25:                                         ; preds = %list_del_rcu.exit, %if.then19.if.end25_crit_edge
  %i_lock.i = getelementptr inbounds %struct.inode, ptr %call.i58, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock.i) #16
  %layout.i = getelementptr i8, ptr %call.i58, i32 -32
  %22 = ptrtoint ptr %layout.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %layout.i, align 8
  %cmp.not.i = icmp eq ptr %23, null
  br i1 %cmp.not.i, label %if.end25.if.end28_crit_edge, label %land.lhs.true.i60

if.end25.if.end28_crit_edge:                      ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end28

land.lhs.true.i60:                                ; preds = %if.end25
  %plh_bulk_destroy.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %23, i32 0, i32 3
  %24 = ptrtoint ptr %plh_bulk_destroy.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile ptr, ptr %plh_bulk_destroy.i, align 4
  %cmp.i.not.i = icmp eq ptr %25, %plh_bulk_destroy.i
  br i1 %cmp.i.not.i, label %if.then.i61, label %land.lhs.true.i60.if.end28_crit_edge

land.lhs.true.i60.if.end28_crit_edge:             ; preds = %land.lhs.true.i60
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end28

if.then.i61:                                      ; preds = %land.lhs.true.i60
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %23, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr nonnull %23, i32 1, i32 3, i32 1) #16
  %26 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %23, ptr nonnull %23, i32 1, ptr nonnull elementtype(i32) %23) #16, !srcloc !415
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %26, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.then.i61.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !416

if.then.i61.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.then.i61
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.then.i61
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %27 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %27)
  %.not.i.i.i.i.i = icmp sgt i32 %27, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.pnfs_get_layout_hdr.exit.i_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !413

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.pnfs_get_layout_hdr.exit.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_get_layout_hdr.exit.i

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.then.i61.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.then.i61.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef nonnull %23, i32 noundef %.sink.i.i.i.i.i) #16
  br label %pnfs_get_layout_hdr.exit.i

pnfs_get_layout_hdr.exit.i:                       ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.pnfs_get_layout_hdr.exit.i_crit_edge
  %28 = ptrtoint ptr %layout_list to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %layout_list, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %plh_bulk_destroy.i, ptr noundef %layout_list, ptr noundef %29) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %pnfs_get_layout_hdr.exit.i.pnfs_layout_add_bulk_destroy_list.exit.thread_crit_edge

pnfs_get_layout_hdr.exit.i.pnfs_layout_add_bulk_destroy_list.exit.thread_crit_edge: ; preds = %pnfs_get_layout_hdr.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_layout_add_bulk_destroy_list.exit.thread

if.end.i.i.i:                                     ; preds = %pnfs_get_layout_hdr.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev1.i.i.i62 = getelementptr inbounds %struct.list_head, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %prev1.i.i.i62 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %plh_bulk_destroy.i, ptr %prev1.i.i.i62, align 4
  %31 = ptrtoint ptr %plh_bulk_destroy.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %29, ptr %plh_bulk_destroy.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %23, i32 0, i32 3, i32 1
  %32 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %layout_list, ptr %prev3.i.i.i, align 4
  %33 = ptrtoint ptr %layout_list to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %plh_bulk_destroy.i, ptr %layout_list, align 4
  br label %pnfs_layout_add_bulk_destroy_list.exit.thread

pnfs_layout_add_bulk_destroy_list.exit.thread:    ; preds = %if.end.i.i.i, %pnfs_get_layout_hdr.exit.i.pnfs_layout_add_bulk_destroy_list.exit.thread_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %i_lock.i) #16
  br label %for.inc

if.end28:                                         ; preds = %land.lhs.true.i60.if.end28_crit_edge, %if.end25.if.end28_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %i_lock.i) #16
  %call.i64 = tail call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i64, label %if.end28.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i67

if.end28.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

land.lhs.true.i67:                                ; preds = %if.end28
  %call1.i65 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i65)
  %tobool.not.i66 = icmp eq i32 %call1.i65, 0
  br i1 %tobool.not.i66, label %land.lhs.true.i67.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i69

land.lhs.true.i67.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i67
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

land.lhs.true2.i69:                               ; preds = %land.lhs.true.i67
  %.b4.i68 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i68, label %land.lhs.true2.i69.rcu_read_unlock.exit_crit_edge, label %if.then.i70

land.lhs.true2.i69.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i69
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

if.then.i70:                                      ; preds = %land.lhs.true2.i69
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 724, ptr noundef nonnull @.str.120) #16
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i70, %land.lhs.true2.i69.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i67.rcu_read_unlock.exit_crit_edge, %if.end28.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !425
  %34 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i.i71 = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i.i.i71 to ptr
  %preempt_count.i.i.i.i72 = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %preempt_count.i.i.i.i72 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %preempt_count.i.i.i.i72, align 4
  %sub.i.i.i = add i32 %37, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i72, align 4
  tail call void @rcu_read_unlock_strict() #16
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #16
  %cl_lock = getelementptr inbounds %struct.nfs_client, ptr %clp, i32 0, i32 23
  tail call void @_raw_spin_unlock(ptr noundef %cl_lock) #16
  tail call void @iput(ptr noundef nonnull %call.i58) #16
  br label %if.end30

if.else:                                          ; preds = %if.end16
  tail call void @_set_bit(i32 noundef 8, ptr noundef %plh_flags) #16
  %call.i73 = tail call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i73, label %if.else.rcu_read_unlock.exit83_crit_edge, label %land.lhs.true.i76

if.else.rcu_read_unlock.exit83_crit_edge:         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit83

land.lhs.true.i76:                                ; preds = %if.else
  %call1.i74 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i74)
  %tobool.not.i75 = icmp eq i32 %call1.i74, 0
  br i1 %tobool.not.i75, label %land.lhs.true.i76.rcu_read_unlock.exit83_crit_edge, label %land.lhs.true2.i78

land.lhs.true.i76.rcu_read_unlock.exit83_crit_edge: ; preds = %land.lhs.true.i76
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit83

land.lhs.true2.i78:                               ; preds = %land.lhs.true.i76
  %.b4.i77 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i77, label %land.lhs.true2.i78.rcu_read_unlock.exit83_crit_edge, label %if.then.i79

land.lhs.true2.i78.rcu_read_unlock.exit83_crit_edge: ; preds = %land.lhs.true2.i78
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit83

if.then.i79:                                      ; preds = %land.lhs.true2.i78
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 724, ptr noundef nonnull @.str.120) #16
  br label %rcu_read_unlock.exit83

rcu_read_unlock.exit83:                           ; preds = %if.then.i79, %land.lhs.true2.i78.rcu_read_unlock.exit83_crit_edge, %land.lhs.true.i76.rcu_read_unlock.exit83_crit_edge, %if.else.rcu_read_unlock.exit83_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !425
  %38 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i.i80 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i.i80 to ptr
  %preempt_count.i.i.i.i81 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i.i81 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i.i81, align 4
  %sub.i.i.i82 = add i32 %41, -1
  store volatile i32 %sub.i.i.i82, ptr %preempt_count.i.i.i.i81, align 4
  tail call void @rcu_read_unlock_strict() #16
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #16
  %cl_lock29 = getelementptr inbounds %struct.nfs_client, ptr %clp, i32 0, i32 23
  tail call void @_raw_spin_unlock(ptr noundef %cl_lock29) #16
  br label %if.end30

if.end30:                                         ; preds = %rcu_read_unlock.exit83, %rcu_read_unlock.exit
  %42 = ptrtoint ptr %super to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %super, align 4
  tail call void @nfs_sb_deactive(ptr noundef %43) #16
  %cl_lock32 = getelementptr inbounds %struct.nfs_client, ptr %clp, i32 0, i32 23
  tail call void @_raw_spin_lock(ptr noundef %cl_lock32) #16
  %44 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i.i = and i32 %44, -16384
  %45 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %45, i32 0, i32 1
  %46 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %47, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !424
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #16
  %call.i = tail call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i, label %if.end30.cleanup_crit_edge, label %land.lhs.true.i

if.end30.cleanup_crit_edge:                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true.i:                                  ; preds = %if.end30
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.cleanup_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.cleanup_crit_edge, label %if.then.i

land.lhs.true2.i.cleanup_crit_edge:               ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 696, ptr noundef nonnull @.str.119) #16
  br label %cleanup

for.inc:                                          ; preds = %pnfs_layout_add_bulk_destroy_list.exit.thread, %lor.lhs.false11.for.inc_crit_edge, %lor.lhs.false.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %cmp.not = icmp eq ptr %.pn95, %layouts
  br i1 %cmp.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.then.i, %land.lhs.true2.i.cleanup_crit_edge, %land.lhs.true.i.cleanup_crit_edge, %if.end30.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -11, %if.end30.cleanup_crit_edge ], [ -11, %land.lhs.true.i.cleanup_crit_edge ], [ -11, %land.lhs.true2.i.cleanup_crit_edge ], [ -11, %if.then.i ], [ 0, %entry.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @pnfs_layout_free_bulk_destroy_list(ptr noundef %layout_list, i1 noundef zeroext %is_bulk_recall) unnamed_addr #0 align 64 {
entry:
  %lseg_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %lseg_list) #16
  %0 = getelementptr inbounds %struct.list_head, ptr %lseg_list, i32 0, i32 1
  %1 = ptrtoint ptr %lseg_list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %lseg_list, ptr %lseg_list, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %lseg_list, ptr %0, align 4
  %3 = ptrtoint ptr %layout_list to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %layout_list, align 4
  %cmp.i.not34 = icmp eq ptr %4, %layout_list
  br i1 %cmp.i.not34, label %entry.while.end_crit_edge, label %while.body.lr.ph

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %is_bulk_recall.not = xor i1 %is_bulk_recall, true
  br label %while.body

while.body:                                       ; preds = %nfs_iput_and_deactive.exit.while.body_crit_edge, %while.body.lr.ph
  %5 = phi ptr [ %4, %while.body.lr.ph ], [ %47, %nfs_iput_and_deactive.exit.while.body_crit_edge ]
  %ret.035 = phi i32 [ 0, %while.body.lr.ph ], [ %ret.1, %nfs_iput_and_deactive.exit.while.body_crit_edge ]
  %add.ptr = getelementptr i8, ptr %5, i32 -16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %6 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %6, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %while.body.do.end10_crit_edge, label %do.end, !prof !413

while.body.do.end10_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end10

do.end:                                           ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  %plh_inode = getelementptr i8, ptr %5, i32 84
  %7 = ptrtoint ptr %plh_inode to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %plh_inode, align 4
  %i_ino = getelementptr inbounds %struct.inode, ptr %8, i32 0, i32 11
  %9 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %i_ino, align 8
  %call8 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.121, ptr noundef nonnull @.str.122, i32 noundef %10) #19
  br label %do.end10

do.end10:                                         ; preds = %do.end, %while.body.do.end10_crit_edge
  %plh_inode11 = getelementptr i8, ptr %5, i32 84
  %11 = ptrtoint ptr %plh_inode11 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %plh_inode11, align 4
  %call12 = call i32 @pnfs_layoutcommit_inode(ptr noundef %12, i1 noundef zeroext false)
  %i_lock = getelementptr inbounds %struct.inode, ptr %12, i32 0, i32 18
  call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %5) #16
  br i1 %call.i.i, label %if.end.i.i, label %do.end10.list_del_init.exit_crit_edge

do.end10.list_del_init.exit_crit_edge:            ; preds = %do.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %do.end10
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  %13 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %prev.i.i, align 4
  %15 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %5, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %14, ptr %prev1.i.i.i, align 4
  %18 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %16, ptr %14, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %do.end10.list_del_init.exit_crit_edge
  %19 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %5, ptr %5, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  %20 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %5, ptr %prev.i3.i, align 4
  %call13 = call i32 @pnfs_mark_layout_stateid_invalid(ptr noundef %add.ptr, ptr noundef nonnull %lseg_list)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  %brmerge = or i1 %tobool14.not, %is_bulk_recall.not
  %ret.0.mux = select i1 %tobool14.not, i32 %ret.035, i32 -11
  br i1 %brmerge, label %list_del_init.exit.if.end19_crit_edge, label %if.then17

list_del_init.exit.if.end19_crit_edge:            ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end19

if.then17:                                        ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #18
  %plh_flags = getelementptr i8, ptr %5, i32 32
  call void @_set_bit(i32 noundef 2, ptr noundef %plh_flags) #16
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %list_del_init.exit.if.end19_crit_edge
  %ret.1 = phi i32 [ %ret.0.mux, %list_del_init.exit.if.end19_crit_edge ], [ -11, %if.then17 ]
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  %21 = ptrtoint ptr %lseg_list to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile ptr, ptr %lseg_list, align 4
  %cmp.i.not.i = icmp eq ptr %22, %lseg_list
  br i1 %cmp.i.not.i, label %if.end19.pnfs_free_lseg_list.exit_crit_edge, label %if.end19.for.body.i_crit_edge

if.end19.for.body.i_crit_edge:                    ; preds = %if.end19
  br label %for.body.i

if.end19.pnfs_free_lseg_list.exit_crit_edge:      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg_list.exit

for.body.i:                                       ; preds = %pnfs_free_lseg.exit.i.for.body.i_crit_edge, %if.end19.for.body.i_crit_edge
  %lseg.021.i = phi ptr [ %tmp.0.i, %pnfs_free_lseg.exit.i.for.body.i_crit_edge ], [ %22, %if.end19.for.body.i_crit_edge ]
  %23 = ptrtoint ptr %lseg.021.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %tmp.0.i = load ptr, ptr %lseg.021.i, align 8
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %lseg.021.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %for.body.i.list_del.exit.i_crit_edge

for.body.i.list_del.exit.i_crit_edge:             ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %lseg.021.i, i32 0, i32 1
  %24 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %prev.i.i.i, align 4
  %26 = ptrtoint ptr %lseg.021.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %lseg.021.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %25, ptr %prev1.i.i.i.i, align 4
  %29 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile ptr %27, ptr %25, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %for.body.i.list_del.exit.i_crit_edge
  %30 = ptrtoint ptr %lseg.021.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr inttoptr (i32 256 to ptr), ptr %lseg.021.i, align 4
  %prev.i.i32 = getelementptr inbounds %struct.list_head, ptr %lseg.021.i, i32 0, i32 1
  %31 = ptrtoint ptr %prev.i.i32 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i32, align 4
  %cmp.not.i.i = icmp eq ptr %lseg.021.i, null
  br i1 %cmp.not.i.i, label %list_del.exit.i.pnfs_free_lseg.exit.i_crit_edge, label %if.then.i.i

list_del.exit.i.pnfs_free_lseg.exit.i_crit_edge:  ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg.exit.i

if.then.i.i:                                      ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %pls_layout.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.021.i, i32 0, i32 7
  %32 = ptrtoint ptr %pls_layout.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %pls_layout.i.i, align 4
  %plh_inode.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %33, i32 0, i32 15
  %34 = ptrtoint ptr %plh_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %plh_inode.i.i, align 4
  %i_sb.i.i.i = getelementptr inbounds %struct.inode, ptr %35, i32 0, i32 8
  %36 = ptrtoint ptr %i_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %i_sb.i.i.i, align 4
  %s_fs_info.i.i.i.i = getelementptr inbounds %struct.super_block, ptr %37, i32 0, i32 33
  %38 = ptrtoint ptr %s_fs_info.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %s_fs_info.i.i.i.i, align 16
  %pnfs_curr_ld.i.i = getelementptr inbounds %struct.nfs_server, ptr %39, i32 0, i32 46
  %40 = ptrtoint ptr %pnfs_curr_ld.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %pnfs_curr_ld.i.i, align 4
  %free_lseg.i.i = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %41, i32 0, i32 12
  %42 = ptrtoint ptr %free_lseg.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %free_lseg.i.i, align 4
  call void %43(ptr noundef nonnull %lseg.021.i) #16
  br label %pnfs_free_lseg.exit.i

pnfs_free_lseg.exit.i:                            ; preds = %if.then.i.i, %list_del.exit.i.pnfs_free_lseg.exit.i_crit_edge
  %cmp.not.i = icmp eq ptr %tmp.0.i, %lseg_list
  br i1 %cmp.not.i, label %pnfs_free_lseg.exit.i.pnfs_free_lseg_list.exit_crit_edge, label %pnfs_free_lseg.exit.i.for.body.i_crit_edge

pnfs_free_lseg.exit.i.for.body.i_crit_edge:       ; preds = %pnfs_free_lseg.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

pnfs_free_lseg.exit.i.pnfs_free_lseg_list.exit_crit_edge: ; preds = %pnfs_free_lseg.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg_list.exit

pnfs_free_lseg_list.exit:                         ; preds = %pnfs_free_lseg.exit.i.pnfs_free_lseg_list.exit_crit_edge, %if.end19.pnfs_free_lseg_list.exit_crit_edge
  %call21 = call i32 @nfs_commit_inode(ptr noundef %12, i32 noundef 0) #16
  call void @pnfs_put_layout_hdr(ptr noundef %add.ptr)
  %cmp.not.i33 = icmp eq ptr %12, null
  br i1 %cmp.not.i33, label %pnfs_free_lseg_list.exit.nfs_iput_and_deactive.exit_crit_edge, label %if.then.i

pnfs_free_lseg_list.exit.nfs_iput_and_deactive.exit_crit_edge: ; preds = %pnfs_free_lseg_list.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfs_iput_and_deactive.exit

if.then.i:                                        ; preds = %pnfs_free_lseg_list.exit
  call void @__sanitizer_cov_trace_pc() #18
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %12, i32 0, i32 8
  %44 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %i_sb.i, align 4
  call void @iput(ptr noundef nonnull %12) #16
  call void @nfs_sb_deactive(ptr noundef %45) #16
  br label %nfs_iput_and_deactive.exit

nfs_iput_and_deactive.exit:                       ; preds = %if.then.i, %pnfs_free_lseg_list.exit.nfs_iput_and_deactive.exit_crit_edge
  %46 = ptrtoint ptr %layout_list to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile ptr, ptr %layout_list, align 4
  %cmp.i.not = icmp eq ptr %47, %layout_list
  br i1 %cmp.i.not, label %nfs_iput_and_deactive.exit.while.end_crit_edge, label %nfs_iput_and_deactive.exit.while.body_crit_edge

nfs_iput_and_deactive.exit.while.body_crit_edge:  ; preds = %nfs_iput_and_deactive.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

nfs_iput_and_deactive.exit.while.end_crit_edge:   ; preds = %nfs_iput_and_deactive.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.end:                                        ; preds = %nfs_iput_and_deactive.exit.while.end_crit_edge, %entry.while.end_crit_edge
  %ret.0.lcssa = phi i32 [ 0, %entry.while.end_crit_edge ], [ %ret.1, %nfs_iput_and_deactive.exit.while.end_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %lseg_list) #16
  ret i32 %ret.0.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pnfs_destroy_layouts_byclid(ptr noundef %clp, i1 noundef zeroext %is_recall) local_unnamed_addr #0 align 64 {
entry:
  %layout_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %layout_list) #16
  %0 = getelementptr inbounds %struct.list_head, ptr %layout_list, i32 0, i32 1
  %1 = ptrtoint ptr %layout_list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %layout_list, ptr %layout_list, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %layout_list, ptr %0, align 4
  %cl_lock = getelementptr inbounds %struct.nfs_client, ptr %clp, i32 0, i32 23
  call void @_raw_spin_lock(ptr noundef %cl_lock) #16
  %3 = call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %6, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #16, !srcloc !424
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #16
  %call.i = call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 696, ptr noundef nonnull @.str.119) #16
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %cl_superblocks = getelementptr inbounds %struct.nfs_client, ptr %clp, i32 0, i32 10
  br label %restart

restart:                                          ; preds = %for.body.restart_crit_edge, %rcu_read_lock.exit
  %call = call i32 @rcu_read_lock_any_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %restart.for.cond.preheader_crit_edge

restart.for.cond.preheader_crit_edge:             ; preds = %restart
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.preheader

land.lhs.true:                                    ; preds = %restart
  %call1 = call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.lhs.true.for.cond.preheader_crit_edge, label %land.lhs.true3

land.lhs.true.for.cond.preheader_crit_edge:       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.preheader

land.lhs.true3:                                   ; preds = %land.lhs.true
  %.b38 = load i1, ptr @pnfs_destroy_layouts_byclid.__warned, align 1
  br i1 %.b38, label %land.lhs.true3.for.cond.preheader_crit_edge, label %if.then

land.lhs.true3.for.cond.preheader_crit_edge:      ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.preheader

if.then:                                          ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @pnfs_destroy_layouts_byclid.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 926, ptr noundef nonnull @.str.41) #16
  br label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.then, %land.lhs.true3.for.cond.preheader_crit_edge, %land.lhs.true.for.cond.preheader_crit_edge, %restart.for.cond.preheader_crit_edge
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %for.cond.preheader
  %.pn.in = phi ptr [ %.pn, %for.body.for.cond_crit_edge ], [ %cl_superblocks, %for.cond.preheader ]
  %7 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pn = load volatile ptr, ptr %.pn.in, align 4
  %cmp.not = icmp eq ptr %.pn, %cl_superblocks
  br i1 %cmp.not, label %for.end, label %for.body

for.body:                                         ; preds = %for.cond
  %server.0 = getelementptr i8, ptr %.pn, i32 -4
  %call11 = call fastcc i32 @pnfs_layout_bulk_destroy_byserver_locked(ptr noundef %clp, ptr noundef %server.0, ptr noundef nonnull %layout_list)
  %cmp12.not = icmp eq i32 %call11, 0
  br i1 %cmp12.not, label %for.body.for.cond_crit_edge, label %for.body.restart_crit_edge

for.body.restart_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %restart

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call.i39 = call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i39, label %for.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i42

for.end.rcu_read_unlock.exit_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

land.lhs.true.i42:                                ; preds = %for.end
  %call1.i40 = call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i40)
  %tobool.not.i41 = icmp eq i32 %call1.i40, 0
  br i1 %tobool.not.i41, label %land.lhs.true.i42.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i44

land.lhs.true.i42.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i42
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

land.lhs.true2.i44:                               ; preds = %land.lhs.true.i42
  %.b4.i43 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i43, label %land.lhs.true2.i44.rcu_read_unlock.exit_crit_edge, label %if.then.i45

land.lhs.true2.i44.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i44
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

if.then.i45:                                      ; preds = %land.lhs.true2.i44
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 724, ptr noundef nonnull @.str.120) #16
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i45, %land.lhs.true2.i44.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i42.rcu_read_unlock.exit_crit_edge, %for.end.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #16, !srcloc !425
  %8 = call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i.i46 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i.i46 to ptr
  %preempt_count.i.i.i.i47 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i.i.i47 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i.i.i47, align 4
  %sub.i.i.i = add i32 %11, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i47, align 4
  call void @rcu_read_unlock_strict() #16
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #16
  call void @_raw_spin_unlock(ptr noundef %cl_lock) #16
  %12 = ptrtoint ptr %layout_list to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %layout_list, align 4
  %cmp.i.not = icmp eq ptr %13, %layout_list
  br i1 %cmp.i.not, label %rcu_read_unlock.exit.cleanup_crit_edge, label %if.end28

rcu_read_unlock.exit.cleanup_crit_edge:           ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end28:                                         ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #18
  %call30 = call fastcc i32 @pnfs_layout_free_bulk_destroy_list(ptr noundef nonnull %layout_list, i1 noundef zeroext %is_recall)
  br label %cleanup

cleanup:                                          ; preds = %if.end28, %rcu_read_unlock.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %call30, %if.end28 ], [ 0, %rcu_read_unlock.exit.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %layout_list) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_destroy_all_layouts(ptr noundef %clp) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @nfs4_deviceid_mark_client_invalid(ptr noundef %clp) #16
  tail call void @nfs4_deviceid_purge_client(ptr noundef %clp) #16
  %call = tail call i32 @pnfs_destroy_layouts_byclid(ptr noundef %clp, i1 noundef zeroext false)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @nfs4_deviceid_mark_client_invalid(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_set_layout_stateid(ptr noundef %lo, ptr nocapture noundef readonly %new, ptr noundef %cred, i1 noundef zeroext %update_barrier) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %plh_stateid = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 9
  %0 = ptrtoint ptr %plh_stateid to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %plh_stateid, align 4
  %2 = ptrtoint ptr %new to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %new, align 4
  %plh_flags.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 8
  %4 = ptrtoint ptr %plh_flags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %plh_flags.i, align 4
  %6 = and i32 %5, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp.i = icmp eq i32 %6, 0
  br i1 %cmp.i, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %tobool.not.i = icmp eq ptr %cred, null
  br i1 %tobool.not.i, label %if.then.pnfs_set_layout_cred.exit_crit_edge, label %land.lhs.true.i

if.then.pnfs_set_layout_cred.exit_crit_edge:      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_set_layout_cred.exit

land.lhs.true.i:                                  ; preds = %if.then
  %plh_lc_cred.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 14
  %7 = ptrtoint ptr %plh_lc_cred.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %plh_lc_cred.i, align 8
  %call.i = tail call i32 @cred_fscmp(ptr noundef %8, ptr noundef nonnull %cred) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not.i = icmp eq i32 %call.i, 0
  br i1 %cmp.not.i, label %land.lhs.true.i.pnfs_set_layout_cred.exit_crit_edge, label %do.body.i.i

land.lhs.true.i.pnfs_set_layout_cred.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_set_layout_cred.exit

do.body.i.i:                                      ; preds = %land.lhs.true.i
  %call.i.i30 = tail call zeroext i1 @__kasan_check_write(ptr noundef %plh_lc_cred.i, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !426
  %call.i.i.i = tail call zeroext i1 @creds_are_invalid(ptr noundef nonnull %cred) #16
  br i1 %call.i.i.i, label %if.then.i.i.i, label %do.body.i.i.get_cred.exit.i_crit_edge, !prof !416

do.body.i.i.get_cred.exit.i_crit_edge:            ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %get_cred.exit.i

if.then.i.i.i:                                    ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @__invalid_creds(ptr noundef nonnull %cred, ptr noundef nonnull @.str.125, i32 noundef 253) #16
  br label %get_cred.exit.i

get_cred.exit.i:                                  ; preds = %if.then.i.i.i, %do.body.i.i.get_cred.exit.i_crit_edge
  %9 = getelementptr inbounds %struct.cred, ptr %cred, i32 0, i32 28
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %9, align 4
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %cred, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr nonnull %cred, i32 1, i32 3, i32 1) #16
  %11 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %cred, ptr nonnull %cred, i32 1, ptr nonnull elementtype(i32) %cred) #16, !srcloc !414
  %12 = ptrtoint ptr %cred to i32
  tail call void @llvm.prefetch.p0(ptr %plh_lc_cred.i, i32 1, i32 3, i32 1) #16
  %13 = tail call { i32, i32 } asm sideeffect "@\09__xchg4\0A1:\09ldrex\09$0, [$3]\0A\09strex\09$1, $2, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,r,r,~{memory},~{cc}"(i32 %12, ptr %plh_lc_cred.i) #16, !srcloc !427
  %asmresult.i.i = extractvalue { i32, i32 } %13, 0
  %14 = inttoptr i32 %asmresult.i.i to ptr
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !428
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %tobool.not.i22.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %tobool.not.i22.i, label %get_cred.exit.i.pnfs_set_layout_cred.exit_crit_edge, label %do.body.i24.i

get_cred.exit.i.pnfs_set_layout_cred.exit_crit_edge: ; preds = %get_cred.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_set_layout_cred.exit

do.body.i24.i:                                    ; preds = %get_cred.exit.i
  %call.i.i23.i = tail call zeroext i1 @creds_are_invalid(ptr noundef nonnull %14) #16
  br i1 %call.i.i23.i, label %if.then.i.i25.i, label %do.body.i24.i.__validate_creds.exit.i26.i_crit_edge, !prof !416

do.body.i24.i.__validate_creds.exit.i26.i_crit_edge: ; preds = %do.body.i24.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %__validate_creds.exit.i26.i

if.then.i.i25.i:                                  ; preds = %do.body.i24.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @__invalid_creds(ptr noundef nonnull %14, ptr noundef nonnull @.str.125, i32 noundef 286) #16
  br label %__validate_creds.exit.i26.i

__validate_creds.exit.i26.i:                      ; preds = %if.then.i.i25.i, %do.body.i24.i.__validate_creds.exit.i26.i_crit_edge
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %14, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !410
  tail call void @llvm.prefetch.p0(ptr nonnull %14, i32 1, i32 3, i32 1) #16
  %15 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %14, ptr nonnull %14, i32 1, ptr nonnull elementtype(i32) %14) #16, !srcloc !411
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32 } %15, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !412
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %if.then1.i.i, label %__validate_creds.exit.i26.i.pnfs_set_layout_cred.exit_crit_edge

__validate_creds.exit.i26.i.pnfs_set_layout_cred.exit_crit_edge: ; preds = %__validate_creds.exit.i26.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_set_layout_cred.exit

if.then1.i.i:                                     ; preds = %__validate_creds.exit.i26.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @__put_cred(ptr noundef nonnull %14) #16
  br label %pnfs_set_layout_cred.exit

pnfs_set_layout_cred.exit:                        ; preds = %if.then1.i.i, %__validate_creds.exit.i26.i.pnfs_set_layout_cred.exit_crit_edge, %get_cred.exit.i.pnfs_set_layout_cred.exit_crit_edge, %land.lhs.true.i.pnfs_set_layout_cred.exit_crit_edge, %if.then.pnfs_set_layout_cred.exit_crit_edge
  %16 = call ptr @memcpy(ptr %plh_stateid, ptr %new, i32 16)
  %type.i = getelementptr inbounds %struct.nfs4_stateid_struct, ptr %new, i32 0, i32 1
  %17 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %type.i, align 4
  %type2.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 9, i32 1
  %19 = ptrtoint ptr %type2.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %type2.i, align 4
  %plh_barrier = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 10
  %20 = ptrtoint ptr %plh_barrier to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %3, ptr %plh_barrier, align 8
  %plh_return_iomode.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 12
  %21 = ptrtoint ptr %plh_return_iomode.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %plh_return_iomode.i, align 8
  %plh_return_seq.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 11
  %22 = ptrtoint ptr %plh_return_seq.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 0, ptr %plh_return_seq.i, align 4
  tail call void @_clear_bit(i32 noundef 5, ptr noundef %plh_flags.i) #16
  %plh_segs.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 4
  %23 = ptrtoint ptr %plh_segs.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %lseg.015.i = load ptr, ptr %plh_segs.i, align 8
  %cmp.not16.i = icmp eq ptr %lseg.015.i, %plh_segs.i
  br i1 %cmp.not16.i, label %pnfs_set_layout_cred.exit.pnfs_clear_layoutreturn_info.exit_crit_edge, label %pnfs_set_layout_cred.exit.for.body.i_crit_edge

pnfs_set_layout_cred.exit.for.body.i_crit_edge:   ; preds = %pnfs_set_layout_cred.exit
  br label %for.body.i

pnfs_set_layout_cred.exit.pnfs_clear_layoutreturn_info.exit_crit_edge: ; preds = %pnfs_set_layout_cred.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_clear_layoutreturn_info.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %pnfs_set_layout_cred.exit.for.body.i_crit_edge
  %lseg.017.i = phi ptr [ %lseg.0.i, %for.inc.i.for.body.i_crit_edge ], [ %lseg.015.i, %pnfs_set_layout_cred.exit.for.body.i_crit_edge ]
  %pls_flags.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.017.i, i32 0, i32 6
  %24 = ptrtoint ptr %pls_flags.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %pls_flags.i, align 4
  %26 = and i32 %25, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.not.i32 = icmp eq i32 %26, 0
  br i1 %tobool.not.i32, label %for.body.i.for.inc.i_crit_edge, label %if.end.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  %pls_range.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.017.i, i32 0, i32 3
  %27 = ptrtoint ptr %pls_range.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %pls_range.i, align 8
  %29 = ptrtoint ptr %plh_return_iomode.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %plh_return_iomode.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %cmp.not.i.i = icmp eq i32 %30, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %28)
  %cmp2.not.i.i = icmp eq i32 %30, %28
  %31 = or i1 %cmp.not.i.i, %cmp2.not.i.i
  %iomode.addr.0.i.i = select i1 %31, i32 %28, i32 3
  %32 = ptrtoint ptr %plh_return_iomode.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %iomode.addr.0.i.i, ptr %plh_return_iomode.i, align 8
  tail call void @_set_bit(i32 noundef 5, ptr noundef %plh_flags.i) #16
  %33 = ptrtoint ptr %plh_stateid to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %plh_stateid, align 4
  %35 = ptrtoint ptr %plh_return_seq.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %plh_return_seq.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.not.i.i = icmp eq i32 %36, 0
  %sub.i.i.i = sub i32 %34, %36
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i)
  %cmp.i.i.i = icmp sgt i32 %sub.i.i.i, 0
  %or.cond.i.i = select i1 %tobool.not.i.i, i1 true, i1 %cmp.i.i.i
  br i1 %or.cond.i.i, label %if.then8.i.i, label %if.end.i.if.end10.i.i_crit_edge

if.end.i.if.end10.i.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i.i

if.then8.i.i:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %37 = ptrtoint ptr %plh_return_seq.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %34, ptr %plh_return_seq.i, align 4
  br label %if.end10.i.i

if.end10.i.i:                                     ; preds = %if.then8.i.i, %if.end.i.if.end10.i.i_crit_edge
  %38 = ptrtoint ptr %plh_barrier to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %plh_barrier, align 8
  %sub.i.i.i.i = sub i32 %34, %39
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i.i)
  %cmp.i.i.i.i33 = icmp sgt i32 %sub.i.i.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool.not.i.i.i = icmp eq i32 %39, 0
  %or.cond.i.i.i = or i1 %tobool.not.i.i.i, %cmp.i.i.i.i33
  br i1 %or.cond.i.i.i, label %if.then.i.i.i34, label %if.end10.i.i.for.inc.i_crit_edge

if.end10.i.i.for.inc.i_crit_edge:                 ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then.i.i.i34:                                  ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %40 = ptrtoint ptr %plh_barrier to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %34, ptr %plh_barrier, align 8
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i.i.i34, %if.end10.i.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %41 = ptrtoint ptr %lseg.017.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %lseg.0.i = load ptr, ptr %lseg.017.i, align 8
  %cmp.not.i35 = icmp eq ptr %lseg.0.i, %plh_segs.i
  br i1 %cmp.not.i35, label %for.inc.i.pnfs_clear_layoutreturn_info.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.pnfs_clear_layoutreturn_info.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_clear_layoutreturn_info.exit

pnfs_clear_layoutreturn_info.exit:                ; preds = %for.inc.i.pnfs_clear_layoutreturn_info.exit_crit_edge, %pnfs_set_layout_cred.exit.pnfs_clear_layoutreturn_info.exit_crit_edge
  tail call void @_clear_bit(i32 noundef 6, ptr noundef %plh_flags.i) #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %sub.i = sub i32 %3, %1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp.i36 = icmp sgt i32 %sub.i, 0
  br i1 %cmp.i36, label %if.then4, label %if.end.if.end6_crit_edge

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %42 = call ptr @memcpy(ptr %plh_stateid, ptr %new, i32 16)
  %type.i37 = getelementptr inbounds %struct.nfs4_stateid_struct, ptr %new, i32 0, i32 1
  %43 = ptrtoint ptr %type.i37 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %type.i37, align 4
  %type2.i38 = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 9, i32 1
  %45 = ptrtoint ptr %type2.i38 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %type2.i38, align 4
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end.if.end6_crit_edge
  br i1 %update_barrier, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end6
  %plh_barrier.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 10
  %46 = ptrtoint ptr %plh_barrier.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %plh_barrier.i, align 8
  %sub.i.i = sub i32 %3, %47
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp sgt i32 %sub.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool.not.i39 = icmp eq i32 %47, 0
  %or.cond.i = or i1 %tobool.not.i39, %cmp.i.i
  br i1 %or.cond.i, label %if.then.i, label %if.then7.cleanup_crit_edge

if.then7.cleanup_crit_edge:                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i:                                        ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #18
  %48 = ptrtoint ptr %plh_barrier.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %3, ptr %plh_barrier.i, align 8
  br label %cleanup

if.end8:                                          ; preds = %if.end6
  %plh_outstanding = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %plh_outstanding, i32 noundef 4) #16
  %49 = ptrtoint ptr %plh_outstanding to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %plh_outstanding, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %50)
  %cmp = icmp eq i32 %50, 1
  br i1 %cmp, label %if.then10, label %if.end8.cleanup_crit_edge

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then10:                                        ; preds = %if.end8
  %51 = ptrtoint ptr %plh_stateid to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %plh_stateid, align 4
  %plh_barrier.i41 = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 10
  %53 = ptrtoint ptr %plh_barrier.i41 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %plh_barrier.i41, align 8
  %sub.i.i42 = sub i32 %52, %54
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i42)
  %cmp.i.i43 = icmp sgt i32 %sub.i.i42, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool.not.i44 = icmp eq i32 %54, 0
  %or.cond.i45 = or i1 %tobool.not.i44, %cmp.i.i43
  br i1 %or.cond.i45, label %if.then.i46, label %if.then10.cleanup_crit_edge

if.then10.cleanup_crit_edge:                      ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i46:                                      ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #18
  %55 = ptrtoint ptr %plh_barrier.i41 to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %52, ptr %plh_barrier.i41, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.then.i46, %if.then10.cleanup_crit_edge, %if.end8.cleanup_crit_edge, %if.then.i, %if.then7.cleanup_crit_edge, %pnfs_clear_layoutreturn_info.exit
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_layoutget_free(ptr noundef %lgp) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %layout = getelementptr inbounds %struct.nfs4_layoutget_args, ptr %lgp, i32 0, i32 8
  %pglen = getelementptr inbounds %struct.nfs4_layoutget_args, ptr %lgp, i32 0, i32 8, i32 1
  %0 = ptrtoint ptr %pglen to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %pglen, align 4
  %div8 = lshr i32 %1, 12
  %2 = ptrtoint ptr %layout to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %layout, align 8
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %entry.nfs4_free_pages.exit_crit_edge, label %for.cond.preheader.i

entry.nfs4_free_pages.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfs4_free_pages.exit

for.cond.preheader.i:                             ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %1)
  %cmp11.not.i = icmp ult i32 %1, 4096
  br i1 %cmp11.not.i, label %for.cond.preheader.i.for.end.i_crit_edge, label %for.cond.preheader.i.for.body.i_crit_edge

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.cond.preheader.i.for.end.i_crit_edge:         ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i

for.body.i:                                       ; preds = %if.end3.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %i.012.i = phi i32 [ %inc.i, %if.end3.i.for.body.i_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr ptr, ptr %3, i32 %i.012.i
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %arrayidx.i, align 4
  %tobool1.not.i = icmp eq ptr %5, null
  br i1 %tobool1.not.i, label %for.body.i.for.end.i_crit_edge, label %if.end3.i

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i

if.end3.i:                                        ; preds = %for.body.i
  tail call void @__free_pages(ptr noundef nonnull %5, i32 noundef 0) #16
  %inc.i = add nuw nsw i32 %i.012.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %div8
  br i1 %exitcond.not.i, label %if.end3.i.for.end.i_crit_edge, label %if.end3.i.for.body.i_crit_edge

if.end3.i.for.body.i_crit_edge:                   ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

if.end3.i.for.end.i_crit_edge:                    ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i

for.end.i:                                        ; preds = %if.end3.i.for.end.i_crit_edge, %for.body.i.for.end.i_crit_edge, %for.cond.preheader.i.for.end.i_crit_edge
  tail call void @kfree(ptr noundef nonnull %3) #16
  br label %nfs4_free_pages.exit

nfs4_free_pages.exit:                             ; preds = %for.end.i, %entry.nfs4_free_pages.exit_crit_edge
  %lo = getelementptr inbounds %struct.nfs4_layoutget, ptr %lgp, i32 0, i32 3
  %6 = ptrtoint ptr %lo to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %lo, align 4
  tail call void @pnfs_put_layout_hdr(ptr noundef %7)
  %ctx = getelementptr inbounds %struct.nfs4_layoutget_args, ptr %lgp, i32 0, i32 6
  %8 = ptrtoint ptr %ctx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ctx, align 8
  tail call void @put_nfs_open_context(ptr noundef %9) #16
  tail call void @kfree(ptr noundef %lgp) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_nfs_open_context(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_layoutreturn_free_lsegs(ptr noundef %lo, ptr nocapture noundef readonly %arg_stateid, ptr noundef %range, ptr noundef readonly %stateid) local_unnamed_addr #0 align 64 {
entry:
  %freeme = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %plh_inode = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 15
  %0 = ptrtoint ptr %plh_inode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %plh_inode, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %freeme) #16
  %2 = getelementptr inbounds %struct.list_head, ptr %freeme, i32 0, i32 1
  %3 = ptrtoint ptr %freeme to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %freeme, ptr %freeme, align 4
  %4 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %freeme, ptr %2, align 4
  %i_lock = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 18
  call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %plh_flags.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 8
  %5 = ptrtoint ptr %plh_flags.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %plh_flags.i, align 4
  %7 = and i32 %6, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp.i = icmp eq i32 %7, 0
  br i1 %cmp.i, label %lor.lhs.false, label %entry.out_unlock_crit_edge

entry.out_unlock_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_unlock

lor.lhs.false:                                    ; preds = %entry
  %other.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 9, i32 0, i32 0, i32 1
  %other1.i = getelementptr inbounds %struct.anon.132, ptr %arg_stateid, i32 0, i32 1
  %bcmp.i = call i32 @bcmp(ptr noundef dereferenceable(12) %other.i, ptr noundef dereferenceable(12) %other1.i, i32 12) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i)
  %cmp.i19 = icmp eq i32 %bcmp.i, 0
  br i1 %cmp.i19, label %if.end, label %lor.lhs.false.out_unlock_crit_edge

lor.lhs.false.out_unlock_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_unlock

if.end:                                           ; preds = %lor.lhs.false
  %tobool.not = icmp eq ptr %stateid, null
  br i1 %tobool.not, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.end
  %8 = ptrtoint ptr %arg_stateid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arg_stateid, align 4
  %call3 = call i32 @pnfs_mark_matching_lsegs_invalid(ptr noundef %lo, ptr noundef nonnull %freeme, ptr noundef %range, i32 noundef %9)
  %plh_return_segs.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 5
  %10 = ptrtoint ptr %plh_return_segs.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %plh_return_segs.i, align 8
  %cmp.not23.i = icmp eq ptr %11, %plh_return_segs.i
  br i1 %cmp.not23.i, label %if.then2.pnfs_free_returned_lsegs.exit_crit_edge, label %for.body.lr.ph.i

if.then2.pnfs_free_returned_lsegs.exit_crit_edge: ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_returned_lsegs.exit

for.body.lr.ph.i:                                 ; preds = %if.then2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp.not.i.i = icmp eq i32 %9, 0
  %cmp1.i.i = icmp eq ptr %range, null
  %offset1.i.i.i.i = getelementptr inbounds %struct.pnfs_layout_range, ptr %range, i32 0, i32 1
  %length2.i.i.i.i = getelementptr inbounds %struct.pnfs_layout_range, ptr %range, i32 0, i32 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %lseg.024.i = phi ptr [ %11, %for.body.lr.ph.i ], [ %next.026.i, %for.inc.i.for.body.i_crit_edge ]
  %12 = ptrtoint ptr %lseg.024.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %next.026.i = load ptr, ptr %lseg.024.i, align 8
  br i1 %cmp.not.i.i, label %for.body.i.if.end.i.i_crit_edge, label %land.lhs.true.i.i

for.body.i.if.end.i.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i
  %pls_seq.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.024.i, i32 0, i32 5
  %13 = ptrtoint ptr %pls_seq.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %pls_seq.i.i, align 4
  %sub.i.i.i = sub i32 %14, %9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i)
  %cmp.i.i.i = icmp sgt i32 %sub.i.i.i, 0
  br i1 %cmp.i.i.i, label %land.lhs.true.i.i.for.inc.i_crit_edge, label %land.lhs.true.i.i.if.end.i.i_crit_edge

land.lhs.true.i.i.if.end.i.i_crit_edge:           ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i

land.lhs.true.i.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i.if.end.i.i_crit_edge, %for.body.i.if.end.i.i_crit_edge
  br i1 %cmp1.i.i, label %if.end.i.i.if.then.i_crit_edge, label %if.end3.i.i

if.end.i.i.if.then.i_crit_edge:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i

if.end3.i.i:                                      ; preds = %if.end.i.i
  %15 = ptrtoint ptr %range to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %range, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %16)
  %cmp.i8.i.i = icmp eq i32 %16, 3
  br i1 %cmp.i8.i.i, label %if.end3.i.i.land.rhs.i.i.i_crit_edge, label %lor.lhs.false.i.i.i

if.end3.i.i.land.rhs.i.i.i_crit_edge:             ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs.i.i.i

lor.lhs.false.i.i.i:                              ; preds = %if.end3.i.i
  %pls_range.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.024.i, i32 0, i32 3
  %17 = ptrtoint ptr %pls_range.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %pls_range.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %16)
  %cmp3.i.i.i = icmp eq i32 %18, %16
  br i1 %cmp3.i.i.i, label %lor.lhs.false.i.i.i.land.rhs.i.i.i_crit_edge, label %lor.lhs.false.i.i.i.for.inc.i_crit_edge

lor.lhs.false.i.i.i.for.inc.i_crit_edge:          ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

lor.lhs.false.i.i.i.land.rhs.i.i.i_crit_edge:     ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs.i.i.i

land.rhs.i.i.i:                                   ; preds = %lor.lhs.false.i.i.i.land.rhs.i.i.i_crit_edge, %if.end3.i.i.land.rhs.i.i.i_crit_edge
  %offset.i.i.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.024.i, i32 0, i32 3, i32 1
  %19 = ptrtoint ptr %offset.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %offset.i.i.i.i, align 8
  %length.i.i.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.024.i, i32 0, i32 3, i32 2
  %21 = ptrtoint ptr %length.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %length.i.i.i.i, align 8
  %23 = call i64 @llvm.uadd.sat.i64(i64 %20, i64 %22) #16
  %24 = ptrtoint ptr %offset1.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %offset1.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %23)
  %cmp.i.i.i.i.i = icmp eq i64 %23, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %25, i64 %23)
  %cmp1.i.i.i.i.i = icmp ult i64 %25, %23
  %or.cond.i.i.i.i.i = or i1 %cmp.i.i.i.i.i, %cmp1.i.i.i.i.i
  br i1 %or.cond.i.i.i.i.i, label %pnfs_match_lseg_recall.exit.i, label %land.rhs.i.i.i.for.inc.i_crit_edge

land.rhs.i.i.i.for.inc.i_crit_edge:               ; preds = %land.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

pnfs_match_lseg_recall.exit.i:                    ; preds = %land.rhs.i.i.i
  %26 = ptrtoint ptr %length2.i.i.i.i to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %length2.i.i.i.i, align 8
  %28 = call i64 @llvm.uadd.sat.i64(i64 %25, i64 %27) #16
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %28)
  %cmp2.i.i.i.i.i = icmp eq i64 %28, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %20, i64 %28)
  %cmp3.i.i.i.i.i = icmp ult i64 %20, %28
  %spec.select.i.i.i.i.i = or i1 %cmp2.i.i.i.i.i, %cmp3.i.i.i.i.i
  br i1 %spec.select.i.i.i.i.i, label %pnfs_match_lseg_recall.exit.i.if.then.i_crit_edge, label %pnfs_match_lseg_recall.exit.i.for.inc.i_crit_edge

pnfs_match_lseg_recall.exit.i.for.inc.i_crit_edge: ; preds = %pnfs_match_lseg_recall.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

pnfs_match_lseg_recall.exit.i.if.then.i_crit_edge: ; preds = %pnfs_match_lseg_recall.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i

if.then.i:                                        ; preds = %pnfs_match_lseg_recall.exit.i.if.then.i_crit_edge, %if.end.i.i.if.then.i_crit_edge
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %lseg.024.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then.i.__list_del_entry.exit.i.i_crit_edge

if.then.i.__list_del_entry.exit.i.i_crit_edge:    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %__list_del_entry.exit.i.i

if.end.i.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %lseg.024.i, i32 0, i32 1
  %29 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %prev.i.i.i, align 4
  %31 = ptrtoint ptr %lseg.024.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %lseg.024.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %30, ptr %prev1.i.i.i.i, align 4
  %34 = ptrtoint ptr %30 to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %32, ptr %30, align 4
  br label %__list_del_entry.exit.i.i

__list_del_entry.exit.i.i:                        ; preds = %if.end.i.i.i, %if.then.i.__list_del_entry.exit.i.i_crit_edge
  %35 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %2, align 4
  %call.i.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %lseg.024.i, ptr noundef %36, ptr noundef nonnull %freeme) #16
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %__list_del_entry.exit.i.i.for.inc.i_crit_edge

__list_del_entry.exit.i.i.for.inc.i_crit_edge:    ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.end.i.i.i.i:                                   ; preds = %__list_del_entry.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %37 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %lseg.024.i, ptr %2, align 4
  %38 = ptrtoint ptr %lseg.024.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %freeme, ptr %lseg.024.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %lseg.024.i, i32 0, i32 1
  %39 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %36, ptr %prev3.i.i.i.i, align 4
  %40 = ptrtoint ptr %36 to i32
  call void @__asan_store4_noabort(i32 %40)
  store volatile ptr %lseg.024.i, ptr %36, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i.i.i.i, %__list_del_entry.exit.i.i.for.inc.i_crit_edge, %pnfs_match_lseg_recall.exit.i.for.inc.i_crit_edge, %land.rhs.i.i.i.for.inc.i_crit_edge, %lor.lhs.false.i.i.i.for.inc.i_crit_edge, %land.lhs.true.i.i.for.inc.i_crit_edge
  %cmp.not.i = icmp eq ptr %next.026.i, %plh_return_segs.i
  br i1 %cmp.not.i, label %for.inc.i.pnfs_free_returned_lsegs.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.pnfs_free_returned_lsegs.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_returned_lsegs.exit

pnfs_free_returned_lsegs.exit:                    ; preds = %for.inc.i.pnfs_free_returned_lsegs.exit_crit_edge, %if.then2.pnfs_free_returned_lsegs.exit_crit_edge
  call void @pnfs_set_layout_stateid(ptr noundef %lo, ptr noundef nonnull %stateid, ptr noundef null, i1 noundef zeroext true)
  br label %out_unlock

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call4 = call i32 @pnfs_mark_layout_stateid_invalid(ptr noundef %lo, ptr noundef nonnull %freeme)
  br label %out_unlock

out_unlock:                                       ; preds = %if.else, %pnfs_free_returned_lsegs.exit, %lor.lhs.false.out_unlock_crit_edge, %entry.out_unlock_crit_edge
  %call.i.i.i21 = call zeroext i1 @__kasan_check_write(ptr noundef %plh_flags.i, i32 noundef 4) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !419
  call void @llvm.prefetch.p0(ptr %plh_flags.i, i32 1, i32 3, i32 1) #16
  %41 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %plh_flags.i, ptr %plh_flags.i, i32 8, ptr elementtype(i32) %plh_flags.i) #16, !srcloc !420
  call void @_clear_bit(i32 noundef 4, ptr noundef %plh_flags.i) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !421
  call void @wake_up_bit(ptr noundef %plh_flags.i, i32 noundef 3) #16
  %42 = ptrtoint ptr %plh_inode to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %plh_inode, align 4
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %43, i32 0, i32 8
  %44 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %i_sb.i.i, align 4
  %s_fs_info.i.i.i = getelementptr inbounds %struct.super_block, ptr %45, i32 0, i32 33
  %46 = ptrtoint ptr %s_fs_info.i.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %s_fs_info.i.i.i, align 16
  %roc_rpcwaitq.i = getelementptr inbounds %struct.nfs_server, ptr %47, i32 0, i32 47
  call void @rpc_wake_up(ptr noundef %roc_rpcwaitq.i) #16
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  %48 = ptrtoint ptr %freeme to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile ptr, ptr %freeme, align 4
  %cmp.i.not.i = icmp eq ptr %49, %freeme
  br i1 %cmp.i.not.i, label %out_unlock.pnfs_free_lseg_list.exit_crit_edge, label %out_unlock.for.body.i23_crit_edge

out_unlock.for.body.i23_crit_edge:                ; preds = %out_unlock
  br label %for.body.i23

out_unlock.pnfs_free_lseg_list.exit_crit_edge:    ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg_list.exit

for.body.i23:                                     ; preds = %pnfs_free_lseg.exit.i.for.body.i23_crit_edge, %out_unlock.for.body.i23_crit_edge
  %lseg.021.i = phi ptr [ %tmp.0.i, %pnfs_free_lseg.exit.i.for.body.i23_crit_edge ], [ %49, %out_unlock.for.body.i23_crit_edge ]
  %50 = ptrtoint ptr %lseg.021.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %tmp.0.i = load ptr, ptr %lseg.021.i, align 8
  %call.i.i.i22 = call zeroext i1 @__list_del_entry_valid(ptr noundef %lseg.021.i) #16
  br i1 %call.i.i.i22, label %if.end.i.i.i26, label %for.body.i23.list_del.exit.i_crit_edge

for.body.i23.list_del.exit.i_crit_edge:           ; preds = %for.body.i23
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i

if.end.i.i.i26:                                   ; preds = %for.body.i23
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i24 = getelementptr inbounds %struct.list_head, ptr %lseg.021.i, i32 0, i32 1
  %51 = ptrtoint ptr %prev.i.i.i24 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %prev.i.i.i24, align 4
  %53 = ptrtoint ptr %lseg.021.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %lseg.021.i, align 4
  %prev1.i.i.i.i25 = getelementptr inbounds %struct.list_head, ptr %54, i32 0, i32 1
  %55 = ptrtoint ptr %prev1.i.i.i.i25 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %52, ptr %prev1.i.i.i.i25, align 4
  %56 = ptrtoint ptr %52 to i32
  call void @__asan_store4_noabort(i32 %56)
  store volatile ptr %54, ptr %52, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i26, %for.body.i23.list_del.exit.i_crit_edge
  %57 = ptrtoint ptr %lseg.021.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr inttoptr (i32 256 to ptr), ptr %lseg.021.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %lseg.021.i, i32 0, i32 1
  %58 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  %cmp.not.i.i27 = icmp eq ptr %lseg.021.i, null
  br i1 %cmp.not.i.i27, label %list_del.exit.i.pnfs_free_lseg.exit.i_crit_edge, label %if.then.i.i

list_del.exit.i.pnfs_free_lseg.exit.i_crit_edge:  ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg.exit.i

if.then.i.i:                                      ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %pls_layout.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.021.i, i32 0, i32 7
  %59 = ptrtoint ptr %pls_layout.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %pls_layout.i.i, align 4
  %plh_inode.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %60, i32 0, i32 15
  %61 = ptrtoint ptr %plh_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %plh_inode.i.i, align 4
  %i_sb.i.i.i = getelementptr inbounds %struct.inode, ptr %62, i32 0, i32 8
  %63 = ptrtoint ptr %i_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %i_sb.i.i.i, align 4
  %s_fs_info.i.i.i.i = getelementptr inbounds %struct.super_block, ptr %64, i32 0, i32 33
  %65 = ptrtoint ptr %s_fs_info.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %s_fs_info.i.i.i.i, align 16
  %pnfs_curr_ld.i.i = getelementptr inbounds %struct.nfs_server, ptr %66, i32 0, i32 46
  %67 = ptrtoint ptr %pnfs_curr_ld.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %pnfs_curr_ld.i.i, align 4
  %free_lseg.i.i = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %68, i32 0, i32 12
  %69 = ptrtoint ptr %free_lseg.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %free_lseg.i.i, align 4
  call void %70(ptr noundef nonnull %lseg.021.i) #16
  br label %pnfs_free_lseg.exit.i

pnfs_free_lseg.exit.i:                            ; preds = %if.then.i.i, %list_del.exit.i.pnfs_free_lseg.exit.i_crit_edge
  %cmp.not.i28 = icmp eq ptr %tmp.0.i, %freeme
  br i1 %cmp.not.i28, label %pnfs_free_lseg.exit.i.pnfs_free_lseg_list.exit_crit_edge, label %pnfs_free_lseg.exit.i.for.body.i23_crit_edge

pnfs_free_lseg.exit.i.for.body.i23_crit_edge:     ; preds = %pnfs_free_lseg.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i23

pnfs_free_lseg.exit.i.pnfs_free_lseg_list.exit_crit_edge: ; preds = %pnfs_free_lseg.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg_list.exit

pnfs_free_lseg_list.exit:                         ; preds = %pnfs_free_lseg.exit.i.pnfs_free_lseg_list.exit_crit_edge, %out_unlock.pnfs_free_lseg_list.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %freeme) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @_pnfs_return_layout(ptr noundef %ino) local_unnamed_addr #0 align 64 {
entry:
  %range = alloca %struct.pnfs_layout_range, align 8
  %tmp_list = alloca %struct.list_head, align 4
  %cred = alloca ptr, align 4
  %stateid = alloca %struct.nfs4_stateid_struct, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %range) #16
  %0 = call ptr @memcpy(ptr %range, ptr @__const.pnfs_layout_process.range, i32 24)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp_list) #16
  %1 = getelementptr inbounds %struct.list_head, ptr %tmp_list, i32 0, i32 1
  %2 = ptrtoint ptr %tmp_list to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %tmp_list, ptr %tmp_list, align 4
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %tmp_list, ptr %1, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cred) #16
  %4 = ptrtoint ptr %cred to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr inttoptr (i32 -1 to ptr), ptr %cred, align 4, !annotation !417
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %stateid) #16
  %5 = call ptr @memset(ptr %stateid, i32 255, i32 20)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %6 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %6, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end6_crit_edge, label %do.end, !prof !413

entry.do.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end6

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %i_ino = getelementptr inbounds %struct.inode, ptr %ino, i32 0, i32 11
  %7 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %i_ino, align 8
  %call4 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.42, ptr noundef nonnull @.str.43, i32 noundef %8) #19
  br label %do.end6

do.end6:                                          ; preds = %do.end, %entry.do.end6_crit_edge
  %i_lock = getelementptr inbounds %struct.inode, ptr %ino, i32 0, i32 18
  call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %layout = getelementptr i8, ptr %ino, i32 -32
  %9 = ptrtoint ptr %layout to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %layout, align 8
  %tobool7.not = icmp eq ptr %10, null
  br i1 %tobool7.not, label %if.then8, label %if.end28

if.then8:                                         ; preds = %do.end6
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %11 = load i32, ptr @nfs_debug, align 4
  %and11 = and i32 %11, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and11)
  %tobool12.not = icmp eq i32 %and11, 0
  br i1 %tobool12.not, label %if.then8.do.body83_crit_edge, label %do.end22, !prof !413

if.then8.do.body83_crit_edge:                     ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body83

do.end22:                                         ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #18
  %call24 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.45, ptr noundef nonnull @.str.43) #19
  br label %do.body83

if.end28:                                         ; preds = %do.end6
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %10, i32 noundef 4) #16
  call void @llvm.prefetch.p0(ptr nonnull %10, i32 1, i32 3, i32 1) #16
  %12 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %10, ptr nonnull %10, i32 1, ptr nonnull elementtype(i32) %10) #16, !srcloc !415
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %12, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end28.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !416

if.end28.if.end15.sink.split.i.i.i.i_crit_edge:   ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end28
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %13 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %13)
  %.not.i.i.i.i = icmp sgt i32 %13, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !413

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_get_layout_hdr.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end28.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end28.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef nonnull %10, i32 noundef %.sink.i.i.i.i) #16
  br label %pnfs_get_layout_hdr.exit

pnfs_get_layout_hdr.exit:                         ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge
  %plh_flags = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %10, i32 0, i32 8
  %14 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %plh_flags, align 4
  %16 = and i32 %15, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool30.not = icmp eq i32 %16, 0
  br i1 %tobool30.not, label %pnfs_get_layout_hdr.exit.if.end39_crit_edge, label %if.then31

pnfs_get_layout_hdr.exit.if.end39_crit_edge:      ; preds = %pnfs_get_layout_hdr.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end39

if.then31:                                        ; preds = %pnfs_get_layout_hdr.exit
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  call void @__might_sleep(ptr noundef nonnull @.str.123, i32 noundef 73) #16
  %17 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %plh_flags, align 4
  %19 = and i32 %18, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.not.i = icmp eq i32 %19, 0
  br i1 %tobool.not.i, label %if.then31.if.end37_crit_edge, label %wait_on_bit.exit

if.then31.if.end37_crit_edge:                     ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end37

wait_on_bit.exit:                                 ; preds = %if.then31
  %call3.i = call i32 @out_of_line_wait_on_bit(ptr noundef %plh_flags, i32 noundef 3, ptr noundef nonnull @bit_wait, i32 noundef 2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool35.not = icmp eq i32 %call3.i, 0
  br i1 %tobool35.not, label %wait_on_bit.exit.if.end37_crit_edge, label %wait_on_bit.exit.out_put_layout_hdr_crit_edge

wait_on_bit.exit.out_put_layout_hdr_crit_edge:    ; preds = %wait_on_bit.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_put_layout_hdr

wait_on_bit.exit.if.end37_crit_edge:              ; preds = %wait_on_bit.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end37

if.end37:                                         ; preds = %wait_on_bit.exit.if.end37_crit_edge, %if.then31.if.end37_crit_edge
  call void @_raw_spin_lock(ptr noundef %i_lock) #16
  br label %if.end39

if.end39:                                         ; preds = %if.end37, %pnfs_get_layout_hdr.exit.if.end39_crit_edge
  %20 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %plh_flags, align 4
  %22 = and i32 %21, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %cmp.i = icmp ne i32 %22, 0
  %flags.i = getelementptr i8, ptr %ino, i32 -308
  %call1.i = call i32 @_test_and_clear_bit(i32 noundef 9, ptr noundef %flags.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i125 = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i125, label %if.end39.pnfs_clear_layoutcommit.exit_crit_edge, label %if.end.i126

if.end39.pnfs_clear_layoutcommit.exit_crit_edge:  ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_clear_layoutcommit.exit

if.end.i126:                                      ; preds = %if.end39
  %23 = ptrtoint ptr %layout to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %layout, align 8
  %plh_segs.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %24, i32 0, i32 4
  %25 = ptrtoint ptr %plh_segs.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %plh_segs.i, align 8
  %cmp.not30.i = icmp eq ptr %26, %plh_segs.i
  br i1 %cmp.not30.i, label %if.end.i126.pnfs_clear_layoutcommit.exit_crit_edge, label %if.end.i126.for.body.i_crit_edge

if.end.i126.for.body.i_crit_edge:                 ; preds = %if.end.i126
  br label %for.body.i

if.end.i126.pnfs_clear_layoutcommit.exit_crit_edge: ; preds = %if.end.i126
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_clear_layoutcommit.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end.i126.for.body.i_crit_edge
  %lseg.031.i = phi ptr [ %tmp.032.i, %for.inc.i.for.body.i_crit_edge ], [ %26, %if.end.i126.for.body.i_crit_edge ]
  %27 = ptrtoint ptr %lseg.031.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %tmp.032.i = load ptr, ptr %lseg.031.i, align 8
  %pls_flags.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.031.i, i32 0, i32 6
  %call10.i = call i32 @_test_and_clear_bit(i32 noundef 2, ptr noundef %pls_flags.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool11.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool11.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.end13.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.end13.i:                                       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %call14.i = call fastcc zeroext i1 @pnfs_lseg_dec_and_remove_zero(ptr noundef %lseg.031.i, ptr noundef nonnull %tmp_list) #16
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end13.i, %for.body.i.for.inc.i_crit_edge
  %28 = ptrtoint ptr %layout to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %layout, align 8
  %plh_segs9.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %29, i32 0, i32 4
  %cmp.not.i = icmp eq ptr %tmp.032.i, %plh_segs9.i
  br i1 %cmp.not.i, label %for.inc.i.pnfs_clear_layoutcommit.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.pnfs_clear_layoutcommit.exit_crit_edge: ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_clear_layoutcommit.exit

pnfs_clear_layoutcommit.exit:                     ; preds = %for.inc.i.pnfs_clear_layoutcommit.exit_crit_edge, %if.end.i126.pnfs_clear_layoutcommit.exit_crit_edge, %if.end39.pnfs_clear_layoutcommit.exit_crit_edge
  %call41 = call i32 @pnfs_mark_matching_lsegs_return(ptr noundef nonnull %10, ptr noundef nonnull %tmp_list, ptr noundef nonnull %range, i32 noundef 0)
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %ino, i32 0, i32 8
  %30 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %31, i32 0, i32 33
  %32 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %s_fs_info.i.i, align 16
  %pnfs_curr_ld = getelementptr inbounds %struct.nfs_server, ptr %33, i32 0, i32 46
  %34 = ptrtoint ptr %pnfs_curr_ld to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %pnfs_curr_ld, align 4
  %return_range = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %35, i32 0, i32 14
  %36 = ptrtoint ptr %return_range to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %return_range, align 4
  %tobool43.not = icmp eq ptr %37, null
  br i1 %tobool43.not, label %pnfs_clear_layoutcommit.exit.if.end48_crit_edge, label %if.then44

pnfs_clear_layoutcommit.exit.if.end48_crit_edge:  ; preds = %pnfs_clear_layoutcommit.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end48

if.then44:                                        ; preds = %pnfs_clear_layoutcommit.exit
  call void @__sanitizer_cov_trace_pc() #18
  call void %37(ptr noundef nonnull %10, ptr noundef nonnull %range) #16
  br label %if.end48

if.end48:                                         ; preds = %if.then44, %pnfs_clear_layoutcommit.exit.if.end48_crit_edge
  %38 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %plh_flags, align 4
  %40 = and i32 %39, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool51.not = icmp eq i32 %40, 0
  %brmerge = select i1 %tobool51.not, i1 true, i1 %cmp.i
  br i1 %brmerge, label %if.then53, label %if.end73

if.then53:                                        ; preds = %if.end48
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %41 = load i32, ptr @nfs_debug, align 4
  %and56 = and i32 %41, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and56)
  %tobool57.not = icmp eq i32 %and56, 0
  br i1 %tobool57.not, label %if.then53.out_wait_layoutreturn_crit_edge, label %do.end67, !prof !413

if.then53.out_wait_layoutreturn_crit_edge:        ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_wait_layoutreturn

do.end67:                                         ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #18
  %call69 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.48, ptr noundef nonnull @.str.43) #19
  br label %out_wait_layoutreturn

if.end73:                                         ; preds = %if.end48
  %call74 = call fastcc zeroext i1 @pnfs_prepare_layoutreturn(ptr noundef nonnull %10, ptr noundef nonnull %stateid, ptr noundef nonnull %cred, ptr noundef null)
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  br i1 %call74, label %if.then78, label %if.end73.out_wait_layoutreturn_crit_edge

if.end73.out_wait_layoutreturn_crit_edge:         ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_wait_layoutreturn

if.then78:                                        ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #18
  %call79 = call fastcc i32 @pnfs_send_layoutreturn(ptr noundef nonnull %10, ptr noundef nonnull %stateid, ptr noundef nonnull %cred, i32 noundef 3, i1 noundef zeroext true)
  br label %out_wait_layoutreturn

out_wait_layoutreturn:                            ; preds = %if.then78, %if.end73.out_wait_layoutreturn_crit_edge, %do.end67, %if.then53.out_wait_layoutreturn_crit_edge
  %status.0 = phi i32 [ %call79, %if.then78 ], [ 0, %if.end73.out_wait_layoutreturn_crit_edge ], [ 0, %do.end67 ], [ 0, %if.then53.out_wait_layoutreturn_crit_edge ]
  call void @__might_sleep(ptr noundef nonnull @.str.123, i32 noundef 73) #16
  %42 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %plh_flags, align 4
  %44 = and i32 %43, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool.not.i129 = icmp eq i32 %44, 0
  br i1 %tobool.not.i129, label %out_wait_layoutreturn.out_put_layout_hdr_crit_edge, label %if.end.i131

out_wait_layoutreturn.out_put_layout_hdr_crit_edge: ; preds = %out_wait_layoutreturn
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_put_layout_hdr

if.end.i131:                                      ; preds = %out_wait_layoutreturn
  call void @__sanitizer_cov_trace_pc() #18
  %call3.i130 = call i32 @out_of_line_wait_on_bit(ptr noundef %plh_flags, i32 noundef 3, ptr noundef nonnull @bit_wait, i32 noundef 2) #16
  br label %out_put_layout_hdr

out_put_layout_hdr:                               ; preds = %if.end.i131, %out_wait_layoutreturn.out_put_layout_hdr_crit_edge, %wait_on_bit.exit.out_put_layout_hdr_crit_edge
  %status.1 = phi i32 [ 0, %wait_on_bit.exit.out_put_layout_hdr_crit_edge ], [ %status.0, %out_wait_layoutreturn.out_put_layout_hdr_crit_edge ], [ %status.0, %if.end.i131 ]
  %45 = ptrtoint ptr %tmp_list to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile ptr, ptr %tmp_list, align 4
  %cmp.i.not.i = icmp eq ptr %46, %tmp_list
  br i1 %cmp.i.not.i, label %out_put_layout_hdr.pnfs_free_lseg_list.exit_crit_edge, label %out_put_layout_hdr.for.body.i134_crit_edge

out_put_layout_hdr.for.body.i134_crit_edge:       ; preds = %out_put_layout_hdr
  br label %for.body.i134

out_put_layout_hdr.pnfs_free_lseg_list.exit_crit_edge: ; preds = %out_put_layout_hdr
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg_list.exit

for.body.i134:                                    ; preds = %pnfs_free_lseg.exit.i.for.body.i134_crit_edge, %out_put_layout_hdr.for.body.i134_crit_edge
  %lseg.021.i = phi ptr [ %tmp.0.i, %pnfs_free_lseg.exit.i.for.body.i134_crit_edge ], [ %46, %out_put_layout_hdr.for.body.i134_crit_edge ]
  %47 = ptrtoint ptr %lseg.021.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %tmp.0.i = load ptr, ptr %lseg.021.i, align 8
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %lseg.021.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %for.body.i134.list_del.exit.i_crit_edge

for.body.i134.list_del.exit.i_crit_edge:          ; preds = %for.body.i134
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %for.body.i134
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %lseg.021.i, i32 0, i32 1
  %48 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %prev.i.i.i, align 4
  %50 = ptrtoint ptr %lseg.021.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %lseg.021.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %51, i32 0, i32 1
  %52 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %49, ptr %prev1.i.i.i.i, align 4
  %53 = ptrtoint ptr %49 to i32
  call void @__asan_store4_noabort(i32 %53)
  store volatile ptr %51, ptr %49, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %for.body.i134.list_del.exit.i_crit_edge
  %54 = ptrtoint ptr %lseg.021.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr inttoptr (i32 256 to ptr), ptr %lseg.021.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %lseg.021.i, i32 0, i32 1
  %55 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %lseg.021.i, null
  br i1 %cmp.not.i.i, label %list_del.exit.i.pnfs_free_lseg.exit.i_crit_edge, label %if.then.i.i

list_del.exit.i.pnfs_free_lseg.exit.i_crit_edge:  ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg.exit.i

if.then.i.i:                                      ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %pls_layout.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.021.i, i32 0, i32 7
  %56 = ptrtoint ptr %pls_layout.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %pls_layout.i.i, align 4
  %plh_inode.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %57, i32 0, i32 15
  %58 = ptrtoint ptr %plh_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %plh_inode.i.i, align 4
  %i_sb.i.i.i = getelementptr inbounds %struct.inode, ptr %59, i32 0, i32 8
  %60 = ptrtoint ptr %i_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %i_sb.i.i.i, align 4
  %s_fs_info.i.i.i.i = getelementptr inbounds %struct.super_block, ptr %61, i32 0, i32 33
  %62 = ptrtoint ptr %s_fs_info.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %s_fs_info.i.i.i.i, align 16
  %pnfs_curr_ld.i.i = getelementptr inbounds %struct.nfs_server, ptr %63, i32 0, i32 46
  %64 = ptrtoint ptr %pnfs_curr_ld.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %pnfs_curr_ld.i.i, align 4
  %free_lseg.i.i = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %65, i32 0, i32 12
  %66 = ptrtoint ptr %free_lseg.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %free_lseg.i.i, align 4
  call void %67(ptr noundef nonnull %lseg.021.i) #16
  br label %pnfs_free_lseg.exit.i

pnfs_free_lseg.exit.i:                            ; preds = %if.then.i.i, %list_del.exit.i.pnfs_free_lseg.exit.i_crit_edge
  %cmp.not.i135 = icmp eq ptr %tmp.0.i, %tmp_list
  br i1 %cmp.not.i135, label %pnfs_free_lseg.exit.i.pnfs_free_lseg_list.exit_crit_edge, label %pnfs_free_lseg.exit.i.for.body.i134_crit_edge

pnfs_free_lseg.exit.i.for.body.i134_crit_edge:    ; preds = %pnfs_free_lseg.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i134

pnfs_free_lseg.exit.i.pnfs_free_lseg_list.exit_crit_edge: ; preds = %pnfs_free_lseg.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg_list.exit

pnfs_free_lseg_list.exit:                         ; preds = %pnfs_free_lseg.exit.i.pnfs_free_lseg_list.exit_crit_edge, %out_put_layout_hdr.pnfs_free_lseg_list.exit_crit_edge
  call void @pnfs_put_layout_hdr(ptr noundef nonnull %10)
  br label %do.body83

do.body83:                                        ; preds = %pnfs_free_lseg_list.exit, %do.end22, %if.then8.do.body83_crit_edge
  %status.2 = phi i32 [ %status.1, %pnfs_free_lseg_list.exit ], [ 0, %do.end22 ], [ 0, %if.then8.do.body83_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %68 = load i32, ptr @nfs_debug, align 4
  %and84 = and i32 %68, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and84)
  %tobool85.not = icmp eq i32 %and84, 0
  br i1 %tobool85.not, label %do.body83.do.end100_crit_edge, label %do.end95, !prof !413

do.body83.do.end100_crit_edge:                    ; preds = %do.body83
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end100

do.end95:                                         ; preds = %do.body83
  call void @__sanitizer_cov_trace_pc() #18
  %call97 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.51, ptr noundef nonnull @.str.43, i32 noundef %status.2) #19
  br label %do.end100

do.end100:                                        ; preds = %do.end95, %do.body83.do.end100_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %stateid) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cred) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp_list) #16
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %range) #16
  ret i32 %status.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @pnfs_prepare_layoutreturn(ptr noundef %lo, ptr nocapture noundef %stateid, ptr nocapture noundef writeonly %cred, ptr noundef writeonly %iomode) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %plh_outstanding = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %plh_outstanding, i32 noundef 4) #16
  %0 = ptrtoint ptr %plh_outstanding to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %plh_outstanding, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp.not = icmp eq i32 %1, 0
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %entry
  %plh_flags = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 8
  %call1 = tail call i32 @_test_and_set_bit(i32 noundef 4, ptr noundef %plh_flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end3, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end3:                                          ; preds = %if.end
  tail call void @_set_bit(i32 noundef 3, ptr noundef %plh_flags) #16
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %lo, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %lo, i32 1, i32 3, i32 1) #16
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %lo, ptr %lo, i32 1, ptr elementtype(i32) %lo) #16, !srcloc !415
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end3.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !416

if.end3.if.end15.sink.split.i.i.i.i_crit_edge:    ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end3
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %3 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %3)
  %.not.i.i.i.i = icmp sgt i32 %3, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !413

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_get_layout_hdr.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end3.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end3.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %lo, i32 noundef %.sink.i.i.i.i) #16
  br label %pnfs_get_layout_hdr.exit

pnfs_get_layout_hdr.exit:                         ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge
  %plh_stateid = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 9
  %4 = call ptr @memcpy(ptr %stateid, ptr %plh_stateid, i32 16)
  %type.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 9, i32 1
  %5 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %type.i, align 4
  %type2.i = getelementptr inbounds %struct.nfs4_stateid_struct, ptr %stateid, i32 0, i32 1
  %7 = ptrtoint ptr %type2.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %type2.i, align 4
  %plh_lc_cred = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 14
  %8 = ptrtoint ptr %plh_lc_cred to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %plh_lc_cred, align 8
  %tobool.not.i = icmp eq ptr %9, null
  br i1 %tobool.not.i, label %pnfs_get_layout_hdr.exit.get_cred.exit_crit_edge, label %do.body.i

pnfs_get_layout_hdr.exit.get_cred.exit_crit_edge: ; preds = %pnfs_get_layout_hdr.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %get_cred.exit

do.body.i:                                        ; preds = %pnfs_get_layout_hdr.exit
  %call.i.i38 = tail call zeroext i1 @creds_are_invalid(ptr noundef nonnull %9) #16
  br i1 %call.i.i38, label %if.then.i.i, label %do.body.i.__validate_creds.exit.i_crit_edge, !prof !416

do.body.i.__validate_creds.exit.i_crit_edge:      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %__validate_creds.exit.i

if.then.i.i:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @__invalid_creds(ptr noundef nonnull %9, ptr noundef nonnull @.str.125, i32 noundef 253) #16
  br label %__validate_creds.exit.i

__validate_creds.exit.i:                          ; preds = %if.then.i.i, %do.body.i.__validate_creds.exit.i_crit_edge
  %10 = getelementptr inbounds %struct.cred, ptr %9, i32 0, i32 28
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %10, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %9, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr nonnull %9, i32 1, i32 3, i32 1) #16
  %12 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %9, ptr nonnull %9, i32 1, ptr nonnull elementtype(i32) %9) #16, !srcloc !414
  br label %get_cred.exit

get_cred.exit:                                    ; preds = %__validate_creds.exit.i, %pnfs_get_layout_hdr.exit.get_cred.exit_crit_edge
  %13 = ptrtoint ptr %cred to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %9, ptr %cred, align 4
  %14 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %plh_flags, align 4
  %16 = and i32 %15, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool8.not = icmp eq i32 %16, 0
  br i1 %tobool8.not, label %if.else, label %if.then9

if.then9:                                         ; preds = %get_cred.exit
  %plh_return_seq = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 11
  %17 = ptrtoint ptr %plh_return_seq to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %plh_return_seq, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp10.not = icmp eq i32 %18, 0
  br i1 %cmp10.not, label %if.then9.if.end13_crit_edge, label %if.then11

if.then9.if.end13_crit_edge:                      ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

if.then11:                                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #18
  %19 = ptrtoint ptr %stateid to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %stateid, align 4
  br label %if.end13

if.end13:                                         ; preds = %if.then11, %if.then9.if.end13_crit_edge
  %cmp14.not = icmp eq ptr %iomode, null
  br i1 %cmp14.not, label %if.end13.if.end16_crit_edge, label %if.then15

if.end13.if.end16_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16

if.then15:                                        ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  %plh_return_iomode = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 12
  %20 = ptrtoint ptr %plh_return_iomode to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %plh_return_iomode, align 8
  %22 = ptrtoint ptr %iomode to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %iomode, align 4
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %if.end13.if.end16_crit_edge
  %plh_return_iomode.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 12
  %23 = ptrtoint ptr %plh_return_iomode.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 0, ptr %plh_return_iomode.i, align 8
  %24 = ptrtoint ptr %plh_return_seq to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 0, ptr %plh_return_seq, align 4
  tail call void @_clear_bit(i32 noundef 5, ptr noundef %plh_flags) #16
  %plh_segs.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 4
  %25 = ptrtoint ptr %plh_segs.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %lseg.015.i = load ptr, ptr %plh_segs.i, align 8
  %cmp.not16.i = icmp eq ptr %lseg.015.i, %plh_segs.i
  br i1 %cmp.not16.i, label %if.end16.if.end20_crit_edge, label %for.body.lr.ph.i

if.end16.if.end20_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

for.body.lr.ph.i:                                 ; preds = %if.end16
  %plh_barrier.i.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 10
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %lseg.017.i = phi ptr [ %lseg.015.i, %for.body.lr.ph.i ], [ %lseg.0.i, %for.inc.i.for.body.i_crit_edge ]
  %pls_flags.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.017.i, i32 0, i32 6
  %26 = ptrtoint ptr %pls_flags.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %pls_flags.i, align 4
  %28 = and i32 %27, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool.not.i39 = icmp eq i32 %28, 0
  br i1 %tobool.not.i39, label %for.body.i.for.inc.i_crit_edge, label %if.end.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  %pls_range.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.017.i, i32 0, i32 3
  %29 = ptrtoint ptr %pls_range.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %pls_range.i, align 8
  %31 = ptrtoint ptr %plh_return_iomode.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %plh_return_iomode.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %cmp.not.i.i = icmp eq i32 %32, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %32, i32 %30)
  %cmp2.not.i.i = icmp eq i32 %32, %30
  %33 = or i1 %cmp.not.i.i, %cmp2.not.i.i
  %iomode.addr.0.i.i = select i1 %33, i32 %30, i32 3
  %34 = ptrtoint ptr %plh_return_iomode.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %iomode.addr.0.i.i, ptr %plh_return_iomode.i, align 8
  tail call void @_set_bit(i32 noundef 5, ptr noundef %plh_flags) #16
  %35 = ptrtoint ptr %plh_stateid to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %plh_stateid, align 4
  %37 = ptrtoint ptr %plh_return_seq to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %plh_return_seq, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool.not.i.i = icmp eq i32 %38, 0
  %sub.i.i.i = sub i32 %36, %38
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i)
  %cmp.i.i.i = icmp sgt i32 %sub.i.i.i, 0
  %or.cond.i.i = select i1 %tobool.not.i.i, i1 true, i1 %cmp.i.i.i
  br i1 %or.cond.i.i, label %if.then8.i.i, label %if.end.i.if.end10.i.i_crit_edge

if.end.i.if.end10.i.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i.i

if.then8.i.i:                                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %39 = ptrtoint ptr %plh_return_seq to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %36, ptr %plh_return_seq, align 4
  br label %if.end10.i.i

if.end10.i.i:                                     ; preds = %if.then8.i.i, %if.end.i.if.end10.i.i_crit_edge
  %40 = ptrtoint ptr %plh_barrier.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %plh_barrier.i.i.i, align 8
  %sub.i.i.i.i = sub i32 %36, %41
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i.i)
  %cmp.i.i.i.i = icmp sgt i32 %sub.i.i.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool.not.i.i.i = icmp eq i32 %41, 0
  %or.cond.i.i.i = or i1 %tobool.not.i.i.i, %cmp.i.i.i.i
  br i1 %or.cond.i.i.i, label %if.then.i.i.i, label %if.end10.i.i.for.inc.i_crit_edge

if.end10.i.i.for.inc.i_crit_edge:                 ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then.i.i.i:                                    ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %42 = ptrtoint ptr %plh_barrier.i.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %36, ptr %plh_barrier.i.i.i, align 8
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i.i.i, %if.end10.i.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %43 = ptrtoint ptr %lseg.017.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %lseg.0.i = load ptr, ptr %lseg.017.i, align 8
  %cmp.not.i = icmp eq ptr %lseg.0.i, %plh_segs.i
  br i1 %cmp.not.i, label %for.inc.i.if.end20_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.if.end20_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

if.else:                                          ; preds = %get_cred.exit
  %cmp17.not = icmp eq ptr %iomode, null
  br i1 %cmp17.not, label %if.else.if.end20_crit_edge, label %if.then18

if.else.if.end20_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

if.then18:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %44 = ptrtoint ptr %iomode to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 3, ptr %iomode, align 4
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.else.if.end20_crit_edge, %for.inc.i.if.end20_crit_edge, %if.end16.if.end20_crit_edge
  %45 = ptrtoint ptr %stateid to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %stateid, align 4
  %plh_barrier.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 10
  %47 = ptrtoint ptr %plh_barrier.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %plh_barrier.i, align 8
  %sub.i.i = sub i32 %46, %48
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp sgt i32 %sub.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool.not.i40 = icmp eq i32 %48, 0
  %or.cond.i = or i1 %tobool.not.i40, %cmp.i.i
  br i1 %or.cond.i, label %if.then.i, label %if.end20.return_crit_edge

if.end20.return_crit_edge:                        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.then.i:                                        ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  %49 = ptrtoint ptr %plh_barrier.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %46, ptr %plh_barrier.i, align 8
  br label %return

return:                                           ; preds = %if.then.i, %if.end20.return_crit_edge, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i1 [ false, %entry.return_crit_edge ], [ false, %if.end.return_crit_edge ], [ true, %if.end20.return_crit_edge ], [ true, %if.then.i ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @pnfs_send_layoutreturn(ptr noundef %lo, ptr nocapture noundef readonly %stateid, ptr nocapture noundef %pcred, i32 noundef %iomode, i1 noundef zeroext %sync) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %plh_inode = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 15
  %0 = ptrtoint ptr %plh_inode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %plh_inode, align 4
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i.i, align 16
  %pnfs_curr_ld = getelementptr inbounds %struct.nfs_server, ptr %5, i32 0, i32 46
  %6 = ptrtoint ptr %pnfs_curr_ld to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pnfs_curr_ld, align 4
  %8 = ptrtoint ptr %pcred to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pcred, align 4
  store ptr null, ptr %pcred, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8) to i32))
  %10 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 8), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %10, i32 noundef 3392, i32 noundef 144) #22
  %cmp = icmp eq ptr %call7.i.i, null
  br i1 %cmp, label %if.then, label %if.end, !prof !416

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %i_lock = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #16
  tail call fastcc void @pnfs_clear_layoutreturn_waitbit(ptr noundef %lo)
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  tail call fastcc void @put_cred(ptr noundef %9)
  tail call void @pnfs_put_layout_hdr(ptr noundef %lo)
  br label %do.body

if.end:                                           ; preds = %entry
  %11 = ptrtoint ptr %plh_inode to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %plh_inode, align 4
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %12, i32 0, i32 8
  %13 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %i_sb.i.i, align 4
  %s_fs_info.i.i.i = getelementptr inbounds %struct.super_block, ptr %14, i32 0, i32 33
  %15 = ptrtoint ptr %s_fs_info.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %s_fs_info.i.i.i, align 16
  %pnfs_curr_ld.i = getelementptr inbounds %struct.nfs_server, ptr %16, i32 0, i32 46
  %17 = ptrtoint ptr %pnfs_curr_ld.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pnfs_curr_ld.i, align 4
  %id.i = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %id.i, align 4
  %layout_type.i = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %call7.i.i, i32 0, i32 5
  %21 = ptrtoint ptr %layout_type.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %layout_type.i, align 4
  %inode1.i = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %call7.i.i, i32 0, i32 2
  %22 = ptrtoint ptr %inode1.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %12, ptr %inode1.i, align 4
  %range.i = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %call7.i.i, i32 0, i32 3
  %23 = ptrtoint ptr %range.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %iomode, ptr %range.i, align 8
  %offset.i = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %call7.i.i, i32 0, i32 3, i32 1
  %24 = ptrtoint ptr %offset.i to i32
  call void @__asan_store8_noabort(i32 %24)
  store i64 0, ptr %offset.i, align 8
  %length.i = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %call7.i.i, i32 0, i32 3, i32 2
  %25 = ptrtoint ptr %length.i to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 -1, ptr %length.i, align 8
  %layout.i = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %call7.i.i, i32 0, i32 1
  %26 = ptrtoint ptr %layout.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %lo, ptr %layout.i, align 8
  %stateid5.i = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %call7.i.i, i32 0, i32 4
  %27 = call ptr @memcpy(ptr %stateid5.i, ptr %stateid, i32 16)
  %type.i.i = getelementptr inbounds %struct.nfs4_stateid_struct, ptr %stateid, i32 0, i32 1
  %28 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %type.i.i, align 4
  %type2.i.i = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %call7.i.i, i32 0, i32 4, i32 1
  %30 = ptrtoint ptr %type2.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %type2.i.i, align 8
  %ld_private = getelementptr inbounds %struct.nfs4_layoutreturn, ptr %call7.i.i, i32 0, i32 6
  %ld_private5 = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %call7.i.i, i32 0, i32 6
  %31 = ptrtoint ptr %ld_private5 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %ld_private, ptr %ld_private5, align 8
  %32 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i47 = getelementptr inbounds %struct.super_block, ptr %33, i32 0, i32 33
  %34 = ptrtoint ptr %s_fs_info.i.i47 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %s_fs_info.i.i47, align 16
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %35, align 8
  %clp = getelementptr inbounds %struct.nfs4_layoutreturn, ptr %call7.i.i, i32 0, i32 3
  %38 = ptrtoint ptr %clp to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %37, ptr %clp, align 4
  %cred7 = getelementptr inbounds %struct.nfs4_layoutreturn, ptr %call7.i.i, i32 0, i32 2
  %39 = ptrtoint ptr %cred7 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %9, ptr %cred7, align 8
  %prepare_layoutreturn = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %7, i32 0, i32 23
  %40 = ptrtoint ptr %prepare_layoutreturn to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %prepare_layoutreturn, align 4
  %tobool8.not = icmp eq ptr %41, null
  br i1 %tobool8.not, label %if.end.if.end13_crit_edge, label %if.then9

if.end.if.end13_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

if.then9:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %call12 = tail call i32 %41(ptr noundef nonnull %call7.i.i) #16
  br label %if.end13

if.end13:                                         ; preds = %if.then9, %if.end.if.end13_crit_edge
  %call15 = tail call i32 @nfs4_proc_layoutreturn(ptr noundef nonnull %call7.i.i, i1 noundef zeroext %sync) #16
  br label %do.body

do.body:                                          ; preds = %if.end13, %if.then
  %status.0 = phi i32 [ -12, %if.then ], [ %call15, %if.end13 ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %42 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %42, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool16.not = icmp eq i32 %and, 0
  br i1 %tobool16.not, label %do.body.do.end28_crit_edge, label %do.end, !prof !413

do.body.do.end28_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end28

do.end:                                           ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %call25 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.51, ptr noundef nonnull @.str.124, i32 noundef %status.0) #19
  br label %do.end28

do.end28:                                         ; preds = %do.end, %do.body.do.end28_crit_edge
  ret i32 %status.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pnfs_commit_and_return_layout(ptr noundef %inode) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %i_lock = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %layout = getelementptr i8, ptr %inode, i32 -32
  %0 = ptrtoint ptr %layout to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %layout, align 8
  %cmp = icmp eq ptr %1, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %1, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr nonnull %1, i32 1, i32 3, i32 1) #16
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %1, ptr nonnull %1, i32 1, ptr nonnull elementtype(i32) %1) #16, !srcloc !415
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !416

if.end.if.end15.sink.split.i.i.i.i_crit_edge:     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %3 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %3)
  %.not.i.i.i.i = icmp sgt i32 %3, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !413

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_get_layout_hdr.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef nonnull %1, i32 noundef %.sink.i.i.i.i) #16
  br label %pnfs_get_layout_hdr.exit

pnfs_get_layout_hdr.exit:                         ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge
  %plh_block_lgets = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 6
  %4 = ptrtoint ptr %plh_block_lgets to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %plh_block_lgets, align 8
  %inc = add i32 %5, 1
  store i32 %inc, ptr %plh_block_lgets, align 8
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  %i_mapping = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 9
  %6 = ptrtoint ptr %i_mapping to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %i_mapping, align 8
  %call.i = tail call i32 @filemap_fdatawait_range(ptr noundef %7, i64 noundef 0, i64 noundef 9223372036854775807) #16
  %call4 = tail call i32 @pnfs_layoutcommit_inode(ptr noundef %inode, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %cmp5 = icmp eq i32 %call4, 0
  br i1 %cmp5, label %if.then6, label %pnfs_get_layout_hdr.exit.if.end8_crit_edge

pnfs_get_layout_hdr.exit.if.end8_crit_edge:       ; preds = %pnfs_get_layout_hdr.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.then6:                                         ; preds = %pnfs_get_layout_hdr.exit
  call void @__sanitizer_cov_trace_pc() #18
  %call7 = tail call i32 @_pnfs_return_layout(ptr noundef %inode)
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %pnfs_get_layout_hdr.exit.if.end8_crit_edge
  %ret.0 = phi i32 [ %call7, %if.then6 ], [ %call4, %pnfs_get_layout_hdr.exit.if.end8_crit_edge ]
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %8 = ptrtoint ptr %plh_block_lgets to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %plh_block_lgets, align 8
  %dec = add i32 %9, -1
  store i32 %dec, ptr %plh_block_lgets, align 8
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  tail call void @pnfs_put_layout_hdr(ptr noundef nonnull %1)
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ %ret.0, %if.end8 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pnfs_layoutcommit_inode(ptr noundef %inode, i1 noundef zeroext %sync) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 33
  %2 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_fs_info.i.i, align 16
  %pnfs_curr_ld = getelementptr inbounds %struct.nfs_server, ptr %3, i32 0, i32 46
  %4 = ptrtoint ptr %pnfs_curr_ld to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pnfs_curr_ld, align 4
  %flags.i = getelementptr i8, ptr %inode, i32 -308
  %6 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %flags.i, align 4
  %8 = and i32 %7, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp.not.i = icmp eq i32 %8, 0
  br i1 %cmp.not.i, label %pnfs_layoutcommit_outstanding.exit, label %entry.do.body_crit_edge

entry.do.body_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

pnfs_layoutcommit_outstanding.exit:               ; preds = %entry
  %9 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %flags.i, align 4
  %11 = and i32 %10, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp4.i.not = icmp eq i32 %11, 0
  br i1 %cmp4.i.not, label %pnfs_layoutcommit_outstanding.exit.cleanup_crit_edge, label %pnfs_layoutcommit_outstanding.exit.do.body_crit_edge

pnfs_layoutcommit_outstanding.exit.do.body_crit_edge: ; preds = %pnfs_layoutcommit_outstanding.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

pnfs_layoutcommit_outstanding.exit.cleanup_crit_edge: ; preds = %pnfs_layoutcommit_outstanding.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body:                                          ; preds = %pnfs_layoutcommit_outstanding.exit.do.body_crit_edge, %entry.do.body_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %12 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %12, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.body.do.end10_crit_edge, label %do.end, !prof !413

do.body.do.end10_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end10

do.end:                                           ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %13 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %i_ino, align 8
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.100, ptr noundef nonnull @.str.101, i32 noundef %14) #19
  br label %do.end10

do.end10:                                         ; preds = %do.end, %do.body.do.end10_crit_edge
  %call11 = tail call i32 @_test_and_set_bit(i32 noundef 10, ptr noundef %flags.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %do.end10.if.end22_crit_edge, label %if.then13

do.end10.if.end22_crit_edge:                      ; preds = %do.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22

if.then13:                                        ; preds = %do.end10
  br i1 %sync, label %if.end16, label %if.then13.if.then72_crit_edge

if.then13.if.then72_crit_edge:                    ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then72

if.end16:                                         ; preds = %if.then13
  tail call void @__might_sleep(ptr noundef nonnull @.str.123, i32 noundef 232) #16
  %call.i = tail call i32 @_test_and_set_bit(i32 noundef 10, ptr noundef %flags.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end16.if.end22_crit_edge, label %wait_on_bit_lock_action.exit

if.end16.if.end22_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22

wait_on_bit_lock_action.exit:                     ; preds = %if.end16
  %call3.i = tail call i32 @out_of_line_wait_on_bit_lock(ptr noundef %flags.i, i32 noundef 10, ptr noundef nonnull @nfs_wait_bit_killable, i32 noundef 258) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool19.not = icmp eq i32 %call3.i, 0
  br i1 %tobool19.not, label %wait_on_bit_lock_action.exit.if.end22_crit_edge, label %wait_on_bit_lock_action.exit.if.then72_crit_edge

wait_on_bit_lock_action.exit.if.then72_crit_edge: ; preds = %wait_on_bit_lock_action.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then72

wait_on_bit_lock_action.exit.if.end22_crit_edge:  ; preds = %wait_on_bit_lock_action.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22

if.end22:                                         ; preds = %wait_on_bit_lock_action.exit.if.end22_crit_edge, %if.end16.if.end22_crit_edge, %do.end10.if.end22_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %15 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %15, i32 noundef 3392, i32 noundef 472) #22
  %tobool24.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool24.not, label %if.end22.clear_layoutcommitting_crit_edge, label %if.end26

if.end22.clear_layoutcommitting_crit_edge:        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  br label %clear_layoutcommitting

if.end26:                                         ; preds = %if.end22
  %i_lock = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %call28 = tail call i32 @_test_and_clear_bit(i32 noundef 9, ptr noundef %flags.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28)
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %if.end26.out_unlock_crit_edge, label %if.end31

if.end26.out_unlock_crit_edge:                    ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_unlock

if.end31:                                         ; preds = %if.end26
  %lseg_list = getelementptr inbounds %struct.nfs4_layoutcommit_data, ptr %call7.i.i, i32 0, i32 2
  %16 = ptrtoint ptr %lseg_list to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %lseg_list, ptr %lseg_list, align 8
  %prev.i = getelementptr inbounds %struct.nfs4_layoutcommit_data, ptr %call7.i.i, i32 0, i32 2, i32 1
  %17 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %lseg_list, ptr %prev.i, align 4
  %layout.i = getelementptr i8, ptr %inode, i32 -32
  %18 = ptrtoint ptr %layout.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %layout.i, align 8
  %plh_segs.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %19, i32 0, i32 4
  %20 = ptrtoint ptr %plh_segs.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %lseg.017.i = load ptr, ptr %plh_segs.i, align 8
  %cmp.not19.i = icmp eq ptr %lseg.017.i, %plh_segs.i
  br i1 %cmp.not19.i, label %if.end31.pnfs_list_write_lseg.exit_crit_edge, label %if.end31.for.body.i_crit_edge

if.end31.for.body.i_crit_edge:                    ; preds = %if.end31
  br label %for.body.i

if.end31.pnfs_list_write_lseg.exit_crit_edge:     ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_list_write_lseg.exit

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end31.for.body.i_crit_edge
  %lseg.020.i = phi ptr [ %lseg.0.i, %for.inc.i.for.body.i_crit_edge ], [ %lseg.017.i, %if.end31.for.body.i_crit_edge ]
  %pls_range.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.020.i, i32 0, i32 3
  %21 = ptrtoint ptr %pls_range.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %pls_range.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %22)
  %cmp4.i144 = icmp eq i32 %22, 2
  br i1 %cmp4.i144, label %land.lhs.true.i, label %for.body.i.for.inc.i_crit_edge

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %pls_flags.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.020.i, i32 0, i32 6
  %call5.i = tail call i32 @_test_and_clear_bit(i32 noundef 2, ptr noundef %pls_flags.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool.not.i145 = icmp eq i32 %call5.i, 0
  br i1 %tobool.not.i145, label %land.lhs.true.i.for.inc.i_crit_edge, label %if.then.i

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %pls_lc_list.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.020.i, i32 0, i32 1
  %23 = ptrtoint ptr %lseg_list to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %lseg_list, align 8
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %pls_lc_list.i, ptr noundef %lseg_list, ptr noundef %24) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %if.then.i.for.inc.i_crit_edge

if.then.i.for.inc.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.end.i.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %pls_lc_list.i, ptr %prev1.i.i.i, align 4
  %26 = ptrtoint ptr %pls_lc_list.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %24, ptr %pls_lc_list.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.020.i, i32 0, i32 1, i32 1
  %27 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %lseg_list, ptr %prev3.i.i.i, align 4
  %28 = ptrtoint ptr %lseg_list to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %pls_lc_list.i, ptr %lseg_list, align 8
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.end.i.i.i, %if.then.i.for.inc.i_crit_edge, %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %29 = ptrtoint ptr %lseg.020.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %lseg.0.i = load ptr, ptr %lseg.020.i, align 8
  %30 = ptrtoint ptr %layout.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %layout.i, align 8
  %plh_segs3.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %31, i32 0, i32 4
  %cmp.not.i146 = icmp eq ptr %lseg.0.i, %plh_segs3.i
  br i1 %cmp.not.i146, label %for.inc.i.pnfs_list_write_lseg.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.pnfs_list_write_lseg.exit_crit_edge:    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_list_write_lseg.exit

pnfs_list_write_lseg.exit:                        ; preds = %for.inc.i.pnfs_list_write_lseg.exit_crit_edge, %if.end31.pnfs_list_write_lseg.exit_crit_edge
  %32 = ptrtoint ptr %layout.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %layout.i, align 8
  %plh_lwb = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %33, i32 0, i32 13
  %34 = ptrtoint ptr %plh_lwb to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %plh_lwb, align 8
  %args = getelementptr inbounds %struct.nfs4_layoutcommit_data, ptr %call7.i.i, i32 0, i32 5
  %stateid = getelementptr inbounds %struct.nfs4_layoutcommit_data, ptr %call7.i.i, i32 0, i32 5, i32 1
  %plh_stateid = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %33, i32 0, i32 9
  %36 = call ptr @memcpy(ptr %stateid, ptr %plh_stateid, i32 16)
  %type.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %33, i32 0, i32 9, i32 1
  %37 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %type.i, align 4
  %type2.i = getelementptr inbounds %struct.nfs4_layoutcommit_data, ptr %call7.i.i, i32 0, i32 5, i32 1, i32 1
  %39 = ptrtoint ptr %type2.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %type2.i, align 8
  %plh_lc_cred = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %33, i32 0, i32 14
  %40 = ptrtoint ptr %plh_lc_cred to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %plh_lc_cred, align 8
  %tobool.not.i147 = icmp eq ptr %41, null
  br i1 %tobool.not.i147, label %pnfs_list_write_lseg.exit.get_cred.exit_crit_edge, label %do.body.i

pnfs_list_write_lseg.exit.get_cred.exit_crit_edge: ; preds = %pnfs_list_write_lseg.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %get_cred.exit

do.body.i:                                        ; preds = %pnfs_list_write_lseg.exit
  %call.i.i = tail call zeroext i1 @creds_are_invalid(ptr noundef nonnull %41) #16
  br i1 %call.i.i, label %if.then.i.i, label %do.body.i.__validate_creds.exit.i_crit_edge, !prof !416

do.body.i.__validate_creds.exit.i_crit_edge:      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %__validate_creds.exit.i

if.then.i.i:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @__invalid_creds(ptr noundef nonnull %41, ptr noundef nonnull @.str.125, i32 noundef 253) #16
  br label %__validate_creds.exit.i

__validate_creds.exit.i:                          ; preds = %if.then.i.i, %do.body.i.__validate_creds.exit.i_crit_edge
  %42 = getelementptr inbounds %struct.cred, ptr %41, i32 0, i32 28
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 0, ptr %42, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %41, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr nonnull %41, i32 1, i32 3, i32 1) #16
  %44 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %41, ptr nonnull %41, i32 1, ptr nonnull elementtype(i32) %41) #16, !srcloc !414
  br label %get_cred.exit

get_cred.exit:                                    ; preds = %__validate_creds.exit.i, %pnfs_list_write_lseg.exit.get_cred.exit_crit_edge
  %cred = getelementptr inbounds %struct.nfs4_layoutcommit_data, ptr %call7.i.i, i32 0, i32 3
  %45 = ptrtoint ptr %cred to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %41, ptr %cred, align 8
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  %inode38 = getelementptr inbounds %struct.nfs4_layoutcommit_data, ptr %call7.i.i, i32 0, i32 5, i32 3
  %46 = ptrtoint ptr %inode38 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %inode, ptr %inode38, align 8
  %fattr = getelementptr inbounds %struct.nfs4_layoutcommit_data, ptr %call7.i.i, i32 0, i32 1
  tail call void @nfs_fattr_init(ptr noundef %fattr) #16
  %47 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i149 = getelementptr inbounds %struct.super_block, ptr %48, i32 0, i32 33
  %49 = ptrtoint ptr %s_fs_info.i.i149 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %s_fs_info.i.i149, align 16
  %cache_consistency_bitmask = getelementptr inbounds %struct.nfs_server, ptr %50, i32 0, i32 43
  %bitmask = getelementptr inbounds %struct.nfs4_layoutcommit_data, ptr %call7.i.i, i32 0, i32 5, i32 4
  %51 = ptrtoint ptr %bitmask to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %cache_consistency_bitmask, ptr %bitmask, align 4
  %fattr42 = getelementptr inbounds %struct.nfs4_layoutcommit_data, ptr %call7.i.i, i32 0, i32 6, i32 1
  %52 = ptrtoint ptr %fattr42 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %fattr, ptr %fattr42, align 8
  %sub = add i64 %35, -1
  %53 = getelementptr inbounds %struct.nfs4_layoutcommit_data, ptr %call7.i.i, i32 0, i32 5, i32 2
  %54 = ptrtoint ptr %53 to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 %sub, ptr %53, align 8
  %55 = load ptr, ptr %s_fs_info.i.i149, align 16
  %server = getelementptr inbounds %struct.nfs4_layoutcommit_data, ptr %call7.i.i, i32 0, i32 6, i32 2
  %56 = ptrtoint ptr %server to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %55, ptr %server, align 4
  %prepare_layoutcommit = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %5, i32 0, i32 25
  %57 = ptrtoint ptr %prepare_layoutcommit to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %prepare_layoutcommit, align 4
  %tobool50.not = icmp eq ptr %58, null
  br i1 %tobool50.not, label %get_cred.exit.if.end68_crit_edge, label %if.then51

get_cred.exit.if.end68_crit_edge:                 ; preds = %get_cred.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end68

if.then51:                                        ; preds = %get_cred.exit
  %call54 = tail call i32 %58(ptr noundef %args) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call54)
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %if.then51.if.end68_crit_edge, label %if.then56

if.then51.if.end68_crit_edge:                     ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end68

if.then56:                                        ; preds = %if.then51
  %59 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %cred, align 8
  %tobool.not.i152 = icmp eq ptr %60, null
  br i1 %tobool.not.i152, label %if.then56.put_cred.exit_crit_edge, label %do.body.i154

if.then56.put_cred.exit_crit_edge:                ; preds = %if.then56
  call void @__sanitizer_cov_trace_pc() #18
  br label %put_cred.exit

do.body.i154:                                     ; preds = %if.then56
  %call.i.i153 = tail call zeroext i1 @creds_are_invalid(ptr noundef nonnull %60) #16
  br i1 %call.i.i153, label %if.then.i.i155, label %do.body.i154.__validate_creds.exit.i157_crit_edge, !prof !416

do.body.i154.__validate_creds.exit.i157_crit_edge: ; preds = %do.body.i154
  call void @__sanitizer_cov_trace_pc() #18
  br label %__validate_creds.exit.i157

if.then.i.i155:                                   ; preds = %do.body.i154
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @__invalid_creds(ptr noundef nonnull %60, ptr noundef nonnull @.str.125, i32 noundef 286) #16
  br label %__validate_creds.exit.i157

__validate_creds.exit.i157:                       ; preds = %if.then.i.i155, %do.body.i154.__validate_creds.exit.i157_crit_edge
  %call.i.i.i156 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %60, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !410
  tail call void @llvm.prefetch.p0(ptr nonnull %60, i32 1, i32 3, i32 1) #16
  %61 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %60, ptr nonnull %60, i32 1, ptr nonnull elementtype(i32) %60) #16, !srcloc !411
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %61, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !412
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then1.i, label %__validate_creds.exit.i157.put_cred.exit_crit_edge

__validate_creds.exit.i157.put_cred.exit_crit_edge: ; preds = %__validate_creds.exit.i157
  call void @__sanitizer_cov_trace_pc() #18
  br label %put_cred.exit

if.then1.i:                                       ; preds = %__validate_creds.exit.i157
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @__put_cred(ptr noundef nonnull %60) #16
  br label %put_cred.exit

put_cred.exit:                                    ; preds = %if.then1.i, %__validate_creds.exit.i157.put_cred.exit_crit_edge, %if.then56.put_cred.exit_crit_edge
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #16
  tail call void @_set_bit(i32 noundef 9, ptr noundef %flags.i) #16
  %62 = ptrtoint ptr %layout.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %layout.i, align 8
  %plh_lwb61 = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %63, i32 0, i32 13
  %64 = ptrtoint ptr %plh_lwb61 to i32
  call void @__asan_load8_noabort(i32 %64)
  %65 = load i64, ptr %plh_lwb61, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %35, i64 %65)
  %cmp62 = icmp sgt i64 %35, %65
  br i1 %cmp62, label %if.then63, label %put_cred.exit.out_unlock_crit_edge

put_cred.exit.out_unlock_crit_edge:               ; preds = %put_cred.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_unlock

if.then63:                                        ; preds = %put_cred.exit
  call void @__sanitizer_cov_trace_pc() #18
  %66 = ptrtoint ptr %plh_lwb61 to i32
  call void @__asan_store8_noabort(i32 %66)
  store i64 %35, ptr %plh_lwb61, align 8
  br label %out_unlock

if.end68:                                         ; preds = %if.then51.if.end68_crit_edge, %get_cred.exit.if.end68_crit_edge
  %call70 = tail call i32 @nfs4_proc_layoutcommit(ptr noundef nonnull %call7.i.i, i1 noundef zeroext %sync) #16
  br label %out

out:                                              ; preds = %clear_layoutcommitting, %if.end68
  %status.0 = phi i32 [ %status.2, %clear_layoutcommitting ], [ %call70, %if.end68 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %status.0)
  %tobool71.not = icmp eq i32 %status.0, 0
  br i1 %tobool71.not, label %out.do.body74_crit_edge, label %out.if.then72_crit_edge

out.if.then72_crit_edge:                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then72

out.do.body74_crit_edge:                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body74

if.then72:                                        ; preds = %out.if.then72_crit_edge, %wait_on_bit_lock_action.exit.if.then72_crit_edge, %if.then13.if.then72_crit_edge
  %status.0164 = phi i32 [ %status.0, %out.if.then72_crit_edge ], [ -11, %if.then13.if.then72_crit_edge ], [ %call3.i, %wait_on_bit_lock_action.exit.if.then72_crit_edge ]
  tail call void @__mark_inode_dirty(ptr noundef %inode, i32 noundef 1) #16
  br label %do.body74

do.body74:                                        ; preds = %if.then72, %out.do.body74_crit_edge
  %status.0165 = phi i32 [ 0, %out.do.body74_crit_edge ], [ %status.0164, %if.then72 ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %67 = load i32, ptr @nfs_debug, align 4
  %and75 = and i32 %67, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and75)
  %tobool76.not = icmp eq i32 %and75, 0
  br i1 %tobool76.not, label %do.body74.cleanup_crit_edge, label %do.end86, !prof !413

do.body74.cleanup_crit_edge:                      ; preds = %do.body74
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end86:                                         ; preds = %do.body74
  call void @__sanitizer_cov_trace_pc() #18
  %call88 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.103, ptr noundef nonnull @.str.101, i32 noundef %status.0165) #19
  br label %cleanup

out_unlock:                                       ; preds = %if.then63, %put_cred.exit.out_unlock_crit_edge, %if.end26.out_unlock_crit_edge
  %status.1 = phi i32 [ %call54, %if.then63 ], [ %call54, %put_cred.exit.out_unlock_crit_edge ], [ 0, %if.end26.out_unlock_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #16
  br label %clear_layoutcommitting

clear_layoutcommitting:                           ; preds = %out_unlock, %if.end22.clear_layoutcommitting_crit_edge
  %status.2 = phi i32 [ %status.1, %out_unlock ], [ -12, %if.end22.clear_layoutcommitting_crit_edge ]
  %call.i.i.i159 = tail call zeroext i1 @__kasan_check_write(ptr noundef %flags.i, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !419
  tail call void @llvm.prefetch.p0(ptr %flags.i, i32 1, i32 3, i32 1) #16
  %68 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %flags.i, ptr %flags.i, i32 1024, ptr elementtype(i32) %flags.i) #16, !srcloc !420
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !429
  tail call void @wake_up_bit(ptr noundef %flags.i, i32 noundef 10) #16
  br label %out

cleanup:                                          ; preds = %do.end86, %do.body74.cleanup_crit_edge, %pnfs_layoutcommit_outstanding.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %pnfs_layoutcommit_outstanding.exit.cleanup_crit_edge ], [ %status.0165, %do.end86 ], [ %status.0165, %do.body74.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @pnfs_roc(ptr noundef %ino, ptr noundef %args, ptr nocapture noundef writeonly %res, ptr noundef %cred) local_unnamed_addr #0 align 64 {
entry:
  %lc_cred = alloca ptr, align 4
  %stateid = alloca %struct.nfs4_stateid_struct, align 4
  %iomode = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %lc_cred) #16
  %0 = ptrtoint ptr %lc_cred to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %lc_cred, align 4, !annotation !417
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %stateid) #16
  %1 = getelementptr inbounds %struct.nfs4_stateid_struct, ptr %stateid, i32 0, i32 1
  %2 = call ptr @memset(ptr %stateid, i32 255, i32 20)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %iomode) #16
  %3 = ptrtoint ptr %iomode to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %iomode, align 4
  %layout.i = getelementptr i8, ptr %ino, i32 -32
  %4 = ptrtoint ptr %layout.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %layout.i, align 8
  %cmp.i.not = icmp eq ptr %5, null
  br i1 %cmp.i.not, label %entry.cleanup_crit_edge, label %retry.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

retry.preheader:                                  ; preds = %entry
  %i_lock = getelementptr inbounds %struct.inode, ptr %ino, i32 0, i32 18
  br label %retry

retry:                                            ; preds = %wait_on_bit.exit, %retry.preheader
  %6 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %9, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !424
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #16
  %call.i = tail call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i, label %retry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

retry.rcu_read_lock.exit_crit_edge:               ; preds = %retry
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %retry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 696, ptr noundef nonnull @.str.119) #16
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %retry.rcu_read_lock.exit_crit_edge
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %10 = ptrtoint ptr %layout.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %layout.i, align 8
  %tobool.not = icmp eq ptr %11, null
  br i1 %tobool.not, label %rcu_read_lock.exit.out_noroc_crit_edge, label %lor.lhs.false

rcu_read_lock.exit.out_noroc_crit_edge:           ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_noroc

lor.lhs.false:                                    ; preds = %rcu_read_lock.exit
  %plh_flags.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %11, i32 0, i32 8
  %12 = ptrtoint ptr %plh_flags.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %plh_flags.i, align 4
  %14 = and i32 %13, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %cmp.i188 = icmp eq i32 %14, 0
  br i1 %cmp.i188, label %lor.lhs.false3, label %lor.lhs.false.out_noroc_crit_edge

lor.lhs.false.out_noroc_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_noroc

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %15 = ptrtoint ptr %plh_flags.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %plh_flags.i, align 4
  %17 = and i32 %16, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool5.not = icmp eq i32 %17, 0
  br i1 %tobool5.not, label %if.end7, label %lor.lhs.false3.out_noroc_crit_edge

lor.lhs.false3.out_noroc_crit_edge:               ; preds = %lor.lhs.false3
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_noroc

if.end7:                                          ; preds = %lor.lhs.false3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %11, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr nonnull %11, i32 1, i32 3, i32 1) #16
  %18 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %11, ptr nonnull %11, i32 1, ptr nonnull elementtype(i32) %11) #16, !srcloc !415
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %18, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end7.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !416

if.end7.if.end15.sink.split.i.i.i.i_crit_edge:    ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end7
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %19 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %19)
  %.not.i.i.i.i = icmp sgt i32 %19, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !413

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_get_layout_hdr.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end7.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end7.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef nonnull %11, i32 noundef %.sink.i.i.i.i) #16
  br label %pnfs_get_layout_hdr.exit

pnfs_get_layout_hdr.exit:                         ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge
  %20 = ptrtoint ptr %plh_flags.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile i32, ptr %plh_flags.i, align 4
  %22 = and i32 %21, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool10.not = icmp eq i32 %22, 0
  br i1 %tobool10.not, label %if.end15, label %if.then11

if.then11:                                        ; preds = %pnfs_get_layout_hdr.exit
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  %call.i189 = tail call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i189, label %if.then11.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i192

if.then11.rcu_read_unlock.exit_crit_edge:         ; preds = %if.then11
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

land.lhs.true.i192:                               ; preds = %if.then11
  %call1.i190 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i190)
  %tobool.not.i191 = icmp eq i32 %call1.i190, 0
  br i1 %tobool.not.i191, label %land.lhs.true.i192.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i194

land.lhs.true.i192.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i192
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

land.lhs.true2.i194:                              ; preds = %land.lhs.true.i192
  %.b4.i193 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i193, label %land.lhs.true2.i194.rcu_read_unlock.exit_crit_edge, label %if.then.i195

land.lhs.true2.i194.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i194
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

if.then.i195:                                     ; preds = %land.lhs.true2.i194
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 724, ptr noundef nonnull @.str.120) #16
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i195, %land.lhs.true2.i194.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i192.rcu_read_unlock.exit_crit_edge, %if.then11.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !425
  %23 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i.i196 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i.i.i196 to ptr
  %preempt_count.i.i.i.i197 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %preempt_count.i.i.i.i197 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %preempt_count.i.i.i.i197, align 4
  %sub.i.i.i = add i32 %26, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i197, align 4
  tail call void @rcu_read_unlock_strict() #16
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #16
  tail call void @__might_sleep(ptr noundef nonnull @.str.123, i32 noundef 73) #16
  %27 = ptrtoint ptr %plh_flags.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %plh_flags.i, align 4
  %29 = and i32 %28, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.not.i198 = icmp eq i32 %29, 0
  br i1 %tobool.not.i198, label %rcu_read_unlock.exit.wait_on_bit.exit_crit_edge, label %if.end.i

rcu_read_unlock.exit.wait_on_bit.exit_crit_edge:  ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %wait_on_bit.exit

if.end.i:                                         ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #18
  %call3.i = tail call i32 @out_of_line_wait_on_bit(ptr noundef %plh_flags.i, i32 noundef 3, ptr noundef nonnull @bit_wait, i32 noundef 2) #16
  br label %wait_on_bit.exit

wait_on_bit.exit:                                 ; preds = %if.end.i, %rcu_read_unlock.exit.wait_on_bit.exit_crit_edge
  tail call void @pnfs_put_layout_hdr(ptr noundef nonnull %11)
  br label %retry

if.end15:                                         ; preds = %pnfs_get_layout_hdr.exit
  %call16 = tail call i32 @nfs4_check_delegation(ptr noundef %ino, i32 noundef 1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %if.end15.do.body_crit_edge, label %if.then18

if.end15.do.body_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

if.then18:                                        ; preds = %if.end15
  %call19 = tail call i32 @nfs4_check_delegation(ptr noundef %ino, i32 noundef 2) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19)
  %tobool20.not = icmp eq i32 %call19, 0
  br i1 %tobool20.not, label %if.then18.do.body_crit_edge, label %if.then18.out_noroc_crit_edge

if.then18.out_noroc_crit_edge:                    ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_noroc

if.then18.do.body_crit_edge:                      ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

do.body:                                          ; preds = %if.then18.do.body_crit_edge, %if.end15.do.body_crit_edge
  %30 = xor i1 %tobool17.not, true
  %call24 = tail call i32 @rcu_read_lock_any_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %land.lhs.true, label %do.body.do.end_crit_edge

do.body.do.end_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

land.lhs.true:                                    ; preds = %do.body
  %call26 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool27.not = icmp eq i32 %call26, 0
  br i1 %tobool27.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true28

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

land.lhs.true28:                                  ; preds = %land.lhs.true
  %.b183 = load i1, ptr @pnfs_roc.__warned, align 1
  br i1 %.b183, label %land.lhs.true28.do.end_crit_edge, label %if.then30

land.lhs.true28.do.end_crit_edge:                 ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

if.then30:                                        ; preds = %land.lhs.true28
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @pnfs_roc.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 1449, ptr noundef nonnull @.str.41) #16
  br label %do.end

do.end:                                           ; preds = %if.then30, %land.lhs.true28.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %do.body.do.end_crit_edge
  %open_files = getelementptr i8, ptr %ino, i32 -152
  %31 = ptrtoint ptr %open_files to i32
  call void @__asan_load4_noabort(i32 %31)
  %.pn224 = load volatile ptr, ptr %open_files, align 4
  %cmp.not225 = icmp eq ptr %.pn224, %open_files
  br i1 %cmp.not225, label %do.end.for.end_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.for.end_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %do.end.for.body_crit_edge
  %.pn227 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn224, %do.end.for.body_crit_edge ]
  %skip_read.1.off0226 = phi i1 [ %skip_read.2.off0, %for.inc.for.body_crit_edge ], [ %30, %do.end.for.body_crit_edge ]
  %state38 = getelementptr i8, ptr %.pn227, i32 -16
  %32 = ptrtoint ptr %state38 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %state38, align 4
  %cmp39 = icmp eq ptr %33, null
  br i1 %cmp39, label %for.body.for.inc_crit_edge, label %if.end41

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end41:                                         ; preds = %for.body
  %state42 = getelementptr inbounds %struct.nfs4_state, ptr %33, i32 0, i32 13
  %34 = ptrtoint ptr %state42 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %state42, align 4
  %and = and i32 %35, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool43.not = icmp eq i32 %and, 0
  br i1 %tobool43.not, label %if.end45, label %if.end41.out_noroc_crit_edge

if.end41.out_noroc_crit_edge:                     ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_noroc

if.end45:                                         ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #18
  %and47 = and i32 %35, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and47)
  %tobool48.not = icmp ne i32 %and47, 0
  %spec.select = select i1 %tobool48.not, i1 true, i1 %skip_read.1.off0226
  br label %for.inc

for.inc:                                          ; preds = %if.end45, %for.body.for.inc_crit_edge
  %skip_read.2.off0 = phi i1 [ %skip_read.1.off0226, %for.body.for.inc_crit_edge ], [ %spec.select, %if.end45 ]
  %36 = ptrtoint ptr %.pn227 to i32
  call void @__asan_load4_noabort(i32 %36)
  %.pn = load volatile ptr, ptr %.pn227, align 4
  %cmp.not = icmp eq ptr %.pn, %open_files
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %do.end.for.end_crit_edge
  %skip_read.1.off0.lcssa = phi i1 [ %30, %do.end.for.end_crit_edge ], [ %skip_read.2.off0, %for.inc.for.end_crit_edge ]
  %plh_segs = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %11, i32 0, i32 4
  %37 = ptrtoint ptr %plh_segs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %plh_segs, align 8
  %cmp71.not229 = icmp eq ptr %38, %plh_segs
  br i1 %cmp71.not229, label %for.end.for.end96_crit_edge, label %for.body72.lr.ph

for.end.for.end96_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end96

for.body72.lr.ph:                                 ; preds = %for.end
  %plh_return_segs = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %11, i32 0, i32 5
  %plh_return_iomode.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %11, i32 0, i32 12
  %plh_stateid.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %11, i32 0, i32 9
  %plh_return_seq.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %11, i32 0, i32 11
  %plh_barrier.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %11, i32 0, i32 10
  br label %for.body72

for.body72:                                       ; preds = %for.inc90.for.body72_crit_edge, %for.body72.lr.ph
  %lseg.0230 = phi ptr [ %38, %for.body72.lr.ph ], [ %next.0231, %for.inc90.for.body72_crit_edge ]
  %39 = ptrtoint ptr %lseg.0230 to i32
  call void @__asan_load4_noabort(i32 %39)
  %next.0231 = load ptr, ptr %lseg.0230, align 8
  br i1 %skip_read.1.off0.lcssa, label %land.lhs.true74, label %for.body72.if.end78_crit_edge

for.body72.if.end78_crit_edge:                    ; preds = %for.body72
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end78

land.lhs.true74:                                  ; preds = %for.body72
  %pls_range = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.0230, i32 0, i32 3
  %40 = ptrtoint ptr %pls_range to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %pls_range, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %41)
  %cmp76 = icmp eq i32 %41, 1
  br i1 %cmp76, label %land.lhs.true74.for.inc90_crit_edge, label %land.lhs.true74.if.end78_crit_edge

land.lhs.true74.if.end78_crit_edge:               ; preds = %land.lhs.true74
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end78

land.lhs.true74.for.inc90_crit_edge:              ; preds = %land.lhs.true74
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc90

if.end78:                                         ; preds = %land.lhs.true74.if.end78_crit_edge, %for.body72.if.end78_crit_edge
  %pls_flags = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.0230, i32 0, i32 6
  %call79 = tail call i32 @_test_and_clear_bit(i32 noundef 1, ptr noundef %pls_flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call79)
  %tobool80.not = icmp eq i32 %call79, 0
  br i1 %tobool80.not, label %if.end78.for.inc90_crit_edge, label %if.end82

if.end78.for.inc90_crit_edge:                     ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc90

if.end82:                                         ; preds = %if.end78
  tail call void @_set_bit(i32 noundef 3, ptr noundef %pls_flags) #16
  %call.i199 = tail call i32 @_test_and_clear_bit(i32 noundef 0, ptr noundef %pls_flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i199)
  %tobool.not.i200 = icmp eq i32 %call.i199, 0
  br i1 %tobool.not.i200, label %if.end82.for.inc90_crit_edge, label %do.body.i

if.end82.for.inc90_crit_edge:                     ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc90

do.body.i:                                        ; preds = %if.end82
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %42 = load i32, ptr @nfs_debug, align 4
  %and.i = and i32 %42, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %do.body.i.mark_lseg_invalid.exit_crit_edge, label %do.end.i, !prof !413

do.body.i.mark_lseg_invalid.exit_crit_edge:       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %mark_lseg_invalid.exit

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %pls_refcount.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.0230, i32 0, i32 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %pls_refcount.i, i32 noundef 4) #16
  %43 = ptrtoint ptr %pls_refcount.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %pls_refcount.i, align 4
  %call7.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.116, ptr noundef nonnull @.str.117, ptr noundef %lseg.0230, i32 noundef %44) #19
  br label %mark_lseg_invalid.exit

mark_lseg_invalid.exit:                           ; preds = %do.end.i, %do.body.i.mark_lseg_invalid.exit_crit_edge
  %call10.i = tail call fastcc zeroext i1 @pnfs_lseg_dec_and_remove_zero(ptr noundef %lseg.0230, ptr noundef %plh_return_segs) #16
  br i1 %call10.i, label %if.end87, label %mark_lseg_invalid.exit.for.inc90_crit_edge

mark_lseg_invalid.exit.for.inc90_crit_edge:       ; preds = %mark_lseg_invalid.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc90

if.end87:                                         ; preds = %mark_lseg_invalid.exit
  %pls_range88 = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.0230, i32 0, i32 3
  %45 = ptrtoint ptr %pls_range88 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %pls_range88, align 8
  %47 = ptrtoint ptr %plh_return_iomode.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %plh_return_iomode.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %cmp.not.i = icmp eq i32 %48, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %48, i32 %46)
  %cmp2.not.i = icmp eq i32 %48, %46
  %49 = or i1 %cmp.not.i, %cmp2.not.i
  %iomode.addr.0.i = select i1 %49, i32 %46, i32 3
  %50 = ptrtoint ptr %plh_return_iomode.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %iomode.addr.0.i, ptr %plh_return_iomode.i, align 8
  tail call void @_set_bit(i32 noundef 5, ptr noundef %plh_flags.i) #16
  %51 = ptrtoint ptr %plh_stateid.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %plh_stateid.i, align 4
  %53 = ptrtoint ptr %plh_return_seq.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %plh_return_seq.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool.not.i202 = icmp eq i32 %54, 0
  %sub.i.i = sub i32 %52, %54
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp sgt i32 %sub.i.i, 0
  %or.cond.i = select i1 %tobool.not.i202, i1 true, i1 %cmp.i.i
  br i1 %or.cond.i, label %if.then8.i, label %if.end87.if.end10.i_crit_edge

if.end87.if.end10.i_crit_edge:                    ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i

if.then8.i:                                       ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #18
  %55 = ptrtoint ptr %plh_return_seq.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %52, ptr %plh_return_seq.i, align 4
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then8.i, %if.end87.if.end10.i_crit_edge
  %56 = ptrtoint ptr %plh_barrier.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %plh_barrier.i.i, align 8
  %sub.i.i.i203 = sub i32 %52, %57
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i203)
  %cmp.i.i.i = icmp sgt i32 %sub.i.i.i203, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %tobool.not.i.i = icmp eq i32 %57, 0
  %or.cond.i.i = or i1 %tobool.not.i.i, %cmp.i.i.i
  br i1 %or.cond.i.i, label %if.then.i.i, label %if.end10.i.for.inc90_crit_edge

if.end10.i.for.inc90_crit_edge:                   ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc90

if.then.i.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  %58 = ptrtoint ptr %plh_barrier.i.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %52, ptr %plh_barrier.i.i, align 8
  br label %for.inc90

for.inc90:                                        ; preds = %if.then.i.i, %if.end10.i.for.inc90_crit_edge, %mark_lseg_invalid.exit.for.inc90_crit_edge, %if.end82.for.inc90_crit_edge, %if.end78.for.inc90_crit_edge, %land.lhs.true74.for.inc90_crit_edge
  %cmp71.not = icmp eq ptr %next.0231, %plh_segs
  br i1 %cmp71.not, label %for.inc90.for.end96_crit_edge, label %for.inc90.for.body72_crit_edge

for.inc90.for.body72_crit_edge:                   ; preds = %for.inc90
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body72

for.inc90.for.end96_crit_edge:                    ; preds = %for.inc90
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end96

for.end96:                                        ; preds = %for.inc90.for.end96_crit_edge, %for.end.for.end96_crit_edge
  %59 = ptrtoint ptr %plh_flags.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load volatile i32, ptr %plh_flags.i, align 4
  %61 = and i32 %60, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %61)
  %tobool99.not = icmp eq i32 %61, 0
  br i1 %tobool99.not, label %for.end96.out_noroc_crit_edge, label %if.end101

for.end96.out_noroc_crit_edge:                    ; preds = %for.end96
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_noroc

if.end101:                                        ; preds = %for.end96
  %call102 = call fastcc zeroext i1 @pnfs_prepare_layoutreturn(ptr noundef nonnull %11, ptr noundef nonnull %stateid, ptr noundef nonnull %lc_cred, ptr noundef nonnull %iomode)
  br i1 %call102, label %lor.lhs.false104, label %if.end101.out_noroc_crit_edge

if.end101.out_noroc_crit_edge:                    ; preds = %if.end101
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_noroc

lor.lhs.false104:                                 ; preds = %if.end101
  %62 = ptrtoint ptr %lc_cred to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %lc_cred, align 4
  %call105 = call i32 @cred_fscmp(ptr noundef %cred, ptr noundef %63) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call105)
  %cmp106.not = icmp eq i32 %call105, 0
  br i1 %cmp106.not, label %if.end108, label %lor.lhs.false104.out_noroc_crit_edge

lor.lhs.false104.out_noroc_crit_edge:             ; preds = %lor.lhs.false104
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_noroc

if.end108:                                        ; preds = %lor.lhs.false104
  call void @__sanitizer_cov_trace_pc() #18
  %64 = ptrtoint ptr %iomode to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %iomode, align 4
  %plh_inode.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %11, i32 0, i32 15
  %66 = ptrtoint ptr %plh_inode.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %plh_inode.i, align 4
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %67, i32 0, i32 8
  %68 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %i_sb.i.i, align 4
  %s_fs_info.i.i.i = getelementptr inbounds %struct.super_block, ptr %69, i32 0, i32 33
  %70 = ptrtoint ptr %s_fs_info.i.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %s_fs_info.i.i.i, align 16
  %pnfs_curr_ld.i = getelementptr inbounds %struct.nfs_server, ptr %71, i32 0, i32 46
  %72 = ptrtoint ptr %pnfs_curr_ld.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %pnfs_curr_ld.i, align 4
  %id.i = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %73, i32 0, i32 1
  %74 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %id.i, align 4
  %layout_type.i = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %args, i32 0, i32 5
  %76 = ptrtoint ptr %layout_type.i to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %75, ptr %layout_type.i, align 4
  %inode1.i = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %args, i32 0, i32 2
  %77 = ptrtoint ptr %inode1.i to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr %67, ptr %inode1.i, align 4
  %range.i = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %args, i32 0, i32 3
  %78 = ptrtoint ptr %range.i to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 %65, ptr %range.i, align 8
  %offset.i = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %args, i32 0, i32 3, i32 1
  %79 = ptrtoint ptr %offset.i to i32
  call void @__asan_store8_noabort(i32 %79)
  store i64 0, ptr %offset.i, align 8
  %length.i = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %args, i32 0, i32 3, i32 2
  %80 = ptrtoint ptr %length.i to i32
  call void @__asan_store8_noabort(i32 %80)
  store i64 -1, ptr %length.i, align 8
  %layout.i204 = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %args, i32 0, i32 1
  %81 = ptrtoint ptr %layout.i204 to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr %11, ptr %layout.i204, align 8
  %stateid5.i = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %args, i32 0, i32 4
  %82 = call ptr @memcpy(ptr %stateid5.i, ptr %stateid, i32 16)
  %83 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %1, align 4
  %type2.i.i = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %args, i32 0, i32 4, i32 1
  %85 = ptrtoint ptr %type2.i.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 %84, ptr %type2.i.i, align 4
  %lrs_present = getelementptr inbounds %struct.nfs4_layoutreturn_res, ptr %res, i32 0, i32 1
  %86 = ptrtoint ptr %lrs_present to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 0, ptr %lrs_present, align 4
  call fastcc void @put_cred(ptr noundef %63)
  br label %out_noroc

out_noroc:                                        ; preds = %if.end108, %lor.lhs.false104.out_noroc_crit_edge, %if.end101.out_noroc_crit_edge, %for.end96.out_noroc_crit_edge, %if.end41.out_noroc_crit_edge, %if.then18.out_noroc_crit_edge, %lor.lhs.false3.out_noroc_crit_edge, %lor.lhs.false.out_noroc_crit_edge, %rcu_read_lock.exit.out_noroc_crit_edge
  %roc.0.off0 = phi i1 [ false, %if.then18.out_noroc_crit_edge ], [ false, %lor.lhs.false104.out_noroc_crit_edge ], [ true, %if.end108 ], [ false, %if.end101.out_noroc_crit_edge ], [ false, %for.end96.out_noroc_crit_edge ], [ false, %if.end41.out_noroc_crit_edge ], [ false, %lor.lhs.false3.out_noroc_crit_edge ], [ false, %lor.lhs.false.out_noroc_crit_edge ], [ false, %rcu_read_lock.exit.out_noroc_crit_edge ]
  %layoutreturn.0.shrunk = phi i1 [ false, %if.then18.out_noroc_crit_edge ], [ true, %lor.lhs.false104.out_noroc_crit_edge ], [ false, %if.end108 ], [ false, %if.end101.out_noroc_crit_edge ], [ false, %for.end96.out_noroc_crit_edge ], [ false, %if.end41.out_noroc_crit_edge ], [ false, %lor.lhs.false3.out_noroc_crit_edge ], [ false, %lor.lhs.false.out_noroc_crit_edge ], [ false, %rcu_read_lock.exit.out_noroc_crit_edge ]
  %lo.0 = phi ptr [ %11, %if.then18.out_noroc_crit_edge ], [ %11, %lor.lhs.false104.out_noroc_crit_edge ], [ %11, %if.end108 ], [ %11, %if.end101.out_noroc_crit_edge ], [ %11, %for.end96.out_noroc_crit_edge ], [ %11, %if.end41.out_noroc_crit_edge ], [ null, %lor.lhs.false3.out_noroc_crit_edge ], [ null, %lor.lhs.false.out_noroc_crit_edge ], [ null, %rcu_read_lock.exit.out_noroc_crit_edge ]
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  %call.i205 = call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i205, label %out_noroc.rcu_read_unlock.exit216_crit_edge, label %land.lhs.true.i208

out_noroc.rcu_read_unlock.exit216_crit_edge:      ; preds = %out_noroc
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit216

land.lhs.true.i208:                               ; preds = %out_noroc
  %call1.i206 = call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i206)
  %tobool.not.i207 = icmp eq i32 %call1.i206, 0
  br i1 %tobool.not.i207, label %land.lhs.true.i208.rcu_read_unlock.exit216_crit_edge, label %land.lhs.true2.i210

land.lhs.true.i208.rcu_read_unlock.exit216_crit_edge: ; preds = %land.lhs.true.i208
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit216

land.lhs.true2.i210:                              ; preds = %land.lhs.true.i208
  %.b4.i209 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i209, label %land.lhs.true2.i210.rcu_read_unlock.exit216_crit_edge, label %if.then.i211

land.lhs.true2.i210.rcu_read_unlock.exit216_crit_edge: ; preds = %land.lhs.true2.i210
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit216

if.then.i211:                                     ; preds = %land.lhs.true2.i210
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 724, ptr noundef nonnull @.str.120) #16
  br label %rcu_read_unlock.exit216

rcu_read_unlock.exit216:                          ; preds = %if.then.i211, %land.lhs.true2.i210.rcu_read_unlock.exit216_crit_edge, %land.lhs.true.i208.rcu_read_unlock.exit216_crit_edge, %out_noroc.rcu_read_unlock.exit216_crit_edge
  call void asm sideeffect "", "~{memory}"() #16, !srcloc !425
  %87 = call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i.i212 = and i32 %87, -16384
  %88 = inttoptr i32 %and.i.i.i.i.i212 to ptr
  %preempt_count.i.i.i.i213 = getelementptr inbounds %struct.thread_info, ptr %88, i32 0, i32 1
  %89 = ptrtoint ptr %preempt_count.i.i.i.i213 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load volatile i32, ptr %preempt_count.i.i.i.i213, align 4
  %sub.i.i.i214 = add i32 %90, -1
  store volatile i32 %sub.i.i.i214, ptr %preempt_count.i.i.i.i213, align 4
  call void @rcu_read_unlock_strict() #16
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #16
  %call112 = call i32 @pnfs_layoutcommit_inode(ptr noundef %ino, i1 noundef zeroext true)
  br i1 %roc.0.off0, label %if.then114, label %if.end121

if.then114:                                       ; preds = %rcu_read_unlock.exit216
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %ino, i32 0, i32 8
  %91 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %92, i32 0, i32 33
  %93 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %s_fs_info.i.i, align 16
  %pnfs_curr_ld = getelementptr inbounds %struct.nfs_server, ptr %94, i32 0, i32 46
  %95 = ptrtoint ptr %pnfs_curr_ld to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %pnfs_curr_ld, align 4
  %prepare_layoutreturn = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %96, i32 0, i32 23
  %97 = ptrtoint ptr %prepare_layoutreturn to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %prepare_layoutreturn, align 4
  %tobool116.not = icmp eq ptr %98, null
  br i1 %tobool116.not, label %if.then114.cleanup.sink.split_crit_edge, label %if.then117

if.then114.cleanup.sink.split_crit_edge:          ; preds = %if.then114
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.then117:                                       ; preds = %if.then114
  call void @__sanitizer_cov_trace_pc() #18
  %call119 = call i32 %98(ptr noundef %args) #16
  br label %cleanup.sink.split

if.end121:                                        ; preds = %rcu_read_unlock.exit216
  br i1 %layoutreturn.0.shrunk, label %if.then123, label %if.end121.cleanup.sink.split_crit_edge

if.end121.cleanup.sink.split_crit_edge:           ; preds = %if.end121
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

if.then123:                                       ; preds = %if.end121
  call void @__sanitizer_cov_trace_pc() #18
  %99 = ptrtoint ptr %iomode to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %iomode, align 4
  %call124 = call fastcc i32 @pnfs_send_layoutreturn(ptr noundef %lo.0, ptr noundef nonnull %stateid, ptr noundef nonnull %lc_cred, i32 noundef %100, i1 noundef zeroext true)
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.then123, %if.end121.cleanup.sink.split_crit_edge, %if.then117, %if.then114.cleanup.sink.split_crit_edge
  call void @pnfs_put_layout_hdr(ptr noundef %lo.0)
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ false, %entry.cleanup_crit_edge ], [ %roc.0.off0, %cleanup.sink.split ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %iomode) #16
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %stateid) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %lc_cred) #16
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfs4_check_delegation(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @cred_fscmp(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @put_cred(ptr noundef %_cred) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %tobool.not = icmp eq ptr %_cred, null
  br i1 %tobool.not, label %entry.if.end2_crit_edge, label %do.body

entry.if.end2_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end2

do.body:                                          ; preds = %entry
  %call.i = tail call zeroext i1 @creds_are_invalid(ptr noundef nonnull %_cred) #16
  br i1 %call.i, label %if.then.i, label %do.body.__validate_creds.exit_crit_edge, !prof !416

do.body.__validate_creds.exit_crit_edge:          ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %__validate_creds.exit

if.then.i:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @__invalid_creds(ptr noundef nonnull %_cred, ptr noundef nonnull @.str.125, i32 noundef 286) #16
  br label %__validate_creds.exit

__validate_creds.exit:                            ; preds = %if.then.i, %do.body.__validate_creds.exit_crit_edge
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %_cred, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !410
  tail call void @llvm.prefetch.p0(ptr nonnull %_cred, i32 1, i32 3, i32 1) #16
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %_cred, ptr nonnull %_cred, i32 1, ptr nonnull elementtype(i32) %_cred) #16, !srcloc !411
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %0, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !412
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i, label %if.then1, label %__validate_creds.exit.if.end2_crit_edge

__validate_creds.exit.if.end2_crit_edge:          ; preds = %__validate_creds.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end2

if.then1:                                         ; preds = %__validate_creds.exit
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @__put_cred(ptr noundef nonnull %_cred) #16
  br label %if.end2

if.end2:                                          ; preds = %if.then1, %__validate_creds.exit.if.end2_crit_edge, %entry.if.end2_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pnfs_roc_done(ptr nocapture noundef readonly %task, ptr nocapture noundef %argpp, ptr nocapture noundef %respp, ptr nocapture noundef %ret) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argpp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argpp, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %ret to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ret, align 4
  %4 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values)
  switch i32 %3, label %if.end.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 -10060, label %sw.bb2
    i32 -10008, label %sw.bb8
    i32 -10024, label %sw.bb9
  ]

if.end.sw.epilog_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.bb2:                                           ; preds = %if.end
  %tk_rpc_status = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 9
  %5 = ptrtoint ptr %tk_rpc_status to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %tk_rpc_status, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp = icmp eq i32 %6, 0
  br i1 %cmp, label %sw.bb2.sw.epilog_crit_edge, label %if.end4

sw.bb2.sw.epilog_crit_edge:                       ; preds = %sw.bb2
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end4:                                          ; preds = %sw.bb2
  %tk_flags = getelementptr inbounds %struct.rpc_task, ptr %task, i32 0, i32 20
  %7 = ptrtoint ptr %tk_flags to i32
  call void @__asan_load2_noabort(i32 %7)
  %8 = load i16, ptr %tk_flags, align 4
  %9 = and i16 %8, 2048
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %tobool5.not = icmp eq i16 %9, 0
  br i1 %tobool5.not, label %if.end4.cleanup_crit_edge, label %if.end7

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end7:                                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  %10 = ptrtoint ptr %ret to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %ret, align 4
  %11 = ptrtoint ptr %respp to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %respp, align 4
  %lrs_present = getelementptr inbounds %struct.nfs4_layoutreturn_res, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %lrs_present to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 0, ptr %lrs_present, align 4
  br label %sw.epilog

sw.bb8:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %ret to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 -10060, ptr %ret, align 4
  br label %cleanup

sw.bb9:                                           ; preds = %if.end
  %stateid = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %1, i32 0, i32 4
  %range = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %1, i32 0, i32 3
  %inode = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %1, i32 0, i32 2
  %15 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %inode, align 4
  %call = tail call zeroext i1 @nfs4_layout_refresh_old_stateid(ptr noundef %stateid, ptr noundef %range, ptr noundef %16)
  br i1 %call, label %if.end11, label %sw.bb9.sw.epilog_crit_edge

sw.bb9.sw.epilog_crit_edge:                       ; preds = %sw.bb9
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.end11:                                         ; preds = %sw.bb9
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %ret to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 -10060, ptr %ret, align 4
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb9.sw.epilog_crit_edge, %if.end7, %sw.bb2.sw.epilog_crit_edge, %sw.bb, %if.end.sw.epilog_crit_edge
  %retval1.0 = phi i32 [ -11, %if.end.sw.epilog_crit_edge ], [ -11, %sw.bb9.sw.epilog_crit_edge ], [ -11, %sw.bb2.sw.epilog_crit_edge ], [ 0, %if.end7 ], [ 0, %sw.bb ]
  %18 = ptrtoint ptr %argpp to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %argpp, align 4
  %19 = ptrtoint ptr %respp to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %respp, align 4
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %if.end11, %sw.bb8, %if.end4.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval1.0, %sw.epilog ], [ -11, %if.end11 ], [ 0, %sw.bb8 ], [ 0, %entry.cleanup_crit_edge ], [ 0, %if.end4.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_roc_release(ptr noundef %args, ptr noundef %res, i32 noundef %ret) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %layout = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %args, i32 0, i32 1
  %0 = ptrtoint ptr %layout to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %layout, align 8
  %inode1 = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %args, i32 0, i32 2
  %ld_private2 = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %args, i32 0, i32 6
  %2 = ptrtoint ptr %ld_private2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ld_private2, align 8
  %4 = zext i32 %ret to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.176)
  switch i32 %ret, label %entry.sw.default_crit_edge [
    i32 -10060, label %sw.bb
    i32 0, label %sw.bb5
  ]

entry.sw.default_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.default

sw.bb:                                            ; preds = %entry
  %5 = ptrtoint ptr %inode1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %inode1, align 4
  %i_lock = getelementptr inbounds %struct.inode, ptr %6, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %plh_flags.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 8
  %7 = ptrtoint ptr %plh_flags.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %plh_flags.i, align 4
  %9 = and i32 %8, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %cmp.i = icmp eq i32 %9, 0
  br i1 %cmp.i, label %land.lhs.true, label %sw.bb.if.end_crit_edge

sw.bb.if.end_crit_edge:                           ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true:                                    ; preds = %sw.bb
  %other.i = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %args, i32 0, i32 4, i32 0, i32 0, i32 1
  %other1.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 9, i32 0, i32 0, i32 1
  %bcmp.i = tail call i32 @bcmp(ptr noundef dereferenceable(12) %other.i, ptr noundef dereferenceable(12) %other1.i, i32 12) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i)
  %cmp.i45 = icmp eq i32 %bcmp.i, 0
  br i1 %cmp.i45, label %if.then, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  %plh_stateid = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 9
  %range = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %args, i32 0, i32 3
  %10 = ptrtoint ptr %range to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %range, align 8
  %plh_return_iomode.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 12
  %12 = ptrtoint ptr %plh_return_iomode.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %plh_return_iomode.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp.not.i = icmp eq i32 %13, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %11)
  %cmp2.not.i = icmp eq i32 %13, %11
  %14 = or i1 %cmp.not.i, %cmp2.not.i
  %iomode.addr.0.i = select i1 %14, i32 %11, i32 3
  %15 = ptrtoint ptr %plh_return_iomode.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %iomode.addr.0.i, ptr %plh_return_iomode.i, align 8
  tail call void @_set_bit(i32 noundef 5, ptr noundef %plh_flags.i) #16
  %16 = ptrtoint ptr %plh_stateid to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %plh_stateid, align 4
  %plh_return_seq.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 11
  %18 = ptrtoint ptr %plh_return_seq.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %plh_return_seq.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool.not.i = icmp eq i32 %19, 0
  %sub.i.i = sub i32 %17, %19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp sgt i32 %sub.i.i, 0
  %or.cond.i = select i1 %tobool.not.i, i1 true, i1 %cmp.i.i
  br i1 %or.cond.i, label %if.then8.i, label %if.then.if.end10.i_crit_edge

if.then.if.end10.i_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i

if.then8.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %plh_return_seq.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %17, ptr %plh_return_seq.i, align 4
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then8.i, %if.then.if.end10.i_crit_edge
  %plh_barrier.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 10
  %21 = ptrtoint ptr %plh_barrier.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %plh_barrier.i.i, align 8
  %sub.i.i.i = sub i32 %17, %22
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i)
  %cmp.i.i.i = icmp sgt i32 %sub.i.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.not.i.i = icmp eq i32 %22, 0
  %or.cond.i.i = or i1 %tobool.not.i.i, %cmp.i.i.i
  br i1 %or.cond.i.i, label %if.then.i.i, label %if.end10.i.if.end_crit_edge

if.end10.i.if.end_crit_edge:                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.i.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  %23 = ptrtoint ptr %plh_barrier.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %17, ptr %plh_barrier.i.i, align 8
  br label %if.end

if.end:                                           ; preds = %if.then.i.i, %if.end10.i.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %sw.bb.if.end_crit_edge
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %plh_flags.i, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !419
  tail call void @llvm.prefetch.p0(ptr %plh_flags.i, i32 1, i32 3, i32 1) #16
  %24 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %plh_flags.i, ptr %plh_flags.i, i32 8, ptr elementtype(i32) %plh_flags.i) #16, !srcloc !420
  tail call void @_clear_bit(i32 noundef 4, ptr noundef %plh_flags.i) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !421
  tail call void @wake_up_bit(ptr noundef %plh_flags.i, i32 noundef 3) #16
  %plh_inode.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 15
  %25 = ptrtoint ptr %plh_inode.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %plh_inode.i, align 4
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %26, i32 0, i32 8
  %27 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %i_sb.i.i, align 4
  %s_fs_info.i.i.i = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 33
  %29 = ptrtoint ptr %s_fs_info.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %s_fs_info.i.i.i, align 16
  %roc_rpcwaitq.i = getelementptr inbounds %struct.nfs_server, ptr %30, i32 0, i32 47
  tail call void @rpc_wake_up(ptr noundef %roc_rpcwaitq.i) #16
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  br label %sw.epilog

sw.bb5:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %lrs_present = getelementptr inbounds %struct.nfs4_layoutreturn_res, ptr %res, i32 0, i32 1
  %31 = ptrtoint ptr %lrs_present to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %lrs_present, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.not = icmp eq i32 %32, 0
  %stateid7 = getelementptr inbounds %struct.nfs4_layoutreturn_res, ptr %res, i32 0, i32 2
  %spec.select = select i1 %tobool.not, ptr null, ptr %stateid7
  br label %sw.default

sw.default:                                       ; preds = %sw.bb5, %entry.sw.default_crit_edge
  %res_stateid.0 = phi ptr [ null, %entry.sw.default_crit_edge ], [ %spec.select, %sw.bb5 ]
  %stateid9 = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %args, i32 0, i32 4
  %range10 = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %args, i32 0, i32 3
  tail call void @pnfs_layoutreturn_free_lsegs(ptr noundef %1, ptr noundef %stateid9, ptr noundef %range10, ptr noundef %res_stateid.0)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end
  %33 = ptrtoint ptr %inode1 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %inode1, align 4
  %stateid12 = getelementptr inbounds %struct.nfs4_layoutreturn_args, ptr %args, i32 0, i32 4
  tail call fastcc void @trace_nfs4_layoutreturn_on_close(ptr noundef %34, ptr noundef %stateid12, i32 noundef %ret)
  %tobool13.not = icmp eq ptr %3, null
  br i1 %tobool13.not, label %sw.epilog.if.end22_crit_edge, label %land.lhs.true14

sw.epilog.if.end22_crit_edge:                     ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22

land.lhs.true14:                                  ; preds = %sw.epilog
  %35 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %3, align 4
  %tobool15.not = icmp eq ptr %36, null
  br i1 %tobool15.not, label %land.lhs.true14.if.end22_crit_edge, label %land.lhs.true16

land.lhs.true14.if.end22_crit_edge:               ; preds = %land.lhs.true14
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22

land.lhs.true16:                                  ; preds = %land.lhs.true14
  %free = getelementptr inbounds %struct.nfs4_xdr_opaque_ops, ptr %36, i32 0, i32 1
  %37 = ptrtoint ptr %free to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %free, align 4
  %tobool18.not = icmp eq ptr %38, null
  br i1 %tobool18.not, label %land.lhs.true16.if.end22_crit_edge, label %if.then19

land.lhs.true16.if.end22_crit_edge:               ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22

if.then19:                                        ; preds = %land.lhs.true16
  call void @__sanitizer_cov_trace_pc() #18
  tail call void %38(ptr noundef nonnull %3) #16
  br label %if.end22

if.end22:                                         ; preds = %if.then19, %land.lhs.true16.if.end22_crit_edge, %land.lhs.true14.if.end22_crit_edge, %sw.epilog.if.end22_crit_edge
  tail call void @pnfs_put_layout_hdr(ptr noundef %1)
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_nfs4_layoutreturn_on_close(ptr noundef %inode, ptr noundef %stateid, i32 noundef %error) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_nfs4_layoutreturn_on_close, i32 0, i32 1), ptr blockaddress(@trace_nfs4_layoutreturn_on_close, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !430

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !413

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.128, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !431
  %call42 = tail call i32 @__traceiter_nfs4_layoutreturn_on_close(ptr noundef null, ptr noundef %inode, ptr noundef %stateid, i32 noundef %error) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !432
  %13 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !413

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.128, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !433
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_nfs4_layoutreturn_on_close, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_nfs4_layoutreturn_on_close, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_nfs4_layoutreturn_on_close.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_nfs4_layoutreturn_on_close.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.126, i32 noundef 1752, ptr noundef nonnull @.str.127) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !434
  %31 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @pnfs_wait_on_layoutreturn(ptr noundef %ino, ptr noundef %task) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %i_lock = getelementptr inbounds %struct.inode, ptr %ino, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %layout = getelementptr i8, ptr %ino, i32 -32
  %0 = ptrtoint ptr %layout to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %layout, align 8
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %plh_flags = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %plh_flags, align 4
  %4 = and i32 %3, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool2.not = icmp eq i32 %4, 0
  br i1 %tobool2.not, label %land.lhs.true.if.end_crit_edge, label %if.then

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %ino, i32 0, i32 8
  %5 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %6, i32 0, i32 33
  %7 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %s_fs_info.i.i, align 16
  %roc_rpcwaitq = getelementptr inbounds %struct.nfs_server, ptr %8, i32 0, i32 47
  tail call void @rpc_sleep_on(ptr noundef %roc_rpcwaitq, ptr noundef %task, ptr noundef null) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %sleep.0.off0 = phi i1 [ true, %if.then ], [ false, %land.lhs.true.if.end_crit_edge ], [ false, %entry.if.end_crit_edge ]
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  ret i1 %sleep.0.off0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_sleep_on(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_generic_layout_insert_lseg(ptr noundef %lo, ptr noundef %lseg, ptr nocapture noundef readonly %is_after, ptr nocapture noundef readonly %do_merge, ptr noundef %free_me) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %0 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %0, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end6_crit_edge, label %do.end, !prof !413

entry.do.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end6

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.53, ptr noundef nonnull @.str.54) #19
  br label %do.end6

do.end6:                                          ; preds = %do.end, %entry.do.end6_crit_edge
  %plh_segs = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 4
  %1 = ptrtoint ptr %plh_segs to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %plh_segs, align 8
  %cmp.not139 = icmp eq ptr %2, %plh_segs
  br i1 %cmp.not139, label %do.end6.for.end_crit_edge, label %for.body.lr.ph

do.end6.for.end_crit_edge:                        ; preds = %do.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %do.end6
  %pls_range = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %lp.0140 = phi ptr [ %2, %for.body.lr.ph ], [ %tmp.0141, %for.inc.for.body_crit_edge ]
  %3 = ptrtoint ptr %lp.0140 to i32
  call void @__asan_load4_noabort(i32 %3)
  %tmp.0141 = load ptr, ptr %lp.0140, align 8
  %pls_flags = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lp.0140, i32 0, i32 6
  %4 = ptrtoint ptr %pls_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %pls_flags, align 4
  %and1.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %cmp17 = icmp eq i32 %and1.i, 0
  br i1 %cmp17, label %for.body.for.inc_crit_edge, label %if.end19

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end19:                                         ; preds = %for.body
  %call20 = tail call zeroext i1 %do_merge(ptr noundef %lseg, ptr noundef %lp.0140) #16
  br i1 %call20, label %if.then21, label %if.end23

if.then21:                                        ; preds = %if.end19
  %call.i = tail call i32 @_test_and_clear_bit(i32 noundef 0, ptr noundef %pls_flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.then21.for.inc_crit_edge, label %do.body.i

if.then21.for.inc_crit_edge:                      ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

do.body.i:                                        ; preds = %if.then21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %6 = load i32, ptr @nfs_debug, align 4
  %and.i = and i32 %6, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %do.body.i.do.end9.i_crit_edge, label %do.end.i, !prof !413

do.body.i.do.end9.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end9.i

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %pls_refcount.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lp.0140, i32 0, i32 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %pls_refcount.i, i32 noundef 4) #16
  %7 = ptrtoint ptr %pls_refcount.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile i32, ptr %pls_refcount.i, align 4
  %call7.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.116, ptr noundef nonnull @.str.117, ptr noundef %lp.0140, i32 noundef %8) #19
  br label %do.end9.i

do.end9.i:                                        ; preds = %do.end.i, %do.body.i.do.end9.i_crit_edge
  %call10.i = tail call fastcc zeroext i1 @pnfs_lseg_dec_and_remove_zero(ptr noundef %lp.0140, ptr noundef %free_me) #16
  br label %for.inc

if.end23:                                         ; preds = %if.end19
  %pls_range24 = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lp.0140, i32 0, i32 3
  %call25 = tail call zeroext i1 %is_after(ptr noundef %pls_range, ptr noundef %pls_range24) #16
  br i1 %call25, label %if.end23.for.inc_crit_edge, label %if.end27

if.end23.for.inc_crit_edge:                       ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end27:                                         ; preds = %if.end23
  %prev.i = getelementptr inbounds %struct.list_head, ptr %lp.0140, i32 0, i32 1
  %9 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %lseg, ptr noundef %10, ptr noundef %lp.0140) #16
  br i1 %call.i.i, label %if.end.i.i, label %if.end27.list_add_tail.exit_crit_edge

if.end27.list_add_tail.exit_crit_edge:            ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #18
  %11 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %lseg, ptr %prev.i, align 4
  %12 = ptrtoint ptr %lseg to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %lp.0140, ptr %lseg, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %lseg, i32 0, i32 1
  %13 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %prev3.i.i, align 4
  %14 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %lseg, ptr %10, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.end27.list_add_tail.exit_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %15 = load i32, ptr @nfs_debug, align 4
  %and31 = and i32 %15, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31)
  %tobool32.not = icmp eq i32 %and31, 0
  br i1 %tobool32.not, label %list_add_tail.exit.out_crit_edge, label %do.end42, !prof !413

list_add_tail.exit.out_crit_edge:                 ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

do.end42:                                         ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #18
  %16 = ptrtoint ptr %pls_range to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %pls_range, align 8
  %offset = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 3, i32 1
  %18 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %offset, align 8
  %length = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 3, i32 2
  %20 = ptrtoint ptr %length to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %length, align 8
  %22 = ptrtoint ptr %pls_range24 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %pls_range24, align 8
  %offset50 = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lp.0140, i32 0, i32 3, i32 1
  %24 = ptrtoint ptr %offset50 to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %offset50, align 8
  %length52 = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lp.0140, i32 0, i32 3, i32 2
  %26 = ptrtoint ptr %length52 to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %length52, align 8
  %call53 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.56, ptr noundef nonnull @.str.54, ptr noundef %lseg, i32 noundef %17, i64 noundef %19, i64 noundef %21, ptr noundef %lp.0140, i32 noundef %23, i64 noundef %25, i64 noundef %27) #19
  br label %out

for.inc:                                          ; preds = %if.end23.for.inc_crit_edge, %do.end9.i, %if.then21.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %cmp.not = icmp eq ptr %tmp.0141, %plh_segs
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %do.end6.for.end_crit_edge
  %prev.i131 = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 4, i32 1
  %28 = ptrtoint ptr %prev.i131 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %prev.i131, align 4
  %call.i.i132 = tail call zeroext i1 @__list_add_valid(ptr noundef %lseg, ptr noundef %29, ptr noundef %plh_segs) #16
  br i1 %call.i.i132, label %if.end.i.i134, label %for.end.list_add_tail.exit135_crit_edge

for.end.list_add_tail.exit135_crit_edge:          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add_tail.exit135

if.end.i.i134:                                    ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  %30 = ptrtoint ptr %prev.i131 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %lseg, ptr %prev.i131, align 4
  %31 = ptrtoint ptr %lseg to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %plh_segs, ptr %lseg, align 4
  %prev3.i.i133 = getelementptr inbounds %struct.list_head, ptr %lseg, i32 0, i32 1
  %32 = ptrtoint ptr %prev3.i.i133 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %29, ptr %prev3.i.i133, align 4
  %33 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %lseg, ptr %29, align 4
  br label %list_add_tail.exit135

list_add_tail.exit135:                            ; preds = %if.end.i.i134, %for.end.list_add_tail.exit135_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %34 = load i32, ptr @nfs_debug, align 4
  %and65 = and i32 %34, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and65)
  %tobool66.not = icmp eq i32 %and65, 0
  br i1 %tobool66.not, label %list_add_tail.exit135.out_crit_edge, label %do.end76, !prof !413

list_add_tail.exit135.out_crit_edge:              ; preds = %list_add_tail.exit135
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

do.end76:                                         ; preds = %list_add_tail.exit135
  call void @__sanitizer_cov_trace_pc() #18
  %pls_range78 = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 3
  %35 = ptrtoint ptr %pls_range78 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %pls_range78, align 8
  %offset81 = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 3, i32 1
  %37 = ptrtoint ptr %offset81 to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %offset81, align 8
  %length83 = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 3, i32 2
  %39 = ptrtoint ptr %length83 to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %length83, align 8
  %call84 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.59, ptr noundef nonnull @.str.54, ptr noundef %lseg, i32 noundef %36, i64 noundef %38, i64 noundef %40) #19
  br label %out

out:                                              ; preds = %do.end76, %list_add_tail.exit135.out_crit_edge, %do.end42, %list_add_tail.exit.out_crit_edge
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %lo, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %lo, i32 1, i32 3, i32 1) #16
  %41 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %lo, ptr %lo, i32 1, ptr elementtype(i32) %lo) #16, !srcloc !415
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %41, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %out.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !416

out.if.end15.sink.split.i.i.i.i_crit_edge:        ; preds = %out
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %out
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %42 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %42)
  %.not.i.i.i.i = icmp sgt i32 %42, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !413

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_get_layout_hdr.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %out.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %out.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %lo, i32 noundef %.sink.i.i.i.i) #16
  br label %pnfs_get_layout_hdr.exit

pnfs_get_layout_hdr.exit:                         ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %43 = load i32, ptr @nfs_debug, align 4
  %and89 = and i32 %43, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and89)
  %tobool90.not = icmp eq i32 %and89, 0
  br i1 %tobool90.not, label %pnfs_get_layout_hdr.exit.do.end105_crit_edge, label %do.end100, !prof !413

pnfs_get_layout_hdr.exit.do.end105_crit_edge:     ; preds = %pnfs_get_layout_hdr.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end105

do.end100:                                        ; preds = %pnfs_get_layout_hdr.exit
  call void @__sanitizer_cov_trace_pc() #18
  %call102 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.62, ptr noundef nonnull @.str.54) #19
  br label %do.end105

do.end105:                                        ; preds = %do.end100, %pnfs_get_layout_hdr.exit.do.end105_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @pnfs_update_layout(ptr noundef %ino, ptr noundef %ctx, i64 noundef %pos, i64 noundef %count, i32 noundef %iomode, i1 noundef zeroext %strict_iomode, i32 noundef %gfp_flags) #0 align 64 {
entry:
  %arg = alloca %struct.pnfs_layout_range, align 8
  %stateid = alloca %struct.nfs4_stateid_struct, align 4
  %timeout = alloca i32, align 4
  %__wbq_entry = alloca %struct.wait_bit_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %arg) #16
  %0 = ptrtoint ptr %arg to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %arg, align 8
  store i32 %iomode, ptr %arg, align 8
  %offset = getelementptr inbounds %struct.pnfs_layout_range, ptr %arg, i32 0, i32 1
  %1 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 %pos, ptr %offset, align 8
  %length = getelementptr inbounds %struct.pnfs_layout_range, ptr %arg, i32 0, i32 2
  %2 = ptrtoint ptr %length to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 %count, ptr %length, align 8
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %ino, i32 0, i32 8
  %3 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 33
  %5 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %s_fs_info.i.i, align 16
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %6, align 8
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %stateid) #16
  %9 = getelementptr inbounds %struct.nfs4_stateid_struct, ptr %stateid, i32 0, i32 1
  %10 = call ptr @memset(ptr %stateid, i32 255, i32 20)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %timeout) #16
  %11 = ptrtoint ptr %timeout to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %timeout, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %12 = load volatile i32, ptr @jiffies, align 128
  %cl_lease_time = getelementptr inbounds %struct.nfs_client, ptr %8, i32 0, i32 24
  %13 = ptrtoint ptr %cl_lease_time to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cl_lease_time, align 8
  %shl = shl i32 %14, 1
  %add = add i32 %shl, %12
  %pnfs_curr_ld.i = getelementptr inbounds %struct.nfs_server, ptr %6, i32 0, i32 46
  %15 = ptrtoint ptr %pnfs_curr_ld.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pnfs_curr_ld.i, align 4
  %cmp.i.not = icmp eq ptr %16, null
  br i1 %cmp.i.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @trace_pnfs_update_layout(ptr noundef %ino, i64 noundef %pos, i64 noundef %count, i32 noundef %iomode, ptr noundef null, ptr noundef null, i32 noundef 1)
  br label %do.body226

if.end:                                           ; preds = %entry
  %mdsthreshold.i = getelementptr inbounds %struct.nfs_open_context, ptr %ctx, i32 0, i32 10
  %17 = ptrtoint ptr %mdsthreshold.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %mdsthreshold.i, align 4
  %call1.i = tail call fastcc i64 @i_size_read(ptr noundef %ino) #16
  %cmp.i446 = icmp eq ptr %18, null
  br i1 %cmp.i446, label %if.end.lookup_again.preheader_crit_edge, label %do.body.i

if.end.lookup_again.preheader_crit_edge:          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %lookup_again.preheader

lookup_again.preheader:                           ; preds = %pnfs_within_mdsthreshold.exit.lookup_again.preheader_crit_edge, %do.end147.i.lookup_again.preheader_crit_edge, %if.end.lookup_again.preheader_crit_edge
  %call7610 = call i32 @nfs4_client_recover_expired_lease(ptr noundef %8) #16
  %19 = inttoptr i32 %call7610 to ptr
  %cmp.i448611 = icmp ugt ptr %19, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i448611, label %lookup_again.preheader.do.body226_crit_edge, label %if.end11.lr.ph

lookup_again.preheader.do.body226_crit_edge:      ; preds = %lookup_again.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body226

if.end11.lr.ph:                                   ; preds = %lookup_again.preheader
  %i_lock = getelementptr inbounds %struct.inode, ptr %ino, i32 0, i32 18
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %iomode)
  %cmp.i.i = icmp eq i32 %iomode, 2
  %cond.i.i = zext i1 %cmp.i.i to i32
  %20 = shl nuw nsw i32 1, %cond.i.i
  %21 = getelementptr inbounds %struct.wait_bit_queue_entry, ptr %__wbq_entry, i32 0, i32 1
  %state = getelementptr inbounds %struct.nfs_open_context, ptr %ctx, i32 0, i32 5
  %cond = select i1 %cmp.i.i, i32 2, i32 1
  %layouts.i = getelementptr inbounds %struct.nfs_server, ptr %6, i32 0, i32 53
  %prev.i.i = getelementptr inbounds %struct.nfs_server, ptr %6, i32 0, i32 53, i32 1
  br label %if.end11

do.body.i:                                        ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %22 = load i32, ptr @nfs_debug, align 4
  %and.i = and i32 %22, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool2.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool2.not.i, label %do.body.i.do.end10.i_crit_edge, label %do.end.i, !prof !413

do.body.i.do.end10.i_crit_edge:                   ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end10.i

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %23 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %18, align 8
  %rd_sz.i = getelementptr inbounds %struct.nfs4_threshold, ptr %18, i32 0, i32 2
  %25 = ptrtoint ptr %rd_sz.i to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %rd_sz.i, align 8
  %wr_sz.i = getelementptr inbounds %struct.nfs4_threshold, ptr %18, i32 0, i32 3
  %27 = ptrtoint ptr %wr_sz.i to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %wr_sz.i, align 8
  %rd_io_sz.i = getelementptr inbounds %struct.nfs4_threshold, ptr %18, i32 0, i32 4
  %29 = ptrtoint ptr %rd_io_sz.i to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %rd_io_sz.i, align 8
  %wr_io_sz.i = getelementptr inbounds %struct.nfs4_threshold, ptr %18, i32 0, i32 5
  %31 = ptrtoint ptr %wr_io_sz.i to i32
  call void @__asan_load8_noabort(i32 %31)
  %32 = load i64, ptr %wr_io_sz.i, align 8
  %call7.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.129, ptr noundef nonnull @.str.130, i32 noundef %24, i64 noundef %26, i64 noundef %28, i64 noundef %30, i64 noundef %32) #19
  br label %do.end10.i

do.end10.i:                                       ; preds = %do.end.i, %do.body.i.do.end10.i_crit_edge
  %33 = zext i32 %iomode to i64
  call void @__sanitizer_cov_trace_switch(i64 %33, ptr @__sancov_gen_cov_switch_values.177)
  switch i32 %iomode, label %do.end10.i.if.else.i_crit_edge [
    i32 1, label %sw.bb.i
    i32 2, label %sw.bb66.i
  ]

do.end10.i.if.else.i_crit_edge:                   ; preds = %do.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

sw.bb.i:                                          ; preds = %do.end10.i
  %34 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %18, align 8
  %and12.i = and i32 %35, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and12.i)
  %tobool13.not.i = icmp eq i32 %and12.i, 0
  br i1 %tobool13.not.i, label %sw.bb.i.if.end37.i_crit_edge, label %do.body15.i

sw.bb.i.if.end37.i_crit_edge:                     ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end37.i

do.body15.i:                                      ; preds = %sw.bb.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %36 = load i32, ptr @nfs_debug, align 4
  %and16.i = and i32 %36, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and16.i)
  %tobool17.not.i = icmp eq i32 %and16.i, 0
  br i1 %tobool17.not.i, label %do.body15.i.do.end32.i_crit_edge, label %do.end27.i, !prof !413

do.body15.i.do.end32.i_crit_edge:                 ; preds = %do.body15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end32.i

do.end27.i:                                       ; preds = %do.body15.i
  call void @__sanitizer_cov_trace_pc() #18
  %call29.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.132, ptr noundef nonnull @.str.130, i64 noundef %call1.i) #19
  br label %do.end32.i

do.end32.i:                                       ; preds = %do.end27.i, %do.body15.i.do.end32.i_crit_edge
  %rd_sz33.i = getelementptr inbounds %struct.nfs4_threshold, ptr %18, i32 0, i32 2
  %37 = ptrtoint ptr %rd_sz33.i to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %rd_sz33.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %call1.i, i64 %38)
  %cmp34.i = icmp ult i64 %call1.i, %38
  br label %if.end37.i

if.end37.i:                                       ; preds = %do.end32.i, %sw.bb.i.if.end37.i_crit_edge
  %extract.t199.i = phi i1 [ false, %sw.bb.i.if.end37.i_crit_edge ], [ %cmp34.i, %do.end32.i ]
  %39 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %18, align 8
  %and39.i = and i32 %40, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and39.i)
  %tobool40.not.i = icmp eq i32 %and39.i, 0
  br i1 %tobool40.not.i, label %if.end37.i.if.else.i_crit_edge, label %do.body42.i

if.end37.i.if.else.i_crit_edge:                   ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

do.body42.i:                                      ; preds = %if.end37.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %41 = load i32, ptr @nfs_debug, align 4
  %and43.i = and i32 %41, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and43.i)
  %tobool44.not.i = icmp eq i32 %and43.i, 0
  br i1 %tobool44.not.i, label %do.body42.i.do.end59.i_crit_edge, label %do.end54.i, !prof !413

do.body42.i.do.end59.i_crit_edge:                 ; preds = %do.body42.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end59.i

do.end54.i:                                       ; preds = %do.body42.i
  call void @__sanitizer_cov_trace_pc() #18
  %read_io.i = getelementptr i8, ptr %ino, i32 -16
  %42 = ptrtoint ptr %read_io.i to i32
  call void @__asan_load8_noabort(i32 %42)
  %43 = load i64, ptr %read_io.i, align 8
  %call56.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.135, ptr noundef nonnull @.str.130, i64 noundef %43) #19
  br label %do.end59.i

do.end59.i:                                       ; preds = %do.end54.i, %do.body42.i.do.end59.i_crit_edge
  %read_io60.i = getelementptr i8, ptr %ino, i32 -16
  %44 = ptrtoint ptr %read_io60.i to i32
  call void @__asan_load8_noabort(i32 %44)
  %45 = load i64, ptr %read_io60.i, align 8
  %rd_io_sz61.i = getelementptr inbounds %struct.nfs4_threshold, ptr %18, i32 0, i32 4
  %46 = ptrtoint ptr %rd_io_sz61.i to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %rd_io_sz61.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %45, i64 %47)
  %cmp62.i = icmp ult i64 %45, %47
  br i1 %tobool13.not.i, label %do.end59.i.if.else.i_crit_edge, label %do.end59.i.if.then124.i_crit_edge

do.end59.i.if.then124.i_crit_edge:                ; preds = %do.end59.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then124.i

do.end59.i.if.else.i_crit_edge:                   ; preds = %do.end59.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

sw.bb66.i:                                        ; preds = %do.end10.i
  %48 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %18, align 8
  %and68.i = and i32 %49, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and68.i)
  %tobool69.not.i = icmp eq i32 %and68.i, 0
  br i1 %tobool69.not.i, label %sw.bb66.i.if.end93.i_crit_edge, label %do.body71.i

sw.bb66.i.if.end93.i_crit_edge:                   ; preds = %sw.bb66.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end93.i

do.body71.i:                                      ; preds = %sw.bb66.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %50 = load i32, ptr @nfs_debug, align 4
  %and72.i = and i32 %50, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and72.i)
  %tobool73.not.i = icmp eq i32 %and72.i, 0
  br i1 %tobool73.not.i, label %do.body71.i.do.end88.i_crit_edge, label %do.end83.i, !prof !413

do.body71.i.do.end88.i_crit_edge:                 ; preds = %do.body71.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end88.i

do.end83.i:                                       ; preds = %do.body71.i
  call void @__sanitizer_cov_trace_pc() #18
  %call85.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.132, ptr noundef nonnull @.str.130, i64 noundef %call1.i) #19
  br label %do.end88.i

do.end88.i:                                       ; preds = %do.end83.i, %do.body71.i.do.end88.i_crit_edge
  %wr_sz89.i = getelementptr inbounds %struct.nfs4_threshold, ptr %18, i32 0, i32 3
  %51 = ptrtoint ptr %wr_sz89.i to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %wr_sz89.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %call1.i, i64 %52)
  %cmp90.i = icmp ult i64 %call1.i, %52
  br label %if.end93.i

if.end93.i:                                       ; preds = %do.end88.i, %sw.bb66.i.if.end93.i_crit_edge
  %size.1.off0.i = phi i1 [ false, %sw.bb66.i.if.end93.i_crit_edge ], [ %cmp90.i, %do.end88.i ]
  %53 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %18, align 8
  %and95.i = and i32 %54, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and95.i)
  %tobool96.not.i = icmp eq i32 %and95.i, 0
  br i1 %tobool96.not.i, label %if.end93.i.if.else.i_crit_edge, label %do.body98.i

if.end93.i.if.else.i_crit_edge:                   ; preds = %if.end93.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

do.body98.i:                                      ; preds = %if.end93.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %55 = load i32, ptr @nfs_debug, align 4
  %and99.i = and i32 %55, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and99.i)
  %tobool100.not.i = icmp eq i32 %and99.i, 0
  br i1 %tobool100.not.i, label %do.body98.i.sw.epilog.i_crit_edge, label %do.end110.i, !prof !413

do.body98.i.sw.epilog.i_crit_edge:                ; preds = %do.body98.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

do.end110.i:                                      ; preds = %do.body98.i
  call void @__sanitizer_cov_trace_pc() #18
  %write_io.i = getelementptr i8, ptr %ino, i32 -24
  %56 = ptrtoint ptr %write_io.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %write_io.i, align 8
  %call112.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.140, ptr noundef nonnull @.str.130, i64 noundef %57) #19
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %do.end110.i, %do.body98.i.sw.epilog.i_crit_edge
  %write_io116.i = getelementptr i8, ptr %ino, i32 -24
  %58 = ptrtoint ptr %write_io116.i to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %write_io116.i, align 8
  %wr_io_sz117.i = getelementptr inbounds %struct.nfs4_threshold, ptr %18, i32 0, i32 5
  %60 = ptrtoint ptr %wr_io_sz117.i to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %wr_io_sz117.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %59, i64 %61)
  %cmp118.i = icmp ult i64 %59, %61
  br i1 %tobool69.not.i, label %sw.epilog.i.if.else.i_crit_edge, label %sw.epilog.i.if.then124.i_crit_edge

sw.epilog.i.if.then124.i_crit_edge:               ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then124.i

sw.epilog.i.if.else.i_crit_edge:                  ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

if.then124.i:                                     ; preds = %sw.epilog.i.if.then124.i_crit_edge, %do.end59.i.if.then124.i_crit_edge
  %size.2.off0221.i = phi i1 [ %extract.t199.i, %do.end59.i.if.then124.i_crit_edge ], [ %size.1.off0.i, %sw.epilog.i.if.then124.i_crit_edge ]
  %io.0.off0220.i = phi i1 [ %cmp62.i, %do.end59.i.if.then124.i_crit_edge ], [ %cmp118.i, %sw.epilog.i.if.then124.i_crit_edge ]
  %spec.select208.i = select i1 %size.2.off0221.i, i1 %io.0.off0220.i, i1 false
  br label %do.body135.i

if.else.i:                                        ; preds = %sw.epilog.i.if.else.i_crit_edge, %if.end93.i.if.else.i_crit_edge, %do.end59.i.if.else.i_crit_edge, %if.end37.i.if.else.i_crit_edge, %do.end10.i.if.else.i_crit_edge
  %size.2.off0219.i = phi i1 [ %size.1.off0.i, %sw.epilog.i.if.else.i_crit_edge ], [ %extract.t199.i, %if.end37.i.if.else.i_crit_edge ], [ %size.1.off0.i, %if.end93.i.if.else.i_crit_edge ], [ false, %do.end10.i.if.else.i_crit_edge ], [ %extract.t199.i, %do.end59.i.if.else.i_crit_edge ]
  %io.0.off0217.i = phi i1 [ %cmp118.i, %sw.epilog.i.if.else.i_crit_edge ], [ false, %if.end37.i.if.else.i_crit_edge ], [ false, %if.end93.i.if.else.i_crit_edge ], [ false, %do.end10.i.if.else.i_crit_edge ], [ %cmp62.i, %do.end59.i.if.else.i_crit_edge ]
  %brmerge206.i = select i1 %size.2.off0219.i, i1 true, i1 %io.0.off0217.i
  br label %do.body135.i

do.body135.i:                                     ; preds = %if.else.i, %if.then124.i
  %size.2.off0218.i = phi i1 [ %size.2.off0219.i, %if.else.i ], [ %size.2.off0221.i, %if.then124.i ]
  %io.0.off0216.i = phi i1 [ %io.0.off0217.i, %if.else.i ], [ %io.0.off0220.i, %if.then124.i ]
  %ret.0.off0.i = phi i1 [ %brmerge206.i, %if.else.i ], [ %spec.select208.i, %if.then124.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %62 = load i32, ptr @nfs_debug, align 4
  %and136.i = and i32 %62, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and136.i)
  %tobool137.not.i = icmp eq i32 %and136.i, 0
  br i1 %tobool137.not.i, label %pnfs_within_mdsthreshold.exit, label %do.end147.i, !prof !413

do.end147.i:                                      ; preds = %do.body135.i
  %conv.i447 = zext i1 %size.2.off0218.i to i32
  %conv151.i = zext i1 %io.0.off0216.i to i32
  %conv153.i = zext i1 %ret.0.off0.i to i32
  %call154.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.143, ptr noundef nonnull @.str.130, i32 noundef %conv.i447, i32 noundef %conv151.i, i32 noundef %conv153.i) #19
  br i1 %ret.0.off0.i, label %do.end147.i.if.then5_crit_edge, label %do.end147.i.lookup_again.preheader_crit_edge

do.end147.i.lookup_again.preheader_crit_edge:     ; preds = %do.end147.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %lookup_again.preheader

do.end147.i.if.then5_crit_edge:                   ; preds = %do.end147.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then5

pnfs_within_mdsthreshold.exit:                    ; preds = %do.body135.i
  br i1 %ret.0.off0.i, label %pnfs_within_mdsthreshold.exit.if.then5_crit_edge, label %pnfs_within_mdsthreshold.exit.lookup_again.preheader_crit_edge

pnfs_within_mdsthreshold.exit.lookup_again.preheader_crit_edge: ; preds = %pnfs_within_mdsthreshold.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %lookup_again.preheader

pnfs_within_mdsthreshold.exit.if.then5_crit_edge: ; preds = %pnfs_within_mdsthreshold.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then5

if.then5:                                         ; preds = %pnfs_within_mdsthreshold.exit.if.then5_crit_edge, %do.end147.i.if.then5_crit_edge
  tail call fastcc void @trace_pnfs_update_layout(ptr noundef %ino, i64 noundef %pos, i64 noundef %count, i32 noundef %iomode, ptr noundef null, ptr noundef null, i32 noundef 3)
  br label %do.body226

if.end11:                                         ; preds = %lookup_again.backedge.if.end11_crit_edge, %if.end11.lr.ph
  %call7612 = phi i32 [ %call7610, %if.end11.lr.ph ], [ %call7, %lookup_again.backedge.if.end11_crit_edge ]
  call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %call12 = call fastcc ptr @pnfs_find_alloc_layout(ptr noundef %ino, ptr noundef %ctx, i32 noundef %gfp_flags)
  %cmp = icmp eq ptr %call12, null
  br i1 %cmp, label %if.then13, label %if.end15

if.then13:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  %63 = inttoptr i32 %call7612 to ptr
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  call fastcc void @trace_pnfs_update_layout(ptr noundef %ino, i64 noundef %pos, i64 noundef %count, i32 noundef %iomode, ptr noundef null, ptr noundef %63, i32 noundef 4)
  br label %do.body226

if.end15:                                         ; preds = %if.end11
  %plh_flags = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call12, i32 0, i32 8
  %64 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load volatile i32, ptr %plh_flags, align 4
  %66 = and i32 %65, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %tobool17.not = icmp eq i32 %66, 0
  br i1 %tobool17.not, label %if.end28, label %if.then18

if.then18:                                        ; preds = %if.end15
  %67 = inttoptr i32 %call7612 to ptr
  call fastcc void @trace_pnfs_update_layout(ptr noundef %ino, i64 noundef %pos, i64 noundef %count, i32 noundef %iomode, ptr noundef nonnull %call12, ptr noundef %67, i32 noundef 5)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %68 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %68, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool19.not = icmp eq i32 %and, 0
  br i1 %tobool19.not, label %if.then18.out_unlock.thread_crit_edge, label %do.end, !prof !413

if.then18.out_unlock.thread_crit_edge:            ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_unlock.thread

do.end:                                           ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #18
  %call24 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.64, ptr noundef nonnull @.str.65) #19
  br label %out_unlock.thread

if.end28:                                         ; preds = %if.end15
  %69 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load volatile i32, ptr %plh_flags, align 4
  %71 = and i32 %70, %20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %cmp.i449 = icmp eq i32 %71, 0
  br i1 %cmp.i449, label %if.end28.if.end31_crit_edge, label %if.end.i

if.end28.if.end31_crit_edge:                      ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end31

if.end.i:                                         ; preds = %if.end28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %72 = load volatile i32, ptr @jiffies, align 128
  %plh_retry_timestamp.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call12, i32 0, i32 7
  %73 = ptrtoint ptr %plh_retry_timestamp.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %plh_retry_timestamp.i, align 4
  %sub.neg.i = sub i32 12000, %72
  %sub2.i = add i32 %sub.neg.i, %74
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub2.i)
  %cmp3.i = icmp sgt i32 %sub2.i, -1
  %sub5.i = sub i32 %72, %74
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub5.i)
  %cmp6.i = icmp sgt i32 %sub5.i, -1
  %or.cond.i = select i1 %cmp3.i, i1 %cmp6.i, i1 false
  br i1 %or.cond.i, label %if.then30, label %if.then7.i

if.then7.i:                                       ; preds = %if.end.i
  %call.i.i450 = call i32 @_test_and_clear_bit(i32 noundef %cond.i.i, ptr noundef %plh_flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i450)
  %tobool.not.i.i = icmp eq i32 %call.i.i450, 0
  br i1 %tobool.not.i.i, label %if.then7.i.if.end31_crit_edge, label %if.then.i.i

if.then7.i.if.end31_crit_edge:                    ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end31

if.then.i.i:                                      ; preds = %if.then7.i
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call12, i32 noundef 4) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !422
  call void @llvm.prefetch.p0(ptr nonnull %call12, i32 1, i32 3, i32 1) #16
  %75 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %call12, ptr nonnull %call12, i32 1, ptr nonnull elementtype(i32) %call12) #16, !srcloc !423
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %75, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp slt i32 %asmresult.i.i.i.i.i.i.i, 2
  br i1 %cmp.i.i.i.i, label %if.then3.i.i.i.i, label %if.then.i.i.if.end31_crit_edge, !prof !416

if.then.i.i.if.end31_crit_edge:                   ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end31

if.then3.i.i.i.i:                                 ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @refcount_warn_saturate(ptr noundef nonnull %call12, i32 noundef 4) #16
  br label %if.end31

if.then30:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %76 = inttoptr i32 %call7612 to ptr
  call fastcc void @trace_pnfs_update_layout(ptr noundef %ino, i64 noundef %pos, i64 noundef %count, i32 noundef %iomode, ptr noundef nonnull %call12, ptr noundef %76, i32 noundef 6)
  br label %out_unlock.thread

if.end31:                                         ; preds = %if.then3.i.i.i.i, %if.then.i.i.if.end31_crit_edge, %if.then7.i.if.end31_crit_edge, %if.end28.if.end31_crit_edge
  %plh_segs = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call12, i32 0, i32 4
  %77 = ptrtoint ptr %plh_segs to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load volatile ptr, ptr %plh_segs, align 4
  %cmp.i452.not = icmp eq ptr %78, %plh_segs
  br i1 %cmp.i452.not, label %if.end31.land.lhs.true_crit_edge, label %lor.lhs.false

if.end31.land.lhs.true_crit_edge:                 ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true

lor.lhs.false:                                    ; preds = %if.end31
  %79 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load volatile i32, ptr %plh_flags, align 4
  %81 = and i32 %80, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %81)
  %cmp.i455 = icmp eq i32 %81, 0
  br i1 %cmp.i455, label %lor.lhs.false.if.end70_crit_edge, label %lor.lhs.false.land.lhs.true_crit_edge

lor.lhs.false.land.lhs.true_crit_edge:            ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true

lor.lhs.false.if.end70_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end70

land.lhs.true:                                    ; preds = %lor.lhs.false.land.lhs.true_crit_edge, %if.end31.land.lhs.true_crit_edge
  %plh_outstanding = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call12, i32 0, i32 1
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %plh_outstanding, i32 noundef 4) #16
  %82 = ptrtoint ptr %plh_outstanding to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load volatile i32, ptr %plh_outstanding, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %83)
  %cmp36.not = icmp eq i32 %83, 0
  br i1 %cmp36.not, label %land.lhs.true.if.end70_crit_edge, label %if.then37

land.lhs.true.if.end70_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end70

if.then37:                                        ; preds = %land.lhs.true
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  call void @__might_sleep(ptr noundef nonnull @.str.2, i32 noundef 2020) #16
  %call.i.i438 = call zeroext i1 @__kasan_check_read(ptr noundef %plh_outstanding, i32 noundef 4) #16
  %84 = ptrtoint ptr %plh_outstanding to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load volatile i32, ptr %plh_outstanding, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %85)
  %tobool47.not = icmp eq i32 %85, 0
  br i1 %tobool47.not, label %if.then37.if.end69_crit_edge, label %if.then48

if.then37.if.end69_crit_edge:                     ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then48:                                        ; preds = %if.then37
  %call50 = call ptr @__var_waitqueue(ptr noundef %plh_outstanding) #16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %__wbq_entry) #16
  %86 = call ptr @memset(ptr %__wbq_entry, i32 255, i32 32)
  call void @init_wait_var_entry(ptr noundef nonnull %__wbq_entry, ptr noundef %plh_outstanding, i32 noundef 0) #16
  %call53600 = call i32 @prepare_to_wait_event(ptr noundef %call50, ptr noundef %21, i32 noundef 258) #16
  %call.i.i439601 = call zeroext i1 @__kasan_check_read(ptr noundef %plh_outstanding, i32 noundef 4) #16
  %87 = ptrtoint ptr %plh_outstanding to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load volatile i32, ptr %plh_outstanding, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %88)
  %tobool56.not602 = icmp eq i32 %88, 0
  br i1 %tobool56.not602, label %if.then48.if.end64.thread_crit_edge, label %if.then48.if.end58_crit_edge

if.then48.if.end58_crit_edge:                     ; preds = %if.then48
  br label %if.end58

if.then48.if.end64.thread_crit_edge:              ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end64.thread

if.end58:                                         ; preds = %cleanup.if.end58_crit_edge, %if.then48.if.end58_crit_edge
  %call53603 = phi i32 [ %call53, %cleanup.if.end58_crit_edge ], [ %call53600, %if.then48.if.end58_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53603)
  %tobool59.not = icmp eq i32 %call53603, 0
  br i1 %tobool59.not, label %cleanup, label %if.end64

cleanup:                                          ; preds = %if.end58
  call void @schedule() #16
  %call53 = call i32 @prepare_to_wait_event(ptr noundef %call50, ptr noundef %21, i32 noundef 258) #16
  %call.i.i439 = call zeroext i1 @__kasan_check_read(ptr noundef %plh_outstanding, i32 noundef 4) #16
  %89 = ptrtoint ptr %plh_outstanding to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load volatile i32, ptr %plh_outstanding, align 4
  %tobool56.not = icmp eq i32 %90, 0
  br i1 %tobool56.not, label %cleanup.if.end64.thread_crit_edge, label %cleanup.if.end58_crit_edge

cleanup.if.end58_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end58

cleanup.if.end64.thread_crit_edge:                ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end64.thread

if.end64.thread:                                  ; preds = %cleanup.if.end64.thread_crit_edge, %if.then48.if.end64.thread_crit_edge
  call void @finish_wait(ptr noundef %call50, ptr noundef %21) #16
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %__wbq_entry) #16
  br label %if.end69

if.end64:                                         ; preds = %if.end58
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %__wbq_entry) #16
  %91 = inttoptr i32 %call53603 to ptr
  %cmp.i456 = icmp ugt ptr %91, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i456, label %if.end64.if.end225.loopexit_crit_edge, label %if.end64.if.end69_crit_edge

if.end64.if.end69_crit_edge:                      ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.end64.if.end225.loopexit_crit_edge:            ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end225.loopexit

if.end69:                                         ; preds = %if.end64.if.end69_crit_edge, %if.end64.thread, %if.then37.if.end69_crit_edge
  call void @pnfs_put_layout_hdr(ptr noundef %call12)
  br label %lookup_again.backedge

lookup_again.backedge:                            ; preds = %if.end218, %if.then161, %do.end150, %if.end137.lookup_again.backedge_crit_edge, %do.end115, %if.end69
  %call7 = call i32 @nfs4_client_recover_expired_lease(ptr noundef %8) #16
  %92 = inttoptr i32 %call7 to ptr
  %cmp.i448 = icmp ugt ptr %92, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i448, label %do.body226.loopexit, label %lookup_again.backedge.if.end11_crit_edge

lookup_again.backedge.if.end11_crit_edge:         ; preds = %lookup_again.backedge
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

if.end70:                                         ; preds = %land.lhs.true.if.end70_crit_edge, %lor.lhs.false.if.end70_crit_edge
  %93 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load volatile i32, ptr %plh_flags, align 4
  %95 = and i32 %94, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %95)
  %tobool73.not = icmp eq i32 %95, 0
  br i1 %tobool73.not, label %if.end117, label %if.then74

if.then74:                                        ; preds = %if.end70
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %96 = load i32, ptr @nfs_debug, align 4
  %and77 = and i32 %96, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and77)
  %tobool78.not = icmp eq i32 %and77, 0
  br i1 %tobool78.not, label %if.then74.do.end93_crit_edge, label %do.end88, !prof !413

if.then74.do.end93_crit_edge:                     ; preds = %if.then74
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end93

do.end88:                                         ; preds = %if.then74
  call void @__sanitizer_cov_trace_pc() #18
  %call90 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.67, ptr noundef nonnull @.str.65) #19
  br label %do.end93

do.end93:                                         ; preds = %do.end88, %if.then74.do.end93_crit_edge
  %plh_inode.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call12, i32 0, i32 15
  %97 = ptrtoint ptr %plh_inode.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %plh_inode.i, align 4
  %call.i = call i32 @pnfs_layoutcommit_inode(ptr noundef %98, i1 noundef zeroext false) #16
  call void @__might_sleep(ptr noundef nonnull @.str.123, i32 noundef 153) #16
  %99 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load volatile i32, ptr %plh_flags, align 4
  %101 = and i32 %100, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %101)
  %tobool.not.i.i458 = icmp eq i32 %101, 0
  br i1 %tobool.not.i.i458, label %do.end93.if.then97_crit_edge, label %pnfs_prepare_to_retry_layoutget.exit

do.end93.if.then97_crit_edge:                     ; preds = %do.end93
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then97

pnfs_prepare_to_retry_layoutget.exit:             ; preds = %do.end93
  %call3.i.i = call i32 @out_of_line_wait_on_bit(ptr noundef %plh_flags, i32 noundef 3, ptr noundef nonnull @nfs_wait_bit_killable, i32 noundef 258) #16
  %102 = inttoptr i32 %call3.i.i to ptr
  %cmp.i459 = icmp ugt ptr %102, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i459, label %if.end116, label %pnfs_prepare_to_retry_layoutget.exit.if.then97_crit_edge

pnfs_prepare_to_retry_layoutget.exit.if.then97_crit_edge: ; preds = %pnfs_prepare_to_retry_layoutget.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then97

if.then97:                                        ; preds = %pnfs_prepare_to_retry_layoutget.exit.if.then97_crit_edge, %do.end93.if.then97_crit_edge
  %103 = phi ptr [ %102, %pnfs_prepare_to_retry_layoutget.exit.if.then97_crit_edge ], [ null, %do.end93.if.then97_crit_edge ]
  call void @pnfs_put_layout_hdr(ptr noundef nonnull %call12)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %104 = load i32, ptr @nfs_debug, align 4
  %and99 = and i32 %104, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and99)
  %tobool100.not = icmp eq i32 %and99, 0
  br i1 %tobool100.not, label %if.then97.do.end115_crit_edge, label %do.end110, !prof !413

if.then97.do.end115_crit_edge:                    ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end115

do.end110:                                        ; preds = %if.then97
  call void @__sanitizer_cov_trace_pc() #18
  %call112 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.70, ptr noundef nonnull @.str.65) #19
  br label %do.end115

do.end115:                                        ; preds = %do.end110, %if.then97.do.end115_crit_edge
  call fastcc void @trace_pnfs_update_layout(ptr noundef %ino, i64 noundef %pos, i64 noundef %count, i32 noundef %iomode, ptr noundef nonnull %call12, ptr noundef %103, i32 noundef 9)
  br label %lookup_again.backedge

if.end116:                                        ; preds = %pnfs_prepare_to_retry_layoutget.exit
  call void @__sanitizer_cov_trace_pc() #18
  %105 = inttoptr i32 %call3.i.i to ptr
  call fastcc void @trace_pnfs_update_layout(ptr noundef %ino, i64 noundef %pos, i64 noundef %count, i32 noundef %iomode, ptr noundef nonnull %call12, ptr noundef nonnull %105, i32 noundef 8)
  br label %if.end225

if.end117:                                        ; preds = %if.end70
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %106 = load i32, ptr @nfs_debug, align 4
  %and.i460 = and i32 %106, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i460)
  %tobool.not.i = icmp eq i32 %and.i460, 0
  br i1 %tobool.not.i, label %if.end117.do.end5.i_crit_edge, label %do.end.i462, !prof !413

if.end117.do.end5.i_crit_edge:                    ; preds = %if.end117
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end5.i

do.end.i462:                                      ; preds = %if.end117
  call void @__sanitizer_cov_trace_pc() #18
  %call.i461 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.53, ptr noundef nonnull @.str.147) #19
  br label %do.end5.i

do.end5.i:                                        ; preds = %do.end.i462, %if.end117.do.end5.i_crit_edge
  %107 = ptrtoint ptr %plh_segs to i32
  call void @__asan_load4_noabort(i32 %107)
  %lseg.061.i = load ptr, ptr %plh_segs, align 8
  %cmp.not62.i = icmp eq ptr %lseg.061.i, %plh_segs
  br i1 %cmp.not62.i, label %do.end5.i.do.body22.thread.i_crit_edge, label %do.end5.i.for.body.i_crit_edge

do.end5.i.for.body.i_crit_edge:                   ; preds = %do.end5.i
  br label %for.body.i

do.end5.i.do.body22.thread.i_crit_edge:           ; preds = %do.end5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body22.thread.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %do.end5.i.for.body.i_crit_edge
  %lseg.063.i = phi ptr [ %lseg.0.i, %for.inc.i.for.body.i_crit_edge ], [ %lseg.061.i, %do.end5.i.for.body.i_crit_edge ]
  %pls_flags.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.063.i, i32 0, i32 6
  %108 = ptrtoint ptr %pls_flags.i to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load volatile i32, ptr %pls_flags.i, align 4
  %and1.i.i = and i32 %109, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool11.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool11.not.i, label %for.body.i.for.inc.i_crit_edge, label %land.lhs.true.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %pls_range.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.063.i, i32 0, i32 3
  %110 = ptrtoint ptr %arg to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %arg, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %111)
  %cmp.i.i463 = icmp eq i32 %111, 2
  br i1 %cmp.i.i463, label %land.lhs.true.i.i, label %land.lhs.true.i.lor.lhs.false.i.i_crit_edge

land.lhs.true.i.lor.lhs.false.i.i_crit_edge:      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %lor.lhs.false.i.i

land.lhs.true.i.i:                                ; preds = %land.lhs.true.i
  %112 = ptrtoint ptr %pls_range.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %pls_range.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %113)
  %cmp2.not.i.i = icmp eq i32 %113, 2
  br i1 %cmp2.not.i.i, label %land.lhs.true.i.i.lor.lhs.false.i.i_crit_edge, label %land.lhs.true.i.i.for.inc.i_crit_edge

land.lhs.true.i.i.for.inc.i_crit_edge:            ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

land.lhs.true.i.i.lor.lhs.false.i.i_crit_edge:    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i.lor.lhs.false.i.i_crit_edge, %land.lhs.true.i.lor.lhs.false.i.i_crit_edge
  %114 = ptrtoint ptr %pls_range.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load i32, ptr %pls_range.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %111, i32 %115)
  %cmp5.not.i.i = icmp ne i32 %111, %115
  %116 = and i1 %cmp5.not.i.i, %strict_iomode
  br i1 %116, label %lor.lhs.false.i.i.for.inc.i_crit_edge, label %lor.lhs.false7.i.i

lor.lhs.false.i.i.for.inc.i_crit_edge:            ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

lor.lhs.false7.i.i:                               ; preds = %lor.lhs.false.i.i
  %offset.i.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.063.i, i32 0, i32 3, i32 1
  %117 = ptrtoint ptr %offset.i.i.i to i32
  call void @__asan_load8_noabort(i32 %117)
  %118 = load i64, ptr %offset.i.i.i, align 8
  %length.i.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.063.i, i32 0, i32 3, i32 2
  %119 = ptrtoint ptr %length.i.i.i to i32
  call void @__asan_load8_noabort(i32 %119)
  %120 = load i64, ptr %length.i.i.i, align 8
  %121 = call i64 @llvm.uadd.sat.i64(i64 %118, i64 %120) #16
  %122 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %122)
  %123 = load i64, ptr %offset, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %121)
  %cmp.i.i.i.i464 = icmp eq i64 %121, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %123, i64 %121)
  %cmp1.i.i.i.i = icmp ult i64 %123, %121
  %or.cond.i.i.i.i = or i1 %cmp.i.i.i.i464, %cmp1.i.i.i.i
  br i1 %or.cond.i.i.i.i, label %pnfs_lseg_range_intersecting.exit.i.i, label %lor.lhs.false7.i.i.for.inc.i_crit_edge

lor.lhs.false7.i.i.for.inc.i_crit_edge:           ; preds = %lor.lhs.false7.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

pnfs_lseg_range_intersecting.exit.i.i:            ; preds = %lor.lhs.false7.i.i
  %124 = ptrtoint ptr %length to i32
  call void @__asan_load8_noabort(i32 %124)
  %125 = load i64, ptr %length, align 8
  %126 = call i64 @llvm.uadd.sat.i64(i64 %123, i64 %125) #16
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %126)
  %cmp2.i.i.i.i = icmp eq i64 %126, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %118, i64 %126)
  %cmp3.i.i.i.i = icmp ult i64 %118, %126
  %spec.select.i.i.i.i = or i1 %cmp2.i.i.i.i, %cmp3.i.i.i.i
  br i1 %spec.select.i.i.i.i, label %pnfs_lseg_range_match.exit.i, label %pnfs_lseg_range_intersecting.exit.i.i.for.inc.i_crit_edge

pnfs_lseg_range_intersecting.exit.i.i.for.inc.i_crit_edge: ; preds = %pnfs_lseg_range_intersecting.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

pnfs_lseg_range_match.exit.i:                     ; preds = %pnfs_lseg_range_intersecting.exit.i.i
  %127 = call i64 @llvm.uadd.sat.i64(i64 %123, i64 1) #16
  call void @__sanitizer_cov_trace_cmp8(i64 %118, i64 %123)
  %cmp.not.i.i.i = icmp ule i64 %118, %123
  call void @__sanitizer_cov_trace_cmp8(i64 %121, i64 %127)
  %cmp4.i.i.i = icmp uge i64 %121, %127
  %spec.select.i.i.i = select i1 %cmp.not.i.i.i, i1 %cmp4.i.i.i, i1 false
  br i1 %spec.select.i.i.i, label %if.then14.i, label %pnfs_lseg_range_match.exit.i.for.inc.i_crit_edge

pnfs_lseg_range_match.exit.i.for.inc.i_crit_edge: ; preds = %pnfs_lseg_range_match.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then14.i:                                      ; preds = %pnfs_lseg_range_match.exit.i
  %tobool.not.i.i465 = icmp eq ptr %lseg.063.i, null
  br i1 %tobool.not.i.i465, label %do.body22.i, label %if.then.i.i467

if.then.i.i467:                                   ; preds = %if.then14.i
  %pls_refcount.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.063.i, i32 0, i32 4
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %pls_refcount.i.i, i32 noundef 4) #16
  call void @llvm.prefetch.p0(ptr %pls_refcount.i.i, i32 1, i32 3, i32 1) #16
  %128 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %pls_refcount.i.i, ptr %pls_refcount.i.i, i32 1, ptr elementtype(i32) %pls_refcount.i.i) #16, !srcloc !415
  %asmresult.i.i.i.i.i.i.i466 = extractvalue { i32, i32, i32 } %128, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i466)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i466, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.then.i.i467.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !416

if.then.i.i467.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.then.i.i467
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.then.i.i467
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i466, 1
  %129 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i466
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %129)
  %.not.i.i.i.i.i = icmp sgt i32 %129, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.do.body22.thread65.i_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !413

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.do.body22.thread65.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body22.thread65.i

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.then.i.i467.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.then.i.i467.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %pls_refcount.i.i, i32 noundef %.sink.i.i.i.i.i) #16
  br label %do.body22.thread65.i

for.inc.i:                                        ; preds = %pnfs_lseg_range_match.exit.i.for.inc.i_crit_edge, %pnfs_lseg_range_intersecting.exit.i.i.for.inc.i_crit_edge, %lor.lhs.false7.i.i.for.inc.i_crit_edge, %lor.lhs.false.i.i.for.inc.i_crit_edge, %land.lhs.true.i.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %130 = ptrtoint ptr %lseg.063.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %lseg.0.i = load ptr, ptr %lseg.063.i, align 8
  %cmp.not.i = icmp eq ptr %lseg.0.i, %plh_segs
  br i1 %cmp.not.i, label %for.inc.i.do.body22.thread.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.do.body22.thread.i_crit_edge:           ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body22.thread.i

do.body22.i:                                      ; preds = %if.then14.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %131 = load i32, ptr @nfs_debug, align 4
  %and23.i = and i32 %131, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23.i)
  %tobool24.not.i = icmp eq i32 %and23.i, 0
  br i1 %tobool24.not.i, label %do.body22.i.if.end122_crit_edge, label %do.body22.i.pnfs_find_lseg.exit.thread517_crit_edge, !prof !413

do.body22.i.pnfs_find_lseg.exit.thread517_crit_edge: ; preds = %do.body22.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_find_lseg.exit.thread517

do.body22.i.if.end122_crit_edge:                  ; preds = %do.body22.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end122

do.body22.thread65.i:                             ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.do.body22.thread65.i_crit_edge
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %132 = load i32, ptr @nfs_debug, align 4
  %and2366.i = and i32 %132, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2366.i)
  %tobool24.not67.i = icmp eq i32 %and2366.i, 0
  br i1 %tobool24.not67.i, label %do.body22.thread65.i.if.then121_crit_edge, label %pnfs_find_lseg.exit, !prof !413

do.body22.thread65.i.if.then121_crit_edge:        ; preds = %do.body22.thread65.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then121

do.body22.thread.i:                               ; preds = %for.inc.i.do.body22.thread.i_crit_edge, %do.end5.i.do.body22.thread.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %133 = load i32, ptr @nfs_debug, align 4
  %and2353.i = and i32 %133, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2353.i)
  %tobool24.not54.i = icmp eq i32 %and2353.i, 0
  br i1 %tobool24.not54.i, label %do.body22.thread.i.if.end122_crit_edge, label %do.body22.thread.i.pnfs_find_lseg.exit.thread517_crit_edge, !prof !413

do.body22.thread.i.pnfs_find_lseg.exit.thread517_crit_edge: ; preds = %do.body22.thread.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_find_lseg.exit.thread517

do.body22.thread.i.if.end122_crit_edge:           ; preds = %do.body22.thread.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end122

pnfs_find_lseg.exit.thread517:                    ; preds = %do.body22.thread.i.pnfs_find_lseg.exit.thread517_crit_edge, %do.body22.i.pnfs_find_lseg.exit.thread517_crit_edge
  %call38.i520 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.149, ptr noundef nonnull @.str.147, ptr noundef null, i32 noundef 0) #19
  br label %if.end122

pnfs_find_lseg.exit:                              ; preds = %do.body22.thread65.i
  call void @__sanitizer_cov_trace_pc() #18
  %call.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %pls_refcount.i.i, i32 noundef 4) #16
  %134 = ptrtoint ptr %pls_refcount.i.i to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load volatile i32, ptr %pls_refcount.i.i, align 4
  %call38.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.149, ptr noundef nonnull @.str.147, ptr noundef nonnull %lseg.063.i, i32 noundef %135) #19
  br label %if.then121

if.then121:                                       ; preds = %pnfs_find_lseg.exit, %do.body22.thread65.i.if.then121_crit_edge
  call fastcc void @trace_pnfs_update_layout(ptr noundef %ino, i64 noundef %pos, i64 noundef %count, i32 noundef %iomode, ptr noundef %call12, ptr noundef nonnull %lseg.063.i, i32 noundef 7)
  br label %out_unlock.thread

if.end122:                                        ; preds = %pnfs_find_lseg.exit.thread517, %do.body22.thread.i.if.end122_crit_edge, %do.body22.i.if.end122_crit_edge
  %136 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load volatile i32, ptr %plh_flags, align 4
  %138 = and i32 %137, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %138)
  %tobool125.not = icmp eq i32 %138, 0
  br i1 %tobool125.not, label %if.else, label %if.then126

if.then126:                                       ; preds = %if.end122
  %call128 = call i32 @_test_and_set_bit(i32 noundef 7, ptr noundef %plh_flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call128)
  %tobool129.not = icmp eq i32 %call128, 0
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  br i1 %tobool129.not, label %if.end156, label %if.then130

if.then130:                                       ; preds = %if.then126
  call void @__might_sleep(ptr noundef nonnull @.str.123, i32 noundef 73) #16
  %139 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load volatile i32, ptr %plh_flags, align 4
  %141 = and i32 %140, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %141)
  %tobool.not.i468 = icmp eq i32 %141, 0
  br i1 %tobool.not.i468, label %if.then130.if.end137_crit_edge, label %wait_on_bit.exit

if.then130.if.end137_crit_edge:                   ; preds = %if.then130
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end137

wait_on_bit.exit:                                 ; preds = %if.then130
  %call3.i = call i32 @out_of_line_wait_on_bit(ptr noundef %plh_flags, i32 noundef 7, ptr noundef nonnull @bit_wait, i32 noundef 258) #16
  %142 = inttoptr i32 %call3.i to ptr
  %cmp.i471 = icmp ugt ptr %142, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i471, label %wait_on_bit.exit.if.end225.loopexit_crit_edge, label %wait_on_bit.exit.if.end137_crit_edge

wait_on_bit.exit.if.end137_crit_edge:             ; preds = %wait_on_bit.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end137

wait_on_bit.exit.if.end225.loopexit_crit_edge:    ; preds = %wait_on_bit.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end225.loopexit

if.end137:                                        ; preds = %wait_on_bit.exit.if.end137_crit_edge, %if.then130.if.end137_crit_edge
  call void @pnfs_put_layout_hdr(ptr noundef %call12)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %143 = load i32, ptr @nfs_debug, align 4
  %and139 = and i32 %143, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and139)
  %tobool140.not = icmp eq i32 %and139, 0
  br i1 %tobool140.not, label %if.end137.lookup_again.backedge_crit_edge, label %do.end150, !prof !413

if.end137.lookup_again.backedge_crit_edge:        ; preds = %if.end137
  call void @__sanitizer_cov_trace_pc() #18
  br label %lookup_again.backedge

do.end150:                                        ; preds = %if.end137
  call void @__sanitizer_cov_trace_pc() #18
  %call152 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.70, ptr noundef nonnull @.str.65) #19
  br label %lookup_again.backedge

if.end156:                                        ; preds = %if.then126
  %144 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %state, align 4
  %call159 = call i32 @nfs4_select_rw_stateid(ptr noundef %145, i32 noundef %cond, ptr noundef null, ptr noundef nonnull %stateid, ptr noundef null) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call159)
  %cmp160.not = icmp eq i32 %call159, 0
  br i1 %cmp160.not, label %cleanup167.thread, label %if.then161

if.then161:                                       ; preds = %if.end156
  call void @__sanitizer_cov_trace_pc() #18
  %146 = inttoptr i32 %call159 to ptr
  call fastcc void @trace_pnfs_update_layout(ptr noundef %ino, i64 noundef %pos, i64 noundef %count, i32 noundef %iomode, ptr noundef %call12, ptr noundef nonnull %146, i32 noundef 11)
  %147 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %state, align 4
  %call164 = call i32 @nfs4_schedule_stateid_recovery(ptr noundef %6, ptr noundef %148) #16
  %call.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %plh_flags, i32 noundef 4) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !419
  call void @llvm.prefetch.p0(ptr %plh_flags, i32 1, i32 3, i32 1) #16
  %149 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %plh_flags, ptr %plh_flags, i32 128, ptr elementtype(i32) %plh_flags) #16, !srcloc !420
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !436
  call void @wake_up_bit(ptr noundef %plh_flags, i32 noundef 7) #16
  call void @pnfs_put_layout_hdr(ptr noundef %call12)
  br label %lookup_again.backedge

cleanup167.thread:                                ; preds = %if.end156
  call void @__sanitizer_cov_trace_pc() #18
  call void @_raw_spin_lock(ptr noundef %i_lock) #16
  br label %if.end170

if.else:                                          ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #18
  %plh_stateid = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call12, i32 0, i32 9
  %150 = call ptr @memcpy(ptr %stateid, ptr %plh_stateid, i32 16)
  %type.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call12, i32 0, i32 9, i32 1
  %151 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %type.i, align 4
  %153 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %153)
  store i32 %152, ptr %9, align 4
  br label %if.end170

if.end170:                                        ; preds = %if.else, %cleanup167.thread
  %plh_block_lgets.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call12, i32 0, i32 6
  %154 = ptrtoint ptr %plh_block_lgets.i to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %plh_block_lgets.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %155)
  %tobool.not.i473 = icmp eq i32 %155, 0
  br i1 %tobool.not.i473, label %pnfs_layoutgets_blocked.exit, label %if.end170.out_unlock_crit_edge

if.end170.out_unlock_crit_edge:                   ; preds = %if.end170
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_unlock

pnfs_layoutgets_blocked.exit:                     ; preds = %if.end170
  %156 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load volatile i32, ptr %plh_flags, align 4
  %158 = and i32 %157, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %158)
  %tobool1.i.not = icmp eq i32 %158, 0
  br i1 %tobool1.i.not, label %if.end173, label %pnfs_layoutgets_blocked.exit.out_unlock_crit_edge

pnfs_layoutgets_blocked.exit.out_unlock_crit_edge: ; preds = %pnfs_layoutgets_blocked.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_unlock

if.end173:                                        ; preds = %pnfs_layoutgets_blocked.exit
  %plh_outstanding.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call12, i32 0, i32 1
  %call.i.i.i475 = call zeroext i1 @__kasan_check_write(ptr noundef %plh_outstanding.i, i32 noundef 4) #16
  call void @llvm.prefetch.p0(ptr %plh_outstanding.i, i32 1, i32 3, i32 1) #16
  %159 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %plh_outstanding.i, ptr %plh_outstanding.i, i32 1, ptr elementtype(i32) %plh_outstanding.i) #16, !srcloc !414
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  %call.i477 = call i32 @_test_and_set_bit(i32 noundef 9, ptr noundef %plh_flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i477)
  %tobool.not.i478 = icmp eq i32 %call.i477, 0
  br i1 %tobool.not.i478, label %if.then.i, label %if.end173._add_to_server_list.exit_crit_edge

if.end173._add_to_server_list.exit_crit_edge:     ; preds = %if.end173
  call void @__sanitizer_cov_trace_pc() #18
  br label %_add_to_server_list.exit

if.then.i:                                        ; preds = %if.end173
  %160 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %6, align 8
  %cl_lock.i = getelementptr inbounds %struct.nfs_client, ptr %161, i32 0, i32 23
  call void @_raw_spin_lock(ptr noundef %cl_lock.i) #16
  %plh_layouts.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call12, i32 0, i32 2
  %162 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i479 = call zeroext i1 @__list_add_valid(ptr noundef %plh_layouts.i, ptr noundef %163, ptr noundef %layouts.i) #16
  br i1 %call.i.i.i479, label %if.end.i.i.i, label %if.then.i.list_add_tail_rcu.exit.i_crit_edge

if.then.i.list_add_tail_rcu.exit.i_crit_edge:     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add_tail_rcu.exit.i

if.end.i.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %164 = ptrtoint ptr %plh_layouts.i to i32
  call void @__asan_store4_noabort(i32 %164)
  store ptr %layouts.i, ptr %plh_layouts.i, align 4
  %prev2.i.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call12, i32 0, i32 2, i32 1
  %165 = ptrtoint ptr %prev2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %165)
  store ptr %163, ptr %prev2.i.i.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !437
  %166 = ptrtoint ptr %163 to i32
  call void @__asan_store4_noabort(i32 %166)
  store volatile ptr %plh_layouts.i, ptr %163, align 4
  %167 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %167)
  store ptr %plh_layouts.i, ptr %prev.i.i, align 4
  br label %list_add_tail_rcu.exit.i

list_add_tail_rcu.exit.i:                         ; preds = %if.end.i.i.i, %if.then.i.list_add_tail_rcu.exit.i_crit_edge
  call void @_raw_spin_unlock(ptr noundef %cl_lock.i) #16
  br label %_add_to_server_list.exit

_add_to_server_list.exit:                         ; preds = %list_add_tail_rcu.exit.i, %if.end173._add_to_server_list.exit_crit_edge
  %168 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %168)
  %169 = load i64, ptr %offset, align 8
  %170 = trunc i64 %169 to i32
  %conv = and i32 %170, 4095
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv)
  %tobool177.not = icmp eq i32 %conv, 0
  br i1 %tobool177.not, label %if.end184thread-pre-split, label %if.then178

if.then178:                                       ; preds = %_add_to_server_list.exit
  call void @__sanitizer_cov_trace_pc() #18
  %conv179 = zext i32 %conv to i64
  %sub = sub i64 %169, %conv179
  %171 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %171)
  store i64 %sub, ptr %offset, align 8
  %172 = ptrtoint ptr %length to i32
  call void @__asan_load8_noabort(i32 %172)
  %173 = load i64, ptr %length, align 8
  %add183 = add i64 %173, %conv179
  store i64 %add183, ptr %length, align 8
  br label %if.end184

if.end184thread-pre-split:                        ; preds = %_add_to_server_list.exit
  call void @__sanitizer_cov_trace_pc() #18
  %174 = ptrtoint ptr %length to i32
  call void @__asan_load8_noabort(i32 %174)
  %.pr = load i64, ptr %length, align 8
  br label %if.end184

if.end184:                                        ; preds = %if.end184thread-pre-split, %if.then178
  %175 = phi i64 [ %.pr, %if.end184thread-pre-split ], [ %add183, %if.then178 ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %175)
  %cmp186.not = icmp eq i64 %175, -1
  br i1 %cmp186.not, label %if.end184.if.end193_crit_edge, label %if.then188

if.end184.if.end193_crit_edge:                    ; preds = %if.end184
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end193

if.then188:                                       ; preds = %if.end184
  call void @__sanitizer_cov_trace_pc() #18
  %add190 = add i64 %175, 4095
  %and191 = and i64 %add190, -4096
  %176 = ptrtoint ptr %length to i32
  call void @__asan_store8_noabort(i32 %176)
  store i64 %and191, ptr %length, align 8
  br label %if.end193

if.end193:                                        ; preds = %if.then188, %if.end184.if.end193_crit_edge
  %call194 = call fastcc ptr @pnfs_alloc_init_layoutget_args(ptr noundef %ino, ptr noundef %ctx, ptr noundef nonnull %stateid, ptr noundef nonnull %arg, i32 noundef %gfp_flags)
  %tobool195.not = icmp eq ptr %call194, null
  br i1 %tobool195.not, label %if.then196, label %if.end197

if.then196:                                       ; preds = %if.end193
  call fastcc void @trace_pnfs_update_layout(ptr noundef %ino, i64 noundef %pos, i64 noundef %count, i32 noundef %iomode, ptr noundef %call12, ptr noundef null, i32 noundef 4)
  call fastcc void @nfs_layoutget_end(ptr noundef %call12)
  br i1 %tobool125.not, label %if.then196.if.end225_crit_edge, label %if.then196.if.then224_crit_edge

if.then196.if.then224_crit_edge:                  ; preds = %if.then196
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then224

if.then196.if.end225_crit_edge:                   ; preds = %if.then196
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end225

if.end197:                                        ; preds = %if.end193
  %lo198 = getelementptr inbounds %struct.nfs4_layoutget, ptr %call194, i32 0, i32 3
  %177 = ptrtoint ptr %lo198 to i32
  call void @__asan_store4_noabort(i32 %177)
  store ptr %call12, ptr %lo198, align 4
  %call.i.i.i.i.i.i481 = call zeroext i1 @__kasan_check_write(ptr noundef %call12, i32 noundef 4) #16
  call void @llvm.prefetch.p0(ptr %call12, i32 1, i32 3, i32 1) #16
  %178 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %call12, ptr %call12, i32 1, ptr elementtype(i32) %call12) #16, !srcloc !415
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %178, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end197.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !416

if.end197.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.end197
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end197
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %179 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %179)
  %.not.i.i.i.i = icmp sgt i32 %179, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !413

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_get_layout_hdr.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end197.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end197.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %call12, i32 noundef %.sink.i.i.i.i) #16
  br label %pnfs_get_layout_hdr.exit

pnfs_get_layout_hdr.exit:                         ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge
  %call199 = call ptr @nfs4_proc_layoutget(ptr noundef nonnull %call194, ptr noundef nonnull %timeout) #16
  call fastcc void @trace_pnfs_update_layout(ptr noundef %ino, i64 noundef %pos, i64 noundef %count, i32 noundef %iomode, ptr noundef %call12, ptr noundef %call199, i32 noundef 12)
  %call.i.i.i483 = call zeroext i1 @__kasan_check_write(ptr noundef %plh_outstanding.i, i32 noundef 4) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !410
  call void @llvm.prefetch.p0(ptr %plh_outstanding.i, i32 1, i32 3, i32 1) #16
  %180 = call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %plh_outstanding.i, ptr %plh_outstanding.i, i32 1, ptr elementtype(i32) %plh_outstanding.i) #16, !srcloc !411
  %asmresult.i.i.i.i.i.i484 = extractvalue { i32, i32 } %180, 0
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !412
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i484)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i484, 0
  br i1 %cmp.i.i.i, label %if.then.i485, label %pnfs_get_layout_hdr.exit.nfs_layoutget_end.exit_crit_edge

pnfs_get_layout_hdr.exit.nfs_layoutget_end.exit_crit_edge: ; preds = %pnfs_get_layout_hdr.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfs_layoutget_end.exit

if.then.i485:                                     ; preds = %pnfs_get_layout_hdr.exit
  call void @__sanitizer_cov_trace_pc() #18
  call void @wake_up_var(ptr noundef %plh_outstanding.i) #16
  br label %nfs_layoutget_end.exit

nfs_layoutget_end.exit:                           ; preds = %if.then.i485, %pnfs_get_layout_hdr.exit.nfs_layoutget_end.exit_crit_edge
  %cmp.i487 = icmp ugt ptr %call199, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i487, label %if.then201, label %if.else220

if.then201:                                       ; preds = %nfs_layoutget_end.exit
  %magicptr = ptrtoint ptr %call199 to i32
  %181 = zext i32 %magicptr to i64
  call void @__sanitizer_cov_trace_switch(i64 %181, ptr @__sancov_gen_cov_switch_values.178)
  switch i32 %magicptr, label %sw.default [
    i32 -16, label %sw.bb
    i32 -530, label %if.then201.if.then215_crit_edge
    i32 -11, label %if.then201.if.then215_crit_edge848
  ]

if.then201.if.then215_crit_edge848:               ; preds = %if.then201
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then215

if.then201.if.then215_crit_edge:                  ; preds = %if.then201
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then215

sw.bb:                                            ; preds = %if.then201
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %182 = load volatile i32, ptr @jiffies, align 128
  %sub203 = sub i32 %add, %182
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub203)
  %cmp204 = icmp slt i32 %sub203, 0
  br i1 %cmp204, label %sw.epilog.thread, label %sw.bb.if.then215_crit_edge

sw.bb.if.then215_crit_edge:                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then215

sw.default:                                       ; preds = %if.then201
  %magicptr.le = ptrtoint ptr %call199 to i32
  %call210 = call fastcc zeroext i1 @nfs_error_is_fatal(i32 noundef %magicptr.le)
  br i1 %call210, label %out_put_layout_hdr, label %if.then211

if.then211:                                       ; preds = %sw.default
  call fastcc void @pnfs_layout_clear_fail_bit(ptr noundef %call12, i32 noundef %cond.i.i)
  br i1 %tobool125.not, label %if.then211.if.end225_crit_edge, label %if.then211.if.then224_crit_edge

if.then211.if.then224_crit_edge:                  ; preds = %if.then211
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then224

if.then211.if.end225_crit_edge:                   ; preds = %if.then211
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end225

sw.epilog.thread:                                 ; preds = %sw.bb
  br i1 %tobool125.not, label %sw.epilog.thread.if.end225_crit_edge, label %sw.epilog.thread.if.then224_crit_edge

sw.epilog.thread.if.then224_crit_edge:            ; preds = %sw.epilog.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then224

sw.epilog.thread.if.end225_crit_edge:             ; preds = %sw.epilog.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end225

if.then215:                                       ; preds = %sw.bb.if.then215_crit_edge, %if.then201.if.then215_crit_edge, %if.then201.if.then215_crit_edge848
  br i1 %tobool125.not, label %if.then215.if.end218_crit_edge, label %if.then217

if.then215.if.end218_crit_edge:                   ; preds = %if.then215
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end218

if.then217:                                       ; preds = %if.then215
  call void @__sanitizer_cov_trace_pc() #18
  %call.i.i.i491 = call zeroext i1 @__kasan_check_write(ptr noundef %plh_flags, i32 noundef 4) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !419
  call void @llvm.prefetch.p0(ptr %plh_flags, i32 1, i32 3, i32 1) #16
  %183 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %plh_flags, ptr %plh_flags, i32 128, ptr elementtype(i32) %plh_flags) #16, !srcloc !420
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !436
  call void @wake_up_bit(ptr noundef %plh_flags, i32 noundef 7) #16
  br label %if.end218

if.end218:                                        ; preds = %if.then217, %if.then215.if.end218_crit_edge
  call fastcc void @trace_pnfs_update_layout(ptr noundef %ino, i64 noundef %pos, i64 noundef %count, i32 noundef %iomode, ptr noundef %call12, ptr noundef nonnull %call199, i32 noundef 9)
  call void @pnfs_put_layout_hdr(ptr noundef %call12)
  br label %lookup_again.backedge

if.else220:                                       ; preds = %nfs_layoutget_end.exit
  call fastcc void @pnfs_layout_clear_fail_bit(ptr noundef %call12, i32 noundef %cond.i.i)
  br i1 %tobool125.not, label %if.else220.if.end225_crit_edge, label %if.else220.if.then224_crit_edge

if.else220.if.then224_crit_edge:                  ; preds = %if.else220
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then224

if.else220.if.end225_crit_edge:                   ; preds = %if.else220
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end225

out_put_layout_hdr:                               ; preds = %sw.default
  br i1 %tobool125.not, label %out_put_layout_hdr.if.end225_crit_edge, label %out_put_layout_hdr.if.then224_crit_edge

out_put_layout_hdr.if.then224_crit_edge:          ; preds = %out_put_layout_hdr
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then224

out_put_layout_hdr.if.end225_crit_edge:           ; preds = %out_put_layout_hdr
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end225

if.then224:                                       ; preds = %out_unlock.if.then224_crit_edge, %out_put_layout_hdr.if.then224_crit_edge, %if.else220.if.then224_crit_edge, %sw.epilog.thread.if.then224_crit_edge, %if.then211.if.then224_crit_edge, %if.then196.if.then224_crit_edge
  %lseg.3534 = phi ptr [ null, %out_unlock.if.then224_crit_edge ], [ %call199, %out_put_layout_hdr.if.then224_crit_edge ], [ null, %if.then211.if.then224_crit_edge ], [ %call199, %if.else220.if.then224_crit_edge ], [ null, %if.then196.if.then224_crit_edge ], [ null, %sw.epilog.thread.if.then224_crit_edge ]
  %call.i.i.i495 = call zeroext i1 @__kasan_check_write(ptr noundef %plh_flags, i32 noundef 4) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !419
  call void @llvm.prefetch.p0(ptr %plh_flags, i32 1, i32 3, i32 1) #16
  %184 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %plh_flags, ptr %plh_flags, i32 128, ptr elementtype(i32) %plh_flags) #16, !srcloc !420
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !436
  call void @wake_up_bit(ptr noundef %plh_flags, i32 noundef 7) #16
  br label %if.end225

if.end225.loopexit:                               ; preds = %wait_on_bit.exit.if.end225.loopexit_crit_edge, %if.end64.if.end225.loopexit_crit_edge
  %call3.i.lcssa.sink = phi i32 [ %call53603, %if.end64.if.end225.loopexit_crit_edge ], [ %call3.i, %wait_on_bit.exit.if.end225.loopexit_crit_edge ]
  %185 = inttoptr i32 %call3.i.lcssa.sink to ptr
  br label %if.end225

if.end225:                                        ; preds = %out_unlock.if.end225_crit_edge, %out_unlock.thread, %if.end225.loopexit, %if.then224, %out_put_layout_hdr.if.end225_crit_edge, %if.else220.if.end225_crit_edge, %sw.epilog.thread.if.end225_crit_edge, %if.then211.if.end225_crit_edge, %if.then196.if.end225_crit_edge, %if.end116
  %lseg.3533 = phi ptr [ %lseg.3534, %if.then224 ], [ %call199, %out_put_layout_hdr.if.end225_crit_edge ], [ null, %out_unlock.if.end225_crit_edge ], [ null, %if.then211.if.end225_crit_edge ], [ %call199, %if.else220.if.end225_crit_edge ], [ null, %if.then196.if.end225_crit_edge ], [ null, %sw.epilog.thread.if.end225_crit_edge ], [ %lseg.5.ph, %out_unlock.thread ], [ %105, %if.end116 ], [ %185, %if.end225.loopexit ]
  call fastcc void @trace_pnfs_update_layout(ptr noundef %ino, i64 noundef %pos, i64 noundef %count, i32 noundef %iomode, ptr noundef %call12, ptr noundef %lseg.3533, i32 noundef 13)
  call void @pnfs_put_layout_hdr(ptr noundef %call12)
  br label %do.body226

do.body226.loopexit:                              ; preds = %lookup_again.backedge
  call void @__sanitizer_cov_trace_pc() #18
  %186 = inttoptr i32 %call7 to ptr
  br label %do.body226

do.body226:                                       ; preds = %do.body226.loopexit, %if.end225, %if.then13, %if.then5, %lookup_again.preheader.do.body226_crit_edge, %if.then
  %lseg.4 = phi ptr [ null, %if.then5 ], [ %63, %if.then13 ], [ %lseg.3533, %if.end225 ], [ null, %if.then ], [ %19, %lookup_again.preheader.do.body226_crit_edge ], [ %186, %do.body226.loopexit ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %187 = load i32, ptr @nfs_debug, align 4
  %and227 = and i32 %187, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and227)
  %tobool228.not = icmp eq i32 %and227, 0
  br i1 %tobool228.not, label %do.body226.cleanup252_crit_edge, label %do.end238, !prof !413

do.body226.cleanup252_crit_edge:                  ; preds = %do.body226
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup252

do.end238:                                        ; preds = %do.body226
  call void @__sanitizer_cov_trace_pc() #18
  %188 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %188)
  %189 = load ptr, ptr %i_sb.i, align 4
  %s_id = getelementptr inbounds %struct.super_block, ptr %189, i32 0, i32 39
  %add.ptr.i.i = getelementptr i8, ptr %ino, i32 -448
  %190 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load8_noabort(i32 %190)
  %191 = load i64, ptr %add.ptr.i.i, align 8
  %tobool.not.i496 = icmp eq ptr %lseg.4, null
  %cmp.i497 = icmp ugt ptr %lseg.4, inttoptr (i32 -4096 to ptr)
  %spec.select.i = or i1 %tobool.not.i496, %cmp.i497
  %cond243 = select i1 %spec.select.i, ptr @.str.77, ptr @.str.78
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %iomode)
  %cmp244 = icmp eq i32 %iomode, 2
  %cond246 = select i1 %cmp244, ptr @.str.79, ptr @.str.80
  %call247 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.75, ptr noundef nonnull @.str.65, ptr noundef %s_id, i64 noundef %191, ptr noundef nonnull %cond243, ptr noundef nonnull %cond246, i64 noundef %pos, i64 noundef %count) #19
  br label %cleanup252

out_unlock.thread:                                ; preds = %if.then121, %if.then30, %do.end, %if.then18.out_unlock.thread_crit_edge
  %lseg.5.ph = phi ptr [ %lseg.063.i, %if.then121 ], [ %76, %if.then30 ], [ %67, %if.then18.out_unlock.thread_crit_edge ], [ %67, %do.end ]
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  br label %if.end225

out_unlock:                                       ; preds = %pnfs_layoutgets_blocked.exit.out_unlock_crit_edge, %if.end170.out_unlock_crit_edge
  call fastcc void @trace_pnfs_update_layout(ptr noundef %ino, i64 noundef %pos, i64 noundef %count, i32 noundef %iomode, ptr noundef %call12, ptr noundef null, i32 noundef 10)
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  br i1 %tobool125.not, label %out_unlock.if.end225_crit_edge, label %out_unlock.if.then224_crit_edge

out_unlock.if.then224_crit_edge:                  ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then224

out_unlock.if.end225_crit_edge:                   ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end225

cleanup252:                                       ; preds = %do.end238, %do.body226.cleanup252_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %timeout) #16
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %stateid) #16
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %arg) #16
  ret ptr %lseg.4
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_pnfs_update_layout(ptr noundef %inode, i64 noundef %pos, i64 noundef %count, i32 noundef %iomode, ptr noundef %lo, ptr noundef %lseg, i32 noundef %reason) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_pnfs_update_layout, i32 0, i32 1), ptr blockaddress(@trace_pnfs_update_layout, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !430

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !413

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.128, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !438
  %call42 = tail call i32 @__traceiter_pnfs_update_layout(ptr noundef null, ptr noundef %inode, i64 noundef %pos, i64 noundef %count, i32 noundef %iomode, ptr noundef %lo, ptr noundef %lseg, i32 noundef %reason) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !439
  %13 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !413

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.128, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !433
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_pnfs_update_layout, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_pnfs_update_layout, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_pnfs_update_layout.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_pnfs_update_layout.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.126, i32 noundef 1843, ptr noundef nonnull @.str.127) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !434
  %31 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfs4_client_recover_expired_lease(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @pnfs_find_alloc_layout(ptr noundef %ino, ptr nocapture noundef readonly %ctx, i32 noundef %gfp_flags) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %0 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %0, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end6_crit_edge, label %do.end, !prof !413

entry.do.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end6

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %layout = getelementptr i8, ptr %ino, i32 -32
  %1 = ptrtoint ptr %layout to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %layout, align 8
  %call4 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.145, ptr noundef nonnull @.str.146, ptr noundef %ino, ptr noundef %2) #19
  br label %do.end6

do.end6:                                          ; preds = %do.end, %entry.do.end6_crit_edge
  %layout7 = getelementptr i8, ptr %ino, i32 -32
  %3 = ptrtoint ptr %layout7 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %layout7, align 8
  %cmp.not = icmp eq ptr %4, null
  br i1 %cmp.not, label %if.end9, label %do.end6.out_existing_crit_edge

do.end6.out_existing_crit_edge:                   ; preds = %do.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_existing

if.end9:                                          ; preds = %do.end6
  %i_lock = getelementptr inbounds %struct.inode, ptr %ino, i32 0, i32 18
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  %i_sb.i.i.i = getelementptr inbounds %struct.inode, ptr %ino, i32 0, i32 8
  %5 = ptrtoint ptr %i_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %i_sb.i.i.i, align 4
  %s_fs_info.i.i.i.i = getelementptr inbounds %struct.super_block, ptr %6, i32 0, i32 33
  %7 = ptrtoint ptr %s_fs_info.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %s_fs_info.i.i.i.i, align 16
  %pnfs_curr_ld.i.i = getelementptr inbounds %struct.nfs_server, ptr %8, i32 0, i32 46
  %9 = ptrtoint ptr %pnfs_curr_ld.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pnfs_curr_ld.i.i, align 4
  %alloc_layout_hdr.i.i = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %10, i32 0, i32 9
  %11 = ptrtoint ptr %alloc_layout_hdr.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %alloc_layout_hdr.i.i, align 4
  %call1.i.i = tail call ptr %12(ptr noundef %ino, i32 noundef %gfp_flags) #16
  %tobool.not.i = icmp eq ptr %call1.i.i, null
  br i1 %tobool.not.i, label %alloc_init_layout_hdr.exit, label %if.end.i

if.end.i:                                         ; preds = %if.end9
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call1.i.i, i32 noundef 4) #16
  %13 = ptrtoint ptr %call1.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile i32 1, ptr %call1.i.i, align 4
  %plh_layouts.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call1.i.i, i32 0, i32 2
  %14 = ptrtoint ptr %plh_layouts.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %plh_layouts.i, ptr %plh_layouts.i, align 4
  %prev.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call1.i.i, i32 0, i32 2, i32 1
  %15 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %plh_layouts.i, ptr %prev.i.i, align 4
  %plh_segs.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call1.i.i, i32 0, i32 4
  %16 = ptrtoint ptr %plh_segs.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %plh_segs.i, ptr %plh_segs.i, align 4
  %prev.i12.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call1.i.i, i32 0, i32 4, i32 1
  %17 = ptrtoint ptr %prev.i12.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %plh_segs.i, ptr %prev.i12.i, align 4
  %plh_return_segs.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call1.i.i, i32 0, i32 5
  %18 = ptrtoint ptr %plh_return_segs.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %plh_return_segs.i, ptr %plh_return_segs.i, align 4
  %prev.i13.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call1.i.i, i32 0, i32 5, i32 1
  %19 = ptrtoint ptr %prev.i13.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %plh_return_segs.i, ptr %prev.i13.i, align 4
  %plh_bulk_destroy.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call1.i.i, i32 0, i32 3
  %20 = ptrtoint ptr %plh_bulk_destroy.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %plh_bulk_destroy.i, ptr %plh_bulk_destroy.i, align 4
  %prev.i14.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call1.i.i, i32 0, i32 3, i32 1
  %21 = ptrtoint ptr %prev.i14.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %plh_bulk_destroy.i, ptr %prev.i14.i, align 4
  %plh_inode.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call1.i.i, i32 0, i32 15
  %22 = ptrtoint ptr %plh_inode.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %ino, ptr %plh_inode.i, align 4
  %cred.i = getelementptr inbounds %struct.nfs_open_context, ptr %ctx, i32 0, i32 3
  %23 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %cred.i, align 4
  %tobool.not.i.i = icmp eq ptr %24, null
  br i1 %tobool.not.i.i, label %if.end.i.alloc_init_layout_hdr.exit.thread_crit_edge, label %do.body.i.i

if.end.i.alloc_init_layout_hdr.exit.thread_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %alloc_init_layout_hdr.exit.thread

do.body.i.i:                                      ; preds = %if.end.i
  %call.i.i.i = tail call zeroext i1 @creds_are_invalid(ptr noundef nonnull %24) #16
  br i1 %call.i.i.i, label %if.then.i.i.i, label %do.body.i.i.__validate_creds.exit.i.i_crit_edge, !prof !416

do.body.i.i.__validate_creds.exit.i.i_crit_edge:  ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %__validate_creds.exit.i.i

if.then.i.i.i:                                    ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @__invalid_creds(ptr noundef nonnull %24, ptr noundef nonnull @.str.125, i32 noundef 253) #16
  br label %__validate_creds.exit.i.i

__validate_creds.exit.i.i:                        ; preds = %if.then.i.i.i, %do.body.i.i.__validate_creds.exit.i.i_crit_edge
  %25 = getelementptr inbounds %struct.cred, ptr %24, i32 0, i32 28
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 0, ptr %25, align 4
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %24, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr nonnull %24, i32 1, i32 3, i32 1) #16
  %27 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %24, ptr nonnull %24, i32 1, ptr nonnull elementtype(i32) %24) #16, !srcloc !414
  br label %alloc_init_layout_hdr.exit.thread

alloc_init_layout_hdr.exit:                       ; preds = %if.end9
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %28 = ptrtoint ptr %layout7 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %layout7, align 8
  %cmp13 = icmp eq ptr %29, null
  br i1 %cmp13, label %alloc_init_layout_hdr.exit.if.then20_crit_edge, label %alloc_init_layout_hdr.exit.out_existing_crit_edge, !prof !413

alloc_init_layout_hdr.exit.out_existing_crit_edge: ; preds = %alloc_init_layout_hdr.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_existing

alloc_init_layout_hdr.exit.if.then20_crit_edge:   ; preds = %alloc_init_layout_hdr.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then20

alloc_init_layout_hdr.exit.thread:                ; preds = %__validate_creds.exit.i.i, %if.end.i.alloc_init_layout_hdr.exit.thread_crit_edge
  %plh_lc_cred.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call1.i.i, i32 0, i32 14
  %30 = ptrtoint ptr %plh_lc_cred.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %24, ptr %plh_lc_cred.i, align 8
  %plh_flags.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call1.i.i, i32 0, i32 8
  %31 = ptrtoint ptr %plh_flags.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %plh_flags.i, align 8
  %or.i = or i32 %32, 64
  store i32 %or.i, ptr %plh_flags.i, align 8
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %33 = ptrtoint ptr %layout7 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %layout7, align 8
  %cmp1341 = icmp eq ptr %34, null
  br i1 %cmp1341, label %alloc_init_layout_hdr.exit.thread.if.then20_crit_edge, label %if.then23, !prof !413

alloc_init_layout_hdr.exit.thread.if.then20_crit_edge: ; preds = %alloc_init_layout_hdr.exit.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then20

if.then20:                                        ; preds = %alloc_init_layout_hdr.exit.thread.if.then20_crit_edge, %alloc_init_layout_hdr.exit.if.then20_crit_edge
  %35 = ptrtoint ptr %layout7 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %call1.i.i, ptr %layout7, align 8
  br label %cleanup

if.then23:                                        ; preds = %alloc_init_layout_hdr.exit.thread
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @pnfs_free_layout_hdr(ptr noundef nonnull %call1.i.i)
  br label %out_existing

out_existing:                                     ; preds = %if.then23, %alloc_init_layout_hdr.exit.out_existing_crit_edge, %do.end6.out_existing_crit_edge
  %36 = ptrtoint ptr %layout7 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %layout7, align 8
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %37, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %37, i32 1, i32 3, i32 1) #16
  %38 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %37, ptr %37, i32 1, ptr elementtype(i32) %37) #16, !srcloc !415
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %38, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %out_existing.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !416

out_existing.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %out_existing
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %out_existing
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %39 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %39)
  %.not.i.i.i.i = icmp sgt i32 %39, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !413

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_get_layout_hdr.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %out_existing.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %out_existing.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %37, i32 noundef %.sink.i.i.i.i) #16
  br label %pnfs_get_layout_hdr.exit

pnfs_get_layout_hdr.exit:                         ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge
  %40 = ptrtoint ptr %layout7 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %layout7, align 8
  br label %cleanup

cleanup:                                          ; preds = %pnfs_get_layout_hdr.exit, %if.then20
  %retval.0 = phi ptr [ %41, %pnfs_get_layout_hdr.exit ], [ %call1.i.i, %if.then20 ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfs4_select_rw_stateid(ptr noundef, i32 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfs4_schedule_stateid_recovery(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @pnfs_alloc_init_layoutget_args(ptr noundef %ino, ptr noundef %ctx, ptr nocapture noundef readonly %stateid, ptr nocapture noundef readonly %range, i32 noundef %gfp_flags) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %ino, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %ino, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb.i.i, align 4
  %s_fs_info.i.i.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 33
  %2 = ptrtoint ptr %s_fs_info.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_fs_info.i.i.i, align 16
  br label %pnfs_find_server.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %dentry.i = getelementptr inbounds %struct.nfs_open_context, ptr %ctx, i32 0, i32 2
  %4 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dentry.i, align 4
  %call1.i = tail call ptr @dget_parent(ptr noundef %5) #16
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %call1.i, i32 0, i32 5
  %6 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %d_inode.i, align 8
  %i_sb.i5.i = getelementptr inbounds %struct.inode, ptr %7, i32 0, i32 8
  %8 = ptrtoint ptr %i_sb.i5.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %i_sb.i5.i, align 4
  %s_fs_info.i.i6.i = getelementptr inbounds %struct.super_block, ptr %9, i32 0, i32 33
  %10 = ptrtoint ptr %s_fs_info.i.i6.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %s_fs_info.i.i6.i, align 16
  tail call void @dput(ptr noundef %call1.i) #16
  br label %pnfs_find_server.exit

pnfs_find_server.exit:                            ; preds = %if.else.i, %if.then.i
  %server.0.i = phi ptr [ %3, %if.then.i ], [ %11, %if.else.i ]
  %pnfs_curr_ld = getelementptr inbounds %struct.nfs_server, ptr %server.0.i, i32 0, i32 46
  %12 = ptrtoint ptr %pnfs_curr_ld to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %pnfs_curr_ld, align 4
  %max_layoutget_response = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %13, i32 0, i32 6
  %14 = ptrtoint ptr %max_layoutget_response to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %max_layoutget_response, align 4
  %call1 = tail call i32 @max_response_pages(ptr noundef %server.0.i) #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %16 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %16, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %pnfs_find_server.exit.do.end7_crit_edge, label %do.end, !prof !413

pnfs_find_server.exit.do.end7_crit_edge:          ; preds = %pnfs_find_server.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end7

do.end:                                           ; preds = %pnfs_find_server.exit
  call void @__sanitizer_cov_trace_pc() #18
  %call5 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.151, ptr noundef nonnull @.str.152) #19
  br label %do.end7

do.end7:                                          ; preds = %do.end, %pnfs_find_server.exit.do.end7_crit_edge
  %or.i = or i32 %gfp_flags, 256
  %and.i.i.i = and i32 %gfp_flags, 4194321
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %cmp.i19.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %cmp.i19.i.i, label %do.end7.kzalloc.exit_crit_edge, label %if.end.i20.i.i, !prof !413

do.end7.kzalloc.exit_crit_edge:                   ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %kzalloc.exit

if.end.i20.i.i:                                   ; preds = %do.end7
  %and2.i.i.i = and i32 %gfp_flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i.i.i)
  %tobool3.not.i.i.i = icmp eq i32 %and2.i.i.i, 0
  br i1 %tobool3.not.i.i.i, label %if.end5.i.i.i, label %if.end.i20.i.i.kzalloc.exit_crit_edge

if.end.i20.i.i.kzalloc.exit_crit_edge:            ; preds = %if.end.i20.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %kzalloc.exit

if.end5.i.i.i:                                    ; preds = %if.end.i20.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %and6.i.i.i = and i32 %gfp_flags, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i.i.i)
  %tobool7.not.i.i.i = icmp eq i32 %and6.i.i.i, 0
  %..i.i.i = select i1 %tobool7.not.i.i.i, i32 1, i32 2
  br label %kzalloc.exit

kzalloc.exit:                                     ; preds = %if.end5.i.i.i, %if.end.i20.i.i.kzalloc.exit_crit_edge, %do.end7.kzalloc.exit_crit_edge
  %retval.0.i21.i.i = phi i32 [ 0, %do.end7.kzalloc.exit_crit_edge ], [ 3, %if.end.i20.i.i.kzalloc.exit_crit_edge ], [ %..i.i.i, %if.end5.i.i.i ]
  %arrayidx6.i.i = getelementptr [4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 %retval.0.i21.i.i, i32 8
  %17 = ptrtoint ptr %arrayidx6.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %arrayidx6.i.i, align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %18, i32 noundef %or.i, i32 noundef 200) #22
  %cmp = icmp eq ptr %call7.i.i, null
  br i1 %cmp, label %kzalloc.exit.cleanup_crit_edge, label %if.end10

kzalloc.exit.cleanup_crit_edge:                   ; preds = %kzalloc.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end10:                                         ; preds = %kzalloc.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool11.not = icmp eq i32 %15, 0
  %sub = add i32 %15, 4095
  %shr = lshr i32 %sub, 12
  %19 = tail call i32 @llvm.umin.i32(i32 %shr, i32 %call1)
  %max_pages.1 = select i1 %tobool11.not, i32 %call1, i32 %19
  %20 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %max_pages.1, i32 4) #16
  %21 = extractvalue { i32, i1 } %20, 1
  br i1 %21, label %if.end10.do.body.i_crit_edge, label %if.end7.i.i, !prof !416

if.end10.do.body.i_crit_edge:                     ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i

if.end7.i.i:                                      ; preds = %if.end10
  %22 = extractvalue { i32, i1 } %20, 0
  %call8.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %22, i32 noundef %gfp_flags) #23
  %tobool.not.i122 = icmp eq ptr %call8.i.i, null
  br i1 %tobool.not.i122, label %if.end7.i.i.do.body.i_crit_edge, label %for.cond.preheader.i

if.end7.i.i.do.body.i_crit_edge:                  ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i

for.cond.preheader.i:                             ; preds = %if.end7.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %max_pages.1)
  %cmp49.not.i = icmp eq i32 %max_pages.1, 0
  br i1 %cmp49.not.i, label %for.cond.preheader.i.nfs4_alloc_pages.exit_crit_edge, label %for.cond.preheader.i.for.body.i_crit_edge

for.cond.preheader.i.for.body.i_crit_edge:        ; preds = %for.cond.preheader.i
  br label %for.body.i

for.cond.preheader.i.nfs4_alloc_pages.exit_crit_edge: ; preds = %for.cond.preheader.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfs4_alloc_pages.exit

do.body.i:                                        ; preds = %if.end7.i.i.do.body.i_crit_edge, %if.end10.do.body.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %23 = load i32, ptr @nfs_debug, align 4
  %and.i = and i32 %23, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool1.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool1.not.i, label %do.body.i.nfs4_alloc_pages.exit.thread_crit_edge, label %do.end.i, !prof !413

do.body.i.nfs4_alloc_pages.exit.thread_crit_edge: ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfs4_alloc_pages.exit.thread

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %call6.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.153, ptr noundef nonnull @.str.154, i32 noundef %max_pages.1) #19
  br label %nfs4_alloc_pages.exit.thread

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.cond.preheader.i.for.body.i_crit_edge
  %i.050.i = phi i32 [ %inc.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %for.cond.preheader.i.for.body.i_crit_edge ]
  %call38.i.i.i.i = tail call ptr @__alloc_pages(i32 noundef %gfp_flags, i32 noundef 0, i32 noundef 0, ptr noundef null) #16
  %arrayidx.i = getelementptr ptr, ptr %call8.i.i, i32 %i.050.i
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %call38.i.i.i.i, ptr %arrayidx.i, align 4
  %tobool12.not.i = icmp eq ptr %call38.i.i.i.i, null
  br i1 %tobool12.not.i, label %do.body14.i, label %for.inc.i

do.body14.i:                                      ; preds = %for.body.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %25 = load i32, ptr @nfs_debug, align 4
  %and15.i = and i32 %25, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and15.i)
  %tobool16.not.i = icmp eq i32 %and15.i, 0
  br i1 %tobool16.not.i, label %do.body14.i.for.cond.preheader.i.i_crit_edge, label %do.end26.i, !prof !413

do.body14.i.for.cond.preheader.i.i_crit_edge:     ; preds = %do.body14.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.preheader.i.i

do.end26.i:                                       ; preds = %do.body14.i
  call void @__sanitizer_cov_trace_pc() #18
  %call28.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.156, ptr noundef nonnull @.str.154) #19
  br label %for.cond.preheader.i.i

for.cond.preheader.i.i:                           ; preds = %do.end26.i, %do.body14.i.for.cond.preheader.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.050.i)
  %cmp11.not.i.i = icmp eq i32 %i.050.i, 0
  br i1 %cmp11.not.i.i, label %for.cond.preheader.i.i.nfs4_free_pages.exit.i_crit_edge, label %for.cond.preheader.i.i.for.body.i.i_crit_edge

for.cond.preheader.i.i.for.body.i.i_crit_edge:    ; preds = %for.cond.preheader.i.i
  br label %for.body.i.i

for.cond.preheader.i.i.nfs4_free_pages.exit.i_crit_edge: ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfs4_free_pages.exit.i

for.body.i.i:                                     ; preds = %if.end3.i.i.for.body.i.i_crit_edge, %for.cond.preheader.i.i.for.body.i.i_crit_edge
  %i.012.i.i = phi i32 [ %inc.i.i, %if.end3.i.i.for.body.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr ptr, ptr %call8.i.i, i32 %i.012.i.i
  %26 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %27, null
  br i1 %tobool1.not.i.i, label %for.body.i.i.nfs4_free_pages.exit.i_crit_edge, label %if.end3.i.i

for.body.i.i.nfs4_free_pages.exit.i_crit_edge:    ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfs4_free_pages.exit.i

if.end3.i.i:                                      ; preds = %for.body.i.i
  tail call void @__free_pages(ptr noundef nonnull %27, i32 noundef 0) #16
  %inc.i.i = add nuw i32 %i.012.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %i.050.i
  br i1 %exitcond.not.i.i, label %if.end3.i.i.nfs4_free_pages.exit.i_crit_edge, label %if.end3.i.i.for.body.i.i_crit_edge

if.end3.i.i.for.body.i.i_crit_edge:               ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

if.end3.i.i.nfs4_free_pages.exit.i_crit_edge:     ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfs4_free_pages.exit.i

nfs4_free_pages.exit.i:                           ; preds = %if.end3.i.i.nfs4_free_pages.exit.i_crit_edge, %for.body.i.i.nfs4_free_pages.exit.i_crit_edge, %for.cond.preheader.i.i.nfs4_free_pages.exit.i_crit_edge
  tail call void @kfree(ptr noundef nonnull %call8.i.i) #16
  br label %nfs4_alloc_pages.exit.thread

for.inc.i:                                        ; preds = %for.body.i
  %inc.i = add nuw i32 %i.050.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %max_pages.1
  br i1 %exitcond.not.i, label %for.inc.i.nfs4_alloc_pages.exit_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.nfs4_alloc_pages.exit_crit_edge:        ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfs4_alloc_pages.exit

nfs4_alloc_pages.exit.thread:                     ; preds = %nfs4_free_pages.exit.i, %do.end.i, %do.body.i.nfs4_alloc_pages.exit.thread_crit_edge
  %layout124 = getelementptr inbounds %struct.nfs4_layoutget_args, ptr %call7.i.i, i32 0, i32 8
  %28 = ptrtoint ptr %layout124 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %layout124, align 8
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #16
  br label %cleanup

nfs4_alloc_pages.exit:                            ; preds = %for.inc.i.nfs4_alloc_pages.exit_crit_edge, %for.cond.preheader.i.nfs4_alloc_pages.exit_crit_edge
  %layout = getelementptr inbounds %struct.nfs4_layoutget_args, ptr %call7.i.i, i32 0, i32 8
  %29 = ptrtoint ptr %layout to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %call8.i.i, ptr %layout, align 8
  %mul = shl i32 %max_pages.1, 12
  %pglen = getelementptr inbounds %struct.nfs4_layoutget_args, ptr %call7.i.i, i32 0, i32 8, i32 1
  %30 = ptrtoint ptr %pglen to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %mul, ptr %pglen, align 4
  %layoutp = getelementptr inbounds %struct.nfs4_layoutget, ptr %call7.i.i, i32 0, i32 1, i32 6
  %31 = ptrtoint ptr %layoutp to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %layout, ptr %layoutp, align 8
  %status = getelementptr inbounds %struct.nfs4_layoutget, ptr %call7.i.i, i32 0, i32 1, i32 1
  %32 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 -10008, ptr %status, align 8
  %minlength = getelementptr inbounds %struct.nfs4_layoutget_args, ptr %call7.i.i, i32 0, i32 3
  %length = getelementptr inbounds %struct.pnfs_layout_range, ptr %range, i32 0, i32 2
  %33 = ptrtoint ptr %length to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %length, align 8
  %35 = tail call i64 @llvm.umin.i64(i64 %34, i64 4096)
  %36 = ptrtoint ptr %minlength to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %minlength, align 8
  br i1 %tobool.not.i, label %nfs4_alloc_pages.exit.if.end60_crit_edge, label %if.then39

nfs4_alloc_pages.exit.if.end60_crit_edge:         ; preds = %nfs4_alloc_pages.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end60

if.then39:                                        ; preds = %nfs4_alloc_pages.exit
  %call40 = tail call fastcc i64 @i_size_read(ptr noundef nonnull %ino)
  %37 = ptrtoint ptr %range to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %range, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %38)
  %cmp41 = icmp eq i32 %38, 1
  br i1 %cmp41, label %if.then42, label %if.then39.if.end60_crit_edge

if.then39.if.end60_crit_edge:                     ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end60

if.then42:                                        ; preds = %if.then39
  %offset = getelementptr inbounds %struct.pnfs_layout_range, ptr %range, i32 0, i32 1
  %39 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %offset, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %call40, i64 %40)
  %cmp43.not = icmp ugt i64 %call40, %40
  br i1 %cmp43.not, label %if.else, label %if.then42.if.end60.sink.split_crit_edge

if.then42.if.end60.sink.split_crit_edge:          ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end60.sink.split

if.else:                                          ; preds = %if.then42
  %sub48 = sub i64 %call40, %40
  %41 = ptrtoint ptr %minlength to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %minlength, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %sub48, i64 %42)
  %cmp51 = icmp ult i64 %sub48, %42
  br i1 %cmp51, label %if.else.if.end60.sink.split_crit_edge, label %if.else.if.end60_crit_edge

if.else.if.end60_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end60

if.else.if.end60.sink.split_crit_edge:            ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end60.sink.split

if.end60.sink.split:                              ; preds = %if.else.if.end60.sink.split_crit_edge, %if.then42.if.end60.sink.split_crit_edge
  %sub48.sink = phi i64 [ 0, %if.then42.if.end60.sink.split_crit_edge ], [ %sub48, %if.else.if.end60.sink.split_crit_edge ]
  %43 = ptrtoint ptr %minlength to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %sub48.sink, ptr %minlength, align 8
  br label %if.end60

if.end60:                                         ; preds = %if.end60.sink.split, %if.else.if.end60_crit_edge, %if.then39.if.end60_crit_edge, %nfs4_alloc_pages.exit.if.end60_crit_edge
  %maxcount = getelementptr inbounds %struct.nfs4_layoutget_args, ptr %call7.i.i, i32 0, i32 4
  %44 = ptrtoint ptr %maxcount to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 4096, ptr %maxcount, align 8
  %range63 = getelementptr inbounds %struct.nfs4_layoutget_args, ptr %call7.i.i, i32 0, i32 2
  %45 = call ptr @memcpy(ptr %range63, ptr %range, i32 24)
  %46 = ptrtoint ptr %pnfs_curr_ld to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %pnfs_curr_ld, align 4
  %id = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %47, i32 0, i32 1
  %48 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %id, align 4
  %type = getelementptr inbounds %struct.nfs4_layoutget_args, ptr %call7.i.i, i32 0, i32 1
  %50 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %type, align 8
  %inode = getelementptr inbounds %struct.nfs4_layoutget_args, ptr %call7.i.i, i32 0, i32 5
  %51 = ptrtoint ptr %inode to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %ino, ptr %inode, align 4
  %call67 = tail call ptr @get_nfs_open_context(ptr noundef %ctx) #16
  %ctx69 = getelementptr inbounds %struct.nfs4_layoutget_args, ptr %call7.i.i, i32 0, i32 6
  %52 = ptrtoint ptr %ctx69 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %call67, ptr %ctx69, align 8
  %stateid71 = getelementptr inbounds %struct.nfs4_layoutget_args, ptr %call7.i.i, i32 0, i32 7
  %53 = call ptr @memcpy(ptr %stateid71, ptr %stateid, i32 16)
  %type.i = getelementptr inbounds %struct.nfs4_stateid_struct, ptr %stateid, i32 0, i32 1
  %54 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %type.i, align 4
  %type2.i = getelementptr inbounds %struct.nfs4_layoutget_args, ptr %call7.i.i, i32 0, i32 7, i32 1
  %56 = ptrtoint ptr %type2.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %55, ptr %type2.i, align 4
  %gfp_flags72 = getelementptr inbounds %struct.nfs4_layoutget, ptr %call7.i.i, i32 0, i32 4
  %57 = ptrtoint ptr %gfp_flags72 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %gfp_flags, ptr %gfp_flags72, align 8
  %cred = getelementptr inbounds %struct.nfs_open_context, ptr %ctx, i32 0, i32 3
  %58 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %cred, align 4
  %cred73 = getelementptr inbounds %struct.nfs4_layoutget, ptr %call7.i.i, i32 0, i32 2
  %60 = ptrtoint ptr %cred73 to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %59, ptr %cred73, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end60, %nfs4_alloc_pages.exit.thread, %kzalloc.exit.cleanup_crit_edge
  %retval.0 = phi ptr [ %call7.i.i, %if.end60 ], [ null, %nfs4_alloc_pages.exit.thread ], [ null, %kzalloc.exit.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @nfs_layoutget_end(ptr noundef %lo) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %plh_outstanding = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %plh_outstanding, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !410
  tail call void @llvm.prefetch.p0(ptr %plh_outstanding, i32 1, i32 3, i32 1) #16
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %plh_outstanding, ptr %plh_outstanding, i32 1, ptr elementtype(i32) %plh_outstanding) #16, !srcloc !411
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %0, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !412
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @wake_up_var(ptr noundef %plh_outstanding) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @nfs4_proc_layoutget(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc zeroext i1 @nfs_error_is_fatal(i32 noundef %err) unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %0 = zext i32 %err to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.179)
  switch i32 %err, label %sw.default [
    i32 -512, label %entry.return_crit_edge
    i32 -4, label %entry.return_crit_edge1
    i32 -13, label %entry.return_crit_edge2
    i32 -122, label %entry.return_crit_edge3
    i32 -27, label %entry.return_crit_edge4
    i32 -5, label %entry.return_crit_edge5
    i32 -28, label %entry.return_crit_edge6
    i32 -30, label %entry.return_crit_edge7
    i32 -116, label %entry.return_crit_edge8
    i32 -7, label %entry.return_crit_edge9
    i32 -12, label %entry.return_crit_edge10
    i32 -110, label %entry.return_crit_edge11
  ]

entry.return_crit_edge11:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

entry.return_crit_edge10:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

entry.return_crit_edge9:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

entry.return_crit_edge8:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

entry.return_crit_edge7:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

entry.return_crit_edge6:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

entry.return_crit_edge5:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

entry.return_crit_edge4:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

entry.return_crit_edge3:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

entry.return_crit_edge2:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

entry.return_crit_edge1:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

sw.default:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

return:                                           ; preds = %sw.default, %entry.return_crit_edge, %entry.return_crit_edge1, %entry.return_crit_edge2, %entry.return_crit_edge3, %entry.return_crit_edge4, %entry.return_crit_edge5, %entry.return_crit_edge6, %entry.return_crit_edge7, %entry.return_crit_edge8, %entry.return_crit_edge9, %entry.return_crit_edge10, %entry.return_crit_edge11
  %retval.0 = phi i1 [ false, %sw.default ], [ true, %entry.return_crit_edge ], [ true, %entry.return_crit_edge1 ], [ true, %entry.return_crit_edge2 ], [ true, %entry.return_crit_edge3 ], [ true, %entry.return_crit_edge4 ], [ true, %entry.return_crit_edge5 ], [ true, %entry.return_crit_edge6 ], [ true, %entry.return_crit_edge7 ], [ true, %entry.return_crit_edge8 ], [ true, %entry.return_crit_edge9 ], [ true, %entry.return_crit_edge10 ], [ true, %entry.return_crit_edge11 ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pnfs_layout_clear_fail_bit(ptr noundef %lo, i32 noundef %fail_bit) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %plh_flags = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo, i32 0, i32 8
  %call = tail call i32 @_test_and_clear_bit(i32 noundef %fail_bit, ptr noundef %plh_flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %lo, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !422
  tail call void @llvm.prefetch.p0(ptr %lo, i32 1, i32 3, i32 1) #16
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %lo, ptr %lo, i32 1, ptr elementtype(i32) %lo) #16, !srcloc !423
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp slt i32 %asmresult.i.i.i.i.i, 2
  br i1 %cmp.i.i, label %if.then3.i.i, label %if.then.if.end_crit_edge, !prof !416

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then3.i.i:                                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @refcount_warn_saturate(ptr noundef %lo, i32 noundef 4) #16
  br label %if.end

if.end:                                           ; preds = %if.then3.i.i, %if.then.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_lgopen_prepare(ptr nocapture noundef %data, ptr noundef %ctx) local_unnamed_addr #0 align 64 {
entry:
  %rng.i23 = alloca %struct.pnfs_layout_range, align 8
  %rng.i = alloca %struct.pnfs_layout_range, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %dir = getelementptr inbounds %struct.nfs4_opendata, ptr %data, i32 0, i32 9
  %0 = ptrtoint ptr %dir to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dir, align 8
  %d_inode = getelementptr inbounds %struct.dentry, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %d_inode, align 8
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %5, i32 0, i32 33
  %6 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %s_fs_info.i.i, align 16
  %pnfs_curr_ld.i = getelementptr inbounds %struct.nfs_server, ptr %7, i32 0, i32 46
  %8 = ptrtoint ptr %pnfs_curr_ld.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pnfs_curr_ld.i, align 4
  %cmp.i.not = icmp eq ptr %9, null
  br i1 %cmp.i.not, label %entry.cleanup_crit_edge, label %land.lhs.true

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true:                                    ; preds = %entry
  %flags = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %9, i32 0, i32 4
  %10 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags, align 4
  %and = and i32 %11, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %land.lhs.true.cleanup_crit_edge, label %if.end

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true
  %caps.i = getelementptr inbounds %struct.nfs_server, ptr %7, i32 0, i32 10
  %12 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %caps.i, align 8
  %and.i = and i32 %13, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool6.not = icmp eq i32 %and.i, 0
  br i1 %tobool6.not, label %if.end.cleanup_crit_edge, label %if.end8

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %lgp = getelementptr inbounds %struct.nfs4_opendata, ptr %data, i32 0, i32 14
  %14 = ptrtoint ptr %lgp to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %lgp, align 8
  %tobool9.not = icmp eq ptr %15, null
  br i1 %tobool9.not, label %if.end11, label %if.end8.cleanup_crit_edge

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end11:                                         ; preds = %if.end8
  %state = getelementptr inbounds %struct.nfs4_opendata, ptr %data, i32 0, i32 12
  %16 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %state, align 4
  %tobool12.not = icmp eq ptr %17, null
  %dentry.i24 = getelementptr inbounds %struct.nfs4_opendata, ptr %data, i32 0, i32 10
  %18 = ptrtoint ptr %dentry.i24 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %dentry.i24, align 4
  %d_inode.i25 = getelementptr inbounds %struct.dentry, ptr %19, i32 0, i32 5
  %20 = ptrtoint ptr %d_inode.i25 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %d_inode.i25, align 8
  br i1 %tobool12.not, label %if.else, label %if.then13

if.then13:                                        ; preds = %if.end11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %rng.i) #16
  %22 = ptrtoint ptr %rng.i to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 -1, ptr %rng.i, align 8
  %fmode.i = getelementptr inbounds %struct.nfs4_opendata, ptr %data, i32 0, i32 1, i32 4
  %23 = ptrtoint ptr %fmode.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %fmode.i, align 4
  %and.i22 = and i32 %24, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i22)
  %tobool.not.i = icmp eq i32 %and.i22, 0
  %cond.i = select i1 %tobool.not.i, i32 1, i32 2
  %25 = ptrtoint ptr %rng.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %cond.i, ptr %rng.i, align 8
  %offset.i = getelementptr inbounds %struct.pnfs_layout_range, ptr %rng.i, i32 0, i32 1
  %26 = ptrtoint ptr %offset.i to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 0, ptr %offset.i, align 8
  %length.i = getelementptr inbounds %struct.pnfs_layout_range, ptr %rng.i, i32 0, i32 2
  %27 = ptrtoint ptr %length.i to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 -1, ptr %length.i, align 8
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.then13.if.end.i_crit_edge

if.then13.if.end.i_crit_edge:                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %if.then13
  %call.i = tail call fastcc i64 @i_size_read(ptr noundef %21) #16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %call.i)
  %cmp2.i = icmp eq i64 %call.i, 0
  br i1 %cmp2.i, label %land.lhs.true.i._lgopen_prepare_attached.exit_crit_edge, label %lor.lhs.false.i

land.lhs.true.i._lgopen_prepare_attached.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %_lgopen_prepare_attached.exit

lor.lhs.false.i:                                  ; preds = %land.lhs.true.i
  %i_mapping.i = getelementptr inbounds %struct.inode, ptr %21, i32 0, i32 9
  %28 = ptrtoint ptr %i_mapping.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %i_mapping.i, align 8
  %nrpages.i = getelementptr inbounds %struct.address_space, ptr %29, i32 0, i32 7
  %30 = ptrtoint ptr %nrpages.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %nrpages.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %cmp3.not.i = icmp eq i32 %31, 0
  br i1 %cmp3.not.i, label %lor.lhs.false.i.if.end.i_crit_edge, label %lor.lhs.false.i._lgopen_prepare_attached.exit_crit_edge

lor.lhs.false.i._lgopen_prepare_attached.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %_lgopen_prepare_attached.exit

lor.lhs.false.i.if.end.i_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.end.i:                                         ; preds = %lor.lhs.false.i.if.end.i_crit_edge, %if.then13.if.end.i_crit_edge
  %call4.i = tail call fastcc ptr @_pnfs_grab_empty_layout(ptr noundef %21, ptr noundef %ctx) #16
  %tobool5.not.i = icmp eq ptr %call4.i, null
  br i1 %tobool5.not.i, label %if.end.i._lgopen_prepare_attached.exit_crit_edge, label %if.end7.i

if.end.i._lgopen_prepare_attached.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %_lgopen_prepare_attached.exit

if.end7.i:                                        ; preds = %if.end.i
  %call8.i = call fastcc ptr @pnfs_alloc_init_layoutget_args(ptr noundef %21, ptr noundef %ctx, ptr noundef nonnull @current_stateid, ptr noundef nonnull %rng.i, i32 noundef 3264) #16
  %tobool9.not.i = icmp eq ptr %call8.i, null
  br i1 %tobool9.not.i, label %if.then10.i, label %if.end11.i

if.then10.i:                                      ; preds = %if.end7.i
  %plh_flags.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call4.i, i32 0, i32 8
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %plh_flags.i.i, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !419
  tail call void @llvm.prefetch.p0(ptr %plh_flags.i.i, i32 1, i32 3, i32 1) #16
  %32 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %plh_flags.i.i, ptr %plh_flags.i.i, i32 128, ptr elementtype(i32) %plh_flags.i.i) #16, !srcloc !420
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !436
  tail call void @wake_up_bit(ptr noundef %plh_flags.i.i, i32 noundef 7) #16
  %plh_outstanding.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call4.i, i32 0, i32 1
  %call.i.i.i34.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %plh_outstanding.i.i, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !410
  tail call void @llvm.prefetch.p0(ptr %plh_outstanding.i.i, i32 1, i32 3, i32 1) #16
  %33 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %plh_outstanding.i.i, ptr %plh_outstanding.i.i, i32 1, ptr elementtype(i32) %plh_outstanding.i.i) #16, !srcloc !411
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32 } %33, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !412
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i, label %if.then10.i.nfs_layoutget_end.exit.i_crit_edge

if.then10.i.nfs_layoutget_end.exit.i_crit_edge:   ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfs_layoutget_end.exit.i

if.then.i.i:                                      ; preds = %if.then10.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @wake_up_var(ptr noundef %plh_outstanding.i.i) #16
  br label %nfs_layoutget_end.exit.i

nfs_layoutget_end.exit.i:                         ; preds = %if.then.i.i, %if.then10.i.nfs_layoutget_end.exit.i_crit_edge
  tail call void @pnfs_put_layout_hdr(ptr noundef nonnull %call4.i) #16
  br label %_lgopen_prepare_attached.exit

if.end11.i:                                       ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  %lo12.i = getelementptr inbounds %struct.nfs4_layoutget, ptr %call8.i, i32 0, i32 3
  %34 = ptrtoint ptr %lo12.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %call4.i, ptr %lo12.i, align 4
  %35 = ptrtoint ptr %lgp to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %call8.i, ptr %lgp, align 8
  %lg_args.i = getelementptr inbounds %struct.nfs4_opendata, ptr %data, i32 0, i32 1, i32 18
  %36 = ptrtoint ptr %lg_args.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %call8.i, ptr %lg_args.i, align 4
  %res.i = getelementptr inbounds %struct.nfs4_layoutget, ptr %call8.i, i32 0, i32 1
  %lg_res.i = getelementptr inbounds %struct.nfs4_opendata, ptr %data, i32 0, i32 2, i32 18
  %37 = ptrtoint ptr %lg_res.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %res.i, ptr %lg_res.i, align 8
  br label %_lgopen_prepare_attached.exit

_lgopen_prepare_attached.exit:                    ; preds = %if.end11.i, %nfs_layoutget_end.exit.i, %if.end.i._lgopen_prepare_attached.exit_crit_edge, %lor.lhs.false.i._lgopen_prepare_attached.exit_crit_edge, %land.lhs.true.i._lgopen_prepare_attached.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %rng.i) #16
  br label %cleanup

if.else:                                          ; preds = %if.end11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %rng.i23) #16
  %38 = ptrtoint ptr %rng.i23 to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 -1, ptr %rng.i23, align 8
  %fmode.i26 = getelementptr inbounds %struct.nfs4_opendata, ptr %data, i32 0, i32 1, i32 4
  %39 = ptrtoint ptr %fmode.i26 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %fmode.i26, align 4
  %and.i27 = and i32 %40, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i27)
  %tobool.not.i28 = icmp eq i32 %and.i27, 0
  %cond.i29 = select i1 %tobool.not.i28, i32 1, i32 2
  %41 = ptrtoint ptr %rng.i23 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %cond.i29, ptr %rng.i23, align 8
  %offset.i30 = getelementptr inbounds %struct.pnfs_layout_range, ptr %rng.i23, i32 0, i32 1
  %42 = ptrtoint ptr %offset.i30 to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 0, ptr %offset.i30, align 8
  %length.i31 = getelementptr inbounds %struct.pnfs_layout_range, ptr %rng.i23, i32 0, i32 2
  %43 = ptrtoint ptr %length.i31 to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 -1, ptr %length.i31, align 8
  %call.i32 = call fastcc ptr @pnfs_alloc_init_layoutget_args(ptr noundef %21, ptr noundef %ctx, ptr noundef nonnull @current_stateid, ptr noundef nonnull %rng.i23, i32 noundef 3264) #16
  %tobool1.not.i = icmp eq ptr %call.i32, null
  br i1 %tobool1.not.i, label %if.else._lgopen_prepare_floating.exit_crit_edge, label %if.end.i36

if.else._lgopen_prepare_floating.exit_crit_edge:  ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %_lgopen_prepare_floating.exit

if.end.i36:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %44 = ptrtoint ptr %lgp to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %call.i32, ptr %lgp, align 8
  %lg_args.i33 = getelementptr inbounds %struct.nfs4_opendata, ptr %data, i32 0, i32 1, i32 18
  %45 = ptrtoint ptr %lg_args.i33 to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %call.i32, ptr %lg_args.i33, align 4
  %res.i34 = getelementptr inbounds %struct.nfs4_layoutget, ptr %call.i32, i32 0, i32 1
  %lg_res.i35 = getelementptr inbounds %struct.nfs4_opendata, ptr %data, i32 0, i32 2, i32 18
  %46 = ptrtoint ptr %lg_res.i35 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %res.i34, ptr %lg_res.i35, align 8
  br label %_lgopen_prepare_floating.exit

_lgopen_prepare_floating.exit:                    ; preds = %if.end.i36, %if.else._lgopen_prepare_floating.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %rng.i23) #16
  br label %cleanup

cleanup:                                          ; preds = %_lgopen_prepare_floating.exit, %_lgopen_prepare_attached.exit, %if.end8.cleanup_crit_edge, %if.end.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_parse_lgopen(ptr noundef %ino, ptr noundef %lgp, ptr nocapture noundef readonly %ctx) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %ino, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 33
  %2 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_fs_info.i.i, align 16
  %tobool.not = icmp eq ptr %lgp, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %do.body

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %4 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %4, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %do.body.do.end9_crit_edge, label %do.end, !prof !413

do.body.do.end9_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end9

do.end:                                           ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %status = getelementptr inbounds %struct.nfs4_layoutget, ptr %lgp, i32 0, i32 1, i32 1
  %5 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %status, align 8
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.82, i32 noundef %6) #19
  br label %do.end9

do.end9:                                          ; preds = %do.end, %do.body.do.end9_crit_edge
  %status11 = getelementptr inbounds %struct.nfs4_layoutget, ptr %lgp, i32 0, i32 1, i32 1
  %7 = ptrtoint ptr %status11 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %status11, align 8
  %9 = zext i32 %8 to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.180)
  switch i32 %8, label %do.end9.cleanup_crit_edge [
    i32 0, label %if.end17
    i32 -10025, label %do.end9.sw.bb_crit_edge
    i32 -10004, label %do.end9.sw.bb_crit_edge51
    i32 -10066, label %do.end9.sw.bb_crit_edge52
    i32 -10067, label %do.end9.sw.bb_crit_edge53
    i32 -10065, label %do.end9.sw.bb_crit_edge54
    i32 -10070, label %do.end9.sw.bb_crit_edge55
    i32 -10062, label %do.end9.sw.bb_crit_edge56
  ]

do.end9.sw.bb_crit_edge56:                        ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

do.end9.sw.bb_crit_edge55:                        ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

do.end9.sw.bb_crit_edge54:                        ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

do.end9.sw.bb_crit_edge53:                        ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

do.end9.sw.bb_crit_edge52:                        ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

do.end9.sw.bb_crit_edge51:                        ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

do.end9.sw.bb_crit_edge:                          ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

do.end9.cleanup_crit_edge:                        ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb:                                            ; preds = %do.end9.sw.bb_crit_edge, %do.end9.sw.bb_crit_edge51, %do.end9.sw.bb_crit_edge52, %do.end9.sw.bb_crit_edge53, %do.end9.sw.bb_crit_edge54, %do.end9.sw.bb_crit_edge55, %do.end9.sw.bb_crit_edge56
  %caps = getelementptr inbounds %struct.nfs_server, ptr %3, i32 0, i32 10
  %10 = ptrtoint ptr %caps to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %caps, align 8
  %and16 = and i32 %11, -33
  store i32 %and16, ptr %caps, align 8
  br label %cleanup

if.end17:                                         ; preds = %do.end9
  %lo18 = getelementptr inbounds %struct.nfs4_layoutget, ptr %lgp, i32 0, i32 3
  %12 = ptrtoint ptr %lo18 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %lo18, align 4
  %tobool19.not = icmp eq ptr %13, null
  br i1 %tobool19.not, label %if.then20, label %if.end17.if.end27_crit_edge

if.end17.if.end27_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end27

if.then20:                                        ; preds = %if.end17
  %call21 = tail call fastcc ptr @_pnfs_grab_empty_layout(ptr noundef %ino, ptr noundef %ctx)
  %tobool22.not = icmp eq ptr %call21, null
  br i1 %tobool22.not, label %if.then20.cleanup_crit_edge, label %if.end24

if.then20.cleanup_crit_edge:                      ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end24:                                         ; preds = %if.then20
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %lo18 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %call21, ptr %lo18, align 4
  br label %if.end27

if.end27:                                         ; preds = %if.end24, %if.end17.if.end27_crit_edge
  %lo.0 = phi ptr [ %call21, %if.end24 ], [ %13, %if.end17.if.end27_crit_edge ]
  %call28 = tail call ptr @pnfs_layout_process(ptr noundef nonnull %lgp)
  %cmp.i = icmp ugt ptr %call28, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end27.cleanup_crit_edge, label %if.then30

if.end27.cleanup_crit_edge:                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then30:                                        ; preds = %if.end27
  %range = getelementptr inbounds %struct.nfs4_layoutget_args, ptr %lgp, i32 0, i32 2
  %15 = ptrtoint ptr %range to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %range, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %16)
  %cmp.i50 = icmp eq i32 %16, 2
  %cond.i = zext i1 %cmp.i50 to i32
  %plh_flags.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %lo.0, i32 0, i32 8
  %call.i = tail call i32 @_test_and_clear_bit(i32 noundef %cond.i, ptr noundef %plh_flags.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.then30.pnfs_layout_clear_fail_bit.exit_crit_edge, label %if.then.i

if.then30.pnfs_layout_clear_fail_bit.exit_crit_edge: ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_layout_clear_fail_bit.exit

if.then.i:                                        ; preds = %if.then30
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %lo.0, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !422
  tail call void @llvm.prefetch.p0(ptr nonnull %lo.0, i32 1, i32 3, i32 1) #16
  %17 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %lo.0, ptr nonnull %lo.0, i32 1, ptr nonnull elementtype(i32) %lo.0) #16, !srcloc !423
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %17, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp slt i32 %asmresult.i.i.i.i.i.i, 2
  br i1 %cmp.i.i.i, label %if.then3.i.i.i, label %if.then.i.pnfs_layout_clear_fail_bit.exit_crit_edge, !prof !416

if.then.i.pnfs_layout_clear_fail_bit.exit_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_layout_clear_fail_bit.exit

if.then3.i.i.i:                                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @refcount_warn_saturate(ptr noundef nonnull %lo.0, i32 noundef 4) #16
  br label %pnfs_layout_clear_fail_bit.exit

pnfs_layout_clear_fail_bit.exit:                  ; preds = %if.then3.i.i.i, %if.then.i.pnfs_layout_clear_fail_bit.exit_crit_edge, %if.then30.pnfs_layout_clear_fail_bit.exit_crit_edge
  tail call void @pnfs_put_lseg(ptr noundef %call28)
  br label %cleanup

cleanup:                                          ; preds = %pnfs_layout_clear_fail_bit.exit, %if.end27.cleanup_crit_edge, %if.then20.cleanup_crit_edge, %sw.bb, %do.end9.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @_pnfs_grab_empty_layout(ptr noundef %ino, ptr nocapture noundef readonly %ctx) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %i_lock = getelementptr inbounds %struct.inode, ptr %ino, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %call = tail call fastcc ptr @pnfs_find_alloc_layout(ptr noundef %ino, ptr noundef %ctx, i32 noundef 3264)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.out_unlock_crit_edge, label %if.end

entry.out_unlock_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_unlock

if.end:                                           ; preds = %entry
  %plh_flags = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call, i32 0, i32 8
  %0 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %plh_flags, align 4
  %2 = and i32 %1, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool2.not = icmp eq i32 %2, 0
  br i1 %tobool2.not, label %if.end.out_unlock_crit_edge, label %if.end4

if.end.out_unlock_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_unlock

if.end4:                                          ; preds = %if.end
  %3 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %plh_flags, align 4
  %5 = and i32 %4, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool7.not = icmp eq i32 %5, 0
  br i1 %tobool7.not, label %if.end9, label %if.end4.out_unlock_crit_edge

if.end4.out_unlock_crit_edge:                     ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_unlock

if.end9:                                          ; preds = %if.end4
  %plh_block_lgets.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call, i32 0, i32 6
  %6 = ptrtoint ptr %plh_block_lgets.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %plh_block_lgets.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not.i = icmp eq i32 %7, 0
  br i1 %tobool.not.i, label %pnfs_layoutgets_blocked.exit, label %if.end9.out_unlock_crit_edge

if.end9.out_unlock_crit_edge:                     ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_unlock

pnfs_layoutgets_blocked.exit:                     ; preds = %if.end9
  %8 = ptrtoint ptr %plh_flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %plh_flags, align 4
  %10 = and i32 %9, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool1.i.not = icmp eq i32 %10, 0
  br i1 %tobool1.i.not, label %if.end12, label %pnfs_layoutgets_blocked.exit.out_unlock_crit_edge

pnfs_layoutgets_blocked.exit.out_unlock_crit_edge: ; preds = %pnfs_layoutgets_blocked.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_unlock

if.end12:                                         ; preds = %pnfs_layoutgets_blocked.exit
  %call14 = tail call i32 @_test_and_set_bit(i32 noundef 7, ptr noundef %plh_flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call14)
  %tobool15.not = icmp eq i32 %call14, 0
  br i1 %tobool15.not, label %if.end17, label %if.end12.out_unlock_crit_edge

if.end12.out_unlock_crit_edge:                    ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_unlock

if.end17:                                         ; preds = %if.end12
  %plh_outstanding.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call, i32 0, i32 1
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %plh_outstanding.i, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %plh_outstanding.i, i32 1, i32 3, i32 1) #16
  %11 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %plh_outstanding.i, ptr %plh_outstanding.i, i32 1, ptr elementtype(i32) %plh_outstanding.i) #16, !srcloc !414
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %ino, i32 0, i32 8
  %12 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %13, i32 0, i32 33
  %14 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %s_fs_info.i.i, align 16
  %call.i = tail call i32 @_test_and_set_bit(i32 noundef 9, ptr noundef %plh_flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i36 = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i36, label %if.then.i, label %if.end17.cleanup_crit_edge

if.end17.cleanup_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then.i:                                        ; preds = %if.end17
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %15, align 8
  %cl_lock.i = getelementptr inbounds %struct.nfs_client, ptr %17, i32 0, i32 23
  tail call void @_raw_spin_lock(ptr noundef %cl_lock.i) #16
  %plh_layouts.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call, i32 0, i32 2
  %layouts.i = getelementptr inbounds %struct.nfs_server, ptr %15, i32 0, i32 53
  %prev.i.i = getelementptr inbounds %struct.nfs_server, ptr %15, i32 0, i32 53, i32 1
  %18 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %prev.i.i, align 4
  %call.i.i.i37 = tail call zeroext i1 @__list_add_valid(ptr noundef %plh_layouts.i, ptr noundef %19, ptr noundef %layouts.i) #16
  br i1 %call.i.i.i37, label %if.end.i.i.i, label %if.then.i.list_add_tail_rcu.exit.i_crit_edge

if.then.i.list_add_tail_rcu.exit.i_crit_edge:     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add_tail_rcu.exit.i

if.end.i.i.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %plh_layouts.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %layouts.i, ptr %plh_layouts.i, align 4
  %prev2.i.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %call, i32 0, i32 2, i32 1
  %21 = ptrtoint ptr %prev2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %19, ptr %prev2.i.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !437
  %22 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %22)
  store volatile ptr %plh_layouts.i, ptr %19, align 4
  %23 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %plh_layouts.i, ptr %prev.i.i, align 4
  br label %list_add_tail_rcu.exit.i

list_add_tail_rcu.exit.i:                         ; preds = %if.end.i.i.i, %if.then.i.list_add_tail_rcu.exit.i_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %cl_lock.i) #16
  br label %cleanup

out_unlock:                                       ; preds = %if.end12.out_unlock_crit_edge, %pnfs_layoutgets_blocked.exit.out_unlock_crit_edge, %if.end9.out_unlock_crit_edge, %if.end4.out_unlock_crit_edge, %if.end.out_unlock_crit_edge, %entry.out_unlock_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  tail call void @pnfs_put_layout_hdr(ptr noundef %call)
  br label %cleanup

cleanup:                                          ; preds = %out_unlock, %list_add_tail_rcu.exit.i, %if.end17.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %out_unlock ], [ %call, %if.end17.cleanup_crit_edge ], [ %call, %list_add_tail_rcu.exit.i ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @pnfs_layout_process(ptr noundef %lgp) local_unnamed_addr #0 align 64 {
entry:
  %free_me = alloca %struct.list_head, align 4
  %range79 = alloca %struct.pnfs_layout_range, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %lo1 = getelementptr inbounds %struct.nfs4_layoutget, ptr %lgp, i32 0, i32 3
  %0 = ptrtoint ptr %lo1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %lo1, align 4
  %plh_inode = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 15
  %2 = ptrtoint ptr %plh_inode to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %plh_inode, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %free_me) #16
  %4 = getelementptr inbounds %struct.list_head, ptr %free_me, i32 0, i32 1
  %5 = ptrtoint ptr %free_me to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %free_me, ptr %free_me, align 4
  %6 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %free_me, ptr %4, align 4
  %range = getelementptr inbounds %struct.nfs4_layoutget, ptr %lgp, i32 0, i32 1, i32 3
  %7 = ptrtoint ptr %range to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %range, align 8
  %.off.i = add i32 %8, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off.i)
  %switch.i = icmp ult i32 %.off.i, 2
  br i1 %switch.i, label %sw.epilog.i, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.epilog.i:                                      ; preds = %entry
  %offset.i = getelementptr inbounds %struct.nfs4_layoutget, ptr %lgp, i32 0, i32 1, i32 3, i32 1
  %9 = ptrtoint ptr %offset.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %offset.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %10)
  %cmp.i = icmp eq i64 %10, -1
  br i1 %cmp.i, label %sw.epilog.i.cleanup_crit_edge, label %if.end.i

sw.epilog.i.cleanup_crit_edge:                    ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %sw.epilog.i
  %length.i = getelementptr inbounds %struct.nfs4_layoutget, ptr %lgp, i32 0, i32 1, i32 3, i32 2
  %11 = ptrtoint ptr %length.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %length.i, align 8
  call void @__sanitizer_cov_trace_switch(i64 %12, ptr @__sancov_gen_cov_switch_values.181)
  switch i64 %12, label %land.lhs.true.i [
    i64 0, label %if.end.i.cleanup_crit_edge
    i64 -1, label %if.end.i.if.end_crit_edge
  ]

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.lhs.true.i:                                  ; preds = %if.end.i
  %sub.i = xor i64 %10, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %12, i64 %sub.i)
  %cmp8.i = icmp ugt i64 %12, %sub.i
  br i1 %cmp8.i, label %land.lhs.true.i.cleanup_crit_edge, label %land.lhs.true.i.if.end_crit_edge

land.lhs.true.i.if.end_crit_edge:                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true.i.if.end_crit_edge, %if.end.i.if.end_crit_edge
  %res2 = getelementptr inbounds %struct.nfs4_layoutget, ptr %lgp, i32 0, i32 1
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 8
  %13 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %14, i32 0, i32 33
  %15 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %s_fs_info.i.i, align 16
  %pnfs_curr_ld = getelementptr inbounds %struct.nfs_server, ptr %16, i32 0, i32 46
  %17 = ptrtoint ptr %pnfs_curr_ld to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %pnfs_curr_ld, align 4
  %alloc_lseg = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %18, i32 0, i32 11
  %19 = ptrtoint ptr %alloc_lseg to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %alloc_lseg, align 4
  %gfp_flags = getelementptr inbounds %struct.nfs4_layoutget, ptr %lgp, i32 0, i32 4
  %21 = ptrtoint ptr %gfp_flags to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %gfp_flags, align 8
  %call5 = call ptr %20(ptr noundef %1, ptr noundef %res2, i32 noundef %22) #16
  %tobool.not.i = icmp eq ptr %call5, null
  %cmp.i140 = icmp ugt ptr %call5, inttoptr (i32 -4096 to ptr)
  %spec.select.i = or i1 %tobool.not.i, %cmp.i140
  br i1 %spec.select.i, label %if.then7, label %if.end21

if.then7:                                         ; preds = %if.end
  %spec.select = select i1 %tobool.not.i, ptr inttoptr (i32 -12 to ptr), ptr %call5
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %23 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %23, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool11.not = icmp eq i32 %and, 0
  br i1 %tobool11.not, label %if.then7.cleanup_crit_edge, label %do.end, !prof !413

if.then7.cleanup_crit_edge:                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end:                                           ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #18
  %24 = ptrtoint ptr %spec.select to i32
  %call17 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.83, ptr noundef nonnull @.str.84, i32 noundef %24) #19
  br label %cleanup

if.end21:                                         ; preds = %if.end
  %stateid = getelementptr inbounds %struct.nfs4_layoutget, ptr %lgp, i32 0, i32 1, i32 5
  %25 = ptrtoint ptr %call5 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %call5, ptr %call5, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %call5, i32 0, i32 1
  %26 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %call5, ptr %prev.i.i, align 4
  %pls_lc_list.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %call5, i32 0, i32 1
  %27 = ptrtoint ptr %pls_lc_list.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %pls_lc_list.i, ptr %pls_lc_list.i, align 4
  %prev.i8.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %call5, i32 0, i32 1, i32 1
  %28 = ptrtoint ptr %prev.i8.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %pls_lc_list.i, ptr %prev.i8.i, align 4
  %pls_commits.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %call5, i32 0, i32 2
  %29 = ptrtoint ptr %pls_commits.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile ptr %pls_commits.i, ptr %pls_commits.i, align 4
  %prev.i9.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %call5, i32 0, i32 2, i32 1
  %30 = ptrtoint ptr %prev.i9.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %pls_commits.i, ptr %prev.i9.i, align 4
  %pls_refcount.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %call5, i32 0, i32 4
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %pls_refcount.i, i32 noundef 4) #16
  %31 = ptrtoint ptr %pls_refcount.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile i32 1, ptr %pls_refcount.i, align 4
  %pls_flags.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %call5, i32 0, i32 6
  call void @_set_bit(i32 noundef 0, ptr noundef %pls_flags.i) #16
  %pls_layout.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %call5, i32 0, i32 7
  %32 = ptrtoint ptr %pls_layout.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %1, ptr %pls_layout.i, align 4
  %pls_range.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %call5, i32 0, i32 3
  %33 = call ptr @memcpy(ptr %pls_range.i, ptr %range, i32 24)
  %34 = ptrtoint ptr %stateid to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %stateid, align 4
  %pls_seq.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %call5, i32 0, i32 5
  %36 = ptrtoint ptr %pls_seq.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %pls_seq.i, align 4
  %i_lock = getelementptr inbounds %struct.inode, ptr %3, i32 0, i32 18
  call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %plh_block_lgets.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 6
  %37 = ptrtoint ptr %plh_block_lgets.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %plh_block_lgets.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool.not.i141 = icmp eq i32 %38, 0
  br i1 %tobool.not.i141, label %pnfs_layoutgets_blocked.exit, label %if.end21.do.body25_crit_edge

if.end21.do.body25_crit_edge:                     ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body25

pnfs_layoutgets_blocked.exit:                     ; preds = %if.end21
  %plh_flags.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 8
  %39 = ptrtoint ptr %plh_flags.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %plh_flags.i, align 4
  %41 = and i32 %40, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %41)
  %tobool1.i.not = icmp eq i32 %41, 0
  br i1 %tobool1.i.not, label %if.end43, label %pnfs_layoutgets_blocked.exit.do.body25_crit_edge

pnfs_layoutgets_blocked.exit.do.body25_crit_edge: ; preds = %pnfs_layoutgets_blocked.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body25

do.body25:                                        ; preds = %pnfs_layoutgets_blocked.exit.do.body25_crit_edge, %if.end21.do.body25_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %42 = load i32, ptr @nfs_debug, align 4
  %and26 = and i32 %42, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and26)
  %tobool27.not = icmp eq i32 %and26, 0
  br i1 %tobool27.not, label %do.body25.out_forget_crit_edge, label %do.end37, !prof !413

do.body25.out_forget_crit_edge:                   ; preds = %do.body25
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_forget

do.end37:                                         ; preds = %do.body25
  call void @__sanitizer_cov_trace_pc() #18
  %call39 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.86, ptr noundef nonnull @.str.84) #19
  br label %out_forget

if.end43:                                         ; preds = %pnfs_layoutgets_blocked.exit
  %43 = ptrtoint ptr %plh_flags.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %plh_flags.i, align 4
  %45 = and i32 %44, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %cmp.i143 = icmp eq i32 %45, 0
  br i1 %cmp.i143, label %if.end43.if.end47_crit_edge, label %land.lhs.true

if.end43.if.end47_crit_edge:                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end47

land.lhs.true:                                    ; preds = %if.end43
  %46 = ptrtoint ptr %plh_flags.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load volatile i32, ptr %plh_flags.i, align 4
  %48 = and i32 %47, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %48)
  %tobool.i.not = icmp eq i32 %48, 0
  br i1 %tobool.i.not, label %land.lhs.true.out_forget_crit_edge, label %land.lhs.true.if.end47_crit_edge

land.lhs.true.if.end47_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end47

land.lhs.true.out_forget_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_forget

if.end47:                                         ; preds = %land.lhs.true.if.end47_crit_edge, %if.end43.if.end47_crit_edge
  %other.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 9, i32 0, i32 0, i32 1
  %other1.i = getelementptr inbounds %struct.nfs4_layoutget, ptr %lgp, i32 0, i32 1, i32 5, i32 0, i32 0, i32 1
  %bcmp.i = call i32 @bcmp(ptr noundef dereferenceable(12) %other.i, ptr noundef dereferenceable(12) %other1.i, i32 12) #20
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i)
  %cmp.i145 = icmp eq i32 %bcmp.i, 0
  br i1 %cmp.i145, label %if.then50, label %if.else

if.then50:                                        ; preds = %if.end47
  %plh_barrier.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 10
  %49 = ptrtoint ptr %plh_barrier.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %plh_barrier.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %tobool.not.i146 = icmp eq i32 %50, 0
  br i1 %tobool.not.i146, label %if.then50.if.then.i_crit_edge, label %pnfs_layout_stateid_blocked.exit

if.then50.if.then.i_crit_edge:                    ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i

pnfs_layout_stateid_blocked.exit:                 ; preds = %if.then50
  %51 = ptrtoint ptr %stateid to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %stateid, align 4
  %sub.i.i = sub i32 %50, %52
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp sgt i32 %sub.i.i, 0
  br i1 %cmp.i.i, label %if.then53, label %pnfs_layout_stateid_blocked.exit.if.then.i_crit_edge

pnfs_layout_stateid_blocked.exit.if.then.i_crit_edge: ; preds = %pnfs_layout_stateid_blocked.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i

if.then53:                                        ; preds = %pnfs_layout_stateid_blocked.exit
  %53 = ptrtoint ptr %plh_flags.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %plh_flags.i, align 4
  %55 = and i32 %54, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %55)
  %cmp.i148 = icmp eq i32 %55, 0
  br i1 %cmp.i148, label %if.then53.do.body57_crit_edge, label %if.then55

if.then53.do.body57_crit_edge:                    ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body57

if.then55:                                        ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #18
  %56 = ptrtoint ptr %plh_barrier.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 0, ptr %plh_barrier.i, align 8
  br label %do.body57

do.body57:                                        ; preds = %if.then55, %if.then53.do.body57_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %57 = load i32, ptr @nfs_debug, align 4
  %and58 = and i32 %57, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and58)
  %tobool59.not = icmp eq i32 %and58, 0
  br i1 %tobool59.not, label %do.body57.out_forget_crit_edge, label %do.end69, !prof !413

do.body57.out_forget_crit_edge:                   ; preds = %do.body57
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_forget

do.end69:                                         ; preds = %do.body57
  call void @__sanitizer_cov_trace_pc() #18
  %call71 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.89, ptr noundef nonnull @.str.84) #19
  br label %out_forget

if.else:                                          ; preds = %if.end47
  %58 = ptrtoint ptr %plh_flags.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile i32, ptr %plh_flags.i, align 4
  %60 = and i32 %59, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %cmp.i150 = icmp eq i32 %60, 0
  br i1 %cmp.i150, label %if.then78, label %if.else.if.then.i_crit_edge

if.else.if.then.i_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i

if.then78:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %range79) #16
  %61 = call ptr @memcpy(ptr %range79, ptr @__const.pnfs_layout_process.range, i32 24)
  %call80 = call i32 @pnfs_mark_matching_lsegs_return(ptr noundef %1, ptr noundef nonnull %free_me, ptr noundef nonnull %range79, i32 noundef 0)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %range79) #16
  br label %out_forget

if.then.i:                                        ; preds = %if.else.if.then.i_crit_edge, %pnfs_layout_stateid_blocked.exit.if.then.i_crit_edge, %if.then50.if.then.i_crit_edge
  %62 = xor i1 %cmp.i145, true
  %cred = getelementptr inbounds %struct.nfs4_layoutget, ptr %lgp, i32 0, i32 2
  %63 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %cred, align 8
  call void @pnfs_set_layout_stateid(ptr noundef %1, ptr noundef %stateid, ptr noundef %64, i1 noundef zeroext %62)
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %pls_refcount.i, i32 noundef 4) #16
  call void @llvm.prefetch.p0(ptr %pls_refcount.i, i32 1, i32 3, i32 1) #16
  %65 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %pls_refcount.i, ptr %pls_refcount.i, i32 1, ptr elementtype(i32) %pls_refcount.i) #16, !srcloc !415
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %65, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !416

if.then.i.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %66 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %66)
  %.not.i.i.i.i = icmp sgt i32 %66, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.pnfs_get_lseg.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !413

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.pnfs_get_lseg.exit_crit_edge:     ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_get_lseg.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %pls_refcount.i, i32 noundef %.sink.i.i.i.i) #16
  br label %pnfs_get_lseg.exit

pnfs_get_lseg.exit:                               ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.pnfs_get_lseg.exit_crit_edge
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !435
  %67 = ptrtoint ptr %plh_inode to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %plh_inode, align 4
  %i_sb.i.i = getelementptr inbounds %struct.inode, ptr %68, i32 0, i32 8
  %69 = ptrtoint ptr %i_sb.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %i_sb.i.i, align 4
  %s_fs_info.i.i.i = getelementptr inbounds %struct.super_block, ptr %70, i32 0, i32 33
  %71 = ptrtoint ptr %s_fs_info.i.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %s_fs_info.i.i.i, align 16
  %pnfs_curr_ld.i = getelementptr inbounds %struct.nfs_server, ptr %72, i32 0, i32 46
  %73 = ptrtoint ptr %pnfs_curr_ld.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %pnfs_curr_ld.i, align 4
  %add_lseg.i = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %74, i32 0, i32 13
  %75 = ptrtoint ptr %add_lseg.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %add_lseg.i, align 4
  %cmp.not.i = icmp eq ptr %76, null
  br i1 %cmp.not.i, label %if.else.i, label %if.then.i154

if.then.i154:                                     ; preds = %pnfs_get_lseg.exit
  call void @__sanitizer_cov_trace_pc() #18
  call void %76(ptr noundef %1, ptr noundef nonnull %call5, ptr noundef nonnull %free_me) #16
  br label %pnfs_layout_insert_lseg.exit

if.else.i:                                        ; preds = %pnfs_get_lseg.exit
  call void @__sanitizer_cov_trace_pc() #18
  call void @pnfs_generic_layout_insert_lseg(ptr noundef %1, ptr noundef nonnull %call5, ptr noundef nonnull @pnfs_lseg_range_is_after, ptr noundef nonnull @pnfs_lseg_no_merge, ptr noundef nonnull %free_me) #16
  br label %pnfs_layout_insert_lseg.exit

pnfs_layout_insert_lseg.exit:                     ; preds = %if.else.i, %if.then.i154
  %return_on_close = getelementptr inbounds %struct.nfs4_layoutget, ptr %lgp, i32 0, i32 1, i32 2
  %77 = ptrtoint ptr %return_on_close to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %return_on_close, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %78)
  %tobool87.not = icmp eq i32 %78, 0
  br i1 %tobool87.not, label %pnfs_layout_insert_lseg.exit.if.end89_crit_edge, label %if.then88

pnfs_layout_insert_lseg.exit.if.end89_crit_edge:  ; preds = %pnfs_layout_insert_lseg.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end89

if.then88:                                        ; preds = %pnfs_layout_insert_lseg.exit
  call void @__sanitizer_cov_trace_pc() #18
  call void @_set_bit(i32 noundef 1, ptr noundef %pls_flags.i) #16
  br label %if.end89

if.end89:                                         ; preds = %if.then88, %pnfs_layout_insert_lseg.exit.if.end89_crit_edge
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  %79 = ptrtoint ptr %free_me to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load volatile ptr, ptr %free_me, align 4
  %cmp.i.not.i = icmp eq ptr %80, %free_me
  br i1 %cmp.i.not.i, label %if.end89.cleanup_crit_edge, label %if.end89.for.body.i_crit_edge

if.end89.for.body.i_crit_edge:                    ; preds = %if.end89
  br label %for.body.i

if.end89.cleanup_crit_edge:                       ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body.i:                                       ; preds = %pnfs_free_lseg.exit.i.for.body.i_crit_edge, %if.end89.for.body.i_crit_edge
  %lseg.021.i = phi ptr [ %tmp.0.i, %pnfs_free_lseg.exit.i.for.body.i_crit_edge ], [ %80, %if.end89.for.body.i_crit_edge ]
  %81 = ptrtoint ptr %lseg.021.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %tmp.0.i = load ptr, ptr %lseg.021.i, align 8
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %lseg.021.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %for.body.i.list_del.exit.i_crit_edge

for.body.i.list_del.exit.i_crit_edge:             ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %lseg.021.i, i32 0, i32 1
  %82 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %prev.i.i.i, align 4
  %84 = ptrtoint ptr %lseg.021.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %lseg.021.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %85, i32 0, i32 1
  %86 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %86)
  store ptr %83, ptr %prev1.i.i.i.i, align 4
  %87 = ptrtoint ptr %83 to i32
  call void @__asan_store4_noabort(i32 %87)
  store volatile ptr %85, ptr %83, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %for.body.i.list_del.exit.i_crit_edge
  %88 = ptrtoint ptr %lseg.021.i to i32
  call void @__asan_store4_noabort(i32 %88)
  store ptr inttoptr (i32 256 to ptr), ptr %lseg.021.i, align 4
  %prev.i.i156 = getelementptr inbounds %struct.list_head, ptr %lseg.021.i, i32 0, i32 1
  %89 = ptrtoint ptr %prev.i.i156 to i32
  call void @__asan_store4_noabort(i32 %89)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i156, align 4
  %cmp.not.i.i = icmp eq ptr %lseg.021.i, null
  br i1 %cmp.not.i.i, label %list_del.exit.i.pnfs_free_lseg.exit.i_crit_edge, label %if.then.i.i

list_del.exit.i.pnfs_free_lseg.exit.i_crit_edge:  ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg.exit.i

if.then.i.i:                                      ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %pls_layout.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.021.i, i32 0, i32 7
  %90 = ptrtoint ptr %pls_layout.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %pls_layout.i.i, align 4
  %plh_inode.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %91, i32 0, i32 15
  %92 = ptrtoint ptr %plh_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %plh_inode.i.i, align 4
  %i_sb.i.i.i = getelementptr inbounds %struct.inode, ptr %93, i32 0, i32 8
  %94 = ptrtoint ptr %i_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %i_sb.i.i.i, align 4
  %s_fs_info.i.i.i.i = getelementptr inbounds %struct.super_block, ptr %95, i32 0, i32 33
  %96 = ptrtoint ptr %s_fs_info.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %s_fs_info.i.i.i.i, align 16
  %pnfs_curr_ld.i.i = getelementptr inbounds %struct.nfs_server, ptr %97, i32 0, i32 46
  %98 = ptrtoint ptr %pnfs_curr_ld.i.i to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %pnfs_curr_ld.i.i, align 4
  %free_lseg.i.i = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %99, i32 0, i32 12
  %100 = ptrtoint ptr %free_lseg.i.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %free_lseg.i.i, align 4
  call void %101(ptr noundef nonnull %lseg.021.i) #16
  br label %pnfs_free_lseg.exit.i

pnfs_free_lseg.exit.i:                            ; preds = %if.then.i.i, %list_del.exit.i.pnfs_free_lseg.exit.i_crit_edge
  %cmp.not.i157 = icmp eq ptr %tmp.0.i, %free_me
  br i1 %cmp.not.i157, label %pnfs_free_lseg.exit.i.cleanup_crit_edge, label %pnfs_free_lseg.exit.i.for.body.i_crit_edge

pnfs_free_lseg.exit.i.for.body.i_crit_edge:       ; preds = %pnfs_free_lseg.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

pnfs_free_lseg.exit.i.cleanup_crit_edge:          ; preds = %pnfs_free_lseg.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

out_forget:                                       ; preds = %if.then78, %do.end69, %do.body57.out_forget_crit_edge, %land.lhs.true.out_forget_crit_edge, %do.end37, %do.body25.out_forget_crit_edge
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  %102 = ptrtoint ptr %pls_layout.i to i32
  call void @__asan_store4_noabort(i32 %102)
  store ptr %1, ptr %pls_layout.i, align 4
  %103 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i159 = getelementptr inbounds %struct.super_block, ptr %104, i32 0, i32 33
  %105 = ptrtoint ptr %s_fs_info.i.i159 to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %s_fs_info.i.i159, align 16
  %pnfs_curr_ld93 = getelementptr inbounds %struct.nfs_server, ptr %106, i32 0, i32 46
  %107 = ptrtoint ptr %pnfs_curr_ld93 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %pnfs_curr_ld93, align 4
  %free_lseg = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %108, i32 0, i32 12
  %109 = ptrtoint ptr %free_lseg to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %free_lseg, align 4
  call void %110(ptr noundef nonnull %call5) #16
  br label %cleanup

cleanup:                                          ; preds = %out_forget, %pnfs_free_lseg.exit.i.cleanup_crit_edge, %if.end89.cleanup_crit_edge, %do.end, %if.then7.cleanup_crit_edge, %land.lhs.true.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %sw.epilog.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ inttoptr (i32 -11 to ptr), %out_forget ], [ %spec.select, %do.end ], [ %spec.select, %if.then7.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %entry.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %sw.epilog.i.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end.i.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %land.lhs.true.i.cleanup_crit_edge ], [ %call5, %if.end89.cleanup_crit_edge ], [ %call5, %pnfs_free_lseg.exit.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %free_me) #16
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @nfs4_lgopen_release(ptr noundef %lgp) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %cmp.not = icmp eq ptr %lgp, null
  br i1 %cmp.not, label %entry.if.end4_crit_edge, label %if.then

entry.if.end4_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.then:                                          ; preds = %entry
  %lo = getelementptr inbounds %struct.nfs4_layoutget, ptr %lgp, i32 0, i32 3
  %0 = ptrtoint ptr %lo to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %lo, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.then.if.end_crit_edge, label %if.then1

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then1:                                         ; preds = %if.then
  %plh_flags.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 8
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %plh_flags.i, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !419
  tail call void @llvm.prefetch.p0(ptr %plh_flags.i, i32 1, i32 3, i32 1) #16
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %plh_flags.i, ptr %plh_flags.i, i32 128, ptr elementtype(i32) %plh_flags.i) #16, !srcloc !420
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !436
  tail call void @wake_up_bit(ptr noundef %plh_flags.i, i32 noundef 7) #16
  %3 = ptrtoint ptr %lo to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %lo, align 4
  %plh_outstanding.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %4, i32 0, i32 1
  %call.i.i.i9 = tail call zeroext i1 @__kasan_check_write(ptr noundef %plh_outstanding.i, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !410
  tail call void @llvm.prefetch.p0(ptr %plh_outstanding.i, i32 1, i32 3, i32 1) #16
  %5 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %plh_outstanding.i, ptr %plh_outstanding.i, i32 1, ptr elementtype(i32) %plh_outstanding.i) #16, !srcloc !411
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %5, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !412
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then.i, label %if.then1.if.end_crit_edge

if.then1.if.end_crit_edge:                        ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then.i:                                        ; preds = %if.then1
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @wake_up_var(ptr noundef %plh_outstanding.i) #16
  br label %if.end

if.end:                                           ; preds = %if.then.i, %if.then1.if.end_crit_edge, %if.then.if.end_crit_edge
  %layout.i = getelementptr inbounds %struct.nfs4_layoutget_args, ptr %lgp, i32 0, i32 8
  %pglen.i = getelementptr inbounds %struct.nfs4_layoutget_args, ptr %lgp, i32 0, i32 8, i32 1
  %6 = ptrtoint ptr %pglen.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pglen.i, align 4
  %div8.i = lshr i32 %7, 12
  %8 = ptrtoint ptr %layout.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %layout.i, align 8
  %tobool.not.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i, label %if.end.pnfs_layoutget_free.exit_crit_edge, label %for.cond.preheader.i.i

if.end.pnfs_layoutget_free.exit_crit_edge:        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_layoutget_free.exit

for.cond.preheader.i.i:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %7)
  %cmp11.not.i.i = icmp ult i32 %7, 4096
  br i1 %cmp11.not.i.i, label %for.cond.preheader.i.i.for.end.i.i_crit_edge, label %for.cond.preheader.i.i.for.body.i.i_crit_edge

for.cond.preheader.i.i.for.body.i.i_crit_edge:    ; preds = %for.cond.preheader.i.i
  br label %for.body.i.i

for.cond.preheader.i.i.for.end.i.i_crit_edge:     ; preds = %for.cond.preheader.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i.i

for.body.i.i:                                     ; preds = %if.end3.i.i.for.body.i.i_crit_edge, %for.cond.preheader.i.i.for.body.i.i_crit_edge
  %i.012.i.i = phi i32 [ %inc.i.i, %if.end3.i.i.for.body.i.i_crit_edge ], [ 0, %for.cond.preheader.i.i.for.body.i.i_crit_edge ]
  %arrayidx.i.i = getelementptr ptr, ptr %9, i32 %i.012.i.i
  %10 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %11, null
  br i1 %tobool1.not.i.i, label %for.body.i.i.for.end.i.i_crit_edge, label %if.end3.i.i

for.body.i.i.for.end.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i.i

if.end3.i.i:                                      ; preds = %for.body.i.i
  tail call void @__free_pages(ptr noundef nonnull %11, i32 noundef 0) #16
  %inc.i.i = add nuw nsw i32 %i.012.i.i, 1
  %exitcond.not.i.i = icmp eq i32 %inc.i.i, %div8.i
  br i1 %exitcond.not.i.i, label %if.end3.i.i.for.end.i.i_crit_edge, label %if.end3.i.i.for.body.i.i_crit_edge

if.end3.i.i.for.body.i.i_crit_edge:               ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

if.end3.i.i.for.end.i.i_crit_edge:                ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i.i

for.end.i.i:                                      ; preds = %if.end3.i.i.for.end.i.i_crit_edge, %for.body.i.i.for.end.i.i_crit_edge, %for.cond.preheader.i.i.for.end.i.i_crit_edge
  tail call void @kfree(ptr noundef nonnull %9) #16
  br label %pnfs_layoutget_free.exit

pnfs_layoutget_free.exit:                         ; preds = %for.end.i.i, %if.end.pnfs_layoutget_free.exit_crit_edge
  %12 = ptrtoint ptr %lo to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %lo, align 4
  tail call void @pnfs_put_layout_hdr(ptr noundef %13) #16
  %ctx.i = getelementptr inbounds %struct.nfs4_layoutget_args, ptr %lgp, i32 0, i32 6
  %14 = ptrtoint ptr %ctx.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ctx.i, align 8
  tail call void @put_nfs_open_context(ptr noundef %15) #16
  tail call void @kfree(ptr noundef nonnull %lgp) #16
  br label %if.end4

if.end4:                                          ; preds = %pnfs_layoutget_free.exit, %entry.if.end4_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_error_mark_layout_for_return(ptr noundef %inode, ptr nocapture noundef readonly %lseg) #0 align 64 {
entry:
  %range = alloca %struct.pnfs_layout_range, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %range) #16
  %0 = ptrtoint ptr %range to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %range, align 8
  %pls_range = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 3
  %1 = ptrtoint ptr %pls_range to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %pls_range, align 8
  store i32 %2, ptr %range, align 8
  %offset = getelementptr inbounds %struct.pnfs_layout_range, ptr %range, i32 0, i32 1
  %3 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %3)
  store i64 0, ptr %offset, align 8
  %length = getelementptr inbounds %struct.pnfs_layout_range, ptr %range, i32 0, i32 2
  %4 = ptrtoint ptr %length to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 -1, ptr %length, align 8
  call fastcc void @pnfs_mark_layout_for_return(ptr noundef %inode, ptr noundef nonnull %range)
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %range) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pnfs_mark_layout_for_return(ptr noundef %inode, ptr noundef %range) unnamed_addr #0 align 64 {
entry:
  %cred = alloca ptr, align 4
  %stateid = alloca %struct.nfs4_stateid_struct, align 4
  %iomode5 = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %i_lock = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %layout = getelementptr i8, ptr %inode, i32 -32
  %0 = ptrtoint ptr %layout to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %layout, align 8
  %plh_flags.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %plh_flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %plh_flags.i, align 4
  %4 = and i32 %3, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp.i = icmp eq i32 %4, 0
  br i1 %cmp.i, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = ptrtoint ptr %range to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %range, align 8
  %plh_return_iomode.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 12
  %7 = ptrtoint ptr %plh_return_iomode.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %plh_return_iomode.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp.not.i = icmp eq i32 %8, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %6)
  %cmp2.not.i = icmp eq i32 %8, %6
  %9 = or i1 %cmp.not.i, %cmp2.not.i
  %iomode.addr.0.i = select i1 %9, i32 %6, i32 3
  %10 = ptrtoint ptr %plh_return_iomode.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %iomode.addr.0.i, ptr %plh_return_iomode.i, align 8
  tail call void @_set_bit(i32 noundef 5, ptr noundef %plh_flags.i) #16
  %plh_stateid.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 9
  %11 = ptrtoint ptr %plh_stateid.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %plh_stateid.i, align 4
  %plh_return_seq.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 11
  %13 = ptrtoint ptr %plh_return_seq.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %plh_return_seq.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool.not.i = icmp eq i32 %14, 0
  %sub.i.i = sub i32 %12, %14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i)
  %cmp.i.i = icmp sgt i32 %sub.i.i, 0
  %or.cond.i = select i1 %tobool.not.i, i1 true, i1 %cmp.i.i
  br i1 %or.cond.i, label %if.then8.i, label %if.end.if.end10.i_crit_edge

if.end.if.end10.i_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10.i

if.then8.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %15 = ptrtoint ptr %plh_return_seq.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %12, ptr %plh_return_seq.i, align 4
  br label %if.end10.i

if.end10.i:                                       ; preds = %if.then8.i, %if.end.if.end10.i_crit_edge
  %plh_barrier.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 10
  %16 = ptrtoint ptr %plh_barrier.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %plh_barrier.i.i, align 8
  %sub.i.i.i = sub i32 %12, %17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i.i.i)
  %cmp.i.i.i = icmp sgt i32 %sub.i.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.not.i.i = icmp eq i32 %17, 0
  %or.cond.i.i = or i1 %tobool.not.i.i, %cmp.i.i.i
  br i1 %or.cond.i.i, label %if.then.i.i, label %if.end10.i.pnfs_set_plh_return_info.exit_crit_edge

if.end10.i.pnfs_set_plh_return_info.exit_crit_edge: ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_set_plh_return_info.exit

if.then.i.i:                                      ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  %18 = ptrtoint ptr %plh_barrier.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %12, ptr %plh_barrier.i.i, align 8
  br label %pnfs_set_plh_return_info.exit

pnfs_set_plh_return_info.exit:                    ; preds = %if.then.i.i, %if.end10.i.pnfs_set_plh_return_info.exit_crit_edge
  %plh_return_segs = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 5
  %call3 = tail call i32 @pnfs_mark_matching_lsegs_return(ptr noundef %1, ptr noundef %plh_return_segs, ptr noundef %range, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -16, i32 %call3)
  %cmp.not = icmp eq i32 %call3, -16
  br i1 %cmp.not, label %if.else, label %if.then4

if.then4:                                         ; preds = %pnfs_set_plh_return_info.exit
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cred) #16
  %19 = ptrtoint ptr %cred to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr inttoptr (i32 -1 to ptr), ptr %cred, align 4, !annotation !417
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %stateid) #16
  %20 = call ptr @memset(ptr %stateid, i32 255, i32 20)
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %iomode5) #16
  %21 = ptrtoint ptr %iomode5 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 -1, ptr %iomode5, align 4, !annotation !417
  %call6 = call fastcc zeroext i1 @pnfs_prepare_layoutreturn(ptr noundef %1, ptr noundef nonnull %stateid, ptr noundef nonnull %cred, ptr noundef nonnull %iomode5)
  call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  br i1 %call6, label %if.then8, label %if.then4.if.end10_crit_edge

if.then4.if.end10_crit_edge:                      ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end10

if.then8:                                         ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #18
  %22 = ptrtoint ptr %iomode5 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %iomode5, align 4
  %call9 = call fastcc i32 @pnfs_send_layoutreturn(ptr noundef %1, ptr noundef nonnull %stateid, ptr noundef nonnull %cred, i32 noundef %23, i1 noundef zeroext false)
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %if.then4.if.end10_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %iomode5) #16
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %stateid) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cred) #16
  br label %cleanup

if.else:                                          ; preds = %pnfs_set_plh_return_info.exit
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  %call12 = tail call i32 @nfs_commit_inode(ptr noundef %inode, i32 noundef 0) #16
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.end10, %if.then
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_layout_return_unused_byclid(ptr noundef %clp, i32 noundef %iomode) local_unnamed_addr #0 align 64 {
entry:
  %range = alloca %struct.pnfs_layout_range, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %range) #16
  %0 = ptrtoint ptr %range to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %range, align 8
  store i32 %iomode, ptr %range, align 8
  %offset = getelementptr inbounds %struct.pnfs_layout_range, ptr %range, i32 0, i32 1
  %1 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 0, ptr %offset, align 8
  %length = getelementptr inbounds %struct.pnfs_layout_range, ptr %range, i32 0, i32 2
  %2 = ptrtoint ptr %length to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 -1, ptr %length, align 8
  %call = call i32 @nfs_client_for_each_server(ptr noundef %clp, ptr noundef nonnull @pnfs_layout_return_unused_byserver, ptr noundef nonnull %range) #16
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %range) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfs_client_for_each_server(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @pnfs_layout_return_unused_byserver(ptr noundef %server, ptr noundef %data) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %layouts = getelementptr inbounds %struct.nfs_server, ptr %server, i32 0, i32 53
  %offset1.i.i.i = getelementptr inbounds %struct.pnfs_layout_range, ptr %data, i32 0, i32 1
  %length2.i.i.i = getelementptr inbounds %struct.pnfs_layout_range, ptr %data, i32 0, i32 2
  br label %restart

restart:                                          ; preds = %rcu_read_unlock.exit, %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !424
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #16
  %call.i = tail call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i, label %restart.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

restart.rcu_read_lock.exit_crit_edge:             ; preds = %restart
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %restart
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 696, ptr noundef nonnull @.str.119) #16
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %restart.rcu_read_lock.exit_crit_edge
  %call = tail call i32 @rcu_read_lock_any_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end_crit_edge

rcu_read_lock.exit.do.end_crit_edge:              ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true3

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %.b48 = load i1, ptr @pnfs_layout_return_unused_byserver.__warned, align 1
  br i1 %.b48, label %land.lhs.true3.do.end_crit_edge, label %if.then

land.lhs.true3.do.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

if.then:                                          ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @pnfs_layout_return_unused_byserver.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 2618, ptr noundef nonnull @.str.41) #16
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true3.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %rcu_read_lock.exit.do.end_crit_edge
  %4 = ptrtoint ptr %layouts to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pn83 = load volatile ptr, ptr %layouts, align 8
  %cmp.not84 = icmp eq ptr %.pn83, %layouts
  br i1 %cmp.not84, label %do.end.for.end_crit_edge, label %do.end.for.body_crit_edge

do.end.for.body_crit_edge:                        ; preds = %do.end
  br label %for.body

do.end.for.end_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %do.end.for.body_crit_edge
  %.pn85 = phi ptr [ %.pn, %for.inc.for.body_crit_edge ], [ %.pn83, %do.end.for.body_crit_edge ]
  %plh_flags.i.i = getelementptr i8, ptr %.pn85, i32 40
  %5 = ptrtoint ptr %plh_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %plh_flags.i.i, align 4
  %7 = and i32 %6, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp.i.i = icmp eq i32 %7, 0
  br i1 %cmp.i.i, label %land.lhs.true.i50, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

land.lhs.true.i50:                                ; preds = %for.body
  %8 = ptrtoint ptr %plh_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %plh_flags.i.i, align 4
  %10 = and i32 %9, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not.i49 = icmp eq i32 %10, 0
  br i1 %tobool.not.i49, label %pnfs_layout_can_be_returned.exit, label %land.lhs.true.i50.for.inc_crit_edge

land.lhs.true.i50.for.inc_crit_edge:              ; preds = %land.lhs.true.i50
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

pnfs_layout_can_be_returned.exit:                 ; preds = %land.lhs.true.i50
  %11 = ptrtoint ptr %plh_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %plh_flags.i.i, align 4
  %13 = and i32 %12, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool4.not.i = icmp eq i32 %13, 0
  br i1 %tobool4.not.i, label %lor.lhs.false, label %pnfs_layout_can_be_returned.exit.for.inc_crit_edge

pnfs_layout_can_be_returned.exit.for.inc_crit_edge: ; preds = %pnfs_layout_can_be_returned.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

lor.lhs.false:                                    ; preds = %pnfs_layout_can_be_returned.exit
  %14 = ptrtoint ptr %plh_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %plh_flags.i.i, align 4
  %16 = and i32 %15, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool12.not = icmp eq i32 %16, 0
  br i1 %tobool12.not, label %if.end14, label %lor.lhs.false.for.inc_crit_edge

lor.lhs.false.for.inc_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end14:                                         ; preds = %lor.lhs.false
  %plh_inode = getelementptr i8, ptr %.pn85, i32 92
  %17 = ptrtoint ptr %plh_inode to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %plh_inode, align 4
  %i_lock = getelementptr inbounds %struct.inode, ptr %18, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %19 = ptrtoint ptr %plh_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %plh_flags.i.i, align 4
  %21 = and i32 %20, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %cmp.i.i.i = icmp eq i32 %21, 0
  br i1 %cmp.i.i.i, label %land.lhs.true.i.i, label %if.end14.if.then16_crit_edge

if.end14.if.then16_crit_edge:                     ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then16

land.lhs.true.i.i:                                ; preds = %if.end14
  %22 = ptrtoint ptr %plh_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %plh_flags.i.i, align 4
  %24 = and i32 %23, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.not.i.i = icmp eq i32 %24, 0
  br i1 %tobool.not.i.i, label %pnfs_layout_can_be_returned.exit.i, label %land.lhs.true.i.i.if.then16_crit_edge

land.lhs.true.i.i.if.then16_crit_edge:            ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then16

pnfs_layout_can_be_returned.exit.i:               ; preds = %land.lhs.true.i.i
  %25 = ptrtoint ptr %plh_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %plh_flags.i.i, align 4
  %27 = and i32 %26, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool4.not.i.i = icmp eq i32 %27, 0
  br i1 %tobool4.not.i.i, label %lor.lhs.false.i, label %pnfs_layout_can_be_returned.exit.i.if.then16_crit_edge

pnfs_layout_can_be_returned.exit.i.if.then16_crit_edge: ; preds = %pnfs_layout_can_be_returned.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then16

lor.lhs.false.i:                                  ; preds = %pnfs_layout_can_be_returned.exit.i
  %28 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %data, align 8
  %plh_segs.i.i = getelementptr i8, ptr %.pn85, i32 16
  %30 = ptrtoint ptr %plh_segs.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %lseg.030.i.i = load ptr, ptr %plh_segs.i.i, align 8
  %cmp.not31.i.i = icmp eq ptr %lseg.030.i.i, %plh_segs.i.i
  br i1 %cmp.not31.i.i, label %lor.lhs.false.i.if.then16_crit_edge, label %for.body.lr.ph.i.i

lor.lhs.false.i.if.then16_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then16

for.body.lr.ph.i.i:                               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %29)
  %cmp9.not.i.i = icmp eq i32 %29, 3
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i.for.body.i.i_crit_edge, %for.body.lr.ph.i.i
  %lseg.032.i.i = phi ptr [ %lseg.030.i.i, %for.body.lr.ph.i.i ], [ %lseg.0.i.i, %for.inc.i.i.for.body.i.i_crit_edge ]
  %pls_flags.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.032.i.i, i32 0, i32 6
  %31 = ptrtoint ptr %pls_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %pls_flags.i.i, align 4
  %and1.i.i.i = and i32 %32, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.not.i54.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.not.i54.i, label %for.body.i.i.for.inc.i.i_crit_edge, label %if.end.i.i

for.body.i.i.for.inc.i.i_crit_edge:               ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

if.end.i.i:                                       ; preds = %for.body.i.i
  %33 = ptrtoint ptr %pls_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %pls_flags.i.i, align 4
  %35 = and i32 %34, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %tobool4.not.i55.i = icmp eq i32 %35, 0
  br i1 %tobool4.not.i55.i, label %if.end6.i.i, label %if.end.i.i.for.inc.i.i_crit_edge

if.end.i.i.for.inc.i.i_crit_edge:                 ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

if.end6.i.i:                                      ; preds = %if.end.i.i
  %pls_range.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.032.i.i, i32 0, i32 3
  %36 = ptrtoint ptr %pls_range.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %pls_range.i.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %37, i32 %29)
  %cmp8.not.i.i = icmp eq i32 %37, %29
  %or.cond.i.i = or i1 %cmp9.not.i.i, %cmp8.not.i.i
  br i1 %or.cond.i.i, label %if.end11.i.i, label %if.end6.i.i.for.inc.i.i_crit_edge

if.end6.i.i.for.inc.i.i_crit_edge:                ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

if.end11.i.i:                                     ; preds = %if.end6.i.i
  %offset.i.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.032.i.i, i32 0, i32 3, i32 1
  %38 = ptrtoint ptr %offset.i.i.i to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %offset.i.i.i, align 8
  %length.i.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.032.i.i, i32 0, i32 3, i32 2
  %40 = ptrtoint ptr %length.i.i.i to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %length.i.i.i, align 8
  %42 = tail call i64 @llvm.uadd.sat.i64(i64 %39, i64 %41) #16
  %43 = ptrtoint ptr %offset1.i.i.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %offset1.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %42)
  %cmp.i.i.i.i = icmp eq i64 %42, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %44, i64 %42)
  %cmp1.i.i.i.i = icmp ult i64 %44, %42
  %or.cond.i.i.i.i = or i1 %cmp.i.i.i.i, %cmp1.i.i.i.i
  br i1 %or.cond.i.i.i.i, label %pnfs_lseg_range_intersecting.exit.i.i, label %if.end11.i.i.for.inc.i.i_crit_edge

if.end11.i.i.for.inc.i.i_crit_edge:               ; preds = %if.end11.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

pnfs_lseg_range_intersecting.exit.i.i:            ; preds = %if.end11.i.i
  %45 = ptrtoint ptr %length2.i.i.i to i32
  call void @__asan_load8_noabort(i32 %45)
  %46 = load i64, ptr %length2.i.i.i, align 8
  %47 = tail call i64 @llvm.uadd.sat.i64(i64 %44, i64 %46) #16
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %47)
  %cmp2.i.i.i.i = icmp eq i64 %47, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %39, i64 %47)
  %cmp3.i.i.i.i = icmp ult i64 %39, %47
  %spec.select.i.i.i.i = or i1 %cmp2.i.i.i.i, %cmp3.i.i.i.i
  br i1 %spec.select.i.i.i.i, label %pnfs_find_first_lseg.exit.i, label %pnfs_lseg_range_intersecting.exit.i.i.for.inc.i.i_crit_edge

pnfs_lseg_range_intersecting.exit.i.i.for.inc.i.i_crit_edge: ; preds = %pnfs_lseg_range_intersecting.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i.i

for.inc.i.i:                                      ; preds = %pnfs_lseg_range_intersecting.exit.i.i.for.inc.i.i_crit_edge, %if.end11.i.i.for.inc.i.i_crit_edge, %if.end6.i.i.for.inc.i.i_crit_edge, %if.end.i.i.for.inc.i.i_crit_edge, %for.body.i.i.for.inc.i.i_crit_edge
  %48 = ptrtoint ptr %lseg.032.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %lseg.0.i.i = load ptr, ptr %lseg.032.i.i, align 8
  %cmp.not.i.i = icmp eq ptr %lseg.0.i.i, %plh_segs.i.i
  br i1 %cmp.not.i.i, label %for.inc.i.i.if.then16_crit_edge, label %for.inc.i.i.for.body.i.i_crit_edge

for.inc.i.i.for.body.i.i_crit_edge:               ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.inc.i.i.if.then16_crit_edge:                  ; preds = %for.inc.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then16

pnfs_find_first_lseg.exit.i:                      ; preds = %pnfs_lseg_range_intersecting.exit.i.i
  %tobool.not.i51 = icmp eq ptr %lseg.032.i.i, null
  br i1 %tobool.not.i51, label %pnfs_find_first_lseg.exit.i.if.then16_crit_edge, label %if.end.i

pnfs_find_first_lseg.exit.i.if.then16_crit_edge:  ; preds = %pnfs_find_first_lseg.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then16

if.end.i:                                         ; preds = %pnfs_find_first_lseg.exit.i
  %49 = ptrtoint ptr %plh_inode to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %plh_inode, align 4
  %open_files.i = getelementptr i8, ptr %50, i32 -152
  %call3.i = tail call i32 @rcu_read_lock_any_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i52 = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i52, label %land.lhs.true.i53, label %if.end.i.do.end.i_crit_edge

if.end.i.do.end.i_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

land.lhs.true.i53:                                ; preds = %if.end.i
  %call5.i = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %land.lhs.true.i53.do.end.i_crit_edge, label %land.lhs.true7.i

land.lhs.true.i53.do.end.i_crit_edge:             ; preds = %land.lhs.true.i53
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i53
  %.b53.i = load i1, ptr @pnfs_should_return_unused_layout.__warned, align 1
  br i1 %.b53.i, label %land.lhs.true7.i.do.end.i_crit_edge, label %if.then9.i

land.lhs.true7.i.do.end.i_crit_edge:              ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end.i

if.then9.i:                                       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @pnfs_should_return_unused_layout.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 2592, ptr noundef nonnull @.str.41) #16
  br label %do.end.i

do.end.i:                                         ; preds = %if.then9.i, %land.lhs.true7.i.do.end.i_crit_edge, %land.lhs.true.i53.do.end.i_crit_edge, %if.end.i.do.end.i_crit_edge
  %51 = ptrtoint ptr %open_files.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %.pn90.i = load volatile ptr, ptr %open_files.i, align 4
  %cmp.not91.i = icmp eq ptr %.pn90.i, %open_files.i
  br i1 %cmp.not91.i, label %do.end.i.for.end.i_crit_edge, label %do.end.i.for.body.i_crit_edge

do.end.i.for.body.i_crit_edge:                    ; preds = %do.end.i
  br label %for.body.i

do.end.i.for.end.i_crit_edge:                     ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %do.end.i.for.body.i_crit_edge
  %.pn93.i = phi ptr [ %.pn.i, %for.inc.i.for.body.i_crit_edge ], [ %.pn90.i, %do.end.i.for.body.i_crit_edge ]
  %mode.092.i = phi i32 [ %mode.1.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %do.end.i.for.body.i_crit_edge ]
  %state.i = getelementptr i8, ptr %.pn93.i, i32 -16
  %52 = ptrtoint ptr %state.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %state.i, align 4
  %tobool15.not.i = icmp eq ptr %53, null
  br i1 %tobool15.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.then16.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i

if.then16.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %state18.i = getelementptr inbounds %struct.nfs4_state, ptr %53, i32 0, i32 13
  %54 = ptrtoint ptr %state18.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %state18.i, align 4
  %and.i = and i32 %55, 3
  %or.i = or i32 %and.i, %mode.092.i
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then16.i, %for.body.i.for.inc.i_crit_edge
  %mode.1.i = phi i32 [ %or.i, %if.then16.i ], [ %mode.092.i, %for.body.i.for.inc.i_crit_edge ]
  %56 = ptrtoint ptr %.pn93.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %.pn.i = load volatile ptr, ptr %.pn93.i, align 4
  %cmp.not.i = icmp eq ptr %.pn.i, %open_files.i
  br i1 %cmp.not.i, label %for.inc.i.for.end.i_crit_edge, label %for.inc.i.for.body.i_crit_edge

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i

for.end.i:                                        ; preds = %for.inc.i.for.end.i_crit_edge, %do.end.i.for.end.i_crit_edge
  %mode.0.lcssa.i = phi i32 [ 0, %do.end.i.for.end.i_crit_edge ], [ %mode.1.i, %for.inc.i.for.end.i_crit_edge ]
  %57 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %data, align 8
  %59 = zext i32 %58 to i64
  call void @__sanitizer_cov_trace_switch(i64 %59, ptr @__sancov_gen_cov_switch_values.182)
  switch i32 %58, label %for.end.i.pnfs_should_return_unused_layout.exit_crit_edge [
    i32 1, label %sw.bb.i
    i32 2, label %sw.bb31.i
  ]

for.end.i.pnfs_should_return_unused_layout.exit_crit_edge: ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_should_return_unused_layout.exit

sw.bb.i:                                          ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %and30.i = and i32 %mode.0.lcssa.i, -3
  br label %pnfs_should_return_unused_layout.exit

sw.bb31.i:                                        ; preds = %for.end.i
  %60 = ptrtoint ptr %plh_segs.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %lseg.030.i57.i = load ptr, ptr %plh_segs.i.i, align 8
  %cmp.not31.i58.i = icmp eq ptr %lseg.030.i57.i, %plh_segs.i.i
  br i1 %cmp.not31.i58.i, label %sw.bb31.i.pnfs_find_first_lseg.exit86.i_crit_edge, label %sw.bb31.i.for.body.i66.i_crit_edge

sw.bb31.i.for.body.i66.i_crit_edge:               ; preds = %sw.bb31.i
  br label %for.body.i66.i

sw.bb31.i.pnfs_find_first_lseg.exit86.i_crit_edge: ; preds = %sw.bb31.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_find_first_lseg.exit86.i

for.body.i66.i:                                   ; preds = %for.inc.i84.i.for.body.i66.i_crit_edge, %sw.bb31.i.for.body.i66.i_crit_edge
  %lseg.032.i62.i = phi ptr [ %lseg.0.i82.i, %for.inc.i84.i.for.body.i66.i_crit_edge ], [ %lseg.030.i57.i, %sw.bb31.i.for.body.i66.i_crit_edge ]
  %pls_flags.i63.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.032.i62.i, i32 0, i32 6
  %61 = ptrtoint ptr %pls_flags.i63.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile i32, ptr %pls_flags.i63.i, align 4
  %and1.i.i64.i = and i32 %62, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i64.i)
  %tobool.not.i65.i = icmp eq i32 %and1.i.i64.i, 0
  br i1 %tobool.not.i65.i, label %for.body.i66.i.for.inc.i84.i_crit_edge, label %if.end.i68.i

for.body.i66.i.for.inc.i84.i_crit_edge:           ; preds = %for.body.i66.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i84.i

if.end.i68.i:                                     ; preds = %for.body.i66.i
  %63 = ptrtoint ptr %pls_flags.i63.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile i32, ptr %pls_flags.i63.i, align 4
  %65 = and i32 %64, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %65)
  %tobool4.not.i67.i = icmp eq i32 %65, 0
  br i1 %tobool4.not.i67.i, label %if.end6.i71.i, label %if.end.i68.i.for.inc.i84.i_crit_edge

if.end.i68.i.for.inc.i84.i_crit_edge:             ; preds = %if.end.i68.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i84.i

if.end6.i71.i:                                    ; preds = %if.end.i68.i
  %pls_range.i69.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.032.i62.i, i32 0, i32 3
  %66 = ptrtoint ptr %pls_range.i69.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %pls_range.i69.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %67)
  %cmp8.not.i70.i = icmp eq i32 %67, 1
  br i1 %cmp8.not.i70.i, label %if.end11.i77.i, label %if.end6.i71.i.for.inc.i84.i_crit_edge

if.end6.i71.i.for.inc.i84.i_crit_edge:            ; preds = %if.end6.i71.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i84.i

if.end11.i77.i:                                   ; preds = %if.end6.i71.i
  %offset.i.i72.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.032.i62.i, i32 0, i32 3, i32 1
  %68 = ptrtoint ptr %offset.i.i72.i to i32
  call void @__asan_load8_noabort(i32 %68)
  %69 = load i64, ptr %offset.i.i72.i, align 8
  %length.i.i73.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.032.i62.i, i32 0, i32 3, i32 2
  %70 = ptrtoint ptr %length.i.i73.i to i32
  call void @__asan_load8_noabort(i32 %70)
  %71 = load i64, ptr %length.i.i73.i, align 8
  %72 = tail call i64 @llvm.uadd.sat.i64(i64 %69, i64 %71) #16
  %73 = ptrtoint ptr %offset1.i.i.i to i32
  call void @__asan_load8_noabort(i32 %73)
  %74 = load i64, ptr %offset1.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %72)
  %cmp.i.i.i74.i = icmp eq i64 %72, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %74, i64 %72)
  %cmp1.i.i.i75.i = icmp ult i64 %74, %72
  %or.cond.i.i.i76.i = or i1 %cmp.i.i.i74.i, %cmp1.i.i.i75.i
  br i1 %or.cond.i.i.i76.i, label %pnfs_lseg_range_intersecting.exit.i81.i, label %if.end11.i77.i.for.inc.i84.i_crit_edge

if.end11.i77.i.for.inc.i84.i_crit_edge:           ; preds = %if.end11.i77.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i84.i

pnfs_lseg_range_intersecting.exit.i81.i:          ; preds = %if.end11.i77.i
  %75 = ptrtoint ptr %length2.i.i.i to i32
  call void @__asan_load8_noabort(i32 %75)
  %76 = load i64, ptr %length2.i.i.i, align 8
  %77 = tail call i64 @llvm.uadd.sat.i64(i64 %74, i64 %76) #16
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %77)
  %cmp2.i.i.i78.i = icmp eq i64 %77, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %69, i64 %77)
  %cmp3.i.i.i79.i = icmp ult i64 %69, %77
  %spec.select.i.i.i80.i = or i1 %cmp2.i.i.i78.i, %cmp3.i.i.i79.i
  br i1 %spec.select.i.i.i80.i, label %pnfs_lseg_range_intersecting.exit.i81.i.pnfs_find_first_lseg.exit86.i_crit_edge, label %pnfs_lseg_range_intersecting.exit.i81.i.for.inc.i84.i_crit_edge

pnfs_lseg_range_intersecting.exit.i81.i.for.inc.i84.i_crit_edge: ; preds = %pnfs_lseg_range_intersecting.exit.i81.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.i84.i

pnfs_lseg_range_intersecting.exit.i81.i.pnfs_find_first_lseg.exit86.i_crit_edge: ; preds = %pnfs_lseg_range_intersecting.exit.i81.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_find_first_lseg.exit86.i

for.inc.i84.i:                                    ; preds = %pnfs_lseg_range_intersecting.exit.i81.i.for.inc.i84.i_crit_edge, %if.end11.i77.i.for.inc.i84.i_crit_edge, %if.end6.i71.i.for.inc.i84.i_crit_edge, %if.end.i68.i.for.inc.i84.i_crit_edge, %for.body.i66.i.for.inc.i84.i_crit_edge
  %78 = ptrtoint ptr %lseg.032.i62.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %lseg.0.i82.i = load ptr, ptr %lseg.032.i62.i, align 8
  %cmp.not.i83.i = icmp eq ptr %lseg.0.i82.i, %plh_segs.i.i
  br i1 %cmp.not.i83.i, label %for.inc.i84.i.pnfs_find_first_lseg.exit86.i_crit_edge, label %for.inc.i84.i.for.body.i66.i_crit_edge

for.inc.i84.i.for.body.i66.i_crit_edge:           ; preds = %for.inc.i84.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i66.i

for.inc.i84.i.pnfs_find_first_lseg.exit86.i_crit_edge: ; preds = %for.inc.i84.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_find_first_lseg.exit86.i

pnfs_find_first_lseg.exit86.i:                    ; preds = %for.inc.i84.i.pnfs_find_first_lseg.exit86.i_crit_edge, %pnfs_lseg_range_intersecting.exit.i81.i.pnfs_find_first_lseg.exit86.i_crit_edge, %sw.bb31.i.pnfs_find_first_lseg.exit86.i_crit_edge
  %retval.0.i85.i = phi ptr [ null, %sw.bb31.i.pnfs_find_first_lseg.exit86.i_crit_edge ], [ null, %for.inc.i84.i.pnfs_find_first_lseg.exit86.i_crit_edge ], [ %lseg.032.i62.i, %pnfs_lseg_range_intersecting.exit.i81.i.pnfs_find_first_lseg.exit86.i_crit_edge ]
  %tobool33.not.i = icmp eq ptr %retval.0.i85.i, null
  %and35.i = and i32 %mode.0.lcssa.i, -2
  %spec.select.i = select i1 %tobool33.not.i, i32 %mode.0.lcssa.i, i32 %and35.i
  br label %pnfs_should_return_unused_layout.exit

pnfs_should_return_unused_layout.exit:            ; preds = %pnfs_find_first_lseg.exit86.i, %sw.bb.i, %for.end.i.pnfs_should_return_unused_layout.exit_crit_edge
  %mode.2.i = phi i32 [ %mode.0.lcssa.i, %for.end.i.pnfs_should_return_unused_layout.exit_crit_edge ], [ %and30.i, %sw.bb.i ], [ %spec.select.i, %pnfs_find_first_lseg.exit86.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mode.2.i)
  %cmp37.i = icmp eq i32 %mode.2.i, 0
  br i1 %cmp37.i, label %if.end18, label %pnfs_should_return_unused_layout.exit.if.then16_crit_edge

pnfs_should_return_unused_layout.exit.if.then16_crit_edge: ; preds = %pnfs_should_return_unused_layout.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then16

if.then16:                                        ; preds = %pnfs_should_return_unused_layout.exit.if.then16_crit_edge, %pnfs_find_first_lseg.exit.i.if.then16_crit_edge, %for.inc.i.i.if.then16_crit_edge, %lor.lhs.false.i.if.then16_crit_edge, %pnfs_layout_can_be_returned.exit.i.if.then16_crit_edge, %land.lhs.true.i.i.if.then16_crit_edge, %if.end14.if.then16_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  br label %for.inc

if.end18:                                         ; preds = %pnfs_should_return_unused_layout.exit
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  %79 = ptrtoint ptr %plh_inode to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %plh_inode, align 4
  %call.i55 = tail call ptr @igrab(ptr noundef %80) #16
  %tobool.not.i56 = icmp eq ptr %call.i55, null
  br i1 %tobool.not.i56, label %pnfs_grab_inode_layout_hdr.exit.thread, label %if.end23

pnfs_grab_inode_layout_hdr.exit.thread:           ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_set_bit(i32 noundef 8, ptr noundef %plh_flags.i.i) #16
  br label %for.inc

if.end23:                                         ; preds = %if.end18
  %call.i58 = tail call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i58, label %if.end23.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i61

if.end23.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

land.lhs.true.i61:                                ; preds = %if.end23
  %call1.i59 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i59)
  %tobool.not.i60 = icmp eq i32 %call1.i59, 0
  br i1 %tobool.not.i60, label %land.lhs.true.i61.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i63

land.lhs.true.i61.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i61
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

land.lhs.true2.i63:                               ; preds = %land.lhs.true.i61
  %.b4.i62 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i62, label %land.lhs.true2.i63.rcu_read_unlock.exit_crit_edge, label %if.then.i64

land.lhs.true2.i63.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i63
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

if.then.i64:                                      ; preds = %land.lhs.true2.i63
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 724, ptr noundef nonnull @.str.120) #16
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i64, %land.lhs.true2.i63.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i61.rcu_read_unlock.exit_crit_edge, %if.end23.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !425
  %81 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i.i65 = and i32 %81, -16384
  %82 = inttoptr i32 %and.i.i.i.i.i65 to ptr
  %preempt_count.i.i.i.i66 = getelementptr inbounds %struct.thread_info, ptr %82, i32 0, i32 1
  %83 = ptrtoint ptr %preempt_count.i.i.i.i66 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load volatile i32, ptr %preempt_count.i.i.i.i66, align 4
  %sub.i.i.i = add i32 %84, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i66, align 4
  tail call void @rcu_read_unlock_strict() #16
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #16
  tail call fastcc void @pnfs_mark_layout_for_return(ptr noundef nonnull %call.i55, ptr noundef %data)
  tail call void @iput(ptr noundef nonnull %call.i55) #16
  tail call void @__might_resched(ptr noundef nonnull @.str.2, i32 noundef 2635, i32 noundef 0) #16
  %call.i68 = tail call i32 @__cond_resched() #16
  br label %restart

for.inc:                                          ; preds = %pnfs_grab_inode_layout_hdr.exit.thread, %if.then16, %lor.lhs.false.for.inc_crit_edge, %pnfs_layout_can_be_returned.exit.for.inc_crit_edge, %land.lhs.true.i50.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %85 = ptrtoint ptr %.pn85 to i32
  call void @__asan_load4_noabort(i32 %85)
  %.pn = load volatile ptr, ptr %.pn85, align 8
  %cmp.not = icmp eq ptr %.pn, %layouts
  br i1 %cmp.not, label %for.inc.for.end_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %do.end.for.end_crit_edge
  %call.i69 = tail call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i69, label %for.end.rcu_read_unlock.exit80_crit_edge, label %land.lhs.true.i72

for.end.rcu_read_unlock.exit80_crit_edge:         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit80

land.lhs.true.i72:                                ; preds = %for.end
  %call1.i70 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i70)
  %tobool.not.i71 = icmp eq i32 %call1.i70, 0
  br i1 %tobool.not.i71, label %land.lhs.true.i72.rcu_read_unlock.exit80_crit_edge, label %land.lhs.true2.i74

land.lhs.true.i72.rcu_read_unlock.exit80_crit_edge: ; preds = %land.lhs.true.i72
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit80

land.lhs.true2.i74:                               ; preds = %land.lhs.true.i72
  %.b4.i73 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i73, label %land.lhs.true2.i74.rcu_read_unlock.exit80_crit_edge, label %if.then.i75

land.lhs.true2.i74.rcu_read_unlock.exit80_crit_edge: ; preds = %land.lhs.true2.i74
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit80

if.then.i75:                                      ; preds = %land.lhs.true2.i74
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.118, i32 noundef 724, ptr noundef nonnull @.str.120) #16
  br label %rcu_read_unlock.exit80

rcu_read_unlock.exit80:                           ; preds = %if.then.i75, %land.lhs.true2.i74.rcu_read_unlock.exit80_crit_edge, %land.lhs.true.i72.rcu_read_unlock.exit80_crit_edge, %for.end.rcu_read_unlock.exit80_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !425
  %86 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i.i76 = and i32 %86, -16384
  %87 = inttoptr i32 %and.i.i.i.i.i76 to ptr
  %preempt_count.i.i.i.i77 = getelementptr inbounds %struct.thread_info, ptr %87, i32 0, i32 1
  %88 = ptrtoint ptr %preempt_count.i.i.i.i77 to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load volatile i32, ptr %preempt_count.i.i.i.i77, align 4
  %sub.i.i.i78 = add i32 %89, -1
  store volatile i32 %sub.i.i.i78, ptr %preempt_count.i.i.i.i77, align 4
  tail call void @rcu_read_unlock_strict() #16
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #16
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_generic_pg_check_layout(ptr nocapture noundef %pgio) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pg_lseg = getelementptr inbounds %struct.nfs_pageio_descriptor, ptr %pgio, i32 0, i32 7
  %0 = ptrtoint ptr %pg_lseg to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pg_lseg, align 4
  %cmp = icmp eq ptr %1, null
  br i1 %cmp, label %entry.return_crit_edge, label %lor.lhs.false

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %pls_flags = getelementptr inbounds %struct.pnfs_layout_segment, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %pls_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %pls_flags, align 4
  %and1.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool.not = icmp eq i32 %and1.i, 0
  br i1 %tobool.not, label %if.end, label %lor.lhs.false.return_crit_edge

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @pnfs_put_lseg(ptr noundef nonnull %1)
  %4 = ptrtoint ptr %pg_lseg to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr null, ptr %pg_lseg, align 4
  br label %return

return:                                           ; preds = %if.end, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_generic_pg_check_range(ptr nocapture noundef %pgio, ptr nocapture noundef readonly %req) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pg_lseg = getelementptr inbounds %struct.nfs_pageio_descriptor, ptr %pgio, i32 0, i32 7
  %0 = ptrtoint ptr %pg_lseg to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pg_lseg, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %offset.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %1, i32 0, i32 3, i32 1
  %2 = ptrtoint ptr %offset.i to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %offset.i, align 8
  %length.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %1, i32 0, i32 3, i32 2
  %4 = ptrtoint ptr %length.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %length.i, align 8
  %6 = tail call i64 @llvm.uadd.sat.i64(i64 %3, i64 %5) #16
  %wb_index.i.i = getelementptr inbounds %struct.nfs_page, ptr %req, i32 0, i32 3
  %7 = ptrtoint ptr %wb_index.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %wb_index.i.i, align 4
  %conv.i.i = zext i32 %8 to i64
  %shl.i.i = shl nuw nsw i64 %conv.i.i, 12
  %wb_offset.i.i = getelementptr inbounds %struct.nfs_page, ptr %req, i32 0, i32 4
  %9 = ptrtoint ptr %wb_offset.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %wb_offset.i.i, align 4
  %conv1.i.i = zext i32 %10 to i64
  %add.i.i = add nuw nsw i64 %shl.i.i, %conv1.i.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %6)
  %cmp.i.i = icmp eq i64 %6, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i.i, i64 %6)
  %cmp1.i.i = icmp ult i64 %add.i.i, %6
  %or.cond.i.i = or i1 %cmp.i.i, %cmp1.i.i
  br i1 %or.cond.i.i, label %pnfs_lseg_request_intersecting.exit, label %land.lhs.true.if.then_crit_edge

land.lhs.true.if.then_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

pnfs_lseg_request_intersecting.exit:              ; preds = %land.lhs.true
  %wb_bytes.i = getelementptr inbounds %struct.nfs_page, ptr %req, i32 0, i32 6
  %11 = ptrtoint ptr %wb_bytes.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %wb_bytes.i, align 4
  %conv.i = zext i32 %12 to i64
  %add.i = add nuw nsw i64 %add.i.i, %conv.i
  call void @__sanitizer_cov_trace_cmp8(i64 %3, i64 %add.i)
  %cmp3.i.i = icmp ult i64 %3, %add.i
  br i1 %cmp3.i.i, label %pnfs_lseg_request_intersecting.exit.if.end_crit_edge, label %pnfs_lseg_request_intersecting.exit.if.then_crit_edge

pnfs_lseg_request_intersecting.exit.if.then_crit_edge: ; preds = %pnfs_lseg_request_intersecting.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

pnfs_lseg_request_intersecting.exit.if.end_crit_edge: ; preds = %pnfs_lseg_request_intersecting.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %pnfs_lseg_request_intersecting.exit.if.then_crit_edge, %land.lhs.true.if.then_crit_edge
  tail call void @pnfs_put_lseg(ptr noundef nonnull %1)
  %13 = ptrtoint ptr %pg_lseg to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %pg_lseg, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %pnfs_lseg_request_intersecting.exit.if.end_crit_edge, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_generic_pg_init_read(ptr noundef %pgio, ptr nocapture noundef readonly %req) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pg_lseg.i = getelementptr inbounds %struct.nfs_pageio_descriptor, ptr %pgio, i32 0, i32 7
  %0 = ptrtoint ptr %pg_lseg.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pg_lseg.i, align 4
  %cmp.i = icmp eq ptr %1, null
  br i1 %cmp.i, label %entry.if.then_crit_edge, label %lor.lhs.false.i

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

lor.lhs.false.i:                                  ; preds = %entry
  %pls_flags.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %pls_flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %pls_flags.i, align 4
  %and1.i.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i.if.then.sink.split_crit_edge, label %pnfs_generic_pg_check_layout.exit

lor.lhs.false.i.if.then.sink.split_crit_edge:     ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.sink.split

pnfs_generic_pg_check_layout.exit:                ; preds = %lor.lhs.false.i
  %4 = ptrtoint ptr %pg_lseg.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pr = load ptr, ptr %pg_lseg.i, align 4
  %tobool.not.i41 = icmp eq ptr %.pr, null
  br i1 %tobool.not.i41, label %pnfs_generic_pg_check_layout.exit.if.then_crit_edge, label %land.lhs.true.i

pnfs_generic_pg_check_layout.exit.if.then_crit_edge: ; preds = %pnfs_generic_pg_check_layout.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

land.lhs.true.i:                                  ; preds = %pnfs_generic_pg_check_layout.exit
  %offset.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %.pr, i32 0, i32 3, i32 1
  %5 = ptrtoint ptr %offset.i.i to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %offset.i.i, align 8
  %length.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %.pr, i32 0, i32 3, i32 2
  %7 = ptrtoint ptr %length.i.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %length.i.i, align 8
  %9 = tail call i64 @llvm.uadd.sat.i64(i64 %6, i64 %8) #16
  %wb_index.i.i.i = getelementptr inbounds %struct.nfs_page, ptr %req, i32 0, i32 3
  %10 = ptrtoint ptr %wb_index.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %wb_index.i.i.i, align 4
  %conv.i.i.i = zext i32 %11 to i64
  %shl.i.i.i = shl nuw nsw i64 %conv.i.i.i, 12
  %wb_offset.i.i.i = getelementptr inbounds %struct.nfs_page, ptr %req, i32 0, i32 4
  %12 = ptrtoint ptr %wb_offset.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %wb_offset.i.i.i, align 4
  %conv1.i.i.i = zext i32 %13 to i64
  %add.i.i.i = add nuw nsw i64 %shl.i.i.i, %conv1.i.i.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %9)
  %cmp.i.i.i = icmp eq i64 %9, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i.i.i, i64 %9)
  %cmp1.i.i.i = icmp ult i64 %add.i.i.i, %9
  %or.cond.i.i.i = or i1 %cmp.i.i.i, %cmp1.i.i.i
  br i1 %or.cond.i.i.i, label %pnfs_lseg_request_intersecting.exit.i, label %land.lhs.true.i.if.then.sink.split_crit_edge

land.lhs.true.i.if.then.sink.split_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.sink.split

pnfs_lseg_request_intersecting.exit.i:            ; preds = %land.lhs.true.i
  %wb_bytes.i.i = getelementptr inbounds %struct.nfs_page, ptr %req, i32 0, i32 6
  %14 = ptrtoint ptr %wb_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %wb_bytes.i.i, align 4
  %conv.i.i = zext i32 %15 to i64
  %add.i.i = add nuw nsw i64 %add.i.i.i, %conv.i.i
  call void @__sanitizer_cov_trace_cmp8(i64 %6, i64 %add.i.i)
  %cmp3.i.i.i = icmp ult i64 %6, %add.i.i
  br i1 %cmp3.i.i.i, label %pnfs_generic_pg_check_range.exit, label %pnfs_lseg_request_intersecting.exit.i.if.then.sink.split_crit_edge

pnfs_lseg_request_intersecting.exit.i.if.then.sink.split_crit_edge: ; preds = %pnfs_lseg_request_intersecting.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.sink.split

pnfs_generic_pg_check_range.exit:                 ; preds = %pnfs_lseg_request_intersecting.exit.i
  %16 = ptrtoint ptr %pg_lseg.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pr51.pr = load ptr, ptr %pg_lseg.i, align 4
  %cmp = icmp eq ptr %.pr51.pr, null
  br i1 %cmp, label %pnfs_generic_pg_check_range.exit.if.then_crit_edge, label %pnfs_generic_pg_check_range.exit.cleanup_crit_edge

pnfs_generic_pg_check_range.exit.cleanup_crit_edge: ; preds = %pnfs_generic_pg_check_range.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

pnfs_generic_pg_check_range.exit.if.then_crit_edge: ; preds = %pnfs_generic_pg_check_range.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

if.then.sink.split:                               ; preds = %pnfs_lseg_request_intersecting.exit.i.if.then.sink.split_crit_edge, %land.lhs.true.i.if.then.sink.split_crit_edge, %lor.lhs.false.i.if.then.sink.split_crit_edge
  %.sink = phi ptr [ %1, %lor.lhs.false.i.if.then.sink.split_crit_edge ], [ %.pr, %pnfs_lseg_request_intersecting.exit.i.if.then.sink.split_crit_edge ], [ %.pr, %land.lhs.true.i.if.then.sink.split_crit_edge ]
  tail call void @pnfs_put_lseg(ptr noundef nonnull %.sink) #16
  %17 = ptrtoint ptr %pg_lseg.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %pg_lseg.i, align 4
  br label %if.then

if.then:                                          ; preds = %if.then.sink.split, %pnfs_generic_pg_check_range.exit.if.then_crit_edge, %pnfs_generic_pg_check_layout.exit.if.then_crit_edge, %entry.if.then_crit_edge
  %pg_dreq = getelementptr inbounds %struct.nfs_pageio_descriptor, ptr %pgio, i32 0, i32 9
  %18 = ptrtoint ptr %pg_dreq to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pg_dreq, align 4
  %cmp1 = icmp eq ptr %19, null
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %pgio to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %pgio, align 4
  %call = tail call fastcc i64 @i_size_read(ptr noundef %21)
  %wb_index.i = getelementptr inbounds %struct.nfs_page, ptr %req, i32 0, i32 3
  %22 = ptrtoint ptr %wb_index.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %wb_index.i, align 4
  %conv.i = zext i32 %23 to i64
  %wb_offset.i = getelementptr inbounds %struct.nfs_page, ptr %req, i32 0, i32 4
  %24 = ptrtoint ptr %wb_offset.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %wb_offset.i, align 4
  %conv1.i = zext i32 %25 to i64
  %shl.i.neg = mul nsw i64 %conv.i, -4096
  %add.i.neg = sub i64 %call, %conv1.i
  %sub = add i64 %add.i.neg, %shl.i.neg
  br label %if.end

if.else:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %call5 = tail call i32 @nfs_dreq_bytes_left(ptr noundef nonnull %19) #16
  %conv = sext i32 %call5 to i64
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %rd_size.0 = phi i64 [ %sub, %if.then2 ], [ %conv, %if.else ]
  %26 = ptrtoint ptr %pgio to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %pgio, align 4
  %wb_lock_context.i = getelementptr inbounds %struct.nfs_page, ptr %req, i32 0, i32 2
  %28 = ptrtoint ptr %wb_lock_context.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %wb_lock_context.i, align 4
  %open_context.i = getelementptr inbounds %struct.nfs_lock_context, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %open_context.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %open_context.i, align 4
  %wb_index.i43 = getelementptr inbounds %struct.nfs_page, ptr %req, i32 0, i32 3
  %32 = ptrtoint ptr %wb_index.i43 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %wb_index.i43, align 4
  %conv.i44 = zext i32 %33 to i64
  %shl.i45 = shl nuw nsw i64 %conv.i44, 12
  %wb_offset.i46 = getelementptr inbounds %struct.nfs_page, ptr %req, i32 0, i32 4
  %34 = ptrtoint ptr %wb_offset.i46 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %wb_offset.i46, align 4
  %conv1.i47 = zext i32 %35 to i64
  %add.i48 = add nuw nsw i64 %shl.i45, %conv1.i47
  %call9 = tail call ptr @pnfs_update_layout(ptr noundef %27, ptr noundef %31, i64 noundef %add.i48, i64 noundef %rd_size.0, i32 noundef 1, i1 noundef zeroext false, i32 noundef 3264)
  %36 = ptrtoint ptr %pg_lseg.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %call9, ptr %pg_lseg.i, align 4
  %cmp.i49 = icmp ugt ptr %call9, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i49, label %if.then13, label %if.end18

if.then13:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %37 = ptrtoint ptr %call9 to i32
  %pg_error = getelementptr inbounds %struct.nfs_pageio_descriptor, ptr %pgio, i32 0, i32 4
  %38 = ptrtoint ptr %pg_error to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %pg_error, align 4
  %39 = ptrtoint ptr %pg_lseg.i to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %pg_lseg.i, align 4
  br label %cleanup

if.end18:                                         ; preds = %if.end
  %cmp20 = icmp eq ptr %call9, null
  br i1 %cmp20, label %if.then22, label %if.end18.cleanup_crit_edge

if.end18.cleanup_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then22:                                        ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @nfs_pageio_reset_read_mds(ptr noundef %pgio) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then22, %if.end18.cleanup_crit_edge, %if.then13, %pnfs_generic_pg_check_range.exit.cleanup_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i64 @i_size_read(ptr noundef %inode) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %i_size_seqcount = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 23
  %dep_map.c48.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 23, i32 1
  %i_size18 = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 14
  br label %do.body

do.body:                                          ; preds = %while.end.do.body_crit_edge, %entry
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #16, !srcloc !440
  %and.i.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %do.body24.critedge.i

if.then.i:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @trace_hardirqs_off() #16
  %1 = tail call ptr @llvm.returnaddress(i32 0) #16
  %2 = ptrtoint ptr %1 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %2) #16
  tail call void @lock_release(ptr noundef %dep_map.c48.i, i32 noundef %2) #16
  tail call void @trace_hardirqs_on() #16
  br label %do.body24.i

do.body24.critedge.i:                             ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %3 = tail call ptr @llvm.returnaddress(i32 0) #16
  %4 = ptrtoint ptr %3 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %4) #16
  tail call void @lock_release(ptr noundef %dep_map.c48.i, i32 noundef %4) #16
  br label %do.body24.i

do.body24.i:                                      ; preds = %do.body24.critedge.i, %if.then.i
  %5 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #16, !srcloc !441
  %and.i.i.i = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool32.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool32.not.i, label %if.then36.i, label %do.body24.i.seqcount_lockdep_reader_access.exit_crit_edge, !prof !416

do.body24.i.seqcount_lockdep_reader_access.exit_crit_edge: ; preds = %do.body24.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %seqcount_lockdep_reader_access.exit

if.then36.i:                                      ; preds = %do.body24.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @warn_bogus_irq_restore() #16
  br label %seqcount_lockdep_reader_access.exit

seqcount_lockdep_reader_access.exit:              ; preds = %if.then36.i, %do.body24.i.seqcount_lockdep_reader_access.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #16, !srcloc !442
  %6 = ptrtoint ptr %i_size_seqcount to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %i_size_seqcount, align 4
  %and29 = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29)
  %tobool.not30 = icmp eq i32 %and29, 0
  br i1 %tobool.not30, label %seqcount_lockdep_reader_access.exit.while.end_crit_edge, label %seqcount_lockdep_reader_access.exit.do.end_crit_edge

seqcount_lockdep_reader_access.exit.do.end_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit
  br label %do.end

seqcount_lockdep_reader_access.exit.while.end_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

do.end:                                           ; preds = %do.end.do.end_crit_edge, %seqcount_lockdep_reader_access.exit.do.end_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !443
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #16, !srcloc !444
  %8 = ptrtoint ptr %i_size_seqcount to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %i_size_seqcount, align 4
  %and = and i32 %9, 1
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.end.while.end_crit_edge, label %do.end.do.end_crit_edge

do.end.do.end_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

do.end.while.end_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.end:                                        ; preds = %do.end.while.end_crit_edge, %seqcount_lockdep_reader_access.exit.while.end_crit_edge
  %.lcssa = phi i32 [ %7, %seqcount_lockdep_reader_access.exit.while.end_crit_edge ], [ %9, %do.end.while.end_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !445
  %10 = ptrtoint ptr %i_size18 to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %i_size18, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !446
  %12 = ptrtoint ptr %i_size_seqcount to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %i_size_seqcount, align 4
  %cmp.i.i.not = icmp eq i32 %13, %.lcssa
  br i1 %cmp.i.i.not, label %do.end24, label %while.end.do.body_crit_edge

while.end.do.body_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

do.end24:                                         ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  ret i64 %11
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfs_dreq_bytes_left(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @nfs_pageio_reset_read_mds(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_generic_pg_init_write(ptr noundef %pgio, ptr nocapture noundef readonly %req, i64 noundef %wb_size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pg_lseg.i = getelementptr inbounds %struct.nfs_pageio_descriptor, ptr %pgio, i32 0, i32 7
  %0 = ptrtoint ptr %pg_lseg.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pg_lseg.i, align 4
  %cmp.i = icmp eq ptr %1, null
  br i1 %cmp.i, label %entry.if.then_crit_edge, label %lor.lhs.false.i

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

lor.lhs.false.i:                                  ; preds = %entry
  %pls_flags.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %pls_flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %pls_flags.i, align 4
  %and1.i.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.not.i = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i.if.then.sink.split_crit_edge, label %pnfs_generic_pg_check_layout.exit

lor.lhs.false.i.if.then.sink.split_crit_edge:     ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.sink.split

pnfs_generic_pg_check_layout.exit:                ; preds = %lor.lhs.false.i
  %4 = ptrtoint ptr %pg_lseg.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %.pr = load ptr, ptr %pg_lseg.i, align 4
  %tobool.not.i28 = icmp eq ptr %.pr, null
  br i1 %tobool.not.i28, label %pnfs_generic_pg_check_layout.exit.if.then_crit_edge, label %land.lhs.true.i

pnfs_generic_pg_check_layout.exit.if.then_crit_edge: ; preds = %pnfs_generic_pg_check_layout.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

land.lhs.true.i:                                  ; preds = %pnfs_generic_pg_check_layout.exit
  %offset.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %.pr, i32 0, i32 3, i32 1
  %5 = ptrtoint ptr %offset.i.i to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %offset.i.i, align 8
  %length.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %.pr, i32 0, i32 3, i32 2
  %7 = ptrtoint ptr %length.i.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %length.i.i, align 8
  %9 = tail call i64 @llvm.uadd.sat.i64(i64 %6, i64 %8) #16
  %wb_index.i.i.i = getelementptr inbounds %struct.nfs_page, ptr %req, i32 0, i32 3
  %10 = ptrtoint ptr %wb_index.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %wb_index.i.i.i, align 4
  %conv.i.i.i = zext i32 %11 to i64
  %shl.i.i.i = shl nuw nsw i64 %conv.i.i.i, 12
  %wb_offset.i.i.i = getelementptr inbounds %struct.nfs_page, ptr %req, i32 0, i32 4
  %12 = ptrtoint ptr %wb_offset.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %wb_offset.i.i.i, align 4
  %conv1.i.i.i = zext i32 %13 to i64
  %add.i.i.i = add nuw nsw i64 %shl.i.i.i, %conv1.i.i.i
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %9)
  %cmp.i.i.i = icmp eq i64 %9, -1
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i.i.i, i64 %9)
  %cmp1.i.i.i = icmp ult i64 %add.i.i.i, %9
  %or.cond.i.i.i = or i1 %cmp.i.i.i, %cmp1.i.i.i
  br i1 %or.cond.i.i.i, label %pnfs_lseg_request_intersecting.exit.i, label %land.lhs.true.i.if.then.sink.split_crit_edge

land.lhs.true.i.if.then.sink.split_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.sink.split

pnfs_lseg_request_intersecting.exit.i:            ; preds = %land.lhs.true.i
  %wb_bytes.i.i = getelementptr inbounds %struct.nfs_page, ptr %req, i32 0, i32 6
  %14 = ptrtoint ptr %wb_bytes.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %wb_bytes.i.i, align 4
  %conv.i.i = zext i32 %15 to i64
  %add.i.i = add nuw nsw i64 %add.i.i.i, %conv.i.i
  call void @__sanitizer_cov_trace_cmp8(i64 %6, i64 %add.i.i)
  %cmp3.i.i.i = icmp ult i64 %6, %add.i.i
  br i1 %cmp3.i.i.i, label %pnfs_generic_pg_check_range.exit, label %pnfs_lseg_request_intersecting.exit.i.if.then.sink.split_crit_edge

pnfs_lseg_request_intersecting.exit.i.if.then.sink.split_crit_edge: ; preds = %pnfs_lseg_request_intersecting.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.sink.split

pnfs_generic_pg_check_range.exit:                 ; preds = %pnfs_lseg_request_intersecting.exit.i
  %16 = ptrtoint ptr %pg_lseg.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pr32.pr = load ptr, ptr %pg_lseg.i, align 4
  %cmp = icmp eq ptr %.pr32.pr, null
  br i1 %cmp, label %pnfs_generic_pg_check_range.exit.if.then_crit_edge, label %pnfs_generic_pg_check_range.exit.if.end14_crit_edge

pnfs_generic_pg_check_range.exit.if.end14_crit_edge: ; preds = %pnfs_generic_pg_check_range.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

pnfs_generic_pg_check_range.exit.if.then_crit_edge: ; preds = %pnfs_generic_pg_check_range.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

if.then.sink.split:                               ; preds = %pnfs_lseg_request_intersecting.exit.i.if.then.sink.split_crit_edge, %land.lhs.true.i.if.then.sink.split_crit_edge, %lor.lhs.false.i.if.then.sink.split_crit_edge
  %.sink = phi ptr [ %1, %lor.lhs.false.i.if.then.sink.split_crit_edge ], [ %.pr, %pnfs_lseg_request_intersecting.exit.i.if.then.sink.split_crit_edge ], [ %.pr, %land.lhs.true.i.if.then.sink.split_crit_edge ]
  tail call void @pnfs_put_lseg(ptr noundef nonnull %.sink) #16
  %17 = ptrtoint ptr %pg_lseg.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %pg_lseg.i, align 4
  br label %if.then

if.then:                                          ; preds = %if.then.sink.split, %pnfs_generic_pg_check_range.exit.if.then_crit_edge, %pnfs_generic_pg_check_layout.exit.if.then_crit_edge, %entry.if.then_crit_edge
  %18 = ptrtoint ptr %pgio to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %pgio, align 4
  %wb_lock_context.i = getelementptr inbounds %struct.nfs_page, ptr %req, i32 0, i32 2
  %20 = ptrtoint ptr %wb_lock_context.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %wb_lock_context.i, align 4
  %open_context.i = getelementptr inbounds %struct.nfs_lock_context, ptr %21, i32 0, i32 2
  %22 = ptrtoint ptr %open_context.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %open_context.i, align 4
  %wb_index.i = getelementptr inbounds %struct.nfs_page, ptr %req, i32 0, i32 3
  %24 = ptrtoint ptr %wb_index.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %wb_index.i, align 4
  %conv.i = zext i32 %25 to i64
  %shl.i = shl nuw nsw i64 %conv.i, 12
  %wb_offset.i = getelementptr inbounds %struct.nfs_page, ptr %req, i32 0, i32 4
  %26 = ptrtoint ptr %wb_offset.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %wb_offset.i, align 4
  %conv1.i = zext i32 %27 to i64
  %add.i = add nuw nsw i64 %shl.i, %conv1.i
  %call2 = tail call ptr @pnfs_update_layout(ptr noundef %19, ptr noundef %23, i64 noundef %add.i, i64 noundef %wb_size, i32 noundef 2, i1 noundef zeroext false, i32 noundef 3264)
  %28 = ptrtoint ptr %pg_lseg.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %call2, ptr %pg_lseg.i, align 4
  %cmp.i30 = icmp ugt ptr %call2, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i30, label %if.then6, label %if.end10

if.then6:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %29 = ptrtoint ptr %call2 to i32
  %pg_error = getelementptr inbounds %struct.nfs_pageio_descriptor, ptr %pgio, i32 0, i32 4
  %30 = ptrtoint ptr %pg_error to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %pg_error, align 4
  %31 = ptrtoint ptr %pg_lseg.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr null, ptr %pg_lseg.i, align 4
  br label %if.end14

if.end10:                                         ; preds = %if.then
  %cmp12 = icmp eq ptr %call2, null
  br i1 %cmp12, label %if.then13, label %if.end10.if.end14_crit_edge

if.end10.if.end14_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

if.then13:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @nfs_pageio_reset_write_mds(ptr noundef %pgio) #16
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end10.if.end14_crit_edge, %if.then6, %pnfs_generic_pg_check_range.exit.if.end14_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @nfs_pageio_reset_write_mds(ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_generic_pg_cleanup(ptr nocapture noundef %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pg_lseg = getelementptr inbounds %struct.nfs_pageio_descriptor, ptr %desc, i32 0, i32 7
  %0 = ptrtoint ptr %pg_lseg to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pg_lseg, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @pnfs_put_lseg(ptr noundef nonnull %1)
  %2 = ptrtoint ptr %pg_lseg to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %pg_lseg, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pnfs_generic_pg_test(ptr noundef %pgio, ptr noundef %prev, ptr noundef %req) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @nfs_generic_pg_test(ptr noundef %pgio, ptr noundef %prev, ptr noundef %req) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %pg_lseg = getelementptr inbounds %struct.nfs_pageio_descriptor, ptr %pgio, i32 0, i32 7
  %0 = ptrtoint ptr %pg_lseg to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pg_lseg, align 4
  %tobool1.not = icmp eq ptr %1, null
  br i1 %tobool1.not, label %if.end.cleanup_crit_edge, label %if.then2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then2:                                         ; preds = %if.end
  %offset = getelementptr inbounds %struct.pnfs_layout_segment, ptr %1, i32 0, i32 3, i32 1
  %2 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %offset, align 8
  %length = getelementptr inbounds %struct.pnfs_layout_segment, ptr %1, i32 0, i32 3, i32 2
  %4 = ptrtoint ptr %length to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %length, align 8
  %6 = tail call i64 @llvm.uadd.sat.i64(i64 %3, i64 %5) #16
  %wb_index.i = getelementptr inbounds %struct.nfs_page, ptr %req, i32 0, i32 3
  %7 = ptrtoint ptr %wb_index.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %wb_index.i, align 4
  %conv.i = zext i32 %8 to i64
  %shl.i = shl nuw nsw i64 %conv.i, 12
  %wb_offset.i = getelementptr inbounds %struct.nfs_page, ptr %req, i32 0, i32 4
  %9 = ptrtoint ptr %wb_offset.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %wb_offset.i, align 4
  %conv1.i = zext i32 %10 to i64
  %add.i = add nuw nsw i64 %shl.i, %conv1.i
  call void @__sanitizer_cov_trace_cmp8(i64 %6, i64 %add.i)
  %cmp.not = icmp ugt i64 %6, %add.i
  br i1 %cmp.not, label %if.end9, label %if.then2.cleanup_crit_edge

if.then2.cleanup_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end9:                                          ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  %sub = sub i64 %6, %add.i
  %conv = zext i32 %call to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %sub, i64 %conv)
  %cmp10 = icmp ult i64 %sub, %conv
  %conv13 = trunc i64 %sub to i32
  %spec.select = select i1 %cmp10, i32 %conv13, i32 %call
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %if.then2.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 0, %if.then2.cleanup_crit_edge ], [ %call, %if.end.cleanup_crit_edge ], [ %spec.select, %if.end9 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfs_generic_pg_test(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pnfs_write_done_resend_to_mds(ptr noundef %hdr) #0 align 64 {
entry:
  %pgio = alloca %struct.nfs_pageio_descriptor, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 92, ptr nonnull %pgio) #16
  %0 = call ptr @memset(ptr %pgio, i32 255, i32 92)
  %1 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %hdr, align 8
  %completion_ops = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 10
  %3 = ptrtoint ptr %completion_ops to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %completion_ops, align 8
  call void @nfs_pageio_init_write(ptr noundef nonnull %pgio, ptr noundef %2, i32 noundef 4, i1 noundef zeroext true, ptr noundef %4) #16
  %context = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 20, i32 2
  %5 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %context, align 4
  %flags = getelementptr inbounds %struct.nfs_open_context, ptr %6, i32 0, i32 7
  call void @_set_bit(i32 noundef 1, ptr noundef %flags) #16
  %call = call i32 @nfs_pageio_resend(ptr noundef nonnull %pgio, ptr noundef %hdr) #16
  call void @llvm.lifetime.end.p0(i64 92, ptr nonnull %pgio) #16
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @nfs_pageio_init_write(ptr noundef, ptr noundef, i32 noundef, i1 noundef zeroext, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfs_pageio_resend(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_ld_write_done(ptr noundef %hdr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pnfs_error = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 14
  %0 = ptrtoint ptr %pnfs_error to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %pnfs_error, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge, !prof !413

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %2 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %hdr, align 8
  %lseg = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 6
  %4 = ptrtoint ptr %lseg to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %lseg, align 4
  %mds_offset = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 24
  %6 = ptrtoint ptr %mds_offset to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %mds_offset, align 8
  %count = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 21, i32 2
  %8 = ptrtoint ptr %count to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %count, align 8
  %add = add i64 %9, %7
  tail call void @pnfs_set_layoutcommit(ptr noundef %3, ptr noundef %5, i64 noundef %add)
  %mds_ops = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 8
  %10 = ptrtoint ptr %mds_ops to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mds_ops, align 8
  %rpc_call_done = getelementptr inbounds %struct.rpc_call_ops, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %rpc_call_done to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %rpc_call_done, align 4
  %task = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 18
  tail call void %13(ptr noundef %task, ptr noundef %hdr) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %14 = ptrtoint ptr %pnfs_error to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %pnfs_error, align 8
  tail call fastcc void @trace_nfs4_pnfs_write(ptr noundef %hdr, i32 noundef %15)
  %16 = ptrtoint ptr %pnfs_error to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %pnfs_error, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool6.not = icmp eq i32 %17, 0
  br i1 %tobool6.not, label %if.end.if.end14_crit_edge, label %if.then13, !prof !413

if.end.if.end14_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

if.then13:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @pnfs_ld_handle_write_error(ptr noundef %hdr)
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end.if.end14_crit_edge
  %mds_ops15 = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 8
  %18 = ptrtoint ptr %mds_ops15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %mds_ops15, align 8
  %rpc_release = getelementptr inbounds %struct.rpc_call_ops, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %rpc_release to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %rpc_release, align 4
  tail call void %21(ptr noundef %hdr) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_set_layoutcommit(ptr noundef %inode, ptr noundef %lseg, i64 noundef %end_pos) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %i_lock = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %flags = getelementptr i8, ptr %inode, i32 -308
  %call1 = tail call i32 @_test_and_set_bit(i32 noundef 9, ptr noundef %flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  %layout = getelementptr i8, ptr %inode, i32 -32
  %0 = ptrtoint ptr %layout to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %layout, align 8
  %plh_lwb = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 13
  br i1 %tobool.not, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = ptrtoint ptr %plh_lwb to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 %end_pos, ptr %plh_lwb, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %3 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %3, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %if.then.if.end16_crit_edge, label %do.end, !prof !413

if.then.if.end16_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16

do.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %i_ino = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 11
  %4 = ptrtoint ptr %i_ino to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %i_ino, align 8
  %call7 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.95, ptr noundef nonnull @.str.96, i32 noundef %5) #19
  br label %if.end16

if.else:                                          ; preds = %entry
  %6 = ptrtoint ptr %plh_lwb to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %plh_lwb, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %7, i64 %end_pos)
  %cmp = icmp slt i64 %7, %end_pos
  br i1 %cmp, label %if.then12, label %if.else.if.end16_crit_edge

if.else.if.end16_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16

if.then12:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %plh_lwb to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %end_pos, ptr %plh_lwb, align 8
  br label %if.end16

if.end16:                                         ; preds = %if.then12, %if.else.if.end16_crit_edge, %do.end, %if.then.if.end16_crit_edge
  %pls_flags = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 6
  %call17 = tail call i32 @_test_and_set_bit(i32 noundef 2, ptr noundef %pls_flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %tobool18.not = icmp ne i32 %call17, 0
  %tobool.not.i = icmp eq ptr %lseg, null
  %or.cond = or i1 %tobool.not.i, %tobool18.not
  br i1 %or.cond, label %if.end16.if.end21_crit_edge, label %if.then.i

if.end16.if.end21_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end21

if.then.i:                                        ; preds = %if.end16
  %pls_refcount.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 4
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %pls_refcount.i, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %pls_refcount.i, i32 1, i32 3, i32 1) #16
  %9 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %pls_refcount.i, ptr %pls_refcount.i, i32 1, ptr elementtype(i32) %pls_refcount.i) #16, !srcloc !415
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %9, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !416

if.then.i.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %10 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %10)
  %.not.i.i.i.i = icmp sgt i32 %10, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !413

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.refcount_inc.exit.i_crit_edge:    ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %refcount_inc.exit.i

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %pls_refcount.i, i32 noundef %.sink.i.i.i.i) #16
  br label %refcount_inc.exit.i

refcount_inc.exit.i:                              ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !435
  br label %if.end21

if.end21:                                         ; preds = %refcount_inc.exit.i, %if.end16.if.end21_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %11 = load i32, ptr @nfs_debug, align 4
  %and24 = and i32 %11, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and24)
  %tobool25.not = icmp eq i32 %and24, 0
  br i1 %tobool25.not, label %if.end21.do.end42_crit_edge, label %do.end35, !prof !413

if.end21.do.end42_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end42

do.end35:                                         ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #18
  %layout37 = getelementptr i8, ptr %inode, i32 -32
  %12 = ptrtoint ptr %layout37 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %layout37, align 8
  %plh_lwb38 = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %13, i32 0, i32 13
  %14 = ptrtoint ptr %plh_lwb38 to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %plh_lwb38, align 8
  %call39 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.98, ptr noundef nonnull @.str.96, ptr noundef %lseg, i64 noundef %15) #19
  br label %do.end42

do.end42:                                         ; preds = %do.end35, %if.end21.do.end42_crit_edge
  br i1 %tobool.not, label %if.then44, label %do.end42.if.end45_crit_edge

do.end42.if.end45_crit_edge:                      ; preds = %do.end42
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end45

if.then44:                                        ; preds = %do.end42
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @__mark_inode_dirty(ptr noundef %inode, i32 noundef 1) #16
  br label %if.end45

if.end45:                                         ; preds = %if.then44, %do.end42.if.end45_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_nfs4_pnfs_write(ptr noundef %hdr, i32 noundef %error) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_nfs4_pnfs_write, i32 0, i32 1), ptr blockaddress(@trace_nfs4_pnfs_write, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !430

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !413

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.128, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !447
  %call42 = tail call i32 @__traceiter_nfs4_pnfs_write(ptr noundef null, ptr noundef %hdr, i32 noundef %error) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !448
  %13 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !413

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.128, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !433
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_nfs4_pnfs_write, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_nfs4_pnfs_write, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_nfs4_pnfs_write.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_nfs4_pnfs_write.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.126, i32 noundef 1619, ptr noundef nonnull @.str.127) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !434
  %31 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pnfs_ld_handle_write_error(ptr noundef %hdr) unnamed_addr #0 align 64 {
entry:
  %pgio.i = alloca %struct.nfs_pageio_descriptor, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %0 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %0, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end4_crit_edge, label %do.end, !prof !413

entry.do.end4_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end4

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %pnfs_error = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 14
  %1 = ptrtoint ptr %pnfs_error to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %pnfs_error, align 8
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.159, i32 noundef %2) #19
  br label %do.end4

do.end4:                                          ; preds = %do.end, %entry.do.end4_crit_edge
  %3 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %hdr, align 8
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %4, i32 0, i32 8
  %5 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %6, i32 0, i32 33
  %7 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %s_fs_info.i.i, align 16
  %pnfs_curr_ld = getelementptr inbounds %struct.nfs_server, ptr %8, i32 0, i32 46
  %9 = ptrtoint ptr %pnfs_curr_ld to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pnfs_curr_ld, align 4
  %flags = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %10, i32 0, i32 4
  %11 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %flags, align 4
  %and6 = and i32 %12, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp eq i32 %and6, 0
  %cmp.i.not.i = icmp eq ptr %10, null
  %or.cond = select i1 %tobool7.not, i1 true, i1 %cmp.i.not.i
  br i1 %or.cond, label %do.end4.if.end11_crit_edge, label %land.lhs.true.i

do.end4.if.end11_crit_edge:                       ; preds = %do.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

land.lhs.true.i:                                  ; preds = %do.end4
  %layout.i = getelementptr i8, ptr %4, i32 -32
  %13 = ptrtoint ptr %layout.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %layout.i, align 8
  %tobool3.not.i = icmp eq ptr %14, null
  br i1 %tobool3.not.i, label %land.lhs.true.i.if.end11_crit_edge, label %if.then.i

land.lhs.true.i.if.end11_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %plh_flags.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %14, i32 0, i32 8
  tail call void @_set_bit(i32 noundef 5, ptr noundef %plh_flags.i) #16
  %call5.i = tail call i32 @_pnfs_return_layout(ptr noundef %4) #16
  br label %if.end11

if.end11:                                         ; preds = %if.then.i, %land.lhs.true.i.if.end11_crit_edge, %do.end4.if.end11_crit_edge
  %flags12 = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 17
  %call13 = tail call i32 @_test_and_set_bit(i32 noundef 2, ptr noundef %flags12) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.then15, label %if.end11.if.end17_crit_edge

if.end11.if.end17_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

if.then15:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.start.p0(i64 92, ptr nonnull %pgio.i) #16
  %15 = call ptr @memset(ptr %pgio.i, i32 255, i32 92)
  %16 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %hdr, align 8
  %completion_ops.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 10
  %18 = ptrtoint ptr %completion_ops.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %completion_ops.i, align 8
  call void @nfs_pageio_init_write(ptr noundef nonnull %pgio.i, ptr noundef %17, i32 noundef 4, i1 noundef zeroext true, ptr noundef %19) #16
  %context.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 20, i32 2
  %20 = ptrtoint ptr %context.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %context.i, align 4
  %flags.i = getelementptr inbounds %struct.nfs_open_context, ptr %21, i32 0, i32 7
  call void @_set_bit(i32 noundef 1, ptr noundef %flags.i) #16
  %call.i = call i32 @nfs_pageio_resend(ptr noundef nonnull %pgio.i, ptr noundef %hdr) #16
  call void @llvm.lifetime.end.p0(i64 92, ptr nonnull %pgio.i) #16
  %tk_status = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 18, i32 1
  %22 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %call.i, ptr %tk_status, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end11.if.end17_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pnfs_generic_pg_writepages(ptr noundef %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pg_rw_ops = getelementptr inbounds %struct.nfs_pageio_descriptor, ptr %desc, i32 0, i32 2
  %0 = ptrtoint ptr %pg_rw_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pg_rw_ops, align 4
  %call = tail call ptr @nfs_pgio_header_alloc(ptr noundef %1) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %pg_error = getelementptr inbounds %struct.nfs_pageio_descriptor, ptr %desc, i32 0, i32 4
  %2 = ptrtoint ptr %pg_error to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -12, ptr %pg_error, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @nfs_pgheader_init(ptr noundef %desc, ptr noundef nonnull %call, ptr noundef nonnull @pnfs_writehdr_free) #16
  %pg_lseg = getelementptr inbounds %struct.nfs_pageio_descriptor, ptr %desc, i32 0, i32 7
  %3 = ptrtoint ptr %pg_lseg to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %pg_lseg, align 4
  %tobool.not.i = icmp eq ptr %4, null
  br i1 %tobool.not.i, label %if.end.pnfs_get_lseg.exit_crit_edge, label %if.then.i

if.end.pnfs_get_lseg.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_get_lseg.exit

if.then.i:                                        ; preds = %if.end
  %pls_refcount.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %4, i32 0, i32 4
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %pls_refcount.i, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %pls_refcount.i, i32 1, i32 3, i32 1) #16
  %5 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %pls_refcount.i, ptr %pls_refcount.i, i32 1, ptr elementtype(i32) %pls_refcount.i) #16, !srcloc !415
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %5, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !416

if.then.i.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %6 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %6)
  %.not.i.i.i.i = icmp sgt i32 %6, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !413

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.refcount_inc.exit.i_crit_edge:    ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %refcount_inc.exit.i

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %pls_refcount.i, i32 noundef %.sink.i.i.i.i) #16
  br label %refcount_inc.exit.i

refcount_inc.exit.i:                              ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !435
  br label %pnfs_get_lseg.exit

pnfs_get_lseg.exit:                               ; preds = %refcount_inc.exit.i, %if.end.pnfs_get_lseg.exit_crit_edge
  %lseg = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 6
  %7 = ptrtoint ptr %lseg to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %4, ptr %lseg, align 4
  %call3 = tail call i32 @nfs_generic_pgio(ptr noundef %desc, ptr noundef nonnull %call) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.then5, label %pnfs_get_lseg.exit.cleanup_crit_edge

pnfs_get_lseg.exit.cleanup_crit_edge:             ; preds = %pnfs_get_lseg.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then5:                                         ; preds = %pnfs_get_lseg.exit
  %pg_ioflags = getelementptr inbounds %struct.nfs_pageio_descriptor, ptr %desc, i32 0, i32 3
  %8 = ptrtoint ptr %pg_ioflags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %pg_ioflags, align 4
  %pg_rpc_callops.i = getelementptr inbounds %struct.nfs_pageio_descriptor, ptr %desc, i32 0, i32 5
  %10 = ptrtoint ptr %pg_rpc_callops.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %pg_rpc_callops.i, align 4
  %12 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %call, align 8
  %i_sb.i.i.i = getelementptr inbounds %struct.inode, ptr %13, i32 0, i32 8
  %14 = ptrtoint ptr %i_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %i_sb.i.i.i, align 4
  %s_fs_info.i.i.i.i = getelementptr inbounds %struct.super_block, ptr %15, i32 0, i32 33
  %16 = ptrtoint ptr %s_fs_info.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %s_fs_info.i.i.i.i, align 16
  %mds_ops.i.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 8
  %18 = ptrtoint ptr %mds_ops.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %11, ptr %mds_ops.i.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %19 = load i32, ptr @nfs_debug, align 4
  %and.i.i = and i32 %19, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then5.do.end8.i.i_crit_edge, label %do.end.i.i, !prof !413

if.then5.do.end8.i.i_crit_edge:                   ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end8.i.i

do.end.i.i:                                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #18
  %i_ino.i.i = getelementptr inbounds %struct.inode, ptr %13, i32 0, i32 11
  %20 = ptrtoint ptr %i_ino.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %i_ino.i.i, align 8
  %count.i.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 20, i32 6
  %22 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %count.i.i, align 8
  %offset.i.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 20, i32 5
  %24 = ptrtoint ptr %offset.i.i to i32
  call void @__asan_load8_noabort(i32 %24)
  %25 = load i64, ptr %offset.i.i, align 8
  %call6.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.161, ptr noundef nonnull @.str.162, i32 noundef %21, i32 noundef %23, i64 noundef %25, i32 noundef %9) #19
  br label %do.end8.i.i

do.end8.i.i:                                      ; preds = %do.end.i.i, %if.then5.do.end8.i.i_crit_edge
  %pnfs_curr_ld.i.i = getelementptr inbounds %struct.nfs_server, ptr %17, i32 0, i32 46
  %26 = ptrtoint ptr %pnfs_curr_ld.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %pnfs_curr_ld.i.i, align 4
  %write_pagelist.i.i = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %27, i32 0, i32 20
  %28 = ptrtoint ptr %write_pagelist.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %write_pagelist.i.i, align 4
  %call9.i.i = tail call i32 %29(ptr noundef nonnull %call, i32 noundef %9) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call9.i.i)
  %cmp.not.i.i = icmp eq i32 %call9.i.i, 1
  br i1 %cmp.not.i.i, label %do.end8.i.i.do.body12.i.i_crit_edge, label %if.then10.i.i

do.end8.i.i.do.body12.i.i_crit_edge:              ; preds = %do.end8.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body12.i.i

if.then10.i.i:                                    ; preds = %do.end8.i.i
  %30 = ptrtoint ptr %i_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %i_sb.i.i.i, align 4
  %s_fs_info.i.i.i.i.i = getelementptr inbounds %struct.super_block, ptr %31, i32 0, i32 33
  %32 = ptrtoint ptr %s_fs_info.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %s_fs_info.i.i.i.i.i, align 16
  %34 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #16, !srcloc !440
  %io_stats.i.i.i.i = getelementptr inbounds %struct.nfs_server, ptr %33, i32 0, i32 6
  %35 = ptrtoint ptr %io_stats.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %io_stats.i.i.i.i, align 8
  %arrayidx.i.i.i.i = getelementptr %struct.nfs_iostats, ptr %36, i32 0, i32 2, i32 26
  %37 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  %38 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i.i = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i.i to ptr
  %cpu.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 3
  %40 = ptrtoint ptr %cpu.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %cpu.i.i.i.i, align 4
  %arrayidx13.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %41
  %42 = ptrtoint ptr %arrayidx13.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %arrayidx13.i.i.i.i, align 4
  %add.i.i.i.i20 = add i32 %43, %37
  %44 = inttoptr i32 %add.i.i.i.i20 to ptr
  %45 = ptrtoint ptr %44 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %44, align 4
  %add14.i.i.i.i = add i32 %46, 1
  store i32 %add14.i.i.i.i, ptr %44, align 4
  %47 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #16, !srcloc !441
  %and.i.i.i.i.i.i = and i32 %47, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.then.i.i.i.i, label %if.then10.i.i.nfs_inc_stats.exit.i.i_crit_edge, !prof !416

if.then10.i.i.nfs_inc_stats.exit.i.i_crit_edge:   ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfs_inc_stats.exit.i.i

if.then.i.i.i.i:                                  ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @warn_bogus_irq_restore() #16
  br label %nfs_inc_stats.exit.i.i

nfs_inc_stats.exit.i.i:                           ; preds = %if.then.i.i.i.i, %if.then10.i.i.nfs_inc_stats.exit.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %34) #16, !srcloc !442
  br label %do.body12.i.i

do.body12.i.i:                                    ; preds = %nfs_inc_stats.exit.i.i, %do.end8.i.i.do.body12.i.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %48 = load i32, ptr @nfs_debug, align 4
  %and13.i.i = and i32 %48, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and13.i.i)
  %tobool14.not.i.i = icmp eq i32 %and13.i.i, 0
  br i1 %tobool14.not.i.i, label %do.body12.i.i.pnfs_try_to_write_data.exit.i_crit_edge, label %do.end24.i.i, !prof !413

do.body12.i.i.pnfs_try_to_write_data.exit.i_crit_edge: ; preds = %do.body12.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_try_to_write_data.exit.i

do.end24.i.i:                                     ; preds = %do.body12.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %call26.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.164, ptr noundef nonnull @.str.162, i32 noundef %call9.i.i) #19
  br label %pnfs_try_to_write_data.exit.i

pnfs_try_to_write_data.exit.i:                    ; preds = %do.end24.i.i, %do.body12.i.i.pnfs_try_to_write_data.exit.i_crit_edge
  %49 = zext i32 %call9.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %49, ptr @__sancov_gen_cov_switch_values.183)
  switch i32 %call9.i.i, label %pnfs_try_to_write_data.exit.i.cleanup_crit_edge [
    i32 1, label %sw.bb.i
    i32 2, label %sw.bb1.i
  ]

pnfs_try_to_write_data.exit.i.cleanup_crit_edge:  ; preds = %pnfs_try_to_write_data.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb.i:                                          ; preds = %pnfs_try_to_write_data.exit.i
  %call.i.i = tail call ptr @nfs_pgio_current_mirror(ptr noundef %desc) #16
  %flags.i.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 17
  %call1.i.i = tail call i32 @_test_and_set_bit(i32 noundef 2, ptr noundef %flags.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i13.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i13.i, label %if.then.i.i, label %sw.bb.i.pnfs_write_through_mds.exit.i_crit_edge

sw.bb.i.pnfs_write_through_mds.exit.i_crit_edge:  ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_write_through_mds.exit.i

if.then.i.i:                                      ; preds = %sw.bb.i
  %pages.i.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 2
  %50 = ptrtoint ptr %pages.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile ptr, ptr %pages.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %51, %pages.i.i
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i.list_splice_tail_init.exit.i.i_crit_edge, label %if.then.i.i.i

if.then.i.i.list_splice_tail_init.exit.i.i_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_splice_tail_init.exit.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %call.i.i, i32 0, i32 1
  %52 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %prev.i.i.i, align 4
  %prev2.i.i.i.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 2, i32 1
  %54 = ptrtoint ptr %prev2.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %prev2.i.i.i.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %51, i32 0, i32 1
  %56 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %53, ptr %prev3.i.i.i.i, align 4
  %57 = ptrtoint ptr %53 to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %51, ptr %53, align 4
  %58 = ptrtoint ptr %55 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %call.i.i, ptr %55, align 4
  store ptr %55, ptr %prev.i.i.i, align 4
  %59 = ptrtoint ptr %pages.i.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store volatile ptr %pages.i.i, ptr %pages.i.i, align 4
  store ptr %pages.i.i, ptr %prev2.i.i.i.i, align 4
  br label %list_splice_tail_init.exit.i.i

list_splice_tail_init.exit.i.i:                   ; preds = %if.then.i.i.i, %if.then.i.i.list_splice_tail_init.exit.i.i_crit_edge
  tail call void @nfs_pageio_reset_write_mds(ptr noundef %desc) #16
  %pg_recoalesce.i.i = getelementptr inbounds %struct.nfs_pgio_mirror, ptr %call.i.i, i32 0, i32 5
  %60 = ptrtoint ptr %pg_recoalesce.i.i to i32
  call void @__asan_load1_noabort(i32 %60)
  %bf.load.i.i = load i8, ptr %pg_recoalesce.i.i, align 4
  %bf.set.i.i = or i8 %bf.load.i.i, -128
  store i8 %bf.set.i.i, ptr %pg_recoalesce.i.i, align 4
  br label %pnfs_write_through_mds.exit.i

pnfs_write_through_mds.exit.i:                    ; preds = %list_splice_tail_init.exit.i.i, %sw.bb.i.pnfs_write_through_mds.exit.i_crit_edge
  %completion_ops.i.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 10
  %61 = ptrtoint ptr %completion_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %completion_ops.i.i, align 8
  %completion.i.i = getelementptr inbounds %struct.nfs_pgio_completion_ops, ptr %62, i32 0, i32 2
  br label %sw.epilog.sink.split.i

sw.bb1.i:                                         ; preds = %pnfs_try_to_write_data.exit.i
  %flags.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 17
  %call2.i = tail call i32 @_test_and_set_bit(i32 noundef 2, ptr noundef %flags.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i21 = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i21, label %if.then.i22, label %sw.bb1.i.if.end.i_crit_edge

sw.bb1.i.if.end.i_crit_edge:                      ; preds = %sw.bb1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then.i22:                                      ; preds = %sw.bb1.i
  %call3.i = tail call ptr @nfs_pgio_current_mirror(ptr noundef %desc) #16
  %pages.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 2
  %63 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load volatile ptr, ptr %pages.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %64, %pages.i
  br i1 %cmp.i.not.i.i, label %if.then.i22.list_splice_init.exit.i_crit_edge, label %if.then.i14.i

if.then.i22.list_splice_init.exit.i_crit_edge:    ; preds = %if.then.i22
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_splice_init.exit.i

if.then.i14.i:                                    ; preds = %if.then.i22
  call void @__sanitizer_cov_trace_pc() #18
  %65 = ptrtoint ptr %call3.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %call3.i, align 4
  %prev2.i.i.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 2, i32 1
  %67 = ptrtoint ptr %prev2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %prev2.i.i.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %64, i32 0, i32 1
  %69 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %call3.i, ptr %prev3.i.i.i, align 4
  store ptr %64, ptr %call3.i, align 4
  %70 = ptrtoint ptr %68 to i32
  call void @__asan_store4_noabort(i32 %70)
  store ptr %66, ptr %68, align 4
  %prev6.i.i.i = getelementptr inbounds %struct.list_head, ptr %66, i32 0, i32 1
  %71 = ptrtoint ptr %prev6.i.i.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr %68, ptr %prev6.i.i.i, align 4
  %72 = ptrtoint ptr %pages.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store volatile ptr %pages.i, ptr %pages.i, align 4
  store ptr %pages.i, ptr %prev2.i.i.i, align 4
  br label %list_splice_init.exit.i

list_splice_init.exit.i:                          ; preds = %if.then.i14.i, %if.then.i22.list_splice_init.exit.i_crit_edge
  %pg_recoalesce.i = getelementptr inbounds %struct.nfs_pgio_mirror, ptr %call3.i, i32 0, i32 5
  %73 = ptrtoint ptr %pg_recoalesce.i to i32
  call void @__asan_load1_noabort(i32 %73)
  %bf.load.i = load i8, ptr %pg_recoalesce.i, align 4
  %bf.set.i = or i8 %bf.load.i, -128
  store i8 %bf.set.i, ptr %pg_recoalesce.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %list_splice_init.exit.i, %sw.bb1.i.if.end.i_crit_edge
  %74 = ptrtoint ptr %mds_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %mds_ops.i.i, align 8
  %rpc_release.i = getelementptr inbounds %struct.rpc_call_ops, ptr %75, i32 0, i32 3
  br label %sw.epilog.sink.split.i

sw.epilog.sink.split.i:                           ; preds = %if.end.i, %pnfs_write_through_mds.exit.i
  %rpc_release.sink.i = phi ptr [ %rpc_release.i, %if.end.i ], [ %completion.i.i, %pnfs_write_through_mds.exit.i ]
  %76 = ptrtoint ptr %rpc_release.sink.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %rpc_release.sink.i, align 4
  tail call void %77(ptr noundef nonnull %call) #16
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog.sink.split.i, %pnfs_try_to_write_data.exit.i.cleanup_crit_edge, %pnfs_get_lseg.exit.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ -12, %if.then ], [ %call3, %pnfs_get_lseg.exit.cleanup_crit_edge ], [ 0, %pnfs_try_to_write_data.exit.i.cleanup_crit_edge ], [ 0, %sw.epilog.sink.split.i ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @nfs_pgio_header_alloc(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @nfs_pgheader_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @pnfs_writehdr_free(ptr noundef %hdr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %lseg = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 6
  %0 = ptrtoint ptr %lseg to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %lseg, align 4
  tail call void @pnfs_put_lseg(ptr noundef %1)
  tail call void @nfs_pgio_header_free(ptr noundef %hdr) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfs_generic_pgio(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pnfs_read_done_resend_to_mds(ptr noundef %hdr) #0 align 64 {
entry:
  %pgio = alloca %struct.nfs_pageio_descriptor, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 92, ptr nonnull %pgio) #16
  %0 = call ptr @memset(ptr %pgio, i32 255, i32 92)
  %1 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %hdr, align 8
  %completion_ops = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 10
  %3 = ptrtoint ptr %completion_ops to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %completion_ops, align 8
  call void @nfs_pageio_init_read(ptr noundef nonnull %pgio, ptr noundef %2, i1 noundef zeroext true, ptr noundef %4) #16
  %call = call i32 @nfs_pageio_resend(ptr noundef nonnull %pgio, ptr noundef %hdr) #16
  call void @llvm.lifetime.end.p0(i64 92, ptr nonnull %pgio) #16
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @nfs_pageio_init_read(ptr noundef, ptr noundef, i1 noundef zeroext, ptr noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_ld_read_done(ptr noundef %hdr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pnfs_error = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 14
  %0 = ptrtoint ptr %pnfs_error to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %pnfs_error, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge, !prof !413

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %mds_ops = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 8
  %2 = ptrtoint ptr %mds_ops to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %mds_ops, align 8
  %rpc_call_done = getelementptr inbounds %struct.rpc_call_ops, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %rpc_call_done to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rpc_call_done, align 4
  %task = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 18
  tail call void %5(ptr noundef %task, ptr noundef %hdr) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %6 = ptrtoint ptr %pnfs_error to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %pnfs_error, align 8
  tail call fastcc void @trace_nfs4_pnfs_read(ptr noundef %hdr, i32 noundef %7)
  %8 = ptrtoint ptr %pnfs_error to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %pnfs_error, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool6.not = icmp eq i32 %9, 0
  br i1 %tobool6.not, label %if.end.if.end14_crit_edge, label %if.then13, !prof !413

if.end.if.end14_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

if.then13:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @pnfs_ld_handle_read_error(ptr noundef %hdr)
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %if.end.if.end14_crit_edge
  %mds_ops15 = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 8
  %10 = ptrtoint ptr %mds_ops15 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %mds_ops15, align 8
  %rpc_release = getelementptr inbounds %struct.rpc_call_ops, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %rpc_release to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %rpc_release, align 4
  tail call void %13(ptr noundef %hdr) #16
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_nfs4_pnfs_read(ptr noundef %hdr, i32 noundef %error) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_nfs4_pnfs_read, i32 0, i32 1), ptr blockaddress(@trace_nfs4_pnfs_read, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !430

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !413

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.128, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !449
  %call42 = tail call i32 @__traceiter_nfs4_pnfs_read(ptr noundef null, ptr noundef %hdr, i32 noundef %error) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !450
  %13 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !413

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.128, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !433
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_nfs4_pnfs_read, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_nfs4_pnfs_read, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_nfs4_pnfs_read.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_nfs4_pnfs_read.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.126, i32 noundef 1544, ptr noundef nonnull @.str.127) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !434
  %31 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @pnfs_ld_handle_read_error(ptr noundef %hdr) unnamed_addr #0 align 64 {
entry:
  %pgio.i = alloca %struct.nfs_pageio_descriptor, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %0 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %0, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end4_crit_edge, label %do.end, !prof !413

entry.do.end4_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end4

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %pnfs_error = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 14
  %1 = ptrtoint ptr %pnfs_error to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %pnfs_error, align 8
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.166, i32 noundef %2) #19
  br label %do.end4

do.end4:                                          ; preds = %do.end, %entry.do.end4_crit_edge
  %3 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %hdr, align 8
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %4, i32 0, i32 8
  %5 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %6, i32 0, i32 33
  %7 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %s_fs_info.i.i, align 16
  %pnfs_curr_ld = getelementptr inbounds %struct.nfs_server, ptr %8, i32 0, i32 46
  %9 = ptrtoint ptr %pnfs_curr_ld to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %pnfs_curr_ld, align 4
  %flags = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %10, i32 0, i32 4
  %11 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %flags, align 4
  %and6 = and i32 %12, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6)
  %tobool7.not = icmp eq i32 %and6, 0
  %cmp.i.not.i = icmp eq ptr %10, null
  %or.cond = select i1 %tobool7.not, i1 true, i1 %cmp.i.not.i
  br i1 %or.cond, label %do.end4.if.end11_crit_edge, label %land.lhs.true.i

do.end4.if.end11_crit_edge:                       ; preds = %do.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

land.lhs.true.i:                                  ; preds = %do.end4
  %layout.i = getelementptr i8, ptr %4, i32 -32
  %13 = ptrtoint ptr %layout.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %layout.i, align 8
  %tobool3.not.i = icmp eq ptr %14, null
  br i1 %tobool3.not.i, label %land.lhs.true.i.if.end11_crit_edge, label %if.then.i

land.lhs.true.i.if.end11_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  %plh_flags.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %14, i32 0, i32 8
  tail call void @_set_bit(i32 noundef 5, ptr noundef %plh_flags.i) #16
  %call5.i = tail call i32 @_pnfs_return_layout(ptr noundef %4) #16
  br label %if.end11

if.end11:                                         ; preds = %if.then.i, %land.lhs.true.i.if.end11_crit_edge, %do.end4.if.end11_crit_edge
  %flags12 = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 17
  %call13 = tail call i32 @_test_and_set_bit(i32 noundef 2, ptr noundef %flags12) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.then15, label %if.end11.if.end17_crit_edge

if.end11.if.end17_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

if.then15:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.start.p0(i64 92, ptr nonnull %pgio.i) #16
  %15 = call ptr @memset(ptr %pgio.i, i32 255, i32 92)
  %16 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %hdr, align 8
  %completion_ops.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 10
  %18 = ptrtoint ptr %completion_ops.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %completion_ops.i, align 8
  call void @nfs_pageio_init_read(ptr noundef nonnull %pgio.i, ptr noundef %17, i1 noundef zeroext true, ptr noundef %19) #16
  %call.i = call i32 @nfs_pageio_resend(ptr noundef nonnull %pgio.i, ptr noundef %hdr) #16
  call void @llvm.lifetime.end.p0(i64 92, ptr nonnull %pgio.i) #16
  %tk_status = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 18, i32 1
  %20 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %call.i, ptr %tk_status, align 4
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end11.if.end17_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_read_resend_pnfs(ptr noundef %hdr, i32 noundef %mirror_idx) #0 align 64 {
entry:
  %pgio = alloca %struct.nfs_pageio_descriptor, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 92, ptr nonnull %pgio) #16
  %0 = call ptr @memset(ptr %pgio, i32 255, i32 92)
  %flags = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 17
  %call = tail call i32 @_test_and_set_bit(i32 noundef 2, ptr noundef %flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %lseg = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 6
  %1 = ptrtoint ptr %lseg to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %lseg, align 4
  tail call void @pnfs_put_lseg(ptr noundef %2)
  %3 = ptrtoint ptr %lseg to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %lseg, align 4
  %4 = ptrtoint ptr %hdr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %hdr, align 8
  %completion_ops = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 10
  %6 = ptrtoint ptr %completion_ops to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %completion_ops, align 8
  call void @nfs_pageio_init_read(ptr noundef nonnull %pgio, ptr noundef %5, i1 noundef zeroext false, ptr noundef %7) #16
  %pg_mirror_idx = getelementptr inbounds %struct.nfs_pageio_descriptor, ptr %pgio, i32 0, i32 15
  %8 = ptrtoint ptr %pg_mirror_idx to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %mirror_idx, ptr %pg_mirror_idx, align 4
  %call2 = call i32 @nfs_pageio_resend(ptr noundef nonnull %pgio, ptr noundef %hdr) #16
  %tk_status = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 18, i32 1
  %9 = ptrtoint ptr %tk_status to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %call2, ptr %tk_status, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 92, ptr nonnull %pgio) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pnfs_generic_pg_readpages(ptr noundef %desc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pg_rw_ops = getelementptr inbounds %struct.nfs_pageio_descriptor, ptr %desc, i32 0, i32 2
  %0 = ptrtoint ptr %pg_rw_ops to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pg_rw_ops, align 4
  %call = tail call ptr @nfs_pgio_header_alloc(ptr noundef %1) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %pg_error = getelementptr inbounds %struct.nfs_pageio_descriptor, ptr %desc, i32 0, i32 4
  %2 = ptrtoint ptr %pg_error to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -12, ptr %pg_error, align 4
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @nfs_pgheader_init(ptr noundef %desc, ptr noundef nonnull %call, ptr noundef nonnull @pnfs_readhdr_free) #16
  %pg_lseg = getelementptr inbounds %struct.nfs_pageio_descriptor, ptr %desc, i32 0, i32 7
  %3 = ptrtoint ptr %pg_lseg to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %pg_lseg, align 4
  %tobool.not.i = icmp eq ptr %4, null
  br i1 %tobool.not.i, label %if.end.pnfs_get_lseg.exit_crit_edge, label %if.then.i

if.end.pnfs_get_lseg.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_get_lseg.exit

if.then.i:                                        ; preds = %if.end
  %pls_refcount.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %4, i32 0, i32 4
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %pls_refcount.i, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %pls_refcount.i, i32 1, i32 3, i32 1) #16
  %5 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %pls_refcount.i, ptr %pls_refcount.i, i32 1, ptr elementtype(i32) %pls_refcount.i) #16, !srcloc !415
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %5, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !416

if.then.i.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %6 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %6)
  %.not.i.i.i.i = icmp sgt i32 %6, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !413

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.refcount_inc.exit.i_crit_edge:    ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %refcount_inc.exit.i

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %pls_refcount.i, i32 noundef %.sink.i.i.i.i) #16
  br label %refcount_inc.exit.i

refcount_inc.exit.i:                              ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.refcount_inc.exit.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !435
  br label %pnfs_get_lseg.exit

pnfs_get_lseg.exit:                               ; preds = %refcount_inc.exit.i, %if.end.pnfs_get_lseg.exit_crit_edge
  %lseg = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 6
  %7 = ptrtoint ptr %lseg to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %4, ptr %lseg, align 4
  %call3 = tail call i32 @nfs_generic_pgio(ptr noundef %desc, ptr noundef nonnull %call) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %if.then5, label %pnfs_get_lseg.exit.cleanup_crit_edge

pnfs_get_lseg.exit.cleanup_crit_edge:             ; preds = %pnfs_get_lseg.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then5:                                         ; preds = %pnfs_get_lseg.exit
  %pg_rpc_callops.i = getelementptr inbounds %struct.nfs_pageio_descriptor, ptr %desc, i32 0, i32 5
  %8 = ptrtoint ptr %pg_rpc_callops.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %pg_rpc_callops.i, align 4
  %10 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %call, align 8
  %i_sb.i.i.i = getelementptr inbounds %struct.inode, ptr %11, i32 0, i32 8
  %12 = ptrtoint ptr %i_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %i_sb.i.i.i, align 4
  %s_fs_info.i.i.i.i = getelementptr inbounds %struct.super_block, ptr %13, i32 0, i32 33
  %14 = ptrtoint ptr %s_fs_info.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %s_fs_info.i.i.i.i, align 16
  %mds_ops.i.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 8
  %16 = ptrtoint ptr %mds_ops.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %9, ptr %mds_ops.i.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %17 = load i32, ptr @nfs_debug, align 4
  %and.i.i = and i32 %17, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then5.do.end8.i.i_crit_edge, label %do.end.i.i, !prof !413

if.then5.do.end8.i.i_crit_edge:                   ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end8.i.i

do.end.i.i:                                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #18
  %i_ino.i.i = getelementptr inbounds %struct.inode, ptr %11, i32 0, i32 11
  %18 = ptrtoint ptr %i_ino.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %i_ino.i.i, align 8
  %count.i.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 20, i32 6
  %20 = ptrtoint ptr %count.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %count.i.i, align 8
  %offset.i.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 20, i32 5
  %22 = ptrtoint ptr %offset.i.i to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %offset.i.i, align 8
  %call6.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.168, ptr noundef nonnull @.str.169, i32 noundef %19, i32 noundef %21, i64 noundef %23) #19
  br label %do.end8.i.i

do.end8.i.i:                                      ; preds = %do.end.i.i, %if.then5.do.end8.i.i_crit_edge
  %pnfs_curr_ld.i.i = getelementptr inbounds %struct.nfs_server, ptr %15, i32 0, i32 46
  %24 = ptrtoint ptr %pnfs_curr_ld.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %pnfs_curr_ld.i.i, align 4
  %read_pagelist.i.i = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %25, i32 0, i32 19
  %26 = ptrtoint ptr %read_pagelist.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %read_pagelist.i.i, align 4
  %call9.i.i = tail call i32 %27(ptr noundef nonnull %call) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call9.i.i)
  %cmp.not.i.i = icmp eq i32 %call9.i.i, 1
  br i1 %cmp.not.i.i, label %do.end8.i.i.do.body12.i.i_crit_edge, label %if.then10.i.i

do.end8.i.i.do.body12.i.i_crit_edge:              ; preds = %do.end8.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body12.i.i

if.then10.i.i:                                    ; preds = %do.end8.i.i
  %28 = ptrtoint ptr %i_sb.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %i_sb.i.i.i, align 4
  %s_fs_info.i.i.i.i.i = getelementptr inbounds %struct.super_block, ptr %29, i32 0, i32 33
  %30 = ptrtoint ptr %s_fs_info.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %s_fs_info.i.i.i.i.i, align 16
  %32 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #16, !srcloc !440
  %io_stats.i.i.i.i = getelementptr inbounds %struct.nfs_server, ptr %31, i32 0, i32 6
  %33 = ptrtoint ptr %io_stats.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %io_stats.i.i.i.i, align 8
  %arrayidx.i.i.i.i = getelementptr %struct.nfs_iostats, ptr %34, i32 0, i32 2, i32 25
  %35 = ptrtoint ptr %arrayidx.i.i.i.i to i32
  %36 = tail call i32 @llvm.read_register.i32(metadata !400) #16
  %and.i.i.i.i.i = and i32 %36, -16384
  %37 = inttoptr i32 %and.i.i.i.i.i to ptr
  %cpu.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 3
  %38 = ptrtoint ptr %cpu.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %cpu.i.i.i.i, align 4
  %arrayidx13.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %39
  %40 = ptrtoint ptr %arrayidx13.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %arrayidx13.i.i.i.i, align 4
  %add.i.i.i.i19 = add i32 %41, %35
  %42 = inttoptr i32 %add.i.i.i.i19 to ptr
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %42, align 4
  %add14.i.i.i.i = add i32 %44, 1
  store i32 %add14.i.i.i.i, ptr %42, align 4
  %45 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #16, !srcloc !441
  %and.i.i.i.i.i.i = and i32 %45, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.then.i.i.i.i, label %if.then10.i.i.nfs_inc_stats.exit.i.i_crit_edge, !prof !416

if.then10.i.i.nfs_inc_stats.exit.i.i_crit_edge:   ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfs_inc_stats.exit.i.i

if.then.i.i.i.i:                                  ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @warn_bogus_irq_restore() #16
  br label %nfs_inc_stats.exit.i.i

nfs_inc_stats.exit.i.i:                           ; preds = %if.then.i.i.i.i, %if.then10.i.i.nfs_inc_stats.exit.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %32) #16, !srcloc !442
  br label %do.body12.i.i

do.body12.i.i:                                    ; preds = %nfs_inc_stats.exit.i.i, %do.end8.i.i.do.body12.i.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %46 = load i32, ptr @nfs_debug, align 4
  %and13.i.i = and i32 %46, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and13.i.i)
  %tobool14.not.i.i = icmp eq i32 %and13.i.i, 0
  br i1 %tobool14.not.i.i, label %do.body12.i.i.pnfs_try_to_read_data.exit.i_crit_edge, label %do.end24.i.i, !prof !413

do.body12.i.i.pnfs_try_to_read_data.exit.i_crit_edge: ; preds = %do.body12.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_try_to_read_data.exit.i

do.end24.i.i:                                     ; preds = %do.body12.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %call26.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.164, ptr noundef nonnull @.str.169, i32 noundef %call9.i.i) #19
  br label %pnfs_try_to_read_data.exit.i

pnfs_try_to_read_data.exit.i:                     ; preds = %do.end24.i.i, %do.body12.i.i.pnfs_try_to_read_data.exit.i_crit_edge
  %47 = zext i32 %call9.i.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %47, ptr @__sancov_gen_cov_switch_values.184)
  switch i32 %call9.i.i, label %pnfs_try_to_read_data.exit.i.cleanup_crit_edge [
    i32 1, label %sw.bb.i
    i32 2, label %sw.bb1.i
  ]

pnfs_try_to_read_data.exit.i.cleanup_crit_edge:   ; preds = %pnfs_try_to_read_data.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb.i:                                          ; preds = %pnfs_try_to_read_data.exit.i
  %call.i.i = tail call ptr @nfs_pgio_current_mirror(ptr noundef %desc) #16
  %flags.i.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 17
  %call1.i.i = tail call i32 @_test_and_set_bit(i32 noundef 2, ptr noundef %flags.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i13.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i13.i, label %if.then.i.i, label %sw.bb.i.pnfs_read_through_mds.exit.i_crit_edge

sw.bb.i.pnfs_read_through_mds.exit.i_crit_edge:   ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_read_through_mds.exit.i

if.then.i.i:                                      ; preds = %sw.bb.i
  %pages.i.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 2
  %48 = ptrtoint ptr %pages.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load volatile ptr, ptr %pages.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %49, %pages.i.i
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i.list_splice_tail_init.exit.i.i_crit_edge, label %if.then.i.i.i

if.then.i.i.list_splice_tail_init.exit.i.i_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_splice_tail_init.exit.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %call.i.i, i32 0, i32 1
  %50 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %prev.i.i.i, align 4
  %prev2.i.i.i.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 2, i32 1
  %52 = ptrtoint ptr %prev2.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %prev2.i.i.i.i, align 4
  %prev3.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %49, i32 0, i32 1
  %54 = ptrtoint ptr %prev3.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %51, ptr %prev3.i.i.i.i, align 4
  %55 = ptrtoint ptr %51 to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %49, ptr %51, align 4
  %56 = ptrtoint ptr %53 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %call.i.i, ptr %53, align 4
  store ptr %53, ptr %prev.i.i.i, align 4
  %57 = ptrtoint ptr %pages.i.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store volatile ptr %pages.i.i, ptr %pages.i.i, align 4
  store ptr %pages.i.i, ptr %prev2.i.i.i.i, align 4
  br label %list_splice_tail_init.exit.i.i

list_splice_tail_init.exit.i.i:                   ; preds = %if.then.i.i.i, %if.then.i.i.list_splice_tail_init.exit.i.i_crit_edge
  tail call void @nfs_pageio_reset_read_mds(ptr noundef %desc) #16
  %pg_recoalesce.i.i = getelementptr inbounds %struct.nfs_pgio_mirror, ptr %call.i.i, i32 0, i32 5
  %58 = ptrtoint ptr %pg_recoalesce.i.i to i32
  call void @__asan_load1_noabort(i32 %58)
  %bf.load.i.i = load i8, ptr %pg_recoalesce.i.i, align 4
  %bf.set.i.i = or i8 %bf.load.i.i, -128
  store i8 %bf.set.i.i, ptr %pg_recoalesce.i.i, align 4
  br label %pnfs_read_through_mds.exit.i

pnfs_read_through_mds.exit.i:                     ; preds = %list_splice_tail_init.exit.i.i, %sw.bb.i.pnfs_read_through_mds.exit.i_crit_edge
  %completion_ops.i.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 10
  %59 = ptrtoint ptr %completion_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %completion_ops.i.i, align 8
  %completion.i.i = getelementptr inbounds %struct.nfs_pgio_completion_ops, ptr %60, i32 0, i32 2
  br label %sw.epilog.sink.split.i

sw.bb1.i:                                         ; preds = %pnfs_try_to_read_data.exit.i
  %flags.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 17
  %call2.i = tail call i32 @_test_and_set_bit(i32 noundef 2, ptr noundef %flags.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i20 = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i20, label %if.then.i21, label %sw.bb1.i.if.end.i_crit_edge

sw.bb1.i.if.end.i_crit_edge:                      ; preds = %sw.bb1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then.i21:                                      ; preds = %sw.bb1.i
  %call3.i = tail call ptr @nfs_pgio_current_mirror(ptr noundef %desc) #16
  %pages.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 2
  %61 = ptrtoint ptr %pages.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load volatile ptr, ptr %pages.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %62, %pages.i
  br i1 %cmp.i.not.i.i, label %if.then.i21.list_splice_init.exit.i_crit_edge, label %if.then.i14.i

if.then.i21.list_splice_init.exit.i_crit_edge:    ; preds = %if.then.i21
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_splice_init.exit.i

if.then.i14.i:                                    ; preds = %if.then.i21
  call void @__sanitizer_cov_trace_pc() #18
  %63 = ptrtoint ptr %call3.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %call3.i, align 4
  %prev2.i.i.i = getelementptr inbounds %struct.nfs_pgio_header, ptr %call, i32 0, i32 2, i32 1
  %65 = ptrtoint ptr %prev2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %prev2.i.i.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %62, i32 0, i32 1
  %67 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr %call3.i, ptr %prev3.i.i.i, align 4
  store ptr %62, ptr %call3.i, align 4
  %68 = ptrtoint ptr %66 to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %64, ptr %66, align 4
  %prev6.i.i.i = getelementptr inbounds %struct.list_head, ptr %64, i32 0, i32 1
  %69 = ptrtoint ptr %prev6.i.i.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %66, ptr %prev6.i.i.i, align 4
  %70 = ptrtoint ptr %pages.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store volatile ptr %pages.i, ptr %pages.i, align 4
  store ptr %pages.i, ptr %prev2.i.i.i, align 4
  br label %list_splice_init.exit.i

list_splice_init.exit.i:                          ; preds = %if.then.i14.i, %if.then.i21.list_splice_init.exit.i_crit_edge
  %pg_recoalesce.i = getelementptr inbounds %struct.nfs_pgio_mirror, ptr %call3.i, i32 0, i32 5
  %71 = ptrtoint ptr %pg_recoalesce.i to i32
  call void @__asan_load1_noabort(i32 %71)
  %bf.load.i = load i8, ptr %pg_recoalesce.i, align 4
  %bf.set.i = or i8 %bf.load.i, -128
  store i8 %bf.set.i, ptr %pg_recoalesce.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %list_splice_init.exit.i, %sw.bb1.i.if.end.i_crit_edge
  %72 = ptrtoint ptr %mds_ops.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %mds_ops.i.i, align 8
  %rpc_release.i = getelementptr inbounds %struct.rpc_call_ops, ptr %73, i32 0, i32 3
  br label %sw.epilog.sink.split.i

sw.epilog.sink.split.i:                           ; preds = %if.end.i, %pnfs_read_through_mds.exit.i
  %rpc_release.sink.i = phi ptr [ %rpc_release.i, %if.end.i ], [ %completion.i.i, %pnfs_read_through_mds.exit.i ]
  %74 = ptrtoint ptr %rpc_release.sink.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %rpc_release.sink.i, align 4
  tail call void %75(ptr noundef nonnull %call) #16
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog.sink.split.i, %pnfs_try_to_read_data.exit.i.cleanup_crit_edge, %pnfs_get_lseg.exit.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ -12, %if.then ], [ %call3, %pnfs_get_lseg.exit.cleanup_crit_edge ], [ 0, %pnfs_try_to_read_data.exit.i.cleanup_crit_edge ], [ 0, %sw.epilog.sink.split.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @pnfs_readhdr_free(ptr noundef %hdr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %lseg = getelementptr inbounds %struct.nfs_pgio_header, ptr %hdr, i32 0, i32 6
  %0 = ptrtoint ptr %lseg to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %lseg, align 4
  tail call void @pnfs_put_lseg(ptr noundef %1)
  tail call void @nfs_pgio_header_free(ptr noundef %hdr) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_set_lo_fail(ptr nocapture noundef readonly %lseg) #0 align 64 {
entry:
  %range.i = alloca %struct.pnfs_layout_range, align 8
  %head.i = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pls_layout = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 7
  %0 = ptrtoint ptr %pls_layout to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pls_layout, align 4
  %pls_range = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 3
  %2 = ptrtoint ptr %pls_range to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %pls_range, align 8
  %plh_inode.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 15
  %4 = ptrtoint ptr %plh_inode.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %plh_inode.i, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %range.i) #16
  %6 = ptrtoint ptr %range.i to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 -1, ptr %range.i, align 8
  store i32 %3, ptr %range.i, align 8
  %offset.i = getelementptr inbounds %struct.pnfs_layout_range, ptr %range.i, i32 0, i32 1
  %7 = ptrtoint ptr %offset.i to i32
  call void @__asan_store8_noabort(i32 %7)
  store i64 0, ptr %offset.i, align 8
  %length.i = getelementptr inbounds %struct.pnfs_layout_range, ptr %range.i, i32 0, i32 2
  %8 = ptrtoint ptr %length.i to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 -1, ptr %length.i, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %head.i) #16
  %9 = getelementptr inbounds %struct.list_head, ptr %head.i, i32 0, i32 1
  %10 = ptrtoint ptr %head.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %head.i, ptr %head.i, align 4
  %11 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %head.i, ptr %9, align 4
  %i_lock.i = getelementptr inbounds %struct.inode, ptr %5, i32 0, i32 18
  call void @_raw_spin_lock(ptr noundef %i_lock.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %3)
  %cmp.i.i = icmp eq i32 %3, 2
  %cond.i.i = zext i1 %cmp.i.i to i32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %12 = load volatile i32, ptr @jiffies, align 128
  %plh_retry_timestamp.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 7
  %13 = ptrtoint ptr %plh_retry_timestamp.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %plh_retry_timestamp.i.i, align 4
  %plh_flags.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %1, i32 0, i32 8
  %call.i.i = call i32 @_test_and_set_bit(i32 noundef %cond.i.i, ptr noundef %plh_flags.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %entry.pnfs_layout_set_fail_bit.exit.i_crit_edge

entry.pnfs_layout_set_fail_bit.exit.i_crit_edge:  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_layout_set_fail_bit.exit.i

if.then.i.i:                                      ; preds = %entry
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %1, i32 noundef 4) #16
  call void @llvm.prefetch.p0(ptr %1, i32 1, i32 3, i32 1) #16
  %14 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %1, ptr %1, i32 1, ptr elementtype(i32) %1) #16, !srcloc !415
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %14, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.then.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !416

if.then.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.then.i.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %15 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %15)
  %.not.i.i.i.i.i = icmp sgt i32 %15, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.pnfs_layout_set_fail_bit.exit.i_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !413

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.pnfs_layout_set_fail_bit.exit.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_layout_set_fail_bit.exit.i

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.then.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.then.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %1, i32 noundef %.sink.i.i.i.i.i) #16
  br label %pnfs_layout_set_fail_bit.exit.i

pnfs_layout_set_fail_bit.exit.i:                  ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.pnfs_layout_set_fail_bit.exit.i_crit_edge, %entry.pnfs_layout_set_fail_bit.exit.i_crit_edge
  %call2.i = call i32 @pnfs_mark_matching_lsegs_invalid(ptr noundef %1, ptr noundef nonnull %head.i, ptr noundef nonnull %range.i, i32 noundef 0) #16
  call void @_raw_spin_unlock(ptr noundef %i_lock.i) #16
  %16 = ptrtoint ptr %head.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %head.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %17, %head.i
  br i1 %cmp.i.not.i.i, label %pnfs_layout_set_fail_bit.exit.i.pnfs_free_lseg_list.exit.i_crit_edge, label %pnfs_layout_set_fail_bit.exit.i.for.body.i.i_crit_edge

pnfs_layout_set_fail_bit.exit.i.for.body.i.i_crit_edge: ; preds = %pnfs_layout_set_fail_bit.exit.i
  br label %for.body.i.i

pnfs_layout_set_fail_bit.exit.i.pnfs_free_lseg_list.exit.i_crit_edge: ; preds = %pnfs_layout_set_fail_bit.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg_list.exit.i

for.body.i.i:                                     ; preds = %pnfs_free_lseg.exit.i.i.for.body.i.i_crit_edge, %pnfs_layout_set_fail_bit.exit.i.for.body.i.i_crit_edge
  %lseg.021.i.i = phi ptr [ %tmp.0.i.i, %pnfs_free_lseg.exit.i.i.for.body.i.i_crit_edge ], [ %17, %pnfs_layout_set_fail_bit.exit.i.for.body.i.i_crit_edge ]
  %18 = ptrtoint ptr %lseg.021.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %tmp.0.i.i = load ptr, ptr %lseg.021.i.i, align 8
  %call.i.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %lseg.021.i.i) #16
  br i1 %call.i.i.i.i, label %if.end.i.i.i.i, label %for.body.i.i.list_del.exit.i.i_crit_edge

for.body.i.i.list_del.exit.i.i_crit_edge:         ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del.exit.i.i

if.end.i.i.i.i:                                   ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %lseg.021.i.i, i32 0, i32 1
  %19 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %prev.i.i.i.i, align 4
  %21 = ptrtoint ptr %lseg.021.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %lseg.021.i.i, align 4
  %prev1.i.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %prev1.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %20, ptr %prev1.i.i.i.i.i, align 4
  %24 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %22, ptr %20, align 4
  br label %list_del.exit.i.i

list_del.exit.i.i:                                ; preds = %if.end.i.i.i.i, %for.body.i.i.list_del.exit.i.i_crit_edge
  %25 = ptrtoint ptr %lseg.021.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr inttoptr (i32 256 to ptr), ptr %lseg.021.i.i, align 4
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %lseg.021.i.i, i32 0, i32 1
  %26 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %lseg.021.i.i, null
  br i1 %cmp.not.i.i.i, label %list_del.exit.i.i.pnfs_free_lseg.exit.i.i_crit_edge, label %if.then.i.i.i

list_del.exit.i.i.pnfs_free_lseg.exit.i.i_crit_edge: ; preds = %list_del.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg.exit.i.i

if.then.i.i.i:                                    ; preds = %list_del.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %pls_layout.i.i.i = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg.021.i.i, i32 0, i32 7
  %27 = ptrtoint ptr %pls_layout.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %pls_layout.i.i.i, align 4
  %plh_inode.i.i.i = getelementptr inbounds %struct.pnfs_layout_hdr, ptr %28, i32 0, i32 15
  %29 = ptrtoint ptr %plh_inode.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %plh_inode.i.i.i, align 4
  %i_sb.i.i.i.i = getelementptr inbounds %struct.inode, ptr %30, i32 0, i32 8
  %31 = ptrtoint ptr %i_sb.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %i_sb.i.i.i.i, align 4
  %s_fs_info.i.i.i.i.i = getelementptr inbounds %struct.super_block, ptr %32, i32 0, i32 33
  %33 = ptrtoint ptr %s_fs_info.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %s_fs_info.i.i.i.i.i, align 16
  %pnfs_curr_ld.i.i.i = getelementptr inbounds %struct.nfs_server, ptr %34, i32 0, i32 46
  %35 = ptrtoint ptr %pnfs_curr_ld.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %pnfs_curr_ld.i.i.i, align 4
  %free_lseg.i.i.i = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %36, i32 0, i32 12
  %37 = ptrtoint ptr %free_lseg.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %free_lseg.i.i.i, align 4
  call void %38(ptr noundef nonnull %lseg.021.i.i) #16
  br label %pnfs_free_lseg.exit.i.i

pnfs_free_lseg.exit.i.i:                          ; preds = %if.then.i.i.i, %list_del.exit.i.i.pnfs_free_lseg.exit.i.i_crit_edge
  %cmp.not.i.i = icmp eq ptr %tmp.0.i.i, %head.i
  br i1 %cmp.not.i.i, label %pnfs_free_lseg.exit.i.i.pnfs_free_lseg_list.exit.i_crit_edge, label %pnfs_free_lseg.exit.i.i.for.body.i.i_crit_edge

pnfs_free_lseg.exit.i.i.for.body.i.i_crit_edge:   ; preds = %pnfs_free_lseg.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

pnfs_free_lseg.exit.i.i.pnfs_free_lseg_list.exit.i_crit_edge: ; preds = %pnfs_free_lseg.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_free_lseg_list.exit.i

pnfs_free_lseg_list.exit.i:                       ; preds = %pnfs_free_lseg.exit.i.i.pnfs_free_lseg_list.exit.i_crit_edge, %pnfs_layout_set_fail_bit.exit.i.pnfs_free_lseg_list.exit.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %39 = load i32, ptr @nfs_debug, align 4
  %and.i = and i32 %39, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %pnfs_free_lseg_list.exit.i.pnfs_layout_io_set_failed.exit_crit_edge, label %do.end.i, !prof !413

pnfs_free_lseg_list.exit.i.pnfs_layout_io_set_failed.exit_crit_edge: ; preds = %pnfs_free_lseg_list.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_layout_io_set_failed.exit

do.end.i:                                         ; preds = %pnfs_free_lseg_list.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %cond.i = select i1 %cmp.i.i, ptr @.str.174, ptr @.str.175
  %call7.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.172, ptr noundef nonnull @.str.173, ptr noundef nonnull %cond.i) #19
  br label %pnfs_layout_io_set_failed.exit

pnfs_layout_io_set_failed.exit:                   ; preds = %do.end.i, %pnfs_free_lseg_list.exit.i.pnfs_layout_io_set_failed.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %head.i) #16
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %range.i) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @pnfs_cleanup_layoutcommit(ptr noundef %data) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %inode = getelementptr inbounds %struct.nfs4_layoutcommit_data, ptr %data, i32 0, i32 5, i32 3
  %0 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %inode, align 8
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %3, i32 0, i32 33
  %4 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %s_fs_info.i.i, align 16
  %pnfs_curr_ld = getelementptr inbounds %struct.nfs_server, ptr %5, i32 0, i32 46
  %6 = ptrtoint ptr %pnfs_curr_ld to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %pnfs_curr_ld, align 4
  %cleanup_layoutcommit = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %7, i32 0, i32 24
  %8 = ptrtoint ptr %cleanup_layoutcommit to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %cleanup_layoutcommit, align 4
  %tobool.not = icmp eq ptr %9, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void %9(ptr noundef %data) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %10 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %inode, align 8
  %lseg_list = getelementptr inbounds %struct.nfs4_layoutcommit_data, ptr %data, i32 0, i32 2
  %12 = ptrtoint ptr %lseg_list to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %lseg_list, align 4
  %cmp.not19.i = icmp eq ptr %13, %lseg_list
  br i1 %cmp.not19.i, label %if.end.pnfs_list_write_lseg_done.exit_crit_edge, label %if.end.for.body.i_crit_edge

if.end.for.body.i_crit_edge:                      ; preds = %if.end
  br label %for.body.i

if.end.pnfs_list_write_lseg_done.exit_crit_edge:  ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_list_write_lseg_done.exit

for.body.i:                                       ; preds = %list_del_init.exit.i.for.body.i_crit_edge, %if.end.for.body.i_crit_edge
  %.pn.in20.i = phi ptr [ %.pn.i, %list_del_init.exit.i.for.body.i_crit_edge ], [ %13, %if.end.for.body.i_crit_edge ]
  %lseg.0.i = getelementptr i8, ptr %.pn.in20.i, i32 -8
  %14 = ptrtoint ptr %.pn.in20.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %.pn.i = load ptr, ptr %.pn.in20.i, align 8
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in20.i) #16
  br i1 %call.i.i.i, label %if.end.i.i.i, label %for.body.i.list_del_init.exit.i_crit_edge

for.body.i.list_del_init.exit.i_crit_edge:        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_del_init.exit.i

if.end.i.i.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in20.i, i32 0, i32 1
  %15 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev.i.i.i, align 4
  %17 = ptrtoint ptr %.pn.in20.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %.pn.in20.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %prev1.i.i.i.i, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %18, ptr %16, align 4
  br label %list_del_init.exit.i

list_del_init.exit.i:                             ; preds = %if.end.i.i.i, %for.body.i.list_del_init.exit.i_crit_edge
  %21 = ptrtoint ptr %.pn.in20.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %.pn.in20.i, ptr %.pn.in20.i, align 4
  %prev.i3.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in20.i, i32 0, i32 1
  %22 = ptrtoint ptr %prev.i3.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %.pn.in20.i, ptr %prev.i3.i.i, align 4
  tail call void @pnfs_put_lseg(ptr noundef %lseg.0.i) #16
  %cmp.not.i = icmp eq ptr %.pn.i, %lseg_list
  br i1 %cmp.not.i, label %list_del_init.exit.i.pnfs_list_write_lseg_done.exit_crit_edge, label %list_del_init.exit.i.for.body.i_crit_edge

list_del_init.exit.i.for.body.i_crit_edge:        ; preds = %list_del_init.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

list_del_init.exit.i.pnfs_list_write_lseg_done.exit_crit_edge: ; preds = %list_del_init.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_list_write_lseg_done.exit

pnfs_list_write_lseg_done.exit:                   ; preds = %list_del_init.exit.i.pnfs_list_write_lseg_done.exit_crit_edge, %if.end.pnfs_list_write_lseg_done.exit_crit_edge
  %flags.i.i = getelementptr i8, ptr %11, i32 -308
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %flags.i.i, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !419
  tail call void @llvm.prefetch.p0(ptr %flags.i.i, i32 1, i32 3, i32 1) #16
  %23 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_andnot\0A1:\09ldrex\09$0, [$4]\0A\09bic\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %flags.i.i, ptr %flags.i.i, i32 1024, ptr elementtype(i32) %flags.i.i) #16, !srcloc !420
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !429
  tail call void @wake_up_bit(ptr noundef %flags.i.i, i32 noundef 10) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfs_wait_bit_killable(ptr noundef, i32 noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @nfs_fattr_init(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfs4_proc_layoutcommit(ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pnfs_generic_sync(ptr noundef %inode, i1 zeroext %datasync) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @pnfs_layoutcommit_inode(ptr noundef %inode, i1 noundef zeroext true)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local noalias ptr @pnfs_mdsthreshold_alloc() local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3392, i32 noundef 40) #22
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %do.body, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body:                                          ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %1 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %1, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %do.body.cleanup_crit_edge, label %do.end, !prof !413

do.body.cleanup_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.end:                                           ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %call6 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.105, ptr noundef nonnull @.str.106) #19
  br label %cleanup

cleanup:                                          ; preds = %do.end, %do.body.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret ptr %call7.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @pnfs_report_layoutstat(ptr noundef %inode, i32 noundef %gfp_flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 33
  %2 = ptrtoint ptr %s_fs_info.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_fs_info.i.i, align 16
  %pnfs_curr_ld = getelementptr inbounds %struct.nfs_server, ptr %3, i32 0, i32 46
  %4 = ptrtoint ptr %pnfs_curr_ld to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %pnfs_curr_ld, align 4
  %cmp.i.not = icmp eq ptr %5, null
  br i1 %cmp.i.not, label %entry.do.body_crit_edge, label %lor.lhs.false

entry.do.body_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

lor.lhs.false:                                    ; preds = %entry
  %prepare_layoutstats = getelementptr inbounds %struct.pnfs_layoutdriver_type, ptr %5, i32 0, i32 26
  %6 = ptrtoint ptr %prepare_layoutstats to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prepare_layoutstats, align 4
  %tobool4.not = icmp eq ptr %7, null
  br i1 %tobool4.not, label %lor.lhs.false.do.body_crit_edge, label %if.end

lor.lhs.false.do.body_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

if.end:                                           ; preds = %lor.lhs.false
  %caps.i = getelementptr inbounds %struct.nfs_server, ptr %3, i32 0, i32 10
  %8 = ptrtoint ptr %caps.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %caps.i, align 8
  %and.i = and i32 %9, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool6.not = icmp eq i32 %and.i, 0
  br i1 %tobool6.not, label %if.end.do.body_crit_edge, label %if.end8

if.end.do.body_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

if.end8:                                          ; preds = %if.end
  %flags = getelementptr i8, ptr %inode, i32 -308
  %call9 = tail call i32 @_test_and_set_bit(i32 noundef 11, ptr noundef %flags) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.end12, label %if.end8.do.body_crit_edge

if.end8.do.body_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

if.end12:                                         ; preds = %if.end8
  %i_lock = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 18
  tail call void @_raw_spin_lock(ptr noundef %i_lock) #16
  %layout = getelementptr i8, ptr %inode, i32 -32
  %10 = ptrtoint ptr %layout to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %layout, align 8
  %tobool14.not = icmp eq ptr %11, null
  br i1 %tobool14.not, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  br label %do.end48

if.end17:                                         ; preds = %if.end12
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %11, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr nonnull %11, i32 1, i32 3, i32 1) #16
  %12 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr nonnull elementtype(i32) %11, ptr nonnull %11, i32 1, ptr nonnull elementtype(i32) %11) #16, !srcloc !415
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %12, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end17.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !416

if.end17.if.end15.sink.split.i.i.i.i_crit_edge:   ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end17
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %13 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %13)
  %.not.i.i.i.i = icmp sgt i32 %13, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !413

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_get_layout_hdr.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end17.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end17.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef nonnull %11, i32 noundef %.sink.i.i.i.i) #16
  br label %pnfs_get_layout_hdr.exit

pnfs_get_layout_hdr.exit:                         ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.pnfs_get_layout_hdr.exit_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %i_lock) #16
  %or.i = or i32 %gfp_flags, 256
  %and.i.i.i = and i32 %gfp_flags, 4194321
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %cmp.i19.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %cmp.i19.i.i, label %pnfs_get_layout_hdr.exit.kzalloc.exit_crit_edge, label %if.end.i20.i.i, !prof !413

pnfs_get_layout_hdr.exit.kzalloc.exit_crit_edge:  ; preds = %pnfs_get_layout_hdr.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %kzalloc.exit

if.end.i20.i.i:                                   ; preds = %pnfs_get_layout_hdr.exit
  %and2.i.i.i = and i32 %gfp_flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i.i.i)
  %tobool3.not.i.i.i = icmp eq i32 %and2.i.i.i, 0
  br i1 %tobool3.not.i.i.i, label %if.end5.i.i.i, label %if.end.i20.i.i.kzalloc.exit_crit_edge

if.end.i20.i.i.kzalloc.exit_crit_edge:            ; preds = %if.end.i20.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %kzalloc.exit

if.end5.i.i.i:                                    ; preds = %if.end.i20.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %and6.i.i.i = and i32 %gfp_flags, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i.i.i)
  %tobool7.not.i.i.i = icmp eq i32 %and6.i.i.i, 0
  %..i.i.i = select i1 %tobool7.not.i.i.i, i32 1, i32 2
  br label %kzalloc.exit

kzalloc.exit:                                     ; preds = %if.end5.i.i.i, %if.end.i20.i.i.kzalloc.exit_crit_edge, %pnfs_get_layout_hdr.exit.kzalloc.exit_crit_edge
  %retval.0.i21.i.i = phi i32 [ 0, %pnfs_get_layout_hdr.exit.kzalloc.exit_crit_edge ], [ 3, %if.end.i20.i.i.kzalloc.exit_crit_edge ], [ %..i.i.i, %if.end5.i.i.i ]
  %arrayidx6.i.i = getelementptr [4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 %retval.0.i21.i.i, i32 7
  %14 = ptrtoint ptr %arrayidx6.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %arrayidx6.i.i, align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %15, i32 noundef %or.i, i32 noundef 80) #22
  %tobool22.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool22.not, label %kzalloc.exit.out_put_crit_edge, label %if.end24

kzalloc.exit.out_put_crit_edge:                   ; preds = %kzalloc.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_put

if.end24:                                         ; preds = %kzalloc.exit
  %fh.i = getelementptr i8, ptr %inode, i32 -440
  %args = getelementptr inbounds %struct.nfs42_layoutstat_data, ptr %call7.i.i, i32 0, i32 1
  %fh = getelementptr inbounds %struct.nfs42_layoutstat_data, ptr %call7.i.i, i32 0, i32 1, i32 1
  %16 = ptrtoint ptr %fh to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %fh.i, ptr %fh, align 4
  %inode27 = getelementptr inbounds %struct.nfs42_layoutstat_data, ptr %call7.i.i, i32 0, i32 1, i32 2
  %17 = ptrtoint ptr %inode27 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %inode, ptr %inode27, align 8
  %18 = ptrtoint ptr %prepare_layoutstats to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %prepare_layoutstats, align 4
  %call30 = tail call i32 %19(ptr noundef %args) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30)
  %tobool31.not = icmp eq i32 %call30, 0
  br i1 %tobool31.not, label %if.end33, label %out_free

if.end33:                                         ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %i_sb.i, align 4
  %s_fs_info.i.i84 = getelementptr inbounds %struct.super_block, ptr %21, i32 0, i32 33
  %22 = ptrtoint ptr %s_fs_info.i.i84 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %s_fs_info.i.i84, align 16
  %call35 = tail call i32 @nfs42_proc_layoutstats_generic(ptr noundef %23, ptr noundef nonnull %call7.i.i) #16
  br label %do.body

do.body:                                          ; preds = %do.end48, %if.end33, %if.end8.do.body_crit_edge, %if.end.do.body_crit_edge, %lor.lhs.false.do.body_crit_edge, %entry.do.body_crit_edge
  %status.0 = phi i32 [ 0, %if.end8.do.body_crit_edge ], [ %status.2, %do.end48 ], [ %call35, %if.end33 ], [ 0, %if.end.do.body_crit_edge ], [ 0, %lor.lhs.false.do.body_crit_edge ], [ 0, %entry.do.body_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfs_debug to i32))
  %24 = load i32, ptr @nfs_debug, align 4
  %and = and i32 %24, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool36.not = icmp eq i32 %and, 0
  br i1 %tobool36.not, label %do.body.do.end44_crit_edge, label %do.end, !prof !413

do.body.do.end44_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end44

do.end:                                           ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %call41 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.107, ptr noundef nonnull @.str.108, i32 noundef %status.0) #19
  br label %do.end44

do.end44:                                         ; preds = %do.end, %do.body.do.end44_crit_edge
  ret i32 %status.0

out_free:                                         ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #16
  br label %out_put

out_put:                                          ; preds = %out_free, %kzalloc.exit.out_put_crit_edge
  %status.1 = phi i32 [ %call30, %out_free ], [ -12, %kzalloc.exit.out_put_crit_edge ]
  tail call void @pnfs_put_layout_hdr(ptr noundef nonnull %11)
  br label %do.end48

do.end48:                                         ; preds = %out_put, %if.then15
  %status.2 = phi i32 [ %status.1, %out_put ], [ 0, %if.then15 ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !451
  tail call void @_clear_bit(i32 noundef 11, ptr noundef %flags) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !452
  br label %do.body
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfs42_proc_layoutstats_generic(ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #7

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @try_module_get(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #1 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @pnfs_lseg_dec_and_remove_zero(ptr noundef %lseg, ptr noundef %tmp_list) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pls_refcount = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 4
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %pls_refcount, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !422
  tail call void @llvm.prefetch.p0(ptr %pls_refcount, i32 1, i32 3, i32 1) #16
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %pls_refcount, ptr %pls_refcount, i32 1, ptr elementtype(i32) %pls_refcount) #16, !srcloc !423
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.end, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.return_crit_edge, label %if.then10.i.i.i, !prof !413

if.end5.i.i.i.return_crit_edge:                   ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @refcount_warn_saturate(ptr noundef %pls_refcount, i32 noundef 3) #16
  br label %return

if.end:                                           ; preds = %entry
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !453
  %pls_layout = getelementptr inbounds %struct.pnfs_layout_segment, ptr %lseg, i32 0, i32 7
  %1 = ptrtoint ptr %pls_layout to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %pls_layout, align 4
  tail call fastcc void @pnfs_layout_remove_lseg(ptr noundef %2, ptr noundef %lseg)
  %3 = ptrtoint ptr %tmp_list to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tmp_list, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %lseg, ptr noundef %tmp_list, ptr noundef %4) #16
  br i1 %call.i.i, label %if.end.i.i, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %lseg, ptr %prev1.i.i, align 4
  %6 = ptrtoint ptr %lseg to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %4, ptr %lseg, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %lseg, i32 0, i32 1
  %7 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %tmp_list, ptr %prev3.i.i, align 4
  %8 = ptrtoint ptr %tmp_list to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %lseg, ptr %tmp_list, align 4
  br label %return

return:                                           ; preds = %if.end.i.i, %if.end.return_crit_edge, %if.then10.i.i.i, %if.end5.i.i.i.return_crit_edge
  ret i1 %cmp.i.i.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @wake_up_bit(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @rpc_wake_up(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfs_commit_inode(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #1

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @nfs_sb_active(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @iput(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @nfs_sb_deactive(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @igrab(ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__free_pages(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @out_of_line_wait_on_bit(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bit_wait(ptr noundef, i32 noundef) #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfs4_proc_layoutreturn(ptr noundef, i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @filemap_fdatawait_range(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_cred(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @creds_are_invalid(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__invalid_creds(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_nfs4_layoutreturn_on_close(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_pnfs_update_layout(ptr noundef, ptr noundef, i64 noundef, i64 noundef, i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @max_response_pages(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_nfs_open_context(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dget_parent(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @dput(ptr noundef) local_unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #9

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #10

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__alloc_pages(i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #1

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal zeroext i1 @pnfs_lseg_range_is_after(ptr nocapture noundef readonly %l1, ptr nocapture noundef readonly %l2) #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %offset.i = getelementptr inbounds %struct.pnfs_layout_range, ptr %l1, i32 0, i32 1
  %0 = ptrtoint ptr %offset.i to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %offset.i, align 8
  %offset1.i = getelementptr inbounds %struct.pnfs_layout_range, ptr %l2, i32 0, i32 1
  %2 = ptrtoint ptr %offset1.i to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %offset1.i, align 8
  %sub.i = sub i64 %1, %3
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub.i)
  %tobool.not.i = icmp eq i64 %sub.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %entry.pnfs_lseg_range_cmp.exit_crit_edge

entry.pnfs_lseg_range_cmp.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_lseg_range_cmp.exit

if.end.i:                                         ; preds = %entry
  %length.i = getelementptr inbounds %struct.pnfs_layout_range, ptr %l2, i32 0, i32 2
  %4 = ptrtoint ptr %length.i to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %length.i, align 8
  %length2.i = getelementptr inbounds %struct.pnfs_layout_range, ptr %l1, i32 0, i32 2
  %6 = ptrtoint ptr %length2.i to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %length2.i, align 8
  %sub3.i = sub i64 %5, %7
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %sub3.i)
  %tobool4.not.i = icmp eq i64 %sub3.i, 0
  br i1 %tobool4.not.i, label %if.end6.i, label %if.end.i.pnfs_lseg_range_cmp.exit_crit_edge

if.end.i.pnfs_lseg_range_cmp.exit_crit_edge:      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %pnfs_lseg_range_cmp.exit

if.end6.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %l1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %l1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %9)
  %cmp.i = icmp eq i32 %9, 1
  %conv.i = zext i1 %cmp.i to i32
  %10 = ptrtoint ptr %l2 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %l2, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %11)
  %cmp8.i = icmp eq i32 %11, 1
  %conv9.neg.i = sext i1 %cmp8.i to i32
  %sub10.i = add nsw i32 %conv9.neg.i, %conv.i
  %conv11.i = sext i32 %sub10.i to i64
  br label %pnfs_lseg_range_cmp.exit

pnfs_lseg_range_cmp.exit:                         ; preds = %if.end6.i, %if.end.i.pnfs_lseg_range_cmp.exit_crit_edge, %entry.pnfs_lseg_range_cmp.exit_crit_edge
  %retval.0.i = phi i64 [ %conv11.i, %if.end6.i ], [ %sub.i, %entry.pnfs_lseg_range_cmp.exit_crit_edge ], [ %sub3.i, %if.end.i.pnfs_lseg_range_cmp.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %retval.0.i)
  %cmp = icmp sgt i64 %retval.0.i, 0
  ret i1 %cmp
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal zeroext i1 @pnfs_lseg_no_merge(ptr nocapture noundef readnone %lseg, ptr nocapture noundef readnone %old) #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  ret i1 false
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #14

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_nfs4_pnfs_write(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @nfs_pgio_header_free(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @nfs_pgio_current_mirror(ptr noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_nfs4_pnfs_read(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mark_inode_dirty(ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @out_of_line_wait_on_bit_lock(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #15

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.uadd.sat.i64(i64, i64) #9

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #9

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.umin.i64(i64, i64) #9

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #16

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #17 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 176)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #17 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 176)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { inlinehint mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #8 = { nounwind readonly }
attributes #9 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #10 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #11 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #15 = { argmemonly nofree nounwind readonly willreturn }
attributes #16 = { nounwind }
attributes #17 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #18 = { nomerge }
attributes #19 = { cold nounwind }
attributes #20 = { nobuiltin nounwind }
attributes #21 = { nobuiltin }
attributes #22 = { nounwind allocsize(2) }
attributes #23 = { nounwind allocsize(0) }

!llvm.asan.globals = !{!0, !2, !3, !4, !5, !6, !8, !9, !11, !12, !13, !15, !16, !17, !19, !20, !21, !23, !24, !25, !27, !28, !29, !30, !32, !33, !34, !36, !37, !38, !40, !41, !42, !44, !46, !47, !48, !49, !51, !53, !54, !56, !57, !58, !59, !61, !63, !64, !65, !66, !68, !69, !70, !72, !73, !74, !76, !78, !79, !81, !83, !84, !85, !86, !88, !89, !90, !92, !93, !94, !96, !97, !98, !100, !102, !103, !104, !105, !107, !108, !109, !111, !112, !113, !115, !116, !117, !119, !121, !122, !123, !124, !126, !127, !128, !130, !131, !132, !134, !135, !137, !138, !139, !140, !141, !142, !143, !145, !147, !148, !149, !150, !152, !153, !154, !155, !157, !158, !159, !161, !162, !163, !165, !166, !167, !169, !170, !171, !173, !175, !177, !179, !181, !183, !185, !187, !189, !191, !193, !195, !197, !199, !201, !203, !204, !205, !206, !208, !209, !210, !212, !214, !215, !216, !217, !219, !220, !221, !223, !225, !227, !228, !229, !230, !232, !233, !234, !235, !237, !239, !240, !242, !244, !246, !248, !249, !250, !251, !253, !254, !256, !257, !258, !259, !261, !263, !264, !265, !266, !268, !269, !270, !271, !273, !274, !275, !277, !278, !280, !281, !282, !283, !285, !287, !288, !289, !291, !293, !294, !295, !296, !298, !299, !301, !302, !304, !305, !306, !307, !309, !310, !311, !313, !314, !315, !317, !318, !320, !321, !322, !324, !325, !326, !328, !329, !330, !331, !333, !334, !335, !337, !338, !339, !341, !342, !343, !344, !346, !347, !348, !349, !351, !352, !353, !355, !357, !359, !361, !362, !364, !365, !366, !367, !369, !370, !371, !372, !374, !375, !376, !378, !379, !381, !382, !383, !384, !386, !387, !388, !389, !391, !392, !394, !395, !396, !397, !398, !399}
!llvm.named.register.sp = !{!400}
!llvm.module.flags = !{!401, !402, !403, !404, !405, !406, !407, !408}
!llvm.ident = !{!409}

!0 = !{ptr @.str, !1, !"<string literal>", i1 false, i1 false}
!1 = !{!"../fs/nfs/pnfs.c", i32 160, i32 3}
!2 = !{ptr @.str.1, !1, !"<string literal>", i1 false, i1 false}
!3 = !{ptr @.str.2, !1, !"<string literal>", i1 false, i1 false}
!4 = !{ptr @set_pnfs_layoutdriver._entry, !1, !"_entry", i1 false, i1 false}
!5 = !{ptr @set_pnfs_layoutdriver._entry_ptr, !1, !"_entry_ptr", i1 false, i1 false}
!6 = !{ptr @.str.3, !7, !"<string literal>", i1 false, i1 false}
!7 = !{!"../fs/nfs/pnfs.c", i32 172, i32 4}
!8 = !{ptr @.str.4, !7, !"<string literal>", i1 false, i1 false}
!9 = !{ptr @.str.6, !10, !"<string literal>", i1 false, i1 false}
!10 = !{!"../fs/nfs/pnfs.c", i32 181, i32 3}
!11 = !{ptr @set_pnfs_layoutdriver._entry.5, !10, !"_entry", i1 false, i1 false}
!12 = !{ptr @set_pnfs_layoutdriver._entry_ptr.7, !10, !"_entry_ptr", i1 false, i1 false}
!13 = !{ptr @.str.9, !14, !"<string literal>", i1 false, i1 false}
!14 = !{!"../fs/nfs/pnfs.c", i32 188, i32 3}
!15 = !{ptr @set_pnfs_layoutdriver._entry.8, !14, !"_entry", i1 false, i1 false}
!16 = !{ptr @set_pnfs_layoutdriver._entry_ptr.10, !14, !"_entry_ptr", i1 false, i1 false}
!17 = !{ptr @.str.12, !18, !"<string literal>", i1 false, i1 false}
!18 = !{!"../fs/nfs/pnfs.c", i32 196, i32 2}
!19 = !{ptr @set_pnfs_layoutdriver._entry.11, !18, !"_entry", i1 false, i1 false}
!20 = !{ptr @set_pnfs_layoutdriver._entry_ptr.13, !18, !"_entry_ptr", i1 false, i1 false}
!21 = !{ptr @.str.15, !22, !"<string literal>", i1 false, i1 false}
!22 = !{!"../fs/nfs/pnfs.c", i32 200, i32 2}
!23 = !{ptr @set_pnfs_layoutdriver._entry.14, !22, !"_entry", i1 false, i1 false}
!24 = !{ptr @set_pnfs_layoutdriver._entry_ptr.16, !22, !"_entry_ptr", i1 false, i1 false}
!25 = !{ptr @.str.17, !26, !"<string literal>", i1 false, i1 false}
!26 = !{!"../fs/nfs/pnfs.c", i32 211, i32 3}
!27 = !{ptr @.str.18, !26, !"<string literal>", i1 false, i1 false}
!28 = !{ptr @pnfs_register_layoutdriver._entry, !26, !"_entry", i1 false, i1 false}
!29 = !{ptr @pnfs_register_layoutdriver._entry_ptr, !26, !"_entry_ptr", i1 false, i1 false}
!30 = !{ptr @.str.20, !31, !"<string literal>", i1 false, i1 false}
!31 = !{!"../fs/nfs/pnfs.c", i32 215, i32 3}
!32 = !{ptr @pnfs_register_layoutdriver._entry.19, !31, !"_entry", i1 false, i1 false}
!33 = !{ptr @pnfs_register_layoutdriver._entry_ptr.21, !31, !"_entry_ptr", i1 false, i1 false}
!34 = !{ptr @.str.23, !35, !"<string literal>", i1 false, i1 false}
!35 = !{!"../fs/nfs/pnfs.c", i32 225, i32 3}
!36 = !{ptr @pnfs_register_layoutdriver._entry.22, !35, !"_entry", i1 false, i1 false}
!37 = !{ptr @pnfs_register_layoutdriver._entry_ptr.24, !35, !"_entry_ptr", i1 false, i1 false}
!38 = !{ptr @.str.26, !39, !"<string literal>", i1 false, i1 false}
!39 = !{!"../fs/nfs/pnfs.c", i32 228, i32 3}
!40 = !{ptr @pnfs_register_layoutdriver._entry.25, !39, !"_entry", i1 false, i1 false}
!41 = !{ptr @pnfs_register_layoutdriver._entry_ptr.27, !39, !"_entry_ptr", i1 false, i1 false}
!42 = !{ptr @__ksymtab_pnfs_register_layoutdriver, !43, !"__ksymtab_pnfs_register_layoutdriver", i1 false, i1 false}
!43 = !{!"../fs/nfs/pnfs.c", i32 235, i32 1}
!44 = !{ptr @.str.28, !45, !"<string literal>", i1 false, i1 false}
!45 = !{!"../fs/nfs/pnfs.c", i32 240, i32 2}
!46 = !{ptr @.str.29, !45, !"<string literal>", i1 false, i1 false}
!47 = !{ptr @pnfs_unregister_layoutdriver._entry, !45, !"_entry", i1 false, i1 false}
!48 = !{ptr @pnfs_unregister_layoutdriver._entry_ptr, !45, !"_entry_ptr", i1 false, i1 false}
!49 = !{ptr @__ksymtab_pnfs_unregister_layoutdriver, !50, !"__ksymtab_pnfs_unregister_layoutdriver", i1 false, i1 false}
!50 = !{!"../fs/nfs/pnfs.c", i32 245, i32 1}
!51 = distinct !{null, !52, !"__already_done", i1 false, i1 false}
!52 = !{!"../fs/nfs/pnfs.c", i32 306, i32 4}
!53 = !{ptr @.str.30, !52, !"<string literal>", i1 false, i1 false}
!54 = !{ptr @.str.31, !55, !"<string literal>", i1 false, i1 false}
!55 = !{!"../fs/nfs/pnfs.c", i32 591, i32 2}
!56 = !{ptr @.str.32, !55, !"<string literal>", i1 false, i1 false}
!57 = !{ptr @pnfs_put_lseg._entry, !55, !"_entry", i1 false, i1 false}
!58 = !{ptr @pnfs_put_lseg._entry_ptr, !55, !"_entry_ptr", i1 false, i1 false}
!59 = !{ptr @__ksymtab_pnfs_put_lseg, !60, !"__ksymtab_pnfs_put_lseg", i1 false, i1 false}
!60 = !{!"../fs/nfs/pnfs.c", i32 608, i32 1}
!61 = !{ptr @.str.33, !62, !"<string literal>", i1 false, i1 false}
!62 = !{!"../fs/nfs/pnfs.c", i32 703, i32 2}
!63 = !{ptr @.str.34, !62, !"<string literal>", i1 false, i1 false}
!64 = !{ptr @pnfs_mark_matching_lsegs_invalid._entry, !62, !"_entry", i1 false, i1 false}
!65 = !{ptr @pnfs_mark_matching_lsegs_invalid._entry_ptr, !62, !"_entry_ptr", i1 false, i1 false}
!66 = !{ptr @.str.36, !67, !"<string literal>", i1 false, i1 false}
!67 = !{!"../fs/nfs/pnfs.c", i32 709, i32 4}
!68 = !{ptr @pnfs_mark_matching_lsegs_invalid._entry.35, !67, !"_entry", i1 false, i1 false}
!69 = !{ptr @pnfs_mark_matching_lsegs_invalid._entry_ptr.37, !67, !"_entry_ptr", i1 false, i1 false}
!70 = !{ptr @.str.39, !71, !"<string literal>", i1 false, i1 false}
!71 = !{!"../fs/nfs/pnfs.c", i32 716, i32 2}
!72 = !{ptr @pnfs_mark_matching_lsegs_invalid._entry.38, !71, !"_entry", i1 false, i1 false}
!73 = !{ptr @pnfs_mark_matching_lsegs_invalid._entry_ptr.40, !71, !"_entry_ptr", i1 false, i1 false}
!74 = !{ptr @__ksymtab_pnfs_destroy_layout, !75, !"__ksymtab_pnfs_destroy_layout", i1 false, i1 false}
!75 = !{!"../fs/nfs/pnfs.c", i32 774, i32 1}
!76 = distinct !{null, !77, !"__warned", i1 false, i1 false}
!77 = !{!"../fs/nfs/pnfs.c", i32 900, i32 2}
!78 = !{ptr @.str.41, !77, !"<string literal>", i1 false, i1 false}
!79 = distinct !{null, !80, !"__warned", i1 false, i1 false}
!80 = !{!"../fs/nfs/pnfs.c", i32 926, i32 2}
!81 = !{ptr @.str.42, !82, !"<string literal>", i1 false, i1 false}
!82 = !{!"../fs/nfs/pnfs.c", i32 1330, i32 2}
!83 = !{ptr @.str.43, !82, !"<string literal>", i1 false, i1 false}
!84 = !{ptr @_pnfs_return_layout._entry, !82, !"_entry", i1 false, i1 false}
!85 = !{ptr @_pnfs_return_layout._entry_ptr, !82, !"_entry_ptr", i1 false, i1 false}
!86 = !{ptr @.str.45, !87, !"<string literal>", i1 false, i1 false}
!87 = !{!"../fs/nfs/pnfs.c", i32 1336, i32 3}
!88 = !{ptr @_pnfs_return_layout._entry.44, !87, !"_entry", i1 false, i1 false}
!89 = !{ptr @_pnfs_return_layout._entry_ptr.46, !87, !"_entry_ptr", i1 false, i1 false}
!90 = !{ptr @.str.48, !91, !"<string literal>", i1 false, i1 false}
!91 = !{!"../fs/nfs/pnfs.c", i32 1360, i32 3}
!92 = !{ptr @_pnfs_return_layout._entry.47, !91, !"_entry", i1 false, i1 false}
!93 = !{ptr @_pnfs_return_layout._entry_ptr.49, !91, !"_entry_ptr", i1 false, i1 false}
!94 = !{ptr @.str.51, !95, !"<string literal>", i1 false, i1 false}
!95 = !{!"../fs/nfs/pnfs.c", i32 1374, i32 2}
!96 = !{ptr @_pnfs_return_layout._entry.50, !95, !"_entry", i1 false, i1 false}
!97 = !{ptr @_pnfs_return_layout._entry_ptr.52, !95, !"_entry_ptr", i1 false, i1 false}
!98 = distinct !{null, !99, !"__warned", i1 false, i1 false}
!99 = !{!"../fs/nfs/pnfs.c", i32 1449, i32 2}
!100 = !{ptr @.str.53, !101, !"<string literal>", i1 false, i1 false}
!101 = !{!"../fs/nfs/pnfs.c", i32 1657, i32 2}
!102 = !{ptr @.str.54, !101, !"<string literal>", i1 false, i1 false}
!103 = !{ptr @pnfs_generic_layout_insert_lseg._entry, !101, !"_entry", i1 false, i1 false}
!104 = !{ptr @pnfs_generic_layout_insert_lseg._entry_ptr, !101, !"_entry_ptr", i1 false, i1 false}
!105 = !{ptr @.str.56, !106, !"<string literal>", i1 false, i1 false}
!106 = !{!"../fs/nfs/pnfs.c", i32 1669, i32 3}
!107 = !{ptr @pnfs_generic_layout_insert_lseg._entry.55, !106, !"_entry", i1 false, i1 false}
!108 = !{ptr @pnfs_generic_layout_insert_lseg._entry_ptr.57, !106, !"_entry_ptr", i1 false, i1 false}
!109 = !{ptr @.str.59, !110, !"<string literal>", i1 false, i1 false}
!110 = !{!"../fs/nfs/pnfs.c", i32 1679, i32 2}
!111 = !{ptr @pnfs_generic_layout_insert_lseg._entry.58, !110, !"_entry", i1 false, i1 false}
!112 = !{ptr @pnfs_generic_layout_insert_lseg._entry_ptr.60, !110, !"_entry_ptr", i1 false, i1 false}
!113 = !{ptr @.str.62, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../fs/nfs/pnfs.c", i32 1686, i32 2}
!115 = !{ptr @pnfs_generic_layout_insert_lseg._entry.61, !114, !"_entry", i1 false, i1 false}
!116 = !{ptr @pnfs_generic_layout_insert_lseg._entry_ptr.63, !114, !"_entry_ptr", i1 false, i1 false}
!117 = !{ptr @__ksymtab_pnfs_generic_layout_insert_lseg, !118, !"__ksymtab_pnfs_generic_layout_insert_lseg", i1 false, i1 false}
!118 = !{!"../fs/nfs/pnfs.c", i32 1688, i32 1}
!119 = !{ptr @.str.64, !120, !"<string literal>", i1 false, i1 false}
!120 = !{!"../fs/nfs/pnfs.c", i32 2001, i32 3}
!121 = !{ptr @.str.65, !120, !"<string literal>", i1 false, i1 false}
!122 = !{ptr @pnfs_update_layout._entry, !120, !"_entry", i1 false, i1 false}
!123 = !{ptr @pnfs_update_layout._entry_ptr, !120, !"_entry_ptr", i1 false, i1 false}
!124 = !{ptr @.str.67, !125, !"<string literal>", i1 false, i1 false}
!125 = !{!"../fs/nfs/pnfs.c", i32 2033, i32 3}
!126 = !{ptr @pnfs_update_layout._entry.66, !125, !"_entry", i1 false, i1 false}
!127 = !{ptr @pnfs_update_layout._entry_ptr.68, !125, !"_entry_ptr", i1 false, i1 false}
!128 = !{ptr @.str.70, !129, !"<string literal>", i1 false, i1 false}
!129 = !{!"../fs/nfs/pnfs.c", i32 2037, i32 4}
!130 = !{ptr @pnfs_update_layout._entry.69, !129, !"_entry", i1 false, i1 false}
!131 = !{ptr @pnfs_update_layout._entry_ptr.71, !129, !"_entry_ptr", i1 false, i1 false}
!132 = !{ptr @pnfs_update_layout._entry.72, !133, !"_entry", i1 false, i1 false}
!133 = !{!"../fs/nfs/pnfs.c", i32 2076, i32 4}
!134 = !{ptr @pnfs_update_layout._entry_ptr.73, !133, !"_entry_ptr", i1 false, i1 false}
!135 = !{ptr @.str.75, !136, !"<string literal>", i1 false, i1 false}
!136 = !{!"../fs/nfs/pnfs.c", i32 2168, i32 2}
!137 = !{ptr @pnfs_update_layout._entry.74, !136, !"_entry", i1 false, i1 false}
!138 = !{ptr @pnfs_update_layout._entry_ptr.76, !136, !"_entry_ptr", i1 false, i1 false}
!139 = !{ptr @.str.77, !136, !"<string literal>", i1 false, i1 false}
!140 = !{ptr @.str.78, !136, !"<string literal>", i1 false, i1 false}
!141 = !{ptr @.str.79, !136, !"<string literal>", i1 false, i1 false}
!142 = !{ptr @.str.80, !136, !"<string literal>", i1 false, i1 false}
!143 = !{ptr @__ksymtab_pnfs_update_layout, !144, !"__ksymtab_pnfs_update_layout", i1 false, i1 false}
!144 = !{!"../fs/nfs/pnfs.c", i32 2181, i32 1}
!145 = !{ptr @.str.81, !146, !"<string literal>", i1 false, i1 false}
!146 = !{!"../fs/nfs/pnfs.c", i32 2316, i32 2}
!147 = !{ptr @.str.82, !146, !"<string literal>", i1 false, i1 false}
!148 = !{ptr @pnfs_parse_lgopen._entry, !146, !"_entry", i1 false, i1 false}
!149 = !{ptr @pnfs_parse_lgopen._entry_ptr, !146, !"_entry_ptr", i1 false, i1 false}
!150 = !{ptr @.str.83, !151, !"<string literal>", i1 false, i1 false}
!151 = !{!"../fs/nfs/pnfs.c", i32 2384, i32 3}
!152 = !{ptr @.str.84, !151, !"<string literal>", i1 false, i1 false}
!153 = !{ptr @pnfs_layout_process._entry, !151, !"_entry", i1 false, i1 false}
!154 = !{ptr @pnfs_layout_process._entry_ptr, !151, !"_entry_ptr", i1 false, i1 false}
!155 = !{ptr @.str.86, !156, !"<string literal>", i1 false, i1 false}
!156 = !{!"../fs/nfs/pnfs.c", i32 2393, i32 3}
!157 = !{ptr @pnfs_layout_process._entry.85, !156, !"_entry", i1 false, i1 false}
!158 = !{ptr @pnfs_layout_process._entry_ptr.87, !156, !"_entry_ptr", i1 false, i1 false}
!159 = !{ptr @.str.89, !160, !"<string literal>", i1 false, i1 false}
!160 = !{!"../fs/nfs/pnfs.c", i32 2405, i32 4}
!161 = !{ptr @pnfs_layout_process._entry.88, !160, !"_entry", i1 false, i1 false}
!162 = !{ptr @pnfs_layout_process._entry_ptr.90, !160, !"_entry_ptr", i1 false, i1 false}
!163 = !{ptr @.str.91, !164, !"<string literal>", i1 false, i1 false}
!164 = !{!"../fs/nfs/pnfs.c", i32 2468, i32 2}
!165 = !{ptr @pnfs_mark_matching_lsegs_return._entry, !164, !"_entry", i1 false, i1 false}
!166 = !{ptr @pnfs_mark_matching_lsegs_return._entry_ptr, !164, !"_entry_ptr", i1 false, i1 false}
!167 = !{ptr @.str.93, !168, !"<string literal>", i1 false, i1 false}
!168 = !{!"../fs/nfs/pnfs.c", i32 2477, i32 4}
!169 = !{ptr @pnfs_mark_matching_lsegs_return._entry.92, !168, !"_entry", i1 false, i1 false}
!170 = !{ptr @pnfs_mark_matching_lsegs_return._entry_ptr.94, !168, !"_entry_ptr", i1 false, i1 false}
!171 = !{ptr @__ksymtab_pnfs_error_mark_layout_for_return, !172, !"__ksymtab_pnfs_error_mark_layout_for_return", i1 false, i1 false}
!172 = !{!"../fs/nfs/pnfs.c", i32 2548, i32 1}
!173 = !{ptr @__ksymtab_pnfs_generic_pg_check_layout, !174, !"__ksymtab_pnfs_generic_pg_check_layout", i1 false, i1 false}
!174 = !{!"../fs/nfs/pnfs.c", i32 2665, i32 1}
!175 = !{ptr @__ksymtab_pnfs_generic_pg_check_range, !176, !"__ksymtab_pnfs_generic_pg_check_range", i1 false, i1 false}
!176 = !{!"../fs/nfs/pnfs.c", i32 2679, i32 1}
!177 = !{ptr @__ksymtab_pnfs_generic_pg_init_read, !178, !"__ksymtab_pnfs_generic_pg_init_read", i1 false, i1 false}
!178 = !{!"../fs/nfs/pnfs.c", i32 2712, i32 1}
!179 = !{ptr @__ksymtab_pnfs_generic_pg_init_write, !180, !"__ksymtab_pnfs_generic_pg_init_write", i1 false, i1 false}
!180 = !{!"../fs/nfs/pnfs.c", i32 2738, i32 1}
!181 = !{ptr @__ksymtab_pnfs_generic_pg_cleanup, !182, !"__ksymtab_pnfs_generic_pg_cleanup", i1 false, i1 false}
!182 = !{!"../fs/nfs/pnfs.c", i32 2748, i32 1}
!183 = !{ptr @__ksymtab_pnfs_generic_pg_test, !184, !"__ksymtab_pnfs_generic_pg_test", i1 false, i1 false}
!184 = !{!"../fs/nfs/pnfs.c", i32 2794, i32 1}
!185 = !{ptr @__ksymtab_pnfs_write_done_resend_to_mds, !186, !"__ksymtab_pnfs_write_done_resend_to_mds", i1 false, i1 false}
!186 = !{!"../fs/nfs/pnfs.c", i32 2806, i32 1}
!187 = !{ptr @__ksymtab_pnfs_ld_write_done, !188, !"__ksymtab_pnfs_ld_write_done", i1 false, i1 false}
!188 = !{!"../fs/nfs/pnfs.c", i32 2835, i32 1}
!189 = !{ptr @__ksymtab_pnfs_generic_pg_writepages, !190, !"__ksymtab_pnfs_generic_pg_writepages", i1 false, i1 false}
!190 = !{!"../fs/nfs/pnfs.c", i32 2924, i32 1}
!191 = !{ptr @__ksymtab_pnfs_read_done_resend_to_mds, !192, !"__ksymtab_pnfs_read_done_resend_to_mds", i1 false, i1 false}
!192 = !{!"../fs/nfs/pnfs.c", i32 2934, i32 1}
!193 = !{ptr @__ksymtab_pnfs_ld_read_done, !194, !"__ksymtab_pnfs_ld_read_done", i1 false, i1 false}
!194 = !{!"../fs/nfs/pnfs.c", i32 2959, i32 1}
!195 = !{ptr @__ksymtab_pnfs_read_resend_pnfs, !196, !"__ksymtab_pnfs_read_resend_pnfs", i1 false, i1 false}
!196 = !{!"../fs/nfs/pnfs.c", i32 3016, i32 1}
!197 = !{ptr @__ksymtab_pnfs_generic_pg_readpages, !198, !"__ksymtab_pnfs_generic_pg_readpages", i1 false, i1 false}
!198 = !{!"../fs/nfs/pnfs.c", i32 3067, i32 1}
!199 = !{ptr @__ksymtab_pnfs_set_lo_fail, !200, !"__ksymtab_pnfs_set_lo_fail", i1 false, i1 false}
!200 = !{!"../fs/nfs/pnfs.c", i32 3109, i32 1}
!201 = !{ptr @.str.95, !202, !"<string literal>", i1 false, i1 false}
!202 = !{!"../fs/nfs/pnfs.c", i32 3122, i32 3}
!203 = !{ptr @.str.96, !202, !"<string literal>", i1 false, i1 false}
!204 = !{ptr @pnfs_set_layoutcommit._entry, !202, !"_entry", i1 false, i1 false}
!205 = !{ptr @pnfs_set_layoutcommit._entry_ptr, !202, !"_entry_ptr", i1 false, i1 false}
!206 = !{ptr @.str.98, !207, !"<string literal>", i1 false, i1 false}
!207 = !{!"../fs/nfs/pnfs.c", i32 3131, i32 2}
!208 = !{ptr @pnfs_set_layoutcommit._entry.97, !207, !"_entry", i1 false, i1 false}
!209 = !{ptr @pnfs_set_layoutcommit._entry_ptr.99, !207, !"_entry_ptr", i1 false, i1 false}
!210 = !{ptr @__ksymtab_pnfs_set_layoutcommit, !211, !"__ksymtab_pnfs_set_layoutcommit", i1 false, i1 false}
!211 = !{!"../fs/nfs/pnfs.c", i32 3139, i32 1}
!212 = !{ptr @.str.100, !213, !"<string literal>", i1 false, i1 false}
!213 = !{!"../fs/nfs/pnfs.c", i32 3170, i32 2}
!214 = !{ptr @.str.101, !213, !"<string literal>", i1 false, i1 false}
!215 = !{ptr @pnfs_layoutcommit_inode._entry, !213, !"_entry", i1 false, i1 false}
!216 = !{ptr @pnfs_layoutcommit_inode._entry_ptr, !213, !"_entry_ptr", i1 false, i1 false}
!217 = !{ptr @.str.103, !218, !"<string literal>", i1 false, i1 false}
!218 = !{!"../fs/nfs/pnfs.c", i32 3231, i32 2}
!219 = !{ptr @pnfs_layoutcommit_inode._entry.102, !218, !"_entry", i1 false, i1 false}
!220 = !{ptr @pnfs_layoutcommit_inode._entry_ptr.104, !218, !"_entry_ptr", i1 false, i1 false}
!221 = !{ptr @__ksymtab_pnfs_layoutcommit_inode, !222, !"__ksymtab_pnfs_layoutcommit_inode", i1 false, i1 false}
!222 = !{!"../fs/nfs/pnfs.c", i32 3240, i32 1}
!223 = !{ptr @__ksymtab_pnfs_generic_sync, !224, !"__ksymtab_pnfs_generic_sync", i1 false, i1 false}
!224 = !{!"../fs/nfs/pnfs.c", i32 3247, i32 1}
!225 = !{ptr @.str.105, !226, !"<string literal>", i1 false, i1 false}
!226 = !{!"../fs/nfs/pnfs.c", i32 3255, i32 3}
!227 = !{ptr @.str.106, !226, !"<string literal>", i1 false, i1 false}
!228 = !{ptr @pnfs_mdsthreshold_alloc._entry, !226, !"_entry", i1 false, i1 false}
!229 = !{ptr @pnfs_mdsthreshold_alloc._entry_ptr, !226, !"_entry_ptr", i1 false, i1 false}
!230 = !{ptr @.str.107, !231, !"<string literal>", i1 false, i1 false}
!231 = !{!"../fs/nfs/pnfs.c", i32 3305, i32 2}
!232 = !{ptr @.str.108, !231, !"<string literal>", i1 false, i1 false}
!233 = !{ptr @pnfs_report_layoutstat._entry, !231, !"_entry", i1 false, i1 false}
!234 = !{ptr @pnfs_report_layoutstat._entry_ptr, !231, !"_entry_ptr", i1 false, i1 false}
!235 = !{ptr @__ksymtab_pnfs_report_layoutstat, !236, !"__ksymtab_pnfs_report_layoutstat", i1 false, i1 false}
!236 = !{!"../fs/nfs/pnfs.c", i32 3318, i32 1}
!237 = !{ptr @__param_layoutstats_timer, !238, !"__param_layoutstats_timer", i1 false, i1 false}
!238 = !{!"../fs/nfs/pnfs.c", i32 3322, i32 1}
!239 = !{ptr @__UNIQUE_ID_layoutstats_timertype707, !238, !"__UNIQUE_ID_layoutstats_timertype707", i1 false, i1 false}
!240 = !{ptr @__ksymtab_layoutstats_timer, !241, !"__ksymtab_layoutstats_timer", i1 false, i1 false}
!241 = !{!"../fs/nfs/pnfs.c", i32 3323, i32 1}
!242 = !{ptr @layoutstats_timer, !243, !"layoutstats_timer", i1 false, i1 false}
!243 = !{!"../fs/nfs/pnfs.c", i32 3321, i32 14}
!244 = distinct !{null, !245, !"ld_prefs", i1 false, i1 false}
!245 = !{!"../fs/nfs/pnfs.c", i32 116, i32 18}
!246 = !{ptr @.str.109, !247, !"<string literal>", i1 false, i1 false}
!247 = !{!"../fs/nfs/pnfs.c", i32 88, i32 3}
!248 = !{ptr @.str.110, !247, !"<string literal>", i1 false, i1 false}
!249 = !{ptr @find_pnfs_driver._entry, !247, !"_entry", i1 false, i1 false}
!250 = !{ptr @find_pnfs_driver._entry_ptr, !247, !"_entry_ptr", i1 false, i1 false}
!251 = !{ptr @.str.111, !252, !"<string literal>", i1 false, i1 false}
!252 = !{!"../fs/nfs/pnfs.c", i32 50, i32 8}
!253 = !{ptr @pnfs_spinlock, !252, !"pnfs_spinlock", i1 false, i1 false}
!254 = !{ptr @.str.112, !255, !"<string literal>", i1 false, i1 false}
!255 = !{!"../fs/nfs/pnfs.c", i32 76, i32 2}
!256 = !{ptr @.str.113, !255, !"<string literal>", i1 false, i1 false}
!257 = !{ptr @find_pnfs_driver_locked._entry, !255, !"_entry", i1 false, i1 false}
!258 = !{ptr @find_pnfs_driver_locked._entry_ptr, !255, !"_entry_ptr", i1 false, i1 false}
!259 = !{ptr @pnfs_modules_tbl, !260, !"pnfs_modules_tbl", i1 false, i1 false}
!260 = !{!"../fs/nfs/pnfs.c", i32 55, i32 8}
!261 = !{ptr @.str.114, !262, !"<string literal>", i1 false, i1 false}
!262 = !{!"../fs/nfs/pnfs.c", i32 286, i32 2}
!263 = !{ptr @.str.115, !262, !"<string literal>", i1 false, i1 false}
!264 = !{ptr @pnfs_detach_layout_hdr._entry, !262, !"_entry", i1 false, i1 false}
!265 = !{ptr @pnfs_detach_layout_hdr._entry_ptr, !262, !"_entry_ptr", i1 false, i1 false}
!266 = !{ptr @.str.116, !267, !"<string literal>", i1 false, i1 false}
!267 = !{!"../fs/nfs/pnfs.c", i32 650, i32 3}
!268 = !{ptr @.str.117, !267, !"<string literal>", i1 false, i1 false}
!269 = !{ptr @mark_lseg_invalid._entry, !267, !"_entry", i1 false, i1 false}
!270 = !{ptr @mark_lseg_invalid._entry_ptr, !267, !"_entry_ptr", i1 false, i1 false}
!271 = distinct !{null, !272, !"__warned", i1 false, i1 false}
!272 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!273 = !{ptr @.str.118, !272, !"<string literal>", i1 false, i1 false}
!274 = !{ptr @.str.119, !272, !"<string literal>", i1 false, i1 false}
!275 = distinct !{null, !276, !"__warned", i1 false, i1 false}
!276 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!277 = !{ptr @.str.120, !276, !"<string literal>", i1 false, i1 false}
!278 = !{ptr @.str.121, !279, !"<string literal>", i1 false, i1 false}
!279 = !{!"../fs/nfs/pnfs.c", i32 866, i32 3}
!280 = !{ptr @.str.122, !279, !"<string literal>", i1 false, i1 false}
!281 = !{ptr @pnfs_layout_free_bulk_destroy_list._entry, !279, !"_entry", i1 false, i1 false}
!282 = !{ptr @pnfs_layout_free_bulk_destroy_list._entry_ptr, !279, !"_entry_ptr", i1 false, i1 false}
!283 = !{ptr @.str.123, !284, !"<string literal>", i1 false, i1 false}
!284 = !{!"../include/linux/wait_bit.h", i32 73, i32 2}
!285 = !{ptr @.str.124, !286, !"<string literal>", i1 false, i1 false}
!286 = !{!"../fs/nfs/pnfs.c", i32 1256, i32 2}
!287 = !{ptr @pnfs_send_layoutreturn._entry, !286, !"_entry", i1 false, i1 false}
!288 = !{ptr @pnfs_send_layoutreturn._entry_ptr, !286, !"_entry_ptr", i1 false, i1 false}
!289 = !{ptr @.str.125, !290, !"<string literal>", i1 false, i1 false}
!290 = !{!"../include/linux/cred.h", i32 286, i32 3}
!291 = distinct !{null, !292, !"__already_done", i1 false, i1 false}
!292 = !{!"../fs/nfs/nfs4trace.h", i32 1752, i32 1}
!293 = !{ptr @.str.126, !292, !"<string literal>", i1 false, i1 false}
!294 = distinct !{null, !292, !"__warned", i1 false, i1 false}
!295 = !{ptr @.str.127, !292, !"<string literal>", i1 false, i1 false}
!296 = distinct !{null, !297, !"__already_done", i1 false, i1 false}
!297 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!298 = !{ptr @.str.128, !297, !"<string literal>", i1 false, i1 false}
!299 = distinct !{null, !300, !"__already_done", i1 false, i1 false}
!300 = !{!"../fs/nfs/nfs4trace.h", i32 1788, i32 1}
!301 = distinct !{null, !300, !"__warned", i1 false, i1 false}
!302 = !{ptr @.str.129, !303, !"<string literal>", i1 false, i1 false}
!303 = !{!"../fs/nfs/pnfs.c", i32 1845, i32 2}
!304 = !{ptr @.str.130, !303, !"<string literal>", i1 false, i1 false}
!305 = !{ptr @pnfs_within_mdsthreshold._entry, !303, !"_entry", i1 false, i1 false}
!306 = !{ptr @pnfs_within_mdsthreshold._entry_ptr, !303, !"_entry_ptr", i1 false, i1 false}
!307 = !{ptr @.str.132, !308, !"<string literal>", i1 false, i1 false}
!308 = !{!"../fs/nfs/pnfs.c", i32 1851, i32 4}
!309 = !{ptr @pnfs_within_mdsthreshold._entry.131, !308, !"_entry", i1 false, i1 false}
!310 = !{ptr @pnfs_within_mdsthreshold._entry_ptr.133, !308, !"_entry_ptr", i1 false, i1 false}
!311 = !{ptr @.str.135, !312, !"<string literal>", i1 false, i1 false}
!312 = !{!"../fs/nfs/pnfs.c", i32 1857, i32 4}
!313 = !{ptr @pnfs_within_mdsthreshold._entry.134, !312, !"_entry", i1 false, i1 false}
!314 = !{ptr @pnfs_within_mdsthreshold._entry_ptr.136, !312, !"_entry_ptr", i1 false, i1 false}
!315 = !{ptr @pnfs_within_mdsthreshold._entry.137, !316, !"_entry", i1 false, i1 false}
!316 = !{!"../fs/nfs/pnfs.c", i32 1866, i32 4}
!317 = !{ptr @pnfs_within_mdsthreshold._entry_ptr.138, !316, !"_entry_ptr", i1 false, i1 false}
!318 = !{ptr @.str.140, !319, !"<string literal>", i1 false, i1 false}
!319 = !{!"../fs/nfs/pnfs.c", i32 1872, i32 4}
!320 = !{ptr @pnfs_within_mdsthreshold._entry.139, !319, !"_entry", i1 false, i1 false}
!321 = !{ptr @pnfs_within_mdsthreshold._entry_ptr.141, !319, !"_entry_ptr", i1 false, i1 false}
!322 = !{ptr @.str.143, !323, !"<string literal>", i1 false, i1 false}
!323 = !{!"../fs/nfs/pnfs.c", i32 1886, i32 2}
!324 = !{ptr @pnfs_within_mdsthreshold._entry.142, !323, !"_entry", i1 false, i1 false}
!325 = !{ptr @pnfs_within_mdsthreshold._entry_ptr.144, !323, !"_entry_ptr", i1 false, i1 false}
!326 = !{ptr @.str.145, !327, !"<string literal>", i1 false, i1 false}
!327 = !{!"../fs/nfs/pnfs.c", i32 1738, i32 2}
!328 = !{ptr @.str.146, !327, !"<string literal>", i1 false, i1 false}
!329 = !{ptr @pnfs_find_alloc_layout._entry, !327, !"_entry", i1 false, i1 false}
!330 = !{ptr @pnfs_find_alloc_layout._entry_ptr, !327, !"_entry_ptr", i1 false, i1 false}
!331 = !{ptr @.str.147, !332, !"<string literal>", i1 false, i1 false}
!332 = !{!"../fs/nfs/pnfs.c", i32 1799, i32 2}
!333 = !{ptr @pnfs_find_lseg._entry, !332, !"_entry", i1 false, i1 false}
!334 = !{ptr @pnfs_find_lseg._entry_ptr, !332, !"_entry_ptr", i1 false, i1 false}
!335 = !{ptr @.str.149, !336, !"<string literal>", i1 false, i1 false}
!336 = !{!"../fs/nfs/pnfs.c", i32 1810, i32 2}
!337 = !{ptr @pnfs_find_lseg._entry.148, !336, !"_entry", i1 false, i1 false}
!338 = !{ptr @pnfs_find_lseg._entry_ptr.150, !336, !"_entry_ptr", i1 false, i1 false}
!339 = !{ptr @.str.151, !340, !"<string literal>", i1 false, i1 false}
!340 = !{!"../fs/nfs/pnfs.c", i32 1079, i32 2}
!341 = !{ptr @.str.152, !340, !"<string literal>", i1 false, i1 false}
!342 = !{ptr @pnfs_alloc_init_layoutget_args._entry, !340, !"_entry", i1 false, i1 false}
!343 = !{ptr @pnfs_alloc_init_layoutget_args._entry_ptr, !340, !"_entry_ptr", i1 false, i1 false}
!344 = !{ptr @.str.153, !345, !"<string literal>", i1 false, i1 false}
!345 = !{!"../fs/nfs/pnfs.c", i32 1051, i32 3}
!346 = !{ptr @.str.154, !345, !"<string literal>", i1 false, i1 false}
!347 = !{ptr @nfs4_alloc_pages._entry, !345, !"_entry", i1 false, i1 false}
!348 = !{ptr @nfs4_alloc_pages._entry_ptr, !345, !"_entry_ptr", i1 false, i1 false}
!349 = !{ptr @.str.156, !350, !"<string literal>", i1 false, i1 false}
!350 = !{!"../fs/nfs/pnfs.c", i32 1058, i32 4}
!351 = !{ptr @nfs4_alloc_pages._entry.155, !350, !"_entry", i1 false, i1 false}
!352 = !{ptr @nfs4_alloc_pages._entry_ptr.157, !350, !"_entry_ptr", i1 false, i1 false}
!353 = distinct !{null, !354, !"<string literal>", i1 false, i1 false}
!354 = !{!"../include/linux/gfp.h", i32 570, i32 2}
!355 = distinct !{null, !356, !"__warned", i1 false, i1 false}
!356 = !{!"../fs/nfs/pnfs.c", i32 2618, i32 2}
!357 = distinct !{null, !358, !"__warned", i1 false, i1 false}
!358 = !{!"../fs/nfs/pnfs.c", i32 2592, i32 2}
!359 = distinct !{null, !360, !"__already_done", i1 false, i1 false}
!360 = !{!"../fs/nfs/nfs4trace.h", i32 1619, i32 1}
!361 = distinct !{null, !360, !"__warned", i1 false, i1 false}
!362 = !{ptr @.str.159, !363, !"<string literal>", i1 false, i1 false}
!363 = !{!"../fs/nfs/pnfs.c", i32 2811, i32 2}
!364 = !{ptr @.str.160, !363, !"<string literal>", i1 false, i1 false}
!365 = !{ptr @pnfs_ld_handle_write_error._entry, !363, !"_entry", i1 false, i1 false}
!366 = !{ptr @pnfs_ld_handle_write_error._entry_ptr, !363, !"_entry_ptr", i1 false, i1 false}
!367 = !{ptr @.str.161, !368, !"<string literal>", i1 false, i1 false}
!368 = !{!"../fs/nfs/pnfs.c", i32 2863, i32 2}
!369 = !{ptr @.str.162, !368, !"<string literal>", i1 false, i1 false}
!370 = !{ptr @pnfs_try_to_write_data._entry, !368, !"_entry", i1 false, i1 false}
!371 = !{ptr @pnfs_try_to_write_data._entry_ptr, !368, !"_entry_ptr", i1 false, i1 false}
!372 = !{ptr @.str.164, !373, !"<string literal>", i1 false, i1 false}
!373 = !{!"../fs/nfs/pnfs.c", i32 2868, i32 2}
!374 = !{ptr @pnfs_try_to_write_data._entry.163, !373, !"_entry", i1 false, i1 false}
!375 = !{ptr @pnfs_try_to_write_data._entry_ptr.165, !373, !"_entry_ptr", i1 false, i1 false}
!376 = distinct !{null, !377, !"__already_done", i1 false, i1 false}
!377 = !{!"../fs/nfs/nfs4trace.h", i32 1544, i32 1}
!378 = distinct !{null, !377, !"__warned", i1 false, i1 false}
!379 = !{ptr @.str.166, !380, !"<string literal>", i1 false, i1 false}
!380 = !{!"../fs/nfs/pnfs.c", i32 2938, i32 2}
!381 = !{ptr @.str.167, !380, !"<string literal>", i1 false, i1 false}
!382 = !{ptr @pnfs_ld_handle_read_error._entry, !380, !"_entry", i1 false, i1 false}
!383 = !{ptr @pnfs_ld_handle_read_error._entry_ptr, !380, !"_entry_ptr", i1 false, i1 false}
!384 = !{ptr @.str.168, !385, !"<string literal>", i1 false, i1 false}
!385 = !{!"../fs/nfs/pnfs.c", i32 2989, i32 2}
!386 = !{ptr @.str.169, !385, !"<string literal>", i1 false, i1 false}
!387 = !{ptr @pnfs_try_to_read_data._entry, !385, !"_entry", i1 false, i1 false}
!388 = !{ptr @pnfs_try_to_read_data._entry_ptr, !385, !"_entry_ptr", i1 false, i1 false}
!389 = !{ptr @pnfs_try_to_read_data._entry.170, !390, !"_entry", i1 false, i1 false}
!390 = !{!"../fs/nfs/pnfs.c", i32 2995, i32 2}
!391 = !{ptr @pnfs_try_to_read_data._entry_ptr.171, !390, !"_entry_ptr", i1 false, i1 false}
!392 = !{ptr @.str.172, !393, !"<string literal>", i1 false, i1 false}
!393 = !{!"../fs/nfs/pnfs.c", i32 505, i32 2}
!394 = !{ptr @.str.173, !393, !"<string literal>", i1 false, i1 false}
!395 = !{ptr @pnfs_layout_io_set_failed._entry, !393, !"_entry", i1 false, i1 false}
!396 = !{ptr @pnfs_layout_io_set_failed._entry_ptr, !393, !"_entry_ptr", i1 false, i1 false}
!397 = !{ptr @.str.174, !393, !"<string literal>", i1 false, i1 false}
!398 = !{ptr @.str.175, !393, !"<string literal>", i1 false, i1 false}
!399 = !{ptr @__param_str_layoutstats_timer, !238, !"__param_str_layoutstats_timer", i1 false, i1 false}
!400 = !{!"sp"}
!401 = !{i32 1, !"wchar_size", i32 2}
!402 = !{i32 1, !"min_enum_size", i32 4}
!403 = !{i32 8, !"branch-target-enforcement", i32 0}
!404 = !{i32 8, !"sign-return-address", i32 0}
!405 = !{i32 8, !"sign-return-address-all", i32 0}
!406 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!407 = !{i32 7, !"uwtable", i32 1}
!408 = !{i32 7, !"frame-pointer", i32 2}
!409 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!410 = !{i64 2148468555}
!411 = !{i64 2148383288, i64 2148383320, i64 2148383349, i64 2148383383, i64 2148383414, i64 2148383437}
!412 = !{i64 2148468784}
!413 = !{!"branch_weights", i32 2000, i32 1}
!414 = !{i64 2148380103, i64 2148380129, i64 2148380158, i64 2148380192, i64 2148380223, i64 2148380246}
!415 = !{i64 2148381633, i64 2148381665, i64 2148381694, i64 2148381728, i64 2148381759, i64 2148381782}
!416 = !{!"branch_weights", i32 1, i32 2000}
!417 = !{!"auto-init"}
!418 = !{i64 2160162262, i64 2160162741, i64 2160162299, i64 2160162355, i64 2160162389, i64 2160162413, i64 2160162454, i64 2160162475, i64 2160162503, i64 2160162537}
!419 = !{i64 2148476929}
!420 = !{i64 2148387348, i64 2148387380, i64 2148387409, i64 2148387443, i64 2148387474, i64 2148387497}
!421 = !{i64 2159900095}
!422 = !{i64 2148469634}
!423 = !{i64 2148384098, i64 2148384130, i64 2148384159, i64 2148384193, i64 2148384224, i64 2148384247}
!424 = !{i64 2149456404}
!425 = !{i64 2149456670}
!426 = !{i64 2160034567}
!427 = !{i64 886871, i64 886888, i64 886912, i64 886938, i64 886956}
!428 = !{i64 2160034923}
!429 = !{i64 2160291148}
!430 = !{i64 2148861918, i64 2148861923, i64 2148861936, i64 2148861980, i64 2148862014, i64 2148862035}
!431 = !{i64 2159376411}
!432 = !{i64 2159376668}
!433 = !{i64 2149464963}
!434 = !{i64 2149465999}
!435 = !{i64 2157705470}
!436 = !{i64 2160137455}
!437 = !{i64 2151666250}
!438 = !{i64 2159435082}
!439 = !{i64 2159435367}
!440 = !{i64 772584, i64 772645}
!441 = !{i64 775316}
!442 = !{i64 775601}
!443 = !{i64 2153237767}
!444 = !{i64 2153237609}
!445 = !{i64 2153237937}
!446 = !{i64 2150095722}
!447 = !{i64 2159263063}
!448 = !{i64 2159263276}
!449 = !{i64 2159230114}
!450 = !{i64 2159230325}
!451 = !{i64 2160318651}
!452 = !{i64 2160318933}
!453 = !{i64 2149405914}
