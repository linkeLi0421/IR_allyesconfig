; ModuleID = '/llk/IR_all_yes/fs/nfsd/nfs4xdr.c_pt.bc'
source_filename = "../fs/nfsd/nfs4xdr.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t, %union.anon.122 }
%struct.atomic_t = type { i32 }
%union.anon.122 = type { i32 }
%struct.cpumask = type { [1 x i32] }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i32, i8, %struct.list_head, ptr, %struct.rw_semaphore, ptr, %struct.work_struct, %struct.ctl_table_set, ptr, ptr, [16 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.6 }
%union.anon.6 = type { [5 x %struct.uid_gid_extent] }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.2 }
%union.anon.2 = type { i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.16, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.16 = type { %struct.anon.17 }
%struct.anon.17 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.rb_root = type { ptr }
%struct.xdr_buf = type { [1 x %struct.kvec], [1 x %struct.kvec], ptr, ptr, i32, i32, i32, i32, i32 }
%struct.kvec = type { ptr, i32 }
%struct.xdr_stream = type { ptr, ptr, ptr, ptr, %struct.kvec, ptr, i32, ptr }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.timespec64 = type { i64, i32 }
%struct.kstatfs = type { i32, i32, i64, i64, i64, i64, i64, %struct.__kernel_fsid_t, i32, i32, i32, [4 x i32] }
%struct.__kernel_fsid_t = type { [2 x i32] }
%struct.path = type { ptr, ptr }
%struct.svc_rqst = type { %struct.list_head, %struct.callback_head, ptr, %struct.__kernel_sockaddr_storage, i32, %struct.__kernel_sockaddr_storage, i32, ptr, ptr, ptr, ptr, %struct.svc_cred, ptr, ptr, i32, %struct.xdr_buf, %struct.xdr_stream, %struct.xdr_stream, ptr, %struct.xdr_buf, [260 x ptr], ptr, ptr, ptr, %struct.pagevec, [259 x %struct.kvec], [259 x %struct.bio_vec], i32, i32, i32, i32, i32, i32, i32, i64, ptr, ptr, ptr, i32, i32, i32, i64, %struct.cache_req, ptr, ptr, ptr, ptr, %struct.spinlock, ptr, ptr }
%struct.callback_head = type { ptr, ptr }
%struct.__kernel_sockaddr_storage = type { %union.anon.140 }
%union.anon.140 = type { ptr, [124 x i8] }
%struct.svc_cred = type { %struct.kuid_t, %struct.kgid_t, ptr, i32, ptr, ptr, ptr, ptr }
%struct.pagevec = type { i8, i8, [15 x ptr] }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.cache_req = type { ptr, i32 }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.nfsd4_compoundres = type { ptr, ptr, ptr, i32, ptr, i32, %struct.nfsd4_compound_state }
%struct.nfsd4_compound_state = type { %struct.svc_fh, %struct.svc_fh, ptr, ptr, ptr, ptr, i32, i8, i32, i32, i32, %struct.stateid_t, %struct.stateid_t, i32 }
%struct.svc_fh = type { %struct.knfsd_fh, i32, ptr, ptr, i8, i8, i8, i8, i32, i8, i8, i64, %struct.timespec64, %struct.timespec64, i64, %struct.kstat, i64 }
%struct.knfsd_fh = type { i32, %union.anon }
%union.anon = type { %struct.anon, [124 x i8] }
%struct.anon = type { i8, i8, i8, i8, [0 x i32] }
%struct.stateid_t = type { i32, %struct.stateid_opaque_t }
%struct.stateid_opaque_t = type { %struct.clientid_t, i32 }
%struct.clientid_t = type { i32, i32 }
%struct.svc_export = type { %struct.cache_head, ptr, i32, %struct.path, %struct.kuid_t, %struct.kgid_t, i32, ptr, %struct.nfsd4_fs_locations, i32, [8 x %struct.exp_flavor_info], i32, ptr, ptr, %struct.callback_head, %struct.export_stats }
%struct.cache_head = type { %struct.hlist_node, i64, i64, %struct.kref, i32 }
%struct.hlist_node = type { ptr, ptr }
%struct.kref = type { %struct.refcount_struct }
%struct.nfsd4_fs_locations = type { i32, ptr, i32 }
%struct.exp_flavor_info = type { i32, i32 }
%struct.export_stats = type { i64, [3 x %struct.percpu_counter] }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.svc_xprt = type { ptr, ptr, %struct.kref, %struct.list_head, %struct.list_head, i32, ptr, %struct.atomic_t, %struct.atomic_t, %struct.mutex, %struct.spinlock, ptr, %struct.list_head, %struct.__kernel_sockaddr_storage, i32, %struct.__kernel_sockaddr_storage, i32, [58 x i8], %struct.list_head, ptr, ptr, ptr, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, ptr, %struct.qstr, ptr, [36 x i8], %struct.lockref, ptr, ptr, i32, ptr, %union.anon.136, %struct.list_head, %struct.list_head, %union.anon.137 }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.hlist_bl_node = type { ptr, ptr }
%struct.qstr = type { %union.anon.4, ptr }
%union.anon.4 = type { i64 }
%struct.lockref = type { %union.anon.134 }
%union.anon.134 = type { %struct.anon.135 }
%struct.anon.135 = type { %struct.spinlock, i32 }
%union.anon.136 = type { %struct.list_head }
%union.anon.137 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.130, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.131, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.132, ptr, %struct.address_space, %struct.list_head, %union.anon.133, i32, i32, ptr, ptr, ptr, ptr }
%union.anon.130 = type { i32 }
%union.anon.131 = type { %struct.callback_head }
%struct.atomic64_t = type { i64 }
%union.anon.132 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%union.anon.133 = type { ptr }
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, i16, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [24 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [24 x i8] }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t, %struct.lockdep_map }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { ptr }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.list_lru = type { ptr, %struct.list_head, i32, i8 }
%struct.nfsd_net = type { ptr, ptr, ptr, ptr, ptr, %struct.lock_manager, i8, i64, ptr, ptr, i32, ptr, %struct.rb_root, ptr, %struct.rb_root, ptr, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.delayed_work, %struct.spinlock, %struct.spinlock, ptr, i8, ptr, i64, i64, i8, i8, %struct.atomic_t, i8, i8, %struct.seqlock_t, [8 x i8], i32, i32, i32, i32, ptr, i32, i32, %struct.idr, %struct.spinlock, ptr, ptr, ptr, i32, i32, i32, %struct.atomic_t, [2 x %struct.percpu_counter], i32, i32, %struct.shrinker, %struct.spinlock, %struct.list_head, %struct.wait_queue_head, [65 x i8], ptr, %struct.siphash_key_t }
%struct.lock_manager = type { %struct.list_head, i8 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.siphash_key_t = type { [2 x i64] }
%struct.nfs4_acl = type { i32, [0 x %struct.nfs4_ace] }
%struct.nfs4_ace = type { i32, i32, i32, i32, %union.anon.167 }
%union.anon.167 = type { %struct.kuid_t }
%struct.vfsmount = type { ptr, ptr, i32, ptr }
%struct.nfsd4_slot = type { i32, i32, %struct.svc_cred, i32, i16, i8, [0 x i8] }
%struct.nfsd4_op = type { i32, ptr, i32, [20 x i8], %union.nfsd4_op_u, ptr, [28 x i8] }
%union.nfsd4_op_u = type { %struct.nfsd4_copy_notify, [24 x i8] }
%struct.nfsd4_copy_notify = type { %struct.stateid_t, %struct.nl4_server, %struct.stateid_t, i64, i32, %struct.nl4_server }
%struct.nl4_server = type { i32, %union.anon.175 }
%union.anon.175 = type { %struct.anon.176 }
%struct.anon.176 = type { i32, [1025 x i8] }
%struct.nfsd4_operation = type { ptr, ptr, i32, ptr, ptr, ptr, ptr }
%struct.nfsd4_compoundargs = type { ptr, ptr, ptr, i32, ptr, i32, i32, ptr, [8 x %struct.nfsd4_op], i32, [28 x i8] }
%struct.nfs4_stateowner = type { %struct.list_head, %struct.list_head, ptr, ptr, %struct.atomic_t, i32, %struct.xdr_netobj, %struct.nfs4_replay, i8 }
%struct.xdr_netobj = type { i32, ptr }
%struct.nfs4_replay = type { i32, i32, ptr, %struct.knfsd_fh, %struct.mutex, [112 x i8] }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.svcxdr_tmpbuf = type { ptr, [0 x i8] }
%struct.net = type { %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, ptr, ptr, ptr, %struct.idr, %struct.ns_common, %struct.ref_tracker_dir, %struct.list_head, ptr, ptr, %struct.ctl_table_set, ptr, ptr, ptr, ptr, ptr, %struct.raw_notifier_head, i32, ptr, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, [80 x i8], %struct.netns_ipv4, %struct.netns_ipv6, %struct.netns_ieee802154_lowpan, %struct.netns_sctp, %struct.netns_nf, %struct.netns_ct, %struct.netns_nftables, %struct.sk_buff_head, ptr, %struct.netns_bpf, [92 x i8], %struct.netns_xfrm, i64, ptr, %struct.netns_mpls, %struct.netns_can, %struct.netns_xdp, %struct.netns_mctp, ptr, ptr, %struct.netns_smc }
%struct.llist_node = type { ptr }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%struct.raw_notifier_head = type { ptr }
%struct.netns_core = type { ptr, i32, ptr }
%struct.netns_mib = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, ptr }
%struct.netns_nexthop = type { %struct.rb_root, ptr, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.netns_ipv4 = type { %struct.inet_timewait_death_row, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, ptr, ptr, ptr, i32, i8, i8, i8, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, i8, i32, i32, i32, i32, %struct.local_ports, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, [3 x i32], [3 x i32], i32, i32, i32, i32, ptr, ptr, i32, %struct.atomic_t, i32, i32, i32, i8, i8, i8, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, ptr, i32, %struct.list_head, ptr, i32, i8, i8, ptr, i32, ptr, i32, %struct.atomic_t, %struct.siphash_key_t, [96 x i8] }
%struct.inet_timewait_death_row = type { %struct.atomic_t, [124 x i8], ptr, i32 }
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.netns_ipv6 = type { %struct.dst_ops, %struct.netns_sysctl_ipv6, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.timer_list, ptr, ptr, %struct.list_head, %struct.rwlock_t, %struct.spinlock, i32, i32, i8, i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i32, %struct.anon.93, ptr, [24 x i8] }
%struct.dst_ops = type { i16, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [60 x i8], %struct.percpu_counter, [56 x i8] }
%struct.netns_sysctl_ipv6 = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, [8 x i32], ptr, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8, i8 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.anon.93 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.netns_ieee802154_lowpan = type { %struct.netns_sysctl_lowpan, ptr }
%struct.netns_sysctl_lowpan = type { ptr }
%struct.netns_sctp = type { ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, %struct.list_head, %struct.list_head, %struct.timer_list, %struct.list_head, %struct.spinlock, %struct.spinlock, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netns_nf = type { ptr, [13 x ptr], ptr, [5 x ptr], [5 x ptr], [3 x ptr], [5 x ptr], [7 x ptr], i32, i32 }
%struct.netns_ct = type { i8, i8, i8, i8, i8, i8, i8, ptr, ptr, ptr, %struct.nf_ip_net, i32 }
%struct.nf_ip_net = type { %struct.nf_generic_net, %struct.nf_tcp_net, %struct.nf_udp_net, %struct.nf_icmp_net, %struct.nf_icmp_net, %struct.nf_dccp_net, %struct.nf_sctp_net, %struct.nf_gre_net }
%struct.nf_generic_net = type { i32 }
%struct.nf_tcp_net = type { [14 x i32], i8, i8, i8, i8, i32 }
%struct.nf_udp_net = type { [2 x i32], i32 }
%struct.nf_icmp_net = type { i32 }
%struct.nf_dccp_net = type { i8, [10 x i32] }
%struct.nf_sctp_net = type { [10 x i32] }
%struct.nf_gre_net = type { %struct.list_head, [2 x i32] }
%struct.netns_nftables = type { i8 }
%struct.sk_buff_head = type { %union.anon.78, i32, %struct.spinlock }
%union.anon.78 = type { %struct.anon.79 }
%struct.anon.79 = type { ptr, ptr }
%struct.netns_bpf = type { [2 x ptr], [2 x ptr], [2 x %struct.list_head] }
%struct.netns_xfrm = type { %struct.list_head, ptr, ptr, ptr, ptr, i32, i32, %struct.work_struct, %struct.list_head, ptr, i32, [3 x %struct.hlist_head], [3 x %struct.xfrm_policy_hash], [6 x i32], %struct.work_struct, %struct.xfrm_policy_hthresh, %struct.list_head, ptr, ptr, i32, i32, i32, i32, i8, ptr, [8 x i8], %struct.dst_ops, %struct.dst_ops, %struct.spinlock, %struct.seqcount_spinlock, %struct.seqcount_spinlock, %struct.spinlock, %struct.mutex }
%struct.xfrm_policy_hash = type { ptr, i32, i8, i8, i8, i8 }
%struct.xfrm_policy_hthresh = type { %struct.work_struct, %struct.seqlock_t, i8, i8, i8, i8 }
%struct.netns_mpls = type { i32, i32, i32, ptr, ptr }
%struct.netns_can = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.timer_list, ptr, ptr, %struct.hlist_head }
%struct.netns_xdp = type { %struct.mutex, %struct.hlist_head }
%struct.netns_mctp = type { %struct.list_head, %struct.mutex, %struct.hlist_head, %struct.spinlock, %struct.hlist_head, i32, %struct.mutex, %struct.list_head }
%struct.netns_smc = type { ptr, %struct.mutex, ptr }
%struct.cache_detail = type { ptr, i32, ptr, %struct.spinlock, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i64, %struct.list_head, i64, i32, %struct.list_head, %struct.atomic_t, i64, i64, %union.anon.144, ptr }
%union.anon.144 = type { ptr }
%struct.export_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32 }
%struct.nfsd4_fs_location = type { ptr, ptr }
%struct.nfsd4_access = type { i32, i32, i32 }
%struct.nfsd4_close = type { i32, %struct.stateid_t }
%struct.nfsd4_commit = type { i64, i32, %struct.nfs4_verifier }
%struct.nfs4_verifier = type { [8 x i8] }
%struct.nfsd4_create = type { i32, ptr, i32, %union.anon.164, [3 x i32], %struct.iattr, i32, %struct.nfsd4_change_info, ptr, %struct.xdr_netobj }
%union.anon.164 = type { %struct.anon.165 }
%struct.anon.165 = type { i32, ptr, %struct.kvec }
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, ptr }
%struct.nfsd4_change_info = type { i32, i64, i64 }
%struct.nfsd4_getattr = type { [3 x i32], ptr }
%struct.nfsd4_link = type { i32, ptr, %struct.nfsd4_change_info }
%struct.nfsd4_lock = type { i32, i32, i64, i64, i32, %union.anon.168, %union.anon.171 }
%union.anon.168 = type { %struct.anon.169 }
%struct.anon.169 = type { i32, %struct.stateid_t, i32, %struct.clientid_t, %struct.xdr_netobj }
%union.anon.171 = type { %struct.nfsd4_lock_denied }
%struct.nfsd4_lock_denied = type { %struct.clientid_t, %struct.xdr_netobj, i64, i64, i32 }
%struct.nfsd4_lockt = type { i32, %struct.clientid_t, %struct.xdr_netobj, i64, i64, %struct.nfsd4_lock_denied }
%struct.nfsd4_locku = type { i32, i32, %struct.stateid_t, i64, i64 }
%struct.nfsd4_open = type { i32, i32, ptr, i32, %struct.stateid_t, i32, i32, i32, i32, [3 x i32], %struct.iattr, [16 x i8], %struct.nfs4_verifier, %struct.clientid_t, %struct.xdr_netobj, i32, i32, i32, i32, %struct.stateid_t, i32, i32, %struct.nfsd4_change_info, i32, i8, i8, ptr, ptr, ptr, ptr, ptr, %struct.xdr_netobj }
%struct.nfsd4_open_confirm = type { %struct.stateid_t, i32, %struct.stateid_t }
%struct.nfsd4_read = type { %struct.stateid_t, i64, i32, i32, ptr, ptr, ptr }
%struct.nfsd_file = type { %struct.hlist_node, %struct.list_head, %struct.callback_head, ptr, ptr, ptr, i32, ptr, i32, %struct.refcount_struct, i8, ptr }
%struct.file = type { %union.anon.18, %struct.path, ptr, ptr, %struct.spinlock, i32, %struct.atomic_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, ptr, %struct.file_ra_state, i64, ptr, ptr, ptr, ptr, i32, i32 }
%union.anon.18 = type { %struct.callback_head }
%struct.fown_struct = type { %struct.rwlock_t, ptr, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i32, i32, i32, i32, i32, i64 }
%struct.file_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.nfsd4_readdir = type { i64, %struct.nfs4_verifier, i32, i32, [3 x i32], ptr, ptr, %struct.readdir_cd, ptr, i32 }
%struct.readdir_cd = type { i32 }
%struct.nfsd4_readlink = type { ptr, ptr }
%struct.nfsd4_remove = type { i32, ptr, %struct.nfsd4_change_info }
%struct.nfsd4_rename = type { i32, ptr, i32, ptr, %struct.nfsd4_change_info, %struct.nfsd4_change_info }
%struct.nfsd4_secinfo = type { i32, ptr, ptr }
%struct.nfsd4_setattr = type { %struct.stateid_t, [3 x i32], %struct.iattr, ptr, %struct.xdr_netobj }
%struct.nfsd4_setclientid = type { %struct.nfs4_verifier, %struct.xdr_netobj, i32, i32, ptr, i32, ptr, i32, %struct.clientid_t, %struct.nfs4_verifier }
%struct.nfsd4_write = type { %struct.stateid_t, i64, i32, i32, %struct.xdr_buf, i32, i32, %struct.nfs4_verifier }
%struct.nfsd4_bind_conn_to_session = type { %struct.nfs4_sessionid, i32 }
%struct.nfs4_sessionid = type { [16 x i8] }
%struct.nfsd4_exchange_id = type { %struct.nfs4_verifier, %struct.xdr_netobj, i32, %struct.clientid_t, i32, i32, [3 x i32], [3 x i32], %struct.xdr_netobj, %struct.xdr_netobj, %struct.timespec64 }
%struct.nfsd4_create_session = type { %struct.clientid_t, %struct.nfs4_sessionid, i32, i32, %struct.nfsd4_channel_attrs, %struct.nfsd4_channel_attrs, i32, %struct.nfsd4_cb_sec }
%struct.nfsd4_channel_attrs = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.nfsd4_cb_sec = type { i32, %struct.kuid_t, %struct.kgid_t }
%struct.nfsd4_getdeviceinfo = type { %struct.nfsd4_deviceid, i32, i32, i32, ptr }
%struct.nfsd4_deviceid = type { i64, i32, i32 }
%struct.nfsd4_layout_ops = type { i32, i8, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.nfsd4_layoutcommit = type { %struct.stateid_t, %struct.nfsd4_layout_seg, i32, i32, i64, %struct.timespec64, i32, i32, ptr, i32, i64 }
%struct.nfsd4_layout_seg = type { i32, i64, i64 }
%struct.nfsd4_layoutget = type { i64, i32, i32, i32, %struct.stateid_t, %struct.nfsd4_layout_seg, ptr }
%struct.nfsd4_layoutreturn = type { i32, i32, %struct.nfsd4_layout_seg, i32, i32, ptr, %struct.stateid_t, i32 }
%struct.nfsd4_secinfo_no_name = type { i32, ptr }
%struct.nfsd4_sequence = type { %struct.nfs4_sessionid, i32, i32, i32, i32, i32 }
%struct.nfsd4_test_stateid = type { i32, %struct.list_head }
%struct.nfsd4_copy = type { %struct.stateid_t, %struct.stateid_t, i64, i64, i64, %struct.nl4_server, i8, i32, %struct.nfsd42_write_res, %struct.nfsd4_callback, i32, %struct.knfsd_fh, ptr, ptr, ptr, %struct.copy_stateid_t, %struct.list_head, ptr, %struct.refcount_struct, i8, ptr, %struct.nfs_fh, %struct.nfs4_stateid_struct, i8 }
%struct.nfsd42_write_res = type { i64, i32, %struct.nfs4_verifier, %struct.stateid_t }
%struct.nfsd4_callback = type { ptr, %struct.rpc_message, ptr, %struct.work_struct, i32, i32, i8, i8 }
%struct.rpc_message = type { ptr, ptr, ptr, ptr }
%struct.copy_stateid_t = type { %struct.stateid_t, i8, %struct.refcount_struct }
%struct.nfs_fh = type { i16, [128 x i8] }
%struct.nfs4_stateid_struct = type { %union.anon.177, i32 }
%union.anon.177 = type { %struct.anon.178 }
%struct.anon.178 = type { i32, [12 x i8] }
%struct.nfsd4_offload_status = type { %struct.stateid_t, i64, i32 }
%struct.nfsd4_seek = type { %struct.stateid_t, i64, i32, i32, i64 }
%struct.nfsd4_getxattr = type { ptr, i32, ptr }
%struct.nfsd4_setxattr = type { i32, ptr, ptr, i32, %struct.nfsd4_change_info }
%struct.nfsd4_listxattrs = type { i64, i32, ptr, i32 }
%struct.nfsd4_removexattr = type { ptr, %struct.nfsd4_change_info }
%struct.rpcsec_gss_info = type { %struct.rpcsec_gss_oid, i32, i32 }
%struct.rpcsec_gss_oid = type { i32, [32 x i8] }
%struct.auth_domain = type { %struct.kref, %struct.hlist_node, ptr, ptr, %struct.callback_head }
%struct.auth_ops = type { ptr, ptr, i32, ptr, ptr, ptr, ptr }
%struct.nfsd4_lookup = type { i32, ptr }
%struct.nfsd4_verify = type { [3 x i32], i32, ptr }
%struct.nfsd4_open_downgrade = type { %struct.stateid_t, i32, i32, i32, i32 }
%struct.nfsd4_putfh = type { i32, ptr, i8 }
%struct.nfsd4_setclientid_confirm = type { %struct.clientid_t, %struct.nfs4_verifier }
%struct.nfsd4_release_lockowner = type { %struct.clientid_t, %struct.xdr_netobj }
%struct.nfsd4_backchannel_ctl = type { i32, %struct.nfsd4_cb_sec }
%struct.nfsd4_fallocate = type { %struct.stateid_t, i64, i64 }
%struct.nfsd4_clone = type { %struct.stateid_t, %struct.stateid_t, i64, i64, i64 }
%struct.cred = type { %struct.atomic_t, %struct.atomic_t, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %union.anon.39 }
%struct.kernel_cap_struct = type { [2 x i32] }
%union.anon.39 = type { %struct.callback_head }

@nfsd_suppattrs = dso_local constant { [3 x [3 x i32]], [60 x i8] } { [3 x [3 x i32]] [[3 x i32] [i32 -33570817, i32 16367166, i32 0], [3 x i32] [i32 -33570817, i32 1090108990, i32 2051], [3 x i32] [i32 -33570817, i32 1090108990, i32 460803]], [60 x i8] zeroinitializer }, align 32
@nfsd4_check_resp_size.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"fs/nfsd/nfs4xdr.c\00", [46 x i8] zeroinitializer }, align 32
@nfsd4_encode_operation.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@nfsd4_enc_ops = internal constant { [76 x ptr], [80 x i8] } { [76 x ptr] [ptr null, ptr null, ptr null, ptr @nfsd4_encode_access, ptr @nfsd4_encode_close, ptr @nfsd4_encode_commit, ptr @nfsd4_encode_create, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_getattr, ptr @nfsd4_encode_getfh, ptr @nfsd4_encode_link, ptr @nfsd4_encode_lock, ptr @nfsd4_encode_lockt, ptr @nfsd4_encode_locku, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_open, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_open_confirm, ptr @nfsd4_encode_open_downgrade, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_read, ptr @nfsd4_encode_readdir, ptr @nfsd4_encode_readlink, ptr @nfsd4_encode_remove, ptr @nfsd4_encode_rename, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_secinfo, ptr @nfsd4_encode_setattr, ptr @nfsd4_encode_setclientid, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_write, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_bind_conn_to_session, ptr @nfsd4_encode_exchange_id, ptr @nfsd4_encode_create_session, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_getdeviceinfo, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_layoutcommit, ptr @nfsd4_encode_layoutget, ptr @nfsd4_encode_layoutreturn, ptr @nfsd4_encode_secinfo_no_name, ptr @nfsd4_encode_sequence, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_test_stateid, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_copy, ptr @nfsd4_encode_copy_notify, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_offload_status, ptr @nfsd4_encode_read_plus, ptr @nfsd4_encode_seek, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_noop, ptr @nfsd4_encode_getxattr, ptr @nfsd4_encode_setxattr, ptr @nfsd4_encode_listxattrs, ptr @nfsd4_encode_removexattr], [80 x i8] zeroinitializer }, align 32
@nfsd4_encode_replay.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@nfs4svc_encode_compoundres.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@nfsd_net_id = external dso_local local_unnamed_addr global i32, align 4
@.str.1 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"user.\00", [26 x i8] zeroinitializer }, align 32
@net_generic.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.2 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/net/netns/generic.h\00", [36 x i8] zeroinitializer }, align 32
@.str.3 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.4 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.6 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@nfsd_debug = external dso_local local_unnamed_addr global i32, align 4
@nfsd4_encode_path._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.7, ptr @.str.8, ptr @.str, i32 2563, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"nfsd4_encode_components(\00", [39 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"nfsd4_encode_path\00", [46 x i8] zeroinitializer }, align 32
@nfsd4_encode_path._entry_ptr = internal global ptr @nfsd4_encode_path._entry, section ".printk_index", align 4
@nfsd4_encode_path._entry.9 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.10, ptr @.str.8, ptr @.str, i32 2607, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"/%pd\00", [27 x i8] zeroinitializer }, align 32
@nfsd4_encode_path._entry_ptr.11 = internal global ptr @nfsd4_encode_path._entry.9, section ".printk_index", align 4
@nfsd4_encode_path._entry.12 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.13, ptr @.str.8, ptr @.str, i32 2615, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c")\0A\00", [29 x i8] zeroinitializer }, align 32
@nfsd4_encode_path._entry_ptr.14 = internal global ptr @nfsd4_encode_path._entry.12, section ".printk_index", align 4
@nfsd4_encode_components_esc._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.15, ptr @.str.16, ptr @.str, i32 2476, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"nfsd4_encode_components(%s)\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"nfsd4_encode_components_esc\00", [36 x i8] zeroinitializer }, align 32
@nfsd4_encode_components_esc._entry_ptr = internal global ptr @nfsd4_encode_components_esc._entry, section ".printk_index", align 4
@nfsd4_encode_read.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@nfsd4_encode_read.__already_done.17 = internal unnamed_addr global i1 false, section ".data.once", align 1
@nfsd4_encode_readdir.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@nfsd4_do_encode_secinfo.report = internal global { i1, [31 x i8] } zeroinitializer, align 32
@nfsd4_do_encode_secinfo._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.18, ptr @.str.19, ptr @.str, i32 4231, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\014NFS: SECINFO: security flavor %u is not supported\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"nfsd4_do_encode_secinfo\00", [40 x i8] zeroinitializer }, align 32
@nfsd4_do_encode_secinfo._entry_ptr = internal global ptr @nfsd4_do_encode_secinfo._entry, section ".printk_index", align 4
@nfsd4_encode_exchange_id.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@nfsd4_layout_ops = external dso_local local_unnamed_addr global [0 x ptr], align 4
@nfsd4_encode_getdeviceinfo._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.20, ptr @.str.21, ptr @.str, i32 4548, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"%s: maxcount too small\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"nfsd4_encode_getdeviceinfo\00", [37 x i8] zeroinitializer }, align 32
@nfsd4_encode_getdeviceinfo._entry_ptr = internal global ptr @nfsd4_encode_getdeviceinfo._entry, section ".printk_index", align 4
@nfsd42_encode_nl4_server.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@__tracepoint_nfsd_compound_encode_err = external dso_local global %struct.tracepoint, align 4
@.str.22 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"fs/nfsd/trace.h\00", [16 x i8] zeroinitializer }, align 32
@trace_nfsd_compound_encode_err.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.23 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@nfsd4_decode_compound._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.24, ptr @.str.25, ptr @.str, i32 2356, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"nfsd: couldn't allocate room for COMPOUND\0A\00", [53 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"nfsd4_decode_compound\00", [42 x i8] zeroinitializer }, align 32
@nfsd4_decode_compound._entry_ptr = internal global ptr @nfsd4_decode_compound._entry, section ".printk_index", align 4
@nfsd4_dec_ops = internal constant { [76 x ptr], [80 x i8] } { [76 x ptr] [ptr null, ptr null, ptr null, ptr @nfsd4_decode_access, ptr @nfsd4_decode_close, ptr @nfsd4_decode_commit, ptr @nfsd4_decode_create, ptr @nfsd4_decode_notsupp, ptr @nfsd4_decode_delegreturn, ptr @nfsd4_decode_getattr, ptr @nfsd4_decode_noop, ptr @nfsd4_decode_link, ptr @nfsd4_decode_lock, ptr @nfsd4_decode_lockt, ptr @nfsd4_decode_locku, ptr @nfsd4_decode_lookup, ptr @nfsd4_decode_noop, ptr @nfsd4_decode_verify, ptr @nfsd4_decode_open, ptr @nfsd4_decode_notsupp, ptr @nfsd4_decode_open_confirm, ptr @nfsd4_decode_open_downgrade, ptr @nfsd4_decode_putfh, ptr @nfsd4_decode_putpubfh, ptr @nfsd4_decode_noop, ptr @nfsd4_decode_read, ptr @nfsd4_decode_readdir, ptr @nfsd4_decode_noop, ptr @nfsd4_decode_remove, ptr @nfsd4_decode_rename, ptr @nfsd4_decode_renew, ptr @nfsd4_decode_noop, ptr @nfsd4_decode_noop, ptr @nfsd4_decode_secinfo, ptr @nfsd4_decode_setattr, ptr @nfsd4_decode_setclientid, ptr @nfsd4_decode_setclientid_confirm, ptr @nfsd4_decode_verify, ptr @nfsd4_decode_write, ptr @nfsd4_decode_release_lockowner, ptr @nfsd4_decode_backchannel_ctl, ptr @nfsd4_decode_bind_conn_to_session, ptr @nfsd4_decode_exchange_id, ptr @nfsd4_decode_create_session, ptr @nfsd4_decode_destroy_session, ptr @nfsd4_decode_free_stateid, ptr @nfsd4_decode_notsupp, ptr @nfsd4_decode_getdeviceinfo, ptr @nfsd4_decode_notsupp, ptr @nfsd4_decode_layoutcommit, ptr @nfsd4_decode_layoutget, ptr @nfsd4_decode_layoutreturn, ptr @nfsd4_decode_secinfo_no_name, ptr @nfsd4_decode_sequence, ptr @nfsd4_decode_notsupp, ptr @nfsd4_decode_test_stateid, ptr @nfsd4_decode_notsupp, ptr @nfsd4_decode_destroy_clientid, ptr @nfsd4_decode_reclaim_complete, ptr @nfsd4_decode_fallocate, ptr @nfsd4_decode_copy, ptr @nfsd4_decode_copy_notify, ptr @nfsd4_decode_fallocate, ptr @nfsd4_decode_notsupp, ptr @nfsd4_decode_notsupp, ptr @nfsd4_decode_notsupp, ptr @nfsd4_decode_offload_status, ptr @nfsd4_decode_offload_status, ptr @nfsd4_decode_read, ptr @nfsd4_decode_seek, ptr @nfsd4_decode_notsupp, ptr @nfsd4_decode_clone, ptr @nfsd4_decode_getxattr, ptr @nfsd4_decode_setxattr, ptr @nfsd4_decode_listxattrs, ptr @nfsd4_decode_removexattr], [80 x i8] zeroinitializer }, align 32
@nfsd4_decode_authsys_parms._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.26, ptr @.str.27, ptr @.str, i32 680, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"RPC_AUTH_UNIX with invalid uid or gid, ignoring!\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"nfsd4_decode_authsys_parms\00", [37 x i8] zeroinitializer }, align 32
@nfsd4_decode_authsys_parms._entry_ptr = internal global ptr @nfsd4_decode_authsys_parms._entry, section ".printk_index", align 4
@init_user_ns = external dso_local global %struct.user_namespace, align 4
@nfsd4_decode_gss_cb_handles4._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.28, ptr @.str.29, ptr @.str, i32 694, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"RPC_AUTH_GSS callback secflavor not supported!\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"nfsd4_decode_gss_cb_handles4\00", [35 x i8] zeroinitializer }, align 32
@nfsd4_decode_gss_cb_handles4._entry_ptr = internal global ptr @nfsd4_decode_gss_cb_handles4._entry, section ".printk_index", align 4
@__tracepoint_nfsd_compound_decode_err = external dso_local global %struct.tracepoint, align 4
@trace_nfsd_compound_decode_err.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@switch.table.nfs4_file_type = internal constant { [12 x i32], [48 x i8] } { [12 x i32] [i32 7, i32 4, i32 0, i32 2, i32 0, i32 3, i32 0, i32 1, i32 0, i32 5, i32 0, i32 6], [48 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 4294967201, i64 4294967274]
@__sancov_gen_cov_switch_values.30 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967201]
@__sancov_gen_cov_switch_values.31 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.32 = internal global [5 x i64] [i64 3, i64 32, i64 10018, i64 10066, i64 10067]
@__sancov_gen_cov_switch_values.33 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 2]
@__sancov_gen_cov_switch_values.34 = internal global [4 x i64] [i64 2, i64 32, i64 25, i64 68]
@__sancov_gen_cov_switch_values.35 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 10010]
@__sancov_gen_cov_switch_values.36 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.37 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 10017]
@__sancov_gen_cov_switch_values.38 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.39 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 2, i64 10018]
@__sancov_gen_cov_switch_values.40 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 6]
@__sancov_gen_cov_switch_values.41 = internal global [5 x i64] [i64 3, i64 32, i64 3, i64 4, i64 5]
@__sancov_gen_cov_switch_values.42 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.43 = internal global [6 x i64] [i64 4, i64 32, i64 0, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.44 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 2]
@__sancov_gen_cov_switch_values.45 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.46 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.47 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.48 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 3]
@__sancov_gen_cov_switch_values.49 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.50 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.51 = internal global [9 x i64] [i64 7, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6]
@__sancov_gen_cov_switch_values.52 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 1, i64 6]
@___asan_gen_.53 = private unnamed_addr constant [15 x i8] c"nfsd_suppattrs\00", align 1
@___asan_gen_.55 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.163, i32 66, i32 11 }
@___asan_gen_.58 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.163, i32 5280, i32 3 }
@___asan_gen_.59 = private unnamed_addr constant [14 x i8] c"nfsd4_enc_ops\00", align 1
@___asan_gen_.61 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.163, i32 5167, i32 24 }
@___asan_gen_.64 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.163, i32 3324, i32 7 }
@___asan_gen_.69 = private unnamed_addr constant [31 x i8] c"../include/net/netns/generic.h\00", align 1
@___asan_gen_.70 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.69, i32 45, i32 7 }
@___asan_gen_.76 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.78, i32 695, i32 2 }
@___asan_gen_.78 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.79 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.78, i32 723, i32 2 }
@___asan_gen_.88 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.163, i32 2563, i32 2 }
@___asan_gen_.94 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.163, i32 2607, i32 3 }
@___asan_gen_.100 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.163, i32 2615, i32 2 }
@___asan_gen_.109 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.163, i32 2476, i32 2 }
@___asan_gen_.110 = private unnamed_addr constant [31 x i8] c"nfsd4_do_encode_secinfo.report\00", align 1
@___asan_gen_.119 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.163, i32 4230, i32 5 }
@___asan_gen_.128 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.163, i32 4548, i32 2 }
@___asan_gen_.130 = private unnamed_addr constant [19 x i8] c"../fs/nfsd/trace.h\00", align 1
@___asan_gen_.131 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.130, i32 163, i32 1 }
@___asan_gen_.133 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.134 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.133, i32 108, i32 2 }
@___asan_gen_.143 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.163, i32 2356, i32 4 }
@___asan_gen_.144 = private unnamed_addr constant [14 x i8] c"nfsd4_dec_ops\00", align 1
@___asan_gen_.146 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.163, i32 2208, i32 24 }
@___asan_gen_.155 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.163, i32 680, i32 4 }
@___asan_gen_.156 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.162 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.163 = private constant [21 x i8] c"../fs/nfsd/nfs4xdr.c\00", align 1
@___asan_gen_.164 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.163, i32 694, i32 2 }
@___asan_gen_.165 = private unnamed_addr constant [28 x i8] c"switch.table.nfs4_file_type\00", align 1
@llvm.compiler.used = appending global [48 x ptr] [ptr @nfsd4_decode_authsys_parms._entry, ptr @nfsd4_decode_authsys_parms._entry_ptr, ptr @nfsd4_decode_compound._entry, ptr @nfsd4_decode_compound._entry_ptr, ptr @nfsd4_decode_gss_cb_handles4._entry, ptr @nfsd4_decode_gss_cb_handles4._entry_ptr, ptr @nfsd4_do_encode_secinfo._entry, ptr @nfsd4_do_encode_secinfo._entry_ptr, ptr @nfsd4_encode_components_esc._entry, ptr @nfsd4_encode_components_esc._entry_ptr, ptr @nfsd4_encode_getdeviceinfo._entry, ptr @nfsd4_encode_getdeviceinfo._entry_ptr, ptr @nfsd4_encode_path._entry, ptr @nfsd4_encode_path._entry.12, ptr @nfsd4_encode_path._entry.9, ptr @nfsd4_encode_path._entry_ptr, ptr @nfsd4_encode_path._entry_ptr.11, ptr @nfsd4_encode_path._entry_ptr.14, ptr @nfsd_suppattrs, ptr @.str, ptr @nfsd4_enc_ops, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.10, ptr @.str.13, ptr @.str.15, ptr @.str.16, ptr @nfsd4_do_encode_secinfo.report, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @nfsd4_dec_ops, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @switch.table.nfs4_file_type], section "llvm.metadata"
@0 = internal global [39 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nfsd_suppattrs to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.53 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.55 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.58 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nfsd4_enc_ops to i32), i32 304, i32 384, i32 ptrtoint (ptr @___asan_gen_.59 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.61 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.64 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.70 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.70 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.76 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.76 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.79 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nfsd4_encode_path._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.156 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.88 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.88 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.88 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nfsd4_encode_path._entry.9 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.156 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.94 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.94 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nfsd4_encode_path._entry.12 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.156 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.100 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.100 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nfsd4_encode_components_esc._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.156 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.109 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.109 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.109 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nfsd4_do_encode_secinfo.report to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.110 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nfsd4_do_encode_secinfo._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.156 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nfsd4_encode_getdeviceinfo._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.156 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.128 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.128 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.128 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.131 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.134 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nfsd4_decode_compound._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.156 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.143 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.143 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.143 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nfsd4_dec_ops to i32), i32 304, i32 384, i32 ptrtoint (ptr @___asan_gen_.144 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.146 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nfsd4_decode_authsys_parms._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.156 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.155 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.155 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.155 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @nfsd4_decode_gss_cb_handles4._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.156 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.nfs4_file_type to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.165 to i32), i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nfsd4_encode_fattr_to_buf(ptr nocapture noundef %p, i32 noundef %words, ptr noundef %fhp, ptr noundef %exp, ptr noundef %dentry, ptr nocapture noundef readonly %bmval, ptr noundef %rqstp, i32 noundef %ignore_crossmnt) local_unnamed_addr #0 align 64 {
entry:
  %dummy = alloca %struct.xdr_buf, align 4
  %xdr = alloca %struct.xdr_stream, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 44, ptr nonnull %dummy) #16
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %xdr) #16
  %0 = getelementptr inbounds i8, ptr %xdr, i32 16
  %1 = call ptr @memset(ptr %0, i32 255, i32 20)
  %2 = ptrtoint ptr %p to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %p, align 4
  %shl = shl i32 %words, 2
  %iov_len.i = getelementptr inbounds %struct.xdr_stream, ptr %xdr, i32 0, i32 4, i32 1
  %4 = ptrtoint ptr %iov_len.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %iov_len.i, align 4
  %5 = getelementptr inbounds i8, ptr %dummy, i32 8
  %6 = call ptr @memset(ptr %5, i32 0, i32 28)
  %7 = ptrtoint ptr %dummy to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %3, ptr %dummy, align 4
  %iov_len3.i = getelementptr inbounds %struct.kvec, ptr %dummy, i32 0, i32 1
  %8 = ptrtoint ptr %iov_len3.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %iov_len3.i, align 4
  %len.i = getelementptr inbounds %struct.xdr_buf, ptr %dummy, i32 0, i32 8
  %9 = ptrtoint ptr %len.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %len.i, align 4
  %buf4.i = getelementptr inbounds %struct.xdr_stream, ptr %xdr, i32 0, i32 1
  %10 = ptrtoint ptr %buf4.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %dummy, ptr %buf4.i, align 4
  %iov.i = getelementptr inbounds %struct.xdr_stream, ptr %xdr, i32 0, i32 3
  %11 = ptrtoint ptr %iov.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %dummy, ptr %iov.i, align 4
  %12 = ptrtoint ptr %xdr to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %3, ptr %xdr, align 4
  %add.ptr.i = getelementptr i8, ptr %3, i32 %shl
  %end.i = getelementptr inbounds %struct.xdr_stream, ptr %xdr, i32 0, i32 2
  %13 = ptrtoint ptr %end.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %add.ptr.i, ptr %end.i, align 4
  %buflen.i = getelementptr inbounds %struct.xdr_buf, ptr %dummy, i32 0, i32 7
  %14 = ptrtoint ptr %buflen.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %shl, ptr %buflen.i, align 4
  %call = call fastcc i32 @nfsd4_encode_fattr(ptr noundef nonnull %xdr, ptr noundef %fhp, ptr noundef %exp, ptr noundef %dentry, ptr noundef %bmval, ptr noundef %rqstp, i32 noundef %ignore_crossmnt)
  %15 = ptrtoint ptr %xdr to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %xdr, align 4
  %17 = ptrtoint ptr %p to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %16, ptr %p, align 4
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %xdr) #16
  call void @llvm.lifetime.end.p0(i64 44, ptr nonnull %dummy) #16
  ret i32 %call
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_encode_fattr(ptr noundef %xdr, ptr noundef %fhp, ptr noundef %exp, ptr noundef %dentry, ptr nocapture noundef readonly %bmval, ptr noundef %rqstp, i32 noundef %ignore_crossmnt) unnamed_addr #0 align 64 {
entry:
  %stat = alloca %struct.kstat, align 8
  %statfs = alloca %struct.kstatfs, align 8
  %attrlen = alloca i32, align 4
  %acl = alloca ptr, align 4
  %context = alloca ptr, align 4
  %contextlen = alloca i32, align 4
  %path = alloca %struct.path, align 4
  %parent_stat = alloca %struct.kstat, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %bmval to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %bmval, align 4
  %arrayidx1 = getelementptr i32, ptr %bmval, i32 1
  %2 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %arrayidx1, align 4
  %arrayidx2 = getelementptr i32, ptr %bmval, i32 2
  %4 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx2, align 4
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %stat) #16
  %6 = call ptr @memset(ptr %stat, i32 255, i32 144)
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %statfs) #16
  %7 = call ptr @memset(ptr %statfs, i32 255, i32 88)
  %buf = getelementptr inbounds %struct.xdr_stream, ptr %xdr, i32 0, i32 1
  %8 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %buf, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %9, i32 0, i32 8
  %10 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %len, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %attrlen) #16
  %12 = ptrtoint ptr %attrlen to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 -1, ptr %attrlen, align 4, !annotation !103
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %acl) #16
  %13 = ptrtoint ptr %acl to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %acl, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %context) #16
  %14 = ptrtoint ptr %context to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %context, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %contextlen) #16
  %15 = ptrtoint ptr %contextlen to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 -1, ptr %contextlen, align 4, !annotation !103
  %rq_resp = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 36
  %16 = ptrtoint ptr %rq_resp to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %rq_resp, align 4
  %minorversion3 = getelementptr inbounds %struct.nfsd4_compoundres, ptr %17, i32 0, i32 6, i32 9
  %18 = ptrtoint ptr %minorversion3 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %minorversion3, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path) #16
  %20 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %ex_path = getelementptr inbounds %struct.svc_export, ptr %exp, i32 0, i32 3
  %21 = ptrtoint ptr %ex_path to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %ex_path, align 8
  %23 = ptrtoint ptr %path to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %22, ptr %path, align 4
  %24 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %dentry, ptr %20, align 4
  %rq_xprt = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 2
  %25 = ptrtoint ptr %rq_xprt to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %rq_xprt, align 8
  %tobool.not = icmp eq ptr %26, null
  %xpt_net = getelementptr inbounds %struct.svc_xprt, ptr %26, i32 0, i32 19
  %rq_bc_net = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 48
  %cond.in = select i1 %tobool.not, ptr %rq_bc_net, ptr %xpt_net
  %27 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %27)
  %cond = load ptr, ptr %cond.in, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfsd_net_id to i32))
  %28 = load i32, ptr @nfsd_net_id, align 4
  %call = tail call fastcc ptr @net_generic(ptr noundef %cond, i32 noundef %28)
  %and = and i32 %3, 4259840
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool7.not = icmp eq i32 %and, 0
  br i1 %tobool7.not, label %do.body16, label %do.body10, !prof !104

do.body10:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/nfsd/nfs4xdr.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2845, 0\0A.popsection", ""() #16, !srcloc !105
  unreachable

do.body16:                                        ; preds = %entry
  %arrayidx.i = getelementptr [3 x [3 x i32]], ptr @nfsd_suppattrs, i32 0, i32 %19
  %29 = ptrtoint ptr %bmval to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %bmval, align 4
  %31 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %arrayidx.i, align 4
  %neg.i.i = xor i32 %32, -1
  %and.i.i = and i32 %30, %neg.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %lor.lhs.false.i.i, label %do.body16.do.body27_crit_edge, !prof !106

do.body16.do.body27_crit_edge:                    ; preds = %do.body16
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body27

lor.lhs.false.i.i:                                ; preds = %do.body16
  %33 = ptrtoint ptr %arrayidx1 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx1, align 4
  %arrayidx3.i.i = getelementptr i32, ptr %arrayidx.i, i32 1
  %35 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %arrayidx3.i.i, align 4
  %neg4.i.i = xor i32 %36, -1
  %and5.i.i = and i32 %34, %neg4.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i.i)
  %tobool6.not.i.i = icmp eq i32 %and5.i.i, 0
  br i1 %tobool6.not.i.i, label %nfsd_attrs_supported.exit, label %lor.lhs.false.i.i.do.body27_crit_edge, !prof !106

lor.lhs.false.i.i.do.body27_crit_edge:            ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body27

nfsd_attrs_supported.exit:                        ; preds = %lor.lhs.false.i.i
  %37 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx2, align 4
  %arrayidx8.i.i = getelementptr i32, ptr %arrayidx.i, i32 2
  %39 = ptrtoint ptr %arrayidx8.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %arrayidx8.i.i, align 4
  %neg9.i.i = xor i32 %40, -1
  %and10.i.i = and i32 %38, %neg9.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10.i.i)
  %tobool11.i.i = icmp eq i32 %and10.i.i, 0
  br i1 %tobool11.i.i, label %do.end35, label %nfsd_attrs_supported.exit.do.body27_crit_edge, !prof !104

nfsd_attrs_supported.exit.do.body27_crit_edge:    ; preds = %nfsd_attrs_supported.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body27

do.body27:                                        ; preds = %nfsd_attrs_supported.exit.do.body27_crit_edge, %lor.lhs.false.i.i.do.body27_crit_edge, %do.body16.do.body27_crit_edge
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/nfsd/nfs4xdr.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2846, 0\0A.popsection", ""() #16, !srcloc !107
  unreachable

do.end35:                                         ; preds = %nfsd_attrs_supported.exit
  %migrated = getelementptr inbounds %struct.svc_export, ptr %exp, i32 0, i32 8, i32 2
  %41 = ptrtoint ptr %migrated to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %migrated, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool36.not = icmp eq i32 %42, 0
  br i1 %tobool36.not, label %do.end35.if.end42_crit_edge, label %if.then37

do.end35.if.end42_crit_edge:                      ; preds = %do.end35
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end42

if.then37:                                        ; preds = %do.end35
  %and.i = and i32 %1, -16779521
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  %and1.i = and i32 %3, -8388609
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool2.not.i = icmp eq i32 %and1.i, 0
  %or.cond1191 = select i1 %tobool.not.i, i1 %tobool2.not.i, i1 false
  br i1 %or.cond1191, label %if.then37.fattr_handle_absent_fs.exit.thread_crit_edge, label %if.then.i

if.then37.fattr_handle_absent_fs.exit.thread_crit_edge: ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #18
  br label %fattr_handle_absent_fs.exit.thread

if.then.i:                                        ; preds = %if.then37
  %43 = and i32 %1, 16779264
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %if.then.i.out_crit_edge, label %if.then.i.fattr_handle_absent_fs.exit.thread_crit_edge

if.then.i.fattr_handle_absent_fs.exit.thread_crit_edge: ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %fattr_handle_absent_fs.exit.thread

if.then.i.out_crit_edge:                          ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

fattr_handle_absent_fs.exit.thread:               ; preds = %if.then.i.fattr_handle_absent_fs.exit.thread_crit_edge, %if.then37.fattr_handle_absent_fs.exit.thread_crit_edge
  %rdattr_err.0 = phi i32 [ 10019, %if.then.i.fattr_handle_absent_fs.exit.thread_crit_edge ], [ 0, %if.then37.fattr_handle_absent_fs.exit.thread_crit_edge ]
  %and10.i = and i32 %1, 16779520
  %and11.i = and i32 %3, 8388608
  br label %if.end42

if.end42:                                         ; preds = %fattr_handle_absent_fs.exit.thread, %do.end35.if.end42_crit_edge
  %bmval0.1 = phi i32 [ %1, %do.end35.if.end42_crit_edge ], [ %and10.i, %fattr_handle_absent_fs.exit.thread ]
  %bmval1.1 = phi i32 [ %3, %do.end35.if.end42_crit_edge ], [ %and11.i, %fattr_handle_absent_fs.exit.thread ]
  %bmval2.1 = phi i32 [ %5, %do.end35.if.end42_crit_edge ], [ 0, %fattr_handle_absent_fs.exit.thread ]
  %rdattr_err.2 = phi i32 [ 0, %do.end35.if.end42_crit_edge ], [ %rdattr_err.0, %fattr_handle_absent_fs.exit.thread ]
  %call43 = call i32 @vfs_getattr(ptr noundef nonnull %path, ptr noundef nonnull %stat, i32 noundef 2047, i32 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call43)
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %if.end46, label %if.end42.out_nfserr_crit_edge

if.end42.out_nfserr_crit_edge:                    ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_nfserr

if.end46:                                         ; preds = %if.end42
  %and47 = and i32 %bmval0.1, 551550976
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and47)
  %tobool48.not = icmp eq i32 %and47, 0
  %and49 = and i32 %bmval1.1, 7168
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and49)
  %tobool50.not = icmp eq i32 %and49, 0
  %or.cond1192 = select i1 %tobool48.not, i1 %tobool50.not, i1 false
  br i1 %or.cond1192, label %if.end46.if.end56_crit_edge, label %if.then51

if.end46.if.end56_crit_edge:                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end56

if.then51:                                        ; preds = %if.end46
  %call52 = call i32 @vfs_statfs(ptr noundef nonnull %path, ptr noundef nonnull %statfs) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call52)
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %if.then51.if.end56_crit_edge, label %if.then51.out_nfserr_crit_edge

if.then51.out_nfserr_crit_edge:                   ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_nfserr

if.then51.if.end56_crit_edge:                     ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end56

if.end56:                                         ; preds = %if.then51.if.end56_crit_edge, %if.end46.if.end56_crit_edge
  %and57 = and i32 %bmval0.1, 524544
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and57)
  %tobool58.not = icmp ne i32 %and57, 0
  %tobool59.not = icmp eq ptr %fhp, null
  %or.cond = and i1 %tobool59.not, %tobool58.not
  br i1 %or.cond, label %if.then60, label %if.end56.if.end70_crit_edge

if.end56.if.end70_crit_edge:                      ; preds = %if.end56
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end70

if.then60:                                        ; preds = %if.end56
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %45 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %45, i32 noundef 3264, i32 noundef 360) #19
  %tobool62.not = icmp eq ptr %call7.i, null
  br i1 %tobool62.not, label %if.then60.out_crit_edge, label %if.end64

if.then60.out_crit_edge:                          ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end64:                                         ; preds = %if.then60
  %46 = call ptr @memset(ptr %call7.i, i32 0, i32 360)
  %fh_maxsize.i = getelementptr inbounds %struct.svc_fh, ptr %call7.i, i32 0, i32 1
  %47 = ptrtoint ptr %fh_maxsize.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 128, ptr %fh_maxsize.i, align 4
  %call66 = call i32 @fh_compose(ptr noundef nonnull %call7.i, ptr noundef %exp, ptr noundef %dentry, ptr noundef null) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call66)
  %tobool67.not = icmp eq i32 %call66, 0
  br i1 %tobool67.not, label %if.end64.if.end70_crit_edge, label %if.end64.out_crit_edge

if.end64.out_crit_edge:                           ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end64.if.end70_crit_edge:                      ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end70

if.end70:                                         ; preds = %if.end64.if.end70_crit_edge, %if.end56.if.end70_crit_edge
  %tempfh.0 = phi ptr [ null, %if.end56.if.end70_crit_edge ], [ %call7.i, %if.end64.if.end70_crit_edge ]
  %fhp.addr.0 = phi ptr [ %fhp, %if.end56.if.end70_crit_edge ], [ %call7.i, %if.end64.if.end70_crit_edge ]
  %and71 = and i32 %bmval0.1, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and71)
  %tobool72.not = icmp eq i32 %and71, 0
  br i1 %tobool72.not, label %if.end70.if.end85_crit_edge, label %if.then73

if.end70.if.end85_crit_edge:                      ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end85

if.then73:                                        ; preds = %if.end70
  %call74 = call i32 @nfsd4_get_nfs4_acl(ptr noundef %rqstp, ptr noundef %dentry, ptr noundef nonnull %acl) #16
  %48 = zext i32 %call74 to i64
  call void @__sanitizer_cov_trace_switch(i64 %48, ptr @__sancov_gen_cov_switch_values)
  switch i32 %call74, label %if.then73.out_nfserr_crit_edge [
    i32 -95, label %if.then75
    i32 -22, label %if.then73.out_crit_edge
    i32 0, label %if.then73.if.end85_crit_edge
  ]

if.then73.if.end85_crit_edge:                     ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end85

if.then73.out_crit_edge:                          ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.then73.out_nfserr_crit_edge:                   ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_nfserr

if.then75:                                        ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #18
  %and76 = and i32 %bmval0.1, -4097
  br label %if.end85

if.end85:                                         ; preds = %if.then75, %if.then73.if.end85_crit_edge, %if.end70.if.end85_crit_edge
  %bmval0.2 = phi i32 [ %bmval0.1, %if.end70.if.end85_crit_edge ], [ %bmval0.1, %if.then73.if.end85_crit_edge ], [ %and76, %if.then75 ]
  %and86 = and i32 %bmval2.1, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and86)
  %tobool87.not = icmp eq i32 %and86, 0
  %and89 = and i32 %bmval0.2, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and89)
  %tobool90.not = icmp eq i32 %and89, 0
  %or.cond1193 = select i1 %tobool87.not, i1 %tobool90.not, i1 false
  br i1 %or.cond1193, label %if.end85.if.end112_crit_edge, label %if.then91

if.end85.if.end112_crit_edge:                     ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end112

if.then91:                                        ; preds = %if.end85
  %ex_flags = getelementptr inbounds %struct.svc_export, ptr %exp, i32 0, i32 2
  %49 = ptrtoint ptr %ex_flags to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %ex_flags, align 4
  %and92 = and i32 %50, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and92)
  %tobool93.not = icmp eq i32 %and92, 0
  br i1 %tobool93.not, label %if.then91.if.end98_crit_edge, label %if.then94

if.then91.if.end98_crit_edge:                     ; preds = %if.then91
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end98

if.then94:                                        ; preds = %if.then91
  call void @__sanitizer_cov_trace_pc() #18
  %d_inode.i = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %51 = ptrtoint ptr %d_inode.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %d_inode.i, align 8
  %call96 = call i32 @security_inode_getsecctx(ptr noundef %52, ptr noundef nonnull %context, ptr noundef nonnull %contextlen) #16
  br label %if.end98

if.end98:                                         ; preds = %if.then94, %if.then91.if.end98_crit_edge
  %err.2 = phi i32 [ %call96, %if.then94 ], [ -95, %if.then91.if.end98_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.2)
  %cmp99 = icmp eq i32 %err.2, 0
  br i1 %tobool87.not, label %if.end98.if.end112_crit_edge, label %if.then102

if.end98.if.end112_crit_edge:                     ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end112

if.then102:                                       ; preds = %if.end98
  %53 = zext i32 %err.2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %53, ptr @__sancov_gen_cov_switch_values.30)
  switch i32 %err.2, label %if.then102.out_nfserr_crit_edge [
    i32 -95, label %if.then104
    i32 0, label %if.then102.if.then.i1066_crit_edge
  ]

if.then102.if.then.i1066_crit_edge:               ; preds = %if.then102
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i1066

if.then102.out_nfserr_crit_edge:                  ; preds = %if.then102
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_nfserr

if.then104:                                       ; preds = %if.then102
  call void @__sanitizer_cov_trace_pc() #18
  %and105 = and i32 %bmval2.1, -65537
  br label %if.end112

if.end112:                                        ; preds = %if.then104, %if.end98.if.end112_crit_edge, %if.end85.if.end112_crit_edge
  %bmval2.2 = phi i32 [ %bmval2.1, %if.end98.if.end112_crit_edge ], [ %and105, %if.then104 ], [ %bmval2.1, %if.end85.if.end112_crit_edge ]
  %contextsupport.0.shrunk = phi i1 [ %cmp99, %if.end98.if.end112_crit_edge ], [ %cmp99, %if.then104 ], [ false, %if.end85.if.end112_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bmval2.2)
  %tobool.not.i1065 = icmp eq i32 %bmval2.2, 0
  br i1 %tobool.not.i1065, label %if.else.i, label %if.end112.if.then.i1066_crit_edge

if.end112.if.then.i1066_crit_edge:                ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i1066

if.then.i1066:                                    ; preds = %if.end112.if.then.i1066_crit_edge, %if.then102.if.then.i1066_crit_edge
  %contextsupport.0.shrunk1169 = phi i1 [ %contextsupport.0.shrunk, %if.end112.if.then.i1066_crit_edge ], [ %cmp99, %if.then102.if.then.i1066_crit_edge ]
  %bmval2.21164 = phi i32 [ %bmval2.2, %if.end112.if.then.i1066_crit_edge ], [ %bmval2.1, %if.then102.if.then.i1066_crit_edge ]
  %call.i = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 16) #16
  %tobool1.not.i = icmp eq ptr %call.i, null
  br i1 %tobool1.not.i, label %if.then.i1066.out_crit_edge, label %if.end.i

if.then.i1066.out_crit_edge:                      ; preds = %if.then.i1066
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end.i:                                         ; preds = %if.then.i1066
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %54 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 3, ptr %call.i, align 4
  %incdec.ptr3.i = getelementptr i32, ptr %call.i, i32 2
  %55 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %bmval0.2, ptr %incdec.ptr.i, align 4
  %incdec.ptr4.i = getelementptr i32, ptr %call.i, i32 3
  %56 = ptrtoint ptr %incdec.ptr3.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %bmval1.1, ptr %incdec.ptr3.i, align 4
  %57 = ptrtoint ptr %incdec.ptr4.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %bmval2.21164, ptr %incdec.ptr4.i, align 4
  br label %if.end116

if.else.i:                                        ; preds = %if.end112
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bmval1.1)
  %tobool6.not.i = icmp eq i32 %bmval1.1, 0
  br i1 %tobool6.not.i, label %if.else15.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.else.i
  %call8.i = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 12) #16
  %tobool9.not.i = icmp eq ptr %call8.i, null
  br i1 %tobool9.not.i, label %if.then7.i.out_crit_edge, label %if.end11.i

if.then7.i.out_crit_edge:                         ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end11.i:                                       ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr12.i = getelementptr i32, ptr %call8.i, i32 1
  %58 = ptrtoint ptr %call8.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 2, ptr %call8.i, align 4
  %incdec.ptr13.i = getelementptr i32, ptr %call8.i, i32 2
  %59 = ptrtoint ptr %incdec.ptr12.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %bmval0.2, ptr %incdec.ptr12.i, align 4
  %60 = ptrtoint ptr %incdec.ptr13.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %bmval1.1, ptr %incdec.ptr13.i, align 4
  br label %if.end116

if.else15.i:                                      ; preds = %if.else.i
  %call16.i = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 8) #16
  %tobool17.not.i = icmp eq ptr %call16.i, null
  br i1 %tobool17.not.i, label %if.else15.i.out_crit_edge, label %if.end19.i

if.else15.i.out_crit_edge:                        ; preds = %if.else15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end19.i:                                       ; preds = %if.else15.i
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr20.i = getelementptr i32, ptr %call16.i, i32 1
  %61 = ptrtoint ptr %call16.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 1, ptr %call16.i, align 4
  %62 = ptrtoint ptr %incdec.ptr20.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %bmval0.2, ptr %incdec.ptr20.i, align 4
  br label %if.end116

if.end116:                                        ; preds = %if.end19.i, %if.end11.i, %if.end.i
  %contextsupport.0.shrunk1168.ph = phi i1 [ %contextsupport.0.shrunk1169, %if.end.i ], [ %contextsupport.0.shrunk, %if.end19.i ], [ %contextsupport.0.shrunk, %if.end11.i ]
  %bmval2.21165.ph = phi i32 [ %bmval2.21164, %if.end.i ], [ 0, %if.end19.i ], [ 0, %if.end11.i ]
  %63 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %buf, align 4
  %len118 = getelementptr inbounds %struct.xdr_buf, ptr %64, i32 0, i32 8
  %65 = ptrtoint ptr %len118 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %len118, align 4
  %call119 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool120.not = icmp eq ptr %call119, null
  br i1 %tobool120.not, label %if.end116.out_crit_edge, label %if.end122

if.end116.out_crit_edge:                          ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end122:                                        ; preds = %if.end116
  br i1 %tobool90.not, label %if.end122.if.end164_crit_edge, label %if.then125

if.end122.if.end164_crit_edge:                    ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end164

if.then125:                                       ; preds = %if.end122
  %67 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %supp.sroa.8.0.copyload = load i32, ptr %arrayidx3.i.i, align 4
  %68 = ptrtoint ptr %arrayidx8.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %supp.sroa.11.0.copyload = load i32, ptr %arrayidx8.i.i, align 4
  %d_inode = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %69 = ptrtoint ptr %d_inode to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %d_inode, align 8
  %i_sb = getelementptr inbounds %struct.inode, ptr %70, i32 0, i32 8
  %71 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %i_sb, align 4
  %s_flags = getelementptr inbounds %struct.super_block, ptr %72, i32 0, i32 10
  %73 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %s_flags, align 4
  %and128 = and i32 %74, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and128)
  %tobool129.not = icmp eq i32 %and128, 0
  %and132 = and i32 %32, -4097
  %spec.select = select i1 %tobool129.not, i32 %and132, i32 %32
  %and137 = and i32 %supp.sroa.11.0.copyload, -65537
  %supp.sroa.11.0 = select i1 %contextsupport.0.shrunk1168.ph, i32 %supp.sroa.11.0.copyload, i32 %and137
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %supp.sroa.11.0)
  %tobool140.not = icmp eq i32 %supp.sroa.11.0, 0
  br i1 %tobool140.not, label %if.then141, label %if.else151

if.then141:                                       ; preds = %if.then125
  %call142 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 12) #16
  %tobool143.not = icmp eq ptr %call142, null
  br i1 %tobool143.not, label %if.then141.out_crit_edge, label %if.end145

if.then141.out_crit_edge:                         ; preds = %if.then141
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end145:                                        ; preds = %if.then141
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr146 = getelementptr i32, ptr %call142, i32 1
  %75 = ptrtoint ptr %call142 to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 2, ptr %call142, align 4
  %incdec.ptr148 = getelementptr i32, ptr %call142, i32 2
  %76 = ptrtoint ptr %incdec.ptr146 to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %spec.select, ptr %incdec.ptr146, align 4
  %77 = ptrtoint ptr %incdec.ptr148 to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 %supp.sroa.8.0.copyload, ptr %incdec.ptr148, align 4
  br label %if.end164

if.else151:                                       ; preds = %if.then125
  %call152 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 16) #16
  %tobool153.not = icmp eq ptr %call152, null
  br i1 %tobool153.not, label %if.else151.out_crit_edge, label %if.end155

if.else151.out_crit_edge:                         ; preds = %if.else151
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end155:                                        ; preds = %if.else151
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr156 = getelementptr i32, ptr %call152, i32 1
  %78 = ptrtoint ptr %call152 to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 3, ptr %call152, align 4
  %incdec.ptr158 = getelementptr i32, ptr %call152, i32 2
  %79 = ptrtoint ptr %incdec.ptr156 to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %spec.select, ptr %incdec.ptr156, align 4
  %incdec.ptr160 = getelementptr i32, ptr %call152, i32 3
  %80 = ptrtoint ptr %incdec.ptr158 to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 %supp.sroa.8.0.copyload, ptr %incdec.ptr158, align 4
  %81 = ptrtoint ptr %incdec.ptr160 to i32
  call void @__asan_store4_noabort(i32 %81)
  store i32 %supp.sroa.11.0, ptr %incdec.ptr160, align 4
  br label %if.end164

if.end164:                                        ; preds = %if.end155, %if.end145, %if.end122.if.end164_crit_edge
  %and165 = and i32 %bmval0.2, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and165)
  %tobool166.not = icmp eq i32 %and165, 0
  br i1 %tobool166.not, label %if.end164.if.end177_crit_edge, label %if.then167

if.end164.if.end177_crit_edge:                    ; preds = %if.end164
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end177

if.then167:                                       ; preds = %if.end164
  %call168 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool169.not = icmp eq ptr %call168, null
  br i1 %tobool169.not, label %if.then167.out_crit_edge, label %if.end171

if.then167.out_crit_edge:                         ; preds = %if.then167
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end171:                                        ; preds = %if.then167
  %mode = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 1
  %82 = ptrtoint ptr %mode to i32
  call void @__asan_load2_noabort(i32 %82)
  %83 = load i16, ptr %mode, align 4
  %call172 = call fastcc i32 @nfs4_file_type(i16 noundef zeroext %83)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call172)
  %cmp173 = icmp eq i32 %call172, 0
  br i1 %cmp173, label %if.end171.out_crit_edge, label %if.end175

if.end171.out_crit_edge:                          ; preds = %if.end171
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end175:                                        ; preds = %if.end171
  call void @__sanitizer_cov_trace_pc() #18
  %84 = ptrtoint ptr %call168 to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 %call172, ptr %call168, align 4
  br label %if.end177

if.end177:                                        ; preds = %if.end175, %if.end164.if.end177_crit_edge
  %and178 = and i32 %bmval0.2, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and178)
  %tobool179.not = icmp eq i32 %and178, 0
  br i1 %tobool179.not, label %if.end177.if.end193_crit_edge, label %if.then180

if.end177.if.end193_crit_edge:                    ; preds = %if.end177
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end193

if.then180:                                       ; preds = %if.end177
  %call181 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool182.not = icmp eq ptr %call181, null
  br i1 %tobool182.not, label %if.then180.out_crit_edge, label %if.end184

if.then180.out_crit_edge:                         ; preds = %if.then180
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end184:                                        ; preds = %if.then180
  call void @__sanitizer_cov_trace_pc() #18
  %ex_flags185 = getelementptr inbounds %struct.svc_export, ptr %exp, i32 0, i32 2
  %85 = ptrtoint ptr %ex_flags185 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %ex_flags185, align 4
  %and186 = lshr i32 %86, 7
  %87 = and i32 %and186, 8
  %88 = xor i32 %87, 8
  %89 = ptrtoint ptr %call181 to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 %88, ptr %call181, align 4
  br label %if.end193

if.end193:                                        ; preds = %if.end184, %if.end177.if.end193_crit_edge
  %and194 = and i32 %bmval0.2, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and194)
  %tobool195.not = icmp eq i32 %and194, 0
  br i1 %tobool195.not, label %if.end193.if.end203_crit_edge, label %if.then196

if.end193.if.end203_crit_edge:                    ; preds = %if.end193
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end203

if.then196:                                       ; preds = %if.end193
  %call197 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 8) #16
  %tobool198.not = icmp eq ptr %call197, null
  br i1 %tobool198.not, label %if.then196.out_crit_edge, label %if.end200

if.then196.out_crit_edge:                         ; preds = %if.then196
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end200:                                        ; preds = %if.then196
  call void @__sanitizer_cov_trace_pc() #18
  %d_inode.i1068 = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %90 = ptrtoint ptr %d_inode.i1068 to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %d_inode.i1068, align 8
  call fastcc void @encode_change(ptr noundef nonnull %call197, ptr noundef nonnull %stat, ptr noundef %91, ptr noundef %exp)
  br label %if.end203

if.end203:                                        ; preds = %if.end200, %if.end193.if.end203_crit_edge
  %and204 = and i32 %bmval0.2, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and204)
  %tobool205.not = icmp eq i32 %and204, 0
  br i1 %tobool205.not, label %if.end203.if.end212_crit_edge, label %if.then206

if.end203.if.end212_crit_edge:                    ; preds = %if.end203
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end212

if.then206:                                       ; preds = %if.end203
  %call207 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 8) #16
  %tobool208.not = icmp eq ptr %call207, null
  br i1 %tobool208.not, label %if.then206.out_crit_edge, label %if.end210

if.then206.out_crit_edge:                         ; preds = %if.then206
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end210:                                        ; preds = %if.then206
  call void @__sanitizer_cov_trace_pc() #18
  %size = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 11
  %92 = ptrtoint ptr %size to i32
  call void @__asan_load8_noabort(i32 %92)
  %93 = load i64, ptr %size, align 8
  %94 = ptrtoint ptr %call207 to i32
  call void @__asan_storeN_noabort(i32 %94, i32 8)
  store i64 %93, ptr %call207, align 1
  br label %if.end212

if.end212:                                        ; preds = %if.end210, %if.end203.if.end212_crit_edge
  %and213 = and i32 %bmval0.2, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and213)
  %tobool214.not = icmp eq i32 %and213, 0
  br i1 %tobool214.not, label %if.end212.if.end221_crit_edge, label %if.then215

if.end212.if.end221_crit_edge:                    ; preds = %if.end212
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end221

if.then215:                                       ; preds = %if.end212
  %call216 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool217.not = icmp eq ptr %call216, null
  br i1 %tobool217.not, label %if.then215.out_crit_edge, label %if.end219

if.then215.out_crit_edge:                         ; preds = %if.then215
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end219:                                        ; preds = %if.then215
  call void @__sanitizer_cov_trace_pc() #18
  %95 = ptrtoint ptr %call216 to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 1, ptr %call216, align 4
  br label %if.end221

if.end221:                                        ; preds = %if.end219, %if.end212.if.end221_crit_edge
  %and222 = and i32 %bmval0.2, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and222)
  %tobool223.not = icmp eq i32 %and222, 0
  br i1 %tobool223.not, label %if.end221.if.end230_crit_edge, label %if.then224

if.end221.if.end230_crit_edge:                    ; preds = %if.end221
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end230

if.then224:                                       ; preds = %if.end221
  %call225 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool226.not = icmp eq ptr %call225, null
  br i1 %tobool226.not, label %if.then224.out_crit_edge, label %if.end228

if.then224.out_crit_edge:                         ; preds = %if.then224
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end228:                                        ; preds = %if.then224
  call void @__sanitizer_cov_trace_pc() #18
  %96 = ptrtoint ptr %call225 to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 1, ptr %call225, align 4
  br label %if.end230

if.end230:                                        ; preds = %if.end228, %if.end221.if.end230_crit_edge
  %and231 = and i32 %bmval0.2, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and231)
  %tobool232.not = icmp eq i32 %and231, 0
  br i1 %tobool232.not, label %if.end230.if.end239_crit_edge, label %if.then233

if.end230.if.end239_crit_edge:                    ; preds = %if.end230
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end239

if.then233:                                       ; preds = %if.end230
  %call234 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool235.not = icmp eq ptr %call234, null
  br i1 %tobool235.not, label %if.then233.out_crit_edge, label %if.end237

if.then233.out_crit_edge:                         ; preds = %if.then233
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end237:                                        ; preds = %if.then233
  call void @__sanitizer_cov_trace_pc() #18
  %97 = ptrtoint ptr %call234 to i32
  call void @__asan_store4_noabort(i32 %97)
  store i32 0, ptr %call234, align 4
  br label %if.end239

if.end239:                                        ; preds = %if.end237, %if.end230.if.end239_crit_edge
  %and240 = and i32 %bmval0.2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and240)
  %tobool241.not = icmp eq i32 %and240, 0
  br i1 %tobool241.not, label %if.end239.if.end267_crit_edge, label %if.then242

if.end239.if.end267_crit_edge:                    ; preds = %if.end239
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end267

if.then242:                                       ; preds = %if.end239
  %call243 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 16) #16
  %tobool244.not = icmp eq ptr %call243, null
  br i1 %tobool244.not, label %if.then242.out_crit_edge, label %if.end246

if.then242.out_crit_edge:                         ; preds = %if.then242
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end246:                                        ; preds = %if.then242
  %98 = ptrtoint ptr %migrated to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load i32, ptr %migrated, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %99)
  %tobool249.not = icmp eq i32 %99, 0
  br i1 %tobool249.not, label %if.else253, label %if.then250

if.then250:                                       ; preds = %if.end246
  call void @__sanitizer_cov_trace_pc() #18
  %100 = ptrtoint ptr %call243 to i32
  call void @__asan_storeN_noabort(i32 %100, i32 8)
  store i64 134217728, ptr %call243, align 1
  %add.ptr.i1069 = getelementptr i32, ptr %call243, i32 2
  %101 = ptrtoint ptr %add.ptr.i1069 to i32
  call void @__asan_storeN_noabort(i32 %101, i32 8)
  store i64 134217728, ptr %add.ptr.i1069, align 1
  br label %if.end267

if.else253:                                       ; preds = %if.end246
  %call254 = call i32 @fsid_source(ptr noundef %fhp.addr.0) #16
  %102 = zext i32 %call254 to i64
  call void @__sanitizer_cov_trace_switch(i64 %102, ptr @__sancov_gen_cov_switch_values.31)
  switch i32 %call254, label %if.else253.if.end267_crit_edge [
    i32 1, label %sw.bb
    i32 0, label %sw.bb257
    i32 2, label %sw.bb264
  ]

if.else253.if.end267_crit_edge:                   ; preds = %if.else253
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end267

sw.bb:                                            ; preds = %if.else253
  call void @__sanitizer_cov_trace_pc() #18
  %ex_fsid = getelementptr inbounds %struct.svc_export, ptr %exp, i32 0, i32 6
  %103 = ptrtoint ptr %ex_fsid to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %ex_fsid, align 8
  %conv = sext i32 %104 to i64
  %105 = ptrtoint ptr %call243 to i32
  call void @__asan_storeN_noabort(i32 %105, i32 8)
  store i64 %conv, ptr %call243, align 1
  %add.ptr.i1071 = getelementptr i32, ptr %call243, i32 2
  %106 = ptrtoint ptr %add.ptr.i1071 to i32
  call void @__asan_storeN_noabort(i32 %106, i32 8)
  store i64 0, ptr %add.ptr.i1071, align 1
  br label %if.end267

sw.bb257:                                         ; preds = %if.else253
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr258 = getelementptr i32, ptr %call243, i32 1
  %107 = ptrtoint ptr %call243 to i32
  call void @__asan_store4_noabort(i32 %107)
  store i32 0, ptr %call243, align 4
  %dev = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 7
  %108 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %dev, align 8
  %shr = lshr i32 %109, 20
  %incdec.ptr259 = getelementptr i32, ptr %call243, i32 2
  %110 = ptrtoint ptr %incdec.ptr258 to i32
  call void @__asan_store4_noabort(i32 %110)
  store i32 %shr, ptr %incdec.ptr258, align 4
  %incdec.ptr260 = getelementptr i32, ptr %call243, i32 3
  %111 = ptrtoint ptr %incdec.ptr259 to i32
  call void @__asan_store4_noabort(i32 %111)
  store i32 0, ptr %incdec.ptr259, align 4
  %112 = load i32, ptr %dev, align 8
  %and262 = and i32 %112, 1048575
  %113 = ptrtoint ptr %incdec.ptr260 to i32
  call void @__asan_store4_noabort(i32 %113)
  store i32 %and262, ptr %incdec.ptr260, align 4
  br label %if.end267

sw.bb264:                                         ; preds = %if.else253
  call void @__sanitizer_cov_trace_pc() #18
  %ex_uuid = getelementptr inbounds %struct.svc_export, ptr %exp, i32 0, i32 7
  %114 = ptrtoint ptr %ex_uuid to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %ex_uuid, align 4
  %call265 = call ptr @xdr_encode_opaque_fixed(ptr noundef nonnull %call243, ptr noundef %115, i32 noundef 16) #16
  br label %if.end267

if.end267:                                        ; preds = %sw.bb264, %sw.bb257, %sw.bb, %if.else253.if.end267_crit_edge, %if.then250, %if.end239.if.end267_crit_edge
  %and268 = and i32 %bmval0.2, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and268)
  %tobool269.not = icmp eq i32 %and268, 0
  br i1 %tobool269.not, label %if.end267.if.end276_crit_edge, label %if.then270

if.end267.if.end276_crit_edge:                    ; preds = %if.end267
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end276

if.then270:                                       ; preds = %if.end267
  %call271 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool272.not = icmp eq ptr %call271, null
  br i1 %tobool272.not, label %if.then270.out_crit_edge, label %if.end274

if.then270.out_crit_edge:                         ; preds = %if.then270
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end274:                                        ; preds = %if.then270
  call void @__sanitizer_cov_trace_pc() #18
  %116 = ptrtoint ptr %call271 to i32
  call void @__asan_store4_noabort(i32 %116)
  store i32 0, ptr %call271, align 4
  br label %if.end276

if.end276:                                        ; preds = %if.end274, %if.end267.if.end276_crit_edge
  %and277 = and i32 %bmval0.2, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and277)
  %tobool278.not = icmp eq i32 %and277, 0
  br i1 %tobool278.not, label %if.end276.if.end286_crit_edge, label %if.then279

if.end276.if.end286_crit_edge:                    ; preds = %if.end276
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end286

if.then279:                                       ; preds = %if.end276
  %call280 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool281.not = icmp eq ptr %call280, null
  br i1 %tobool281.not, label %if.then279.out_crit_edge, label %if.end283

if.then279.out_crit_edge:                         ; preds = %if.then279
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end283:                                        ; preds = %if.then279
  call void @__sanitizer_cov_trace_pc() #18
  %nfsd4_lease = getelementptr inbounds %struct.nfsd_net, ptr %call, i32 0, i32 26
  %117 = ptrtoint ptr %nfsd4_lease to i32
  call void @__asan_load8_noabort(i32 %117)
  %118 = load i64, ptr %nfsd4_lease, align 8
  %conv284 = trunc i64 %118 to i32
  %119 = ptrtoint ptr %call280 to i32
  call void @__asan_store4_noabort(i32 %119)
  store i32 %conv284, ptr %call280, align 4
  br label %if.end286

if.end286:                                        ; preds = %if.end283, %if.end276.if.end286_crit_edge
  %and287 = and i32 %bmval0.2, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and287)
  %tobool288.not = icmp eq i32 %and287, 0
  br i1 %tobool288.not, label %if.end286.if.end295_crit_edge, label %if.then289

if.end286.if.end295_crit_edge:                    ; preds = %if.end286
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end295

if.then289:                                       ; preds = %if.end286
  %call290 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool291.not = icmp eq ptr %call290, null
  br i1 %tobool291.not, label %if.then289.out_crit_edge, label %if.end293

if.then289.out_crit_edge:                         ; preds = %if.then289
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end293:                                        ; preds = %if.then289
  call void @__sanitizer_cov_trace_pc() #18
  %120 = ptrtoint ptr %call290 to i32
  call void @__asan_store4_noabort(i32 %120)
  store i32 %rdattr_err.2, ptr %call290, align 4
  br label %if.end295

if.end295:                                        ; preds = %if.end293, %if.end286.if.end295_crit_edge
  %and296 = and i32 %bmval0.2, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and296)
  %tobool297.not = icmp eq i32 %and296, 0
  br i1 %tobool297.not, label %if.end295.out_acl_crit_edge, label %if.then298

if.end295.out_acl_crit_edge:                      ; preds = %if.end295
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_acl

if.then298:                                       ; preds = %if.end295
  %121 = ptrtoint ptr %acl to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %acl, align 4
  %cmp299 = icmp eq ptr %122, null
  %call302 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool303.not = icmp eq ptr %call302, null
  br i1 %cmp299, label %if.then301, label %if.end307

if.then301:                                       ; preds = %if.then298
  br i1 %tobool303.not, label %if.then301.out_crit_edge, label %if.end305

if.then301.out_crit_edge:                         ; preds = %if.then301
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end305:                                        ; preds = %if.then301
  call void @__sanitizer_cov_trace_pc() #18
  %123 = ptrtoint ptr %call302 to i32
  call void @__asan_store4_noabort(i32 %123)
  store i32 0, ptr %call302, align 4
  br label %out_acl

if.end307:                                        ; preds = %if.then298
  br i1 %tobool303.not, label %if.end307.out_crit_edge, label %if.end311

if.end307.out_crit_edge:                          ; preds = %if.end307
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end311:                                        ; preds = %if.end307
  %124 = ptrtoint ptr %acl to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load ptr, ptr %acl, align 4
  %126 = ptrtoint ptr %125 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %125, align 4
  %128 = ptrtoint ptr %call302 to i32
  call void @__asan_store4_noabort(i32 %128)
  store i32 %127, ptr %call302, align 4
  %129 = load ptr, ptr %acl, align 4
  %aces = getelementptr inbounds %struct.nfs4_acl, ptr %129, i32 0, i32 1
  %130 = ptrtoint ptr %129 to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %129, align 4
  %add.ptr1195 = getelementptr %struct.nfs4_ace, ptr %aces, i32 %131
  %cmp3171196 = icmp ult ptr %aces, %add.ptr1195
  br i1 %cmp3171196, label %if.end311.for.body_crit_edge, label %if.end311.out_acl_crit_edge

if.end311.out_acl_crit_edge:                      ; preds = %if.end311
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_acl

if.end311.for.body_crit_edge:                     ; preds = %if.end311
  br label %for.body

for.cond:                                         ; preds = %if.end322
  %incdec.ptr331 = getelementptr %struct.nfs4_ace, ptr %ace.01197, i32 1
  %132 = ptrtoint ptr %acl to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load ptr, ptr %acl, align 4
  %aces314 = getelementptr inbounds %struct.nfs4_acl, ptr %133, i32 0, i32 1
  %134 = ptrtoint ptr %133 to i32
  call void @__asan_load4_noabort(i32 %134)
  %135 = load i32, ptr %133, align 4
  %add.ptr = getelementptr %struct.nfs4_ace, ptr %aces314, i32 %135
  %cmp317 = icmp ult ptr %incdec.ptr331, %add.ptr
  br i1 %cmp317, label %for.cond.for.body_crit_edge, label %for.cond.out_acl_crit_edge

for.cond.out_acl_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_acl

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %if.end311.for.body_crit_edge
  %ace.01197 = phi ptr [ %incdec.ptr331, %for.cond.for.body_crit_edge ], [ %aces, %if.end311.for.body_crit_edge ]
  %call319 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 12) #16
  %tobool320.not = icmp eq ptr %call319, null
  br i1 %tobool320.not, label %for.body.out_crit_edge, label %if.end322

for.body.out_crit_edge:                           ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end322:                                        ; preds = %for.body
  %136 = ptrtoint ptr %ace.01197 to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load i32, ptr %ace.01197, align 4
  %incdec.ptr323 = getelementptr i32, ptr %call319, i32 1
  %138 = ptrtoint ptr %call319 to i32
  call void @__asan_store4_noabort(i32 %138)
  store i32 %137, ptr %call319, align 4
  %flag = getelementptr inbounds %struct.nfs4_ace, ptr %ace.01197, i32 0, i32 1
  %139 = ptrtoint ptr %flag to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load i32, ptr %flag, align 4
  %incdec.ptr324 = getelementptr i32, ptr %call319, i32 2
  %141 = ptrtoint ptr %incdec.ptr323 to i32
  call void @__asan_store4_noabort(i32 %141)
  store i32 %140, ptr %incdec.ptr323, align 4
  %access_mask = getelementptr inbounds %struct.nfs4_ace, ptr %ace.01197, i32 0, i32 2
  %142 = ptrtoint ptr %access_mask to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load i32, ptr %access_mask, align 4
  %and325 = and i32 %143, 2032127
  %144 = ptrtoint ptr %incdec.ptr324 to i32
  call void @__asan_store4_noabort(i32 %144)
  store i32 %and325, ptr %incdec.ptr324, align 4
  %call327 = call fastcc i32 @nfsd4_encode_aclname(ptr noundef %xdr, ptr noundef %rqstp, ptr noundef %ace.01197)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call327)
  %tobool328.not = icmp eq i32 %call327, 0
  br i1 %tobool328.not, label %for.cond, label %if.end322.out_crit_edge

if.end322.out_crit_edge:                          ; preds = %if.end322
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

out_acl:                                          ; preds = %for.cond.out_acl_crit_edge, %if.end311.out_acl_crit_edge, %if.end305, %if.end295.out_acl_crit_edge
  %and336 = and i32 %bmval0.2, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and336)
  %tobool337.not = icmp eq i32 %and336, 0
  br i1 %tobool337.not, label %out_acl.if.end350_crit_edge, label %if.then338

out_acl.if.end350_crit_edge:                      ; preds = %out_acl
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end350

if.then338:                                       ; preds = %out_acl
  %call339 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool340.not = icmp eq ptr %call339, null
  br i1 %tobool340.not, label %if.then338.out_crit_edge, label %if.end342

if.then338.out_crit_edge:                         ; preds = %if.then338
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end342:                                        ; preds = %if.then338
  call void @__sanitizer_cov_trace_pc() #18
  %d_inode343 = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %145 = ptrtoint ptr %d_inode343 to i32
  call void @__asan_load4_noabort(i32 %145)
  %146 = load ptr, ptr %d_inode343, align 8
  %i_sb344 = getelementptr inbounds %struct.inode, ptr %146, i32 0, i32 8
  %147 = ptrtoint ptr %i_sb344 to i32
  call void @__asan_load4_noabort(i32 %147)
  %148 = load ptr, ptr %i_sb344, align 4
  %s_flags345 = getelementptr inbounds %struct.super_block, ptr %148, i32 0, i32 10
  %149 = ptrtoint ptr %s_flags345 to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load i32, ptr %s_flags345, align 4
  %and346 = and i32 %150, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and346)
  %tobool347.not = icmp eq i32 %and346, 0
  %cond348 = select i1 %tobool347.not, i32 0, i32 3
  %151 = ptrtoint ptr %call339 to i32
  call void @__asan_store4_noabort(i32 %151)
  store i32 %cond348, ptr %call339, align 4
  br label %if.end350

if.end350:                                        ; preds = %if.end342, %out_acl.if.end350_crit_edge
  %and351 = and i32 %bmval0.2, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and351)
  %tobool352.not = icmp eq i32 %and351, 0
  br i1 %tobool352.not, label %if.end350.if.end359_crit_edge, label %if.then353

if.end350.if.end359_crit_edge:                    ; preds = %if.end350
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end359

if.then353:                                       ; preds = %if.end350
  %call354 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool355.not = icmp eq ptr %call354, null
  br i1 %tobool355.not, label %if.then353.out_crit_edge, label %if.end357

if.then353.out_crit_edge:                         ; preds = %if.then353
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end357:                                        ; preds = %if.then353
  call void @__sanitizer_cov_trace_pc() #18
  %152 = ptrtoint ptr %call354 to i32
  call void @__asan_store4_noabort(i32 %152)
  store i32 1, ptr %call354, align 4
  br label %if.end359

if.end359:                                        ; preds = %if.end357, %if.end350.if.end359_crit_edge
  %and360 = and i32 %bmval0.2, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and360)
  %tobool361.not = icmp eq i32 %and360, 0
  br i1 %tobool361.not, label %if.end359.if.end368_crit_edge, label %if.then362

if.end359.if.end368_crit_edge:                    ; preds = %if.end359
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end368

if.then362:                                       ; preds = %if.end359
  %call363 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool364.not = icmp eq ptr %call363, null
  br i1 %tobool364.not, label %if.then362.out_crit_edge, label %if.end366

if.then362.out_crit_edge:                         ; preds = %if.then362
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end366:                                        ; preds = %if.then362
  call void @__sanitizer_cov_trace_pc() #18
  %153 = ptrtoint ptr %call363 to i32
  call void @__asan_store4_noabort(i32 %153)
  store i32 0, ptr %call363, align 4
  br label %if.end368

if.end368:                                        ; preds = %if.end366, %if.end359.if.end368_crit_edge
  %and369 = and i32 %bmval0.2, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and369)
  %tobool370.not = icmp eq i32 %and369, 0
  br i1 %tobool370.not, label %if.end368.if.end377_crit_edge, label %if.then371

if.end368.if.end377_crit_edge:                    ; preds = %if.end368
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end377

if.then371:                                       ; preds = %if.end368
  %call372 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool373.not = icmp eq ptr %call372, null
  br i1 %tobool373.not, label %if.then371.out_crit_edge, label %if.end375

if.then371.out_crit_edge:                         ; preds = %if.then371
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end375:                                        ; preds = %if.then371
  call void @__sanitizer_cov_trace_pc() #18
  %154 = ptrtoint ptr %call372 to i32
  call void @__asan_store4_noabort(i32 %154)
  store i32 1, ptr %call372, align 4
  br label %if.end377

if.end377:                                        ; preds = %if.end375, %if.end368.if.end377_crit_edge
  %and378 = and i32 %bmval0.2, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and378)
  %tobool379.not = icmp eq i32 %and378, 0
  br i1 %tobool379.not, label %if.end377.if.end386_crit_edge, label %if.then380

if.end377.if.end386_crit_edge:                    ; preds = %if.end377
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end386

if.then380:                                       ; preds = %if.end377
  %call381 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool382.not = icmp eq ptr %call381, null
  br i1 %tobool382.not, label %if.then380.out_crit_edge, label %if.end384

if.then380.out_crit_edge:                         ; preds = %if.then380
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end384:                                        ; preds = %if.then380
  call void @__sanitizer_cov_trace_pc() #18
  %155 = ptrtoint ptr %call381 to i32
  call void @__asan_store4_noabort(i32 %155)
  store i32 1, ptr %call381, align 4
  br label %if.end386

if.end386:                                        ; preds = %if.end384, %if.end377.if.end386_crit_edge
  %and387 = and i32 %bmval0.2, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and387)
  %tobool388.not = icmp eq i32 %and387, 0
  br i1 %tobool388.not, label %if.end386.if.end398_crit_edge, label %if.then389

if.end386.if.end398_crit_edge:                    ; preds = %if.end386
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end398

if.then389:                                       ; preds = %if.end386
  %156 = ptrtoint ptr %fhp.addr.0 to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load i32, ptr %fhp.addr.0, align 8
  %add = add i32 %157, 4
  %call390 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef %add) #16
  %tobool391.not = icmp eq ptr %call390, null
  br i1 %tobool391.not, label %if.then389.out_crit_edge, label %if.end393

if.then389.out_crit_edge:                         ; preds = %if.then389
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end393:                                        ; preds = %if.then389
  call void @__sanitizer_cov_trace_pc() #18
  %158 = getelementptr inbounds %struct.knfsd_fh, ptr %fhp.addr.0, i32 0, i32 1
  %159 = ptrtoint ptr %fhp.addr.0 to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %fhp.addr.0, align 8
  %call397 = call ptr @xdr_encode_opaque(ptr noundef nonnull %call390, ptr noundef %158, i32 noundef %160) #16
  br label %if.end398

if.end398:                                        ; preds = %if.end393, %if.end386.if.end398_crit_edge
  %and399 = and i32 %bmval0.2, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and399)
  %tobool400.not = icmp eq i32 %and399, 0
  br i1 %tobool400.not, label %if.end398.if.end407_crit_edge, label %if.then401

if.end398.if.end407_crit_edge:                    ; preds = %if.end398
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end407

if.then401:                                       ; preds = %if.end398
  %call402 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 8) #16
  %tobool403.not = icmp eq ptr %call402, null
  br i1 %tobool403.not, label %if.then401.out_crit_edge, label %if.end405

if.then401.out_crit_edge:                         ; preds = %if.then401
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end405:                                        ; preds = %if.then401
  call void @__sanitizer_cov_trace_pc() #18
  %ino = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 6
  %161 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %161)
  %162 = load i64, ptr %ino, align 8
  %163 = ptrtoint ptr %call402 to i32
  call void @__asan_storeN_noabort(i32 %163, i32 8)
  store i64 %162, ptr %call402, align 1
  br label %if.end407

if.end407:                                        ; preds = %if.end405, %if.end398.if.end407_crit_edge
  %and408 = and i32 %bmval0.2, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and408)
  %tobool409.not = icmp eq i32 %and408, 0
  br i1 %tobool409.not, label %if.end407.if.end416_crit_edge, label %if.then410

if.end407.if.end416_crit_edge:                    ; preds = %if.end407
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end416

if.then410:                                       ; preds = %if.end407
  %call411 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 8) #16
  %tobool412.not = icmp eq ptr %call411, null
  br i1 %tobool412.not, label %if.then410.out_crit_edge, label %if.end414

if.then410.out_crit_edge:                         ; preds = %if.then410
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end414:                                        ; preds = %if.then410
  call void @__sanitizer_cov_trace_pc() #18
  %f_ffree = getelementptr inbounds %struct.kstatfs, ptr %statfs, i32 0, i32 6
  %164 = ptrtoint ptr %f_ffree to i32
  call void @__asan_load8_noabort(i32 %164)
  %165 = load i64, ptr %f_ffree, align 8
  %166 = ptrtoint ptr %call411 to i32
  call void @__asan_storeN_noabort(i32 %166, i32 8)
  store i64 %165, ptr %call411, align 1
  br label %if.end416

if.end416:                                        ; preds = %if.end414, %if.end407.if.end416_crit_edge
  %and417 = and i32 %bmval0.2, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and417)
  %tobool418.not = icmp eq i32 %and417, 0
  br i1 %tobool418.not, label %if.end416.if.end426_crit_edge, label %if.then419

if.end416.if.end426_crit_edge:                    ; preds = %if.end416
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end426

if.then419:                                       ; preds = %if.end416
  %call420 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 8) #16
  %tobool421.not = icmp eq ptr %call420, null
  br i1 %tobool421.not, label %if.then419.out_crit_edge, label %if.end423

if.then419.out_crit_edge:                         ; preds = %if.then419
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end423:                                        ; preds = %if.then419
  call void @__sanitizer_cov_trace_pc() #18
  %f_ffree424 = getelementptr inbounds %struct.kstatfs, ptr %statfs, i32 0, i32 6
  %167 = ptrtoint ptr %f_ffree424 to i32
  call void @__asan_load8_noabort(i32 %167)
  %168 = load i64, ptr %f_ffree424, align 8
  %169 = ptrtoint ptr %call420 to i32
  call void @__asan_storeN_noabort(i32 %169, i32 8)
  store i64 %168, ptr %call420, align 1
  br label %if.end426

if.end426:                                        ; preds = %if.end423, %if.end416.if.end426_crit_edge
  %and427 = and i32 %bmval0.2, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and427)
  %tobool428.not = icmp eq i32 %and427, 0
  br i1 %tobool428.not, label %if.end426.if.end435_crit_edge, label %if.then429

if.end426.if.end435_crit_edge:                    ; preds = %if.end426
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end435

if.then429:                                       ; preds = %if.end426
  %call430 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 8) #16
  %tobool431.not = icmp eq ptr %call430, null
  br i1 %tobool431.not, label %if.then429.out_crit_edge, label %if.end433

if.then429.out_crit_edge:                         ; preds = %if.then429
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end433:                                        ; preds = %if.then429
  call void @__sanitizer_cov_trace_pc() #18
  %f_files = getelementptr inbounds %struct.kstatfs, ptr %statfs, i32 0, i32 5
  %170 = ptrtoint ptr %f_files to i32
  call void @__asan_load8_noabort(i32 %170)
  %171 = load i64, ptr %f_files, align 8
  %172 = ptrtoint ptr %call430 to i32
  call void @__asan_storeN_noabort(i32 %172, i32 8)
  store i64 %171, ptr %call430, align 1
  br label %if.end435

if.end435:                                        ; preds = %if.end433, %if.end426.if.end435_crit_edge
  %and436 = and i32 %bmval0.2, 16777216
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and436)
  %tobool437.not = icmp eq i32 %and436, 0
  br i1 %tobool437.not, label %if.end435.if.end443_crit_edge, label %if.then438

if.end435.if.end443_crit_edge:                    ; preds = %if.end435
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end443

if.then438:                                       ; preds = %if.end435
  %call439 = call fastcc i32 @nfsd4_encode_fs_locations(ptr noundef %xdr, ptr noundef %rqstp, ptr noundef %exp)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call439)
  %tobool440.not = icmp eq i32 %call439, 0
  br i1 %tobool440.not, label %if.then438.if.end443_crit_edge, label %if.then438.out_crit_edge

if.then438.out_crit_edge:                         ; preds = %if.then438
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.then438.if.end443_crit_edge:                   ; preds = %if.then438
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end443

if.end443:                                        ; preds = %if.then438.if.end443_crit_edge, %if.end435.if.end443_crit_edge
  %and444 = and i32 %bmval0.2, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and444)
  %tobool445.not = icmp eq i32 %and444, 0
  br i1 %tobool445.not, label %if.end443.if.end452_crit_edge, label %if.then446

if.end443.if.end452_crit_edge:                    ; preds = %if.end443
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end452

if.then446:                                       ; preds = %if.end443
  %call447 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool448.not = icmp eq ptr %call447, null
  br i1 %tobool448.not, label %if.then446.out_crit_edge, label %if.end450

if.then446.out_crit_edge:                         ; preds = %if.then446
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end450:                                        ; preds = %if.then446
  call void @__sanitizer_cov_trace_pc() #18
  %173 = ptrtoint ptr %call447 to i32
  call void @__asan_store4_noabort(i32 %173)
  store i32 1, ptr %call447, align 4
  br label %if.end452

if.end452:                                        ; preds = %if.end450, %if.end443.if.end452_crit_edge
  %and453 = and i32 %bmval0.2, 134217728
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and453)
  %tobool454.not = icmp eq i32 %and453, 0
  br i1 %tobool454.not, label %if.end452.if.end463_crit_edge, label %if.then455

if.end452.if.end463_crit_edge:                    ; preds = %if.end452
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end463

if.then455:                                       ; preds = %if.end452
  %call456 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 8) #16
  %tobool457.not = icmp eq ptr %call456, null
  br i1 %tobool457.not, label %if.then455.out_crit_edge, label %if.end459

if.then455.out_crit_edge:                         ; preds = %if.then455
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end459:                                        ; preds = %if.then455
  call void @__sanitizer_cov_trace_pc() #18
  %174 = ptrtoint ptr %ex_path to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load ptr, ptr %ex_path, align 8
  %mnt_sb = getelementptr inbounds %struct.vfsmount, ptr %175, i32 0, i32 1
  %176 = ptrtoint ptr %mnt_sb to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %mnt_sb, align 4
  %s_maxbytes = getelementptr inbounds %struct.super_block, ptr %177, i32 0, i32 4
  %178 = ptrtoint ptr %s_maxbytes to i32
  call void @__asan_load8_noabort(i32 %178)
  %179 = load i64, ptr %s_maxbytes, align 8
  %180 = ptrtoint ptr %call456 to i32
  call void @__asan_storeN_noabort(i32 %180, i32 8)
  store i64 %179, ptr %call456, align 1
  br label %if.end463

if.end463:                                        ; preds = %if.end459, %if.end452.if.end463_crit_edge
  %and464 = and i32 %bmval0.2, 268435456
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and464)
  %tobool465.not = icmp eq i32 %and464, 0
  br i1 %tobool465.not, label %if.end463.if.end472_crit_edge, label %if.then466

if.end463.if.end472_crit_edge:                    ; preds = %if.end463
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end472

if.then466:                                       ; preds = %if.end463
  %call467 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool468.not = icmp eq ptr %call467, null
  br i1 %tobool468.not, label %if.then466.out_crit_edge, label %if.end470

if.then466.out_crit_edge:                         ; preds = %if.then466
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end470:                                        ; preds = %if.then466
  call void @__sanitizer_cov_trace_pc() #18
  %181 = ptrtoint ptr %call467 to i32
  call void @__asan_store4_noabort(i32 %181)
  store i32 255, ptr %call467, align 4
  br label %if.end472

if.end472:                                        ; preds = %if.end470, %if.end463.if.end472_crit_edge
  %and473 = and i32 %bmval0.2, 536870912
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and473)
  %tobool474.not = icmp eq i32 %and473, 0
  br i1 %tobool474.not, label %if.end472.if.end481_crit_edge, label %if.then475

if.end472.if.end481_crit_edge:                    ; preds = %if.end472
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end481

if.then475:                                       ; preds = %if.end472
  %call476 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool477.not = icmp eq ptr %call476, null
  br i1 %tobool477.not, label %if.then475.out_crit_edge, label %if.end479

if.then475.out_crit_edge:                         ; preds = %if.then475
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end479:                                        ; preds = %if.then475
  call void @__sanitizer_cov_trace_pc() #18
  %f_namelen = getelementptr inbounds %struct.kstatfs, ptr %statfs, i32 0, i32 8
  %182 = ptrtoint ptr %f_namelen to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load i32, ptr %f_namelen, align 8
  %184 = ptrtoint ptr %call476 to i32
  call void @__asan_store4_noabort(i32 %184)
  store i32 %183, ptr %call476, align 4
  br label %if.end481

if.end481:                                        ; preds = %if.end479, %if.end472.if.end481_crit_edge
  %and482 = and i32 %bmval0.2, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and482)
  %tobool483.not = icmp eq i32 %and482, 0
  br i1 %tobool483.not, label %if.end481.if.end492_crit_edge, label %if.then484

if.end481.if.end492_crit_edge:                    ; preds = %if.end481
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end492

if.then484:                                       ; preds = %if.end481
  %call485 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 8) #16
  %tobool486.not = icmp eq ptr %call485, null
  br i1 %tobool486.not, label %if.then484.out_crit_edge, label %if.end488

if.then484.out_crit_edge:                         ; preds = %if.then484
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end488:                                        ; preds = %if.then484
  call void @__sanitizer_cov_trace_pc() #18
  %call489 = call i32 @svc_max_payload(ptr noundef %rqstp) #16
  %conv490 = zext i32 %call489 to i64
  %185 = ptrtoint ptr %call485 to i32
  call void @__asan_storeN_noabort(i32 %185, i32 8)
  store i64 %conv490, ptr %call485, align 1
  br label %if.end492

if.end492:                                        ; preds = %if.end488, %if.end481.if.end492_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %bmval0.2)
  %tobool494.not = icmp sgt i32 %bmval0.2, -1
  br i1 %tobool494.not, label %if.end492.if.end503_crit_edge, label %if.then495

if.end492.if.end503_crit_edge:                    ; preds = %if.end492
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end503

if.then495:                                       ; preds = %if.end492
  %call496 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 8) #16
  %tobool497.not = icmp eq ptr %call496, null
  br i1 %tobool497.not, label %if.then495.out_crit_edge, label %if.end499

if.then495.out_crit_edge:                         ; preds = %if.then495
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end499:                                        ; preds = %if.then495
  call void @__sanitizer_cov_trace_pc() #18
  %call500 = call i32 @svc_max_payload(ptr noundef %rqstp) #16
  %conv501 = zext i32 %call500 to i64
  %186 = ptrtoint ptr %call496 to i32
  call void @__asan_storeN_noabort(i32 %186, i32 8)
  store i64 %conv501, ptr %call496, align 1
  br label %if.end503

if.end503:                                        ; preds = %if.end499, %if.end492.if.end503_crit_edge
  %and504 = and i32 %bmval1.1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and504)
  %tobool505.not = icmp eq i32 %and504, 0
  br i1 %tobool505.not, label %if.end503.if.end515_crit_edge, label %if.then506

if.end503.if.end515_crit_edge:                    ; preds = %if.end503
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end515

if.then506:                                       ; preds = %if.end503
  %call507 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool508.not = icmp eq ptr %call507, null
  br i1 %tobool508.not, label %if.then506.out_crit_edge, label %if.end510

if.then506.out_crit_edge:                         ; preds = %if.then506
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end510:                                        ; preds = %if.then506
  call void @__sanitizer_cov_trace_pc() #18
  %mode511 = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 1
  %187 = ptrtoint ptr %mode511 to i32
  call void @__asan_load2_noabort(i32 %187)
  %188 = load i16, ptr %mode511, align 4
  %189 = and i16 %188, 4095
  %and513 = zext i16 %189 to i32
  %190 = ptrtoint ptr %call507 to i32
  call void @__asan_store4_noabort(i32 %190)
  store i32 %and513, ptr %call507, align 4
  br label %if.end515

if.end515:                                        ; preds = %if.end510, %if.end503.if.end515_crit_edge
  %and516 = and i32 %bmval1.1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and516)
  %tobool517.not = icmp eq i32 %and516, 0
  br i1 %tobool517.not, label %if.end515.if.end524_crit_edge, label %if.then518

if.end515.if.end524_crit_edge:                    ; preds = %if.end515
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end524

if.then518:                                       ; preds = %if.end515
  %call519 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool520.not = icmp eq ptr %call519, null
  br i1 %tobool520.not, label %if.then518.out_crit_edge, label %if.end522

if.then518.out_crit_edge:                         ; preds = %if.then518
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end522:                                        ; preds = %if.then518
  call void @__sanitizer_cov_trace_pc() #18
  %191 = ptrtoint ptr %call519 to i32
  call void @__asan_store4_noabort(i32 %191)
  store i32 1, ptr %call519, align 4
  br label %if.end524

if.end524:                                        ; preds = %if.end522, %if.end515.if.end524_crit_edge
  %and525 = and i32 %bmval1.1, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and525)
  %tobool526.not = icmp eq i32 %and525, 0
  br i1 %tobool526.not, label %if.end524.if.end533_crit_edge, label %if.then527

if.end524.if.end533_crit_edge:                    ; preds = %if.end524
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end533

if.then527:                                       ; preds = %if.end524
  %call528 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool529.not = icmp eq ptr %call528, null
  br i1 %tobool529.not, label %if.then527.out_crit_edge, label %if.end531

if.then527.out_crit_edge:                         ; preds = %if.then527
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end531:                                        ; preds = %if.then527
  call void @__sanitizer_cov_trace_pc() #18
  %nlink = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 2
  %192 = ptrtoint ptr %nlink to i32
  call void @__asan_load4_noabort(i32 %192)
  %193 = load i32, ptr %nlink, align 8
  %194 = ptrtoint ptr %call528 to i32
  call void @__asan_store4_noabort(i32 %194)
  store i32 %193, ptr %call528, align 4
  br label %if.end533

if.end533:                                        ; preds = %if.end531, %if.end524.if.end533_crit_edge
  %and534 = and i32 %bmval1.1, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and534)
  %tobool535.not = icmp eq i32 %and534, 0
  br i1 %tobool535.not, label %if.end533.if.end541_crit_edge, label %if.then536

if.end533.if.end541_crit_edge:                    ; preds = %if.end533
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end541

if.then536:                                       ; preds = %if.end533
  %uid = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 9
  %195 = ptrtoint ptr %uid to i32
  call void @__asan_load4_noabort(i32 %195)
  %.fca.0.load = load i32, ptr %uid, align 8
  %.fca.0.insert = insertvalue [1 x i32] poison, i32 %.fca.0.load, 0
  %call537 = call i32 @nfsd4_encode_user(ptr noundef %xdr, ptr noundef %rqstp, [1 x i32] %.fca.0.insert) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call537)
  %tobool538.not = icmp eq i32 %call537, 0
  br i1 %tobool538.not, label %if.then536.if.end541_crit_edge, label %if.then536.out_crit_edge

if.then536.out_crit_edge:                         ; preds = %if.then536
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.then536.if.end541_crit_edge:                   ; preds = %if.then536
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end541

if.end541:                                        ; preds = %if.then536.if.end541_crit_edge, %if.end533.if.end541_crit_edge
  %and542 = and i32 %bmval1.1, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and542)
  %tobool543.not = icmp eq i32 %and542, 0
  br i1 %tobool543.not, label %if.end541.if.end550_crit_edge, label %if.then544

if.end541.if.end550_crit_edge:                    ; preds = %if.end541
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end550

if.then544:                                       ; preds = %if.end541
  %gid = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 10
  %196 = ptrtoint ptr %gid to i32
  call void @__asan_load4_noabort(i32 %196)
  %.fca.0.load959 = load i32, ptr %gid, align 4
  %.fca.0.insert960 = insertvalue [1 x i32] poison, i32 %.fca.0.load959, 0
  %call546 = call i32 @nfsd4_encode_group(ptr noundef %xdr, ptr noundef %rqstp, [1 x i32] %.fca.0.insert960) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call546)
  %tobool547.not = icmp eq i32 %call546, 0
  br i1 %tobool547.not, label %if.then544.if.end550_crit_edge, label %if.then544.out_crit_edge

if.then544.out_crit_edge:                         ; preds = %if.then544
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.then544.if.end550_crit_edge:                   ; preds = %if.then544
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end550

if.end550:                                        ; preds = %if.then544.if.end550_crit_edge, %if.end541.if.end550_crit_edge
  %and551 = and i32 %bmval1.1, 512
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and551)
  %tobool552.not = icmp eq i32 %and551, 0
  br i1 %tobool552.not, label %if.end550.if.end563_crit_edge, label %if.then553

if.end550.if.end563_crit_edge:                    ; preds = %if.end550
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end563

if.then553:                                       ; preds = %if.end550
  %call554 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 8) #16
  %tobool555.not = icmp eq ptr %call554, null
  br i1 %tobool555.not, label %if.then553.out_crit_edge, label %if.end557

if.then553.out_crit_edge:                         ; preds = %if.then553
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end557:                                        ; preds = %if.then553
  call void @__sanitizer_cov_trace_pc() #18
  %rdev = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 8
  %197 = ptrtoint ptr %rdev to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load i32, ptr %rdev, align 4
  %shr558 = lshr i32 %198, 20
  %incdec.ptr559 = getelementptr i32, ptr %call554, i32 1
  %199 = ptrtoint ptr %call554 to i32
  call void @__asan_store4_noabort(i32 %199)
  store i32 %shr558, ptr %call554, align 4
  %200 = load i32, ptr %rdev, align 4
  %and561 = and i32 %200, 1048575
  %201 = ptrtoint ptr %incdec.ptr559 to i32
  call void @__asan_store4_noabort(i32 %201)
  store i32 %and561, ptr %incdec.ptr559, align 4
  br label %if.end563

if.end563:                                        ; preds = %if.end557, %if.end550.if.end563_crit_edge
  %and564 = and i32 %bmval1.1, 1024
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and564)
  %tobool565.not = icmp eq i32 %and564, 0
  br i1 %tobool565.not, label %if.end563.if.end573_crit_edge, label %if.then566

if.end563.if.end573_crit_edge:                    ; preds = %if.end563
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end573

if.then566:                                       ; preds = %if.end563
  %call567 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 8) #16
  %tobool568.not = icmp eq ptr %call567, null
  br i1 %tobool568.not, label %if.then566.out_crit_edge, label %if.end570

if.then566.out_crit_edge:                         ; preds = %if.then566
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end570:                                        ; preds = %if.then566
  call void @__sanitizer_cov_trace_pc() #18
  %f_bavail = getelementptr inbounds %struct.kstatfs, ptr %statfs, i32 0, i32 4
  %202 = ptrtoint ptr %f_bavail to i32
  call void @__asan_load8_noabort(i32 %202)
  %203 = load i64, ptr %f_bavail, align 8
  %f_bsize = getelementptr inbounds %struct.kstatfs, ptr %statfs, i32 0, i32 1
  %204 = ptrtoint ptr %f_bsize to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load i32, ptr %f_bsize, align 4
  %conv571 = sext i32 %205 to i64
  %mul = mul i64 %203, %conv571
  %206 = ptrtoint ptr %call567 to i32
  call void @__asan_storeN_noabort(i32 %206, i32 8)
  store i64 %mul, ptr %call567, align 1
  br label %if.end573

if.end573:                                        ; preds = %if.end570, %if.end563.if.end573_crit_edge
  %and574 = and i32 %bmval1.1, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and574)
  %tobool575.not = icmp eq i32 %and574, 0
  br i1 %tobool575.not, label %if.end573.if.end585_crit_edge, label %if.then576

if.end573.if.end585_crit_edge:                    ; preds = %if.end573
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end585

if.then576:                                       ; preds = %if.end573
  %call577 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 8) #16
  %tobool578.not = icmp eq ptr %call577, null
  br i1 %tobool578.not, label %if.then576.out_crit_edge, label %if.end580

if.then576.out_crit_edge:                         ; preds = %if.then576
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end580:                                        ; preds = %if.then576
  call void @__sanitizer_cov_trace_pc() #18
  %f_bfree = getelementptr inbounds %struct.kstatfs, ptr %statfs, i32 0, i32 3
  %207 = ptrtoint ptr %f_bfree to i32
  call void @__asan_load8_noabort(i32 %207)
  %208 = load i64, ptr %f_bfree, align 8
  %f_bsize581 = getelementptr inbounds %struct.kstatfs, ptr %statfs, i32 0, i32 1
  %209 = ptrtoint ptr %f_bsize581 to i32
  call void @__asan_load4_noabort(i32 %209)
  %210 = load i32, ptr %f_bsize581, align 4
  %conv582 = sext i32 %210 to i64
  %mul583 = mul i64 %208, %conv582
  %211 = ptrtoint ptr %call577 to i32
  call void @__asan_storeN_noabort(i32 %211, i32 8)
  store i64 %mul583, ptr %call577, align 1
  br label %if.end585

if.end585:                                        ; preds = %if.end580, %if.end573.if.end585_crit_edge
  %and586 = and i32 %bmval1.1, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and586)
  %tobool587.not = icmp eq i32 %and586, 0
  br i1 %tobool587.not, label %if.end585.if.end597_crit_edge, label %if.then588

if.end585.if.end597_crit_edge:                    ; preds = %if.end585
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end597

if.then588:                                       ; preds = %if.end585
  %call589 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 8) #16
  %tobool590.not = icmp eq ptr %call589, null
  br i1 %tobool590.not, label %if.then588.out_crit_edge, label %if.end592

if.then588.out_crit_edge:                         ; preds = %if.then588
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end592:                                        ; preds = %if.then588
  call void @__sanitizer_cov_trace_pc() #18
  %f_blocks = getelementptr inbounds %struct.kstatfs, ptr %statfs, i32 0, i32 2
  %212 = ptrtoint ptr %f_blocks to i32
  call void @__asan_load8_noabort(i32 %212)
  %213 = load i64, ptr %f_blocks, align 8
  %f_bsize593 = getelementptr inbounds %struct.kstatfs, ptr %statfs, i32 0, i32 1
  %214 = ptrtoint ptr %f_bsize593 to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load i32, ptr %f_bsize593, align 4
  %conv594 = sext i32 %215 to i64
  %mul595 = mul i64 %213, %conv594
  %216 = ptrtoint ptr %call589 to i32
  call void @__asan_storeN_noabort(i32 %216, i32 8)
  store i64 %mul595, ptr %call589, align 1
  br label %if.end597

if.end597:                                        ; preds = %if.end592, %if.end585.if.end597_crit_edge
  %and598 = and i32 %bmval1.1, 8192
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and598)
  %tobool599.not = icmp eq i32 %and598, 0
  br i1 %tobool599.not, label %if.end597.if.end606_crit_edge, label %if.then600

if.end597.if.end606_crit_edge:                    ; preds = %if.end597
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end606

if.then600:                                       ; preds = %if.end597
  %call601 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 8) #16
  %tobool602.not = icmp eq ptr %call601, null
  br i1 %tobool602.not, label %if.then600.out_crit_edge, label %if.end604

if.then600.out_crit_edge:                         ; preds = %if.then600
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end604:                                        ; preds = %if.then600
  call void @__sanitizer_cov_trace_pc() #18
  %blocks = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 16
  %217 = ptrtoint ptr %blocks to i32
  call void @__asan_load8_noabort(i32 %217)
  %218 = load i64, ptr %blocks, align 8
  %shl = shl i64 %218, 9
  %219 = ptrtoint ptr %call601 to i32
  call void @__asan_storeN_noabort(i32 %219, i32 8)
  store i64 %shl, ptr %call601, align 1
  br label %if.end606

if.end606:                                        ; preds = %if.end604, %if.end597.if.end606_crit_edge
  %and607 = and i32 %bmval1.1, 32768
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and607)
  %tobool608.not = icmp eq i32 %and607, 0
  br i1 %tobool608.not, label %if.end606.if.end617_crit_edge, label %if.then609

if.end606.if.end617_crit_edge:                    ; preds = %if.end606
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end617

if.then609:                                       ; preds = %if.end606
  %call610 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 12) #16
  %tobool611.not = icmp eq ptr %call610, null
  br i1 %tobool611.not, label %if.then609.out_crit_edge, label %if.end613

if.then609.out_crit_edge:                         ; preds = %if.then609
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end613:                                        ; preds = %if.then609
  call void @__sanitizer_cov_trace_pc() #18
  %atime = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 12
  %220 = ptrtoint ptr %atime to i32
  call void @__asan_load8_noabort(i32 %220)
  %221 = load i64, ptr %atime, align 8
  %222 = ptrtoint ptr %call610 to i32
  call void @__asan_storeN_noabort(i32 %222, i32 8)
  store i64 %221, ptr %call610, align 1
  %add.ptr.i1084 = getelementptr i32, ptr %call610, i32 2
  %tv_nsec = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 12, i32 1
  %223 = ptrtoint ptr %tv_nsec to i32
  call void @__asan_load4_noabort(i32 %223)
  %224 = load i32, ptr %tv_nsec, align 8
  %225 = ptrtoint ptr %add.ptr.i1084 to i32
  call void @__asan_store4_noabort(i32 %225)
  store i32 %224, ptr %add.ptr.i1084, align 4
  br label %if.end617

if.end617:                                        ; preds = %if.end613, %if.end606.if.end617_crit_edge
  %and618 = and i32 %bmval1.1, 524288
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and618)
  %tobool619.not = icmp eq i32 %and618, 0
  br i1 %tobool619.not, label %if.end617.if.end627_crit_edge, label %if.then620

if.end617.if.end627_crit_edge:                    ; preds = %if.end617
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end627

if.then620:                                       ; preds = %if.end617
  %call621 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 12) #16
  %tobool622.not = icmp eq ptr %call621, null
  br i1 %tobool622.not, label %if.then620.out_crit_edge, label %if.end624

if.then620.out_crit_edge:                         ; preds = %if.then620
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end624:                                        ; preds = %if.then620
  call void @__sanitizer_cov_trace_pc() #18
  %d_inode.i1085 = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %226 = ptrtoint ptr %d_inode.i1085 to i32
  call void @__asan_load4_noabort(i32 %226)
  %227 = load ptr, ptr %d_inode.i1085, align 8
  call fastcc void @encode_time_delta(ptr noundef nonnull %call621, ptr noundef %227)
  br label %if.end627

if.end627:                                        ; preds = %if.end624, %if.end617.if.end627_crit_edge
  %and628 = and i32 %bmval1.1, 1048576
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and628)
  %tobool629.not = icmp eq i32 %and628, 0
  br i1 %tobool629.not, label %if.end627.if.end640_crit_edge, label %if.then630

if.end627.if.end640_crit_edge:                    ; preds = %if.end627
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end640

if.then630:                                       ; preds = %if.end627
  %call631 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 12) #16
  %tobool632.not = icmp eq ptr %call631, null
  br i1 %tobool632.not, label %if.then630.out_crit_edge, label %if.end634

if.then630.out_crit_edge:                         ; preds = %if.then630
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end634:                                        ; preds = %if.then630
  call void @__sanitizer_cov_trace_pc() #18
  %ctime = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 14
  %228 = ptrtoint ptr %ctime to i32
  call void @__asan_load8_noabort(i32 %228)
  %229 = load i64, ptr %ctime, align 8
  %230 = ptrtoint ptr %call631 to i32
  call void @__asan_storeN_noabort(i32 %230, i32 8)
  store i64 %229, ptr %call631, align 1
  %add.ptr.i1086 = getelementptr i32, ptr %call631, i32 2
  %tv_nsec638 = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 14, i32 1
  %231 = ptrtoint ptr %tv_nsec638 to i32
  call void @__asan_load4_noabort(i32 %231)
  %232 = load i32, ptr %tv_nsec638, align 8
  %233 = ptrtoint ptr %add.ptr.i1086 to i32
  call void @__asan_store4_noabort(i32 %233)
  store i32 %232, ptr %add.ptr.i1086, align 4
  br label %if.end640

if.end640:                                        ; preds = %if.end634, %if.end627.if.end640_crit_edge
  %and641 = and i32 %bmval1.1, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and641)
  %tobool642.not = icmp eq i32 %and641, 0
  br i1 %tobool642.not, label %if.end640.if.end653_crit_edge, label %if.then643

if.end640.if.end653_crit_edge:                    ; preds = %if.end640
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end653

if.then643:                                       ; preds = %if.end640
  %call644 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 12) #16
  %tobool645.not = icmp eq ptr %call644, null
  br i1 %tobool645.not, label %if.then643.out_crit_edge, label %if.end647

if.then643.out_crit_edge:                         ; preds = %if.then643
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end647:                                        ; preds = %if.then643
  call void @__sanitizer_cov_trace_pc() #18
  %mtime = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 13
  %234 = ptrtoint ptr %mtime to i32
  call void @__asan_load8_noabort(i32 %234)
  %235 = load i64, ptr %mtime, align 8
  %236 = ptrtoint ptr %call644 to i32
  call void @__asan_storeN_noabort(i32 %236, i32 8)
  store i64 %235, ptr %call644, align 1
  %add.ptr.i1087 = getelementptr i32, ptr %call644, i32 2
  %tv_nsec651 = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 13, i32 1
  %237 = ptrtoint ptr %tv_nsec651 to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load i32, ptr %tv_nsec651, align 8
  %239 = ptrtoint ptr %add.ptr.i1087 to i32
  call void @__asan_store4_noabort(i32 %239)
  store i32 %238, ptr %add.ptr.i1087, align 4
  br label %if.end653

if.end653:                                        ; preds = %if.end647, %if.end640.if.end653_crit_edge
  %and654 = and i32 %bmval1.1, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and654)
  %tobool655.not = icmp eq i32 %and654, 0
  br i1 %tobool655.not, label %if.end653.if.end682_crit_edge, label %if.then656

if.end653.if.end682_crit_edge:                    ; preds = %if.end653
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end682

if.then656:                                       ; preds = %if.end653
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %parent_stat) #16
  %240 = call ptr @memset(ptr %parent_stat, i32 255, i32 144)
  %ino658 = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 6
  %241 = ptrtoint ptr %ino658 to i32
  call void @__asan_load8_noabort(i32 %241)
  %242 = load i64, ptr %ino658, align 8
  %call659 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 8) #16
  %tobool660.not = icmp eq ptr %call659, null
  br i1 %tobool660.not, label %cleanup678, label %if.end662

if.end662:                                        ; preds = %if.then656
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ignore_crossmnt)
  %cmp663 = icmp eq i32 %ignore_crossmnt, 0
  br i1 %cmp663, label %land.lhs.true665, label %if.end662.cleanup678.thread_crit_edge

if.end662.cleanup678.thread_crit_edge:            ; preds = %if.end662
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup678.thread

land.lhs.true665:                                 ; preds = %if.end662
  %243 = ptrtoint ptr %ex_path to i32
  call void @__asan_load4_noabort(i32 %243)
  %244 = load ptr, ptr %ex_path, align 8
  %245 = ptrtoint ptr %244 to i32
  call void @__asan_load4_noabort(i32 %245)
  %246 = load ptr, ptr %244, align 4
  %cmp668 = icmp eq ptr %246, %dentry
  br i1 %cmp668, label %if.then670, label %land.lhs.true665.cleanup678.thread_crit_edge

land.lhs.true665.cleanup678.thread_crit_edge:     ; preds = %land.lhs.true665
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup678.thread

if.then670:                                       ; preds = %land.lhs.true665
  %call671 = call fastcc i32 @get_parent_attributes(ptr noundef %exp, ptr noundef nonnull %parent_stat)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call671)
  %tobool672.not = icmp eq i32 %call671, 0
  br i1 %tobool672.not, label %if.end674, label %cleanup678.thread1188

cleanup678.thread1188:                            ; preds = %if.then670
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %parent_stat) #16
  br label %out_nfserr

if.end674:                                        ; preds = %if.then670
  call void @__sanitizer_cov_trace_pc() #18
  %ino675 = getelementptr inbounds %struct.kstat, ptr %parent_stat, i32 0, i32 6
  %247 = ptrtoint ptr %ino675 to i32
  call void @__asan_load8_noabort(i32 %247)
  %248 = load i64, ptr %ino675, align 8
  br label %cleanup678.thread

cleanup678.thread:                                ; preds = %if.end674, %land.lhs.true665.cleanup678.thread_crit_edge, %if.end662.cleanup678.thread_crit_edge
  %ino657.0 = phi i64 [ %248, %if.end674 ], [ %242, %land.lhs.true665.cleanup678.thread_crit_edge ], [ %242, %if.end662.cleanup678.thread_crit_edge ]
  %249 = ptrtoint ptr %call659 to i32
  call void @__asan_storeN_noabort(i32 %249, i32 8)
  store i64 %ino657.0, ptr %call659, align 1
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %parent_stat) #16
  br label %if.end682

cleanup678:                                       ; preds = %if.then656
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %parent_stat) #16
  br label %out

if.end682:                                        ; preds = %cleanup678.thread, %if.end653.if.end682_crit_edge
  %and683 = and i32 %bmval1.1, 1073741824
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and683)
  %tobool684.not = icmp eq i32 %and683, 0
  br i1 %tobool684.not, label %if.end682.if.end690_crit_edge, label %if.then685

if.end682.if.end690_crit_edge:                    ; preds = %if.end682
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end690

if.then685:                                       ; preds = %if.end682
  %ex_layout_types = getelementptr inbounds %struct.svc_export, ptr %exp, i32 0, i32 11
  %250 = ptrtoint ptr %ex_layout_types to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load i32, ptr %ex_layout_types, align 8
  %call686 = call fastcc i32 @nfsd4_encode_layout_types(ptr noundef %xdr, i32 noundef %251)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call686)
  %tobool687.not = icmp eq i32 %call686, 0
  br i1 %tobool687.not, label %if.then685.if.end690_crit_edge, label %if.then685.out_crit_edge

if.then685.out_crit_edge:                         ; preds = %if.then685
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.then685.if.end690_crit_edge:                   ; preds = %if.then685
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end690

if.end690:                                        ; preds = %if.then685.if.end690_crit_edge, %if.end682.if.end690_crit_edge
  %and691 = and i32 %bmval2.21165.ph, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and691)
  %tobool692.not = icmp eq i32 %and691, 0
  br i1 %tobool692.not, label %if.end690.if.end699_crit_edge, label %if.then693

if.end690.if.end699_crit_edge:                    ; preds = %if.end690
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end699

if.then693:                                       ; preds = %if.end690
  %ex_layout_types694 = getelementptr inbounds %struct.svc_export, ptr %exp, i32 0, i32 11
  %252 = ptrtoint ptr %ex_layout_types694 to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load i32, ptr %ex_layout_types694, align 8
  %call695 = call fastcc i32 @nfsd4_encode_layout_types(ptr noundef %xdr, i32 noundef %253)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call695)
  %tobool696.not = icmp eq i32 %call695, 0
  br i1 %tobool696.not, label %if.then693.if.end699_crit_edge, label %if.then693.out_crit_edge

if.then693.out_crit_edge:                         ; preds = %if.then693
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.then693.if.end699_crit_edge:                   ; preds = %if.then693
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end699

if.end699:                                        ; preds = %if.then693.if.end699_crit_edge, %if.end690.if.end699_crit_edge
  %and700 = and i32 %bmval2.21165.ph, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and700)
  %tobool701.not = icmp eq i32 %and700, 0
  br i1 %tobool701.not, label %if.end699.if.end708_crit_edge, label %if.then702

if.end699.if.end708_crit_edge:                    ; preds = %if.end699
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end708

if.then702:                                       ; preds = %if.end699
  %call703 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool704.not = icmp eq ptr %call703, null
  br i1 %tobool704.not, label %if.then702.out_crit_edge, label %if.end706

if.then702.out_crit_edge:                         ; preds = %if.then702
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end706:                                        ; preds = %if.then702
  call void @__sanitizer_cov_trace_pc() #18
  %blksize = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 3
  %254 = ptrtoint ptr %blksize to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load i32, ptr %blksize, align 4
  %256 = ptrtoint ptr %call703 to i32
  call void @__asan_store4_noabort(i32 %256)
  store i32 %255, ptr %call703, align 4
  br label %if.end708

if.end708:                                        ; preds = %if.end706, %if.end699.if.end708_crit_edge
  %and709 = and i32 %bmval2.21165.ph, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and709)
  %tobool710.not = icmp eq i32 %and709, 0
  br i1 %tobool710.not, label %if.end708.if.end732_crit_edge, label %if.then711

if.end708.if.end732_crit_edge:                    ; preds = %if.end708
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end732

if.then711:                                       ; preds = %if.end708
  %257 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_load4_noabort(i32 %257)
  %supp712.sroa.7.0.copyload = load i32, ptr %arrayidx3.i.i, align 4
  %258 = ptrtoint ptr %arrayidx8.i.i to i32
  call void @__asan_load4_noabort(i32 %258)
  %supp712.sroa.11.0.copyload = load i32, ptr %arrayidx8.i.i, align 4
  %and717 = and i32 %32, 4112
  %and719 = and i32 %supp712.sroa.7.0.copyload, 50
  %and721 = and i32 %supp712.sroa.11.0.copyload, 196608
  %call725 = call fastcc i32 @nfsd4_encode_bitmap(ptr noundef %xdr, i32 noundef %and717, i32 noundef %and719, i32 noundef %and721)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call725)
  %tobool726.not = icmp eq i32 %call725, 0
  br i1 %tobool726.not, label %if.then711.if.end732_crit_edge, label %if.then711.out_crit_edge

if.then711.out_crit_edge:                         ; preds = %if.then711
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.then711.if.end732_crit_edge:                   ; preds = %if.then711
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end732

if.end732:                                        ; preds = %if.then711.if.end732_crit_edge, %if.end708.if.end732_crit_edge
  %and733 = and i32 %bmval2.21165.ph, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and733)
  %tobool734.not = icmp eq i32 %and733, 0
  br i1 %tobool734.not, label %if.end732.if.end740_crit_edge, label %if.then735

if.end732.if.end740_crit_edge:                    ; preds = %if.end732
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end740

if.then735:                                       ; preds = %if.end732
  %259 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %259)
  %260 = load ptr, ptr %context, align 4
  %261 = ptrtoint ptr %contextlen to i32
  call void @__asan_load4_noabort(i32 %261)
  %262 = load i32, ptr %contextlen, align 4
  %call736 = call fastcc i32 @nfsd4_encode_security_label(ptr noundef %xdr, ptr noundef %260, i32 noundef %262)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call736)
  %tobool737.not = icmp eq i32 %call736, 0
  br i1 %tobool737.not, label %if.then735.if.end740_crit_edge, label %if.then735.out_crit_edge

if.then735.out_crit_edge:                         ; preds = %if.then735
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.then735.if.end740_crit_edge:                   ; preds = %if.then735
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end740

if.end740:                                        ; preds = %if.then735.if.end740_crit_edge, %if.end732.if.end740_crit_edge
  %and741 = and i32 %bmval2.21165.ph, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and741)
  %tobool742.not = icmp eq i32 %and741, 0
  br i1 %tobool742.not, label %if.end740.if.end753_crit_edge, label %if.then743

if.end740.if.end753_crit_edge:                    ; preds = %if.end740
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end753

if.then743:                                       ; preds = %if.end740
  %call744 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool745.not = icmp eq ptr %call744, null
  br i1 %tobool745.not, label %if.then743.out_crit_edge, label %if.end747

if.then743.out_crit_edge:                         ; preds = %if.then743
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end747:                                        ; preds = %if.then743
  call void @__sanitizer_cov_trace_pc() #18
  %d_inode.i1089 = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 5
  %263 = ptrtoint ptr %d_inode.i1089 to i32
  call void @__asan_load4_noabort(i32 %263)
  %264 = load ptr, ptr %d_inode.i1089, align 8
  %call749 = call i32 @xattr_supported_namespace(ptr noundef %264, ptr noundef nonnull @.str.1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call749)
  %cmp750 = icmp eq i32 %call749, 0
  %conv751 = zext i1 %cmp750 to i32
  %265 = ptrtoint ptr %call744 to i32
  call void @__asan_store4_noabort(i32 %265)
  store i32 %conv751, ptr %call744, align 4
  br label %if.end753

if.end753:                                        ; preds = %if.end747, %if.end740.if.end753_crit_edge
  %266 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load ptr, ptr %buf, align 4
  %len755 = getelementptr inbounds %struct.xdr_buf, ptr %267, i32 0, i32 8
  %268 = ptrtoint ptr %len755 to i32
  call void @__asan_load4_noabort(i32 %268)
  %269 = load i32, ptr %len755, align 4
  %sub = sub i32 -4, %66
  %sub756 = add i32 %sub, %269
  %270 = ptrtoint ptr %attrlen to i32
  call void @__asan_store4_noabort(i32 %270)
  store i32 %sub756, ptr %attrlen, align 4
  %call758 = call i32 @write_bytes_to_xdr_buf(ptr noundef %267, i32 noundef %66, ptr noundef nonnull %attrlen, i32 noundef 4) #16
  br label %out

out:                                              ; preds = %out_nfserr, %if.end753, %if.then743.out_crit_edge, %if.then735.out_crit_edge, %if.then711.out_crit_edge, %if.then702.out_crit_edge, %if.then693.out_crit_edge, %if.then685.out_crit_edge, %cleanup678, %if.then643.out_crit_edge, %if.then630.out_crit_edge, %if.then620.out_crit_edge, %if.then609.out_crit_edge, %if.then600.out_crit_edge, %if.then588.out_crit_edge, %if.then576.out_crit_edge, %if.then566.out_crit_edge, %if.then553.out_crit_edge, %if.then544.out_crit_edge, %if.then536.out_crit_edge, %if.then527.out_crit_edge, %if.then518.out_crit_edge, %if.then506.out_crit_edge, %if.then495.out_crit_edge, %if.then484.out_crit_edge, %if.then475.out_crit_edge, %if.then466.out_crit_edge, %if.then455.out_crit_edge, %if.then446.out_crit_edge, %if.then438.out_crit_edge, %if.then429.out_crit_edge, %if.then419.out_crit_edge, %if.then410.out_crit_edge, %if.then401.out_crit_edge, %if.then389.out_crit_edge, %if.then380.out_crit_edge, %if.then371.out_crit_edge, %if.then362.out_crit_edge, %if.then353.out_crit_edge, %if.then338.out_crit_edge, %if.end322.out_crit_edge, %for.body.out_crit_edge, %if.end307.out_crit_edge, %if.then301.out_crit_edge, %if.then289.out_crit_edge, %if.then279.out_crit_edge, %if.then270.out_crit_edge, %if.then242.out_crit_edge, %if.then233.out_crit_edge, %if.then224.out_crit_edge, %if.then215.out_crit_edge, %if.then206.out_crit_edge, %if.then196.out_crit_edge, %if.then180.out_crit_edge, %if.end171.out_crit_edge, %if.then167.out_crit_edge, %if.else151.out_crit_edge, %if.then141.out_crit_edge, %if.end116.out_crit_edge, %if.else15.i.out_crit_edge, %if.then7.i.out_crit_edge, %if.then.i1066.out_crit_edge, %if.then73.out_crit_edge, %if.end64.out_crit_edge, %if.then60.out_crit_edge, %if.then.i.out_crit_edge
  %status.2 = phi i32 [ %call768, %out_nfserr ], [ %call439, %if.then438.out_crit_edge ], [ %call537, %if.then536.out_crit_edge ], [ %call546, %if.then544.out_crit_edge ], [ %call686, %if.then685.out_crit_edge ], [ %call695, %if.then693.out_crit_edge ], [ %call725, %if.then711.out_crit_edge ], [ %call736, %if.then735.out_crit_edge ], [ 0, %if.end753 ], [ %call66, %if.end64.out_crit_edge ], [ 10008, %if.then60.out_crit_edge ], [ 10032, %if.then73.out_crit_edge ], [ 10006, %if.end171.out_crit_edge ], [ 10019, %if.then.i.out_crit_edge ], [ 10018, %if.else15.i.out_crit_edge ], [ 10018, %if.then7.i.out_crit_edge ], [ 10018, %if.then.i1066.out_crit_edge ], [ 10018, %cleanup678 ], [ 10018, %if.then141.out_crit_edge ], [ 10018, %if.else151.out_crit_edge ], [ 10018, %if.then743.out_crit_edge ], [ 10018, %if.then702.out_crit_edge ], [ 10018, %if.then643.out_crit_edge ], [ 10018, %if.then630.out_crit_edge ], [ 10018, %if.then620.out_crit_edge ], [ 10018, %if.then609.out_crit_edge ], [ 10018, %if.then600.out_crit_edge ], [ 10018, %if.then588.out_crit_edge ], [ 10018, %if.then576.out_crit_edge ], [ 10018, %if.then566.out_crit_edge ], [ 10018, %if.then553.out_crit_edge ], [ 10018, %if.then527.out_crit_edge ], [ 10018, %if.then518.out_crit_edge ], [ 10018, %if.then506.out_crit_edge ], [ 10018, %if.then495.out_crit_edge ], [ 10018, %if.then484.out_crit_edge ], [ 10018, %if.then475.out_crit_edge ], [ 10018, %if.then466.out_crit_edge ], [ 10018, %if.then455.out_crit_edge ], [ 10018, %if.then446.out_crit_edge ], [ 10018, %if.then429.out_crit_edge ], [ 10018, %if.then419.out_crit_edge ], [ 10018, %if.then410.out_crit_edge ], [ 10018, %if.then401.out_crit_edge ], [ 10018, %if.then389.out_crit_edge ], [ 10018, %if.then380.out_crit_edge ], [ 10018, %if.then371.out_crit_edge ], [ 10018, %if.then362.out_crit_edge ], [ 10018, %if.then353.out_crit_edge ], [ 10018, %if.then338.out_crit_edge ], [ 10018, %if.then289.out_crit_edge ], [ 10018, %if.then279.out_crit_edge ], [ 10018, %if.then270.out_crit_edge ], [ 10018, %if.then242.out_crit_edge ], [ 10018, %if.then233.out_crit_edge ], [ 10018, %if.then224.out_crit_edge ], [ 10018, %if.then215.out_crit_edge ], [ 10018, %if.then206.out_crit_edge ], [ 10018, %if.then196.out_crit_edge ], [ 10018, %if.then180.out_crit_edge ], [ 10018, %if.then167.out_crit_edge ], [ 10018, %if.end116.out_crit_edge ], [ 10018, %if.then301.out_crit_edge ], [ 10018, %if.end307.out_crit_edge ], [ 10018, %for.body.out_crit_edge ], [ %call327, %if.end322.out_crit_edge ]
  %tempfh.1 = phi ptr [ %tempfh.2, %out_nfserr ], [ %tempfh.0, %if.then438.out_crit_edge ], [ %tempfh.0, %if.then536.out_crit_edge ], [ %tempfh.0, %if.then544.out_crit_edge ], [ %tempfh.0, %if.then685.out_crit_edge ], [ %tempfh.0, %if.then693.out_crit_edge ], [ %tempfh.0, %if.then711.out_crit_edge ], [ %tempfh.0, %if.then735.out_crit_edge ], [ %tempfh.0, %if.end753 ], [ %call7.i, %if.end64.out_crit_edge ], [ null, %if.then60.out_crit_edge ], [ %tempfh.0, %if.then73.out_crit_edge ], [ %tempfh.0, %if.end171.out_crit_edge ], [ null, %if.then.i.out_crit_edge ], [ %tempfh.0, %if.else15.i.out_crit_edge ], [ %tempfh.0, %if.then7.i.out_crit_edge ], [ %tempfh.0, %if.then.i1066.out_crit_edge ], [ %tempfh.0, %cleanup678 ], [ %tempfh.0, %if.then141.out_crit_edge ], [ %tempfh.0, %if.else151.out_crit_edge ], [ %tempfh.0, %if.then743.out_crit_edge ], [ %tempfh.0, %if.then702.out_crit_edge ], [ %tempfh.0, %if.then643.out_crit_edge ], [ %tempfh.0, %if.then630.out_crit_edge ], [ %tempfh.0, %if.then620.out_crit_edge ], [ %tempfh.0, %if.then609.out_crit_edge ], [ %tempfh.0, %if.then600.out_crit_edge ], [ %tempfh.0, %if.then588.out_crit_edge ], [ %tempfh.0, %if.then576.out_crit_edge ], [ %tempfh.0, %if.then566.out_crit_edge ], [ %tempfh.0, %if.then553.out_crit_edge ], [ %tempfh.0, %if.then527.out_crit_edge ], [ %tempfh.0, %if.then518.out_crit_edge ], [ %tempfh.0, %if.then506.out_crit_edge ], [ %tempfh.0, %if.then495.out_crit_edge ], [ %tempfh.0, %if.then484.out_crit_edge ], [ %tempfh.0, %if.then475.out_crit_edge ], [ %tempfh.0, %if.then466.out_crit_edge ], [ %tempfh.0, %if.then455.out_crit_edge ], [ %tempfh.0, %if.then446.out_crit_edge ], [ %tempfh.0, %if.then429.out_crit_edge ], [ %tempfh.0, %if.then419.out_crit_edge ], [ %tempfh.0, %if.then410.out_crit_edge ], [ %tempfh.0, %if.then401.out_crit_edge ], [ %tempfh.0, %if.then389.out_crit_edge ], [ %tempfh.0, %if.then380.out_crit_edge ], [ %tempfh.0, %if.then371.out_crit_edge ], [ %tempfh.0, %if.then362.out_crit_edge ], [ %tempfh.0, %if.then353.out_crit_edge ], [ %tempfh.0, %if.then338.out_crit_edge ], [ %tempfh.0, %if.then289.out_crit_edge ], [ %tempfh.0, %if.then279.out_crit_edge ], [ %tempfh.0, %if.then270.out_crit_edge ], [ %tempfh.0, %if.then242.out_crit_edge ], [ %tempfh.0, %if.then233.out_crit_edge ], [ %tempfh.0, %if.then224.out_crit_edge ], [ %tempfh.0, %if.then215.out_crit_edge ], [ %tempfh.0, %if.then206.out_crit_edge ], [ %tempfh.0, %if.then196.out_crit_edge ], [ %tempfh.0, %if.then180.out_crit_edge ], [ %tempfh.0, %if.then167.out_crit_edge ], [ %tempfh.0, %if.end116.out_crit_edge ], [ %tempfh.0, %if.then301.out_crit_edge ], [ %tempfh.0, %if.end307.out_crit_edge ], [ %tempfh.0, %if.end322.out_crit_edge ], [ %tempfh.0, %for.body.out_crit_edge ]
  %271 = ptrtoint ptr %context to i32
  call void @__asan_load4_noabort(i32 %271)
  %272 = load ptr, ptr %context, align 4
  %tobool759.not = icmp eq ptr %272, null
  br i1 %tobool759.not, label %out.if.end761_crit_edge, label %if.then760

out.if.end761_crit_edge:                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end761

if.then760:                                       ; preds = %out
  call void @__sanitizer_cov_trace_pc() #18
  %273 = ptrtoint ptr %contextlen to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load i32, ptr %contextlen, align 4
  call void @security_release_secctx(ptr noundef nonnull %272, i32 noundef %274) #16
  br label %if.end761

if.end761:                                        ; preds = %if.then760, %out.if.end761_crit_edge
  %275 = ptrtoint ptr %acl to i32
  call void @__asan_load4_noabort(i32 %275)
  %276 = load ptr, ptr %acl, align 4
  call void @kfree(ptr noundef %276) #16
  %tobool762.not = icmp eq ptr %tempfh.1, null
  br i1 %tobool762.not, label %if.end761.if.end764_crit_edge, label %if.then763

if.end761.if.end764_crit_edge:                    ; preds = %if.end761
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end764

if.then763:                                       ; preds = %if.end761
  call void @__sanitizer_cov_trace_pc() #18
  call void @fh_put(ptr noundef nonnull %tempfh.1) #16
  call void @kfree(ptr noundef nonnull %tempfh.1) #16
  br label %if.end764

if.end764:                                        ; preds = %if.then763, %if.end761.if.end764_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %status.2)
  %tobool765.not = icmp eq i32 %status.2, 0
  br i1 %tobool765.not, label %if.end764.cleanup769_crit_edge, label %if.then766

if.end764.cleanup769_crit_edge:                   ; preds = %if.end764
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup769

if.then766:                                       ; preds = %if.end764
  call void @__sanitizer_cov_trace_pc() #18
  call void @xdr_truncate_encode(ptr noundef %xdr, i32 noundef %11) #16
  br label %cleanup769

out_nfserr:                                       ; preds = %cleanup678.thread1188, %if.then102.out_nfserr_crit_edge, %if.then73.out_nfserr_crit_edge, %if.then51.out_nfserr_crit_edge, %if.end42.out_nfserr_crit_edge
  %err.6 = phi i32 [ %call43, %if.end42.out_nfserr_crit_edge ], [ %call52, %if.then51.out_nfserr_crit_edge ], [ %call74, %if.then73.out_nfserr_crit_edge ], [ %err.2, %if.then102.out_nfserr_crit_edge ], [ %call671, %cleanup678.thread1188 ]
  %tempfh.2 = phi ptr [ null, %if.end42.out_nfserr_crit_edge ], [ null, %if.then51.out_nfserr_crit_edge ], [ %tempfh.0, %if.then73.out_nfserr_crit_edge ], [ %tempfh.0, %if.then102.out_nfserr_crit_edge ], [ %tempfh.0, %cleanup678.thread1188 ]
  %call768 = call i32 @nfserrno(i32 noundef %err.6) #16
  br label %out

cleanup769:                                       ; preds = %if.then766, %if.end764.cleanup769_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %contextlen) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %context) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %acl) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %attrlen) #16
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %statfs) #16
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %stat) #16
  ret i32 %status.2
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @nfsd4_check_resp_size(ptr nocapture noundef readonly %resp, i32 noundef %respsize) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %rqstp = getelementptr inbounds %struct.nfsd4_compoundres, ptr %resp, i32 0, i32 1
  %0 = ptrtoint ptr %rqstp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rqstp, align 4
  %slot1 = getelementptr inbounds %struct.nfsd4_compoundres, ptr %resp, i32 0, i32 6, i32 5
  %2 = ptrtoint ptr %slot1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %slot1, align 4
  %len = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 19, i32 8
  %4 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len, align 4
  %add = add i32 %5, %respsize
  %buflen = getelementptr inbounds %struct.svc_rqst, ptr %1, i32 0, i32 19, i32 7
  %6 = ptrtoint ptr %buflen to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %buflen, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %7)
  %cmp.not = icmp ugt i32 %add, %7
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %8 = ptrtoint ptr %slot1 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %slot1, align 4
  %cmp.i.not = icmp eq ptr %9, null
  br i1 %cmp.i.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %sl_flags = getelementptr inbounds %struct.nfsd4_slot, ptr %3, i32 0, i32 5
  %10 = ptrtoint ptr %sl_flags to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %sl_flags, align 2
  %12 = and i8 %11, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %tobool.not = icmp eq i8 %12, 0
  br i1 %tobool.not, label %if.end4.cleanup_crit_edge, label %land.end

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.end:                                         ; preds = %if.end4
  %.b49 = load i1, ptr @nfsd4_check_resp_size.__already_done, align 1
  br i1 %.b49, label %land.end.cleanup_crit_edge, label %if.then12, !prof !104

land.end.cleanup_crit_edge:                       ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then12:                                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @nfsd4_check_resp_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5280, i32 noundef 9, ptr noundef null) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then12, %land.end.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ 10018, %if.end.cleanup_crit_edge ], [ 10067, %if.then12 ], [ 10067, %land.end.cleanup_crit_edge ], [ 10066, %if.end4.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @nfsd4_encode_operation(ptr noundef %resp, ptr noundef %op) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %replay_owner = getelementptr inbounds %struct.nfsd4_compoundres, ptr %resp, i32 0, i32 6, i32 2
  %2 = ptrtoint ptr %replay_owner to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %replay_owner, align 8
  %rqstp2 = getelementptr inbounds %struct.nfsd4_compoundres, ptr %resp, i32 0, i32 1
  %4 = ptrtoint ptr %rqstp2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rqstp2, align 4
  %opdesc3 = getelementptr inbounds %struct.nfsd4_op, ptr %op, i32 0, i32 1
  %6 = ptrtoint ptr %opdesc3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %opdesc3, align 4
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 8) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %land.end, label %if.end38

land.end:                                         ; preds = %entry
  %.b202 = load i1, ptr @nfsd4_encode_operation.__already_done, align 1
  br i1 %.b202, label %land.end.cleanup_crit_edge, label %if.then9, !prof !104

land.end.cleanup_crit_edge:                       ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then9:                                         ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @nfsd4_encode_operation.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5299, i32 noundef 9, ptr noundef null) #16
  br label %cleanup

if.end38:                                         ; preds = %entry
  %8 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %op, align 32
  %10 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %call, align 4
  %buf = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 1
  %11 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %buf, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %12, i32 0, i32 8
  %13 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %len, align 4
  %15 = load i32, ptr %op, align 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 10044, i32 %15)
  %cmp = icmp eq i32 %15, 10044
  br i1 %cmp, label %if.end38.status136_crit_edge, label %if.end41

if.end38.status136_crit_edge:                     ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #18
  br label %status136

if.end41:                                         ; preds = %if.end38
  %status = getelementptr inbounds %struct.nfsd4_op, ptr %op, i32 0, i32 2
  %16 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %status, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool42.not = icmp eq i32 %17, 0
  %tobool43.not = icmp eq ptr %7, null
  %or.cond = select i1 %tobool42.not, i1 true, i1 %tobool43.not
  br i1 %or.cond, label %if.end41.do.body48_crit_edge, label %land.lhs.true44

if.end41.do.body48_crit_edge:                     ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body48

land.lhs.true44:                                  ; preds = %if.end41
  %op_flags = getelementptr inbounds %struct.nfsd4_operation, ptr %7, i32 0, i32 2
  %18 = ptrtoint ptr %op_flags to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %op_flags, align 4
  %and = and i32 %19, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool45.not = icmp eq i32 %and, 0
  br i1 %tobool45.not, label %land.lhs.true44.status136_crit_edge, label %land.lhs.true44.do.body48_crit_edge

land.lhs.true44.do.body48_crit_edge:              ; preds = %land.lhs.true44
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body48

land.lhs.true44.status136_crit_edge:              ; preds = %land.lhs.true44
  call void @__sanitizer_cov_trace_pc() #18
  br label %status136

do.body48:                                        ; preds = %land.lhs.true44.do.body48_crit_edge, %if.end41.do.body48_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 75, i32 %15)
  %cmp50 = icmp ugt i32 %15, 75
  %20 = and i32 %15, 1073741823
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %20)
  %tobool52.not = icmp ult i32 %20, 3
  %21 = or i1 %cmp50, %tobool52.not
  br i1 %21, label %do.body62, label %do.end70, !prof !108

do.body62:                                        ; preds = %do.body48
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/nfsd/nfs4xdr.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5311, 0\0A.popsection", ""() #16, !srcloc !109
  unreachable

do.end70:                                         ; preds = %do.body48
  %arrayidx72 = getelementptr [76 x ptr], ptr @nfsd4_enc_ops, i32 0, i32 %15
  %22 = ptrtoint ptr %arrayidx72 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %arrayidx72, align 4
  %u = getelementptr inbounds %struct.nfsd4_op, ptr %op, i32 0, i32 4
  %call74 = tail call i32 %23(ptr noundef %resp, i32 noundef %17, ptr noundef %u) #16
  %24 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %call74, ptr %status, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call74)
  %tobool77.not = icmp eq i32 %call74, 0
  br i1 %tobool77.not, label %do.end70.if.end81_crit_edge, label %if.then78

do.end70.if.end81_crit_edge:                      ; preds = %do.end70
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end81

if.then78:                                        ; preds = %do.end70
  call void @__sanitizer_cov_trace_pc() #18
  %25 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %op, align 32
  tail call fastcc void @trace_nfsd_compound_encode_err(ptr noundef %5, i32 noundef %26, i32 noundef %call74)
  br label %if.end81

if.end81:                                         ; preds = %if.then78, %do.end70.if.end81_crit_edge
  br i1 %tobool43.not, label %if.end81.if.end88_crit_edge, label %land.lhs.true83

if.end81.if.end88_crit_edge:                      ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end88

land.lhs.true83:                                  ; preds = %if.end81
  %op_release = getelementptr inbounds %struct.nfsd4_operation, ptr %7, i32 0, i32 1
  %27 = ptrtoint ptr %op_release to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %op_release, align 4
  %tobool84.not = icmp eq ptr %28, null
  br i1 %tobool84.not, label %land.lhs.true83.if.end88_crit_edge, label %if.then85

land.lhs.true83.if.end88_crit_edge:               ; preds = %land.lhs.true83
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end88

if.then85:                                        ; preds = %land.lhs.true83
  call void @__sanitizer_cov_trace_pc() #18
  tail call void %28(ptr noundef %u) #16
  br label %if.end88

if.end88:                                         ; preds = %if.then85, %land.lhs.true83.if.end88_crit_edge, %if.end81.if.end88_crit_edge
  tail call void @xdr_commit_encode(ptr noundef %1) #16
  %29 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %status, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool90.not = icmp eq i32 %30, 0
  br i1 %tobool90.not, label %if.then91, label %if.end88.if.end97_crit_edge

if.end88.if.end97_crit_edge:                      ; preds = %if.end88
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end97

if.then91:                                        ; preds = %if.end88
  %rq_resp.i = getelementptr inbounds %struct.svc_rqst, ptr %5, i32 0, i32 36
  %31 = ptrtoint ptr %rq_resp.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %rq_resp.i, align 4
  %rq_argp.i = getelementptr inbounds %struct.svc_rqst, ptr %5, i32 0, i32 35
  %33 = ptrtoint ptr %rq_argp.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %rq_argp.i, align 8
  %opcnt.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %34, i32 0, i32 6
  %35 = ptrtoint ptr %opcnt.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %opcnt.i, align 8
  %opcnt1.i = getelementptr inbounds %struct.nfsd4_compoundres, ptr %32, i32 0, i32 5
  %37 = ptrtoint ptr %opcnt1.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %opcnt1.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %36, i32 %38)
  %cmp.i = icmp eq i32 %36, %38
  %spec.select = select i1 %cmp.i, i32 0, i32 16
  %39 = ptrtoint ptr %rqstp2 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %rqstp2, align 4
  %slot1.i = getelementptr inbounds %struct.nfsd4_compoundres, ptr %resp, i32 0, i32 6, i32 5
  %41 = ptrtoint ptr %slot1.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %slot1.i, align 4
  %len.i = getelementptr inbounds %struct.svc_rqst, ptr %40, i32 0, i32 19, i32 8
  %43 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %len.i, align 4
  %add.i = add i32 %44, %spec.select
  %buflen.i = getelementptr inbounds %struct.svc_rqst, ptr %40, i32 0, i32 19, i32 7
  %45 = ptrtoint ptr %buflen.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %buflen.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %46)
  %cmp.not.i = icmp ugt i32 %add.i, %46
  br i1 %cmp.not.i, label %if.end.i, label %if.then91.nfsd4_check_resp_size.exit_crit_edge

if.then91.nfsd4_check_resp_size.exit_crit_edge:   ; preds = %if.then91
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_check_resp_size.exit

if.end.i:                                         ; preds = %if.then91
  %cmp.i.not.i = icmp eq ptr %42, null
  br i1 %cmp.i.not.i, label %if.end.i.nfsd4_check_resp_size.exit_crit_edge, label %if.end4.i

if.end.i.nfsd4_check_resp_size.exit_crit_edge:    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_check_resp_size.exit

if.end4.i:                                        ; preds = %if.end.i
  %sl_flags.i = getelementptr inbounds %struct.nfsd4_slot, ptr %42, i32 0, i32 5
  %47 = ptrtoint ptr %sl_flags.i to i32
  call void @__asan_load1_noabort(i32 %47)
  %48 = load i8, ptr %sl_flags.i, align 2
  %49 = and i8 %48, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %49)
  %tobool.not.i = icmp eq i8 %49, 0
  br i1 %tobool.not.i, label %if.end4.i.nfsd4_check_resp_size.exit_crit_edge, label %land.end.i

if.end4.i.nfsd4_check_resp_size.exit_crit_edge:   ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_check_resp_size.exit

land.end.i:                                       ; preds = %if.end4.i
  %.b49.i = load i1, ptr @nfsd4_check_resp_size.__already_done, align 1
  br i1 %.b49.i, label %land.end.i.nfsd4_check_resp_size.exit_crit_edge, label %if.then12.i, !prof !104

land.end.i.nfsd4_check_resp_size.exit_crit_edge:  ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_check_resp_size.exit

if.then12.i:                                      ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @nfsd4_check_resp_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5280, i32 noundef 9, ptr noundef null) #16
  br label %nfsd4_check_resp_size.exit

nfsd4_check_resp_size.exit:                       ; preds = %if.then12.i, %land.end.i.nfsd4_check_resp_size.exit_crit_edge, %if.end4.i.nfsd4_check_resp_size.exit_crit_edge, %if.end.i.nfsd4_check_resp_size.exit_crit_edge, %if.then91.nfsd4_check_resp_size.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.then91.nfsd4_check_resp_size.exit_crit_edge ], [ 10018, %if.end.i.nfsd4_check_resp_size.exit_crit_edge ], [ 10067, %if.then12.i ], [ 10067, %land.end.i.nfsd4_check_resp_size.exit_crit_edge ], [ 10066, %if.end4.i.nfsd4_check_resp_size.exit_crit_edge ]
  %50 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %retval.0.i, ptr %status, align 8
  br label %if.end97

if.end97:                                         ; preds = %nfsd4_check_resp_size.exit, %if.end88.if.end97_crit_edge
  %51 = phi i32 [ %retval.0.i, %nfsd4_check_resp_size.exit ], [ %30, %if.end88.if.end97_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 10018, i32 %51)
  %cmp99 = icmp eq i32 %51, 10018
  br i1 %cmp99, label %land.lhs.true100, label %if.end97.if.end112thread-pre-split_crit_edge

if.end97.if.end112thread-pre-split_crit_edge:     ; preds = %if.end97
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end112thread-pre-split

land.lhs.true100:                                 ; preds = %if.end97
  %slot.i = getelementptr inbounds %struct.nfsd4_compoundres, ptr %resp, i32 0, i32 6, i32 5
  %52 = ptrtoint ptr %slot.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %slot.i, align 4
  %cmp.i203.not = icmp eq ptr %53, null
  br i1 %cmp.i203.not, label %land.lhs.true100.if.end112thread-pre-split_crit_edge, label %if.then103

land.lhs.true100.if.end112thread-pre-split_crit_edge: ; preds = %land.lhs.true100
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end112thread-pre-split

if.then103:                                       ; preds = %land.lhs.true100
  call void @__sanitizer_cov_trace_pc() #18
  %54 = ptrtoint ptr %slot.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %slot.i, align 4
  %sl_flags = getelementptr inbounds %struct.nfsd4_slot, ptr %55, i32 0, i32 5
  %56 = ptrtoint ptr %sl_flags to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %sl_flags, align 2
  %58 = and i8 %57, 2
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %58)
  %tobool107.not = icmp eq i8 %58, 0
  %. = select i1 %tobool107.not, i32 10066, i32 10067
  %59 = ptrtoint ptr %status to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %., ptr %status, align 8
  br label %if.end112

if.end112thread-pre-split:                        ; preds = %land.lhs.true100.if.end112thread-pre-split_crit_edge, %if.end97.if.end112thread-pre-split_crit_edge
  %60 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %60)
  %.pr = load i32, ptr %status, align 8
  br label %if.end112

if.end112:                                        ; preds = %if.end112thread-pre-split, %if.then103
  %61 = phi i32 [ %.pr, %if.end112thread-pre-split ], [ %., %if.then103 ]
  %62 = zext i32 %61 to i64
  call void @__sanitizer_cov_trace_switch(i64 %62, ptr @__sancov_gen_cov_switch_values.32)
  switch i32 %61, label %if.end112.if.end124_crit_edge [
    i32 10018, label %if.end112.if.then123_crit_edge
    i32 10066, label %if.end112.if.then123_crit_edge204
    i32 10067, label %if.end112.if.then123_crit_edge205
  ]

if.end112.if.then123_crit_edge205:                ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then123

if.end112.if.then123_crit_edge204:                ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then123

if.end112.if.then123_crit_edge:                   ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then123

if.end112.if.end124_crit_edge:                    ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end124

if.then123:                                       ; preds = %if.end112.if.then123_crit_edge, %if.end112.if.then123_crit_edge204, %if.end112.if.then123_crit_edge205
  tail call void @warn_on_nonidempotent_op(ptr noundef %op) #16
  tail call void @xdr_truncate_encode(ptr noundef %1, i32 noundef %14) #16
  br label %if.end124

if.end124:                                        ; preds = %if.then123, %if.end112.if.end124_crit_edge
  %tobool125.not = icmp eq ptr %3, null
  br i1 %tobool125.not, label %if.end124.status136_crit_edge, label %if.then126

if.end124.status136_crit_edge:                    ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #18
  br label %status136

if.then126:                                       ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #18
  %63 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %buf, align 4
  %len129 = getelementptr inbounds %struct.xdr_buf, ptr %64, i32 0, i32 8
  %65 = ptrtoint ptr %len129 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %len129, align 4
  %sub = sub i32 %66, %14
  %67 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %status, align 8
  %so_replay = getelementptr inbounds %struct.nfs4_stateowner, ptr %3, i32 0, i32 7
  %69 = ptrtoint ptr %so_replay to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %68, ptr %so_replay, align 4
  %rp_buflen = getelementptr inbounds %struct.nfs4_stateowner, ptr %3, i32 0, i32 7, i32 1
  %70 = ptrtoint ptr %rp_buflen to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %sub, ptr %rp_buflen, align 4
  %71 = load ptr, ptr %buf, align 4
  %rp_buf = getelementptr inbounds %struct.nfs4_stateowner, ptr %3, i32 0, i32 7, i32 2
  %72 = ptrtoint ptr %rp_buf to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %rp_buf, align 4
  %call134 = tail call i32 @read_bytes_from_xdr_buf(ptr noundef %71, i32 noundef %14, ptr noundef %73, i32 noundef %sub) #16
  br label %status136

status136:                                        ; preds = %if.then126, %if.end124.status136_crit_edge, %land.lhs.true44.status136_crit_edge, %if.end38.status136_crit_edge
  %74 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %buf, align 4
  %sub138 = add i32 %14, -4
  %status139 = getelementptr inbounds %struct.nfsd4_op, ptr %op, i32 0, i32 2
  %call140 = tail call i32 @write_bytes_to_xdr_buf(ptr noundef %75, i32 noundef %sub138, ptr noundef %status139, i32 noundef 4) #16
  br label %cleanup

cleanup:                                          ; preds = %status136, %if.then9, %land.end.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xdr_reserve_space(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_nfsd_compound_encode_err(ptr noundef %rqstp, i32 noundef %opnum, i32 noundef %status) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_nfsd_compound_encode_err, i32 0, i32 1), ptr blockaddress(@trace_nfsd_compound_encode_err, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !110

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !93) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !104

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.23, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !93) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !111
  %call42 = tail call i32 @__traceiter_nfsd_compound_encode_err(ptr noundef null, ptr noundef %rqstp, i32 noundef %opnum, i32 noundef %status) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !112
  %13 = tail call i32 @llvm.read_register.i32(metadata !93) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !93) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !104

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.23, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !93) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !113
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_nfsd_compound_encode_err, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_nfsd_compound_encode_err, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_nfsd_compound_encode_err.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_nfsd_compound_encode_err.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.22, i32 noundef 182, ptr noundef nonnull @.str.3) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !114
  %31 = tail call i32 @llvm.read_register.i32(metadata !93) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdr_commit_encode(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_on_nonidempotent_op(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @xdr_truncate_encode(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @read_bytes_from_xdr_buf(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @write_bytes_to_xdr_buf(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @nfsd4_encode_replay(ptr noundef %xdr, ptr nocapture noundef readonly %op) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %replay = getelementptr inbounds %struct.nfsd4_op, ptr %op, i32 0, i32 5
  %0 = ptrtoint ptr %replay to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %replay, align 32
  %rp_buflen = getelementptr inbounds %struct.nfs4_replay, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %rp_buflen to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rp_buflen, align 4
  %add = add i32 %3, 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef %add) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %land.end, label %if.end35

land.end:                                         ; preds = %entry
  %.b49 = load i1, ptr @nfsd4_encode_replay.__already_done, align 1
  br i1 %.b49, label %land.end.cleanup_crit_edge, label %if.then6, !prof !104

land.end.cleanup_crit_edge:                       ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then6:                                         ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @nfsd4_encode_replay.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5375, i32 noundef 9, ptr noundef null) #16
  br label %cleanup

if.end35:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %4 = ptrtoint ptr %op to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %op, align 32
  %incdec.ptr = getelementptr i32, ptr %call, i32 1
  %6 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %call, align 4
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %1, align 4
  %incdec.ptr36 = getelementptr i32, ptr %call, i32 2
  %9 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %incdec.ptr, align 4
  %rp_buf = getelementptr inbounds %struct.nfs4_replay, ptr %1, i32 0, i32 2
  %10 = ptrtoint ptr %rp_buf to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %rp_buf, align 4
  %12 = ptrtoint ptr %rp_buflen to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rp_buflen, align 4
  %call38 = tail call ptr @xdr_encode_opaque_fixed(ptr noundef %incdec.ptr36, ptr noundef %11, i32 noundef %13) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end35, %if.then6, %land.end.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xdr_encode_opaque_fixed(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @nfsd4_release_compoundargs(ptr nocapture noundef readonly %rqstp) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %rq_argp = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 35
  %0 = ptrtoint ptr %rq_argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rq_argp, align 8
  %ops = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ops, align 4
  %iops = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %1, i32 0, i32 8
  %cmp.not = icmp eq ptr %3, %iops
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @kfree(ptr noundef %3) #16
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %iops, ptr %ops, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %to_free = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %1, i32 0, i32 1
  %5 = ptrtoint ptr %to_free to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %to_free, align 4
  %tobool.not16 = icmp eq ptr %6, null
  br i1 %tobool.not16, label %if.end.while.end_crit_edge, label %if.end.while.body_crit_edge

if.end.while.body_crit_edge:                      ; preds = %if.end
  br label %while.body

if.end.while.end_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.body:                                       ; preds = %while.body.while.body_crit_edge, %if.end.while.body_crit_edge
  %7 = phi ptr [ %12, %while.body.while.body_crit_edge ], [ %6, %if.end.while.body_crit_edge ]
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %10 = ptrtoint ptr %to_free to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %9, ptr %to_free, align 4
  tail call void @kfree(ptr noundef nonnull %7) #16
  %11 = ptrtoint ptr %to_free to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %to_free, align 4
  %tobool.not = icmp eq ptr %12, null
  br i1 %tobool.not, label %while.body.while.end_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.end:                                        ; preds = %while.body.while.end_crit_edge, %if.end.while.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @nfs4svc_decode_compoundargs(ptr noundef %rqstp, ptr noundef %xdr) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %rq_argp = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 35
  %0 = ptrtoint ptr %rq_argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rq_argp, align 8
  %to_free = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %to_free to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %to_free, align 4
  %3 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %xdr, ptr %1, align 32
  %iops = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %1, i32 0, i32 8
  %ops = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %1, i32 0, i32 7
  %4 = ptrtoint ptr %ops to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %iops, ptr %ops, align 4
  %rqstp2 = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %1, i32 0, i32 2
  %5 = ptrtoint ptr %rqstp2 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %rqstp, ptr %rqstp2, align 8
  %rq_auth_slack.i = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 39
  %6 = ptrtoint ptr %rq_auth_slack.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rq_auth_slack.i, align 8
  %taglen.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %1, i32 0, i32 3
  %call.i.i = tail call ptr @xdr_inline_decode(ptr noundef %xdr, i32 noundef 4) #16
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %entry.nfsd4_decode_compound.exit_crit_edge, label %if.end.i, !prof !108

entry.nfsd4_decode_compound.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_compound.exit

if.end.i:                                         ; preds = %entry
  %8 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %call.i.i, align 4
  %10 = ptrtoint ptr %taglen.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %taglen.i, align 4
  %add1.i = add i32 %7, 12
  %tag.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %1, i32 0, i32 4
  %11 = ptrtoint ptr %tag.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %tag.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool.not.i = icmp eq i32 %9, 0
  br i1 %tobool.not.i, label %if.end.i.if.end26.i_crit_edge, label %if.then5.i, !prof !104

if.end.i.if.end26.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end26.i

if.then5.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %9)
  %cmp7.i = icmp ugt i32 %9, 128
  br i1 %cmp7.i, label %if.then5.i.nfsd4_decode_compound.exit_crit_edge, label %if.end9.i

if.then5.i.nfsd4_decode_compound.exit_crit_edge:  ; preds = %if.then5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_compound.exit

if.end9.i:                                        ; preds = %if.then5.i
  %12 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %1, align 32
  %call12.i = tail call ptr @xdr_inline_decode(ptr noundef %13, i32 noundef %9) #16
  %tobool13.not.i = icmp eq ptr %call12.i, null
  br i1 %tobool13.not.i, label %if.end9.i.nfsd4_decode_compound.exit_crit_edge, label %if.end15.i

if.end9.i.nfsd4_decode_compound.exit_crit_edge:   ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_compound.exit

if.end15.i:                                       ; preds = %if.end9.i
  %14 = ptrtoint ptr %taglen.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %taglen.i, align 4
  %16 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %1, align 32
  %scratch.i = getelementptr inbounds %struct.xdr_stream, ptr %17, i32 0, i32 4
  %18 = ptrtoint ptr %scratch.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %scratch.i, align 4
  %cmp.not.i = icmp eq ptr %19, %call12.i
  br i1 %cmp.not.i, label %if.end8.i.i.i16, label %if.end15.i.if.end22.i_crit_edge

if.end15.i.if.end22.i_crit_edge:                  ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22.i

if.end8.i.i.i16:                                  ; preds = %if.end15.i
  %add.i.i9 = add i32 %15, 4
  %call9.i.i.i15 = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i.i9, i32 noundef 3264) #20
  %tobool.not.i.i18 = icmp eq ptr %call9.i.i.i15, null
  br i1 %tobool.not.i.i18, label %svcxdr_savemem.exit.thread, label %svcxdr_savemem.exit

svcxdr_savemem.exit.thread:                       ; preds = %if.end8.i.i.i16
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %tag.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr null, ptr %tag.i, align 16
  br label %nfsd4_decode_compound.exit

svcxdr_savemem.exit:                              ; preds = %if.end8.i.i.i16
  call void @__sanitizer_cov_trace_pc() #18
  %21 = ptrtoint ptr %to_free to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %to_free, align 4
  %23 = ptrtoint ptr %call9.i.i.i15 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %22, ptr %call9.i.i.i15, align 128
  store ptr %call9.i.i.i15, ptr %to_free, align 4
  %buf.i.i = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call9.i.i.i15, i32 0, i32 1
  %24 = call ptr @memcpy(ptr %buf.i.i, ptr %call12.i, i32 %15)
  br label %if.end22.i

if.end22.i:                                       ; preds = %svcxdr_savemem.exit, %if.end15.i.if.end22.i_crit_edge
  %buf.i.i.sink = phi ptr [ %buf.i.i, %svcxdr_savemem.exit ], [ %call12.i, %if.end15.i.if.end22.i_crit_edge ]
  %25 = ptrtoint ptr %tag.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %buf.i.i.sink, ptr %tag.i, align 16
  %26 = ptrtoint ptr %taglen.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %taglen.i, align 4
  %add.i.i = add i32 %27, 3
  %and.i.i = and i32 %add.i.i, -4
  %add25.i = add i32 %and.i.i, %add1.i
  br label %if.end26.i

if.end26.i:                                       ; preds = %if.end22.i, %if.end.i.if.end26.i_crit_edge
  %max_reply.0.i = phi i32 [ %add25.i, %if.end22.i ], [ %add1.i, %if.end.i.if.end26.i_crit_edge ]
  %28 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %1, align 32
  %minorversion.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %1, i32 0, i32 5
  %call.i230.i = tail call ptr @xdr_inline_decode(ptr noundef %29, i32 noundef 4) #16
  %tobool.not.i231.i = icmp eq ptr %call.i230.i, null
  br i1 %tobool.not.i231.i, label %if.end26.i.nfsd4_decode_compound.exit_crit_edge, label %if.end31.i, !prof !108

if.end26.i.nfsd4_decode_compound.exit_crit_edge:  ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_compound.exit

if.end31.i:                                       ; preds = %if.end26.i
  %30 = ptrtoint ptr %call.i230.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %call.i230.i, align 4
  %32 = ptrtoint ptr %minorversion.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %minorversion.i, align 4
  %33 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %1, align 32
  %opcnt.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %1, i32 0, i32 6
  %call.i235.i = tail call ptr @xdr_inline_decode(ptr noundef %34, i32 noundef 4) #16
  %tobool.not.i236.i = icmp eq ptr %call.i235.i, null
  br i1 %tobool.not.i236.i, label %if.end31.i.nfsd4_decode_compound.exit_crit_edge, label %if.end36.i, !prof !108

if.end31.i.nfsd4_decode_compound.exit_crit_edge:  ; preds = %if.end31.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_compound.exit

if.end36.i:                                       ; preds = %if.end31.i
  %35 = ptrtoint ptr %call.i235.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %call.i235.i, align 4
  %37 = ptrtoint ptr %opcnt.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %opcnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %36)
  %cmp38.i = icmp ugt i32 %36, 16
  br i1 %cmp38.i, label %if.end36.i.nfsd4_decode_compound.exit_crit_edge, label %if.end40.i

if.end36.i.nfsd4_decode_compound.exit_crit_edge:  ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_compound.exit

if.end40.i:                                       ; preds = %if.end36.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %36)
  %cmp42.i = icmp ugt i32 %36, 8
  br i1 %cmp42.i, label %if.end8.i.i.i, label %if.end40.i.if.end58.i_crit_edge

if.end40.i.if.end58.i_crit_edge:                  ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end58.i

if.end8.i.i.i:                                    ; preds = %if.end40.i
  %mul.i = mul nuw nsw i32 %36, 2208
  %call9.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %mul.i, i32 noundef 3520) #20
  %38 = ptrtoint ptr %ops to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %call9.i.i.i, ptr %ops, align 4
  %tobool47.not.i = icmp eq ptr %call9.i.i.i, null
  br i1 %tobool47.not.i, label %if.then48.i, label %if.end8.i.i.i.if.end58.i_crit_edge

if.end8.i.i.i.if.end58.i_crit_edge:               ; preds = %if.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end58.i

if.then48.i:                                      ; preds = %if.end8.i.i.i
  %39 = ptrtoint ptr %ops to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %iops, ptr %ops, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfsd_debug to i32))
  %40 = load i32, ptr @nfsd_debug, align 4
  %and.i = and i32 %40, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool50.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool50.not.i, label %if.then48.i.nfsd4_decode_compound.exit_crit_edge, label %do.end.i

if.then48.i.nfsd4_decode_compound.exit_crit_edge: ; preds = %if.then48.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_compound.exit

do.end.i:                                         ; preds = %if.then48.i
  call void @__sanitizer_cov_trace_pc() #18
  %call53.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.24) #21
  br label %nfsd4_decode_compound.exit

if.end58.i:                                       ; preds = %if.end8.i.i.i.if.end58.i_crit_edge, %if.end40.i.if.end58.i_crit_edge
  %41 = ptrtoint ptr %minorversion.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %minorversion.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %42)
  %cmp60.i = icmp ugt i32 %42, 2
  br i1 %cmp60.i, label %if.end58.i.for.end.sink.split.i_crit_edge, label %if.end63.i

if.end58.i.for.end.sink.split.i_crit_edge:        ; preds = %if.end58.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.sink.split.i

if.end63.i:                                       ; preds = %if.end58.i
  %43 = ptrtoint ptr %opcnt.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %.pr.i = load i32, ptr %opcnt.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr.i)
  %cmp65265.not.i = icmp eq i32 %.pr.i, 0
  br i1 %cmp65265.not.i, label %if.end63.i.for.end.i_crit_edge, label %if.end63.i.for.body.i_crit_edge

if.end63.i.for.body.i_crit_edge:                  ; preds = %if.end63.i
  br label %for.body.i

if.end63.i.for.end.i_crit_edge:                   ; preds = %if.end63.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %if.end63.i.for.body.i_crit_edge
  %i.0270.i = phi i32 [ %inc124.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end63.i.for.body.i_crit_edge ]
  %readbytes.0269.i = phi i32 [ %readbytes.1.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end63.i.for.body.i_crit_edge ]
  %readcount.0268.i = phi i32 [ %readcount.1.i, %for.inc.i.for.body.i_crit_edge ], [ 0, %if.end63.i.for.body.i_crit_edge ]
  %max_reply.1267.i = phi i32 [ %spec.select229.i, %for.inc.i.for.body.i_crit_edge ], [ %max_reply.0.i, %if.end63.i.for.body.i_crit_edge ]
  %cachethis.0.off0266.i = phi i1 [ %or228.i, %for.inc.i.for.body.i_crit_edge ], [ false, %if.end63.i.for.body.i_crit_edge ]
  %44 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %ops, align 4
  %arrayidx.i = getelementptr %struct.nfsd4_op, ptr %45, i32 %i.0270.i
  %replay.i = getelementptr %struct.nfsd4_op, ptr %45, i32 %i.0270.i, i32 5
  %46 = ptrtoint ptr %replay.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr null, ptr %replay.i, align 32
  %47 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %1, align 32
  %call.i240.i = tail call ptr @xdr_inline_decode(ptr noundef %48, i32 noundef 4) #16
  %tobool.not.i241.i = icmp eq ptr %call.i240.i, null
  br i1 %tobool.not.i241.i, label %for.body.i.nfsd4_decode_compound.exit_crit_edge, label %if.end71.i, !prof !108

for.body.i.nfsd4_decode_compound.exit_crit_edge:  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_compound.exit

if.end71.i:                                       ; preds = %for.body.i
  %49 = ptrtoint ptr %call.i240.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %call.i240.i, align 4
  %51 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %50)
  %cmp.i.i = icmp ult i32 %50, 3
  br i1 %cmp.i.i, label %if.end71.i.if.else.i_crit_edge, label %if.else.i.i

if.end71.i.if.else.i_crit_edge:                   ; preds = %if.end71.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

if.else.i.i:                                      ; preds = %if.end71.i
  %52 = ptrtoint ptr %minorversion.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %minorversion.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %cmp1.i.i = icmp eq i32 %53, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 39, i32 %50)
  %cmp3.i.i = icmp ugt i32 %50, 39
  %or.cond.i.i = select i1 %cmp1.i.i, i1 %cmp3.i.i, i1 false
  br i1 %or.cond.i.i, label %if.else.i.i.if.else.i_crit_edge, label %if.else5.i.i

if.else.i.i.if.else.i_crit_edge:                  ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

if.else5.i.i:                                     ; preds = %if.else.i.i
  %54 = zext i32 %53 to i64
  call void @__sanitizer_cov_trace_switch(i64 %54, ptr @__sancov_gen_cov_switch_values.33)
  switch i32 %53, label %if.else5.i.i.if.then73.i_crit_edge [
    i32 1, label %land.lhs.true8.i.i
    i32 2, label %land.lhs.true15.i.i
  ]

if.else5.i.i.if.then73.i_crit_edge:               ; preds = %if.else5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then73.i

land.lhs.true8.i.i:                               ; preds = %if.else5.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 58, i32 %50)
  %cmp10.i.i = icmp ugt i32 %50, 58
  br i1 %cmp10.i.i, label %land.lhs.true8.i.i.if.else.i_crit_edge, label %land.lhs.true8.i.i.if.then73.i_crit_edge

land.lhs.true8.i.i.if.then73.i_crit_edge:         ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then73.i

land.lhs.true8.i.i.if.else.i_crit_edge:           ; preds = %land.lhs.true8.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

land.lhs.true15.i.i:                              ; preds = %if.else5.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 75, i32 %50)
  %cmp17.i.i = icmp ugt i32 %50, 75
  br i1 %cmp17.i.i, label %land.lhs.true15.i.i.if.else.i_crit_edge, label %land.lhs.true15.i.i.if.then73.i_crit_edge

land.lhs.true15.i.i.if.then73.i_crit_edge:        ; preds = %land.lhs.true15.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then73.i

land.lhs.true15.i.i.if.else.i_crit_edge:          ; preds = %land.lhs.true15.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i

if.then73.i:                                      ; preds = %land.lhs.true15.i.i.if.then73.i_crit_edge, %land.lhs.true8.i.i.if.then73.i_crit_edge, %if.else5.i.i.if.then73.i_crit_edge
  %arrayidx75.i = getelementptr [76 x ptr], ptr @nfsd4_dec_ops, i32 0, i32 %50
  %55 = ptrtoint ptr %arrayidx75.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %arrayidx75.i, align 4
  %u.i = getelementptr %struct.nfsd4_op, ptr %45, i32 %i.0270.i, i32 4
  %call76.i = tail call i32 %56(ptr noundef %1, ptr noundef %u.i) #16
  %status.i = getelementptr %struct.nfsd4_op, ptr %45, i32 %i.0270.i, i32 2
  %57 = ptrtoint ptr %status.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %call76.i, ptr %status.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call76.i)
  %cmp78.not.i = icmp eq i32 %call76.i, 0
  br i1 %cmp78.not.i, label %if.then73.i.if.end87.i_crit_edge, label %if.then79.i

if.then73.i.if.end87.i_crit_edge:                 ; preds = %if.then73.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end87.i

if.then79.i:                                      ; preds = %if.then73.i
  call void @__sanitizer_cov_trace_pc() #18
  %58 = ptrtoint ptr %rqstp2 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %rqstp2, align 8
  %60 = ptrtoint ptr %opcnt.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %opcnt.i, align 8
  %62 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %arrayidx.i, align 32
  tail call fastcc void @trace_nfsd_compound_decode_err(ptr noundef %59, i32 noundef %61, i32 noundef %i.0270.i, i32 noundef %63, i32 noundef %call76.i) #16
  br label %if.end87.i

if.else.i:                                        ; preds = %land.lhs.true15.i.i.if.else.i_crit_edge, %land.lhs.true8.i.i.if.else.i_crit_edge, %if.else.i.i.if.else.i_crit_edge, %if.end71.i.if.else.i_crit_edge
  %64 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 10044, ptr %arrayidx.i, align 32
  %status86.i = getelementptr %struct.nfsd4_op, ptr %45, i32 %i.0270.i, i32 2
  %65 = ptrtoint ptr %status86.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 10044, ptr %status86.i, align 8
  br label %if.end87.i

if.end87.i:                                       ; preds = %if.else.i, %if.then79.i, %if.then73.i.if.end87.i_crit_edge
  %call88.i = tail call ptr @OPDESC(ptr noundef %arrayidx.i) #16
  %opdesc.i = getelementptr %struct.nfsd4_op, ptr %45, i32 %i.0270.i, i32 1
  %66 = ptrtoint ptr %opdesc.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr %call88.i, ptr %opdesc.i, align 4
  %call89.i = tail call zeroext i1 @nfsd4_cache_this_op(ptr noundef %arrayidx.i) #16
  %or228.i = or i1 %cachethis.0.off0266.i, %call89.i
  %67 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %arrayidx.i, align 32
  %69 = zext i32 %68 to i64
  call void @__sanitizer_cov_trace_switch(i64 %69, ptr @__sancov_gen_cov_switch_values.34)
  switch i32 %68, label %if.else103.i [
    i32 25, label %if.end87.i.if.then99.i_crit_edge
    i32 68, label %if.end87.i.if.then99.i_crit_edge59
  ]

if.end87.i.if.then99.i_crit_edge59:               ; preds = %if.end87.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then99.i

if.end87.i.if.then99.i_crit_edge:                 ; preds = %if.end87.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then99.i

if.then99.i:                                      ; preds = %if.end87.i.if.then99.i_crit_edge, %if.end87.i.if.then99.i_crit_edge59
  %inc.i = add i32 %readcount.0268.i, 1
  %70 = ptrtoint ptr %rqstp2 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %rqstp2, align 8
  %call101.i = tail call i32 @nfsd4_max_reply(ptr noundef %71, ptr noundef %arrayidx.i) #16
  %add102.i = add i32 %call101.i, %readbytes.0269.i
  br label %if.end107.i

if.else103.i:                                     ; preds = %if.end87.i
  call void @__sanitizer_cov_trace_pc() #18
  %72 = ptrtoint ptr %rqstp2 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %rqstp2, align 8
  %call105.i = tail call i32 @nfsd4_max_reply(ptr noundef %73, ptr noundef %arrayidx.i) #16
  %add106.i = add i32 %call105.i, %max_reply.1267.i
  br label %if.end107.i

if.end107.i:                                      ; preds = %if.else103.i, %if.then99.i
  %max_reply.2.i = phi i32 [ %max_reply.1267.i, %if.then99.i ], [ %add106.i, %if.else103.i ]
  %readcount.1.i = phi i32 [ %inc.i, %if.then99.i ], [ %readcount.0268.i, %if.else103.i ]
  %readbytes.1.i = phi i32 [ %add102.i, %if.then99.i ], [ %readbytes.0269.i, %if.else103.i ]
  %74 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %arrayidx.i, align 32
  %76 = and i32 %75, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %76)
  %switch.i = icmp eq i32 %76, 12
  %add116.i = add i32 %max_reply.2.i, 1024
  %spec.select229.i = select i1 %switch.i, i32 %add116.i, i32 %max_reply.2.i
  %status118.i = getelementptr %struct.nfsd4_op, ptr %45, i32 %i.0270.i, i32 2
  %77 = ptrtoint ptr %status118.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %status118.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %78)
  %tobool119.not.i = icmp eq i32 %78, 0
  %inc124.i = add nuw i32 %i.0270.i, 1
  br i1 %tobool119.not.i, label %for.inc.i, label %if.end107.i.for.end.sink.split.i_crit_edge

if.end107.i.for.end.sink.split.i_crit_edge:       ; preds = %if.end107.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.sink.split.i

for.inc.i:                                        ; preds = %if.end107.i
  %79 = ptrtoint ptr %opcnt.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %opcnt.i, align 8
  %cmp65.i = icmp ult i32 %inc124.i, %80
  br i1 %cmp65.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.for.end.i_crit_edge

for.inc.i.for.end.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end.i

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.end.sink.split.i:                             ; preds = %if.end107.i.for.end.sink.split.i_crit_edge, %if.end58.i.for.end.sink.split.i_crit_edge
  %.sink.i = phi i32 [ 0, %if.end58.i.for.end.sink.split.i_crit_edge ], [ %inc124.i, %if.end107.i.for.end.sink.split.i_crit_edge ]
  %cachethis.1.off0.ph.i = phi i1 [ false, %if.end58.i.for.end.sink.split.i_crit_edge ], [ %or228.i, %if.end107.i.for.end.sink.split.i_crit_edge ]
  %max_reply.4.ph.i = phi i32 [ %max_reply.0.i, %if.end58.i.for.end.sink.split.i_crit_edge ], [ %spec.select229.i, %if.end107.i.for.end.sink.split.i_crit_edge ]
  %readcount.2.ph.i = phi i32 [ 0, %if.end58.i.for.end.sink.split.i_crit_edge ], [ %readcount.1.i, %if.end107.i.for.end.sink.split.i_crit_edge ]
  %readbytes.2.ph.i = phi i32 [ 0, %if.end58.i.for.end.sink.split.i_crit_edge ], [ %readbytes.1.i, %if.end107.i.for.end.sink.split.i_crit_edge ]
  %81 = ptrtoint ptr %opcnt.i to i32
  call void @__asan_store4_noabort(i32 %81)
  store i32 %.sink.i, ptr %opcnt.i, align 8
  br label %for.end.i

for.end.i:                                        ; preds = %for.end.sink.split.i, %for.inc.i.for.end.i_crit_edge, %if.end63.i.for.end.i_crit_edge
  %cachethis.1.off0.i = phi i1 [ false, %if.end63.i.for.end.i_crit_edge ], [ %cachethis.1.off0.ph.i, %for.end.sink.split.i ], [ %or228.i, %for.inc.i.for.end.i_crit_edge ]
  %max_reply.4.i = phi i32 [ %max_reply.0.i, %if.end63.i.for.end.i_crit_edge ], [ %max_reply.4.ph.i, %for.end.sink.split.i ], [ %spec.select229.i, %for.inc.i.for.end.i_crit_edge ]
  %readcount.2.i = phi i32 [ 0, %if.end63.i.for.end.i_crit_edge ], [ %readcount.2.ph.i, %for.end.sink.split.i ], [ %readcount.1.i, %for.inc.i.for.end.i_crit_edge ]
  %readbytes.2.i = phi i32 [ 0, %if.end63.i.for.end.i_crit_edge ], [ %readbytes.2.ph.i, %for.end.sink.split.i ], [ %readbytes.1.i, %for.inc.i.for.end.i_crit_edge ]
  %82 = ptrtoint ptr %minorversion.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %minorversion.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %83)
  %tobool126.not.i = icmp eq i32 %83, 0
  %spec.select.i = select i1 %tobool126.not.i, i1 %cachethis.1.off0.i, i1 false
  %84 = ptrtoint ptr %rqstp2 to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %rqstp2, align 8
  %add130.i = add i32 %readbytes.2.i, %max_reply.4.i
  tail call void @svc_reserve(ptr noundef %85, i32 noundef %add130.i) #16
  %cond.i = select i1 %spec.select.i, i32 2, i32 0
  %86 = ptrtoint ptr %rqstp2 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %rqstp2, align 8
  %rq_cachetype.i = getelementptr inbounds %struct.svc_rqst, ptr %87, i32 0, i32 32
  %88 = ptrtoint ptr %rq_cachetype.i to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 %cond.i, ptr %rq_cachetype.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %readcount.2.i)
  %cmp134.i = icmp sgt i32 %readcount.2.i, 1
  %sub.i = sub i32 4096, %7
  call void @__sanitizer_cov_trace_cmp4(i32 %max_reply.4.i, i32 %sub.i)
  %cmp137.i = icmp ugt i32 %max_reply.4.i, %sub.i
  %or.cond.i = select i1 %cmp134.i, i1 true, i1 %cmp137.i
  br i1 %or.cond.i, label %if.then139.i, label %for.end.i.nfsd4_decode_compound.exit_crit_edge

for.end.i.nfsd4_decode_compound.exit_crit_edge:   ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_compound.exit

if.then139.i:                                     ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %89 = ptrtoint ptr %rqstp2 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %rqstp2, align 8
  %rq_flags.i = getelementptr inbounds %struct.svc_rqst, ptr %90, i32 0, i32 33
  tail call void @_clear_bit(i32 noundef 4, ptr noundef %rq_flags.i) #16
  br label %nfsd4_decode_compound.exit

nfsd4_decode_compound.exit:                       ; preds = %if.then139.i, %for.end.i.nfsd4_decode_compound.exit_crit_edge, %for.body.i.nfsd4_decode_compound.exit_crit_edge, %do.end.i, %if.then48.i.nfsd4_decode_compound.exit_crit_edge, %if.end36.i.nfsd4_decode_compound.exit_crit_edge, %if.end31.i.nfsd4_decode_compound.exit_crit_edge, %if.end26.i.nfsd4_decode_compound.exit_crit_edge, %svcxdr_savemem.exit.thread, %if.end9.i.nfsd4_decode_compound.exit_crit_edge, %if.then5.i.nfsd4_decode_compound.exit_crit_edge, %entry.nfsd4_decode_compound.exit_crit_edge
  %retval.0.i = phi i1 [ false, %if.then5.i.nfsd4_decode_compound.exit_crit_edge ], [ false, %if.end9.i.nfsd4_decode_compound.exit_crit_edge ], [ true, %if.end36.i.nfsd4_decode_compound.exit_crit_edge ], [ false, %do.end.i ], [ false, %if.then48.i.nfsd4_decode_compound.exit_crit_edge ], [ true, %for.end.i.nfsd4_decode_compound.exit_crit_edge ], [ true, %if.then139.i ], [ false, %entry.nfsd4_decode_compound.exit_crit_edge ], [ false, %if.end26.i.nfsd4_decode_compound.exit_crit_edge ], [ false, %if.end31.i.nfsd4_decode_compound.exit_crit_edge ], [ false, %svcxdr_savemem.exit.thread ], [ false, %for.body.i.nfsd4_decode_compound.exit_crit_edge ]
  ret i1 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @nfs4svc_encode_compoundres(ptr nocapture noundef %rqstp, ptr nocapture noundef readonly %xdr) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %rq_resp = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 36
  %0 = ptrtoint ptr %rq_resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %rq_resp, align 4
  %buf1 = getelementptr inbounds %struct.xdr_stream, ptr %xdr, i32 0, i32 1
  %2 = ptrtoint ptr %buf1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %buf1, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len, align 4
  %iov_len = getelementptr inbounds %struct.kvec, ptr %3, i32 0, i32 1
  %6 = ptrtoint ptr %iov_len to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %iov_len, align 4
  %page_len = getelementptr inbounds %struct.xdr_buf, ptr %3, i32 0, i32 5
  %8 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %page_len, align 4
  %add = add i32 %9, %7
  %iov_len3 = getelementptr inbounds %struct.xdr_buf, ptr %3, i32 0, i32 1, i32 0, i32 1
  %10 = ptrtoint ptr %iov_len3 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %iov_len3, align 4
  %add4 = add i32 %add, %11
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %add4)
  %cmp.not = icmp eq i32 %5, %add4
  br i1 %cmp.not, label %entry.if.end31_crit_edge, label %land.rhs

entry.if.end31_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end31

land.rhs:                                         ; preds = %entry
  %.b63 = load i1, ptr @nfs4svc_encode_compoundres.__already_done, align 1
  br i1 %.b63, label %land.rhs.if.end31_crit_edge, label %if.then, !prof !104

land.rhs.if.end31_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end31

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @nfs4svc_encode_compoundres.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 5422, i32 noundef 9, ptr noundef null) #16
  br label %if.end31

if.end31:                                         ; preds = %if.then, %land.rhs.if.end31_crit_edge, %entry.if.end31_crit_edge
  %statusp = getelementptr inbounds %struct.nfsd4_compoundres, ptr %1, i32 0, i32 2
  %12 = ptrtoint ptr %statusp to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %statusp, align 8
  %status = getelementptr inbounds %struct.nfsd4_compoundres, ptr %1, i32 0, i32 6, i32 10
  %14 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %status, align 8
  %incdec.ptr = getelementptr i32, ptr %13, i32 1
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %13, align 4
  %page_ptr = getelementptr inbounds %struct.xdr_stream, ptr %xdr, i32 0, i32 5
  %17 = ptrtoint ptr %page_ptr to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %page_ptr, align 4
  %add.ptr = getelementptr ptr, ptr %18, i32 1
  %rq_next_page = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 22
  %19 = ptrtoint ptr %rq_next_page to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %add.ptr, ptr %rq_next_page, align 8
  %taglen = getelementptr inbounds %struct.nfsd4_compoundres, ptr %1, i32 0, i32 3
  %20 = ptrtoint ptr %taglen to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %taglen, align 4
  %incdec.ptr39 = getelementptr i32, ptr %13, i32 2
  %22 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %incdec.ptr, align 4
  %tag = getelementptr inbounds %struct.nfsd4_compoundres, ptr %1, i32 0, i32 4
  %23 = ptrtoint ptr %tag to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %tag, align 8
  %25 = load i32, ptr %taglen, align 4
  %26 = call ptr @memcpy(ptr %incdec.ptr39, ptr %24, i32 %25)
  %27 = load i32, ptr %taglen, align 4
  %add42 = add i32 %27, 3
  %shr = lshr i32 %add42, 2
  %add.ptr43 = getelementptr i32, ptr %incdec.ptr39, i32 %shr
  %opcnt = getelementptr inbounds %struct.nfsd4_compoundres, ptr %1, i32 0, i32 5
  %28 = ptrtoint ptr %opcnt to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %opcnt, align 4
  %30 = ptrtoint ptr %add.ptr43 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %add.ptr43, align 4
  tail call void @nfsd4_sequence_done(ptr noundef %1) #16
  ret i1 true
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @nfsd4_sequence_done(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @net_generic(ptr noundef %net, i32 noundef %id) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %0 = tail call i32 @llvm.read_register.i32(metadata !93) #16
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !115
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #16
  %call.i = tail call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.4, i32 noundef 696, ptr noundef nonnull @.str.5) #16
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %gen = getelementptr inbounds %struct.net, ptr %net, i32 0, i32 43
  %4 = ptrtoint ptr %gen to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %gen, align 128
  %call = tail call i32 @rcu_read_lock_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end7_crit_edge

rcu_read_lock.exit.do.end7_crit_edge:             ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end7

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call2 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true.do.end7_crit_edge, label %land.lhs.true4

land.lhs.true.do.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end7

land.lhs.true4:                                   ; preds = %land.lhs.true
  %.b9 = load i1, ptr @net_generic.__warned, align 1
  br i1 %.b9, label %land.lhs.true4.do.end7_crit_edge, label %if.then

land.lhs.true4.do.end7_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end7

if.then:                                          ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @net_generic.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.2, i32 noundef 45, ptr noundef nonnull @.str.3) #16
  br label %do.end7

do.end7:                                          ; preds = %if.then, %land.lhs.true4.do.end7_crit_edge, %land.lhs.true.do.end7_crit_edge, %rcu_read_lock.exit.do.end7_crit_edge
  %arrayidx = getelementptr [0 x ptr], ptr %5, i32 0, i32 %id
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 4
  %call.i10 = tail call zeroext i1 @rcu_is_watching() #16
  br i1 %call.i10, label %do.end7.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i13

do.end7.rcu_read_unlock.exit_crit_edge:           ; preds = %do.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

land.lhs.true.i13:                                ; preds = %do.end7
  %call1.i11 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i11)
  %tobool.not.i12 = icmp eq i32 %call1.i11, 0
  br i1 %tobool.not.i12, label %land.lhs.true.i13.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i15

land.lhs.true.i13.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i13
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

land.lhs.true2.i15:                               ; preds = %land.lhs.true.i13
  %.b4.i14 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i14, label %land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge, label %if.then.i16

land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i15
  call void @__sanitizer_cov_trace_pc() #18
  br label %rcu_read_unlock.exit

if.then.i16:                                      ; preds = %land.lhs.true2.i15
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.4, i32 noundef 724, ptr noundef nonnull @.str.6) #16
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i16, %land.lhs.true2.i15.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i13.rcu_read_unlock.exit_crit_edge, %do.end7.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !116
  %8 = tail call i32 @llvm.read_register.i32(metadata !93) #16
  %and.i.i.i.i.i17 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i.i17 to ptr
  %preempt_count.i.i.i.i18 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i.i.i18 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i.i.i18, align 4
  %sub.i.i.i = add i32 %11, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i18, align 4
  tail call void @rcu_read_unlock_strict() #16
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #16
  ret ptr %7
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vfs_getattr(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @vfs_statfs(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fh_compose(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfsd4_get_nfs4_acl(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_inode_getsecctx(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_encode_bitmap(ptr noundef %xdr, i32 noundef %bmval0, i32 noundef %bmval1, i32 noundef %bmval2) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bmval2)
  %tobool.not = icmp eq i32 %bmval2, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = tail call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 16) #16
  %tobool1.not = icmp eq ptr %call, null
  br i1 %tobool1.not, label %if.then.cleanup_crit_edge, label %if.end

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr = getelementptr i32, ptr %call, i32 1
  %0 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 3, ptr %call, align 4
  %incdec.ptr3 = getelementptr i32, ptr %call, i32 2
  %1 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %bmval0, ptr %incdec.ptr, align 4
  %incdec.ptr4 = getelementptr i32, ptr %call, i32 3
  %2 = ptrtoint ptr %incdec.ptr3 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %bmval1, ptr %incdec.ptr3, align 4
  %3 = ptrtoint ptr %incdec.ptr4 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %bmval2, ptr %incdec.ptr4, align 4
  br label %cleanup

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bmval1)
  %tobool6.not = icmp eq i32 %bmval1, 0
  br i1 %tobool6.not, label %if.else15, label %if.then7

if.then7:                                         ; preds = %if.else
  %call8 = tail call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 12) #16
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.then7.cleanup_crit_edge, label %if.end11

if.then7.cleanup_crit_edge:                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end11:                                         ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr12 = getelementptr i32, ptr %call8, i32 1
  %4 = ptrtoint ptr %call8 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 2, ptr %call8, align 4
  %incdec.ptr13 = getelementptr i32, ptr %call8, i32 2
  %5 = ptrtoint ptr %incdec.ptr12 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %bmval0, ptr %incdec.ptr12, align 4
  %6 = ptrtoint ptr %incdec.ptr13 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %bmval1, ptr %incdec.ptr13, align 4
  br label %cleanup

if.else15:                                        ; preds = %if.else
  %call16 = tail call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 8) #16
  %tobool17.not = icmp eq ptr %call16, null
  br i1 %tobool17.not, label %if.else15.cleanup_crit_edge, label %if.end19

if.else15.cleanup_crit_edge:                      ; preds = %if.else15
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end19:                                         ; preds = %if.else15
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr20 = getelementptr i32, ptr %call16, i32 1
  %7 = ptrtoint ptr %call16 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 1, ptr %call16, align 4
  %8 = ptrtoint ptr %incdec.ptr20 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %bmval0, ptr %incdec.ptr20, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end19, %if.else15.cleanup_crit_edge, %if.end11, %if.then7.cleanup_crit_edge, %if.end, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end11 ], [ 0, %if.end19 ], [ 0, %if.end ], [ 10018, %if.else15.cleanup_crit_edge ], [ 10018, %if.then7.cleanup_crit_edge ], [ 10018, %if.then.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @nfs4_file_type(i16 noundef zeroext %mode) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = and i16 %mode, -4096
  %and = zext i16 %0 to i32
  %1 = add nsw i32 %and, -4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 49152, i32 %1)
  %2 = icmp ult i32 %1, 49152
  br i1 %2, label %switch.lookup, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %3 = lshr exact i32 %1, 12
  %switch.gep = getelementptr inbounds [12 x i32], ptr @switch.table.nfs4_file_type, i32 0, i32 %3
  %4 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %4)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %return

return:                                           ; preds = %switch.lookup, %entry.return_crit_edge
  %retval.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @encode_change(ptr nocapture noundef writeonly %p, ptr nocapture noundef readonly %stat, ptr noundef %inode, ptr nocapture noundef readonly %exp) unnamed_addr #0 align 64 {
entry:
  %boot.i = alloca %struct.timespec64, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ex_flags = getelementptr inbounds %struct.svc_export, ptr %exp, i32 0, i32 2
  %0 = ptrtoint ptr %ex_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ex_flags, align 4
  %and = and i32 %1, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %cd = getelementptr inbounds %struct.svc_export, ptr %exp, i32 0, i32 13
  %2 = ptrtoint ptr %cd to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cd, align 8
  %flush_time = getelementptr inbounds %struct.cache_detail, ptr %3, i32 0, i32 16
  %4 = ptrtoint ptr %flush_time to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %flush_time, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %boot.i) #16
  %6 = call ptr @memset(ptr %boot.i, i32 255, i32 16)
  call void @getboottime64(ptr noundef nonnull %boot.i) #16
  %7 = ptrtoint ptr %boot.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %boot.i, align 8
  %add.i = add i64 %8, %5
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %boot.i) #16
  %conv = trunc i64 %add.i to i32
  %incdec.ptr = getelementptr i32, ptr %p, i32 1
  %9 = ptrtoint ptr %p to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %conv, ptr %p, align 4
  %10 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %incdec.ptr, align 4
  br label %if.end

if.else:                                          ; preds = %entry
  %i_sb.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %11 = ptrtoint ptr %i_sb.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %i_sb.i, align 4
  %s_export_op.i = getelementptr inbounds %struct.super_block, ptr %12, i32 0, i32 9
  %13 = ptrtoint ptr %s_export_op.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %s_export_op.i, align 16
  %fetch_iversion.i = getelementptr inbounds %struct.export_operations, ptr %14, i32 0, i32 9
  %15 = ptrtoint ptr %fetch_iversion.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %fetch_iversion.i, align 4
  %tobool.not.i = icmp eq ptr %16, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %call.i = tail call i64 %16(ptr noundef %inode) #16
  br label %nfsd4_change_attribute.exit

if.else.i:                                        ; preds = %if.else
  %s_flags.i = getelementptr inbounds %struct.super_block, ptr %12, i32 0, i32 10
  %17 = ptrtoint ptr %s_flags.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %s_flags.i, align 4
  %and.i = and i32 %18, 8388608
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool5.not.i = icmp eq i32 %and.i, 0
  %ctime11.i = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 14
  %19 = ptrtoint ptr %ctime11.i to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %ctime11.i, align 8
  br i1 %tobool5.not.i, label %if.else10.i, label %if.then6.i

if.then6.i:                                       ; preds = %if.else.i
  %shl.i = shl i64 %20, 30
  %tv_nsec.i = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 14, i32 1
  %21 = ptrtoint ptr %tv_nsec.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %tv_nsec.i, align 8
  %conv.i = sext i32 %22 to i64
  %add.i1 = add i64 %shl.i, %conv.i
  %i_version.i.i.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 38
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %i_version.i.i.i, i32 noundef 8) #16
  %call.i.i15.i.i = tail call i64 @generic_atomic64_read(ptr noundef %i_version.i.i.i) #16
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %if.end.i.i.for.cond.i.i_crit_edge, %if.then6.i
  %cur.0.i.i = phi i64 [ %call.i.i15.i.i, %if.then6.i ], [ %call.i.i.i, %if.end.i.i.for.cond.i.i_crit_edge ]
  %and.i.i = and i64 %cur.0.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.not.i.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.i, label %do.end.i.i

do.end.i.i:                                       ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !117
  br label %inode_query_iversion.exit.i

if.end.i.i:                                       ; preds = %for.cond.i.i
  %or.i.i = or i64 %cur.0.i.i, 1
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %i_version.i.i.i, i32 noundef 8) #16
  %call.i.i.i = tail call i64 @generic_atomic64_cmpxchg(ptr noundef %i_version.i.i.i, i64 noundef %cur.0.i.i, i64 noundef %or.i.i) #16
  %cmp.i.i = icmp eq i64 %call.i.i.i, %cur.0.i.i
  br i1 %cmp.i.i, label %if.end.i.i.inode_query_iversion.exit.i_crit_edge, label %if.end.i.i.for.cond.i.i_crit_edge, !prof !104

if.end.i.i.for.cond.i.i_crit_edge:                ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i.i

if.end.i.i.inode_query_iversion.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %inode_query_iversion.exit.i

inode_query_iversion.exit.i:                      ; preds = %if.end.i.i.inode_query_iversion.exit.i_crit_edge, %do.end.i.i
  %shr.i.i = lshr i64 %cur.0.i.i, 1
  %add9.i = add i64 %add.i1, %shr.i.i
  br label %nfsd4_change_attribute.exit

if.else10.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  %shl.i.i = shl i64 %20, 32
  %tv_nsec.i.i = getelementptr inbounds %struct.kstat, ptr %stat, i32 0, i32 14, i32 1
  %23 = ptrtoint ptr %tv_nsec.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %tv_nsec.i.i, align 8
  %conv.i.i = sext i32 %24 to i64
  %add.i.i = add i64 %shl.i.i, %conv.i.i
  br label %nfsd4_change_attribute.exit

nfsd4_change_attribute.exit:                      ; preds = %if.else10.i, %inode_query_iversion.exit.i, %if.then.i
  %retval.0.i = phi i64 [ %call.i, %if.then.i ], [ %add9.i, %inode_query_iversion.exit.i ], [ %add.i.i, %if.else10.i ]
  %25 = ptrtoint ptr %p to i32
  call void @__asan_storeN_noabort(i32 %25, i32 8)
  store i64 %retval.0.i, ptr %p, align 1
  br label %if.end

if.end:                                           ; preds = %nfsd4_change_attribute.exit, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @fsid_source(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_encode_aclname(ptr noundef %xdr, ptr noundef %rqstp, ptr nocapture noundef readonly %ace) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %whotype = getelementptr inbounds %struct.nfs4_ace, ptr %ace, i32 0, i32 3
  %0 = ptrtoint ptr %whotype to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %whotype, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp.not = icmp eq i32 %1, 0
  br i1 %cmp.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call i32 @nfs4_acl_write_who(ptr noundef %xdr, i32 noundef %1) #16
  br label %return

if.else:                                          ; preds = %entry
  %flag = getelementptr inbounds %struct.nfs4_ace, ptr %ace, i32 0, i32 1
  %2 = ptrtoint ptr %flag to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flag, align 4
  %and = and i32 %3, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  %4 = getelementptr inbounds %struct.nfs4_ace, ptr %ace, i32 0, i32 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %.unpack = load i32, ptr %4, align 4
  %6 = insertvalue [1 x i32] undef, i32 %.unpack, 0
  br i1 %tobool.not, label %if.else4, label %if.then2

if.then2:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %call3 = tail call i32 @nfsd4_encode_group(ptr noundef %xdr, ptr noundef %rqstp, [1 x i32] %6) #16
  br label %return

if.else4:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %call6 = tail call i32 @nfsd4_encode_user(ptr noundef %xdr, ptr noundef %rqstp, [1 x i32] %6) #16
  br label %return

return:                                           ; preds = %if.else4, %if.then2, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ %call3, %if.then2 ], [ %call6, %if.else4 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xdr_encode_opaque(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_encode_fs_locations(ptr noundef %xdr, ptr noundef %rqstp, ptr nocapture noundef readonly %exp) unnamed_addr #0 align 64 {
entry:
  %cur.i.i = alloca %struct.path, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ex_fslocs = getelementptr inbounds %struct.svc_export, ptr %exp, i32 0, i32 8
  %call.i = tail call ptr @rqst_find_fsidzero_export(ptr noundef %rqstp) #16
  %cmp.i.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %0 = ptrtoint ptr %call.i to i32
  %call3.i = tail call i32 @nfserrno(i32 noundef %0) #16
  br label %nfsd4_encode_fsloc_fsroot.exit

if.end.i:                                         ; preds = %entry
  %ex_path = getelementptr inbounds %struct.svc_export, ptr %exp, i32 0, i32 3
  %ex_path.i = getelementptr inbounds %struct.svc_export, ptr %call.i, i32 0, i32 3
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %cur.i.i) #16
  %1 = getelementptr inbounds %struct.path, ptr %cur.i.i, i32 0, i32 1
  %2 = ptrtoint ptr %ex_path to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %3 = load i64, ptr %ex_path, align 4
  %4 = ptrtoint ptr %cur.i.i to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %3, ptr %cur.i.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfsd_debug to i32))
  %5 = load i32, ptr @nfsd_debug, align 4
  %and.i.i = and i32 %5, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.do.end3.i.i_crit_edge, label %do.end.i.i

if.end.i.do.end3.i.i_crit_edge:                   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end3.i.i

do.end.i.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %call.i.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.7) #21
  br label %do.end3.i.i

do.end3.i.i:                                      ; preds = %do.end.i.i, %if.end.i.do.end3.i.i_crit_edge
  call void @path_get(ptr noundef nonnull %cur.i.i) #16
  %dentry2.i.i.i = getelementptr inbounds %struct.svc_export, ptr %call.i, i32 0, i32 3, i32 1
  br label %for.cond.outer.i.i

for.cond.outer.i.i:                               ; preds = %if.end21.i.i, %do.end3.i.i
  %ncomponents.0.ph.i.i = phi i32 [ %inc.i.i, %if.end21.i.i ], [ 0, %do.end3.i.i ]
  %components.0.ph.i.i = phi ptr [ %components.2.i.i, %if.end21.i.i ], [ null, %do.end3.i.i ]
  br label %for.cond.i.i

for.cond.i.i:                                     ; preds = %if.then8.i.i.for.cond.i.i_crit_edge, %for.cond.outer.i.i
  %6 = ptrtoint ptr %cur.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cur.i.i, align 8
  %8 = ptrtoint ptr %ex_path.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ex_path.i, align 4
  %cmp.i.i.i = icmp eq ptr %7, %9
  br i1 %cmp.i.i.i, label %path_equal.exit.i.i, label %for.cond.i.i.if.end7.i.i_crit_edge

for.cond.i.i.if.end7.i.i_crit_edge:               ; preds = %for.cond.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7.i.i

path_equal.exit.i.i:                              ; preds = %for.cond.i.i
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %1, align 4
  %12 = ptrtoint ptr %dentry2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dentry2.i.i.i, align 4
  %cmp3.i.not.i.i = icmp eq ptr %11, %13
  br i1 %cmp3.i.not.i.i, label %for.end.i.i, label %path_equal.exit.i.i.if.end7.i.i_crit_edge

path_equal.exit.i.i.if.end7.i.i_crit_edge:        ; preds = %path_equal.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7.i.i

if.end7.i.i:                                      ; preds = %path_equal.exit.i.i.if.end7.i.i_crit_edge, %for.cond.i.i.if.end7.i.i_crit_edge
  %14 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %1, align 4
  %16 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %7, align 4
  %cmp.i9.i = icmp eq ptr %15, %17
  br i1 %cmp.i9.i, label %if.then8.i.i, label %if.end13.i.i

if.then8.i.i:                                     ; preds = %if.end7.i.i
  %call9.i.i = call i32 @follow_up(ptr noundef nonnull %cur.i.i) #16
  %tobool10.not.i.i = icmp eq i32 %call9.i.i, 0
  br i1 %tobool10.not.i.i, label %if.then8.i.i.do.body61.i.i_crit_edge, label %if.then8.i.i.for.cond.i.i_crit_edge

if.then8.i.i.for.cond.i.i_crit_edge:              ; preds = %if.then8.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond.i.i

if.then8.i.i.do.body61.i.i_crit_edge:             ; preds = %if.then8.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body61.i.i

if.end13.i.i:                                     ; preds = %if.end7.i.i
  %and14.i.i = and i32 %ncomponents.0.ph.i.i, 15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14.i.i)
  %cmp15.i.i = icmp eq i32 %and14.i.i, 0
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end13.i.i.if.end21.i.i_crit_edge

if.end13.i.i.if.end21.i.i_crit_edge:              ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end21.i.i

if.then16.i.i:                                    ; preds = %if.end13.i.i
  %add.i.i = shl i32 %ncomponents.0.ph.i.i, 2
  %mul.i.i = add i32 %add.i.i, 64
  %call17.i.i = call noalias ptr @krealloc(ptr noundef %components.0.ph.i.i, i32 noundef %mul.i.i, i32 noundef 3264) #22
  %tobool18.not.i.i = icmp eq ptr %call17.i.i, null
  br i1 %tobool18.not.i.i, label %if.then16.i.i.do.body61.i.i_crit_edge, label %if.then16.i.i.if.end21.i.i_crit_edge

if.then16.i.i.if.end21.i.i_crit_edge:             ; preds = %if.then16.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end21.i.i

if.then16.i.i.do.body61.i.i_crit_edge:            ; preds = %if.then16.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body61.i.i

if.end21.i.i:                                     ; preds = %if.then16.i.i.if.end21.i.i_crit_edge, %if.end13.i.i.if.end21.i.i_crit_edge
  %components.2.i.i = phi ptr [ %call17.i.i, %if.then16.i.i.if.end21.i.i_crit_edge ], [ %components.0.ph.i.i, %if.end13.i.i.if.end21.i.i_crit_edge ]
  %18 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %1, align 4
  %inc.i.i = add i32 %ncomponents.0.ph.i.i, 1
  %arrayidx.i.i = getelementptr ptr, ptr %components.2.i.i, i32 %ncomponents.0.ph.i.i
  %20 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %19, ptr %arrayidx.i.i, align 4
  %21 = load ptr, ptr %1, align 4
  %call24.i.i = call ptr @dget_parent(ptr noundef %21) #16
  %22 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %call24.i.i, ptr %1, align 4
  br label %for.cond.outer.i.i

for.end.i.i:                                      ; preds = %path_equal.exit.i.i
  %call26.i.i = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool27.not.i.i = icmp eq ptr %call26.i.i, null
  br i1 %tobool27.not.i.i, label %for.end.i.i.do.body61.i.i_crit_edge, label %if.end29.i.i

for.end.i.i.do.body61.i.i_crit_edge:              ; preds = %for.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body61.i.i

if.end29.i.i:                                     ; preds = %for.end.i.i
  %23 = ptrtoint ptr %call26.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %ncomponents.0.ph.i.i, ptr %call26.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ncomponents.0.ph.i.i)
  %tobool30.not124.i.i = icmp eq i32 %ncomponents.0.ph.i.i, 0
  br i1 %tobool30.not124.i.i, label %if.end29.i.i.do.body61.i.i_crit_edge, label %if.end29.i.i.while.body.i.i_crit_edge

if.end29.i.i.while.body.i.i_crit_edge:            ; preds = %if.end29.i.i
  br label %while.body.i.i

if.end29.i.i.do.body61.i.i_crit_edge:             ; preds = %if.end29.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body61.i.i

while.body.i.i:                                   ; preds = %cleanup57.i.i.while.body.i.i_crit_edge, %if.end29.i.i.while.body.i.i_crit_edge
  %ncomponents.1125.i.i = phi i32 [ %sub.i.i, %cleanup57.i.i.while.body.i.i_crit_edge ], [ %ncomponents.0.ph.i.i, %if.end29.i.i.while.body.i.i_crit_edge ]
  %sub.i.i = add i32 %ncomponents.1125.i.i, -1
  %arrayidx32.i.i = getelementptr ptr, ptr %components.0.ph.i.i, i32 %sub.i.i
  %24 = ptrtoint ptr %arrayidx32.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx32.i.i, align 4
  %d_lockref.i.i = getelementptr inbounds %struct.dentry, ptr %25, i32 0, i32 7
  call void @_raw_spin_lock(ptr noundef %d_lockref.i.i) #16
  %d_name.i.i = getelementptr inbounds %struct.dentry, ptr %25, i32 0, i32 4
  %26 = ptrtoint ptr %d_name.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %d_name.i.i, align 8
  %add34.i.i = add i32 %27, 4
  %call35.i.i = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef %add34.i.i) #16
  %tobool36.not.i.i = icmp eq ptr %call35.i.i, null
  br i1 %tobool36.not.i.i, label %cleanup57.thread.i.i, label %if.end40.i.i

cleanup57.thread.i.i:                             ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @_raw_spin_unlock(ptr noundef %d_lockref.i.i) #16
  br label %do.body61.i.i

if.end40.i.i:                                     ; preds = %while.body.i.i
  %name.i.i = getelementptr inbounds %struct.dentry, ptr %25, i32 0, i32 4, i32 1
  %28 = ptrtoint ptr %name.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %name.i.i, align 8
  %call42.i.i = call ptr @xdr_encode_opaque(ptr noundef nonnull %call35.i.i, ptr noundef %29, i32 noundef %27) #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfsd_debug to i32))
  %30 = load i32, ptr @nfsd_debug, align 4
  %and44.i.i = and i32 %30, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and44.i.i)
  %tobool45.not.i.i = icmp eq i32 %and44.i.i, 0
  br i1 %tobool45.not.i.i, label %if.end40.i.i.cleanup57.i.i_crit_edge, label %do.end49.i.i

if.end40.i.i.cleanup57.i.i_crit_edge:             ; preds = %if.end40.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup57.i.i

do.end49.i.i:                                     ; preds = %if.end40.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %call51.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.10, ptr noundef %25) #21
  br label %cleanup57.i.i

cleanup57.i.i:                                    ; preds = %do.end49.i.i, %if.end40.i.i.cleanup57.i.i_crit_edge
  call void @_raw_spin_unlock(ptr noundef %d_lockref.i.i) #16
  call void @dput(ptr noundef %25) #16
  %tobool30.not.i.i = icmp eq i32 %sub.i.i, 0
  br i1 %tobool30.not.i.i, label %cleanup57.i.i.do.body61.i.i_crit_edge, label %cleanup57.i.i.while.body.i.i_crit_edge

cleanup57.i.i.while.body.i.i_crit_edge:           ; preds = %cleanup57.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body.i.i

cleanup57.i.i.do.body61.i.i_crit_edge:            ; preds = %cleanup57.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body61.i.i

do.body61.i.i:                                    ; preds = %cleanup57.i.i.do.body61.i.i_crit_edge, %cleanup57.thread.i.i, %if.end29.i.i.do.body61.i.i_crit_edge, %for.end.i.i.do.body61.i.i_crit_edge, %if.then16.i.i.do.body61.i.i_crit_edge, %if.then8.i.i.do.body61.i.i_crit_edge
  %ncomponents.3.i.i = phi i32 [ %ncomponents.0.ph.i.i, %for.end.i.i.do.body61.i.i_crit_edge ], [ %ncomponents.1125.i.i, %cleanup57.thread.i.i ], [ 0, %if.end29.i.i.do.body61.i.i_crit_edge ], [ 0, %cleanup57.i.i.do.body61.i.i_crit_edge ], [ %ncomponents.0.ph.i.i, %if.then8.i.i.do.body61.i.i_crit_edge ], [ %ncomponents.0.ph.i.i, %if.then16.i.i.do.body61.i.i_crit_edge ]
  %err.0.i.i = phi i32 [ 10018, %for.end.i.i.do.body61.i.i_crit_edge ], [ 10018, %cleanup57.thread.i.i ], [ 0, %if.end29.i.i.do.body61.i.i_crit_edge ], [ 0, %cleanup57.i.i.do.body61.i.i_crit_edge ], [ 10008, %if.then8.i.i.do.body61.i.i_crit_edge ], [ 10008, %if.then16.i.i.do.body61.i.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfsd_debug to i32))
  %31 = load i32, ptr @nfsd_debug, align 4
  %and62.i.i = and i32 %31, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and62.i.i)
  %tobool63.not.i.i = icmp eq i32 %and62.i.i, 0
  br i1 %tobool63.not.i.i, label %do.body61.i.i.do.end72.i.i_crit_edge, label %do.end67.i.i

do.body61.i.i.do.end72.i.i_crit_edge:             ; preds = %do.body61.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end72.i.i

do.end67.i.i:                                     ; preds = %do.body61.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %call69.i.i = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.13) #21
  br label %do.end72.i.i

do.end72.i.i:                                     ; preds = %do.end67.i.i, %do.body61.i.i.do.end72.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ncomponents.3.i.i)
  %tobool74.not126.i.i = icmp eq i32 %ncomponents.3.i.i, 0
  br i1 %tobool74.not126.i.i, label %do.end72.i.i.nfsd4_encode_path.exit.i_crit_edge, label %do.end72.i.i.while.body75.i.i_crit_edge

do.end72.i.i.while.body75.i.i_crit_edge:          ; preds = %do.end72.i.i
  br label %while.body75.i.i

do.end72.i.i.nfsd4_encode_path.exit.i_crit_edge:  ; preds = %do.end72.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_encode_path.exit.i

while.body75.i.i:                                 ; preds = %while.body75.i.i.while.body75.i.i_crit_edge, %do.end72.i.i.while.body75.i.i_crit_edge
  %ncomponents.4127.i.i = phi i32 [ %dec76.i.i, %while.body75.i.i.while.body75.i.i_crit_edge ], [ %ncomponents.3.i.i, %do.end72.i.i.while.body75.i.i_crit_edge ]
  %dec76.i.i = add i32 %ncomponents.4127.i.i, -1
  %arrayidx77.i.i = getelementptr ptr, ptr %components.0.ph.i.i, i32 %dec76.i.i
  %32 = ptrtoint ptr %arrayidx77.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx77.i.i, align 4
  call void @dput(ptr noundef %33) #16
  %tobool74.not.i.i = icmp eq i32 %dec76.i.i, 0
  br i1 %tobool74.not.i.i, label %while.body75.i.i.nfsd4_encode_path.exit.i_crit_edge, label %while.body75.i.i.while.body75.i.i_crit_edge

while.body75.i.i.while.body75.i.i_crit_edge:      ; preds = %while.body75.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body75.i.i

while.body75.i.i.nfsd4_encode_path.exit.i_crit_edge: ; preds = %while.body75.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_encode_path.exit.i

nfsd4_encode_path.exit.i:                         ; preds = %while.body75.i.i.nfsd4_encode_path.exit.i_crit_edge, %do.end72.i.i.nfsd4_encode_path.exit.i_crit_edge
  call void @kfree(ptr noundef %components.0.ph.i.i) #16
  call void @path_put(ptr noundef nonnull %cur.i.i) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %cur.i.i) #16
  %cd.i.i = getelementptr inbounds %struct.svc_export, ptr %call.i, i32 0, i32 13
  %34 = ptrtoint ptr %cd.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %cd.i.i, align 8
  %ref.i.i.i = getelementptr inbounds %struct.cache_head, ptr %call.i, i32 0, i32 3
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %ref.i.i.i, i32 noundef 4) #16
  %36 = ptrtoint ptr %ref.i.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %ref.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %37)
  %cmp.i.i10.i = icmp ult i32 %37, 3
  br i1 %cmp.i.i10.i, label %land.lhs.true.i.i.i, label %nfsd4_encode_path.exit.i.if.end.i.i.i_crit_edge

nfsd4_encode_path.exit.i.if.end.i.i.i_crit_edge:  ; preds = %nfsd4_encode_path.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i

land.lhs.true.i.i.i:                              ; preds = %nfsd4_encode_path.exit.i
  %expiry_time.i.i.i = getelementptr inbounds %struct.cache_head, ptr %call.i, i32 0, i32 1
  %38 = ptrtoint ptr %expiry_time.i.i.i to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %expiry_time.i.i.i, align 8
  %nextcheck.i.i.i = getelementptr inbounds %struct.cache_detail, ptr %35, i32 0, i32 18
  %40 = ptrtoint ptr %nextcheck.i.i.i to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %nextcheck.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %39, i64 %41)
  %cmp1.i.i.i = icmp slt i64 %39, %41
  br i1 %cmp1.i.i.i, label %if.then.i.i.i, label %land.lhs.true.i.i.i.if.end.i.i.i_crit_edge

land.lhs.true.i.i.i.if.end.i.i.i_crit_edge:       ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %42 = ptrtoint ptr %nextcheck.i.i.i to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 %39, ptr %nextcheck.i.i.i, align 8
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i.i.i, %land.lhs.true.i.i.i.if.end.i.i.i_crit_edge, %nfsd4_encode_path.exit.i.if.end.i.i.i_crit_edge
  %cache_put.i.i.i = getelementptr inbounds %struct.cache_detail, ptr %35, i32 0, i32 5
  %43 = ptrtoint ptr %cache_put.i.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %cache_put.i.i.i, align 4
  %call.i.i.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %ref.i.i.i, i32 noundef 4) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !118
  call void @llvm.prefetch.p0(ptr %ref.i.i.i, i32 1, i32 3, i32 1) #16
  %45 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %ref.i.i.i, ptr %ref.i.i.i, i32 1, ptr elementtype(i32) %ref.i.i.i) #16, !srcloc !119
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %45, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i.i.i.i, label %if.end5.i.i.i.i.i.i.i

if.end5.i.i.i.i.i.i.i:                            ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i.i.i, label %if.end5.i.i.i.i.i.i.i.nfsd4_encode_fsloc_fsroot.exit_crit_edge, label %if.then10.i.i.i.i.i.i.i, !prof !104

if.end5.i.i.i.i.i.i.i.nfsd4_encode_fsloc_fsroot.exit_crit_edge: ; preds = %if.end5.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_encode_fsloc_fsroot.exit

if.then10.i.i.i.i.i.i.i:                          ; preds = %if.end5.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @refcount_warn_saturate(ptr noundef %ref.i.i.i, i32 noundef 3) #16
  br label %nfsd4_encode_fsloc_fsroot.exit

if.then.i.i.i.i:                                  ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !120
  call void %44(ptr noundef %ref.i.i.i) #16
  br label %nfsd4_encode_fsloc_fsroot.exit

nfsd4_encode_fsloc_fsroot.exit:                   ; preds = %if.then.i.i.i.i, %if.then10.i.i.i.i.i.i.i, %if.end5.i.i.i.i.i.i.i.nfsd4_encode_fsloc_fsroot.exit_crit_edge, %if.then.i
  %retval.0.i = phi i32 [ %call3.i, %if.then.i ], [ %err.0.i.i, %if.end5.i.i.i.i.i.i.i.nfsd4_encode_fsloc_fsroot.exit_crit_edge ], [ %err.0.i.i, %if.then10.i.i.i.i.i.i.i ], [ %err.0.i.i, %if.then.i.i.i.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool.not = icmp eq i32 %retval.0.i, 0
  br i1 %tobool.not, label %if.end, label %nfsd4_encode_fsloc_fsroot.exit.cleanup_crit_edge

nfsd4_encode_fsloc_fsroot.exit.cleanup_crit_edge: ; preds = %nfsd4_encode_fsloc_fsroot.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %nfsd4_encode_fsloc_fsroot.exit
  %call1 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %46 = ptrtoint ptr %ex_fslocs to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %ex_fslocs, align 4
  %48 = ptrtoint ptr %call1 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %call1, align 4
  %locations = getelementptr inbounds %struct.svc_export, ptr %exp, i32 0, i32 8, i32 1
  %49 = load i32, ptr %ex_fslocs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %cmp39.not = icmp eq i32 %49, 0
  br i1 %cmp39.not, label %if.end4.cleanup_crit_edge, label %if.end4.for.body_crit_edge

if.end4.for.body_crit_edge:                       ; preds = %if.end4
  br label %for.body

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond:                                         ; preds = %nfsd4_encode_fs_location4.exit
  %inc = add nuw i32 %i.040, 1
  %50 = ptrtoint ptr %ex_fslocs to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %ex_fslocs, align 4
  %cmp = icmp ult i32 %inc, %51
  br i1 %cmp, label %for.cond.for.body_crit_edge, label %for.cond.cleanup_crit_edge

for.cond.cleanup_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %if.end4.for.body_crit_edge
  %i.040 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %if.end4.for.body_crit_edge ]
  %52 = ptrtoint ptr %locations to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %locations, align 4
  %arrayidx = getelementptr %struct.nfsd4_fs_location, ptr %53, i32 %i.040
  %54 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %arrayidx, align 4
  %call.i24 = call fastcc i32 @nfsd4_encode_components_esc(ptr noundef %xdr, i8 noundef zeroext 58, ptr noundef %55, i8 noundef zeroext 91, i8 noundef zeroext 93) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i24)
  %tobool.not.i = icmp eq i32 %call.i24, 0
  br i1 %tobool.not.i, label %nfsd4_encode_fs_location4.exit, label %for.body.cleanup_crit_edge

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

nfsd4_encode_fs_location4.exit:                   ; preds = %for.body
  %path.i = getelementptr %struct.nfsd4_fs_location, ptr %53, i32 %i.040, i32 1
  %56 = ptrtoint ptr %path.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %path.i, align 4
  %call.i.i25 = call fastcc i32 @nfsd4_encode_components_esc(ptr noundef %xdr, i8 noundef zeroext 47, ptr noundef %57, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i25)
  %tobool7.not = icmp eq i32 %call.i.i25, 0
  br i1 %tobool7.not, label %for.cond, label %nfsd4_encode_fs_location4.exit.cleanup_crit_edge

nfsd4_encode_fs_location4.exit.cleanup_crit_edge: ; preds = %nfsd4_encode_fs_location4.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %nfsd4_encode_fs_location4.exit.cleanup_crit_edge, %for.body.cleanup_crit_edge, %for.cond.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %nfsd4_encode_fsloc_fsroot.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i, %nfsd4_encode_fsloc_fsroot.exit.cleanup_crit_edge ], [ 10018, %if.end.cleanup_crit_edge ], [ 0, %if.end4.cleanup_crit_edge ], [ %call.i.i25, %nfsd4_encode_fs_location4.exit.cleanup_crit_edge ], [ 0, %for.cond.cleanup_crit_edge ], [ %call.i24, %for.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @svc_max_payload(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfsd4_encode_user(ptr noundef, ptr noundef, [1 x i32]) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfsd4_encode_group(ptr noundef, ptr noundef, [1 x i32]) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @encode_time_delta(ptr nocapture noundef writeonly %p, ptr nocapture noundef readonly %inode) unnamed_addr #0 align 64 {
entry:
  %tmp1 = alloca %struct.timespec64, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %i_sb = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 8
  %0 = ptrtoint ptr %i_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %i_sb, align 4
  %s_time_gran = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 34
  %2 = ptrtoint ptr %s_time_gran to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %s_time_gran, align 4
  %4 = tail call i32 @llvm.umax.i32(i32 %3, i32 10000000)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %tmp1) #16
  %conv = zext i32 %4 to i64
  call void @ns_to_timespec64(ptr nonnull sret(%struct.timespec64) align 8 %tmp1, i64 noundef %conv) #16
  %5 = ptrtoint ptr %tmp1 to i32
  call void @__asan_load8_noabort(i32 %5)
  %ts.sroa.0.0.copyload4 = load i64, ptr %tmp1, align 8
  %ts.sroa.5.0.tmp1.sroa_idx = getelementptr inbounds i8, ptr %tmp1, i32 8
  %6 = ptrtoint ptr %ts.sroa.5.0.tmp1.sroa_idx to i32
  call void @__asan_load4_noabort(i32 %6)
  %ts.sroa.5.0.copyload5 = load i32, ptr %ts.sroa.5.0.tmp1.sroa_idx, align 8
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %tmp1) #16
  %7 = ptrtoint ptr %p to i32
  call void @__asan_storeN_noabort(i32 %7, i32 8)
  store i64 %ts.sroa.0.0.copyload4, ptr %p, align 1
  %add.ptr.i = getelementptr i32, ptr %p, i32 2
  %8 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %ts.sroa.5.0.copyload5, ptr %add.ptr.i, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @get_parent_attributes(ptr nocapture noundef readonly %exp, ptr noundef %stat) unnamed_addr #0 align 64 {
entry:
  %path = alloca %struct.path, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %path) #16
  %0 = getelementptr inbounds %struct.path, ptr %path, i32 0, i32 1
  %ex_path = getelementptr inbounds %struct.svc_export, ptr %exp, i32 0, i32 3
  %1 = ptrtoint ptr %ex_path to i32
  call void @__asan_load8_noabort(i32 %1)
  %2 = load i64, ptr %ex_path, align 8
  %3 = ptrtoint ptr %path to i32
  call void @__asan_store8_noabort(i32 %3)
  store i64 %2, ptr %path, align 8
  call void @path_get(ptr noundef nonnull %path) #16
  br label %while.cond

while.cond:                                       ; preds = %while.body.while.cond_crit_edge, %entry
  %call = call i32 @follow_up(ptr noundef nonnull %path) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %while.cond.while.end_crit_edge, label %while.body

while.cond.while.end_crit_edge:                   ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.body:                                       ; preds = %while.cond
  %4 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %0, align 4
  %6 = ptrtoint ptr %path to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %path, align 8
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %cmp.not = icmp eq ptr %5, %9
  br i1 %cmp.not, label %while.body.while.cond_crit_edge, label %while.body.while.end_crit_edge

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.body.while.cond_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.cond

while.end:                                        ; preds = %while.body.while.end_crit_edge, %while.cond.while.end_crit_edge
  %call1 = call i32 @vfs_getattr(ptr noundef nonnull %path, ptr noundef %stat, i32 noundef 2047, i32 noundef 0) #16
  call void @path_put(ptr noundef nonnull %path) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %path) #16
  ret i32 %call1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_encode_layout_types(ptr noundef %xdr, i32 noundef %layout_types) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %call.i.i = tail call i32 @__sw_hweight32(i32 noundef %layout_types) #16
  %mul = shl i32 %call.i.i, 2
  %add = add i32 %mul, 4
  %call1 = tail call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef %add) #16
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %incdec.ptr = getelementptr i32, ptr %call1, i32 1
  %0 = ptrtoint ptr %call1 to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %call.i.i, ptr %call1, align 4
  %and = and i32 %layout_types, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %if.end.for.inc_crit_edge, label %if.then3

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr4 = getelementptr i32, ptr %call1, i32 2
  %1 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 1, ptr %incdec.ptr, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then3, %if.end.for.inc_crit_edge
  %p.1 = phi ptr [ %incdec.ptr4, %if.then3 ], [ %incdec.ptr, %if.end.for.inc_crit_edge ]
  %and.1 = and i32 %layout_types, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.1)
  %tobool2.not.1 = icmp eq i32 %and.1, 0
  br i1 %tobool2.not.1, label %for.inc.for.inc.1_crit_edge, label %if.then3.1

for.inc.for.inc.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.1

if.then3.1:                                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr4.1 = getelementptr i32, ptr %p.1, i32 1
  %2 = ptrtoint ptr %p.1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 2, ptr %p.1, align 4
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then3.1, %for.inc.for.inc.1_crit_edge
  %p.1.1 = phi ptr [ %incdec.ptr4.1, %if.then3.1 ], [ %p.1, %for.inc.for.inc.1_crit_edge ]
  %and.2 = and i32 %layout_types, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.2)
  %tobool2.not.2 = icmp eq i32 %and.2, 0
  br i1 %tobool2.not.2, label %for.inc.1.for.inc.2_crit_edge, label %if.then3.2

for.inc.1.for.inc.2_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.2

if.then3.2:                                       ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr4.2 = getelementptr i32, ptr %p.1.1, i32 1
  %3 = ptrtoint ptr %p.1.1 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 3, ptr %p.1.1, align 4
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then3.2, %for.inc.1.for.inc.2_crit_edge
  %p.1.2 = phi ptr [ %incdec.ptr4.2, %if.then3.2 ], [ %p.1.1, %for.inc.1.for.inc.2_crit_edge ]
  %and.3 = and i32 %layout_types, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.3)
  %tobool2.not.3 = icmp eq i32 %and.3, 0
  br i1 %tobool2.not.3, label %for.inc.2.for.inc.3_crit_edge, label %if.then3.3

for.inc.2.for.inc.3_crit_edge:                    ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc.3

if.then3.3:                                       ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr4.3 = getelementptr i32, ptr %p.1.2, i32 1
  %4 = ptrtoint ptr %p.1.2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 4, ptr %p.1.2, align 4
  br label %for.inc.3

for.inc.3:                                        ; preds = %if.then3.3, %for.inc.2.for.inc.3_crit_edge
  %p.1.3 = phi ptr [ %incdec.ptr4.3, %if.then3.3 ], [ %p.1.2, %for.inc.2.for.inc.3_crit_edge ]
  %and.4 = and i32 %layout_types, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.4)
  %tobool2.not.4 = icmp eq i32 %and.4, 0
  br i1 %tobool2.not.4, label %for.inc.3.cleanup_crit_edge, label %if.then3.4

for.inc.3.cleanup_crit_edge:                      ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then3.4:                                       ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #18
  %5 = ptrtoint ptr %p.1.3 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 5, ptr %p.1.3, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then3.4, %for.inc.3.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10018, %entry.cleanup_crit_edge ], [ 0, %if.then3.4 ], [ 0, %for.inc.3.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_encode_security_label(ptr noundef %xdr, ptr noundef %context, i32 noundef %len) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %add2 = add i32 %len, 12
  %call = tail call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef %add2) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr = getelementptr i32, ptr %call, i32 1
  %0 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %call, align 4
  %incdec.ptr3 = getelementptr i32, ptr %call, i32 2
  %1 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %incdec.ptr, align 4
  %call4 = tail call ptr @xdr_encode_opaque(ptr noundef %incdec.ptr3, ptr noundef %context, i32 noundef %len) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ 10018, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xattr_supported_namespace(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @security_release_secctx(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @fh_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfserrno(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid
declare dso_local void @getboottime64(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @generic_atomic64_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @generic_atomic64_cmpxchg(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfs4_acl_write_who(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @rqst_find_fsidzero_export(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @path_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @follow_up(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(1)
declare dso_local noalias ptr @krealloc(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #9

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @dget_parent(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dput(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @path_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #10

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_encode_components_esc(ptr noundef %xdr, i8 noundef zeroext %sep, ptr noundef %components, i8 noundef zeroext %esc_enter, i8 noundef zeroext %esc_exit) unnamed_addr #0 align 64 {
entry:
  %pathlen = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pathlen) #16
  %0 = ptrtoint ptr %pathlen to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %pathlen, align 4, !annotation !103
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfsd_debug to i32))
  %1 = load i32, ptr @nfsd_debug, align 4
  %and = and i32 %1, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.do.end3_crit_edge, label %do.end

entry.do.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end3

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.15, ptr noundef %components) #21
  br label %do.end3

do.end3:                                          ; preds = %do.end, %entry.do.end3_crit_edge
  %buf = getelementptr inbounds %struct.xdr_stream, ptr %xdr, i32 0, i32 1
  %2 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %buf, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len, align 4
  %call4 = tail call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool5.not = icmp eq ptr %call4, null
  br i1 %tobool5.not, label %do.end3.cleanup60_crit_edge, label %while.cond.preheader

do.end3.cleanup60_crit_edge:                      ; preds = %do.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup60

while.cond.preheader:                             ; preds = %do.end3
  %6 = ptrtoint ptr %components to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %components, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool8.not116 = icmp eq i8 %7, 0
  br i1 %tobool8.not116, label %while.cond.preheader.while.end_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.while.end_crit_edge:         ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.body:                                       ; preds = %cleanup.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %8 = phi i8 [ %17, %cleanup.while.body_crit_edge ], [ %7, %while.cond.preheader.while.body_crit_edge ]
  %next.0122 = phi ptr [ %next.1103, %cleanup.while.body_crit_edge ], [ inttoptr (i32 -1 to ptr), %while.cond.preheader.while.body_crit_edge ]
  %str.0118 = phi ptr [ %spec.select, %cleanup.while.body_crit_edge ], [ %components, %while.cond.preheader.while.body_crit_edge ]
  %count.0117 = phi i32 [ %count.1, %cleanup.while.body_crit_edge ], [ 0, %while.cond.preheader.while.body_crit_edge ]
  %9 = ptrtoint ptr %str.0118 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %str.0118, align 1
  call void @__sanitizer_cov_trace_cmp1(i8 %10, i8 %esc_enter)
  %cmp = icmp eq i8 %10, %esc_enter
  br i1 %cmp, label %for.cond.preheader, label %while.body.for.cond32.preheader_crit_edge

while.body.for.cond32.preheader_crit_edge:        ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond32.preheader

for.cond.preheader:                               ; preds = %while.body
  call void @__sanitizer_cov_trace_cmp1(i8 %8, i8 %esc_exit)
  %cmp16.not112 = icmp eq i8 %8, %esc_exit
  br i1 %cmp16.not112, label %for.end.thread, label %for.cond.preheader.for.inc_crit_edge

for.cond.preheader.for.inc_crit_edge:             ; preds = %for.cond.preheader
  br label %for.inc

for.end.thread:                                   ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  %add.ptr127 = getelementptr i8, ptr %str.0118, i32 1
  br label %land.lhs.true

for.inc:                                          ; preds = %for.inc.for.inc_crit_edge, %for.cond.preheader.for.inc_crit_edge
  %end.1114 = phi ptr [ %incdec.ptr18, %for.inc.for.inc_crit_edge ], [ %str.0118, %for.cond.preheader.for.inc_crit_edge ]
  %incdec.ptr18 = getelementptr i8, ptr %end.1114, i32 1
  %11 = ptrtoint ptr %incdec.ptr18 to i32
  call void @__asan_load1_noabort(i32 %11)
  %.pr = load i8, ptr %incdec.ptr18, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %.pr)
  %tobool13.not = icmp eq i8 %.pr, 0
  call void @__sanitizer_cov_trace_cmp1(i8 %.pr, i8 %esc_exit)
  %cmp16.not = icmp eq i8 %.pr, %esc_exit
  %or.cond = or i1 %tobool13.not, %cmp16.not
  br i1 %or.cond, label %for.end, label %for.inc.for.inc_crit_edge

for.inc.for.inc_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

for.end:                                          ; preds = %for.inc
  %add.ptr = getelementptr i8, ptr %end.1114, i32 2
  br i1 %tobool13.not, label %for.end.for.cond32.preheader_crit_edge, label %for.end.land.lhs.true_crit_edge

for.end.land.lhs.true_crit_edge:                  ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true

for.end.for.cond32.preheader_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond32.preheader

land.lhs.true:                                    ; preds = %for.end.land.lhs.true_crit_edge, %for.end.thread
  %add.ptr129 = phi ptr [ %add.ptr127, %for.end.thread ], [ %add.ptr, %for.end.land.lhs.true_crit_edge ]
  %end.1.lcssa128 = phi ptr [ %str.0118, %for.end.thread ], [ %incdec.ptr18, %for.end.land.lhs.true_crit_edge ]
  %12 = ptrtoint ptr %add.ptr129 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %add.ptr129, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool21.not = icmp eq i8 %13, 0
  call void @__sanitizer_cov_trace_cmp1(i8 %13, i8 %sep)
  %cmp24 = icmp eq i8 %13, %sep
  %or.cond96 = or i1 %tobool21.not, %cmp24
  %incdec.ptr27 = getelementptr i8, ptr %str.0118, i32 1
  br i1 %or.cond96, label %land.lhs.true.if.end45_crit_edge, label %land.lhs.true.for.cond32.preheader_crit_edge

land.lhs.true.for.cond32.preheader_crit_edge:     ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond32.preheader

land.lhs.true.if.end45_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end45

for.cond32.preheader:                             ; preds = %land.lhs.true.for.cond32.preheader_crit_edge, %for.end.for.cond32.preheader_crit_edge, %while.body.for.cond32.preheader_crit_edge
  %next.1102.ph = phi ptr [ %add.ptr129, %land.lhs.true.for.cond32.preheader_crit_edge ], [ %add.ptr, %for.end.for.cond32.preheader_crit_edge ], [ %next.0122, %while.body.for.cond32.preheader_crit_edge ]
  %end.3.ph = phi ptr [ %end.1.lcssa128, %land.lhs.true.for.cond32.preheader_crit_edge ], [ %incdec.ptr18, %for.end.for.cond32.preheader_crit_edge ], [ %str.0118, %while.body.for.cond32.preheader_crit_edge ]
  br label %for.cond32

for.cond32:                                       ; preds = %for.cond32.for.cond32_crit_edge, %for.cond32.preheader
  %end.3 = phi ptr [ %incdec.ptr43, %for.cond32.for.cond32_crit_edge ], [ %end.3.ph, %for.cond32.preheader ]
  %14 = ptrtoint ptr %end.3 to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %end.3, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool34.not = icmp eq i8 %15, 0
  call void @__sanitizer_cov_trace_cmp1(i8 %15, i8 %sep)
  %cmp38.not = icmp eq i8 %15, %sep
  %or.cond97 = or i1 %tobool34.not, %cmp38.not
  %incdec.ptr43 = getelementptr i8, ptr %end.3, i32 1
  br i1 %or.cond97, label %for.cond32.if.end45_crit_edge, label %for.cond32.for.cond32_crit_edge

for.cond32.for.cond32_crit_edge:                  ; preds = %for.cond32
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond32

for.cond32.if.end45_crit_edge:                    ; preds = %for.cond32
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end45

if.end45:                                         ; preds = %for.cond32.if.end45_crit_edge, %land.lhs.true.if.end45_crit_edge
  %found_esc.0.off0105 = phi i1 [ true, %land.lhs.true.if.end45_crit_edge ], [ false, %for.cond32.if.end45_crit_edge ]
  %next.1103 = phi ptr [ %add.ptr129, %land.lhs.true.if.end45_crit_edge ], [ %next.1102.ph, %for.cond32.if.end45_crit_edge ]
  %str.1101 = phi ptr [ %incdec.ptr27, %land.lhs.true.if.end45_crit_edge ], [ %str.0118, %for.cond32.if.end45_crit_edge ]
  %end.4 = phi ptr [ %end.1.lcssa128, %land.lhs.true.if.end45_crit_edge ], [ %end.3, %for.cond32.if.end45_crit_edge ]
  %sub.ptr.lhs.cast = ptrtoint ptr %end.4 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %str.1101 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %tobool46.not = icmp eq ptr %end.4, %str.1101
  br i1 %tobool46.not, label %if.else, label %if.then47

if.then47:                                        ; preds = %if.end45
  %add = add i32 %sub.ptr.sub, 4
  %call48 = tail call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef %add) #16
  %tobool49.not = icmp eq ptr %call48, null
  br i1 %tobool49.not, label %if.then47.cleanup60_crit_edge, label %if.end51

if.then47.cleanup60_crit_edge:                    ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup60

if.end51:                                         ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #18
  %call52 = tail call ptr @xdr_encode_opaque(ptr noundef nonnull %call48, ptr noundef %str.1101, i32 noundef %sub.ptr.sub) #16
  %inc = add i32 %count.0117, 1
  br label %cleanup

if.else:                                          ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr53 = getelementptr i8, ptr %str.1101, i32 1
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.end51
  %count.1 = phi i32 [ %inc, %if.end51 ], [ %count.0117, %if.else ]
  %end.5 = phi ptr [ %end.4, %if.end51 ], [ %incdec.ptr53, %if.else ]
  %spec.select = select i1 %found_esc.0.off0105, ptr %next.1103, ptr %end.5
  %16 = ptrtoint ptr %spec.select to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %spec.select, align 1
  %tobool8.not = icmp eq i8 %17, 0
  br i1 %tobool8.not, label %cleanup.while.end_crit_edge, label %cleanup.while.body_crit_edge

cleanup.while.body_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

cleanup.while.end_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.end:                                        ; preds = %cleanup.while.end_crit_edge, %while.cond.preheader.while.end_crit_edge
  %count.0.lcssa = phi i32 [ 0, %while.cond.preheader.while.end_crit_edge ], [ %count.1, %cleanup.while.end_crit_edge ]
  %18 = ptrtoint ptr %pathlen to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %count.0.lcssa, ptr %pathlen, align 4
  %19 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %buf, align 4
  %call59 = call i32 @write_bytes_to_xdr_buf(ptr noundef %20, i32 noundef %5, ptr noundef nonnull %pathlen, i32 noundef 4) #16
  br label %cleanup60

cleanup60:                                        ; preds = %while.end, %if.then47.cleanup60_crit_edge, %do.end3.cleanup60_crit_edge
  %retval.2 = phi i32 [ 0, %while.end ], [ 10018, %do.end3.cleanup60_crit_edge ], [ 10018, %if.then47.cleanup60_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pathlen) #16
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @ns_to_timespec64(ptr sret(%struct.timespec64) align 8, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__sw_hweight32(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_access(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef readonly %access) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 8) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %ac_supported = getelementptr inbounds %struct.nfsd4_access, ptr %access, i32 0, i32 1
  %2 = ptrtoint ptr %ac_supported to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ac_supported, align 4
  %incdec.ptr = getelementptr i32, ptr %call, i32 1
  %4 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call, align 4
  %ac_resp_access = getelementptr inbounds %struct.nfsd4_access, ptr %access, i32 0, i32 2
  %5 = ptrtoint ptr %ac_resp_access to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %ac_resp_access, align 4
  %7 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %incdec.ptr, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ 10018, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_close(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr noundef %close) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call.i = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.nfsd4_encode_stateid.exit_crit_edge, label %if.end.i

entry.nfsd4_encode_stateid.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_encode_stateid.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %cl_stateid = getelementptr inbounds %struct.nfsd4_close, ptr %close, i32 0, i32 1
  %2 = ptrtoint ptr %cl_stateid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cl_stateid, align 4
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %4 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call.i, align 4
  %si_opaque.i = getelementptr inbounds %struct.nfsd4_close, ptr %close, i32 0, i32 1, i32 1
  %call1.i = tail call ptr @xdr_encode_opaque_fixed(ptr noundef %incdec.ptr.i, ptr noundef %si_opaque.i, i32 noundef 12) #16
  br label %nfsd4_encode_stateid.exit

nfsd4_encode_stateid.exit:                        ; preds = %if.end.i, %entry.nfsd4_encode_stateid.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end.i ], [ 10018, %entry.nfsd4_encode_stateid.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_commit(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr noundef %commit) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 8) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %co_verf = getelementptr inbounds %struct.nfsd4_commit, ptr %commit, i32 0, i32 2
  %call2 = tail call ptr @xdr_encode_opaque_fixed(ptr noundef nonnull %call, ptr noundef %co_verf, i32 noundef 8) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ 10018, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_create(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef readonly %create) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 20) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %cr_cinfo = getelementptr inbounds %struct.nfsd4_create, ptr %create, i32 0, i32 7
  %2 = ptrtoint ptr %cr_cinfo to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cr_cinfo, align 8
  %incdec.ptr.i = getelementptr i32, ptr %call, i32 1
  %4 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call, align 4
  %before_change.i = getelementptr inbounds %struct.nfsd4_create, ptr %create, i32 0, i32 7, i32 1
  %5 = ptrtoint ptr %before_change.i to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %before_change.i, align 8
  %7 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_storeN_noabort(i32 %7, i32 8)
  store i64 %6, ptr %incdec.ptr.i, align 1
  %add.ptr.i.i = getelementptr i32, ptr %call, i32 3
  %after_change.i = getelementptr inbounds %struct.nfsd4_create, ptr %create, i32 0, i32 7, i32 2
  %8 = ptrtoint ptr %after_change.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %after_change.i, align 8
  %10 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_storeN_noabort(i32 %10, i32 8)
  store i64 %9, ptr %add.ptr.i.i, align 1
  %cr_bmval = getelementptr inbounds %struct.nfsd4_create, ptr %create, i32 0, i32 4
  %11 = ptrtoint ptr %cr_bmval to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cr_bmval, align 4
  %arrayidx4 = getelementptr %struct.nfsd4_create, ptr %create, i32 0, i32 4, i32 1
  %13 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx4, align 4
  %arrayidx6 = getelementptr %struct.nfsd4_create, ptr %create, i32 0, i32 4, i32 2
  %15 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx6, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not.i = icmp eq i32 %16, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  %call.i = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 16) #16
  %tobool1.not.i = icmp eq ptr %call.i, null
  br i1 %tobool1.not.i, label %if.then.i.cleanup_crit_edge, label %if.end.i

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr.i14 = getelementptr i32, ptr %call.i, i32 1
  %17 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 3, ptr %call.i, align 4
  %incdec.ptr3.i = getelementptr i32, ptr %call.i, i32 2
  %18 = ptrtoint ptr %incdec.ptr.i14 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %12, ptr %incdec.ptr.i14, align 4
  %incdec.ptr4.i = getelementptr i32, ptr %call.i, i32 3
  %19 = ptrtoint ptr %incdec.ptr3.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %14, ptr %incdec.ptr3.i, align 4
  %20 = ptrtoint ptr %incdec.ptr4.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %16, ptr %incdec.ptr4.i, align 4
  br label %cleanup

if.else.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool6.not.i = icmp eq i32 %14, 0
  br i1 %tobool6.not.i, label %if.else15.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.else.i
  %call8.i = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 12) #16
  %tobool9.not.i = icmp eq ptr %call8.i, null
  br i1 %tobool9.not.i, label %if.then7.i.cleanup_crit_edge, label %if.end11.i

if.then7.i.cleanup_crit_edge:                     ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end11.i:                                       ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr12.i = getelementptr i32, ptr %call8.i, i32 1
  %21 = ptrtoint ptr %call8.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 2, ptr %call8.i, align 4
  %incdec.ptr13.i = getelementptr i32, ptr %call8.i, i32 2
  %22 = ptrtoint ptr %incdec.ptr12.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %12, ptr %incdec.ptr12.i, align 4
  %23 = ptrtoint ptr %incdec.ptr13.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %14, ptr %incdec.ptr13.i, align 4
  br label %cleanup

if.else15.i:                                      ; preds = %if.else.i
  %call16.i = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 8) #16
  %tobool17.not.i = icmp eq ptr %call16.i, null
  br i1 %tobool17.not.i, label %if.else15.i.cleanup_crit_edge, label %if.end19.i

if.else15.i.cleanup_crit_edge:                    ; preds = %if.else15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end19.i:                                       ; preds = %if.else15.i
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr20.i = getelementptr i32, ptr %call16.i, i32 1
  %24 = ptrtoint ptr %call16.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 1, ptr %call16.i, align 4
  %25 = ptrtoint ptr %incdec.ptr20.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %12, ptr %incdec.ptr20.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end19.i, %if.else15.i.cleanup_crit_edge, %if.end11.i, %if.then7.i.cleanup_crit_edge, %if.end.i, %if.then.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10018, %entry.cleanup_crit_edge ], [ 0, %if.end11.i ], [ 0, %if.end19.i ], [ 0, %if.end.i ], [ 10018, %if.else15.i.cleanup_crit_edge ], [ 10018, %if.then7.i.cleanup_crit_edge ], [ 10018, %if.then.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @nfsd4_encode_noop(ptr nocapture noundef readnone %resp, i32 noundef returned %nfserr, ptr nocapture noundef readnone %p) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 %nfserr
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_getattr(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef readonly %getattr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ga_fhp = getelementptr inbounds %struct.nfsd4_getattr, ptr %getattr, i32 0, i32 1
  %0 = ptrtoint ptr %ga_fhp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ga_fhp, align 4
  %2 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %resp, align 8
  %fh_export = getelementptr inbounds %struct.svc_fh, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %fh_export to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %fh_export, align 4
  %fh_dentry = getelementptr inbounds %struct.svc_fh, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %fh_dentry to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %fh_dentry, align 8
  %rqstp = getelementptr inbounds %struct.nfsd4_compoundres, ptr %resp, i32 0, i32 1
  %8 = ptrtoint ptr %rqstp to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %rqstp, align 4
  %call = tail call fastcc i32 @nfsd4_encode_fattr(ptr noundef %3, ptr noundef %1, ptr noundef %5, ptr noundef %7, ptr noundef %getattr, ptr noundef %9, i32 noundef 0)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_getfh(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef readonly %fhpp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %2 = ptrtoint ptr %fhpp to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %fhpp, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %3, align 8
  %add = add i32 %5, 4
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef %add) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %6 = getelementptr inbounds %struct.knfsd_fh, ptr %3, i32 0, i32 1
  %call3 = tail call ptr @xdr_encode_opaque(ptr noundef nonnull %call, ptr noundef %6, i32 noundef %5) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ 10018, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_link(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef readonly %link) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 20) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %li_cinfo = getelementptr inbounds %struct.nfsd4_link, ptr %link, i32 0, i32 2
  %2 = ptrtoint ptr %li_cinfo to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %li_cinfo, align 8
  %incdec.ptr.i = getelementptr i32, ptr %call, i32 1
  %4 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call, align 4
  %before_change.i = getelementptr inbounds %struct.nfsd4_link, ptr %link, i32 0, i32 2, i32 1
  %5 = ptrtoint ptr %before_change.i to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %before_change.i, align 8
  %7 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_storeN_noabort(i32 %7, i32 8)
  store i64 %6, ptr %incdec.ptr.i, align 1
  %add.ptr.i.i = getelementptr i32, ptr %call, i32 3
  %after_change.i = getelementptr inbounds %struct.nfsd4_link, ptr %link, i32 0, i32 2, i32 2
  %8 = ptrtoint ptr %after_change.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %after_change.i, align 8
  %10 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_storeN_noabort(i32 %10, i32 8)
  store i64 %9, ptr %add.ptr.i.i, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ 10018, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_lock(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr noundef %lock) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %2 = zext i32 %nfserr to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.35)
  switch i32 %nfserr, label %entry.if.end5_crit_edge [
    i32 0, label %if.then
    i32 10010, label %if.then2
  ]

entry.if.end5_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.then:                                          ; preds = %entry
  %call.i = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.then.if.end5_crit_edge, label %if.end.i

if.then.if.end5_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.end.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %u = getelementptr inbounds %struct.nfsd4_lock, ptr %lock, i32 0, i32 6
  %3 = ptrtoint ptr %u to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %u, align 4
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %5 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %call.i, align 4
  %si_opaque.i = getelementptr inbounds %struct.nfsd4_lock, ptr %lock, i32 0, i32 6, i32 0, i32 0, i32 1
  %call1.i = tail call ptr @xdr_encode_opaque_fixed(ptr noundef %incdec.ptr.i, ptr noundef %si_opaque.i, i32 noundef 12) #16
  br label %if.end5

if.then2:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %u3 = getelementptr inbounds %struct.nfsd4_lock, ptr %lock, i32 0, i32 6
  %call4 = tail call fastcc i32 @nfsd4_encode_lock_denied(ptr noundef %1, ptr noundef %u3)
  br label %if.end5

if.end5:                                          ; preds = %if.then2, %if.end.i, %if.then.if.end5_crit_edge, %entry.if.end5_crit_edge
  %nfserr.addr.0 = phi i32 [ %call4, %if.then2 ], [ %nfserr, %entry.if.end5_crit_edge ], [ 0, %if.end.i ], [ 10018, %if.then.if.end5_crit_edge ]
  ret i32 %nfserr.addr.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_lockt(ptr nocapture noundef readonly %resp, i32 noundef returned %nfserr, ptr noundef %lockt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 10010, i32 %nfserr)
  %cmp = icmp eq i32 %nfserr, 10010
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %lt_denied = getelementptr inbounds %struct.nfsd4_lockt, ptr %lockt, i32 0, i32 5
  %call = tail call fastcc i32 @nfsd4_encode_lock_denied(ptr noundef %1, ptr noundef %lt_denied)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret i32 %nfserr
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_locku(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr noundef %locku) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call.i = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.nfsd4_encode_stateid.exit_crit_edge, label %if.end.i

entry.nfsd4_encode_stateid.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_encode_stateid.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %lu_stateid = getelementptr inbounds %struct.nfsd4_locku, ptr %locku, i32 0, i32 2
  %2 = ptrtoint ptr %lu_stateid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %lu_stateid, align 4
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %4 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call.i, align 4
  %si_opaque.i = getelementptr inbounds %struct.nfsd4_locku, ptr %locku, i32 0, i32 2, i32 1
  %call1.i = tail call ptr @xdr_encode_opaque_fixed(ptr noundef %incdec.ptr.i, ptr noundef %si_opaque.i, i32 noundef 12) #16
  br label %nfsd4_encode_stateid.exit

nfsd4_encode_stateid.exit:                        ; preds = %if.end.i, %entry.nfsd4_encode_stateid.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end.i ], [ 10018, %entry.nfsd4_encode_stateid.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_open(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr noundef %open) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call.i = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %op_stateid = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 19
  %2 = ptrtoint ptr %op_stateid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %op_stateid, align 4
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %4 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call.i, align 4
  %si_opaque.i = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 19, i32 1
  %call1.i = tail call ptr @xdr_encode_opaque_fixed(ptr noundef %incdec.ptr.i, ptr noundef %si_opaque.i, i32 noundef 12) #16
  %call2 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 24) #16
  %tobool3.not = icmp eq ptr %call2, null
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %op_cinfo = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 22
  %5 = ptrtoint ptr %op_cinfo to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %op_cinfo, align 8
  %incdec.ptr.i126 = getelementptr i32, ptr %call2, i32 1
  %7 = ptrtoint ptr %call2 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %call2, align 4
  %before_change.i = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 22, i32 1
  %8 = ptrtoint ptr %before_change.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %before_change.i, align 8
  %10 = ptrtoint ptr %incdec.ptr.i126 to i32
  call void @__asan_storeN_noabort(i32 %10, i32 8)
  store i64 %9, ptr %incdec.ptr.i126, align 1
  %add.ptr.i.i = getelementptr i32, ptr %call2, i32 3
  %after_change.i = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 22, i32 2
  %11 = ptrtoint ptr %after_change.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %after_change.i, align 8
  %13 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_storeN_noabort(i32 %13, i32 8)
  store i64 %12, ptr %add.ptr.i.i, align 1
  %add.ptr.i7.i = getelementptr i32, ptr %call2, i32 5
  %op_rflags = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 23
  %14 = ptrtoint ptr %op_rflags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %op_rflags, align 8
  %16 = ptrtoint ptr %add.ptr.i7.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %add.ptr.i7.i, align 4
  %op_bmval = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 9
  %17 = ptrtoint ptr %op_bmval to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %op_bmval, align 16
  %arrayidx8 = getelementptr %struct.nfsd4_open, ptr %open, i32 0, i32 9, i32 1
  %19 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx8, align 4
  %arrayidx10 = getelementptr %struct.nfsd4_open, ptr %open, i32 0, i32 9, i32 2
  %21 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx10, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.not.i127 = icmp eq i32 %22, 0
  br i1 %tobool.not.i127, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.end5
  %call.i128 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 16) #16
  %tobool1.not.i = icmp eq ptr %call.i128, null
  br i1 %tobool1.not.i, label %if.then.i.cleanup_crit_edge, label %if.end.i130

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i130:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr.i129 = getelementptr i32, ptr %call.i128, i32 1
  %23 = ptrtoint ptr %call.i128 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 3, ptr %call.i128, align 4
  %incdec.ptr3.i = getelementptr i32, ptr %call.i128, i32 2
  %24 = ptrtoint ptr %incdec.ptr.i129 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %18, ptr %incdec.ptr.i129, align 4
  %incdec.ptr4.i = getelementptr i32, ptr %call.i128, i32 3
  %25 = ptrtoint ptr %incdec.ptr3.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %20, ptr %incdec.ptr3.i, align 4
  %26 = ptrtoint ptr %incdec.ptr4.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %22, ptr %incdec.ptr4.i, align 4
  br label %if.end14

if.else.i:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool6.not.i = icmp eq i32 %20, 0
  br i1 %tobool6.not.i, label %if.else15.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.else.i
  %call8.i = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 12) #16
  %tobool9.not.i = icmp eq ptr %call8.i, null
  br i1 %tobool9.not.i, label %if.then7.i.cleanup_crit_edge, label %if.end11.i

if.then7.i.cleanup_crit_edge:                     ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end11.i:                                       ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr12.i = getelementptr i32, ptr %call8.i, i32 1
  %27 = ptrtoint ptr %call8.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 2, ptr %call8.i, align 4
  %incdec.ptr13.i = getelementptr i32, ptr %call8.i, i32 2
  %28 = ptrtoint ptr %incdec.ptr12.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %18, ptr %incdec.ptr12.i, align 4
  %29 = ptrtoint ptr %incdec.ptr13.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %20, ptr %incdec.ptr13.i, align 4
  br label %if.end14

if.else15.i:                                      ; preds = %if.else.i
  %call16.i = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 8) #16
  %tobool17.not.i = icmp eq ptr %call16.i, null
  br i1 %tobool17.not.i, label %if.else15.i.cleanup_crit_edge, label %if.end19.i

if.else15.i.cleanup_crit_edge:                    ; preds = %if.else15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end19.i:                                       ; preds = %if.else15.i
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr20.i = getelementptr i32, ptr %call16.i, i32 1
  %30 = ptrtoint ptr %call16.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 1, ptr %call16.i, align 4
  %31 = ptrtoint ptr %incdec.ptr20.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %18, ptr %incdec.ptr20.i, align 4
  br label %if.end14

if.end14:                                         ; preds = %if.end19.i, %if.end11.i, %if.end.i130
  %call15 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 4) #16
  %tobool16.not = icmp eq ptr %call15, null
  br i1 %tobool16.not, label %if.end14.cleanup_crit_edge, label %if.end18

if.end14.cleanup_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end18:                                         ; preds = %if.end14
  %op_delegate_type = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 3
  %32 = ptrtoint ptr %op_delegate_type to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %op_delegate_type, align 4
  %34 = ptrtoint ptr %call15 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %call15, align 4
  %35 = load i32, ptr %op_delegate_type, align 4
  %36 = zext i32 %35 to i64
  call void @__sanitizer_cov_trace_switch(i64 %36, ptr @__sancov_gen_cov_switch_values.36)
  switch i32 %35, label %do.body [
    i32 0, label %if.end18.cleanup_crit_edge
    i32 1, label %sw.bb
    i32 2, label %sw.bb34
    i32 3, label %sw.bb52
  ]

if.end18.cleanup_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb:                                            ; preds = %if.end18
  %op_delegate_stateid = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 4
  %call21 = tail call fastcc i32 @nfsd4_encode_stateid(ptr noundef %1, ptr noundef %op_delegate_stateid)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call21)
  %tobool22.not = icmp eq i32 %call21, 0
  br i1 %tobool22.not, label %if.end24, label %sw.bb.cleanup_crit_edge

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end24:                                         ; preds = %sw.bb
  %call25 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 20) #16
  %tobool26.not = icmp eq ptr %call25, null
  br i1 %tobool26.not, label %if.end24.cleanup_crit_edge, label %if.end28

if.end24.cleanup_crit_edge:                       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end28:                                         ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #18
  %op_recall = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 21
  %37 = ptrtoint ptr %op_recall to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %op_recall, align 4
  %incdec.ptr29 = getelementptr i32, ptr %call25, i32 1
  %39 = ptrtoint ptr %call25 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %call25, align 4
  %40 = call ptr @memset(ptr %incdec.ptr29, i32 0, i32 16)
  br label %cleanup

sw.bb34:                                          ; preds = %if.end18
  %op_delegate_stateid35 = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 4
  %call36 = tail call fastcc i32 @nfsd4_encode_stateid(ptr noundef %1, ptr noundef %op_delegate_stateid35)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36)
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %if.end39, label %sw.bb34.cleanup_crit_edge

sw.bb34.cleanup_crit_edge:                        ; preds = %sw.bb34
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end39:                                         ; preds = %sw.bb34
  %call40 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 32) #16
  %tobool41.not = icmp eq ptr %call40, null
  br i1 %tobool41.not, label %if.end39.cleanup_crit_edge, label %if.end43

if.end39.cleanup_crit_edge:                       ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end43:                                         ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr44 = getelementptr i32, ptr %call40, i32 1
  %41 = ptrtoint ptr %call40 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 0, ptr %call40, align 4
  %incdec.ptr45 = getelementptr i32, ptr %call40, i32 2
  %42 = ptrtoint ptr %incdec.ptr44 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 1, ptr %incdec.ptr44, align 4
  %incdec.ptr46 = getelementptr i32, ptr %call40, i32 3
  %43 = ptrtoint ptr %incdec.ptr45 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 -1, ptr %incdec.ptr45, align 4
  %incdec.ptr47 = getelementptr i32, ptr %call40, i32 4
  %44 = ptrtoint ptr %incdec.ptr46 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 -1, ptr %incdec.ptr46, align 4
  %45 = call ptr @memset(ptr %incdec.ptr47, i32 0, i32 16)
  br label %cleanup

sw.bb52:                                          ; preds = %if.end18
  %op_why_no_deleg = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 5
  %46 = ptrtoint ptr %op_why_no_deleg to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %op_why_no_deleg, align 32
  %.off = add i32 %47, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off)
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %sw.bb53, label %sw.default

sw.bb53:                                          ; preds = %sw.bb52
  %call54 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 8) #16
  %tobool55.not = icmp eq ptr %call54, null
  br i1 %tobool55.not, label %sw.bb53.cleanup_crit_edge, label %if.end57

sw.bb53.cleanup_crit_edge:                        ; preds = %sw.bb53
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end57:                                         ; preds = %sw.bb53
  call void @__sanitizer_cov_trace_pc() #18
  %48 = ptrtoint ptr %op_why_no_deleg to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %op_why_no_deleg, align 32
  %incdec.ptr59 = getelementptr i32, ptr %call54, i32 1
  %50 = ptrtoint ptr %call54 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %call54, align 4
  %51 = ptrtoint ptr %incdec.ptr59 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 0, ptr %incdec.ptr59, align 4
  br label %cleanup

sw.default:                                       ; preds = %sw.bb52
  %call61 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 4) #16
  %tobool62.not = icmp eq ptr %call61, null
  br i1 %tobool62.not, label %sw.default.cleanup_crit_edge, label %if.end64

sw.default.cleanup_crit_edge:                     ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end64:                                         ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #18
  %52 = ptrtoint ptr %op_why_no_deleg to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %op_why_no_deleg, align 32
  %54 = ptrtoint ptr %call61 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %53, ptr %call61, align 4
  br label %cleanup

do.body:                                          ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/nfsd/nfs4xdr.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3836, 0\0A.popsection", ""() #16, !srcloc !121
  unreachable

cleanup:                                          ; preds = %if.end64, %sw.default.cleanup_crit_edge, %if.end57, %sw.bb53.cleanup_crit_edge, %if.end43, %if.end39.cleanup_crit_edge, %sw.bb34.cleanup_crit_edge, %if.end28, %if.end24.cleanup_crit_edge, %sw.bb.cleanup_crit_edge, %if.end18.cleanup_crit_edge, %if.end14.cleanup_crit_edge, %if.else15.i.cleanup_crit_edge, %if.then7.i.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10018, %if.end.cleanup_crit_edge ], [ 10018, %if.end14.cleanup_crit_edge ], [ %call21, %sw.bb.cleanup_crit_edge ], [ 10018, %if.end24.cleanup_crit_edge ], [ %call36, %sw.bb34.cleanup_crit_edge ], [ 10018, %if.end39.cleanup_crit_edge ], [ 10018, %sw.bb53.cleanup_crit_edge ], [ 10018, %sw.default.cleanup_crit_edge ], [ 0, %if.end57 ], [ 0, %if.end64 ], [ 0, %if.end43 ], [ 0, %if.end28 ], [ %35, %if.end18.cleanup_crit_edge ], [ 10018, %entry.cleanup_crit_edge ], [ 10018, %if.else15.i.cleanup_crit_edge ], [ 10018, %if.then7.i.cleanup_crit_edge ], [ 10018, %if.then.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_open_confirm(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr noundef %oc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call.i = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.nfsd4_encode_stateid.exit_crit_edge, label %if.end.i

entry.nfsd4_encode_stateid.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_encode_stateid.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %oc_resp_stateid = getelementptr inbounds %struct.nfsd4_open_confirm, ptr %oc, i32 0, i32 2
  %2 = ptrtoint ptr %oc_resp_stateid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %oc_resp_stateid, align 4
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %4 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call.i, align 4
  %si_opaque.i = getelementptr inbounds %struct.nfsd4_open_confirm, ptr %oc, i32 0, i32 2, i32 1
  %call1.i = tail call ptr @xdr_encode_opaque_fixed(ptr noundef %incdec.ptr.i, ptr noundef %si_opaque.i, i32 noundef 12) #16
  br label %nfsd4_encode_stateid.exit

nfsd4_encode_stateid.exit:                        ; preds = %if.end.i, %entry.nfsd4_encode_stateid.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end.i ], [ 10018, %entry.nfsd4_encode_stateid.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_open_downgrade(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr noundef %od) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call.i = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.nfsd4_encode_stateid.exit_crit_edge, label %if.end.i

entry.nfsd4_encode_stateid.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_encode_stateid.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %2 = ptrtoint ptr %od to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %od, align 4
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %4 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call.i, align 4
  %si_opaque.i = getelementptr inbounds %struct.stateid_t, ptr %od, i32 0, i32 1
  %call1.i = tail call ptr @xdr_encode_opaque_fixed(ptr noundef %incdec.ptr.i, ptr noundef %si_opaque.i, i32 noundef 12) #16
  br label %nfsd4_encode_stateid.exit

nfsd4_encode_stateid.exit:                        ; preds = %if.end.i, %entry.nfsd4_encode_stateid.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end.i ], [ 10018, %entry.nfsd4_encode_stateid.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_read(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef %read) #0 align 64 {
entry:
  %maxcount.addr.i155 = alloca i32, align 4
  %eof.i156 = alloca i32, align 4
  %tmp.i = alloca i32, align 4
  %maxcount.addr.i = alloca i32, align 4
  %eof.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %buf = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %buf, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nfserr)
  %tobool.not = icmp eq i32 %nfserr, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %rd_nf = getelementptr inbounds %struct.nfsd4_read, ptr %read, i32 0, i32 4
  %6 = ptrtoint ptr %rd_nf to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %rd_nf, align 8
  %nf_file = getelementptr inbounds %struct.nfsd_file, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %nf_file to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %nf_file, align 4
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 8) #16
  %tobool2.not = icmp eq ptr %call, null
  br i1 %tobool2.not, label %if.then3, label %if.end43

if.then3:                                         ; preds = %if.end
  %rqstp = getelementptr inbounds %struct.nfsd4_compoundres, ptr %resp, i32 0, i32 1
  %10 = ptrtoint ptr %rqstp to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %rqstp, align 4
  %rq_flags = getelementptr inbounds %struct.svc_rqst, ptr %11, i32 0, i32 33
  %12 = ptrtoint ptr %rq_flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %rq_flags, align 4
  %14 = and i32 %13, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool5.not = icmp eq i32 %14, 0
  br i1 %tobool5.not, label %if.then3.cleanup_crit_edge, label %land.rhs

if.then3.cleanup_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

land.rhs:                                         ; preds = %if.then3
  %.b149 = load i1, ptr @nfsd4_encode_read.__already_done, align 1
  br i1 %.b149, label %land.rhs.cleanup_crit_edge, label %if.then13, !prof !104

land.rhs.cleanup_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then13:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @nfsd4_encode_read.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3979, i32 noundef 9, ptr noundef null) #16
  br label %cleanup

if.end43:                                         ; preds = %if.end
  %15 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %resp, align 8
  %buf45 = getelementptr inbounds %struct.xdr_stream, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %buf45 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %buf45, align 4
  %page_len = getelementptr inbounds %struct.xdr_buf, ptr %18, i32 0, i32 5
  %19 = ptrtoint ptr %page_len to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %page_len, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool46.not = icmp eq i32 %20, 0
  br i1 %tobool46.not, label %if.end43.if.end100_crit_edge, label %land.lhs.true

if.end43.if.end100_crit_edge:                     ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end100

land.lhs.true:                                    ; preds = %if.end43
  %rqstp47 = getelementptr inbounds %struct.nfsd4_compoundres, ptr %resp, i32 0, i32 1
  %21 = ptrtoint ptr %rqstp47 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %rqstp47, align 4
  %rq_flags48 = getelementptr inbounds %struct.svc_rqst, ptr %22, i32 0, i32 33
  %23 = ptrtoint ptr %rq_flags48 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %rq_flags48, align 4
  %25 = and i32 %24, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool50.not = icmp eq i32 %25, 0
  br i1 %tobool50.not, label %land.lhs.true.if.end100_crit_edge, label %land.end58

land.lhs.true.if.end100_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end100

land.end58:                                       ; preds = %land.lhs.true
  %.b148150 = load i1, ptr @nfsd4_encode_read.__already_done.17, align 1
  br i1 %.b148150, label %land.end58.cleanup_crit_edge, label %if.then65, !prof !104

land.end58.cleanup_crit_edge:                     ; preds = %land.end58
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then65:                                        ; preds = %land.end58
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @nfsd4_encode_read.__already_done.17, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 3984, i32 noundef 9, ptr noundef null) #16
  br label %cleanup

if.end100:                                        ; preds = %land.lhs.true.if.end100_crit_edge, %if.end43.if.end100_crit_edge
  tail call void @xdr_commit_encode(ptr noundef %1) #16
  %rd_length = getelementptr inbounds %struct.nfsd4_read, ptr %read, i32 0, i32 2
  %26 = ptrtoint ptr %rd_length to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %rd_length, align 8
  %28 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %buf, align 4
  %buflen = getelementptr inbounds %struct.xdr_buf, ptr %29, i32 0, i32 7
  %30 = ptrtoint ptr %buflen to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %buflen, align 4
  %len103 = getelementptr inbounds %struct.xdr_buf, ptr %29, i32 0, i32 8
  %32 = ptrtoint ptr %len103 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %len103, align 4
  %sub = sub i32 %31, %33
  %34 = tail call i32 @llvm.umin.i32(i32 %27, i32 %sub)
  %f_op = getelementptr inbounds %struct.file, ptr %9, i32 0, i32 3
  %35 = ptrtoint ptr %f_op to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %f_op, align 4
  %splice_read = getelementptr inbounds %struct.file_operations, ptr %36, i32 0, i32 25
  %37 = ptrtoint ptr %splice_read to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %splice_read, align 4
  %tobool105.not = icmp eq ptr %38, null
  br i1 %tobool105.not, label %if.end100.if.else_crit_edge, label %land.lhs.true106

if.end100.if.else_crit_edge:                      ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

land.lhs.true106:                                 ; preds = %if.end100
  %rqstp107 = getelementptr inbounds %struct.nfsd4_compoundres, ptr %resp, i32 0, i32 1
  %39 = ptrtoint ptr %rqstp107 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %rqstp107, align 4
  %rq_flags108 = getelementptr inbounds %struct.svc_rqst, ptr %40, i32 0, i32 33
  %41 = ptrtoint ptr %rq_flags108 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %rq_flags108, align 4
  %43 = and i32 %42, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %tobool110.not = icmp eq i32 %43, 0
  br i1 %tobool110.not, label %land.lhs.true106.if.else_crit_edge, label %if.then111

land.lhs.true106.if.else_crit_edge:               ; preds = %land.lhs.true106
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

if.then111:                                       ; preds = %land.lhs.true106
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %maxcount.addr.i)
  %44 = ptrtoint ptr %maxcount.addr.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %34, ptr %maxcount.addr.i, align 4
  %45 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %resp, align 8
  %buf2.i = getelementptr inbounds %struct.xdr_stream, ptr %46, i32 0, i32 1
  %47 = ptrtoint ptr %buf2.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %buf2.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %eof.i) #16
  %49 = ptrtoint ptr %eof.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 -1, ptr %eof.i, align 4, !annotation !103
  %50 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %46, align 4
  %add.ptr.i = getelementptr i32, ptr %51, i32 -2
  %end.i = getelementptr inbounds %struct.xdr_stream, ptr %46, i32 0, i32 2
  %52 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %end.i, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %53 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %51 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %sub.ptr.sub.i)
  %cmp.i = icmp slt i32 %sub.ptr.sub.i, 4
  br i1 %cmp.i, label %if.then111.nfsd4_encode_splice_read.exit_crit_edge, label %if.end.i

if.then111.nfsd4_encode_splice_read.exit_crit_edge: ; preds = %if.then111
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_encode_splice_read.exit

if.end.i:                                         ; preds = %if.then111
  %rd_rqstp.i = getelementptr inbounds %struct.nfsd4_read, ptr %read, i32 0, i32 5
  %54 = ptrtoint ptr %rd_rqstp.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %rd_rqstp.i, align 4
  %rd_fhp.i = getelementptr inbounds %struct.nfsd4_read, ptr %read, i32 0, i32 6
  %56 = ptrtoint ptr %rd_fhp.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %rd_fhp.i, align 8
  %rd_offset.i = getelementptr inbounds %struct.nfsd4_read, ptr %read, i32 0, i32 1
  %58 = ptrtoint ptr %rd_offset.i to i32
  call void @__asan_load8_noabort(i32 %58)
  %59 = load i64, ptr %rd_offset.i, align 8
  %call.i = call i32 @nfsd_splice_read(ptr noundef %55, ptr noundef %57, ptr noundef %9, i64 noundef %59, ptr noundef nonnull %maxcount.addr.i, ptr noundef nonnull %eof.i) #16
  %60 = ptrtoint ptr %maxcount.addr.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %maxcount.addr.i, align 4
  %62 = ptrtoint ptr %rd_length to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %61, ptr %rd_length, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.end6.i, label %if.end.i.out_err.i_crit_edge

if.end.i.out_err.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_err.i

if.end6.i:                                        ; preds = %if.end.i
  %63 = ptrtoint ptr %rd_rqstp.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %rd_rqstp.i, align 4
  %iov_len.i = getelementptr inbounds %struct.kvec, ptr %48, i32 0, i32 1
  %65 = ptrtoint ptr %iov_len.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load i32, ptr %iov_len.i, align 4
  %call8.i = call i32 @svc_encode_result_payload(ptr noundef %64, i32 noundef %66, i32 noundef %61) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i)
  %tobool9.not.i = icmp eq i32 %call8.i, 0
  br i1 %tobool9.not.i, label %if.end12.i, label %if.then10.i

if.then10.i:                                      ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  %call11.i = call i32 @nfserrno(i32 noundef %call8.i) #16
  br label %out_err.i

if.end12.i:                                       ; preds = %if.end6.i
  %67 = ptrtoint ptr %eof.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %eof.i, align 4
  %incdec.ptr.i = getelementptr i32, ptr %51, i32 -1
  %69 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %68, ptr %add.ptr.i, align 4
  %70 = ptrtoint ptr %maxcount.addr.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %maxcount.addr.i, align 4
  %72 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %71, ptr %incdec.ptr.i, align 4
  %73 = load i32, ptr %maxcount.addr.i, align 4
  %page_len.i = getelementptr inbounds %struct.xdr_buf, ptr %48, i32 0, i32 5
  %74 = ptrtoint ptr %page_len.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %73, ptr %page_len.i, align 4
  %len.i = getelementptr inbounds %struct.xdr_buf, ptr %48, i32 0, i32 8
  %75 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %len.i, align 4
  %add.i = add i32 %76, %73
  store i32 %add.i, ptr %len.i, align 4
  %page_base.i = getelementptr inbounds %struct.xdr_buf, ptr %48, i32 0, i32 4
  %77 = ptrtoint ptr %page_base.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %page_base.i, align 4
  %add14.i = add i32 %73, 4095
  %sub.i = add i32 %add14.i, %78
  %div97.i = lshr i32 %sub.i, 12
  %page_ptr.i = getelementptr inbounds %struct.xdr_stream, ptr %46, i32 0, i32 5
  %79 = ptrtoint ptr %page_ptr.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %page_ptr.i, align 4
  %add.ptr16.i = getelementptr ptr, ptr %80, i32 %div97.i
  store ptr %add.ptr16.i, ptr %page_ptr.i, align 4
  %81 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %46, align 4
  %tail.i = getelementptr inbounds %struct.xdr_buf, ptr %48, i32 0, i32 1
  %83 = ptrtoint ptr %tail.i to i32
  call void @__asan_store4_noabort(i32 %83)
  store ptr %82, ptr %tail.i, align 4
  %iov_len21.i = getelementptr inbounds %struct.xdr_buf, ptr %48, i32 0, i32 1, i32 0, i32 1
  %84 = ptrtoint ptr %iov_len21.i to i32
  call void @__asan_store4_noabort(i32 %84)
  store i32 0, ptr %iov_len21.i, align 4
  %iov.i = getelementptr inbounds %struct.xdr_stream, ptr %46, i32 0, i32 3
  %85 = ptrtoint ptr %iov.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store ptr %tail.i, ptr %iov.i, align 4
  %and.i = and i32 %73, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool23.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool23.not.i, label %if.end12.i.if.end39.i_crit_edge, label %if.then24.i

if.end12.i.if.end39.i_crit_edge:                  ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end39.i

if.then24.i:                                      ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #18
  %sub26.i = sub nuw nsw i32 4, %and.i
  %86 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %46, align 4
  %incdec.ptr28.i = getelementptr i32, ptr %87, i32 1
  store ptr %incdec.ptr28.i, ptr %46, align 4
  %88 = ptrtoint ptr %87 to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 0, ptr %87, align 4
  %89 = ptrtoint ptr %maxcount.addr.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %maxcount.addr.i, align 4
  %and29.i = and i32 %90, 3
  %91 = ptrtoint ptr %tail.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %tail.i, align 4
  %add.ptr33.i = getelementptr i8, ptr %92, i32 %and29.i
  store ptr %add.ptr33.i, ptr %tail.i, align 4
  %93 = ptrtoint ptr %iov_len21.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store i32 %sub26.i, ptr %iov_len21.i, align 4
  %94 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %len.i, align 4
  %add38.i = add i32 %95, %sub26.i
  store i32 %add38.i, ptr %len.i, align 4
  br label %if.end39.i

if.end39.i:                                       ; preds = %if.then24.i, %if.end12.i.if.end39.i_crit_edge
  %96 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %end.i, align 4
  %98 = ptrtoint ptr %46 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %46, align 4
  %sub.ptr.lhs.cast42.i = ptrtoint ptr %97 to i32
  %sub.ptr.rhs.cast43.i = ptrtoint ptr %99 to i32
  %sub.ptr.sub44.i = sub i32 %sub.ptr.lhs.cast42.i, %sub.ptr.rhs.cast43.i
  %buflen.i = getelementptr inbounds %struct.xdr_buf, ptr %48, i32 0, i32 7
  %100 = ptrtoint ptr %buflen.i to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load i32, ptr %buflen.i, align 4
  %102 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %len.i, align 4
  %sub46.i = sub i32 %101, %103
  %104 = call i32 @llvm.smin.i32(i32 %sub.ptr.sub44.i, i32 %sub46.i) #16
  %add49.i = add i32 %104, %103
  %105 = ptrtoint ptr %buflen.i to i32
  call void @__asan_store4_noabort(i32 %105)
  store i32 %add49.i, ptr %buflen.i, align 4
  %106 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %end.i, align 4
  %add.ptr52.i = getelementptr i8, ptr %107, i32 %104
  store ptr %add.ptr52.i, ptr %end.i, align 4
  br label %nfsd4_encode_splice_read.exit

out_err.i:                                        ; preds = %if.then10.i, %if.end.i.out_err.i_crit_edge
  %nfserr.0.i = phi i32 [ %call.i, %if.end.i.out_err.i_crit_edge ], [ %call11.i, %if.then10.i ]
  %page_len54.i = getelementptr inbounds %struct.xdr_buf, ptr %48, i32 0, i32 5
  %108 = ptrtoint ptr %page_len54.i to i32
  call void @__asan_store4_noabort(i32 %108)
  store i32 0, ptr %page_len54.i, align 4
  br label %nfsd4_encode_splice_read.exit

nfsd4_encode_splice_read.exit:                    ; preds = %out_err.i, %if.end39.i, %if.then111.nfsd4_encode_splice_read.exit_crit_edge
  %retval.0.i = phi i32 [ %nfserr.0.i, %out_err.i ], [ 0, %if.end39.i ], [ 10018, %if.then111.nfsd4_encode_splice_read.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %eof.i) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %maxcount.addr.i)
  br label %if.end114

if.else:                                          ; preds = %land.lhs.true106.if.else_crit_edge, %if.end100.if.else_crit_edge
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %maxcount.addr.i155)
  %109 = ptrtoint ptr %maxcount.addr.i155 to i32
  call void @__asan_store4_noabort(i32 %109)
  store i32 %34, ptr %maxcount.addr.i155, align 4
  %110 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %resp, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %eof.i156) #16
  %112 = ptrtoint ptr %eof.i156 to i32
  call void @__asan_store4_noabort(i32 %112)
  store i32 -1, ptr %eof.i156, align 4, !annotation !103
  %buf.i = getelementptr inbounds %struct.xdr_stream, ptr %111, i32 0, i32 1
  %113 = ptrtoint ptr %buf.i to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %buf.i, align 4
  %len.i157 = getelementptr inbounds %struct.xdr_buf, ptr %114, i32 0, i32 8
  %115 = ptrtoint ptr %len.i157 to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load i32, ptr %len.i157, align 4
  %sub.i158 = add i32 %116, -8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp.i) #16
  %rqstp.i = getelementptr inbounds %struct.nfsd4_compoundres, ptr %resp, i32 0, i32 1
  %117 = ptrtoint ptr %rqstp.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load ptr, ptr %rqstp.i, align 4
  %rq_vec.i = getelementptr inbounds %struct.svc_rqst, ptr %118, i32 0, i32 25
  %call.i159 = tail call i32 @xdr_reserve_space_vec(ptr noundef %111, ptr noundef %rq_vec.i, i32 noundef %34) #16
  %rd_vlen.i = getelementptr inbounds %struct.nfsd4_read, ptr %read, i32 0, i32 3
  %119 = ptrtoint ptr %rd_vlen.i to i32
  call void @__asan_store4_noabort(i32 %119)
  store i32 %call.i159, ptr %rd_vlen.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i159)
  %cmp.i160 = icmp slt i32 %call.i159, 0
  br i1 %cmp.i160, label %if.else.nfsd4_encode_readv.exit_crit_edge, label %if.end.i166

if.else.nfsd4_encode_readv.exit_crit_edge:        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_encode_readv.exit

if.end.i166:                                      ; preds = %if.else
  %120 = ptrtoint ptr %rqstp.i to i32
  call void @__asan_load4_noabort(i32 %120)
  %121 = load ptr, ptr %rqstp.i, align 4
  %rd_fhp.i161 = getelementptr inbounds %struct.nfsd4_read, ptr %read, i32 0, i32 6
  %122 = ptrtoint ptr %rd_fhp.i161 to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load ptr, ptr %rd_fhp.i161, align 8
  %rd_offset.i162 = getelementptr inbounds %struct.nfsd4_read, ptr %read, i32 0, i32 1
  %124 = ptrtoint ptr %rd_offset.i162 to i32
  call void @__asan_load8_noabort(i32 %124)
  %125 = load i64, ptr %rd_offset.i162, align 8
  %rq_vec5.i = getelementptr inbounds %struct.svc_rqst, ptr %121, i32 0, i32 25
  %call8.i163 = call i32 @nfsd_readv(ptr noundef %121, ptr noundef %123, ptr noundef %9, i64 noundef %125, ptr noundef %rq_vec5.i, i32 noundef %call.i159, ptr noundef nonnull %maxcount.addr.i155, ptr noundef nonnull %eof.i156) #16
  %126 = ptrtoint ptr %maxcount.addr.i155 to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load i32, ptr %maxcount.addr.i155, align 4
  %128 = ptrtoint ptr %rd_length to i32
  call void @__asan_store4_noabort(i32 %128)
  store i32 %127, ptr %rd_length, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8.i163)
  %tobool.not.i165 = icmp eq i32 %call8.i163, 0
  br i1 %tobool.not.i165, label %if.end10.i, label %if.end.i166.nfsd4_encode_readv.exit_crit_edge

if.end.i166.nfsd4_encode_readv.exit_crit_edge:    ; preds = %if.end.i166
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_encode_readv.exit

if.end10.i:                                       ; preds = %if.end.i166
  %129 = ptrtoint ptr %rqstp.i to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %rqstp.i, align 4
  %call12.i = call i32 @svc_encode_result_payload(ptr noundef %130, i32 noundef %116, i32 noundef %127) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12.i)
  %tobool13.not.i = icmp eq i32 %call12.i, 0
  br i1 %tobool13.not.i, label %if.end15.i, label %if.end10.i.nfsd4_encode_readv.exit_crit_edge

if.end10.i.nfsd4_encode_readv.exit_crit_edge:     ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_encode_readv.exit

if.end15.i:                                       ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  %131 = ptrtoint ptr %maxcount.addr.i155 to i32
  call void @__asan_load4_noabort(i32 %131)
  %132 = load i32, ptr %maxcount.addr.i155, align 4
  %add.i.i = add i32 %132, 3
  %and.i.i = and i32 %add.i.i, -4
  %add18.i = add i32 %and.i.i, %116
  call void @xdr_truncate_encode(ptr noundef %111, i32 noundef %add18.i) #16
  %133 = ptrtoint ptr %eof.i156 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load i32, ptr %eof.i156, align 4
  %135 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store4_noabort(i32 %135)
  store i32 %134, ptr %tmp.i, align 4
  %136 = ptrtoint ptr %buf.i to i32
  call void @__asan_load4_noabort(i32 %136)
  %137 = load ptr, ptr %buf.i, align 4
  %call20.i = call i32 @write_bytes_to_xdr_buf(ptr noundef %137, i32 noundef %sub.i158, ptr noundef nonnull %tmp.i, i32 noundef 4) #16
  %138 = ptrtoint ptr %maxcount.addr.i155 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %maxcount.addr.i155, align 4
  %140 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store4_noabort(i32 %140)
  store i32 %139, ptr %tmp.i, align 4
  %141 = ptrtoint ptr %buf.i to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %buf.i, align 4
  %add22.i = add i32 %116, -4
  %call23.i = call i32 @write_bytes_to_xdr_buf(ptr noundef %142, i32 noundef %add22.i, ptr noundef nonnull %tmp.i, i32 noundef 4) #16
  %143 = ptrtoint ptr %tmp.i to i32
  call void @__asan_store4_noabort(i32 %143)
  store i32 0, ptr %tmp.i, align 4
  %144 = ptrtoint ptr %maxcount.addr.i155 to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %maxcount.addr.i155, align 4
  %and.i167 = and i32 %145, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i167)
  %tobool24.not.i = icmp eq i32 %and.i167, 0
  %sub26.i168 = sub nuw nsw i32 4, %and.i167
  %spec.select.i = select i1 %tobool24.not.i, i32 0, i32 %sub26.i168
  %146 = ptrtoint ptr %buf.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %buf.i, align 4
  %add29.i = add i32 %145, %116
  %call30.i = call i32 @write_bytes_to_xdr_buf(ptr noundef %147, i32 noundef %add29.i, ptr noundef nonnull %tmp.i, i32 noundef %spec.select.i) #16
  br label %nfsd4_encode_readv.exit

nfsd4_encode_readv.exit:                          ; preds = %if.end15.i, %if.end10.i.nfsd4_encode_readv.exit_crit_edge, %if.end.i166.nfsd4_encode_readv.exit_crit_edge, %if.else.nfsd4_encode_readv.exit_crit_edge
  %retval.0.i169 = phi i32 [ 0, %if.end15.i ], [ 10018, %if.else.nfsd4_encode_readv.exit_crit_edge ], [ %call8.i163, %if.end.i166.nfsd4_encode_readv.exit_crit_edge ], [ 5, %if.end10.i.nfsd4_encode_readv.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp.i) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %eof.i156) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %maxcount.addr.i155)
  br label %if.end114

if.end114:                                        ; preds = %nfsd4_encode_readv.exit, %nfsd4_encode_splice_read.exit
  %nfserr.addr.0 = phi i32 [ %retval.0.i, %nfsd4_encode_splice_read.exit ], [ %retval.0.i169, %nfsd4_encode_readv.exit ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nfserr.addr.0)
  %tobool115.not = icmp eq i32 %nfserr.addr.0, 0
  br i1 %tobool115.not, label %if.end114.cleanup_crit_edge, label %if.then116

if.end114.cleanup_crit_edge:                      ; preds = %if.end114
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then116:                                       ; preds = %if.end114
  call void @__sanitizer_cov_trace_pc() #18
  call void @xdr_truncate_encode(ptr noundef %1, i32 noundef %5) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then116, %if.end114.cleanup_crit_edge, %if.then65, %land.end58.cleanup_crit_edge, %if.then13, %land.rhs.cleanup_crit_edge, %if.then3.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %nfserr, %entry.cleanup_crit_edge ], [ 10018, %if.then3.cleanup_crit_edge ], [ 10018, %if.then13 ], [ 10018, %land.rhs.cleanup_crit_edge ], [ 10018, %if.then65 ], [ 10018, %land.end58.cleanup_crit_edge ], [ %nfserr.addr.0, %if.then116 ], [ 0, %if.end114.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_readdir(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr noundef %readdir) #0 align 64 {
entry:
  %offset = alloca i64, align 8
  %wire_offset = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %offset) #16
  %0 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %offset, align 8, !annotation !103
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %wire_offset) #16
  %1 = ptrtoint ptr %wire_offset to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 -1, ptr %wire_offset, align 8, !annotation !103
  %2 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %resp, align 8
  %buf = getelementptr inbounds %struct.xdr_stream, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %buf, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %5, i32 0, i32 8
  %6 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %len, align 4
  %call = tail call ptr @xdr_reserve_space(ptr noundef %3, i32 noundef 8) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %incdec.ptr = getelementptr i32, ptr %call, i32 1
  %8 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %call, align 4
  %9 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 0, ptr %incdec.ptr, align 4
  %10 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %3, align 4
  %12 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %buf, align 4
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %13, align 4
  %sub.ptr.lhs.cast = ptrtoint ptr %11 to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %15 to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %iov_len = getelementptr inbounds %struct.kvec, ptr %13, i32 0, i32 1
  %16 = ptrtoint ptr %iov_len to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %sub.ptr.sub, ptr %iov_len, align 4
  %17 = load ptr, ptr %buf, align 4
  %buflen = getelementptr inbounds %struct.xdr_buf, ptr %17, i32 0, i32 7
  %18 = ptrtoint ptr %buflen to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %buflen, align 4
  %len10 = getelementptr inbounds %struct.xdr_buf, ptr %17, i32 0, i32 8
  %20 = ptrtoint ptr %len10 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %len10, align 4
  %sub = sub i32 %19, %21
  %sub12 = add i32 %sub, -24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub12)
  %cmp = icmp slt i32 %sub12, 0
  br i1 %cmp, label %if.end.err_no_verf_crit_edge, label %if.end14

if.end.err_no_verf_crit_edge:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_no_verf

if.end14:                                         ; preds = %if.end
  %rqstp = getelementptr inbounds %struct.nfsd4_compoundres, ptr %resp, i32 0, i32 1
  %22 = ptrtoint ptr %rqstp to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %rqstp, align 4
  %call15 = tail call i32 @svc_max_payload(ptr noundef %23) #16
  %rd_maxcount = getelementptr inbounds %struct.nfsd4_readdir, ptr %readdir, i32 0, i32 3
  %24 = ptrtoint ptr %rd_maxcount to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %rd_maxcount, align 4
  %26 = tail call i32 @llvm.umin.i32(i32 %25, i32 %call15)
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %26)
  %cmp17 = icmp slt i32 %26, 16
  br i1 %cmp17, label %if.end14.err_no_verf_crit_edge, label %if.end19

if.end14.err_no_verf_crit_edge:                   ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_no_verf

if.end19:                                         ; preds = %if.end14
  %sub20 = add nsw i32 %26, -16
  %27 = tail call i32 @llvm.umin.i32(i32 %sub20, i32 %sub12)
  %rd_dircount = getelementptr inbounds %struct.nfsd4_readdir, ptr %readdir, i32 0, i32 2
  %28 = ptrtoint ptr %rd_dircount to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rd_dircount, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool27.not = icmp eq i32 %29, 0
  br i1 %tobool27.not, label %if.then28, label %if.end19.if.end32_crit_edge

if.end19.if.end32_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end32

if.then28:                                        ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #18
  %30 = ptrtoint ptr %rqstp to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %rqstp, align 4
  %call30 = tail call i32 @svc_max_payload(ptr noundef %31) #16
  %32 = ptrtoint ptr %rd_dircount to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %call30, ptr %rd_dircount, align 8
  br label %if.end32

if.end32:                                         ; preds = %if.then28, %if.end19.if.end32_crit_edge
  %xdr33 = getelementptr inbounds %struct.nfsd4_readdir, ptr %readdir, i32 0, i32 8
  %33 = ptrtoint ptr %xdr33 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %3, ptr %xdr33, align 8
  %34 = ptrtoint ptr %rd_maxcount to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %27, ptr %rd_maxcount, align 4
  %common = getelementptr inbounds %struct.nfsd4_readdir, ptr %readdir, i32 0, i32 7
  %35 = ptrtoint ptr %common to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 0, ptr %common, align 4
  %cookie_offset = getelementptr inbounds %struct.nfsd4_readdir, ptr %readdir, i32 0, i32 9
  %36 = ptrtoint ptr %cookie_offset to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 0, ptr %cookie_offset, align 4
  %37 = ptrtoint ptr %readdir to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %readdir, align 8
  %39 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %38, ptr %offset, align 8
  %rd_rqstp = getelementptr inbounds %struct.nfsd4_readdir, ptr %readdir, i32 0, i32 5
  %40 = ptrtoint ptr %rd_rqstp to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %rd_rqstp, align 4
  %rd_fhp = getelementptr inbounds %struct.nfsd4_readdir, ptr %readdir, i32 0, i32 6
  %42 = ptrtoint ptr %rd_fhp to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %rd_fhp, align 8
  %call36 = call i32 @nfsd_readdir(ptr noundef %41, ptr noundef %43, ptr noundef nonnull %offset, ptr noundef %common, ptr noundef nonnull @nfsd4_encode_dirent) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36)
  %cmp37 = icmp eq i32 %call36, 0
  br i1 %cmp37, label %land.lhs.true, label %if.end32.err_no_verf_crit_edge

if.end32.err_no_verf_crit_edge:                   ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_no_verf

land.lhs.true:                                    ; preds = %if.end32
  %44 = ptrtoint ptr %common to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %common, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 10005, i32 %45)
  %cmp40 = icmp eq i32 %45, 10005
  br i1 %cmp40, label %land.lhs.true41, label %land.lhs.true.if.end53_crit_edge

land.lhs.true.if.end53_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end53

land.lhs.true41:                                  ; preds = %land.lhs.true
  %46 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %buf, align 4
  %len43 = getelementptr inbounds %struct.xdr_buf, ptr %47, i32 0, i32 8
  %48 = ptrtoint ptr %len43 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %len43, align 4
  %add = add i32 %7, 8
  call void @__sanitizer_cov_trace_cmp4(i32 %49, i32 %add)
  %cmp44 = icmp eq i32 %49, %add
  br i1 %cmp44, label %if.then45, label %land.lhs.true41.if.end53_crit_edge

land.lhs.true41.if.end53_crit_edge:               ; preds = %land.lhs.true41
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end53

if.then45:                                        ; preds = %land.lhs.true41
  call void @__sanitizer_cov_trace_pc() #18
  %sub46 = add nsw i32 %27, -16
  call void @__sanitizer_cov_trace_cmp4(i32 %sub46, i32 %sub12)
  %cmp47 = icmp slt i32 %sub46, %sub12
  %. = select i1 %cmp47, i32 10005, i32 10018
  br label %err_no_verf

if.end53:                                         ; preds = %land.lhs.true41.if.end53_crit_edge, %land.lhs.true.if.end53_crit_edge
  %50 = ptrtoint ptr %cookie_offset to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %cookie_offset, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %51)
  %tobool55.not = icmp eq i32 %51, 0
  br i1 %tobool55.not, label %if.end53.if.end60_crit_edge, label %if.then56

if.end53.if.end60_crit_edge:                      ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end60

if.then56:                                        ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #18
  %52 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %offset, align 8
  %54 = ptrtoint ptr %wire_offset to i32
  call void @__asan_store8_noabort(i32 %54)
  store i64 %53, ptr %wire_offset, align 8
  %55 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %buf, align 4
  %call59 = call i32 @write_bytes_to_xdr_buf(ptr noundef %56, i32 noundef %51, ptr noundef nonnull %wire_offset, i32 noundef 8) #16
  br label %if.end60

if.end60:                                         ; preds = %if.then56, %if.end53.if.end60_crit_edge
  %call61 = call ptr @xdr_reserve_space(ptr noundef %3, i32 noundef 8) #16
  %tobool62.not = icmp eq ptr %call61, null
  br i1 %tobool62.not, label %land.end, label %if.end100

land.end:                                         ; preds = %if.end60
  %.b159 = load i1, ptr @nfsd4_encode_readdir.__already_done, align 1
  br i1 %.b159, label %land.end.err_no_verf_crit_edge, label %if.then69, !prof !104

land.end.err_no_verf_crit_edge:                   ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %err_no_verf

if.then69:                                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @nfsd4_encode_readdir.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4134, i32 noundef 9, ptr noundef null) #16
  br label %err_no_verf

if.end100:                                        ; preds = %if.end60
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr101 = getelementptr i32, ptr %call61, i32 1
  %57 = ptrtoint ptr %call61 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 0, ptr %call61, align 4
  %58 = ptrtoint ptr %common to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %common, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 30001, i32 %59)
  %cmp104 = icmp eq i32 %59, 30001
  %conv = zext i1 %cmp104 to i32
  %60 = ptrtoint ptr %incdec.ptr101 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %conv, ptr %incdec.ptr101, align 4
  br label %cleanup

err_no_verf:                                      ; preds = %if.then69, %land.end.err_no_verf_crit_edge, %if.then45, %if.end32.err_no_verf_crit_edge, %if.end14.err_no_verf_crit_edge, %if.end.err_no_verf_crit_edge
  %nfserr.addr.1 = phi i32 [ 10018, %if.end.err_no_verf_crit_edge ], [ 10005, %if.end14.err_no_verf_crit_edge ], [ 0, %if.then69 ], [ 0, %land.end.err_no_verf_crit_edge ], [ %call36, %if.end32.err_no_verf_crit_edge ], [ %., %if.then45 ]
  call void @xdr_truncate_encode(ptr noundef %3, i32 noundef %7) #16
  br label %cleanup

cleanup:                                          ; preds = %err_no_verf, %if.end100, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %nfserr.addr.1, %err_no_verf ], [ 0, %if.end100 ], [ 10018, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %wire_offset) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %offset) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_readlink(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef readonly %readlink) #0 align 64 {
entry:
  %maxcount = alloca i32, align 4
  %wire_count = alloca i32, align 4
  %zero = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %maxcount) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %wire_count) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %zero) #16
  %0 = ptrtoint ptr %zero to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %zero, align 4
  %1 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %resp, align 8
  %buf = getelementptr inbounds %struct.xdr_stream, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %buf, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %4, i32 0, i32 8
  %5 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %len, align 4
  %call = tail call ptr @xdr_reserve_space(ptr noundef %2, i32 noundef 4) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %7 = ptrtoint ptr %maxcount to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 4096, ptr %maxcount, align 4
  %call2 = tail call ptr @xdr_reserve_space(ptr noundef %2, i32 noundef 4096) #16
  %tobool3.not = icmp eq ptr %call2, null
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %8 = ptrtoint ptr %readlink to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %readlink, align 4
  %rl_fhp = getelementptr inbounds %struct.nfsd4_readlink, ptr %readlink, i32 0, i32 1
  %10 = ptrtoint ptr %rl_fhp to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %rl_fhp, align 4
  %call6 = call i32 @nfsd_readlink(ptr noundef %9, ptr noundef %11, ptr noundef nonnull %call2, ptr noundef nonnull %maxcount) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 21, i32 %call6)
  %cmp = icmp eq i32 %call6, 21
  %spec.store.select = select i1 %cmp, i32 22, i32 %call6
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.store.select)
  %tobool9.not = icmp eq i32 %spec.store.select, 0
  br i1 %tobool9.not, label %if.end11, label %if.end5.out_err_crit_edge

if.end5.out_err_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_err

if.end11:                                         ; preds = %if.end5
  %12 = ptrtoint ptr %readlink to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %readlink, align 4
  %14 = ptrtoint ptr %maxcount to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %maxcount, align 4
  %call13 = call i32 @svc_encode_result_payload(ptr noundef %13, i32 noundef %6, i32 noundef %15) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %if.end17, label %if.then15

if.then15:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  %call16 = call i32 @nfserrno(i32 noundef %call13) #16
  br label %out_err

if.end17:                                         ; preds = %if.end11
  %16 = ptrtoint ptr %maxcount to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %maxcount, align 4
  %18 = ptrtoint ptr %wire_count to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %wire_count, align 4
  %19 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %buf, align 4
  %call19 = call i32 @write_bytes_to_xdr_buf(ptr noundef %20, i32 noundef %6, ptr noundef nonnull %wire_count, i32 noundef 4) #16
  %add = add i32 %6, 4
  %21 = ptrtoint ptr %maxcount to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %maxcount, align 4
  %add20 = add i32 %22, 3
  %and = and i32 %add20, -4
  %add21 = add i32 %and, %add
  call void @xdr_truncate_encode(ptr noundef %2, i32 noundef %add21) #16
  %23 = ptrtoint ptr %maxcount to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %maxcount, align 4
  %and22 = and i32 %24, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and22)
  %tobool23.not = icmp eq i32 %and22, 0
  br i1 %tobool23.not, label %if.end17.cleanup_crit_edge, label %if.then24

if.end17.cleanup_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then24:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  %25 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %buf, align 4
  %add27 = add i32 %24, %add
  %sub = sub nuw nsw i32 4, %and22
  %call29 = call i32 @write_bytes_to_xdr_buf(ptr noundef %26, i32 noundef %add27, ptr noundef nonnull %zero, i32 noundef %sub) #16
  br label %cleanup

out_err:                                          ; preds = %if.then15, %if.end5.out_err_crit_edge
  %nfserr.addr.0 = phi i32 [ %spec.store.select, %if.end5.out_err_crit_edge ], [ %call16, %if.then15 ]
  call void @xdr_truncate_encode(ptr noundef %2, i32 noundef %6) #16
  br label %cleanup

cleanup:                                          ; preds = %out_err, %if.then24, %if.end17.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %nfserr.addr.0, %out_err ], [ 10018, %entry.cleanup_crit_edge ], [ 10018, %if.end.cleanup_crit_edge ], [ 0, %if.then24 ], [ 0, %if.end17.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %zero) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %wire_count) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %maxcount) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_remove(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef readonly %remove) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 20) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %rm_cinfo = getelementptr inbounds %struct.nfsd4_remove, ptr %remove, i32 0, i32 2
  %2 = ptrtoint ptr %rm_cinfo to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rm_cinfo, align 8
  %incdec.ptr.i = getelementptr i32, ptr %call, i32 1
  %4 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call, align 4
  %before_change.i = getelementptr inbounds %struct.nfsd4_remove, ptr %remove, i32 0, i32 2, i32 1
  %5 = ptrtoint ptr %before_change.i to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %before_change.i, align 8
  %7 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_storeN_noabort(i32 %7, i32 8)
  store i64 %6, ptr %incdec.ptr.i, align 1
  %add.ptr.i.i = getelementptr i32, ptr %call, i32 3
  %after_change.i = getelementptr inbounds %struct.nfsd4_remove, ptr %remove, i32 0, i32 2, i32 2
  %8 = ptrtoint ptr %after_change.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %after_change.i, align 8
  %10 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_storeN_noabort(i32 %10, i32 8)
  store i64 %9, ptr %add.ptr.i.i, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ 10018, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_rename(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef readonly %rename) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 40) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %rn_sinfo = getelementptr inbounds %struct.nfsd4_rename, ptr %rename, i32 0, i32 4
  %2 = ptrtoint ptr %rn_sinfo to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rn_sinfo, align 8
  %incdec.ptr.i = getelementptr i32, ptr %call, i32 1
  %4 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call, align 4
  %before_change.i = getelementptr inbounds %struct.nfsd4_rename, ptr %rename, i32 0, i32 4, i32 1
  %5 = ptrtoint ptr %before_change.i to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %before_change.i, align 8
  %7 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_storeN_noabort(i32 %7, i32 8)
  store i64 %6, ptr %incdec.ptr.i, align 1
  %add.ptr.i.i = getelementptr i32, ptr %call, i32 3
  %after_change.i = getelementptr inbounds %struct.nfsd4_rename, ptr %rename, i32 0, i32 4, i32 2
  %8 = ptrtoint ptr %after_change.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %after_change.i, align 8
  %10 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_storeN_noabort(i32 %10, i32 8)
  store i64 %9, ptr %add.ptr.i.i, align 1
  %add.ptr.i7.i = getelementptr i32, ptr %call, i32 5
  %rn_tinfo = getelementptr inbounds %struct.nfsd4_rename, ptr %rename, i32 0, i32 5
  %11 = ptrtoint ptr %rn_tinfo to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %rn_tinfo, align 8
  %incdec.ptr.i8 = getelementptr i32, ptr %call, i32 6
  %13 = ptrtoint ptr %add.ptr.i7.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %add.ptr.i7.i, align 4
  %before_change.i9 = getelementptr inbounds %struct.nfsd4_rename, ptr %rename, i32 0, i32 5, i32 1
  %14 = ptrtoint ptr %before_change.i9 to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %before_change.i9, align 8
  %16 = ptrtoint ptr %incdec.ptr.i8 to i32
  call void @__asan_storeN_noabort(i32 %16, i32 8)
  store i64 %15, ptr %incdec.ptr.i8, align 1
  %add.ptr.i.i10 = getelementptr i32, ptr %call, i32 8
  %after_change.i11 = getelementptr inbounds %struct.nfsd4_rename, ptr %rename, i32 0, i32 5, i32 2
  %17 = ptrtoint ptr %after_change.i11 to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %after_change.i11, align 8
  %19 = ptrtoint ptr %add.ptr.i.i10 to i32
  call void @__asan_storeN_noabort(i32 %19, i32 8)
  store i64 %18, ptr %add.ptr.i.i10, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ 10018, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_secinfo(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef readonly %secinfo) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %si_exp = getelementptr inbounds %struct.nfsd4_secinfo, ptr %secinfo, i32 0, i32 2
  %2 = ptrtoint ptr %si_exp to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %si_exp, align 4
  %call = tail call fastcc i32 @nfsd4_do_encode_secinfo(ptr noundef %1, ptr noundef %3)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_setattr(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef readonly %setattr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 16) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nfserr)
  %tobool2.not = icmp eq i32 %nfserr, 0
  %incdec.ptr7 = getelementptr i32, ptr %call, i32 1
  %2 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 3, ptr %call, align 4
  br i1 %tobool2.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr4 = getelementptr i32, ptr %call, i32 2
  %3 = ptrtoint ptr %incdec.ptr7 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %incdec.ptr7, align 4
  %incdec.ptr5 = getelementptr i32, ptr %call, i32 3
  %4 = ptrtoint ptr %incdec.ptr4 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %incdec.ptr4, align 4
  %5 = ptrtoint ptr %incdec.ptr5 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %incdec.ptr5, align 4
  br label %cleanup

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %sa_bmval = getelementptr inbounds %struct.nfsd4_setattr, ptr %setattr, i32 0, i32 1
  %6 = ptrtoint ptr %sa_bmval to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %sa_bmval, align 8
  %incdec.ptr8 = getelementptr i32, ptr %call, i32 2
  %8 = ptrtoint ptr %incdec.ptr7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %incdec.ptr7, align 4
  %arrayidx10 = getelementptr %struct.nfsd4_setattr, ptr %setattr, i32 0, i32 1, i32 1
  %9 = ptrtoint ptr %arrayidx10 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx10, align 4
  %incdec.ptr11 = getelementptr i32, ptr %call, i32 3
  %11 = ptrtoint ptr %incdec.ptr8 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %incdec.ptr8, align 4
  %arrayidx13 = getelementptr %struct.nfsd4_setattr, ptr %setattr, i32 0, i32 1, i32 2
  %12 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx13, align 8
  %14 = ptrtoint ptr %incdec.ptr11 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %incdec.ptr11, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then3, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10018, %entry.cleanup_crit_edge ], [ 0, %if.else ], [ %nfserr, %if.then3 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_setclientid(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr noundef %scd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %2 = zext i32 %nfserr to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.37)
  switch i32 %nfserr, label %entry.cleanup_crit_edge [
    i32 0, label %if.then
    i32 10017, label %if.then6
  ]

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then:                                          ; preds = %entry
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 16) #16
  %tobool2.not = icmp eq ptr %call, null
  br i1 %tobool2.not, label %if.then.cleanup_crit_edge, label %if.end

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  %se_clientid = getelementptr inbounds %struct.nfsd4_setclientid, ptr %scd, i32 0, i32 8
  %call4 = tail call ptr @xdr_encode_opaque_fixed(ptr noundef nonnull %call, ptr noundef %se_clientid, i32 noundef 8) #16
  %se_confirm = getelementptr inbounds %struct.nfsd4_setclientid, ptr %scd, i32 0, i32 9
  %call5 = tail call ptr @xdr_encode_opaque_fixed(ptr noundef %call4, ptr noundef %se_confirm, i32 noundef 8) #16
  br label %cleanup

if.then6:                                         ; preds = %entry
  %call7 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 8) #16
  %tobool8.not = icmp eq ptr %call7, null
  br i1 %tobool8.not, label %if.then6.cleanup_crit_edge, label %if.end10

if.then6.cleanup_crit_edge:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end10:                                         ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr = getelementptr i32, ptr %call7, i32 1
  %3 = ptrtoint ptr %call7 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %call7, align 4
  %4 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %incdec.ptr, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %if.then6.cleanup_crit_edge, %if.end, %if.then.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10018, %if.then.cleanup_crit_edge ], [ 10018, %if.then6.cleanup_crit_edge ], [ %nfserr, %entry.cleanup_crit_edge ], [ 10017, %if.end10 ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_write(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr noundef %write) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 16) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %wr_bytes_written = getelementptr inbounds %struct.nfsd4_write, ptr %write, i32 0, i32 5
  %2 = ptrtoint ptr %wr_bytes_written to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %wr_bytes_written, align 4
  %incdec.ptr = getelementptr i32, ptr %call, i32 1
  %4 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call, align 4
  %wr_how_written = getelementptr inbounds %struct.nfsd4_write, ptr %write, i32 0, i32 6
  %5 = ptrtoint ptr %wr_how_written to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %wr_how_written, align 8
  %incdec.ptr2 = getelementptr i32, ptr %call, i32 2
  %7 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %incdec.ptr, align 4
  %wr_verifier = getelementptr inbounds %struct.nfsd4_write, ptr %write, i32 0, i32 7
  %call3 = tail call ptr @xdr_encode_opaque_fixed(ptr noundef %incdec.ptr2, ptr noundef %wr_verifier, i32 noundef 8) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ 10018, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_bind_conn_to_session(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr noundef %bcts) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 24) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call2 = tail call ptr @xdr_encode_opaque_fixed(ptr noundef nonnull %call, ptr noundef %bcts, i32 noundef 16) #16
  %dir = getelementptr inbounds %struct.nfsd4_bind_conn_to_session, ptr %bcts, i32 0, i32 1
  %2 = ptrtoint ptr %dir to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dir, align 4
  %incdec.ptr = getelementptr i32, ptr %call2, i32 1
  %4 = ptrtoint ptr %call2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call2, align 4
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %incdec.ptr, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ 10018, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_exchange_id(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr noundef %exid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %rqstp = getelementptr inbounds %struct.nfsd4_compoundres, ptr %resp, i32 0, i32 1
  %2 = ptrtoint ptr %rqstp to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rqstp, align 4
  %rq_xprt = getelementptr inbounds %struct.svc_rqst, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %rq_xprt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %rq_xprt, align 8
  %tobool.not = icmp eq ptr %5, null
  %xpt_net = getelementptr inbounds %struct.svc_xprt, ptr %5, i32 0, i32 19
  %rq_bc_net = getelementptr inbounds %struct.svc_rqst, ptr %3, i32 0, i32 48
  %cond.in = select i1 %tobool.not, ptr %rq_bc_net, ptr %xpt_net
  %6 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %6)
  %cond = load ptr, ptr %cond.in, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfsd_net_id to i32))
  %7 = load i32, ptr @nfsd_net_id, align 4
  %call = tail call fastcc ptr @net_generic(ptr noundef %cond, i32 noundef %7)
  %nfsd_name = getelementptr inbounds %struct.nfsd_net, ptr %call, i32 0, i32 58
  %call7 = tail call i32 @strlen(ptr noundef %nfsd_name) #23
  %call13 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 20) #16
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %clientid = getelementptr inbounds %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 3
  %call15 = tail call ptr @xdr_encode_opaque_fixed(ptr noundef nonnull %call13, ptr noundef %clientid, i32 noundef 8) #16
  %seqid = getelementptr inbounds %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 4
  %8 = ptrtoint ptr %seqid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %seqid, align 4
  %incdec.ptr = getelementptr i32, ptr %call15, i32 1
  %10 = ptrtoint ptr %call15 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %call15, align 4
  %flags = getelementptr inbounds %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 2
  %11 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %flags, align 8
  %incdec.ptr16 = getelementptr i32, ptr %call15, i32 2
  %13 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %incdec.ptr, align 4
  %spa_how = getelementptr inbounds %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 5
  %14 = ptrtoint ptr %spa_how to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %spa_how, align 8
  %16 = ptrtoint ptr %incdec.ptr16 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %incdec.ptr16, align 4
  %17 = load i32, ptr %spa_how, align 8
  %18 = zext i32 %17 to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values.38)
  switch i32 %17, label %land.end [
    i32 0, label %if.end.sw.epilog_crit_edge
    i32 1, label %sw.bb
  ]

if.end.sw.epilog_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end
  %spo_must_enforce = getelementptr inbounds %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 6
  %19 = ptrtoint ptr %spo_must_enforce to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %spo_must_enforce, align 4
  %arrayidx20 = getelementptr %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 6, i32 1
  %21 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx20, align 4
  %arrayidx22 = getelementptr %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 6, i32 2
  %23 = ptrtoint ptr %arrayidx22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx22, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.not.i = icmp eq i32 %24, 0
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %sw.bb
  %call.i = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 16) #16
  %tobool1.not.i = icmp eq ptr %call.i, null
  br i1 %tobool1.not.i, label %if.then.i.cleanup_crit_edge, label %if.end.i

if.then.i.cleanup_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %25 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 3, ptr %call.i, align 4
  %incdec.ptr3.i = getelementptr i32, ptr %call.i, i32 2
  %26 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %20, ptr %incdec.ptr.i, align 4
  %incdec.ptr4.i = getelementptr i32, ptr %call.i, i32 3
  %27 = ptrtoint ptr %incdec.ptr3.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %22, ptr %incdec.ptr3.i, align 4
  %28 = ptrtoint ptr %incdec.ptr4.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %24, ptr %incdec.ptr4.i, align 4
  br label %if.end26

if.else.i:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool6.not.i = icmp eq i32 %22, 0
  br i1 %tobool6.not.i, label %if.else15.i, label %if.then7.i

if.then7.i:                                       ; preds = %if.else.i
  %call8.i = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 12) #16
  %tobool9.not.i = icmp eq ptr %call8.i, null
  br i1 %tobool9.not.i, label %if.then7.i.cleanup_crit_edge, label %if.end11.i

if.then7.i.cleanup_crit_edge:                     ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end11.i:                                       ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr12.i = getelementptr i32, ptr %call8.i, i32 1
  %29 = ptrtoint ptr %call8.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 2, ptr %call8.i, align 4
  %incdec.ptr13.i = getelementptr i32, ptr %call8.i, i32 2
  %30 = ptrtoint ptr %incdec.ptr12.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %20, ptr %incdec.ptr12.i, align 4
  %31 = ptrtoint ptr %incdec.ptr13.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %22, ptr %incdec.ptr13.i, align 4
  br label %if.end26

if.else15.i:                                      ; preds = %if.else.i
  %call16.i = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 8) #16
  %tobool17.not.i = icmp eq ptr %call16.i, null
  br i1 %tobool17.not.i, label %if.else15.i.cleanup_crit_edge, label %if.end19.i

if.else15.i.cleanup_crit_edge:                    ; preds = %if.else15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end19.i:                                       ; preds = %if.else15.i
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr20.i = getelementptr i32, ptr %call16.i, i32 1
  %32 = ptrtoint ptr %call16.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 1, ptr %call16.i, align 4
  %33 = ptrtoint ptr %incdec.ptr20.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %20, ptr %incdec.ptr20.i, align 4
  br label %if.end26

if.end26:                                         ; preds = %if.end19.i, %if.end11.i, %if.end.i
  %spo_must_allow = getelementptr inbounds %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 7
  %34 = ptrtoint ptr %spo_must_allow to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %spo_must_allow, align 8
  %arrayidx29 = getelementptr %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 7, i32 1
  %36 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %arrayidx29, align 4
  %arrayidx31 = getelementptr %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 7, i32 2
  %38 = ptrtoint ptr %arrayidx31 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %arrayidx31, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool.not.i129 = icmp eq i32 %39, 0
  br i1 %tobool.not.i129, label %if.else.i138, label %if.then.i132

if.then.i132:                                     ; preds = %if.end26
  %call.i130 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 16) #16
  %tobool1.not.i131 = icmp eq ptr %call.i130, null
  br i1 %tobool1.not.i131, label %if.then.i132.cleanup_crit_edge, label %if.end.i136

if.then.i132.cleanup_crit_edge:                   ; preds = %if.then.i132
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i136:                                      ; preds = %if.then.i132
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr.i133 = getelementptr i32, ptr %call.i130, i32 1
  %40 = ptrtoint ptr %call.i130 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 3, ptr %call.i130, align 4
  %incdec.ptr3.i134 = getelementptr i32, ptr %call.i130, i32 2
  %41 = ptrtoint ptr %incdec.ptr.i133 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %35, ptr %incdec.ptr.i133, align 4
  %incdec.ptr4.i135 = getelementptr i32, ptr %call.i130, i32 3
  %42 = ptrtoint ptr %incdec.ptr3.i134 to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %37, ptr %incdec.ptr3.i134, align 4
  %43 = ptrtoint ptr %incdec.ptr4.i135 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %39, ptr %incdec.ptr4.i135, align 4
  br label %sw.epilog

if.else.i138:                                     ; preds = %if.end26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool6.not.i137 = icmp eq i32 %37, 0
  br i1 %tobool6.not.i137, label %if.else15.i147, label %if.then7.i141

if.then7.i141:                                    ; preds = %if.else.i138
  %call8.i139 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 12) #16
  %tobool9.not.i140 = icmp eq ptr %call8.i139, null
  br i1 %tobool9.not.i140, label %if.then7.i141.cleanup_crit_edge, label %if.end11.i144

if.then7.i141.cleanup_crit_edge:                  ; preds = %if.then7.i141
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end11.i144:                                    ; preds = %if.then7.i141
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr12.i142 = getelementptr i32, ptr %call8.i139, i32 1
  %44 = ptrtoint ptr %call8.i139 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 2, ptr %call8.i139, align 4
  %incdec.ptr13.i143 = getelementptr i32, ptr %call8.i139, i32 2
  %45 = ptrtoint ptr %incdec.ptr12.i142 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %35, ptr %incdec.ptr12.i142, align 4
  %46 = ptrtoint ptr %incdec.ptr13.i143 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %37, ptr %incdec.ptr13.i143, align 4
  br label %sw.epilog

if.else15.i147:                                   ; preds = %if.else.i138
  %call16.i145 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 8) #16
  %tobool17.not.i146 = icmp eq ptr %call16.i145, null
  br i1 %tobool17.not.i146, label %if.else15.i147.cleanup_crit_edge, label %if.end19.i149

if.else15.i147.cleanup_crit_edge:                 ; preds = %if.else15.i147
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end19.i149:                                    ; preds = %if.else15.i147
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr20.i148 = getelementptr i32, ptr %call16.i145, i32 1
  %47 = ptrtoint ptr %call16.i145 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 1, ptr %call16.i145, align 4
  %48 = ptrtoint ptr %incdec.ptr20.i148 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %35, ptr %incdec.ptr20.i148, align 4
  br label %sw.epilog

land.end:                                         ; preds = %if.end
  %.b128 = load i1, ptr @nfsd4_encode_exchange_id.__already_done, align 1
  br i1 %.b128, label %land.end.sw.epilog_crit_edge, label %if.then41, !prof !104

land.end.sw.epilog_crit_edge:                     ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

if.then41:                                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @nfsd4_encode_exchange_id.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4379, i32 noundef 9, ptr noundef null) #16
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then41, %land.end.sw.epilog_crit_edge, %if.end19.i149, %if.end11.i144, %if.end.i136, %if.end.sw.epilog_crit_edge
  %add = shl i32 %call7, 1
  %49 = add i32 %add, 22
  %add76 = and i32 %49, -8
  %add77 = or i32 %add76, 4
  %call78 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef %add77) #16
  %tobool79.not = icmp eq ptr %call78, null
  br i1 %tobool79.not, label %sw.epilog.cleanup_crit_edge, label %if.end81

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end81:                                         ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  %50 = ptrtoint ptr %call78 to i32
  call void @__asan_storeN_noabort(i32 %50, i32 8)
  store i64 0, ptr %call78, align 1
  %add.ptr.i = getelementptr i32, ptr %call78, i32 2
  %call83 = tail call ptr @xdr_encode_opaque(ptr noundef %add.ptr.i, ptr noundef %nfsd_name, i32 noundef %call7) #16
  %call84 = tail call ptr @xdr_encode_opaque(ptr noundef %call83, ptr noundef %nfsd_name, i32 noundef %call7) #16
  %51 = ptrtoint ptr %call84 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 0, ptr %call84, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end81, %sw.epilog.cleanup_crit_edge, %if.else15.i147.cleanup_crit_edge, %if.then7.i141.cleanup_crit_edge, %if.then.i132.cleanup_crit_edge, %if.else15.i.cleanup_crit_edge, %if.then7.i.cleanup_crit_edge, %if.then.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end81 ], [ 10018, %entry.cleanup_crit_edge ], [ 10018, %sw.epilog.cleanup_crit_edge ], [ 10018, %if.else15.i.cleanup_crit_edge ], [ 10018, %if.then7.i.cleanup_crit_edge ], [ 10018, %if.then.i.cleanup_crit_edge ], [ 10018, %if.else15.i147.cleanup_crit_edge ], [ 10018, %if.then7.i141.cleanup_crit_edge ], [ 10018, %if.then.i132.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_create_session(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr noundef %sess) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 24) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %sessionid = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 1
  %call2 = tail call ptr @xdr_encode_opaque_fixed(ptr noundef nonnull %call, ptr noundef %sessionid, i32 noundef 16) #16
  %seqid = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 2
  %2 = ptrtoint ptr %seqid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %seqid, align 4
  %incdec.ptr = getelementptr i32, ptr %call2, i32 1
  %4 = ptrtoint ptr %call2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call2, align 4
  %flags = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 3
  %5 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %flags, align 4
  %7 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %incdec.ptr, align 4
  %call4 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 28) #16
  %tobool5.not = icmp eq ptr %call4, null
  br i1 %tobool5.not, label %if.end.cleanup_crit_edge, label %if.end7

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %incdec.ptr8 = getelementptr i32, ptr %call4, i32 1
  %8 = ptrtoint ptr %call4 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 0, ptr %call4, align 4
  %maxreq_sz = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 4, i32 1
  %9 = ptrtoint ptr %maxreq_sz to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %maxreq_sz, align 4
  %incdec.ptr9 = getelementptr i32, ptr %call4, i32 2
  %11 = ptrtoint ptr %incdec.ptr8 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %incdec.ptr8, align 4
  %maxresp_sz = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 4, i32 2
  %12 = ptrtoint ptr %maxresp_sz to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %maxresp_sz, align 4
  %incdec.ptr11 = getelementptr i32, ptr %call4, i32 3
  %14 = ptrtoint ptr %incdec.ptr9 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %incdec.ptr9, align 4
  %maxresp_cached = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 4, i32 3
  %15 = ptrtoint ptr %maxresp_cached to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %maxresp_cached, align 4
  %incdec.ptr13 = getelementptr i32, ptr %call4, i32 4
  %17 = ptrtoint ptr %incdec.ptr11 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %incdec.ptr11, align 4
  %maxops = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 4, i32 4
  %18 = ptrtoint ptr %maxops to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %maxops, align 4
  %incdec.ptr15 = getelementptr i32, ptr %call4, i32 5
  %20 = ptrtoint ptr %incdec.ptr13 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %incdec.ptr13, align 4
  %maxreqs = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 4, i32 5
  %21 = ptrtoint ptr %maxreqs to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %maxreqs, align 4
  %incdec.ptr17 = getelementptr i32, ptr %call4, i32 6
  %23 = ptrtoint ptr %incdec.ptr15 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %incdec.ptr15, align 4
  %nr_rdma_attrs = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 4, i32 6
  %24 = ptrtoint ptr %nr_rdma_attrs to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %nr_rdma_attrs, align 4
  %26 = ptrtoint ptr %incdec.ptr17 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %incdec.ptr17, align 4
  %27 = load i32, ptr %nr_rdma_attrs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool22.not = icmp eq i32 %27, 0
  br i1 %tobool22.not, label %if.end7.if.end30_crit_edge, label %if.then23

if.end7.if.end30_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end30

if.then23:                                        ; preds = %if.end7
  %call24 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 4) #16
  %tobool25.not = icmp eq ptr %call24, null
  br i1 %tobool25.not, label %if.then23.cleanup_crit_edge, label %if.end27

if.then23.cleanup_crit_edge:                      ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end27:                                         ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #18
  %rdma_attrs = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 4, i32 7
  %28 = ptrtoint ptr %rdma_attrs to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %rdma_attrs, align 4
  %30 = ptrtoint ptr %call24 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %call24, align 4
  br label %if.end30

if.end30:                                         ; preds = %if.end27, %if.end7.if.end30_crit_edge
  %call31 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 28) #16
  %tobool32.not = icmp eq ptr %call31, null
  br i1 %tobool32.not, label %if.end30.cleanup_crit_edge, label %if.end34

if.end30.cleanup_crit_edge:                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end34:                                         ; preds = %if.end30
  %incdec.ptr35 = getelementptr i32, ptr %call31, i32 1
  %31 = ptrtoint ptr %call31 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 0, ptr %call31, align 4
  %maxreq_sz36 = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 5, i32 1
  %32 = ptrtoint ptr %maxreq_sz36 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %maxreq_sz36, align 4
  %incdec.ptr37 = getelementptr i32, ptr %call31, i32 2
  %34 = ptrtoint ptr %incdec.ptr35 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %incdec.ptr35, align 4
  %maxresp_sz39 = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 5, i32 2
  %35 = ptrtoint ptr %maxresp_sz39 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %maxresp_sz39, align 4
  %incdec.ptr40 = getelementptr i32, ptr %call31, i32 3
  %37 = ptrtoint ptr %incdec.ptr37 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %incdec.ptr37, align 4
  %maxresp_cached42 = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 5, i32 3
  %38 = ptrtoint ptr %maxresp_cached42 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %maxresp_cached42, align 4
  %incdec.ptr43 = getelementptr i32, ptr %call31, i32 4
  %40 = ptrtoint ptr %incdec.ptr40 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %incdec.ptr40, align 4
  %maxops45 = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 5, i32 4
  %41 = ptrtoint ptr %maxops45 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %maxops45, align 4
  %incdec.ptr46 = getelementptr i32, ptr %call31, i32 5
  %43 = ptrtoint ptr %incdec.ptr43 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %incdec.ptr43, align 4
  %maxreqs48 = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 5, i32 5
  %44 = ptrtoint ptr %maxreqs48 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %maxreqs48, align 4
  %incdec.ptr49 = getelementptr i32, ptr %call31, i32 6
  %46 = ptrtoint ptr %incdec.ptr46 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %incdec.ptr46, align 4
  %nr_rdma_attrs51 = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 5, i32 6
  %47 = ptrtoint ptr %nr_rdma_attrs51 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %nr_rdma_attrs51, align 4
  %49 = ptrtoint ptr %incdec.ptr49 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %48, ptr %incdec.ptr49, align 4
  %50 = load i32, ptr %nr_rdma_attrs51, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %tobool55.not = icmp eq i32 %50, 0
  br i1 %tobool55.not, label %if.end34.cleanup_crit_edge, label %if.then56

if.end34.cleanup_crit_edge:                       ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then56:                                        ; preds = %if.end34
  %call57 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 4) #16
  %tobool58.not = icmp eq ptr %call57, null
  br i1 %tobool58.not, label %if.then56.cleanup_crit_edge, label %if.end60

if.then56.cleanup_crit_edge:                      ; preds = %if.then56
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end60:                                         ; preds = %if.then56
  call void @__sanitizer_cov_trace_pc() #18
  %rdma_attrs62 = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 5, i32 7
  %51 = ptrtoint ptr %rdma_attrs62 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %rdma_attrs62, align 4
  %53 = ptrtoint ptr %call57 to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %call57, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end60, %if.then56.cleanup_crit_edge, %if.end34.cleanup_crit_edge, %if.end30.cleanup_crit_edge, %if.then23.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10018, %entry.cleanup_crit_edge ], [ 10018, %if.end.cleanup_crit_edge ], [ 10018, %if.then23.cleanup_crit_edge ], [ 10018, %if.end30.cleanup_crit_edge ], [ 10018, %if.then56.cleanup_crit_edge ], [ 0, %if.end60 ], [ 0, %if.end34.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_getdeviceinfo(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr noundef %gdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %buf = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %buf, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len, align 4
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 4) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %gd_layout_type = getelementptr inbounds %struct.nfsd4_getdeviceinfo, ptr %gdev, i32 0, i32 1
  %6 = ptrtoint ptr %gd_layout_type to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %gd_layout_type, align 8
  %8 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %call, align 4
  %gd_maxcount = getelementptr inbounds %struct.nfsd4_getdeviceinfo, ptr %gdev, i32 0, i32 2
  %9 = ptrtoint ptr %gd_maxcount to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %gd_maxcount, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp.not = icmp eq i32 %10, 0
  br i1 %cmp.not, label %if.end.if.end14_crit_edge, label %if.then2

if.end.if.end14_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

if.then2:                                         ; preds = %if.end
  %11 = ptrtoint ptr %gd_layout_type to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %gd_layout_type, align 8
  %arrayidx = getelementptr [0 x ptr], ptr @nfsd4_layout_ops, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %arrayidx, align 4
  %encode_getdeviceinfo = getelementptr inbounds %struct.nfsd4_layout_ops, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %encode_getdeviceinfo to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %encode_getdeviceinfo, align 4
  %call4 = tail call i32 %16(ptr noundef %1, ptr noundef %gdev) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %if.then2.if.end14_crit_edge, label %if.then6

if.then2.if.end14_crit_edge:                      ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

if.then6:                                         ; preds = %if.then2
  %17 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %buf, align 4
  %len8 = getelementptr inbounds %struct.xdr_buf, ptr %18, i32 0, i32 8
  %19 = ptrtoint ptr %len8 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %len8, align 4
  %add = add i32 %20, 4
  %21 = ptrtoint ptr %gd_maxcount to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %gd_maxcount, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %22)
  %cmp10 = icmp ugt i32 %add, %22
  br i1 %cmp10, label %do.body, label %if.then6.cleanup_crit_edge

if.then6.cleanup_crit_edge:                       ; preds = %if.then6
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end14:                                         ; preds = %if.then2.if.end14_crit_edge, %if.end.if.end14_crit_edge
  %gd_notify_types = getelementptr inbounds %struct.nfsd4_getdeviceinfo, ptr %gdev, i32 0, i32 3
  %23 = ptrtoint ptr %gd_notify_types to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %gd_notify_types, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool15.not = icmp eq i32 %24, 0
  br i1 %tobool15.not, label %if.else, label %if.then16

if.then16:                                        ; preds = %if.end14
  %call17 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 8) #16
  %tobool18.not = icmp eq ptr %call17, null
  br i1 %tobool18.not, label %if.then16.cleanup_crit_edge, label %if.end20

if.then16.cleanup_crit_edge:                      ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end20:                                         ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr21 = getelementptr i32, ptr %call17, i32 1
  %25 = ptrtoint ptr %call17 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 1, ptr %call17, align 4
  %26 = ptrtoint ptr %gd_notify_types to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %gd_notify_types, align 8
  %28 = ptrtoint ptr %incdec.ptr21 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %incdec.ptr21, align 4
  br label %cleanup

if.else:                                          ; preds = %if.end14
  %call24 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 4) #16
  %tobool25.not = icmp eq ptr %call24, null
  br i1 %tobool25.not, label %if.else.cleanup_crit_edge, label %if.end27

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end27:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %29 = ptrtoint ptr %call24 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 0, ptr %call24, align 4
  br label %cleanup

do.body:                                          ; preds = %if.then6
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfsd_debug to i32))
  %30 = load i32, ptr @nfsd_debug, align 4
  %and = and i32 %30, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool30.not = icmp eq i32 %and, 0
  br i1 %tobool30.not, label %do.body.do.end36_crit_edge, label %do.end

do.body.do.end36_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end36

do.end:                                           ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %call33 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.20, ptr noundef nonnull @.str.21) #21
  br label %do.end36

do.end36:                                         ; preds = %do.end, %do.body.do.end36_crit_edge
  %31 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %buf, align 4
  %len38 = getelementptr inbounds %struct.xdr_buf, ptr %32, i32 0, i32 8
  %33 = ptrtoint ptr %len38 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %len38, align 4
  tail call void @xdr_truncate_encode(ptr noundef %1, i32 noundef %5) #16
  %call40 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 4) #16
  %tobool41.not = icmp eq ptr %call40, null
  br i1 %tobool41.not, label %do.end36.cleanup_crit_edge, label %if.end43

do.end36.cleanup_crit_edge:                       ; preds = %do.end36
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end43:                                         ; preds = %do.end36
  call void @__sanitizer_cov_trace_pc() #18
  %add39 = add i32 %34, 4
  %35 = ptrtoint ptr %call40 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %add39, ptr %call40, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end43, %do.end36.cleanup_crit_edge, %if.end27, %if.else.cleanup_crit_edge, %if.end20, %if.then16.cleanup_crit_edge, %if.then6.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10005, %if.end43 ], [ 10018, %entry.cleanup_crit_edge ], [ %call4, %if.then6.cleanup_crit_edge ], [ 10018, %if.then16.cleanup_crit_edge ], [ 10018, %if.else.cleanup_crit_edge ], [ 0, %if.end27 ], [ 0, %if.end20 ], [ 10018, %do.end36.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_layoutcommit(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef readonly %lcp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 4) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %lc_size_chg = getelementptr inbounds %struct.nfsd4_layoutcommit, ptr %lcp, i32 0, i32 9
  %2 = ptrtoint ptr %lc_size_chg to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %lc_size_chg, align 4
  %4 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call, align 4
  %5 = load i32, ptr %lc_size_chg, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool3.not = icmp eq i32 %5, 0
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.then4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then4:                                         ; preds = %if.end
  %call5 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 8) #16
  %tobool6.not = icmp eq ptr %call5, null
  br i1 %tobool6.not, label %if.then4.cleanup_crit_edge, label %if.end8

if.then4.cleanup_crit_edge:                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8:                                          ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #18
  %lc_newsize = getelementptr inbounds %struct.nfsd4_layoutcommit, ptr %lcp, i32 0, i32 10
  %6 = ptrtoint ptr %lc_newsize to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %lc_newsize, align 8
  %8 = ptrtoint ptr %call5 to i32
  call void @__asan_storeN_noabort(i32 %8, i32 8)
  store i64 %7, ptr %call5, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.then4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10018, %entry.cleanup_crit_edge ], [ 10018, %if.then4.cleanup_crit_edge ], [ 0, %if.end8 ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_layoutget(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr noundef %lgp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 48) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr = getelementptr i32, ptr %call, i32 1
  %2 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 1, ptr %call, align 4
  %lg_sid = getelementptr inbounds %struct.nfsd4_layoutget, ptr %lgp, i32 0, i32 4
  %3 = ptrtoint ptr %lg_sid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %lg_sid, align 4
  %incdec.ptr2 = getelementptr i32, ptr %call, i32 2
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %incdec.ptr, align 4
  %si_opaque = getelementptr inbounds %struct.nfsd4_layoutget, ptr %lgp, i32 0, i32 4, i32 1
  %call4 = tail call ptr @xdr_encode_opaque_fixed(ptr noundef %incdec.ptr2, ptr noundef %si_opaque, i32 noundef 12) #16
  %incdec.ptr5 = getelementptr i32, ptr %call4, i32 1
  %6 = ptrtoint ptr %call4 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 1, ptr %call4, align 4
  %lg_seg = getelementptr inbounds %struct.nfsd4_layoutget, ptr %lgp, i32 0, i32 5
  %offset = getelementptr inbounds %struct.nfsd4_layoutget, ptr %lgp, i32 0, i32 5, i32 1
  %7 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %offset, align 8
  %9 = ptrtoint ptr %incdec.ptr5 to i32
  call void @__asan_storeN_noabort(i32 %9, i32 8)
  store i64 %8, ptr %incdec.ptr5, align 1
  %add.ptr.i = getelementptr i32, ptr %call4, i32 3
  %length = getelementptr inbounds %struct.nfsd4_layoutget, ptr %lgp, i32 0, i32 5, i32 2
  %10 = ptrtoint ptr %length to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %length, align 8
  %12 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_storeN_noabort(i32 %12, i32 8)
  store i64 %11, ptr %add.ptr.i, align 1
  %add.ptr.i32 = getelementptr i32, ptr %call4, i32 5
  %13 = ptrtoint ptr %lg_seg to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %lg_seg, align 8
  %incdec.ptr10 = getelementptr i32, ptr %call4, i32 6
  %15 = ptrtoint ptr %add.ptr.i32 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %add.ptr.i32, align 4
  %lg_layout_type = getelementptr inbounds %struct.nfsd4_layoutget, ptr %lgp, i32 0, i32 2
  %16 = ptrtoint ptr %lg_layout_type to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %lg_layout_type, align 4
  %18 = ptrtoint ptr %incdec.ptr10 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %incdec.ptr10, align 4
  %19 = load i32, ptr %lg_layout_type, align 4
  %arrayidx = getelementptr [0 x ptr], ptr @nfsd4_layout_ops, i32 0, i32 %19
  %20 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %arrayidx, align 4
  %encode_layoutget = getelementptr inbounds %struct.nfsd4_layout_ops, ptr %21, i32 0, i32 5
  %22 = ptrtoint ptr %encode_layoutget to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %encode_layoutget, align 4
  %call13 = tail call i32 %23(ptr noundef %1, ptr noundef %lgp) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call13, %if.end ], [ 10018, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_layoutreturn(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr noundef %lrp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 4) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %lrs_present = getelementptr inbounds %struct.nfsd4_layoutreturn, ptr %lrp, i32 0, i32 7
  %2 = ptrtoint ptr %lrs_present to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %lrs_present, align 4
  %4 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call, align 4
  %5 = load i32, ptr %lrs_present, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool3.not = icmp eq i32 %5, 0
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.then4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then4:                                         ; preds = %if.end
  %call.i = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.then4.cleanup_crit_edge, label %if.end.i

if.then4.cleanup_crit_edge:                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #18
  %lr_sid = getelementptr inbounds %struct.nfsd4_layoutreturn, ptr %lrp, i32 0, i32 6
  %6 = ptrtoint ptr %lr_sid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %lr_sid, align 4
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %8 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %call.i, align 4
  %si_opaque.i = getelementptr inbounds %struct.nfsd4_layoutreturn, ptr %lrp, i32 0, i32 6, i32 1
  %call1.i = tail call ptr @xdr_encode_opaque_fixed(ptr noundef %incdec.ptr.i, ptr noundef %si_opaque.i, i32 noundef 12) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end.i, %if.then4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10018, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %if.end.i ], [ 10018, %if.then4.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_secinfo_no_name(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef readonly %secinfo) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %sin_exp = getelementptr inbounds %struct.nfsd4_secinfo_no_name, ptr %secinfo, i32 0, i32 1
  %2 = ptrtoint ptr %sin_exp to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %sin_exp, align 4
  %call = tail call fastcc i32 @nfsd4_do_encode_secinfo(ptr noundef %1, ptr noundef %3)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_sequence(ptr nocapture noundef %resp, i32 noundef %nfserr, ptr noundef %seq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 36) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %call2 = tail call ptr @xdr_encode_opaque_fixed(ptr noundef nonnull %call, ptr noundef %seq, i32 noundef 16) #16
  %seqid = getelementptr inbounds %struct.nfsd4_sequence, ptr %seq, i32 0, i32 1
  %2 = ptrtoint ptr %seqid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %seqid, align 4
  %incdec.ptr = getelementptr i32, ptr %call2, i32 1
  %4 = ptrtoint ptr %call2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call2, align 4
  %slotid = getelementptr inbounds %struct.nfsd4_sequence, ptr %seq, i32 0, i32 2
  %5 = ptrtoint ptr %slotid to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %slotid, align 4
  %incdec.ptr3 = getelementptr i32, ptr %call2, i32 2
  %7 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %incdec.ptr, align 4
  %maxslots = getelementptr inbounds %struct.nfsd4_sequence, ptr %seq, i32 0, i32 3
  %8 = ptrtoint ptr %maxslots to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %maxslots, align 4
  %sub = add i32 %9, -1
  %incdec.ptr4 = getelementptr i32, ptr %call2, i32 3
  %10 = ptrtoint ptr %incdec.ptr3 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %sub, ptr %incdec.ptr3, align 4
  %11 = load i32, ptr %maxslots, align 4
  %sub6 = add i32 %11, -1
  %incdec.ptr7 = getelementptr i32, ptr %call2, i32 4
  %12 = ptrtoint ptr %incdec.ptr4 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %sub6, ptr %incdec.ptr4, align 4
  %status_flags = getelementptr inbounds %struct.nfsd4_sequence, ptr %seq, i32 0, i32 5
  %13 = ptrtoint ptr %status_flags to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %status_flags, align 4
  %15 = ptrtoint ptr %incdec.ptr7 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %incdec.ptr7, align 4
  %buf = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 1
  %16 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %buf, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %17, i32 0, i32 8
  %18 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %len, align 4
  %data_offset = getelementptr inbounds %struct.nfsd4_compoundres, ptr %resp, i32 0, i32 6, i32 6
  %20 = ptrtoint ptr %data_offset to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %data_offset, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ 10018, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_test_stateid(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr noundef readonly %test_stateid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %2 = ptrtoint ptr %test_stateid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %test_stateid, align 4
  %mul = shl i32 %3, 2
  %add = add i32 %mul, 4
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef %add) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = ptrtoint ptr %test_stateid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %test_stateid, align 4
  %6 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %call, align 4
  %ts_stateid_list = getelementptr inbounds %struct.nfsd4_test_stateid, ptr %test_stateid, i32 0, i32 1
  %7 = ptrtoint ptr %ts_stateid_list to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ts_stateid_list, align 4
  %cmp.not28 = icmp eq ptr %8, %ts_stateid_list
  br i1 %cmp.not28, label %if.end.cleanup_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end.for.body_crit_edge
  %.pn.in30 = phi ptr [ %.pn, %for.body.for.body_crit_edge ], [ %8, %if.end.for.body_crit_edge ]
  %call.pn29 = phi ptr [ %p.0, %for.body.for.body_crit_edge ], [ %call, %if.end.for.body_crit_edge ]
  %stateid.0 = getelementptr i8, ptr %.pn.in30, i32 -20
  %9 = ptrtoint ptr %.pn.in30 to i32
  call void @__asan_load4_noabort(i32 %9)
  %.pn = load ptr, ptr %.pn.in30, align 4
  %p.0 = getelementptr i32, ptr %call.pn29, i32 1
  %10 = ptrtoint ptr %stateid.0 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %stateid.0, align 4
  %12 = ptrtoint ptr %p.0 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %p.0, align 4
  %cmp.not = icmp eq ptr %.pn, %ts_stateid_list
  br i1 %cmp.not, label %for.body.cleanup_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %for.body.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10018, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %for.body.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_copy(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr noundef %copy) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %cp_res = getelementptr inbounds %struct.nfsd4_copy, ptr %copy, i32 0, i32 8
  %cp_synchronous = getelementptr inbounds %struct.nfsd4_copy, ptr %copy, i32 0, i32 7
  %0 = ptrtoint ptr %cp_synchronous to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %cp_synchronous, align 8
  %2 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %resp, align 8
  %call.i = tail call ptr @xdr_reserve_space(ptr noundef %3, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.else.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %4 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %call.i, align 4
  br label %if.end9.i

if.else.i:                                        ; preds = %if.end.i
  %5 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 1, ptr %call.i, align 4
  %6 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %resp, align 8
  %call.i.i = tail call ptr @xdr_reserve_space(ptr noundef %7, i32 noundef 16) #16
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.else.i.cleanup_crit_edge, label %nfsd4_encode_stateid.exit.thread.i

if.else.i.cleanup_crit_edge:                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

nfsd4_encode_stateid.exit.thread.i:               ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  %cb_stateid.i = getelementptr inbounds %struct.nfsd4_copy, ptr %copy, i32 0, i32 8, i32 3
  %8 = ptrtoint ptr %cb_stateid.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cb_stateid.i, align 4
  %incdec.ptr.i.i = getelementptr i32, ptr %call.i.i, i32 1
  %10 = ptrtoint ptr %call.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %call.i.i, align 4
  %si_opaque.i.i = getelementptr inbounds %struct.nfsd4_copy, ptr %copy, i32 0, i32 8, i32 3, i32 1
  %call1.i.i = tail call ptr @xdr_encode_opaque_fixed(ptr noundef %incdec.ptr.i.i, ptr noundef %si_opaque.i.i, i32 noundef 12) #16
  br label %if.end9.i

if.end9.i:                                        ; preds = %nfsd4_encode_stateid.exit.thread.i, %if.then2.i
  %11 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %resp, align 8
  %call11.i = tail call ptr @xdr_reserve_space(ptr noundef %12, i32 noundef 20) #16
  %tobool12.not.i = icmp eq ptr %call11.i, null
  br i1 %tobool12.not.i, label %if.end9.i.cleanup_crit_edge, label %if.end

if.end9.i.cleanup_crit_edge:                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #18
  %13 = ptrtoint ptr %cp_res to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %cp_res, align 8
  %15 = ptrtoint ptr %call11.i to i32
  call void @__asan_storeN_noabort(i32 %15, i32 8)
  store i64 %14, ptr %call11.i, align 1
  %add.ptr.i.i = getelementptr i32, ptr %call11.i, i32 2
  %wr_stable_how.i = getelementptr inbounds %struct.nfsd4_copy, ptr %copy, i32 0, i32 8, i32 1
  %16 = ptrtoint ptr %wr_stable_how.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %wr_stable_how.i, align 8
  %incdec.ptr16.i = getelementptr i32, ptr %call11.i, i32 3
  %18 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %add.ptr.i.i, align 4
  %wr_verifier.i = getelementptr inbounds %struct.nfsd4_copy, ptr %copy, i32 0, i32 8, i32 2
  %call17.i = tail call ptr @xdr_encode_opaque_fixed(ptr noundef %incdec.ptr16.i, ptr noundef %wr_verifier.i, i32 noundef 8) #16
  %19 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %resp, align 8
  %call3 = tail call ptr @xdr_reserve_space(ptr noundef %20, i32 noundef 8) #16
  %incdec.ptr = getelementptr i32, ptr %call3, i32 1
  %21 = ptrtoint ptr %call3 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 1, ptr %call3, align 4
  %22 = ptrtoint ptr %cp_synchronous to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %cp_synchronous, align 8
  %24 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %incdec.ptr, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.end9.i.cleanup_crit_edge, %if.else.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ 10018, %entry.cleanup_crit_edge ], [ 10018, %if.end9.i.cleanup_crit_edge ], [ 10018, %if.else.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_copy_notify(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr noundef %cn) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nfserr)
  %tobool.not = icmp eq i32 %nfserr, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 12) #16
  %tobool2.not = icmp eq ptr %call, null
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %cpn_sec = getelementptr inbounds %struct.nfsd4_copy_notify, ptr %cn, i32 0, i32 3
  %2 = ptrtoint ptr %cpn_sec to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %cpn_sec, align 8
  %4 = ptrtoint ptr %call to i32
  call void @__asan_storeN_noabort(i32 %4, i32 8)
  store i64 %3, ptr %call, align 1
  %add.ptr.i = getelementptr i32, ptr %call, i32 2
  %cpn_nsec = getelementptr inbounds %struct.nfsd4_copy_notify, ptr %cn, i32 0, i32 4
  %5 = ptrtoint ptr %cpn_nsec to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cpn_nsec, align 8
  %7 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %add.ptr.i, align 4
  %call.i = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end4.cleanup_crit_edge, label %if.end9

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end9:                                          ; preds = %if.end4
  %cpn_cnr_stateid = getelementptr inbounds %struct.nfsd4_copy_notify, ptr %cn, i32 0, i32 2
  %8 = ptrtoint ptr %cpn_cnr_stateid to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cpn_cnr_stateid, align 4
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %10 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %call.i, align 4
  %si_opaque.i = getelementptr inbounds %struct.nfsd4_copy_notify, ptr %cn, i32 0, i32 2, i32 1
  %call1.i = tail call ptr @xdr_encode_opaque_fixed(ptr noundef %incdec.ptr.i, ptr noundef %si_opaque.i, i32 noundef 12) #16
  %call10 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 4) #16
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %if.end9.cleanup_crit_edge, label %if.end13

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end13:                                         ; preds = %if.end9
  %11 = ptrtoint ptr %call10 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 1, ptr %call10, align 4
  %cpn_src = getelementptr inbounds %struct.nfsd4_copy_notify, ptr %cn, i32 0, i32 5
  %12 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %resp, align 8
  %call.i30 = tail call ptr @xdr_reserve_space(ptr noundef %13, i32 noundef 4) #16
  %14 = ptrtoint ptr %cpn_src to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cpn_src, align 4
  %16 = ptrtoint ptr %call.i30 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %call.i30, align 4
  %17 = load i32, ptr %cpn_src, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %17)
  %cond.i = icmp eq i32 %17, 3
  br i1 %cond.i, label %sw.bb.i, label %land.end.i

sw.bb.i:                                          ; preds = %if.end13
  %netid_len.i = getelementptr inbounds %struct.nfsd4_copy_notify, ptr %cn, i32 0, i32 5, i32 1, i32 0, i32 1, i32 60
  %18 = ptrtoint ptr %netid_len.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %netid_len.i, align 4
  %20 = add i32 %19, 11
  %add4.i = and i32 %20, -4
  %addr_len.i = getelementptr inbounds %struct.nfsd4_copy_notify, ptr %cn, i32 0, i32 5, i32 1, i32 0, i32 1, i32 64
  %21 = ptrtoint ptr %addr_len.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %addr_len.i, align 4
  %add5.i = add i32 %22, 3
  %shr6.i = and i32 %add5.i, -4
  %add8.i = add i32 %shr6.i, %add4.i
  %call9.i = tail call ptr @xdr_reserve_space(ptr noundef %13, i32 noundef %add8.i) #16
  %tobool.not.i31 = icmp eq ptr %call9.i, null
  br i1 %tobool.not.i31, label %sw.bb.i.cleanup_crit_edge, label %if.end.i32

sw.bb.i.cleanup_crit_edge:                        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i32:                                       ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  %u.i = getelementptr inbounds %struct.nfsd4_copy_notify, ptr %cn, i32 0, i32 5, i32 1
  %23 = ptrtoint ptr %netid_len.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %netid_len.i, align 4
  %incdec.ptr11.i = getelementptr i32, ptr %call9.i, i32 1
  %25 = ptrtoint ptr %call9.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %call9.i, align 4
  %26 = load i32, ptr %netid_len.i, align 4
  %call13.i = tail call ptr @xdr_encode_opaque_fixed(ptr noundef %incdec.ptr11.i, ptr noundef %u.i, i32 noundef %26) #16
  %27 = ptrtoint ptr %addr_len.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %addr_len.i, align 4
  %incdec.ptr15.i = getelementptr i32, ptr %call13.i, i32 1
  %29 = ptrtoint ptr %call13.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %call13.i, align 4
  %addr16.i = getelementptr inbounds %struct.nfsd4_copy_notify, ptr %cn, i32 0, i32 5, i32 1, i32 0, i32 1, i32 1
  %30 = load i32, ptr %addr_len.i, align 4
  %call19.i = tail call ptr @xdr_encode_opaque_fixed(ptr noundef %incdec.ptr15.i, ptr noundef %addr16.i, i32 noundef %30) #16
  br label %cleanup

land.end.i:                                       ; preds = %if.end13
  %.b78.i = load i1, ptr @nfsd42_encode_nl4_server.__already_done, align 1
  br i1 %.b78.i, label %land.end.i.cleanup_crit_edge, label %if.then28.i, !prof !104

land.end.i.cleanup_crit_edge:                     ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then28.i:                                      ; preds = %land.end.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @nfsd42_encode_nl4_server.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str, i32 noundef 4685, i32 noundef 9, ptr noundef null) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then28.i, %land.end.i.cleanup_crit_edge, %if.end.i32, %sw.bb.i.cleanup_crit_edge, %if.end9.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %nfserr, %entry.cleanup_crit_edge ], [ 10018, %if.end.cleanup_crit_edge ], [ 10018, %if.end9.cleanup_crit_edge ], [ 10018, %if.end4.cleanup_crit_edge ], [ 0, %if.end.i32 ], [ 10018, %sw.bb.i.cleanup_crit_edge ], [ 22, %if.then28.i ], [ 22, %land.end.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_offload_status(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef readonly %os) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 12) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %count = getelementptr inbounds %struct.nfsd4_offload_status, ptr %os, i32 0, i32 1
  %2 = ptrtoint ptr %count to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %count, align 8
  %4 = ptrtoint ptr %call to i32
  call void @__asan_storeN_noabort(i32 %4, i32 8)
  store i64 %3, ptr %call, align 1
  %add.ptr.i = getelementptr i32, ptr %call, i32 2
  %5 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %add.ptr.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %nfserr, %if.end ], [ 10018, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_read_plus(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef %read) #0 align 64 {
entry:
  %f_size.i = alloca i64, align 8
  %maxcount = alloca i32, align 4
  %tmp = alloca i32, align 4
  %pos = alloca i64, align 8
  %eof = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %maxcount) #16
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %buf = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %buf, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp) #16
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %pos) #16
  %6 = ptrtoint ptr %pos to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 -1, ptr %pos, align 8, !annotation !103
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %eof) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nfserr)
  %tobool.not = icmp eq i32 %nfserr, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %rd_nf = getelementptr inbounds %struct.nfsd4_read, ptr %read, i32 0, i32 4
  %7 = ptrtoint ptr %rd_nf to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %rd_nf, align 8
  %nf_file = getelementptr inbounds %struct.nfsd_file, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %nf_file to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %nf_file, align 4
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 8) #16
  %tobool4.not = icmp eq ptr %call, null
  br i1 %tobool4.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end6:                                          ; preds = %if.end
  tail call void @xdr_commit_encode(ptr noundef %1) #16
  %rd_length = getelementptr inbounds %struct.nfsd4_read, ptr %read, i32 0, i32 2
  %11 = ptrtoint ptr %rd_length to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %rd_length, align 8
  %13 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %buf, align 4
  %buflen = getelementptr inbounds %struct.xdr_buf, ptr %14, i32 0, i32 7
  %15 = ptrtoint ptr %buflen to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %buflen, align 4
  %len9 = getelementptr inbounds %struct.xdr_buf, ptr %14, i32 0, i32 8
  %17 = ptrtoint ptr %len9 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %len9, align 4
  %sub = sub i32 %16, %18
  %19 = tail call i32 @llvm.umin.i32(i32 %12, i32 %sub)
  %20 = ptrtoint ptr %maxcount to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %maxcount, align 4
  %rd_offset = getelementptr inbounds %struct.nfsd4_read, ptr %read, i32 0, i32 1
  %21 = ptrtoint ptr %rd_offset to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %rd_offset, align 8
  %f_inode.i = getelementptr inbounds %struct.file, ptr %10, i32 0, i32 2
  %23 = ptrtoint ptr %f_inode.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %f_inode.i, align 8
  %call12 = tail call fastcc i64 @i_size_read(ptr noundef %24)
  call void @__sanitizer_cov_trace_cmp8(i64 %22, i64 %call12)
  %cmp13 = icmp uge i64 %22, %call12
  %conv = zext i1 %cmp13 to i32
  %25 = ptrtoint ptr %eof to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %conv, ptr %eof, align 4
  br i1 %cmp13, label %if.end6.if.end54_crit_edge, label %if.end16

if.end6.if.end54_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end54

if.end16:                                         ; preds = %if.end6
  %26 = ptrtoint ptr %rd_offset to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %rd_offset, align 8
  %call18 = tail call i64 @vfs_llseek(ptr noundef %10, i64 noundef %27, i32 noundef 4) #16
  %28 = ptrtoint ptr %pos to i32
  call void @__asan_store8_noabort(i32 %28)
  store i64 %call18, ptr %pos, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %cmp22.not123 = icmp eq i32 %19, 0
  br i1 %cmp22.not123, label %if.end16.if.end54_crit_edge, label %land.rhs.preheader

if.end16.if.end54_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end54

land.rhs.preheader:                               ; preds = %if.end16
  %29 = ptrtoint ptr %rd_offset to i32
  call void @__asan_load8_noabort(i32 %29)
  %30 = load i64, ptr %rd_offset, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %call18, i64 %30)
  %cmp20 = icmp ugt i64 %call18, %30
  br label %land.rhs

land.rhs:                                         ; preds = %if.end38.land.rhs_crit_edge, %land.rhs.preheader
  %is_data.0.in127 = phi i1 [ %lnot43, %if.end38.land.rhs_crit_edge ], [ %cmp20, %land.rhs.preheader ]
  %segments.0126 = phi i32 [ %inc, %if.end38.land.rhs_crit_edge ], [ 0, %land.rhs.preheader ]
  %last_segment.0125 = phi i32 [ %70, %if.end38.land.rhs_crit_edge ], [ %5, %land.rhs.preheader ]
  %count.0124 = phi i32 [ %sub39, %if.end38.land.rhs_crit_edge ], [ %19, %land.rhs.preheader ]
  %31 = ptrtoint ptr %eof to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %eof, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool24.not = icmp eq i32 %32, 0
  br i1 %tobool24.not, label %while.body, label %land.rhs.if.end54_crit_edge

land.rhs.if.end54_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end54

while.body:                                       ; preds = %land.rhs
  %33 = ptrtoint ptr %maxcount to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %count.0124, ptr %maxcount, align 4
  br i1 %is_data.0.in127, label %if.then26, label %if.else

if.then26:                                        ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %segments.0126)
  %cmp27 = icmp eq i32 %segments.0126, 0
  %pos. = select i1 %cmp27, ptr %pos, ptr null
  %call33 = call fastcc i32 @nfsd4_encode_read_plus_data(ptr noundef %resp, ptr noundef %read, ptr noundef nonnull %maxcount, ptr noundef nonnull %eof, ptr noundef %pos.)
  br label %if.end35

if.else:                                          ; preds = %while.body
  %34 = ptrtoint ptr %rd_nf to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %rd_nf, align 8
  %nf_file.i = getelementptr inbounds %struct.nfsd_file, ptr %35, i32 0, i32 3
  %36 = ptrtoint ptr %nf_file.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %nf_file.i, align 4
  %38 = ptrtoint ptr %rd_offset to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %rd_offset, align 8
  %call.i = call i64 @vfs_llseek(ptr noundef %37, i64 noundef %39, i32 noundef 3) #16
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %f_size.i) #16
  %f_inode.i.i = getelementptr inbounds %struct.file, ptr %37, i32 0, i32 2
  %40 = ptrtoint ptr %f_inode.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %f_inode.i.i, align 8
  %call2.i = call fastcc i64 @i_size_read(ptr noundef %41) #16
  %42 = ptrtoint ptr %f_size.i to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 %call2.i, ptr %f_size.i, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 -6, i64 %call.i)
  %cmp.i = icmp eq i64 %call.i, -6
  br i1 %cmp.i, label %if.else.if.end8.i_crit_edge, label %if.else.i

if.else.if.end8.i_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8.i

if.else.i:                                        ; preds = %if.else
  %43 = ptrtoint ptr %rd_offset to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %rd_offset, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %call.i, i64 %44)
  %cmp4.not.i = icmp ugt i64 %call.i, %44
  br i1 %cmp4.not.i, label %lor.lhs.false.i, label %if.else.i.if.then6.i_crit_edge

if.else.i.if.then6.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then6.i

lor.lhs.false.i:                                  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_cmp8(i64 %call.i, i64 %call2.i)
  %cmp5.i = icmp sge i64 %call.i, %call2.i
  %45 = and i64 %call.i, 4095
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %45)
  %tobool.not.i = icmp eq i64 %45, 0
  %or.cond.i = or i1 %tobool.not.i, %cmp5.i
  br i1 %or.cond.i, label %lor.lhs.false.i.if.end8.i_crit_edge, label %lor.lhs.false.i.if.then6.i_crit_edge

lor.lhs.false.i.if.then6.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then6.i

lor.lhs.false.i.if.end8.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8.i

if.then6.i:                                       ; preds = %lor.lhs.false.i.if.then6.i_crit_edge, %if.else.i.if.then6.i_crit_edge
  %call7.i = call fastcc i32 @nfsd4_encode_read_plus_data(ptr noundef %resp, ptr noundef %read, ptr noundef nonnull %maxcount, ptr noundef nonnull %eof, ptr noundef nonnull %f_size.i) #16
  br label %nfsd4_encode_read_plus_hole.exit

if.end8.i:                                        ; preds = %lor.lhs.false.i.if.end8.i_crit_edge, %if.else.if.end8.i_crit_edge
  %data_pos.0.i = phi i64 [ %call.i, %lor.lhs.false.i.if.end8.i_crit_edge ], [ %call2.i, %if.else.if.end8.i_crit_edge ]
  %46 = ptrtoint ptr %rd_offset to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %rd_offset, align 8
  %48 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %resp, align 8
  %call10.i = call ptr @xdr_reserve_space(ptr noundef %49, i32 noundef 20) #16
  %tobool11.not.i = icmp eq ptr %call10.i, null
  br i1 %tobool11.not.i, label %if.end8.i.nfsd4_encode_read_plus_hole.exit_crit_edge, label %if.end13.i

if.end8.i.nfsd4_encode_read_plus_hole.exit_crit_edge: ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_encode_read_plus_hole.exit

if.end13.i:                                       ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #18
  %sub.i = sub i64 %data_pos.0.i, %47
  %conv.i = trunc i64 %sub.i to i32
  %incdec.ptr.i = getelementptr i32, ptr %call10.i, i32 1
  %50 = ptrtoint ptr %call10.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 1, ptr %call10.i, align 4
  %51 = ptrtoint ptr %rd_offset to i32
  call void @__asan_load8_noabort(i32 %51)
  %52 = load i64, ptr %rd_offset, align 8
  %53 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_storeN_noabort(i32 %53, i32 8)
  store i64 %52, ptr %incdec.ptr.i, align 1
  %add.ptr.i.i = getelementptr i32, ptr %call10.i, i32 3
  %conv16.i = and i64 %sub.i, 4294967295
  %54 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_storeN_noabort(i32 %54, i32 8)
  store i64 %conv16.i, ptr %add.ptr.i.i, align 1
  %55 = load i64, ptr %rd_offset, align 8
  %add.i = add i64 %55, %conv16.i
  %56 = ptrtoint ptr %f_size.i to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %f_size.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %add.i, i64 %57)
  %cmp20.i = icmp uge i64 %add.i, %57
  %conv21.i = zext i1 %cmp20.i to i32
  %58 = ptrtoint ptr %eof to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %conv21.i, ptr %eof, align 4
  %59 = ptrtoint ptr %maxcount to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %maxcount, align 4
  %61 = call i32 @llvm.umin.i32(i32 %60, i32 %conv.i) #16
  %62 = ptrtoint ptr %maxcount to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %61, ptr %maxcount, align 4
  br label %nfsd4_encode_read_plus_hole.exit

nfsd4_encode_read_plus_hole.exit:                 ; preds = %if.end13.i, %if.end8.i.nfsd4_encode_read_plus_hole.exit_crit_edge, %if.then6.i
  %retval.0.i = phi i32 [ 0, %if.end13.i ], [ %call7.i, %if.then6.i ], [ 10018, %if.end8.i.nfsd4_encode_read_plus_hole.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %f_size.i) #16
  br label %if.end35

if.end35:                                         ; preds = %nfsd4_encode_read_plus_hole.exit, %if.then26
  %nfserr.addr.1 = phi i32 [ %call33, %if.then26 ], [ %retval.0.i, %nfsd4_encode_read_plus_hole.exit ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nfserr.addr.1)
  %tobool36.not = icmp eq i32 %nfserr.addr.1, 0
  br i1 %tobool36.not, label %if.end38, label %out

if.end38:                                         ; preds = %if.end35
  %63 = ptrtoint ptr %maxcount to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %maxcount, align 4
  %sub39 = sub i32 %count.0124, %64
  %conv40 = zext i32 %64 to i64
  %65 = ptrtoint ptr %rd_offset to i32
  call void @__asan_load8_noabort(i32 %65)
  %66 = load i64, ptr %rd_offset, align 8
  %add = add i64 %66, %conv40
  store i64 %add, ptr %rd_offset, align 8
  %lnot43 = xor i1 %is_data.0.in127, true
  %67 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %buf, align 4
  %len46 = getelementptr inbounds %struct.xdr_buf, ptr %68, i32 0, i32 8
  %69 = ptrtoint ptr %len46 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %len46, align 4
  %inc = add i32 %segments.0126, 1
  %cmp22.not = icmp eq i32 %sub39, 0
  br i1 %cmp22.not, label %if.end38.if.end54_crit_edge, label %if.end38.land.rhs_crit_edge

if.end38.land.rhs_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs

if.end38.if.end54_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end54

out:                                              ; preds = %if.end35
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %segments.0126)
  %cmp48 = icmp eq i32 %segments.0126, 0
  br i1 %cmp48, label %if.then50, label %if.then53

if.then50:                                        ; preds = %out
  call void @__sanitizer_cov_trace_pc() #18
  call void @xdr_truncate_encode(ptr noundef %1, i32 noundef %5) #16
  br label %cleanup

if.then53:                                        ; preds = %out
  call void @__sanitizer_cov_trace_pc() #18
  call void @xdr_truncate_encode(ptr noundef %1, i32 noundef %last_segment.0125) #16
  %71 = ptrtoint ptr %eof to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 0, ptr %eof, align 4
  br label %if.end54

if.end54:                                         ; preds = %if.then53, %if.end38.if.end54_crit_edge, %land.rhs.if.end54_crit_edge, %if.end16.if.end54_crit_edge, %if.end6.if.end54_crit_edge
  %segments.1115120 = phi i32 [ %segments.0126, %if.then53 ], [ 0, %if.end6.if.end54_crit_edge ], [ 0, %if.end16.if.end54_crit_edge ], [ %inc, %if.end38.if.end54_crit_edge ], [ %segments.0126, %land.rhs.if.end54_crit_edge ]
  %72 = ptrtoint ptr %eof to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %eof, align 4
  %74 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %73, ptr %tmp, align 4
  %75 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %buf, align 4
  %call56 = call i32 @write_bytes_to_xdr_buf(ptr noundef %76, i32 noundef %5, ptr noundef nonnull %tmp, i32 noundef 4) #16
  %77 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 %segments.1115120, ptr %tmp, align 4
  %78 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %buf, align 4
  %add58 = add i32 %5, 4
  %call59 = call i32 @write_bytes_to_xdr_buf(ptr noundef %79, i32 noundef %add58, ptr noundef nonnull %tmp, i32 noundef 4) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end54, %if.then50, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %nfserr, %entry.cleanup_crit_edge ], [ 10018, %if.end.cleanup_crit_edge ], [ %nfserr.addr.1, %if.then50 ], [ 0, %if.end54 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %eof) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %pos) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %maxcount) #16
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_seek(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef readonly %seek) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 12) #16
  %seek_eof = getelementptr inbounds %struct.nfsd4_seek, ptr %seek, i32 0, i32 3
  %2 = ptrtoint ptr %seek_eof to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %seek_eof, align 4
  %incdec.ptr = getelementptr i32, ptr %call, i32 1
  %4 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call, align 4
  %seek_pos = getelementptr inbounds %struct.nfsd4_seek, ptr %seek, i32 0, i32 4
  %5 = ptrtoint ptr %seek_pos to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %seek_pos, align 8
  %7 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_storeN_noabort(i32 %7, i32 8)
  store i64 %6, ptr %incdec.ptr, align 1
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_getxattr(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef readonly %getxattr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 4) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %getxa_len = getelementptr inbounds %struct.nfsd4_getxattr, ptr %getxattr, i32 0, i32 1
  %2 = ptrtoint ptr %getxa_len to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %getxa_len, align 4
  %4 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call, align 4
  %5 = load i32, ptr %getxa_len, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp = icmp eq i32 %5, 0
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %getxa_buf = getelementptr inbounds %struct.nfsd4_getxattr, ptr %getxattr, i32 0, i32 2
  %6 = ptrtoint ptr %getxa_buf to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %getxa_buf, align 4
  %end.i = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 2
  %8 = ptrtoint ptr %end.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %end.i, align 4
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %1, align 4
  %sub.ptr.lhs.cast.i = ptrtoint ptr %9 to i32
  %sub.ptr.rhs.cast.i = ptrtoint ptr %11 to i32
  %sub.ptr.sub.i = sub i32 %sub.ptr.lhs.cast.i, %sub.ptr.rhs.cast.i
  %12 = tail call i32 @llvm.umin.i32(i32 %sub.ptr.sub.i, i32 %5) #16
  %call.i = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef %12) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end4.nfsd4_vbuf_to_stream.exit_crit_edge, label %if.end.i

if.end4.nfsd4_vbuf_to_stream.exit_crit_edge:      ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_vbuf_to_stream.exit

if.end.i:                                         ; preds = %if.end4
  %13 = call ptr @memcpy(ptr %call.i, ptr %7, i32 %12)
  %sub.i = sub i32 %5, %12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %tobool2.not45.i = icmp eq i32 %sub.i, 0
  br i1 %tobool2.not45.i, label %if.end.i.nfsd4_vbuf_to_stream.exit_crit_edge, label %while.body.preheader.i

if.end.i.nfsd4_vbuf_to_stream.exit_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_vbuf_to_stream.exit

while.body.preheader.i:                           ; preds = %if.end.i
  %add.ptr.i = getelementptr i8, ptr %7, i32 %12
  br label %while.body.i

while.body.i:                                     ; preds = %if.end16.i.while.body.i_crit_edge, %while.body.preheader.i
  %buf.addr.047.i = phi ptr [ %add.ptr18.i, %if.end16.i.while.body.i_crit_edge ], [ %add.ptr.i, %while.body.preheader.i ]
  %buflen.addr.046.i = phi i32 [ %sub17.i, %if.end16.i.while.body.i_crit_edge ], [ %sub.i, %while.body.preheader.i ]
  %14 = tail call i32 @llvm.umin.i32(i32 %buflen.addr.046.i, i32 4096) #16
  %call9.i = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef %14) #16
  %tobool10.not.i = icmp eq ptr %call9.i, null
  br i1 %tobool10.not.i, label %while.body.i.nfsd4_vbuf_to_stream.exit_crit_edge, label %if.end12.i

while.body.i.nfsd4_vbuf_to_stream.exit_crit_edge: ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_vbuf_to_stream.exit

if.end12.i:                                       ; preds = %while.body.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %buflen.addr.046.i)
  %cmp4.i = icmp ult i32 %buflen.addr.046.i, 4096
  %15 = call ptr @memcpy(ptr %call9.i, ptr %buf.addr.047.i, i32 %14)
  br i1 %cmp4.i, label %if.then14.i, label %if.end16.i

if.then14.i:                                      ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #18
  %call15.i = tail call ptr @xdr_encode_opaque_fixed(ptr noundef nonnull %call9.i, ptr noundef null, i32 noundef %14) #16
  br label %nfsd4_vbuf_to_stream.exit

if.end16.i:                                       ; preds = %if.end12.i
  %sub17.i = add i32 %buflen.addr.046.i, -4096
  %add.ptr18.i = getelementptr i8, ptr %buf.addr.047.i, i32 4096
  %tobool2.not.i = icmp eq i32 %sub17.i, 0
  br i1 %tobool2.not.i, label %if.end16.i.nfsd4_vbuf_to_stream.exit_crit_edge, label %if.end16.i.while.body.i_crit_edge

if.end16.i.while.body.i_crit_edge:                ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body.i

if.end16.i.nfsd4_vbuf_to_stream.exit_crit_edge:   ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_vbuf_to_stream.exit

nfsd4_vbuf_to_stream.exit:                        ; preds = %if.end16.i.nfsd4_vbuf_to_stream.exit_crit_edge, %if.then14.i, %while.body.i.nfsd4_vbuf_to_stream.exit_crit_edge, %if.end.i.nfsd4_vbuf_to_stream.exit_crit_edge, %if.end4.nfsd4_vbuf_to_stream.exit_crit_edge
  %retval.0.i = phi i32 [ 10018, %if.end4.nfsd4_vbuf_to_stream.exit_crit_edge ], [ 0, %if.then14.i ], [ 0, %if.end.i.nfsd4_vbuf_to_stream.exit_crit_edge ], [ 0, %if.end16.i.nfsd4_vbuf_to_stream.exit_crit_edge ], [ 10018, %while.body.i.nfsd4_vbuf_to_stream.exit_crit_edge ]
  %16 = ptrtoint ptr %getxa_buf to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %getxa_buf, align 4
  tail call void @kvfree(ptr noundef %17) #16
  br label %cleanup

cleanup:                                          ; preds = %nfsd4_vbuf_to_stream.exit, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i, %nfsd4_vbuf_to_stream.exit ], [ 10018, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_setxattr(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef readonly %setxattr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 20) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %setxa_cinfo = getelementptr inbounds %struct.nfsd4_setxattr, ptr %setxattr, i32 0, i32 4
  %2 = ptrtoint ptr %setxa_cinfo to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %setxa_cinfo, align 8
  %incdec.ptr.i = getelementptr i32, ptr %call, i32 1
  %4 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call, align 4
  %before_change.i = getelementptr inbounds %struct.nfsd4_setxattr, ptr %setxattr, i32 0, i32 4, i32 1
  %5 = ptrtoint ptr %before_change.i to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %before_change.i, align 8
  %7 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_storeN_noabort(i32 %7, i32 8)
  store i64 %6, ptr %incdec.ptr.i, align 1
  %add.ptr.i.i = getelementptr i32, ptr %call, i32 3
  %after_change.i = getelementptr inbounds %struct.nfsd4_setxattr, ptr %setxattr, i32 0, i32 4, i32 2
  %8 = ptrtoint ptr %after_change.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %after_change.i, align 8
  %10 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_storeN_noabort(i32 %10, i32 8)
  store i64 %9, ptr %add.ptr.i.i, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ 10018, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_listxattrs(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef readonly %listxattrs) #0 align 64 {
entry:
  %cookie = alloca i64, align 8
  %tmp = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %cookie) #16
  %2 = ptrtoint ptr %cookie to i32
  call void @__asan_store8_noabort(i32 %2)
  store i64 -1, ptr %cookie, align 8, !annotation !103
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp) #16
  %3 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %tmp, align 4, !annotation !103
  %4 = ptrtoint ptr %listxattrs to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %listxattrs, align 8
  %lsxa_len.i = getelementptr inbounds %struct.nfsd4_listxattrs, ptr %listxattrs, i32 0, i32 3
  %6 = ptrtoint ptr %lsxa_len.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %lsxa_len.i, align 8
  %div.i = udiv i32 %7, 7
  %conv.i = zext i32 %div.i to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %5, i64 %conv.i)
  %cmp.i = icmp ugt i64 %5, %conv.i
  br i1 %cmp.i, label %entry.out_crit_edge, label %if.end.i

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %out

if.end.i:                                         ; preds = %entry
  %lsxa_maxcount.i = getelementptr inbounds %struct.nfsd4_listxattrs, ptr %listxattrs, i32 0, i32 1
  %8 = ptrtoint ptr %lsxa_maxcount.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %lsxa_maxcount.i, align 8
  %div2.i = udiv i32 %9, 6
  %conv3.i = zext i32 %div2.i to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %5, i64 %conv3.i)
  %cmp4.i = icmp ugt i64 %5, %conv3.i
  br i1 %cmp4.i, label %if.end.i.outthread-pre-split_crit_edge, label %if.end

if.end.i.outthread-pre-split_crit_edge:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %outthread-pre-split

if.end:                                           ; preds = %if.end.i
  %conv8.i = trunc i64 %5 to i32
  %buf = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 1
  %10 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %buf, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %11, i32 0, i32 8
  %12 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %len, align 4
  %add = add i32 %13, 8
  %call2 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 12) #16
  %tobool3.not = icmp eq ptr %call2, null
  br i1 %tobool3.not, label %if.end.outthread-pre-split_crit_edge, label %if.end5

if.end.outthread-pre-split_crit_edge:             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %outthread-pre-split

if.end5:                                          ; preds = %if.end
  %14 = ptrtoint ptr %lsxa_len.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %lsxa_len.i, align 8
  %16 = ptrtoint ptr %lsxa_maxcount.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %lsxa_maxcount.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp.not98 = icmp eq i32 %15, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp6.not99 = icmp eq i32 %17, 0
  %or.cond100 = select i1 %cmp.not98, i1 true, i1 %cmp6.not99
  br i1 %or.cond100, label %if.end5.wreof_crit_edge, label %while.body.preheader

if.end5.wreof_crit_edge:                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %wreof

while.body.preheader:                             ; preds = %if.end5
  %lsxa_buf = getelementptr inbounds %struct.nfsd4_listxattrs, ptr %listxattrs, i32 0, i32 2
  %18 = ptrtoint ptr %lsxa_buf to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %lsxa_buf, align 4
  br label %while.body

while.body:                                       ; preds = %contloop.while.body_crit_edge, %while.body.preheader
  %nuser.0105 = phi i32 [ %nuser.1, %contloop.while.body_crit_edge ], [ 0, %while.body.preheader ]
  %sp.0104 = phi ptr [ %add.ptr32, %contloop.while.body_crit_edge ], [ %19, %while.body.preheader ]
  %count.0103 = phi i32 [ %count.1, %contloop.while.body_crit_edge ], [ 0, %while.body.preheader ]
  %xdrleft.0102 = phi i32 [ %xdrleft.1, %contloop.while.body_crit_edge ], [ %17, %while.body.preheader ]
  %left.0101 = phi i32 [ %sub34, %contloop.while.body_crit_edge ], [ %15, %while.body.preheader ]
  %call7 = tail call i32 @strlen(ptr noundef %sp.0104) #23
  %call8 = tail call i32 @strncmp(ptr noundef %sp.0104, ptr noundef nonnull dereferenceable(6) @.str.1, i32 noundef 5)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.end11, label %while.body.contloop_crit_edge

while.body.contloop_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %contloop

if.end11:                                         ; preds = %while.body
  %sub = add i32 %call7, -5
  %20 = add i32 %call7, 2
  %add13 = and i32 %20, -4
  call void @__sanitizer_cov_trace_cmp4(i32 %xdrleft.0102, i32 %add13)
  %cmp14 = icmp ult i32 %xdrleft.0102, %add13
  br i1 %cmp14, label %if.then15, label %if.end19

if.then15:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count.0103)
  %cmp16 = icmp eq i32 %count.0103, 0
  br i1 %cmp16, label %if.then15.outthread-pre-split_crit_edge, label %if.then15.wreof_crit_edge

if.then15.wreof_crit_edge:                        ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #18
  br label %wreof

if.then15.outthread-pre-split_crit_edge:          ; preds = %if.then15
  call void @__sanitizer_cov_trace_pc() #18
  br label %outthread-pre-split

if.end19:                                         ; preds = %if.end11
  %sub20 = add i32 %left.0101, -5
  %add.ptr = getelementptr i8, ptr %sp.0104, i32 5
  %inc = add i32 %nuser.0105, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %nuser.0105, i32 %conv8.i)
  %cmp21 = icmp ult i32 %nuser.0105, %conv8.i
  br i1 %cmp21, label %if.end19.contloop_crit_edge, label %if.end23

if.end19.contloop_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #18
  br label %contloop

if.end23:                                         ; preds = %if.end19
  %call24 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef %add13) #16
  %tobool25.not = icmp eq ptr %call24, null
  br i1 %tobool25.not, label %if.end23.outthread-pre-split_crit_edge, label %if.end27

if.end23.outthread-pre-split_crit_edge:           ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #18
  br label %outthread-pre-split

if.end27:                                         ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #18
  %call28 = tail call ptr @xdr_encode_opaque(ptr noundef nonnull %call24, ptr noundef %add.ptr, i32 noundef %sub) #16
  %sub29 = sub i32 %xdrleft.0102, %add13
  %inc30 = add i32 %count.0103, 1
  br label %contloop

contloop:                                         ; preds = %if.end27, %if.end19.contloop_crit_edge, %while.body.contloop_crit_edge
  %left.1 = phi i32 [ %left.0101, %while.body.contloop_crit_edge ], [ %sub20, %if.end19.contloop_crit_edge ], [ %sub20, %if.end27 ]
  %xdrleft.1 = phi i32 [ %xdrleft.0102, %while.body.contloop_crit_edge ], [ %xdrleft.0102, %if.end19.contloop_crit_edge ], [ %sub29, %if.end27 ]
  %slen.0 = phi i32 [ %call7, %while.body.contloop_crit_edge ], [ %sub, %if.end19.contloop_crit_edge ], [ %sub, %if.end27 ]
  %count.1 = phi i32 [ %count.0103, %while.body.contloop_crit_edge ], [ %count.0103, %if.end19.contloop_crit_edge ], [ %inc30, %if.end27 ]
  %sp.1 = phi ptr [ %sp.0104, %while.body.contloop_crit_edge ], [ %add.ptr, %if.end19.contloop_crit_edge ], [ %add.ptr, %if.end27 ]
  %nuser.1 = phi i32 [ %nuser.0105, %while.body.contloop_crit_edge ], [ %inc, %if.end19.contloop_crit_edge ], [ %inc, %if.end27 ]
  %add31 = add i32 %slen.0, 1
  %add.ptr32 = getelementptr i8, ptr %sp.1, i32 %add31
  %sub34 = sub i32 %left.1, %add31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub34)
  %cmp.not = icmp eq i32 %sub34, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %xdrleft.1)
  %cmp6.not = icmp eq i32 %xdrleft.1, 0
  %or.cond = select i1 %cmp.not, i1 true, i1 %cmp6.not
  br i1 %or.cond, label %while.end, label %contloop.while.body_crit_edge

contloop.while.body_crit_edge:                    ; preds = %contloop
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

while.end:                                        ; preds = %contloop
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nuser.1)
  %cmp35.not = icmp ne i32 %nuser.1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count.1)
  %cmp36 = icmp eq i32 %count.1, 0
  %or.cond88 = select i1 %cmp35.not, i1 %cmp36, i1 false
  br i1 %or.cond88, label %while.end.outthread-pre-split_crit_edge, label %while.end.wreof_crit_edge

while.end.wreof_crit_edge:                        ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %wreof

while.end.outthread-pre-split_crit_edge:          ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %outthread-pre-split

wreof:                                            ; preds = %while.end.wreof_crit_edge, %if.then15.wreof_crit_edge, %if.end5.wreof_crit_edge
  %count.097 = phi i32 [ %count.1, %while.end.wreof_crit_edge ], [ %count.0103, %if.then15.wreof_crit_edge ], [ 0, %if.end5.wreof_crit_edge ]
  %eof.0 = phi i32 [ 1, %while.end.wreof_crit_edge ], [ 0, %if.then15.wreof_crit_edge ], [ 1, %if.end5.wreof_crit_edge ]
  %call39 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 4) #16
  %tobool40.not = icmp eq ptr %call39, null
  br i1 %tobool40.not, label %wreof.outthread-pre-split_crit_edge, label %if.end42

wreof.outthread-pre-split_crit_edge:              ; preds = %wreof
  call void @__sanitizer_cov_trace_pc() #18
  br label %outthread-pre-split

if.end42:                                         ; preds = %wreof
  call void @__sanitizer_cov_trace_pc() #18
  %21 = ptrtoint ptr %call39 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %eof.0, ptr %call39, align 4
  %add43 = add i32 %count.097, %conv8.i
  %conv = zext i32 %add43 to i64
  %22 = ptrtoint ptr %cookie to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %conv, ptr %cookie, align 8
  %23 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %buf, align 4
  %call45 = call i32 @write_bytes_to_xdr_buf(ptr noundef %24, i32 noundef %13, ptr noundef nonnull %cookie, i32 noundef 8) #16
  %25 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %count.097, ptr %tmp, align 4
  %26 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %buf, align 4
  %call47 = call i32 @write_bytes_to_xdr_buf(ptr noundef %27, i32 noundef %add, ptr noundef nonnull %tmp, i32 noundef 4) #16
  br label %outthread-pre-split

outthread-pre-split:                              ; preds = %if.end42, %wreof.outthread-pre-split_crit_edge, %while.end.outthread-pre-split_crit_edge, %if.end23.outthread-pre-split_crit_edge, %if.then15.outthread-pre-split_crit_edge, %if.end.outthread-pre-split_crit_edge, %if.end.i.outthread-pre-split_crit_edge
  %status.0.ph = phi i32 [ 10003, %if.end.i.outthread-pre-split_crit_edge ], [ 10018, %wreof.outthread-pre-split_crit_edge ], [ 10003, %while.end.outthread-pre-split_crit_edge ], [ 10005, %if.then15.outthread-pre-split_crit_edge ], [ 10018, %if.end.outthread-pre-split_crit_edge ], [ 0, %if.end42 ], [ 10018, %if.end23.outthread-pre-split_crit_edge ]
  %28 = ptrtoint ptr %lsxa_len.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %.pr = load i32, ptr %lsxa_len.i, align 8
  br label %out

out:                                              ; preds = %outthread-pre-split, %entry.out_crit_edge
  %29 = phi i32 [ %.pr, %outthread-pre-split ], [ %7, %entry.out_crit_edge ]
  %status.0 = phi i32 [ %status.0.ph, %outthread-pre-split ], [ 10003, %entry.out_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool49.not = icmp eq i32 %29, 0
  br i1 %tobool49.not, label %out.if.end52_crit_edge, label %if.then50

out.if.end52_crit_edge:                           ; preds = %out
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end52

if.then50:                                        ; preds = %out
  call void @__sanitizer_cov_trace_pc() #18
  %lsxa_buf51 = getelementptr inbounds %struct.nfsd4_listxattrs, ptr %listxattrs, i32 0, i32 2
  %30 = ptrtoint ptr %lsxa_buf51 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %lsxa_buf51, align 4
  call void @kvfree(ptr noundef %31) #16
  br label %if.end52

if.end52:                                         ; preds = %if.then50, %out.if.end52_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %cookie) #16
  ret i32 %status.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_removexattr(ptr nocapture noundef readonly %resp, i32 noundef %nfserr, ptr nocapture noundef readonly %removexattr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %call = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 20) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %rmxa_cinfo = getelementptr inbounds %struct.nfsd4_removexattr, ptr %removexattr, i32 0, i32 1
  %2 = ptrtoint ptr %rmxa_cinfo to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %rmxa_cinfo, align 8
  %incdec.ptr.i = getelementptr i32, ptr %call, i32 1
  %4 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %call, align 4
  %before_change.i = getelementptr inbounds %struct.nfsd4_removexattr, ptr %removexattr, i32 0, i32 1, i32 1
  %5 = ptrtoint ptr %before_change.i to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %before_change.i, align 8
  %7 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_storeN_noabort(i32 %7, i32 8)
  store i64 %6, ptr %incdec.ptr.i, align 1
  %add.ptr.i.i = getelementptr i32, ptr %call, i32 3
  %after_change.i = getelementptr inbounds %struct.nfsd4_removexattr, ptr %removexattr, i32 0, i32 1, i32 2
  %8 = ptrtoint ptr %after_change.i to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %after_change.i, align 8
  %10 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_storeN_noabort(i32 %10, i32 8)
  store i64 %9, ptr %add.ptr.i.i, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ 10018, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_encode_stateid(ptr noundef %xdr, ptr noundef %sid) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 16) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %0 = ptrtoint ptr %sid to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %sid, align 4
  %incdec.ptr = getelementptr i32, ptr %call, i32 1
  %2 = ptrtoint ptr %call to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %1, ptr %call, align 4
  %si_opaque = getelementptr inbounds %struct.stateid_t, ptr %sid, i32 0, i32 1
  %call1 = tail call ptr @xdr_encode_opaque_fixed(ptr noundef %incdec.ptr, ptr noundef %si_opaque, i32 noundef 12) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end ], [ 10018, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_encode_lock_denied(ptr noundef %xdr, ptr noundef %ld) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ld_owner = getelementptr inbounds %struct.nfsd4_lock_denied, ptr %ld, i32 0, i32 1
  %0 = ptrtoint ptr %ld_owner to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ld_owner, align 4
  %2 = add i32 %1, 35
  %add144 = and i32 %2, -4
  %call45 = tail call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef %add144) #16
  %tobool.not46 = icmp eq ptr %call45, null
  br i1 %tobool.not46, label %if.then.lr.ph, label %entry.if.end7_crit_edge

entry.if.end7_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.then.lr.ph:                                    ; preds = %entry
  %data = getelementptr inbounds %struct.nfsd4_lock_denied, ptr %ld, i32 0, i32 1, i32 1
  br label %if.then

if.then:                                          ; preds = %if.then4.if.then_crit_edge, %if.then.lr.ph
  %3 = ptrtoint ptr %ld_owner to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %ld_owner, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool3.not = icmp eq i32 %4, 0
  br i1 %tobool3.not, label %if.then.cleanup_crit_edge, label %if.then4

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then4:                                         ; preds = %if.then
  %5 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %data, align 4
  tail call void @kfree(ptr noundef %6) #16
  %7 = ptrtoint ptr %ld_owner to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %ld_owner, align 4
  %8 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %data, align 4
  %call = tail call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 32) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.then4.if.then_crit_edge, label %if.then4.if.end7_crit_edge

if.then4.if.end7_crit_edge:                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.then4.if.then_crit_edge:                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

if.end7:                                          ; preds = %if.then4.if.end7_crit_edge, %entry.if.end7_crit_edge
  %call.lcssa = phi ptr [ %call45, %entry.if.end7_crit_edge ], [ %call, %if.then4.if.end7_crit_edge ]
  %ld_start = getelementptr inbounds %struct.nfsd4_lock_denied, ptr %ld, i32 0, i32 2
  %9 = ptrtoint ptr %ld_start to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %ld_start, align 8
  %11 = ptrtoint ptr %call.lcssa to i32
  call void @__asan_storeN_noabort(i32 %11, i32 8)
  store i64 %10, ptr %call.lcssa, align 1
  %add.ptr.i = getelementptr i32, ptr %call.lcssa, i32 2
  %ld_length = getelementptr inbounds %struct.nfsd4_lock_denied, ptr %ld, i32 0, i32 3
  %12 = ptrtoint ptr %ld_length to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %ld_length, align 8
  %14 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_storeN_noabort(i32 %14, i32 8)
  store i64 %13, ptr %add.ptr.i, align 1
  %add.ptr.i41 = getelementptr i32, ptr %call.lcssa, i32 4
  %ld_type = getelementptr inbounds %struct.nfsd4_lock_denied, ptr %ld, i32 0, i32 4
  %15 = ptrtoint ptr %ld_type to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %ld_type, align 8
  %incdec.ptr = getelementptr i32, ptr %call.lcssa, i32 5
  %17 = ptrtoint ptr %add.ptr.i41 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %add.ptr.i41, align 4
  %18 = ptrtoint ptr %ld_owner to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %ld_owner, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %tobool11.not = icmp eq i32 %19, 0
  br i1 %tobool11.not, label %if.else, label %if.then12

if.then12:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  %call13 = tail call ptr @xdr_encode_opaque_fixed(ptr noundef %incdec.ptr, ptr noundef %ld, i32 noundef 8) #16
  %data14 = getelementptr inbounds %struct.nfsd4_lock_denied, ptr %ld, i32 0, i32 1, i32 1
  %20 = ptrtoint ptr %data14 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %data14, align 4
  %22 = ptrtoint ptr %ld_owner to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %ld_owner, align 4
  %call16 = tail call ptr @xdr_encode_opaque(ptr noundef %call13, ptr noundef %21, i32 noundef %23) #16
  %24 = ptrtoint ptr %data14 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %data14, align 4
  tail call void @kfree(ptr noundef %25) #16
  br label %cleanup

if.else:                                          ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  %26 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_storeN_noabort(i32 %26, i32 8)
  store i64 0, ptr %incdec.ptr, align 1
  %add.ptr.i42 = getelementptr i32, ptr %call.lcssa, i32 7
  %27 = ptrtoint ptr %add.ptr.i42 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 0, ptr %add.ptr.i42, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then12, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 10010, %if.else ], [ 10010, %if.then12 ], [ 10018, %if.then.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfsd_splice_read(ptr noundef, ptr noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @svc_encode_result_payload(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xdr_reserve_space_vec(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfsd_readv(ptr noundef, ptr noundef, ptr noundef, i64 noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfsd_readdir(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_encode_dirent(ptr nocapture noundef %ccdv, ptr noundef %name, i32 noundef %namlen, i64 noundef %offset, i64 noundef %ino, i32 noundef %d_type) #0 align 64 {
entry:
  %exp.i = alloca ptr, align 4
  %dentry.i = alloca ptr, align 4
  %wire_offset = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %xdr1 = getelementptr i8, ptr %ccdv, i32 4
  %0 = ptrtoint ptr %xdr1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %xdr1, align 8
  %buf = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %buf, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %len, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %wire_offset) #16
  %6 = ptrtoint ptr %wire_offset to i32
  call void @__asan_store8_noabort(i32 %6)
  store i64 -1, ptr %wire_offset, align 8, !annotation !103
  %tobool.not = icmp ne ptr %name, null
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %namlen)
  %cmp = icmp slt i32 %namlen, 3
  %or.cond = and i1 %tobool.not, %cmp
  br i1 %or.cond, label %land.lhs.true2, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true2:                                   ; preds = %entry
  %7 = ptrtoint ptr %name to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %name, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 46, i8 %8)
  %cmp3 = icmp eq i8 %8, 46
  br i1 %cmp3, label %land.lhs.true5, label %land.lhs.true2.if.end_crit_edge

land.lhs.true2.if.end_crit_edge:                  ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true5:                                   ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %namlen)
  %cmp6 = icmp eq i32 %namlen, 1
  br i1 %cmp6, label %land.lhs.true5.cleanup_crit_edge, label %lor.lhs.false

land.lhs.true5.cleanup_crit_edge:                 ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false:                                    ; preds = %land.lhs.true5
  %arrayidx8 = getelementptr i8, ptr %name, i32 1
  %9 = ptrtoint ptr %arrayidx8 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %arrayidx8, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 46, i8 %10)
  %cmp10 = icmp eq i8 %10, 46
  br i1 %cmp10, label %lor.lhs.false.cleanup_crit_edge, label %lor.lhs.false.if.end_crit_edge

lor.lhs.false.if.end_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false.if.end_crit_edge, %land.lhs.true2.if.end_crit_edge, %entry.if.end_crit_edge
  %cookie_offset12 = getelementptr i8, ptr %ccdv, i32 8
  %11 = ptrtoint ptr %cookie_offset12 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cookie_offset12, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool13.not = icmp eq i32 %12, 0
  br i1 %tobool13.not, label %if.end.if.end17_crit_edge, label %if.then14

if.end.if.end17_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

if.then14:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %13 = ptrtoint ptr %wire_offset to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %offset, ptr %wire_offset, align 8
  %14 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %buf, align 4
  %call = call i32 @write_bytes_to_xdr_buf(ptr noundef %15, i32 noundef %12, ptr noundef nonnull %wire_offset, i32 noundef 8) #16
  br label %if.end17

if.end17:                                         ; preds = %if.then14, %if.end.if.end17_crit_edge
  %call18 = call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 4) #16
  %tobool19.not = icmp eq ptr %call18, null
  br i1 %tobool19.not, label %if.end17.fail_crit_edge, label %if.end21

if.end17.fail_crit_edge:                          ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.end21:                                         ; preds = %if.end17
  %16 = ptrtoint ptr %call18 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 1, ptr %call18, align 4
  %17 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %buf, align 4
  %len23 = getelementptr inbounds %struct.xdr_buf, ptr %18, i32 0, i32 8
  %19 = ptrtoint ptr %len23 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %len23, align 4
  %add = add i32 %namlen, 12
  %call24 = call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef %add) #16
  %tobool25.not = icmp eq ptr %call24, null
  br i1 %tobool25.not, label %if.end21.fail_crit_edge, label %if.end27

if.end21.fail_crit_edge:                          ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.end27:                                         ; preds = %if.end21
  %21 = ptrtoint ptr %call24 to i32
  call void @__asan_storeN_noabort(i32 %21, i32 8)
  store i64 9223372036854775807, ptr %call24, align 1
  %add.ptr.i = getelementptr i32, ptr %call24, i32 2
  %call.i = call ptr @xdr_encode_opaque(ptr noundef %add.ptr.i, ptr noundef %name, i32 noundef %namlen) #16
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %exp.i) #16
  %rd_fhp.i = getelementptr i8, ptr %ccdv, i32 -4
  %22 = ptrtoint ptr %rd_fhp.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %rd_fhp.i, align 8
  %fh_export.i = getelementptr inbounds %struct.svc_fh, ptr %23, i32 0, i32 3
  %24 = ptrtoint ptr %fh_export.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %fh_export.i, align 4
  %26 = ptrtoint ptr %exp.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %25, ptr %exp.i, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %dentry.i) #16
  %fh_dentry.i = getelementptr inbounds %struct.svc_fh, ptr %23, i32 0, i32 2
  %27 = ptrtoint ptr %fh_dentry.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %fh_dentry.i, align 8
  %call.i138 = call ptr @lookup_positive_unlocked(ptr noundef %name, ptr noundef %28, i32 noundef %namlen) #16
  %29 = ptrtoint ptr %dentry.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %call.i138, ptr %dentry.i, align 4
  %cmp.i.i = icmp ugt ptr %call.i138, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #18
  %30 = ptrtoint ptr %call.i138 to i32
  %call4.i = call i32 @nfserrno(i32 noundef %30) #16
  br label %nfsd4_encode_dirent_fattr.exit

if.end.i:                                         ; preds = %if.end27
  %31 = ptrtoint ptr %exp.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %exp.i, align 4
  %ref.i.i.i = getelementptr inbounds %struct.cache_head, ptr %32, i32 0, i32 3
  %call.i.i.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %ref.i.i.i, i32 noundef 4) #16
  call void @llvm.prefetch.p0(ptr %ref.i.i.i, i32 1, i32 3, i32 1) #16
  %33 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %ref.i.i.i, ptr %ref.i.i.i, i32 1, ptr elementtype(i32) %ref.i.i.i) #16, !srcloc !122
  %asmresult.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %33, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i.i.i, label %if.end.i.if.end15.sink.split.i.i.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i.i.i, !prof !108

if.end.i.if.end15.sink.split.i.i.i.i.i.i.i_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i.i.i.i

if.else.i.i.i.i.i.i.i:                            ; preds = %if.end.i
  %add.i.i.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i.i.i, 1
  %34 = or i32 %add.i.i.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %34)
  %.not.i.i.i.i.i.i.i = icmp sgt i32 %34, -1
  br i1 %.not.i.i.i.i.i.i.i, label %if.else.i.i.i.i.i.i.i.exp_get.exit.i_crit_edge, label %if.else.i.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i.i_crit_edge, !prof !104

if.else.i.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.sink.split.i.i.i.i.i.i.i

if.else.i.i.i.i.i.i.i.exp_get.exit.i_crit_edge:   ; preds = %if.else.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %exp_get.exit.i

if.end15.sink.split.i.i.i.i.i.i.i:                ; preds = %if.else.i.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i.i_crit_edge, %if.end.i.if.end15.sink.split.i.i.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i.i.i = phi i32 [ 2, %if.end.i.if.end15.sink.split.i.i.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %ref.i.i.i, i32 noundef %.sink.i.i.i.i.i.i.i) #16
  br label %exp_get.exit.i

exp_get.exit.i:                                   ; preds = %if.end15.sink.split.i.i.i.i.i.i.i, %if.else.i.i.i.i.i.i.i.exp_get.exit.i_crit_edge
  %35 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %dentry.i, align 4
  %37 = ptrtoint ptr %exp.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %exp.i, align 4
  %call6.i = call i32 @nfsd_mountpoint(ptr noundef %36, ptr noundef %38) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool.not.i, label %exp_get.exit.i.out_encode.i_crit_edge, label %if.then7.i

exp_get.exit.i.out_encode.i_crit_edge:            ; preds = %exp_get.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_encode.i

if.then7.i:                                       ; preds = %exp_get.exit.i
  %39 = ptrtoint ptr %exp.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %exp.i, align 4
  %ex_flags.i = getelementptr inbounds %struct.svc_export, ptr %40, i32 0, i32 2
  %41 = ptrtoint ptr %ex_flags.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %ex_flags.i, align 4
  %and.i = and i32 %42, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool8.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool8.not.i, label %land.lhs.true.i, label %if.then7.i.if.end12.i_crit_edge

if.then7.i.if.end12.i_crit_edge:                  ; preds = %if.then7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end12.i

land.lhs.true.i:                                  ; preds = %if.then7.i
  %rd_bmval.i = getelementptr i8, ptr %ccdv, i32 -20
  %43 = ptrtoint ptr %rd_bmval.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %rd_bmval.i, align 4
  %and.i.i = and i32 %44, -3073
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %attributes_need_mount.exit.i, label %land.lhs.true.i.if.end12.i_crit_edge

land.lhs.true.i.if.end12.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end12.i

attributes_need_mount.exit.i:                     ; preds = %land.lhs.true.i
  %arrayidx1.i.i = getelementptr i8, ptr %ccdv, i32 -16
  %45 = ptrtoint ptr %arrayidx1.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx1.i.i, align 4
  %and2.i.i = and i32 %46, -8388609
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i.i)
  %tobool3.not.i.not.i = icmp eq i32 %and2.i.i, 0
  br i1 %tobool3.not.i.not.i, label %attributes_need_mount.exit.i.out_encode.i_crit_edge, label %attributes_need_mount.exit.i.if.end12.i_crit_edge

attributes_need_mount.exit.i.if.end12.i_crit_edge: ; preds = %attributes_need_mount.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end12.i

attributes_need_mount.exit.i.out_encode.i_crit_edge: ; preds = %attributes_need_mount.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_encode.i

if.end12.i:                                       ; preds = %attributes_need_mount.exit.i.if.end12.i_crit_edge, %land.lhs.true.i.if.end12.i_crit_edge, %if.then7.i.if.end12.i_crit_edge
  %rd_rqstp.i = getelementptr i8, ptr %ccdv, i32 -8
  %47 = ptrtoint ptr %rd_rqstp.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %rd_rqstp.i, align 4
  %call13.i = call i32 @nfsd_cross_mnt(ptr noundef %48, ptr noundef nonnull %dentry.i, ptr noundef nonnull %exp.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13.i)
  %tobool14.not.i = icmp eq i32 %call13.i, 0
  br i1 %tobool14.not.i, label %if.end17.i, label %if.then15.i

if.then15.i:                                      ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #18
  %call16.i = call i32 @nfserrno(i32 noundef %call13.i) #16
  br label %out_put.i

if.end17.i:                                       ; preds = %if.end12.i
  %49 = ptrtoint ptr %exp.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %exp.i, align 4
  %51 = ptrtoint ptr %rd_rqstp.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %rd_rqstp.i, align 4
  %call19.i = call i32 @check_nfsd_access(ptr noundef %50, ptr noundef %52) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19.i)
  %tobool20.not.i = icmp eq i32 %call19.i, 0
  br i1 %tobool20.not.i, label %if.end17.i.out_encode.i_crit_edge, label %if.end17.i.out_put.i_crit_edge

if.end17.i.out_put.i_crit_edge:                   ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_put.i

if.end17.i.out_encode.i_crit_edge:                ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_encode.i

out_encode.i:                                     ; preds = %if.end17.i.out_encode.i_crit_edge, %attributes_need_mount.exit.i.out_encode.i_crit_edge, %exp_get.exit.i.out_encode.i_crit_edge
  %ignore_crossmnt.1.i = phi i32 [ 0, %exp_get.exit.i.out_encode.i_crit_edge ], [ 1, %attributes_need_mount.exit.i.out_encode.i_crit_edge ], [ 0, %if.end17.i.out_encode.i_crit_edge ]
  %53 = ptrtoint ptr %exp.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %exp.i, align 4
  %55 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %dentry.i, align 4
  %rd_bmval24.i = getelementptr i8, ptr %ccdv, i32 -20
  %rd_rqstp26.i = getelementptr i8, ptr %ccdv, i32 -8
  %57 = ptrtoint ptr %rd_rqstp26.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %rd_rqstp26.i, align 4
  %call27.i = call fastcc i32 @nfsd4_encode_fattr(ptr noundef %1, ptr noundef null, ptr noundef %54, ptr noundef %56, ptr noundef %rd_bmval24.i, ptr noundef %58, i32 noundef %ignore_crossmnt.1.i) #16
  br label %out_put.i

out_put.i:                                        ; preds = %out_encode.i, %if.end17.i.out_put.i_crit_edge, %if.then15.i
  %nfserr.1.i = phi i32 [ %call27.i, %out_encode.i ], [ %call16.i, %if.then15.i ], [ %call19.i, %if.end17.i.out_put.i_crit_edge ]
  %59 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %dentry.i, align 4
  call void @dput(ptr noundef %60) #16
  %61 = ptrtoint ptr %exp.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %exp.i, align 4
  %cd.i.i = getelementptr inbounds %struct.svc_export, ptr %62, i32 0, i32 13
  %63 = ptrtoint ptr %cd.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %cd.i.i, align 8
  %ref.i.i40.i = getelementptr inbounds %struct.cache_head, ptr %62, i32 0, i32 3
  %call.i.i.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %ref.i.i40.i, i32 noundef 4) #16
  %65 = ptrtoint ptr %ref.i.i40.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load volatile i32, ptr %ref.i.i40.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %66)
  %cmp.i.i.i = icmp ult i32 %66, 3
  br i1 %cmp.i.i.i, label %land.lhs.true.i.i.i, label %out_put.i.if.end.i.i.i_crit_edge

out_put.i.if.end.i.i.i_crit_edge:                 ; preds = %out_put.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i

land.lhs.true.i.i.i:                              ; preds = %out_put.i
  %expiry_time.i.i.i = getelementptr inbounds %struct.cache_head, ptr %62, i32 0, i32 1
  %67 = ptrtoint ptr %expiry_time.i.i.i to i32
  call void @__asan_load8_noabort(i32 %67)
  %68 = load i64, ptr %expiry_time.i.i.i, align 8
  %nextcheck.i.i.i = getelementptr inbounds %struct.cache_detail, ptr %64, i32 0, i32 18
  %69 = ptrtoint ptr %nextcheck.i.i.i to i32
  call void @__asan_load8_noabort(i32 %69)
  %70 = load i64, ptr %nextcheck.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %68, i64 %70)
  %cmp1.i.i.i = icmp slt i64 %68, %70
  br i1 %cmp1.i.i.i, label %if.then.i.i.i, label %land.lhs.true.i.i.i.if.end.i.i.i_crit_edge

land.lhs.true.i.i.i.if.end.i.i.i_crit_edge:       ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %71 = ptrtoint ptr %nextcheck.i.i.i to i32
  call void @__asan_store8_noabort(i32 %71)
  store i64 %68, ptr %nextcheck.i.i.i, align 8
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i.i.i, %land.lhs.true.i.i.i.if.end.i.i.i_crit_edge, %out_put.i.if.end.i.i.i_crit_edge
  %cache_put.i.i.i = getelementptr inbounds %struct.cache_detail, ptr %64, i32 0, i32 5
  %72 = ptrtoint ptr %cache_put.i.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %cache_put.i.i.i, align 4
  %call.i.i.i.i.i.i.i.i41.i = call zeroext i1 @__kasan_check_write(ptr noundef %ref.i.i40.i, i32 noundef 4) #16
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !118
  call void @llvm.prefetch.p0(ptr %ref.i.i40.i, i32 1, i32 3, i32 1) #16
  %74 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %ref.i.i40.i, ptr %ref.i.i40.i, i32 1, ptr elementtype(i32) %ref.i.i40.i) #16, !srcloc !119
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %74, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i.i.i.i, label %if.then.i.i.i.i, label %if.end5.i.i.i.i.i.i.i

if.end5.i.i.i.i.i.i.i:                            ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %.not.i.i.i.i.i.i42.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i.i.i42.i, label %if.end5.i.i.i.i.i.i.i.nfsd4_encode_dirent_fattr.exit_crit_edge, label %if.then10.i.i.i.i.i.i.i, !prof !104

if.end5.i.i.i.i.i.i.i.nfsd4_encode_dirent_fattr.exit_crit_edge: ; preds = %if.end5.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_encode_dirent_fattr.exit

if.then10.i.i.i.i.i.i.i:                          ; preds = %if.end5.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @refcount_warn_saturate(ptr noundef %ref.i.i40.i, i32 noundef 3) #16
  br label %nfsd4_encode_dirent_fattr.exit

if.then.i.i.i.i:                                  ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !120
  call void %73(ptr noundef %ref.i.i40.i) #16
  br label %nfsd4_encode_dirent_fattr.exit

nfsd4_encode_dirent_fattr.exit:                   ; preds = %if.then.i.i.i.i, %if.then10.i.i.i.i.i.i.i, %if.end5.i.i.i.i.i.i.i.nfsd4_encode_dirent_fattr.exit_crit_edge, %if.then.i
  %retval.0.i = phi i32 [ %call4.i, %if.then.i ], [ %nfserr.1.i, %if.end5.i.i.i.i.i.i.i.nfsd4_encode_dirent_fattr.exit_crit_edge ], [ %nfserr.1.i, %if.then10.i.i.i.i.i.i.i ], [ %nfserr.1.i, %if.then.i.i.i.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %dentry.i) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %exp.i) #16
  %75 = zext i32 %retval.0.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %75, ptr @__sancov_gen_cov_switch_values.39)
  switch i32 %retval.0.i, label %sw.default [
    i32 0, label %nfsd4_encode_dirent_fattr.exit.sw.epilog_crit_edge
    i32 10018, label %nfsd4_encode_dirent_fattr.exit.fail_crit_edge
    i32 2, label %sw.bb31
  ]

nfsd4_encode_dirent_fattr.exit.fail_crit_edge:    ; preds = %nfsd4_encode_dirent_fattr.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

nfsd4_encode_dirent_fattr.exit.sw.epilog_crit_edge: ; preds = %nfsd4_encode_dirent_fattr.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.bb31:                                          ; preds = %nfsd4_encode_dirent_fattr.exit
  call void @__sanitizer_cov_trace_pc() #18
  call void @xdr_truncate_encode(ptr noundef %1, i32 noundef %5) #16
  br label %cleanup

sw.default:                                       ; preds = %nfsd4_encode_dirent_fattr.exit
  %rd_bmval = getelementptr i8, ptr %ccdv, i32 -20
  %76 = ptrtoint ptr %rd_bmval to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %rd_bmval, align 8
  %and = and i32 %77, 2048
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool33.not = icmp eq i32 %and, 0
  br i1 %tobool33.not, label %sw.default.fail_crit_edge, label %if.end35

sw.default.fail_crit_edge:                        ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.end35:                                         ; preds = %sw.default
  %call.i139 = call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 20) #16
  %tobool.not.i140 = icmp eq ptr %call.i139, null
  br i1 %tobool.not.i140, label %if.end35.fail_crit_edge, label %nfsd4_encode_rdattr_error.exit

if.end35.fail_crit_edge:                          ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

nfsd4_encode_rdattr_error.exit:                   ; preds = %if.end35
  %incdec.ptr.i = getelementptr i32, ptr %call.i139, i32 1
  %78 = ptrtoint ptr %call.i139 to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 2, ptr %call.i139, align 4
  %incdec.ptr1.i = getelementptr i32, ptr %call.i139, i32 2
  %79 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 2048, ptr %incdec.ptr.i, align 4
  %incdec.ptr2.i = getelementptr i32, ptr %call.i139, i32 3
  %80 = ptrtoint ptr %incdec.ptr1.i to i32
  call void @__asan_store4_noabort(i32 %80)
  store i32 0, ptr %incdec.ptr1.i, align 4
  %incdec.ptr3.i = getelementptr i32, ptr %call.i139, i32 4
  %81 = ptrtoint ptr %incdec.ptr2.i to i32
  call void @__asan_store4_noabort(i32 %81)
  store i32 4, ptr %incdec.ptr2.i, align 4
  %incdec.ptr4.i = getelementptr i32, ptr %call.i139, i32 5
  %82 = ptrtoint ptr %incdec.ptr3.i to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 %retval.0.i, ptr %incdec.ptr3.i, align 4
  %cmp37 = icmp eq ptr %incdec.ptr4.i, null
  br i1 %cmp37, label %nfsd4_encode_rdattr_error.exit.fail_crit_edge, label %nfsd4_encode_rdattr_error.exit.sw.epilog_crit_edge

nfsd4_encode_rdattr_error.exit.sw.epilog_crit_edge: ; preds = %nfsd4_encode_rdattr_error.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

nfsd4_encode_rdattr_error.exit.fail_crit_edge:    ; preds = %nfsd4_encode_rdattr_error.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

sw.epilog:                                        ; preds = %nfsd4_encode_rdattr_error.exit.sw.epilog_crit_edge, %nfsd4_encode_dirent_fattr.exit.sw.epilog_crit_edge
  %83 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %buf, align 4
  %len42 = getelementptr inbounds %struct.xdr_buf, ptr %84, i32 0, i32 8
  %85 = ptrtoint ptr %len42 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %len42, align 4
  %sub = sub i32 %86, %5
  %rd_maxcount = getelementptr i8, ptr %ccdv, i32 -24
  %87 = ptrtoint ptr %rd_maxcount to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %rd_maxcount, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %88, i32 %sub)
  %cmp43 = icmp ult i32 %88, %sub
  br i1 %cmp43, label %sw.epilog.fail_crit_edge, label %if.end46

sw.epilog.fail_crit_edge:                         ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

if.end46:                                         ; preds = %sw.epilog
  %sub48 = sub i32 %88, %sub
  %89 = ptrtoint ptr %rd_maxcount to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 %sub48, ptr %rd_maxcount, align 4
  %rd_dircount = getelementptr i8, ptr %ccdv, i32 -28
  %90 = ptrtoint ptr %rd_dircount to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %rd_dircount, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %91)
  %tobool49.not = icmp eq i32 %91, 0
  br i1 %tobool49.not, label %if.end46.if.end73_crit_edge, label %if.then50

if.end46.if.end73_crit_edge:                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end73

if.then50:                                        ; preds = %if.end46
  %92 = add i32 %namlen, 15
  %add53 = and i32 %92, -4
  call void @__sanitizer_cov_trace_cmp4(i32 %add53, i32 %91)
  %cmp55 = icmp ugt i32 %add53, %91
  br i1 %cmp55, label %land.lhs.true57, label %if.then50.if.end61_crit_edge

if.then50.if.end61_crit_edge:                     ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end61

land.lhs.true57:                                  ; preds = %if.then50
  %93 = ptrtoint ptr %cookie_offset12 to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %cookie_offset12, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %94)
  %tobool59.not = icmp eq i32 %94, 0
  br i1 %tobool59.not, label %land.lhs.true57.if.end61_crit_edge, label %land.lhs.true57.fail_crit_edge

land.lhs.true57.fail_crit_edge:                   ; preds = %land.lhs.true57
  call void @__sanitizer_cov_trace_pc() #18
  br label %fail

land.lhs.true57.if.end61_crit_edge:               ; preds = %land.lhs.true57
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end61

if.end61:                                         ; preds = %land.lhs.true57.if.end61_crit_edge, %if.then50.if.end61_crit_edge
  %95 = call i32 @llvm.usub.sat.i32(i32 %91, i32 %add53)
  %96 = ptrtoint ptr %rd_dircount to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 %95, ptr %rd_dircount, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %91, i32 %add53)
  %tobool69.not.not = icmp ugt i32 %91, %add53
  br i1 %tobool69.not.not, label %if.end61.if.end73_crit_edge, label %if.then70

if.end61.if.end73_crit_edge:                      ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end73

if.then70:                                        ; preds = %if.end61
  call void @__sanitizer_cov_trace_pc() #18
  %97 = ptrtoint ptr %rd_maxcount to i32
  call void @__asan_store4_noabort(i32 %97)
  store i32 0, ptr %rd_maxcount, align 4
  br label %if.end73

if.end73:                                         ; preds = %if.then70, %if.end61.if.end73_crit_edge, %if.end46.if.end73_crit_edge
  %98 = ptrtoint ptr %cookie_offset12 to i32
  call void @__asan_store4_noabort(i32 %98)
  store i32 %20, ptr %cookie_offset12, align 4
  br label %cleanup

fail:                                             ; preds = %land.lhs.true57.fail_crit_edge, %sw.epilog.fail_crit_edge, %nfsd4_encode_rdattr_error.exit.fail_crit_edge, %if.end35.fail_crit_edge, %sw.default.fail_crit_edge, %nfsd4_encode_dirent_fattr.exit.fail_crit_edge, %if.end21.fail_crit_edge, %if.end17.fail_crit_edge
  %nfserr.0 = phi i32 [ 10005, %sw.epilog.fail_crit_edge ], [ 10005, %land.lhs.true57.fail_crit_edge ], [ %retval.0.i, %sw.default.fail_crit_edge ], [ 10005, %if.end21.fail_crit_edge ], [ 10005, %if.end17.fail_crit_edge ], [ 10005, %nfsd4_encode_dirent_fattr.exit.fail_crit_edge ], [ 10005, %nfsd4_encode_rdattr_error.exit.fail_crit_edge ], [ 10005, %if.end35.fail_crit_edge ]
  call void @xdr_truncate_encode(ptr noundef %1, i32 noundef %5) #16
  br label %cleanup

cleanup:                                          ; preds = %fail, %if.end73, %sw.bb31, %lor.lhs.false.cleanup_crit_edge, %land.lhs.true5.cleanup_crit_edge
  %nfserr.0.sink = phi i32 [ %nfserr.0, %fail ], [ 0, %lor.lhs.false.cleanup_crit_edge ], [ 0, %land.lhs.true5.cleanup_crit_edge ], [ 0, %if.end73 ], [ 0, %sw.bb31 ]
  %retval.0 = phi i32 [ -22, %fail ], [ 0, %lor.lhs.false.cleanup_crit_edge ], [ 0, %land.lhs.true5.cleanup_crit_edge ], [ 0, %if.end73 ], [ 0, %sw.bb31 ]
  %99 = ptrtoint ptr %ccdv to i32
  call void @__asan_store4_noabort(i32 %99)
  store i32 %nfserr.0.sink, ptr %ccdv, align 4
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %wire_offset) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @lookup_positive_unlocked(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfsd_mountpoint(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfsd_cross_mnt(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @check_nfsd_access(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfsd_readlink(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_do_encode_secinfo(ptr noundef %xdr, ptr nocapture noundef readonly %exp) unnamed_addr #0 align 64 {
entry:
  %def_flavs = alloca [2 x %struct.exp_flavor_info], align 4
  %info = alloca %struct.rpcsec_gss_info, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %def_flavs) #16
  %0 = getelementptr inbounds [2 x %struct.exp_flavor_info], ptr %def_flavs, i32 0, i32 1
  %ex_nflavors = getelementptr inbounds %struct.svc_export, ptr %exp, i32 0, i32 9
  %1 = call ptr @memset(ptr %def_flavs, i32 255, i32 16)
  %2 = ptrtoint ptr %ex_nflavors to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ex_nflavors, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %ex_flavors = getelementptr inbounds %struct.svc_export, ptr %exp, i32 0, i32 10
  br label %if.end23

if.else:                                          ; preds = %entry
  %ex_client = getelementptr inbounds %struct.svc_export, ptr %exp, i32 0, i32 1
  %4 = ptrtoint ptr %ex_client to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ex_client, align 8
  %flavour = getelementptr inbounds %struct.auth_domain, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %flavour to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %flavour, align 4
  %flavour3 = getelementptr inbounds %struct.auth_ops, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %flavour3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flavour3, align 4
  %10 = zext i32 %9 to i64
  call void @__sanitizer_cov_trace_switch(i64 %10, ptr @__sancov_gen_cov_switch_values.40)
  switch i32 %9, label %if.else16 [
    i32 1, label %if.then4
    i32 6, label %if.then12
  ]

if.then4:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %11 = ptrtoint ptr %def_flavs to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 1, ptr %def_flavs, align 4
  %12 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %0, align 4
  br label %if.end23

if.then12:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %call = tail call i32 @svcauth_gss_flavor(ptr noundef %5) #16
  %13 = ptrtoint ptr %def_flavs to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %call, ptr %def_flavs, align 4
  br label %if.end23

if.else16:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %def_flavs to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %9, ptr %def_flavs, align 4
  br label %if.end23

if.end23:                                         ; preds = %if.else16, %if.then12, %if.then4, %if.then
  %nflavs.0 = phi i32 [ %3, %if.then ], [ 2, %if.then4 ], [ 1, %if.then12 ], [ 1, %if.else16 ]
  %flavs.0 = phi ptr [ %ex_flavors, %if.then ], [ %def_flavs, %if.then4 ], [ %def_flavs, %if.then12 ], [ %def_flavs, %if.else16 ]
  %call24 = tail call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool25.not = icmp eq ptr %call24, null
  br i1 %tobool25.not, label %if.end23.cleanup70_crit_edge, label %for.cond.preheader

if.end23.cleanup70_crit_edge:                     ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup70

for.cond.preheader:                               ; preds = %if.end23
  %data = getelementptr inbounds %struct.rpcsec_gss_oid, ptr %info, i32 0, i32 1
  %qop = getelementptr inbounds %struct.rpcsec_gss_info, ptr %info, i32 0, i32 1
  %service = getelementptr inbounds %struct.rpcsec_gss_info, ptr %info, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.cond.preheader
  %supported.0113 = phi i32 [ 0, %for.cond.preheader ], [ %supported.2.ph, %for.inc.for.body_crit_edge ]
  %i.0112 = phi i32 [ 0, %for.cond.preheader ], [ %inc66, %for.inc.for.body_crit_edge ]
  %arrayidx29 = getelementptr %struct.exp_flavor_info, ptr %flavs.0, i32 %i.0112
  %15 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx29, align 4
  call void @llvm.lifetime.start.p0(i64 44, ptr nonnull %info) #16
  %17 = call ptr @memset(ptr %info, i32 255, i32 44)
  %call31 = call i32 @rpcauth_get_gssinfo(i32 noundef %16, ptr noundef nonnull %info) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %cmp32 = icmp eq i32 %call31, 0
  br i1 %cmp32, label %if.then33, label %if.else49

if.then33:                                        ; preds = %for.body
  %18 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %info, align 4
  %20 = add i32 %19, 19
  %add36 = and i32 %20, -4
  %call37 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef %add36) #16
  %tobool38.not = icmp eq ptr %call37, null
  br i1 %tobool38.not, label %if.then33.cleanup_crit_edge, label %if.end40

if.then33.cleanup_crit_edge:                      ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end40:                                         ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #18
  %inc = add i32 %supported.0113, 1
  %incdec.ptr41 = getelementptr i32, ptr %call37, i32 1
  %21 = ptrtoint ptr %call37 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 6, ptr %call37, align 4
  %22 = ptrtoint ptr %info to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %info, align 4
  %call46 = call ptr @xdr_encode_opaque(ptr noundef %incdec.ptr41, ptr noundef %data, i32 noundef %23) #16
  %24 = ptrtoint ptr %qop to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %qop, align 4
  %incdec.ptr47 = getelementptr i32, ptr %call46, i32 1
  %26 = ptrtoint ptr %call46 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %call46, align 4
  %27 = ptrtoint ptr %service to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %service, align 4
  %29 = ptrtoint ptr %incdec.ptr47 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %incdec.ptr47, align 4
  br label %for.inc

if.else49:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %16)
  %cmp50 = icmp ult i32 %16, 8
  br i1 %cmp50, label %if.then51, label %if.else58

if.then51:                                        ; preds = %if.else49
  %call53 = call ptr @xdr_reserve_space(ptr noundef %xdr, i32 noundef 4) #16
  %tobool54.not = icmp eq ptr %call53, null
  br i1 %tobool54.not, label %if.then51.cleanup_crit_edge, label %if.end56

if.then51.cleanup_crit_edge:                      ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end56:                                         ; preds = %if.then51
  call void @__sanitizer_cov_trace_pc() #18
  %inc52 = add i32 %supported.0113, 1
  %30 = ptrtoint ptr %call53 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %16, ptr %call53, align 4
  br label %for.inc

if.else58:                                        ; preds = %if.else49
  %.b = load i1, ptr @nfsd4_do_encode_secinfo.report, align 1
  br i1 %.b, label %if.else58.for.inc_crit_edge, label %do.end

if.else58.for.inc_crit_edge:                      ; preds = %if.else58
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

do.end:                                           ; preds = %if.else58
  call void @__sanitizer_cov_trace_pc() #18
  %call61 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.18, i32 noundef %16) #21
  br label %for.inc

cleanup:                                          ; preds = %if.then51.cleanup_crit_edge, %if.then33.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 44, ptr nonnull %info) #16
  br label %cleanup70

for.inc:                                          ; preds = %do.end, %if.else58.for.inc_crit_edge, %if.end56, %if.end40
  %supported.2.ph = phi i32 [ %supported.0113, %if.else58.for.inc_crit_edge ], [ %supported.0113, %do.end ], [ %inc52, %if.end56 ], [ %inc, %if.end40 ]
  call void @llvm.lifetime.end.p0(i64 44, ptr nonnull %info) #16
  %inc66 = add nuw i32 %i.0112, 1
  %exitcond.not = icmp eq i32 %inc66, %nflavs.0
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.inc
  call void @__sanitizer_cov_trace_cmp4(i32 %nflavs.0, i32 %supported.2.ph)
  %cmp67.not = icmp eq i32 %nflavs.0, %supported.2.ph
  br i1 %cmp67.not, label %for.end.if.end69_crit_edge, label %if.then68

for.end.if.end69_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then68:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @nfsd4_do_encode_secinfo.report, align 1
  br label %if.end69

if.end69:                                         ; preds = %if.then68, %for.end.if.end69_crit_edge
  %31 = ptrtoint ptr %call24 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %supported.2.ph, ptr %call24, align 4
  br label %cleanup70

cleanup70:                                        ; preds = %if.end69, %cleanup, %if.end23.cleanup70_crit_edge
  %retval.2 = phi i32 [ 10018, %cleanup ], [ 0, %if.end69 ], [ 10018, %if.end23.cleanup70_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %def_flavs) #16
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @svcauth_gss_flavor(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rpcauth_get_gssinfo(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i64 @i_size_read(ptr noundef %inode) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %i_size_seqcount = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 23
  %dep_map.c48.i = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 23, i32 1
  %i_size18 = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 14
  br label %do.body

do.body:                                          ; preds = %while.end.do.body_crit_edge, %entry
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #16, !srcloc !123
  %and.i.i = and i32 %0, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %do.body24.critedge.i

if.then.i:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @trace_hardirqs_off() #16
  %1 = tail call ptr @llvm.returnaddress(i32 0) #16
  %2 = ptrtoint ptr %1 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %2) #16
  tail call void @lock_release(ptr noundef %dep_map.c48.i, i32 noundef %2) #16
  tail call void @trace_hardirqs_on() #16
  br label %do.body24.i

do.body24.critedge.i:                             ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  %3 = tail call ptr @llvm.returnaddress(i32 0) #16
  %4 = ptrtoint ptr %3 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %4) #16
  tail call void @lock_release(ptr noundef %dep_map.c48.i, i32 noundef %4) #16
  br label %do.body24.i

do.body24.i:                                      ; preds = %do.body24.critedge.i, %if.then.i
  %5 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #16, !srcloc !124
  %and.i.i.i = and i32 %5, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool32.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool32.not.i, label %if.then36.i, label %do.body24.i.seqcount_lockdep_reader_access.exit_crit_edge, !prof !108

do.body24.i.seqcount_lockdep_reader_access.exit_crit_edge: ; preds = %do.body24.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %seqcount_lockdep_reader_access.exit

if.then36.i:                                      ; preds = %do.body24.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @warn_bogus_irq_restore() #16
  br label %seqcount_lockdep_reader_access.exit

seqcount_lockdep_reader_access.exit:              ; preds = %if.then36.i, %do.body24.i.seqcount_lockdep_reader_access.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #16, !srcloc !125
  %6 = ptrtoint ptr %i_size_seqcount to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %i_size_seqcount, align 4
  %and29 = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and29)
  %tobool.not30 = icmp eq i32 %and29, 0
  br i1 %tobool.not30, label %seqcount_lockdep_reader_access.exit.while.end_crit_edge, label %seqcount_lockdep_reader_access.exit.do.end_crit_edge

seqcount_lockdep_reader_access.exit.do.end_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit
  br label %do.end

seqcount_lockdep_reader_access.exit.while.end_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

do.end:                                           ; preds = %do.end.do.end_crit_edge, %seqcount_lockdep_reader_access.exit.do.end_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !126
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #16, !srcloc !127
  %8 = ptrtoint ptr %i_size_seqcount to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %i_size_seqcount, align 4
  %and = and i32 %9, 1
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %do.end.while.end_crit_edge, label %do.end.do.end_crit_edge

do.end.do.end_crit_edge:                          ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end

do.end.while.end_crit_edge:                       ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

while.end:                                        ; preds = %do.end.while.end_crit_edge, %seqcount_lockdep_reader_access.exit.while.end_crit_edge
  %.lcssa = phi i32 [ %7, %seqcount_lockdep_reader_access.exit.while.end_crit_edge ], [ %9, %do.end.while.end_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !128
  %10 = ptrtoint ptr %i_size18 to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %i_size18, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !129
  %12 = ptrtoint ptr %i_size_seqcount to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %i_size_seqcount, align 4
  %cmp.i.i.not = icmp eq i32 %13, %.lcssa
  br i1 %cmp.i.i.not, label %do.end24, label %while.end.do.body_crit_edge

while.end.do.body_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

do.end24:                                         ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  ret i64 %11
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @vfs_llseek(ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_encode_read_plus_data(ptr nocapture noundef readonly %resp, ptr nocapture noundef %read, ptr noundef %maxcount, ptr noundef %eof, ptr noundef readonly %pos) unnamed_addr #0 align 64 {
entry:
  %tmp = alloca i32, align 4
  %tmp64 = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %resp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %resp, align 8
  %rd_nf = getelementptr inbounds %struct.nfsd4_read, ptr %read, i32 0, i32 4
  %2 = ptrtoint ptr %rd_nf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %rd_nf, align 8
  %nf_file = getelementptr inbounds %struct.nfsd_file, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %nf_file to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nf_file, align 4
  %buf = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %buf, align 4
  %len = getelementptr inbounds %struct.xdr_buf, ptr %7, i32 0, i32 8
  %8 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tmp) #16
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp64) #16
  %tobool.not = icmp eq ptr %pos, null
  br i1 %tobool.not, label %cond.false, label %cond.true

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %10 = ptrtoint ptr %pos to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %pos, align 8
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %rd_offset = getelementptr inbounds %struct.nfsd4_read, ptr %read, i32 0, i32 1
  %12 = ptrtoint ptr %rd_offset to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %rd_offset, align 8
  %call = tail call i64 @vfs_llseek(ptr noundef %5, i64 noundef %13, i32 noundef 4) #16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %11, %cond.true ], [ %call, %cond.false ]
  %rd_offset2 = getelementptr inbounds %struct.nfsd4_read, ptr %read, i32 0, i32 1
  %14 = ptrtoint ptr %rd_offset2 to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %rd_offset2, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %cond, i64 %15)
  %cmp = icmp ugt i64 %cond, %15
  br i1 %cmp, label %if.then, label %cond.end.if.end_crit_edge

cond.end.if.end_crit_edge:                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  %16 = ptrtoint ptr %maxcount to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %maxcount, align 4
  %sub = sub i64 %cond, %15
  %conv = trunc i64 %sub to i32
  %18 = tail call i32 @llvm.umin.i32(i32 %17, i32 %conv)
  %19 = ptrtoint ptr %maxcount to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %maxcount, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end.if.end_crit_edge
  %20 = ptrtoint ptr %maxcount to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %maxcount, align 4
  %22 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %buf, align 4
  %buflen = getelementptr inbounds %struct.xdr_buf, ptr %23, i32 0, i32 7
  %24 = ptrtoint ptr %buflen to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %buflen, align 4
  %len13 = getelementptr inbounds %struct.xdr_buf, ptr %23, i32 0, i32 8
  %26 = ptrtoint ptr %len13 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %len13, align 4
  %sub14 = sub i32 %25, %27
  %28 = tail call i32 @llvm.umin.i32(i32 %21, i32 %sub14)
  %29 = ptrtoint ptr %maxcount to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %maxcount, align 4
  %call22 = tail call ptr @xdr_reserve_space(ptr noundef %1, i32 noundef 16) #16
  %tobool23.not = icmp eq ptr %call22, null
  br i1 %tobool23.not, label %if.end.cleanup_crit_edge, label %if.end25

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end25:                                         ; preds = %if.end
  %rqstp = getelementptr inbounds %struct.nfsd4_compoundres, ptr %resp, i32 0, i32 1
  %30 = ptrtoint ptr %rqstp to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %rqstp, align 4
  %rq_vec = getelementptr inbounds %struct.svc_rqst, ptr %31, i32 0, i32 25
  %32 = ptrtoint ptr %maxcount to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %maxcount, align 4
  %call26 = tail call i32 @xdr_reserve_space_vec(ptr noundef %1, ptr noundef %rq_vec, i32 noundef %33) #16
  %rd_vlen = getelementptr inbounds %struct.nfsd4_read, ptr %read, i32 0, i32 3
  %34 = ptrtoint ptr %rd_vlen to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %call26, ptr %rd_vlen, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %cmp28 = icmp slt i32 %call26, 0
  br i1 %cmp28, label %if.end25.cleanup_crit_edge, label %if.end31

if.end25.cleanup_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end31:                                         ; preds = %if.end25
  %35 = ptrtoint ptr %rqstp to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %rqstp, align 4
  %rd_fhp = getelementptr inbounds %struct.nfsd4_read, ptr %read, i32 0, i32 6
  %37 = ptrtoint ptr %rd_fhp to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %rd_fhp, align 8
  %39 = ptrtoint ptr %rd_offset2 to i32
  call void @__asan_load8_noabort(i32 %39)
  %40 = load i64, ptr %rd_offset2, align 8
  %rq_vec35 = getelementptr inbounds %struct.svc_rqst, ptr %36, i32 0, i32 25
  %call38 = tail call i32 @nfsd_readv(ptr noundef %36, ptr noundef %38, ptr noundef %5, i64 noundef %40, ptr noundef %rq_vec35, i32 noundef %call26, ptr noundef %maxcount, ptr noundef %eof) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call38)
  %tobool39.not = icmp eq i32 %call38, 0
  br i1 %tobool39.not, label %if.end41, label %if.end31.cleanup_crit_edge

if.end31.cleanup_crit_edge:                       ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end41:                                         ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #18
  %add = add i32 %9, 16
  %41 = ptrtoint ptr %maxcount to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %maxcount, align 4
  %add.i = add i32 %42, 3
  %and.i = and i32 %add.i, -4
  %add43 = add i32 %and.i, %add
  tail call void @xdr_truncate_encode(ptr noundef %1, i32 noundef %add43) #16
  %43 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 0, ptr %tmp, align 4
  %44 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %buf, align 4
  %call45 = call i32 @write_bytes_to_xdr_buf(ptr noundef %45, i32 noundef %9, ptr noundef nonnull %tmp, i32 noundef 4) #16
  %46 = ptrtoint ptr %rd_offset2 to i32
  call void @__asan_load8_noabort(i32 %46)
  %47 = load i64, ptr %rd_offset2, align 8
  %48 = ptrtoint ptr %tmp64 to i32
  call void @__asan_store8_noabort(i32 %48)
  store i64 %47, ptr %tmp64, align 8
  %49 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %buf, align 4
  %add48 = add i32 %9, 4
  %call49 = call i32 @write_bytes_to_xdr_buf(ptr noundef %50, i32 noundef %add48, ptr noundef nonnull %tmp64, i32 noundef 8) #16
  %51 = ptrtoint ptr %maxcount to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %maxcount, align 4
  %53 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %tmp, align 4
  %54 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %buf, align 4
  %add51 = add i32 %9, 12
  %call52 = call i32 @write_bytes_to_xdr_buf(ptr noundef %55, i32 noundef %add51, ptr noundef nonnull %tmp, i32 noundef 4) #16
  %56 = ptrtoint ptr %tmp to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 0, ptr %tmp, align 4
  %57 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %buf, align 4
  %59 = ptrtoint ptr %maxcount to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %maxcount, align 4
  %add55 = add i32 %60, %add
  %add.i.i = add i32 %60, 3
  %and.i.i = and i32 %add.i.i, -4
  %sub.i = sub i32 %and.i.i, %60
  %call57 = call i32 @write_bytes_to_xdr_buf(ptr noundef %58, i32 noundef %add55, ptr noundef nonnull %tmp, i32 noundef %sub.i) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end41, %if.end31.cleanup_crit_edge, %if.end25.cleanup_crit_edge, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end41 ], [ 10018, %if.end.cleanup_crit_edge ], [ 10018, %if.end25.cleanup_crit_edge ], [ %call38, %if.end31.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp64) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tmp) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #12

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_nfsd_compound_encode_err(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @xdr_inline_decode(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @svcxdr_savemem(ptr nocapture noundef %argp, ptr noundef readonly %p, i32 noundef %len) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %scratch = getelementptr inbounds %struct.xdr_stream, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %scratch to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %scratch, align 4
  %cmp.not = icmp eq ptr %3, %p
  br i1 %cmp.not, label %if.end8.i.i, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8.i.i:                                      ; preds = %entry
  %add.i = add i32 %len, 4
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i, i32 noundef 3264) #20
  %tobool.not.i = icmp eq ptr %call9.i.i, null
  br i1 %tobool.not.i, label %if.end8.i.i.cleanup_crit_edge, label %svcxdr_tmpalloc.exit

if.end8.i.i.cleanup_crit_edge:                    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

svcxdr_tmpalloc.exit:                             ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %to_free.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 1
  %4 = ptrtoint ptr %to_free.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %to_free.i, align 4
  %6 = ptrtoint ptr %call9.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %5, ptr %call9.i.i, align 128
  store ptr %call9.i.i, ptr %to_free.i, align 4
  %buf.i = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call9.i.i, i32 0, i32 1
  %7 = call ptr @memcpy(ptr %buf.i, ptr %p, i32 %len)
  br label %cleanup

cleanup:                                          ; preds = %svcxdr_tmpalloc.exit, %if.end8.i.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %buf.i, %svcxdr_tmpalloc.exit ], [ %p, %entry.cleanup_crit_edge ], [ null, %if.end8.i.i.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_nfsd_compound_decode_err(ptr noundef %rqstp, i32 noundef %args_opcnt, i32 noundef %resp_opcnt, i32 noundef %opnum, i32 noundef %status) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_nfsd_compound_decode_err, i32 0, i32 1), ptr blockaddress(@trace_nfsd_compound_decode_err, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !110

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !93) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !104

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.23, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !93) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !130
  %call42 = tail call i32 @__traceiter_nfsd_compound_decode_err(ptr noundef null, ptr noundef %rqstp, i32 noundef %args_opcnt, i32 noundef %resp_opcnt, i32 noundef %opnum, i32 noundef %status) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !131
  %13 = tail call i32 @llvm.read_register.i32(metadata !93) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !93) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !104

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.23, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !93) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !113
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_nfsd_compound_decode_err, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_nfsd_compound_decode_err, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_nfsd_compound_decode_err.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_nfsd_compound_decode_err.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.22, i32 noundef 161, ptr noundef nonnull @.str.3) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !114
  %31 = tail call i32 @llvm.read_register.i32(metadata !93) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @OPDESC(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @nfsd4_cache_this_op(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfsd4_max_reply(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @svc_reserve(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_access(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %access) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry._crit_edge, label %xdr_stream_decode_u32.exit, !prof !108

entry._crit_edge:                                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %5

xdr_stream_decode_u32.exit:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %access to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %access, align 4
  br label %5

5:                                                ; preds = %xdr_stream_decode_u32.exit, %entry._crit_edge
  %6 = phi i32 [ 0, %xdr_stream_decode_u32.exit ], [ 10036, %entry._crit_edge ]
  ret i32 %6
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_close(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %close) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.return_crit_edge, label %if.end, !prof !108

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %close to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %close, align 4
  %5 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %argp, align 32
  %call.i4 = tail call ptr @xdr_inline_decode(ptr noundef %6, i32 noundef 16) #16
  %tobool.not.i5 = icmp eq ptr %call.i4, null
  br i1 %tobool.not.i5, label %if.end.return_crit_edge, label %if.end.i6

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end.i6:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %cl_stateid = getelementptr inbounds %struct.nfsd4_close, ptr %close, i32 0, i32 1
  %incdec.ptr.i = getelementptr i32, ptr %call.i4, i32 1
  %7 = ptrtoint ptr %call.i4 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %call.i4, align 4
  %9 = ptrtoint ptr %cl_stateid to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %cl_stateid, align 4
  %si_opaque.i = getelementptr inbounds %struct.nfsd4_close, ptr %close, i32 0, i32 1, i32 1
  %10 = call ptr @memcpy(ptr %si_opaque.i, ptr %incdec.ptr.i, i32 12)
  br label %return

return:                                           ; preds = %if.end.i6, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %if.end.i6 ], [ 10036, %if.end.return_crit_edge ], [ 10036, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_commit(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %commit) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 8) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.return_crit_edge, label %if.end, !prof !108

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %3 = load i64, ptr %call.i, align 1
  %4 = ptrtoint ptr %commit to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %3, ptr %commit, align 8
  %5 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %argp, align 32
  %call.i8 = tail call ptr @xdr_inline_decode(ptr noundef %6, i32 noundef 4) #16
  %tobool.not.i9 = icmp eq ptr %call.i8, null
  br i1 %tobool.not.i9, label %if.end.return_crit_edge, label %xdr_stream_decode_u32.exit, !prof !108

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

xdr_stream_decode_u32.exit:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %co_count = getelementptr inbounds %struct.nfsd4_commit, ptr %commit, i32 0, i32 1
  %7 = ptrtoint ptr %call.i8 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %call.i8, align 4
  %9 = ptrtoint ptr %co_count to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %co_count, align 4
  br label %return

return:                                           ; preds = %xdr_stream_decode_u32.exit, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %xdr_stream_decode_u32.exit ], [ 10036, %if.end.return_crit_edge ], [ 10036, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_create(ptr noundef %argp, ptr noundef %create) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end, !prof !108

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %cr_type = getelementptr inbounds %struct.nfsd4_create, ptr %create, i32 0, i32 2
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %cr_type to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %cr_type, align 4
  %5 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.41)
  switch i32 %3, label %if.end.sw.epilog_crit_edge [
    i32 5, label %sw.bb
    i32 3, label %if.end.sw.bb22_crit_edge
    i32 4, label %if.end.sw.bb22_crit_edge99
  ]

if.end.sw.bb22_crit_edge99:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb22

if.end.sw.bb22_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb22

if.end.sw.epilog_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.bb:                                            ; preds = %if.end
  %6 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %argp, align 32
  %u = getelementptr inbounds %struct.nfsd4_create, ptr %create, i32 0, i32 3
  %call.i71 = tail call ptr @xdr_inline_decode(ptr noundef %7, i32 noundef 4) #16
  %tobool.not.i72 = icmp eq ptr %call.i71, null
  br i1 %tobool.not.i72, label %sw.bb.cleanup_crit_edge, label %if.end6, !prof !108

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end6:                                          ; preds = %sw.bb
  %8 = ptrtoint ptr %call.i71 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %call.i71, align 4
  %10 = ptrtoint ptr %u to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %u, align 4
  %11 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %argp, align 32
  %call10 = tail call ptr @xdr_inline_decode(ptr noundef %12, i32 noundef %9) #16
  %tobool.not = icmp eq ptr %call10, null
  br i1 %tobool.not, label %if.end6.cleanup_crit_edge, label %if.end12

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end12:                                         ; preds = %if.end6
  %13 = ptrtoint ptr %u to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %u, align 4
  %add.i.i = add i32 %14, 5
  %call9.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i.i, i32 noundef 3264) #20
  %tobool.not.i.i = icmp eq ptr %call9.i.i.i, null
  br i1 %tobool.not.i.i, label %svcxdr_dupstr.exit.thread, label %svcxdr_dupstr.exit

svcxdr_dupstr.exit.thread:                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  %data93 = getelementptr inbounds %struct.nfsd4_create, ptr %create, i32 0, i32 3, i32 0, i32 1
  %15 = ptrtoint ptr %data93 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %data93, align 4
  br label %cleanup

svcxdr_dupstr.exit:                               ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  %to_free.i.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 1
  %16 = ptrtoint ptr %to_free.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %to_free.i.i, align 4
  %18 = ptrtoint ptr %call9.i.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %17, ptr %call9.i.i.i, align 128
  store ptr %call9.i.i.i, ptr %to_free.i.i, align 4
  %buf.i.i = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call9.i.i.i, i32 0, i32 1
  %19 = call ptr @memcpy(ptr %buf.i.i, ptr %call10, i32 %14)
  %arrayidx.i = getelementptr i8, ptr %buf.i.i, i32 %14
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 0, ptr %arrayidx.i, align 1
  %data = getelementptr inbounds %struct.nfsd4_create, ptr %create, i32 0, i32 3, i32 0, i32 1
  %21 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %buf.i.i, ptr %data, align 4
  br label %sw.epilog

sw.bb22:                                          ; preds = %if.end.sw.bb22_crit_edge, %if.end.sw.bb22_crit_edge99
  %22 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %argp, align 32
  %call.i78 = tail call ptr @xdr_inline_decode(ptr noundef %23, i32 noundef 4) #16
  %tobool.not.i79 = icmp eq ptr %call.i78, null
  br i1 %tobool.not.i79, label %sw.bb22.cleanup_crit_edge, label %if.end28, !prof !108

sw.bb22.cleanup_crit_edge:                        ; preds = %sw.bb22
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end28:                                         ; preds = %sw.bb22
  %u24 = getelementptr inbounds %struct.nfsd4_create, ptr %create, i32 0, i32 3
  %24 = ptrtoint ptr %call.i78 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %call.i78, align 4
  %26 = ptrtoint ptr %u24 to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %25, ptr %u24, align 4
  %27 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %argp, align 32
  %call.i83 = tail call ptr @xdr_inline_decode(ptr noundef %28, i32 noundef 4) #16
  %tobool.not.i84 = icmp eq ptr %call.i83, null
  br i1 %tobool.not.i84, label %if.end28.cleanup_crit_edge, label %xdr_stream_decode_u32.exit87, !prof !108

if.end28.cleanup_crit_edge:                       ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

xdr_stream_decode_u32.exit87:                     ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #18
  %specdata2 = getelementptr inbounds %struct.nfsd4_create, ptr %create, i32 0, i32 3, i32 0, i32 1
  %29 = ptrtoint ptr %call.i83 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %call.i83, align 4
  %31 = ptrtoint ptr %specdata2 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %specdata2, align 4
  br label %sw.epilog

sw.epilog:                                        ; preds = %xdr_stream_decode_u32.exit87, %svcxdr_dupstr.exit, %if.end.sw.epilog_crit_edge
  %cr_name = getelementptr inbounds %struct.nfsd4_create, ptr %create, i32 0, i32 1
  %call36 = tail call fastcc i32 @nfsd4_decode_component4(ptr noundef %argp, ptr noundef %cr_name, ptr noundef %create)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36)
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %if.end39, label %sw.epilog.cleanup_crit_edge

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end39:                                         ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  %cr_bmval = getelementptr inbounds %struct.nfsd4_create, ptr %create, i32 0, i32 4
  %cr_iattr = getelementptr inbounds %struct.nfsd4_create, ptr %create, i32 0, i32 5
  %cr_acl = getelementptr inbounds %struct.nfsd4_create, ptr %create, i32 0, i32 8
  %cr_label = getelementptr inbounds %struct.nfsd4_create, ptr %create, i32 0, i32 9
  %cr_umask = getelementptr inbounds %struct.nfsd4_create, ptr %create, i32 0, i32 6
  %call40 = tail call fastcc i32 @nfsd4_decode_fattr4(ptr noundef %argp, ptr noundef %cr_bmval, ptr noundef %cr_iattr, ptr noundef %cr_acl, ptr noundef %cr_label, ptr noundef %cr_umask)
  br label %cleanup

cleanup:                                          ; preds = %if.end39, %sw.epilog.cleanup_crit_edge, %if.end28.cleanup_crit_edge, %sw.bb22.cleanup_crit_edge, %svcxdr_dupstr.exit.thread, %if.end6.cleanup_crit_edge, %sw.bb.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %if.end6.cleanup_crit_edge ], [ %call36, %sw.epilog.cleanup_crit_edge ], [ %call40, %if.end39 ], [ 10008, %svcxdr_dupstr.exit.thread ], [ 10036, %entry.cleanup_crit_edge ], [ 10036, %sw.bb.cleanup_crit_edge ], [ 10036, %sw.bb22.cleanup_crit_edge ], [ 10036, %if.end28.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @nfsd4_decode_notsupp(ptr nocapture noundef readnone %argp, ptr nocapture noundef readnone %p) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 10004
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_delegreturn(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %dr) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.nfsd4_decode_stateid4.exit_crit_edge, label %if.end.i

entry.nfsd4_decode_stateid4.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_stateid4.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %dr to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %dr, align 4
  %si_opaque.i = getelementptr inbounds %struct.stateid_t, ptr %dr, i32 0, i32 1
  %5 = call ptr @memcpy(ptr %si_opaque.i, ptr %incdec.ptr.i, i32 12)
  br label %nfsd4_decode_stateid4.exit

nfsd4_decode_stateid4.exit:                       ; preds = %if.end.i, %entry.nfsd4_decode_stateid4.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end.i ], [ 10036, %entry.nfsd4_decode_stateid4.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_getattr(ptr nocapture noundef readonly %argp, ptr noundef writeonly %getattr) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i.i.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i.i, label %entry.xdr_stream_decode_uint32_array.exit.thread.i_crit_edge, label %if.end.i.i, !prof !108

entry.xdr_stream_decode_uint32_array.exit.thread.i_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit.thread.i

if.end.i.i:                                       ; preds = %entry
  %2 = ptrtoint ptr %call.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i.i.i, align 4
  %mul.i.i = shl i32 %3, 2
  %call3.i.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef %mul.i.i) #16
  %tobool4.not.i.i = icmp eq ptr %call3.i.i, null
  br i1 %tobool4.not.i.i, label %if.end.i.i.xdr_stream_decode_uint32_array.exit.thread.i_crit_edge, label %if.end14.i.i, !prof !108

if.end.i.i.xdr_stream_decode_uint32_array.exit.thread.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit.thread.i

if.end14.i.i:                                     ; preds = %if.end.i.i
  %cmp15.i.i = icmp eq ptr %getattr, null
  br i1 %cmp15.i.i, label %if.end14.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge, label %if.end17.i.i

if.end14.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge: ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit.i

if.end17.i.i:                                     ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %3)
  %cmp18.not.i.i = icmp ugt i32 %3, 3
  br i1 %cmp18.not.i.i, label %if.end17.i.i.for.body.i.preheader.i_crit_edge, label %if.then19.i.i

if.end17.i.i.for.body.i.preheader.i_crit_edge:    ; preds = %if.end17.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader.i

if.then19.i.i:                                    ; preds = %if.end17.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %3)
  %cmp20.i.not.i = icmp eq i32 %3, 3
  br i1 %cmp20.i.not.i, label %if.then19.i.i.for.body.i.preheader.i_crit_edge, label %if.end24.i.i

if.then19.i.i.for.body.i.preheader.i_crit_edge:   ; preds = %if.then19.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader.i

if.end24.i.i:                                     ; preds = %if.then19.i.i
  %add.ptr.i.i = getelementptr i32, ptr %getattr, i32 %3
  %.neg.i = mul nsw i32 %3, -4
  %mul22.i.i = add nsw i32 %.neg.i, 12
  %4 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %mul22.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp25.not47.i.i = icmp eq i32 %3, 0
  br i1 %cmp25.not47.i.i, label %if.end24.i.i.nfsd4_decode_bitmap4.exit_crit_edge, label %if.end24.i.i.for.body.i.preheader.i_crit_edge

if.end24.i.i.for.body.i.preheader.i_crit_edge:    ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader.i

if.end24.i.i.nfsd4_decode_bitmap4.exit_crit_edge: ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_bitmap4.exit

for.body.i.preheader.i:                           ; preds = %if.end24.i.i.for.body.i.preheader.i_crit_edge, %if.then19.i.i.for.body.i.preheader.i_crit_edge, %if.end17.i.i.for.body.i.preheader.i_crit_edge
  %retval1.0.i7.i = phi i32 [ %3, %if.end24.i.i.for.body.i.preheader.i_crit_edge ], [ 3, %if.then19.i.i.for.body.i.preheader.i_crit_edge ], [ -90, %if.end17.i.i.for.body.i.preheader.i_crit_edge ]
  %array_size.addr.0.i6.i = phi i32 [ %3, %if.end24.i.i.for.body.i.preheader.i_crit_edge ], [ 3, %if.then19.i.i.for.body.i.preheader.i_crit_edge ], [ 3, %if.end17.i.i.for.body.i.preheader.i_crit_edge ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %for.body.i.preheader.i
  %p.050.i.i = phi ptr [ %incdec.ptr.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %call3.i.i, %for.body.i.preheader.i ]
  %array_size.addr.149.i.i = phi i32 [ %dec.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %array_size.addr.0.i6.i, %for.body.i.preheader.i ]
  %array.addr.048.i.i = phi ptr [ %incdec.ptr27.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %getattr, %for.body.i.preheader.i ]
  %5 = ptrtoint ptr %p.050.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %p.050.i.i, align 4
  %7 = ptrtoint ptr %array.addr.048.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %array.addr.048.i.i, align 4
  %incdec.ptr.i.i = getelementptr i32, ptr %p.050.i.i, i32 1
  %incdec.ptr27.i.i = getelementptr i32, ptr %array.addr.048.i.i, i32 1
  %dec.i.i = add i32 %array_size.addr.149.i.i, -1
  %cmp25.not.i.i = icmp eq i32 %dec.i.i, 0
  br i1 %cmp25.not.i.i, label %for.body.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.body.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge: ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit.i

xdr_stream_decode_uint32_array.exit.i:            ; preds = %for.body.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge, %if.end14.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %3, %if.end14.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge ], [ %retval1.0.i7.i, %for.body.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -74, i32 %retval.0.i.i)
  %cmp.i = icmp eq i32 %retval.0.i.i, -74
  br i1 %cmp.i, label %xdr_stream_decode_uint32_array.exit.i.xdr_stream_decode_uint32_array.exit.thread.i_crit_edge, label %xdr_stream_decode_uint32_array.exit.i.nfsd4_decode_bitmap4.exit_crit_edge

xdr_stream_decode_uint32_array.exit.i.nfsd4_decode_bitmap4.exit_crit_edge: ; preds = %xdr_stream_decode_uint32_array.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_bitmap4.exit

xdr_stream_decode_uint32_array.exit.i.xdr_stream_decode_uint32_array.exit.thread.i_crit_edge: ; preds = %xdr_stream_decode_uint32_array.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit.thread.i

xdr_stream_decode_uint32_array.exit.thread.i:     ; preds = %xdr_stream_decode_uint32_array.exit.i.xdr_stream_decode_uint32_array.exit.thread.i_crit_edge, %if.end.i.i.xdr_stream_decode_uint32_array.exit.thread.i_crit_edge, %entry.xdr_stream_decode_uint32_array.exit.thread.i_crit_edge
  br label %nfsd4_decode_bitmap4.exit

nfsd4_decode_bitmap4.exit:                        ; preds = %xdr_stream_decode_uint32_array.exit.thread.i, %xdr_stream_decode_uint32_array.exit.i.nfsd4_decode_bitmap4.exit_crit_edge, %if.end24.i.i.nfsd4_decode_bitmap4.exit_crit_edge
  %8 = phi i32 [ 10036, %xdr_stream_decode_uint32_array.exit.thread.i ], [ 0, %xdr_stream_decode_uint32_array.exit.i.nfsd4_decode_bitmap4.exit_crit_edge ], [ 0, %if.end24.i.i.nfsd4_decode_bitmap4.exit_crit_edge ]
  ret i32 %8
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @nfsd4_decode_noop(ptr nocapture noundef readnone %argp, ptr nocapture noundef readnone %p) #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_link(ptr nocapture noundef %argp, ptr nocapture noundef %link) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %li_name = getelementptr inbounds %struct.nfsd4_link, ptr %link, i32 0, i32 1
  %call = tail call fastcc i32 @nfsd4_decode_component4(ptr noundef %argp, ptr noundef %li_name, ptr noundef %link)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_lock(ptr nocapture noundef %argp, ptr nocapture noundef %lock) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.return_crit_edge, label %if.end, !prof !108

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %lock to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %lock, align 4
  %5 = add i32 %3, -5
  call void @__sanitizer_cov_trace_const_cmp4(i32 -4, i32 %5)
  %6 = icmp ult i32 %5, -4
  br i1 %6, label %if.end.return_crit_edge, label %if.end6

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end6:                                          ; preds = %if.end
  %7 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %argp, align 32
  %call.i33 = tail call ptr @xdr_inline_decode(ptr noundef %8, i32 noundef 4) #16
  %tobool.not.i34 = icmp eq ptr %call.i33, null
  br i1 %tobool.not.i34, label %if.end6.return_crit_edge, label %if.end11, !prof !108

if.end6.return_crit_edge:                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end11:                                         ; preds = %if.end6
  %lk_reclaim = getelementptr inbounds %struct.nfsd4_lock, ptr %lock, i32 0, i32 1
  %9 = ptrtoint ptr %call.i33 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %call.i33, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %cmp.i = icmp ne i32 %10, 0
  %conv.i = zext i1 %cmp.i to i32
  %11 = ptrtoint ptr %lk_reclaim to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %conv.i, ptr %lk_reclaim, align 4
  %12 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %argp, align 32
  %call.i37 = tail call ptr @xdr_inline_decode(ptr noundef %13, i32 noundef 8) #16
  %tobool.not.i38 = icmp eq ptr %call.i37, null
  br i1 %tobool.not.i38, label %if.end11.return_crit_edge, label %if.end16, !prof !108

if.end11.return_crit_edge:                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end16:                                         ; preds = %if.end11
  %lk_offset = getelementptr inbounds %struct.nfsd4_lock, ptr %lock, i32 0, i32 2
  %14 = ptrtoint ptr %call.i37 to i32
  call void @__asan_loadN_noabort(i32 %14, i32 8)
  %15 = load i64, ptr %call.i37, align 1
  %16 = ptrtoint ptr %lk_offset to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %15, ptr %lk_offset, align 8
  %17 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %argp, align 32
  %call.i41 = tail call ptr @xdr_inline_decode(ptr noundef %18, i32 noundef 8) #16
  %tobool.not.i42 = icmp eq ptr %call.i41, null
  br i1 %tobool.not.i42, label %if.end16.return_crit_edge, label %if.end21, !prof !108

if.end16.return_crit_edge:                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end21:                                         ; preds = %if.end16
  %lk_length = getelementptr inbounds %struct.nfsd4_lock, ptr %lock, i32 0, i32 3
  %19 = ptrtoint ptr %call.i41 to i32
  call void @__asan_loadN_noabort(i32 %19, i32 8)
  %20 = load i64, ptr %call.i41, align 1
  %21 = ptrtoint ptr %lk_length to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %lk_length, align 8
  %22 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %argp, align 32
  %call.i.i = tail call ptr @xdr_inline_decode(ptr noundef %23, i32 noundef 4) #16
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.end21.return_crit_edge, label %if.end.i46, !prof !108

if.end21.return_crit_edge:                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end.i46:                                       ; preds = %if.end21
  %lk_is_new.i = getelementptr inbounds %struct.nfsd4_lock, ptr %lock, i32 0, i32 4
  %24 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %call.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp.i.i = icmp ne i32 %25, 0
  %conv.i.i = zext i1 %cmp.i.i to i32
  %26 = ptrtoint ptr %lk_is_new.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 %conv.i.i, ptr %lk_is_new.i, align 4
  %27 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %argp, align 32
  br i1 %cmp.i.i, label %if.then2.i, label %if.end4.i

if.then2.i:                                       ; preds = %if.end.i46
  %call.i.i.i = tail call ptr @xdr_inline_decode(ptr noundef %28, i32 noundef 4) #16
  %tobool.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i.i, label %if.then2.i.return_crit_edge, label %if.end.i11.i, !prof !108

if.then2.i.return_crit_edge:                      ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end.i11.i:                                     ; preds = %if.then2.i
  %v.i.i = getelementptr inbounds %struct.nfsd4_lock, ptr %lock, i32 0, i32 5
  %29 = ptrtoint ptr %call.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %call.i.i.i, align 4
  %31 = ptrtoint ptr %v.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %v.i.i, align 4
  %32 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %argp, align 32
  %call.i22.i.i = tail call ptr @xdr_inline_decode(ptr noundef %33, i32 noundef 16) #16
  %tobool.not.i23.i.i = icmp eq ptr %call.i22.i.i, null
  br i1 %tobool.not.i23.i.i, label %if.end.i11.i.return_crit_edge, label %if.end4.i.i

if.end.i11.i.return_crit_edge:                    ; preds = %if.end.i11.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end4.i.i:                                      ; preds = %if.end.i11.i
  %open_stateid.i.i = getelementptr inbounds %struct.nfsd4_lock, ptr %lock, i32 0, i32 5, i32 0, i32 1
  %incdec.ptr.i.i.i = getelementptr i32, ptr %call.i22.i.i, i32 1
  %34 = ptrtoint ptr %call.i22.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %call.i22.i.i, align 4
  %36 = ptrtoint ptr %open_stateid.i.i to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %open_stateid.i.i, align 4
  %si_opaque.i.i.i = getelementptr inbounds %struct.nfsd4_lock, ptr %lock, i32 0, i32 5, i32 0, i32 1, i32 1
  %37 = call ptr @memcpy(ptr %si_opaque.i.i.i, ptr %incdec.ptr.i.i.i, i32 12)
  %38 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %argp, align 32
  %call.i26.i.i = tail call ptr @xdr_inline_decode(ptr noundef %39, i32 noundef 4) #16
  %tobool.not.i27.i.i = icmp eq ptr %call.i26.i.i, null
  br i1 %tobool.not.i27.i.i, label %if.end4.i.i.return_crit_edge, label %if.end10.i.i, !prof !108

if.end4.i.i.return_crit_edge:                     ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end10.i.i:                                     ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %lock_seqid.i.i = getelementptr inbounds %struct.nfsd4_lock, ptr %lock, i32 0, i32 5, i32 0, i32 2
  %40 = ptrtoint ptr %call.i26.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %call.i26.i.i, align 4
  %42 = ptrtoint ptr %lock_seqid.i.i to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %lock_seqid.i.i, align 4
  %clientid.i.i = getelementptr inbounds %struct.nfsd4_lock, ptr %lock, i32 0, i32 5, i32 0, i32 3
  %owner.i.i = getelementptr inbounds %struct.nfsd4_lock, ptr %lock, i32 0, i32 5, i32 0, i32 4
  %call13.i.i = tail call fastcc i32 @nfsd4_decode_state_owner4(ptr noundef %argp, ptr noundef %clientid.i.i, ptr noundef %owner.i.i) #16
  br label %return

if.end4.i:                                        ; preds = %if.end.i46
  %call.i.i13.i = tail call ptr @xdr_inline_decode(ptr noundef %28, i32 noundef 16) #16
  %tobool.not.i.i14.i = icmp eq ptr %call.i.i13.i, null
  br i1 %tobool.not.i.i14.i, label %if.end4.i.return_crit_edge, label %if.end.i18.i

if.end4.i.return_crit_edge:                       ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end.i18.i:                                     ; preds = %if.end4.i
  %v.i15.i = getelementptr inbounds %struct.nfsd4_lock, ptr %lock, i32 0, i32 5
  %incdec.ptr.i.i16.i = getelementptr i32, ptr %call.i.i13.i, i32 1
  %43 = ptrtoint ptr %call.i.i13.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %call.i.i13.i, align 4
  %45 = ptrtoint ptr %v.i15.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %v.i15.i, align 4
  %si_opaque.i.i17.i = getelementptr inbounds %struct.nfsd4_lock, ptr %lock, i32 0, i32 5, i32 0, i32 1
  %46 = call ptr @memcpy(ptr %si_opaque.i.i17.i, ptr %incdec.ptr.i.i16.i, i32 12)
  %47 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %argp, align 32
  %call.i8.i.i = tail call ptr @xdr_inline_decode(ptr noundef %48, i32 noundef 4) #16
  %tobool.not.i9.i.i = icmp eq ptr %call.i8.i.i, null
  br i1 %tobool.not.i9.i.i, label %if.end.i18.i.return_crit_edge, label %xdr_stream_decode_u32.exit.i.i, !prof !108

if.end.i18.i.return_crit_edge:                    ; preds = %if.end.i18.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

xdr_stream_decode_u32.exit.i.i:                   ; preds = %if.end.i18.i
  call void @__sanitizer_cov_trace_pc() #18
  %lock_seqid.i19.i = getelementptr inbounds %struct.nfsd4_lock, ptr %lock, i32 0, i32 5, i32 0, i32 1, i32 1, i32 1
  %49 = ptrtoint ptr %call.i8.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %call.i8.i.i, align 4
  %51 = ptrtoint ptr %lock_seqid.i19.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %lock_seqid.i19.i, align 4
  br label %return

return:                                           ; preds = %xdr_stream_decode_u32.exit.i.i, %if.end.i18.i.return_crit_edge, %if.end4.i.return_crit_edge, %if.end10.i.i, %if.end4.i.i.return_crit_edge, %if.end.i11.i.return_crit_edge, %if.then2.i.return_crit_edge, %if.end21.return_crit_edge, %if.end16.return_crit_edge, %if.end11.return_crit_edge, %if.end6.return_crit_edge, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ 10036, %if.end.return_crit_edge ], [ %call13.i.i, %if.end10.i.i ], [ 10036, %if.end.i11.i.return_crit_edge ], [ 10036, %if.then2.i.return_crit_edge ], [ 10036, %if.end4.i.i.return_crit_edge ], [ 10036, %if.end4.i.return_crit_edge ], [ 0, %xdr_stream_decode_u32.exit.i.i ], [ 10036, %if.end.i18.i.return_crit_edge ], [ 10036, %if.end21.return_crit_edge ], [ 10036, %entry.return_crit_edge ], [ 10036, %if.end6.return_crit_edge ], [ 10036, %if.end11.return_crit_edge ], [ 10036, %if.end16.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_lockt(ptr nocapture noundef %argp, ptr nocapture noundef %lockt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.return_crit_edge, label %if.end, !prof !108

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %lockt to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %lockt, align 4
  %5 = add i32 %3, -5
  call void @__sanitizer_cov_trace_const_cmp4(i32 -4, i32 %5)
  %6 = icmp ult i32 %5, -4
  br i1 %6, label %if.end.return_crit_edge, label %if.end6

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end6:                                          ; preds = %if.end
  %7 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %argp, align 32
  %call.i27 = tail call ptr @xdr_inline_decode(ptr noundef %8, i32 noundef 8) #16
  %tobool.not.i28 = icmp eq ptr %call.i27, null
  br i1 %tobool.not.i28, label %if.end6.return_crit_edge, label %if.end11, !prof !108

if.end6.return_crit_edge:                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end11:                                         ; preds = %if.end6
  %lt_offset = getelementptr inbounds %struct.nfsd4_lockt, ptr %lockt, i32 0, i32 3
  %9 = ptrtoint ptr %call.i27 to i32
  call void @__asan_loadN_noabort(i32 %9, i32 8)
  %10 = load i64, ptr %call.i27, align 1
  %11 = ptrtoint ptr %lt_offset to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %10, ptr %lt_offset, align 8
  %12 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %argp, align 32
  %call.i31 = tail call ptr @xdr_inline_decode(ptr noundef %13, i32 noundef 8) #16
  %tobool.not.i32 = icmp eq ptr %call.i31, null
  br i1 %tobool.not.i32, label %if.end11.return_crit_edge, label %if.end16, !prof !108

if.end11.return_crit_edge:                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end16:                                         ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  %lt_length = getelementptr inbounds %struct.nfsd4_lockt, ptr %lockt, i32 0, i32 4
  %14 = ptrtoint ptr %call.i31 to i32
  call void @__asan_loadN_noabort(i32 %14, i32 8)
  %15 = load i64, ptr %call.i31, align 1
  %16 = ptrtoint ptr %lt_length to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %15, ptr %lt_length, align 8
  %lt_clientid = getelementptr inbounds %struct.nfsd4_lockt, ptr %lockt, i32 0, i32 1
  %lt_owner = getelementptr inbounds %struct.nfsd4_lockt, ptr %lockt, i32 0, i32 2
  %call17 = tail call fastcc i32 @nfsd4_decode_state_owner4(ptr noundef %argp, ptr noundef %lt_clientid, ptr noundef %lt_owner)
  br label %return

return:                                           ; preds = %if.end16, %if.end11.return_crit_edge, %if.end6.return_crit_edge, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call17, %if.end16 ], [ 10036, %if.end.return_crit_edge ], [ 10036, %entry.return_crit_edge ], [ 10036, %if.end6.return_crit_edge ], [ 10036, %if.end11.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_locku(ptr nocapture noundef readonly %argp, ptr nocapture noundef %locku) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end, !prof !108

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %locku to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %locku, align 4
  %5 = add i32 %3, -5
  call void @__sanitizer_cov_trace_const_cmp4(i32 -4, i32 %5)
  %6 = icmp ult i32 %5, -4
  br i1 %6, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %7 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %argp, align 32
  %call.i36 = tail call ptr @xdr_inline_decode(ptr noundef %8, i32 noundef 4) #16
  %tobool.not.i37 = icmp eq ptr %call.i36, null
  br i1 %tobool.not.i37, label %if.end6.cleanup_crit_edge, label %if.end11, !prof !108

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end11:                                         ; preds = %if.end6
  %lu_seqid = getelementptr inbounds %struct.nfsd4_locku, ptr %locku, i32 0, i32 1
  %9 = ptrtoint ptr %call.i36 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %call.i36, align 4
  %11 = ptrtoint ptr %lu_seqid to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %lu_seqid, align 4
  %12 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %argp, align 32
  %call.i41 = tail call ptr @xdr_inline_decode(ptr noundef %13, i32 noundef 16) #16
  %tobool.not.i42 = icmp eq ptr %call.i41, null
  br i1 %tobool.not.i42, label %if.end11.cleanup_crit_edge, label %if.end14

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end14:                                         ; preds = %if.end11
  %lu_stateid = getelementptr inbounds %struct.nfsd4_locku, ptr %locku, i32 0, i32 2
  %incdec.ptr.i = getelementptr i32, ptr %call.i41, i32 1
  %14 = ptrtoint ptr %call.i41 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %call.i41, align 4
  %16 = ptrtoint ptr %lu_stateid to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %lu_stateid, align 4
  %si_opaque.i = getelementptr inbounds %struct.nfsd4_locku, ptr %locku, i32 0, i32 2, i32 1
  %17 = call ptr @memcpy(ptr %si_opaque.i, ptr %incdec.ptr.i, i32 12)
  %18 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %argp, align 32
  %call.i45 = tail call ptr @xdr_inline_decode(ptr noundef %19, i32 noundef 8) #16
  %tobool.not.i46 = icmp eq ptr %call.i45, null
  br i1 %tobool.not.i46, label %if.end14.cleanup_crit_edge, label %if.end19, !prof !108

if.end14.cleanup_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end19:                                         ; preds = %if.end14
  %lu_offset = getelementptr inbounds %struct.nfsd4_locku, ptr %locku, i32 0, i32 3
  %20 = ptrtoint ptr %call.i45 to i32
  call void @__asan_loadN_noabort(i32 %20, i32 8)
  %21 = load i64, ptr %call.i45, align 1
  %22 = ptrtoint ptr %lu_offset to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %21, ptr %lu_offset, align 8
  %23 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %argp, align 32
  %call.i49 = tail call ptr @xdr_inline_decode(ptr noundef %24, i32 noundef 8) #16
  %tobool.not.i50 = icmp eq ptr %call.i49, null
  br i1 %tobool.not.i50, label %if.end19.cleanup_crit_edge, label %xdr_stream_decode_u64.exit53, !prof !108

if.end19.cleanup_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

xdr_stream_decode_u64.exit53:                     ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #18
  %lu_length = getelementptr inbounds %struct.nfsd4_locku, ptr %locku, i32 0, i32 4
  %25 = ptrtoint ptr %call.i49 to i32
  call void @__asan_loadN_noabort(i32 %25, i32 8)
  %26 = load i64, ptr %call.i49, align 1
  %27 = ptrtoint ptr %lu_length to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %26, ptr %lu_length, align 8
  br label %cleanup

cleanup:                                          ; preds = %xdr_stream_decode_u64.exit53, %if.end19.cleanup_crit_edge, %if.end14.cleanup_crit_edge, %if.end11.cleanup_crit_edge, %if.end6.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %if.end.cleanup_crit_edge ], [ 10036, %if.end11.cleanup_crit_edge ], [ 0, %xdr_stream_decode_u64.exit53 ], [ 10036, %if.end19.cleanup_crit_edge ], [ 10036, %entry.cleanup_crit_edge ], [ 10036, %if.end6.cleanup_crit_edge ], [ 10036, %if.end14.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_lookup(ptr nocapture noundef %argp, ptr nocapture noundef %lookup) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %lo_name = getelementptr inbounds %struct.nfsd4_lookup, ptr %lookup, i32 0, i32 1
  %call = tail call fastcc i32 @nfsd4_decode_component4(ptr noundef %argp, ptr noundef %lo_name, ptr noundef %lookup)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_verify(ptr nocapture noundef %argp, ptr noundef %verify) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i.i.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i.i, label %entry.cleanup_crit_edge, label %if.end.i.i, !prof !108

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i.i:                                       ; preds = %entry
  %2 = ptrtoint ptr %call.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i.i.i, align 4
  %mul.i.i = shl i32 %3, 2
  %call3.i.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef %mul.i.i) #16
  %tobool4.not.i.i = icmp eq ptr %call3.i.i, null
  br i1 %tobool4.not.i.i, label %if.end.i.i.cleanup_crit_edge, label %if.end14.i.i, !prof !108

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end14.i.i:                                     ; preds = %if.end.i.i
  %cmp15.i.i = icmp eq ptr %verify, null
  br i1 %cmp15.i.i, label %if.end14.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge, label %if.end17.i.i

if.end14.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge: ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit.i

if.end17.i.i:                                     ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %3)
  %cmp18.not.i.i = icmp ugt i32 %3, 3
  br i1 %cmp18.not.i.i, label %if.end17.i.i.for.body.i.preheader.i_crit_edge, label %if.then19.i.i

if.end17.i.i.for.body.i.preheader.i_crit_edge:    ; preds = %if.end17.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader.i

if.then19.i.i:                                    ; preds = %if.end17.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %3)
  %cmp20.i.not.i = icmp eq i32 %3, 3
  br i1 %cmp20.i.not.i, label %if.then19.i.i.for.body.i.preheader.i_crit_edge, label %if.end24.i.i

if.then19.i.i.for.body.i.preheader.i_crit_edge:   ; preds = %if.then19.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader.i

if.end24.i.i:                                     ; preds = %if.then19.i.i
  %add.ptr.i.i = getelementptr i32, ptr %verify, i32 %3
  %.neg.i = mul nsw i32 %3, -4
  %mul22.i.i = add nsw i32 %.neg.i, 12
  %4 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %mul22.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp25.not47.i.i = icmp eq i32 %3, 0
  br i1 %cmp25.not47.i.i, label %if.end24.i.i.if.end_crit_edge, label %if.end24.i.i.for.body.i.preheader.i_crit_edge

if.end24.i.i.for.body.i.preheader.i_crit_edge:    ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader.i

if.end24.i.i.if.end_crit_edge:                    ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

for.body.i.preheader.i:                           ; preds = %if.end24.i.i.for.body.i.preheader.i_crit_edge, %if.then19.i.i.for.body.i.preheader.i_crit_edge, %if.end17.i.i.for.body.i.preheader.i_crit_edge
  %retval1.0.i7.i = phi i32 [ %3, %if.end24.i.i.for.body.i.preheader.i_crit_edge ], [ 3, %if.then19.i.i.for.body.i.preheader.i_crit_edge ], [ -90, %if.end17.i.i.for.body.i.preheader.i_crit_edge ]
  %array_size.addr.0.i6.i = phi i32 [ %3, %if.end24.i.i.for.body.i.preheader.i_crit_edge ], [ 3, %if.then19.i.i.for.body.i.preheader.i_crit_edge ], [ 3, %if.end17.i.i.for.body.i.preheader.i_crit_edge ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %for.body.i.preheader.i
  %p.050.i.i = phi ptr [ %incdec.ptr.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %call3.i.i, %for.body.i.preheader.i ]
  %array_size.addr.149.i.i = phi i32 [ %dec.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %array_size.addr.0.i6.i, %for.body.i.preheader.i ]
  %array.addr.048.i.i = phi ptr [ %incdec.ptr27.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %verify, %for.body.i.preheader.i ]
  %5 = ptrtoint ptr %p.050.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %p.050.i.i, align 4
  %7 = ptrtoint ptr %array.addr.048.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %array.addr.048.i.i, align 4
  %incdec.ptr.i.i = getelementptr i32, ptr %p.050.i.i, i32 1
  %incdec.ptr27.i.i = getelementptr i32, ptr %array.addr.048.i.i, i32 1
  %dec.i.i = add i32 %array_size.addr.149.i.i, -1
  %cmp25.not.i.i = icmp eq i32 %dec.i.i, 0
  br i1 %cmp25.not.i.i, label %for.body.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.body.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge: ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit.i

xdr_stream_decode_uint32_array.exit.i:            ; preds = %for.body.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge, %if.end14.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %3, %if.end14.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge ], [ %retval1.0.i7.i, %for.body.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -74, i32 %retval.0.i.i)
  %cmp.i = icmp eq i32 %retval.0.i.i, -74
  br i1 %cmp.i, label %xdr_stream_decode_uint32_array.exit.i.cleanup_crit_edge, label %xdr_stream_decode_uint32_array.exit.i.if.end_crit_edge

xdr_stream_decode_uint32_array.exit.i.if.end_crit_edge: ; preds = %xdr_stream_decode_uint32_array.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

xdr_stream_decode_uint32_array.exit.i.cleanup_crit_edge: ; preds = %xdr_stream_decode_uint32_array.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %xdr_stream_decode_uint32_array.exit.i.if.end_crit_edge, %if.end24.i.i.if.end_crit_edge
  %8 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %argp, align 32
  %ve_attrlen = getelementptr inbounds %struct.nfsd4_verify, ptr %verify, i32 0, i32 1
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %9, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.cleanup_crit_edge, label %if.end3, !prof !108

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %10 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %call.i, align 4
  %12 = ptrtoint ptr %ve_attrlen to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %ve_attrlen, align 4
  %13 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %argp, align 32
  %call6 = tail call ptr @xdr_inline_decode(ptr noundef %14, i32 noundef %11) #16
  %tobool7.not = icmp eq ptr %call6, null
  br i1 %tobool7.not, label %if.end3.cleanup_crit_edge, label %if.end9

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end9:                                          ; preds = %if.end3
  %15 = ptrtoint ptr %ve_attrlen to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %ve_attrlen, align 4
  %17 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %argp, align 32
  %scratch.i = getelementptr inbounds %struct.xdr_stream, ptr %18, i32 0, i32 4
  %19 = ptrtoint ptr %scratch.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %scratch.i, align 4
  %cmp.not.i = icmp eq ptr %20, %call6
  br i1 %cmp.not.i, label %if.end8.i.i.i, label %if.end9.svcxdr_savemem.exit_crit_edge

if.end9.svcxdr_savemem.exit_crit_edge:            ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %svcxdr_savemem.exit

if.end8.i.i.i:                                    ; preds = %if.end9
  %add.i.i = add i32 %16, 4
  %call9.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i.i, i32 noundef 3264) #20
  %tobool.not.i.i = icmp eq ptr %call9.i.i.i, null
  br i1 %tobool.not.i.i, label %if.end8.i.i.i.svcxdr_savemem.exit_crit_edge, label %svcxdr_tmpalloc.exit.i

if.end8.i.i.i.svcxdr_savemem.exit_crit_edge:      ; preds = %if.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %svcxdr_savemem.exit

svcxdr_tmpalloc.exit.i:                           ; preds = %if.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %to_free.i.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 1
  %21 = ptrtoint ptr %to_free.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %to_free.i.i, align 4
  %23 = ptrtoint ptr %call9.i.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %22, ptr %call9.i.i.i, align 128
  store ptr %call9.i.i.i, ptr %to_free.i.i, align 4
  %buf.i.i = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call9.i.i.i, i32 0, i32 1
  %24 = call ptr @memcpy(ptr %buf.i.i, ptr %call6, i32 %16)
  br label %svcxdr_savemem.exit

svcxdr_savemem.exit:                              ; preds = %svcxdr_tmpalloc.exit.i, %if.end8.i.i.i.svcxdr_savemem.exit_crit_edge, %if.end9.svcxdr_savemem.exit_crit_edge
  %retval.0.i28 = phi ptr [ %buf.i.i, %svcxdr_tmpalloc.exit.i ], [ %call6, %if.end9.svcxdr_savemem.exit_crit_edge ], [ null, %if.end8.i.i.i.svcxdr_savemem.exit_crit_edge ]
  %ve_attrval = getelementptr inbounds %struct.nfsd4_verify, ptr %verify, i32 0, i32 2
  %25 = ptrtoint ptr %ve_attrval to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %retval.0.i28, ptr %ve_attrval, align 4
  %tobool13.not = icmp eq ptr %retval.0.i28, null
  %. = select i1 %tobool13.not, i32 10008, i32 0
  br label %cleanup

cleanup:                                          ; preds = %svcxdr_savemem.exit, %if.end3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %xdr_stream_decode_uint32_array.exit.i.cleanup_crit_edge, %if.end.i.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %if.end3.cleanup_crit_edge ], [ %., %svcxdr_savemem.exit ], [ 10036, %entry.cleanup_crit_edge ], [ 10036, %if.end.i.i.cleanup_crit_edge ], [ 10036, %xdr_stream_decode_uint32_array.exit.i.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_open(ptr noundef %argp, ptr noundef %open) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %op_bmval = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 9
  %0 = call ptr @memset(ptr %op_bmval, i32 0, i32 12)
  %op_iattr = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 10
  %1 = ptrtoint ptr %op_iattr to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %op_iattr, align 32
  %op_openowner = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 26
  %2 = ptrtoint ptr %op_openowner to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %op_openowner, align 32
  %op_xdr_error = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 20
  %3 = ptrtoint ptr %op_xdr_error to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %op_xdr_error, align 8
  %4 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %5, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end, !prof !108

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %op_seqid = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 15
  %6 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %call.i, align 4
  %8 = ptrtoint ptr %op_seqid to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %op_seqid, align 4
  %9 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %argp, align 32
  %call.i.i = tail call ptr @xdr_inline_decode(ptr noundef %10, i32 noundef 4) #16
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.end.cleanup_crit_edge, label %if.end.i41, !prof !108

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i41:                                       ; preds = %if.end
  %op_deleg_want = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 18
  %op_share_access = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 16
  %11 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %call.i.i, align 4
  %and.i = and i32 %12, 15
  %13 = ptrtoint ptr %op_share_access to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %and.i, ptr %op_share_access, align 4
  %and1.i = and i32 %12, 65280
  %14 = ptrtoint ptr %op_deleg_want to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %and1.i, ptr %op_deleg_want, align 4
  %and5.off.i = add nsw i32 %and.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and5.off.i)
  %switch.i = icmp ult i32 %and5.off.i, 3
  br i1 %switch.i, label %sw.epilog.i, label %if.end.i41.cleanup_crit_edge

if.end.i41.cleanup_crit_edge:                     ; preds = %if.end.i41
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.epilog.i:                                      ; preds = %if.end.i41
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %12)
  %tobool7.not.i = icmp ult i32 %12, 16
  br i1 %tobool7.not.i, label %sw.epilog.i.if.end3_crit_edge, label %if.end9.i

sw.epilog.i.if.end3_crit_edge:                    ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3

if.end9.i:                                        ; preds = %sw.epilog.i
  %minorversion.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 5
  %15 = ptrtoint ptr %minorversion.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %minorversion.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool10.not.i = icmp ne i32 %16, 0
  %and13.i = lshr i32 %12, 8
  %trunc.i = trunc i32 %and13.i to i8
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %trunc.i)
  %switch29.i = icmp ult i8 %trunc.i, 6
  %or.cond.i = select i1 %tobool10.not.i, i1 %switch29.i, i1 false
  br i1 %or.cond.i, label %sw.epilog16.i, label %if.end9.i.cleanup_crit_edge

if.end9.i.cleanup_crit_edge:                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.epilog16.i:                                    ; preds = %if.end9.i
  %17 = lshr i32 %12, 16
  %and17.i = shl i32 %12, 16
  %18 = and i32 %and17.i, 15728640
  %19 = or i32 %17, %18
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %19)
  %switch = icmp ult i32 %19, 4
  br i1 %switch, label %sw.epilog16.i.if.end3_crit_edge, label %sw.epilog16.i.cleanup_crit_edge

sw.epilog16.i.cleanup_crit_edge:                  ; preds = %sw.epilog16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.epilog16.i.if.end3_crit_edge:                  ; preds = %sw.epilog16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3

if.end3:                                          ; preds = %sw.epilog16.i.if.end3_crit_edge, %sw.epilog.i.if.end3_crit_edge
  %20 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %argp, align 32
  %call.i.i43 = tail call ptr @xdr_inline_decode(ptr noundef %21, i32 noundef 4) #16
  %tobool.not.i.i44 = icmp eq ptr %call.i.i43, null
  br i1 %tobool.not.i.i44, label %if.end3.cleanup_crit_edge, label %if.end.i46, !prof !108

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i46:                                       ; preds = %if.end3
  %op_share_deny = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 17
  %22 = ptrtoint ptr %call.i.i43 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %call.i.i43, align 4
  %24 = ptrtoint ptr %op_share_deny to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %op_share_deny, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %23)
  %tobool.not.i45 = icmp ult i32 %23, 4
  br i1 %tobool.not.i45, label %if.end7, label %if.end.i46.cleanup_crit_edge

if.end.i46.cleanup_crit_edge:                     ; preds = %if.end.i46
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end7:                                          ; preds = %if.end.i46
  %op_clientid = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 13
  %op_owner = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 14
  %call8 = tail call fastcc i32 @nfsd4_decode_state_owner4(ptr noundef %argp, ptr noundef %op_clientid, ptr noundef %op_owner)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.end11, label %if.end7.cleanup_crit_edge

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end11:                                         ; preds = %if.end7
  %25 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %argp, align 32
  %call.i.i48 = tail call ptr @xdr_inline_decode(ptr noundef %26, i32 noundef 4) #16
  %tobool.not.i.i49 = icmp eq ptr %call.i.i48, null
  br i1 %tobool.not.i.i49, label %if.end11.cleanup_crit_edge, label %if.end.i50, !prof !108

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i50:                                       ; preds = %if.end11
  %op_create.i = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 6
  %27 = ptrtoint ptr %call.i.i48 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %call.i.i48, align 4
  %29 = ptrtoint ptr %op_create.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %op_create.i, align 4
  %30 = zext i32 %28 to i64
  call void @__sanitizer_cov_trace_switch(i64 %30, ptr @__sancov_gen_cov_switch_values.42)
  switch i32 %28, label %if.end.i50.cleanup_crit_edge [
    i32 0, label %if.end.i50.if.end15_crit_edge
    i32 1, label %sw.bb.i
  ]

if.end.i50.if.end15_crit_edge:                    ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

if.end.i50.cleanup_crit_edge:                     ; preds = %if.end.i50
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb.i:                                          ; preds = %if.end.i50
  %31 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %argp, align 32
  %call.i.i.i = tail call ptr @xdr_inline_decode(ptr noundef %32, i32 noundef 4) #16
  %tobool.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i.i, label %sw.bb.i.cleanup_crit_edge, label %if.end.i9.i, !prof !108

sw.bb.i.cleanup_crit_edge:                        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i9.i:                                      ; preds = %sw.bb.i
  %op_createmode.i.i = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 7
  %33 = ptrtoint ptr %call.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %call.i.i.i, align 4
  %35 = ptrtoint ptr %op_createmode.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %op_createmode.i.i, align 4
  %36 = zext i32 %34 to i64
  call void @__sanitizer_cov_trace_switch(i64 %36, ptr @__sancov_gen_cov_switch_values.43)
  switch i32 %34, label %if.end.i9.i.cleanup_crit_edge [
    i32 0, label %if.end.i9.i.sw.bb.i.i_crit_edge
    i32 1, label %if.end.i9.i.sw.bb.i.i_crit_edge65
    i32 2, label %sw.bb5.i.i
    i32 3, label %sw.bb10.i.i
  ]

if.end.i9.i.sw.bb.i.i_crit_edge65:                ; preds = %if.end.i9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i.i

if.end.i9.i.sw.bb.i.i_crit_edge:                  ; preds = %if.end.i9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb.i.i

if.end.i9.i.cleanup_crit_edge:                    ; preds = %if.end.i9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb.i.i:                                        ; preds = %if.end.i9.i.sw.bb.i.i_crit_edge, %if.end.i9.i.sw.bb.i.i_crit_edge65
  %op_acl.i.i = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 30
  %op_label.i.i = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 31
  %op_umask.i.i = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 8
  %call2.i.i = tail call fastcc i32 @nfsd4_decode_fattr4(ptr noundef %argp, ptr noundef %op_bmval, ptr noundef %op_iattr, ptr noundef %op_acl.i.i, ptr noundef %op_label.i.i, ptr noundef %op_umask.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool.not.i10.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool.not.i10.i, label %sw.bb.i.i.if.end15_crit_edge, label %sw.bb.i.i.cleanup_crit_edge

sw.bb.i.i.cleanup_crit_edge:                      ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb.i.i.if.end15_crit_edge:                     ; preds = %sw.bb.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

sw.bb5.i.i:                                       ; preds = %if.end.i9.i
  %37 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %argp, align 32
  %call.i54.i.i = tail call ptr @xdr_inline_decode(ptr noundef %38, i32 noundef 8) #16
  %tobool.not.i55.i.i = icmp eq ptr %call.i54.i.i, null
  br i1 %tobool.not.i55.i.i, label %sw.bb5.i.i.cleanup_crit_edge, label %nfsd4_decode_verifier4.exit.thread.i.i

sw.bb5.i.i.cleanup_crit_edge:                     ; preds = %sw.bb5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

nfsd4_decode_verifier4.exit.thread.i.i:           ; preds = %sw.bb5.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %op_verf.i.i = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 12
  %39 = ptrtoint ptr %call.i54.i.i to i32
  call void @__asan_loadN_noabort(i32 %39, i32 8)
  %40 = load i64, ptr %call.i54.i.i, align 4
  %41 = ptrtoint ptr %op_verf.i.i to i32
  call void @__asan_storeN_noabort(i32 %41, i32 8)
  store i64 %40, ptr %op_verf.i.i, align 1
  br label %if.end15

sw.bb10.i.i:                                      ; preds = %if.end.i9.i
  %minorversion.i.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 5
  %42 = ptrtoint ptr %minorversion.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %minorversion.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %43)
  %cmp11.i.i = icmp eq i32 %43, 0
  br i1 %cmp11.i.i, label %sw.bb10.i.i.cleanup_crit_edge, label %if.end13.i.i

sw.bb10.i.i.cleanup_crit_edge:                    ; preds = %sw.bb10.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end13.i.i:                                     ; preds = %sw.bb10.i.i
  %44 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %argp, align 32
  %call.i58.i.i = tail call ptr @xdr_inline_decode(ptr noundef %45, i32 noundef 8) #16
  %tobool.not.i59.i.i = icmp eq ptr %call.i58.i.i, null
  br i1 %tobool.not.i59.i.i, label %if.end13.i.i.cleanup_crit_edge, label %if.end18.i.i

if.end13.i.i.cleanup_crit_edge:                   ; preds = %if.end13.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end18.i.i:                                     ; preds = %if.end13.i.i
  %op_verf14.i.i = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 12
  %46 = ptrtoint ptr %call.i58.i.i to i32
  call void @__asan_loadN_noabort(i32 %46, i32 8)
  %47 = load i64, ptr %call.i58.i.i, align 4
  %48 = ptrtoint ptr %op_verf14.i.i to i32
  call void @__asan_storeN_noabort(i32 %48, i32 8)
  store i64 %47, ptr %op_verf14.i.i, align 1
  %op_acl22.i.i = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 30
  %op_label23.i.i = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 31
  %op_umask24.i.i = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 8
  %call25.i.i = tail call fastcc i32 @nfsd4_decode_fattr4(ptr noundef %argp, ptr noundef %op_bmval, ptr noundef %op_iattr, ptr noundef %op_acl22.i.i, ptr noundef %op_label23.i.i, ptr noundef %op_umask24.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call25.i.i)
  %tobool26.not.i.i = icmp eq i32 %call25.i.i, 0
  br i1 %tobool26.not.i.i, label %if.end18.i.i.if.end15_crit_edge, label %if.end18.i.i.cleanup_crit_edge

if.end18.i.i.cleanup_crit_edge:                   ; preds = %if.end18.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end18.i.i.if.end15_crit_edge:                  ; preds = %if.end18.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15

if.end15:                                         ; preds = %if.end18.i.i.if.end15_crit_edge, %nfsd4_decode_verifier4.exit.thread.i.i, %sw.bb.i.i.if.end15_crit_edge, %if.end.i50.if.end15_crit_edge
  %call16 = tail call fastcc i32 @nfsd4_decode_open_claim4(ptr noundef %argp, ptr noundef %open)
  br label %cleanup

cleanup:                                          ; preds = %if.end15, %if.end18.i.i.cleanup_crit_edge, %if.end13.i.i.cleanup_crit_edge, %sw.bb10.i.i.cleanup_crit_edge, %sw.bb5.i.i.cleanup_crit_edge, %sw.bb.i.i.cleanup_crit_edge, %if.end.i9.i.cleanup_crit_edge, %sw.bb.i.cleanup_crit_edge, %if.end.i50.cleanup_crit_edge, %if.end11.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %if.end.i46.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %sw.epilog16.i.cleanup_crit_edge, %if.end9.i.cleanup_crit_edge, %if.end.i41.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call16, %if.end15 ], [ %call8, %if.end7.cleanup_crit_edge ], [ 10036, %entry.cleanup_crit_edge ], [ 10036, %if.end.i41.cleanup_crit_edge ], [ 10036, %if.end9.i.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ], [ 10036, %if.end.i46.cleanup_crit_edge ], [ 10036, %if.end3.cleanup_crit_edge ], [ %call2.i.i, %sw.bb.i.i.cleanup_crit_edge ], [ 10036, %sw.bb10.i.i.cleanup_crit_edge ], [ %call25.i.i, %if.end18.i.i.cleanup_crit_edge ], [ 10036, %if.end.i9.i.cleanup_crit_edge ], [ 10036, %sw.bb5.i.i.cleanup_crit_edge ], [ 10036, %if.end13.i.i.cleanup_crit_edge ], [ 10036, %sw.bb.i.cleanup_crit_edge ], [ 10036, %if.end11.cleanup_crit_edge ], [ 10036, %if.end.i50.cleanup_crit_edge ], [ 10036, %sw.epilog16.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_open_confirm(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %open_conf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %minorversion = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 5
  %0 = ptrtoint ptr %minorversion to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %minorversion, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp.not = icmp eq i32 %1, 0
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %3, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.cleanup_crit_edge, label %if.end2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %4 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %call.i, align 4
  %6 = ptrtoint ptr %open_conf to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %open_conf, align 4
  %si_opaque.i = getelementptr inbounds %struct.stateid_t, ptr %open_conf, i32 0, i32 1
  %7 = call ptr @memcpy(ptr %si_opaque.i, ptr %incdec.ptr.i, i32 12)
  %8 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %argp, align 32
  %call.i11 = tail call ptr @xdr_inline_decode(ptr noundef %9, i32 noundef 4) #16
  %tobool.not.i12 = icmp eq ptr %call.i11, null
  br i1 %tobool.not.i12, label %if.end2.cleanup_crit_edge, label %xdr_stream_decode_u32.exit, !prof !108

if.end2.cleanup_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

xdr_stream_decode_u32.exit:                       ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #18
  %oc_seqid = getelementptr inbounds %struct.nfsd4_open_confirm, ptr %open_conf, i32 0, i32 1
  %10 = ptrtoint ptr %call.i11 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %call.i11, align 4
  %12 = ptrtoint ptr %oc_seqid to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %oc_seqid, align 4
  br label %cleanup

cleanup:                                          ; preds = %xdr_stream_decode_u32.exit, %if.end2.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10004, %entry.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ], [ 0, %xdr_stream_decode_u32.exit ], [ 10036, %if.end2.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_open_downgrade(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %open_down) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %open_down to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %open_down, align 4
  %si_opaque.i = getelementptr inbounds %struct.stateid_t, ptr %open_down, i32 0, i32 1
  %5 = call ptr @memcpy(ptr %si_opaque.i, ptr %incdec.ptr.i, i32 12)
  %6 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %argp, align 32
  %call.i19 = tail call ptr @xdr_inline_decode(ptr noundef %7, i32 noundef 4) #16
  %tobool.not.i20 = icmp eq ptr %call.i19, null
  br i1 %tobool.not.i20, label %if.end.cleanup_crit_edge, label %if.end3, !prof !108

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %od_seqid = getelementptr inbounds %struct.nfsd4_open_downgrade, ptr %open_down, i32 0, i32 1
  %8 = ptrtoint ptr %call.i19 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %call.i19, align 4
  %10 = ptrtoint ptr %od_seqid to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %od_seqid, align 4
  %11 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %argp, align 32
  %call.i.i = tail call ptr @xdr_inline_decode(ptr noundef %12, i32 noundef 4) #16
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.end3.cleanup_crit_edge, label %if.end.i23, !prof !108

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i23:                                       ; preds = %if.end3
  %od_deleg_want = getelementptr inbounds %struct.nfsd4_open_downgrade, ptr %open_down, i32 0, i32 3
  %od_share_access = getelementptr inbounds %struct.nfsd4_open_downgrade, ptr %open_down, i32 0, i32 2
  %13 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %call.i.i, align 4
  %and.i = and i32 %14, 15
  %15 = ptrtoint ptr %od_share_access to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %and.i, ptr %od_share_access, align 4
  %and1.i = and i32 %14, 65280
  %16 = ptrtoint ptr %od_deleg_want to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %and1.i, ptr %od_deleg_want, align 4
  %and5.off.i = add nsw i32 %and.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %and5.off.i)
  %switch.i = icmp ult i32 %and5.off.i, 3
  br i1 %switch.i, label %sw.epilog.i, label %if.end.i23.cleanup_crit_edge

if.end.i23.cleanup_crit_edge:                     ; preds = %if.end.i23
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.epilog.i:                                      ; preds = %if.end.i23
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %14)
  %tobool7.not.i = icmp ult i32 %14, 16
  br i1 %tobool7.not.i, label %sw.epilog.i.if.end7_crit_edge, label %if.end9.i

sw.epilog.i.if.end7_crit_edge:                    ; preds = %sw.epilog.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.end9.i:                                        ; preds = %sw.epilog.i
  %minorversion.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 5
  %17 = ptrtoint ptr %minorversion.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %minorversion.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool10.not.i = icmp ne i32 %18, 0
  %and13.i = lshr i32 %14, 8
  %trunc.i = trunc i32 %and13.i to i8
  call void @__sanitizer_cov_trace_const_cmp1(i8 6, i8 %trunc.i)
  %switch29.i = icmp ult i8 %trunc.i, 6
  %or.cond.i = select i1 %tobool10.not.i, i1 %switch29.i, i1 false
  br i1 %or.cond.i, label %sw.epilog16.i, label %if.end9.i.cleanup_crit_edge

if.end9.i.cleanup_crit_edge:                      ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.epilog16.i:                                    ; preds = %if.end9.i
  %and17.i = and i32 %14, -65296
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and17.i)
  %tobool18.not.i = icmp eq i32 %and17.i, 0
  br i1 %tobool18.not.i, label %sw.epilog16.i.if.end7_crit_edge, label %sw.epilog16.i.cleanup_crit_edge

sw.epilog16.i.cleanup_crit_edge:                  ; preds = %sw.epilog16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.epilog16.i.if.end7_crit_edge:                  ; preds = %sw.epilog16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

if.end7:                                          ; preds = %sw.epilog16.i.if.end7_crit_edge, %sw.epilog.i.if.end7_crit_edge
  %19 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %argp, align 32
  %call.i.i25 = tail call ptr @xdr_inline_decode(ptr noundef %20, i32 noundef 4) #16
  %tobool.not.i.i26 = icmp eq ptr %call.i.i25, null
  br i1 %tobool.not.i.i26, label %if.end7.cleanup_crit_edge, label %if.end.i28, !prof !108

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i28:                                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  %od_share_deny = getelementptr inbounds %struct.nfsd4_open_downgrade, ptr %open_down, i32 0, i32 4
  %21 = ptrtoint ptr %call.i.i25 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %call.i.i25, align 4
  %23 = ptrtoint ptr %od_share_deny to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %od_share_deny, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %22)
  %tobool.not.i27 = icmp ult i32 %22, 4
  %..i = select i1 %tobool.not.i27, i32 0, i32 10036
  br label %cleanup

cleanup:                                          ; preds = %if.end.i28, %if.end7.cleanup_crit_edge, %sw.epilog16.i.cleanup_crit_edge, %if.end9.i.cleanup_crit_edge, %if.end.i23.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %entry.cleanup_crit_edge ], [ %..i, %if.end.i28 ], [ 10036, %if.end7.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ], [ 10036, %if.end3.cleanup_crit_edge ], [ 22, %sw.epilog16.i.cleanup_crit_edge ], [ 10036, %if.end9.i.cleanup_crit_edge ], [ 10036, %if.end.i23.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_putfh(ptr nocapture noundef %argp, ptr nocapture noundef %putfh) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end, !prof !108

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %putfh to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %putfh, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 128, i32 %3)
  %cmp2 = icmp ugt i32 %3, 128
  br i1 %cmp2, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %5 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %argp, align 32
  %call7 = tail call ptr @xdr_inline_decode(ptr noundef %6, i32 noundef %3) #16
  %tobool.not = icmp eq ptr %call7, null
  br i1 %tobool.not, label %if.end4.cleanup_crit_edge, label %if.end9

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end9:                                          ; preds = %if.end4
  %7 = ptrtoint ptr %putfh to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %putfh, align 4
  %9 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %argp, align 32
  %scratch.i = getelementptr inbounds %struct.xdr_stream, ptr %10, i32 0, i32 4
  %11 = ptrtoint ptr %scratch.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %scratch.i, align 4
  %cmp.not.i = icmp eq ptr %12, %call7
  br i1 %cmp.not.i, label %if.end8.i.i.i, label %if.end9.svcxdr_savemem.exit_crit_edge

if.end9.svcxdr_savemem.exit_crit_edge:            ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %svcxdr_savemem.exit

if.end8.i.i.i:                                    ; preds = %if.end9
  %add.i.i = add i32 %8, 4
  %call9.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i.i, i32 noundef 3264) #20
  %tobool.not.i.i = icmp eq ptr %call9.i.i.i, null
  br i1 %tobool.not.i.i, label %if.end8.i.i.i.svcxdr_savemem.exit_crit_edge, label %svcxdr_tmpalloc.exit.i

if.end8.i.i.i.svcxdr_savemem.exit_crit_edge:      ; preds = %if.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %svcxdr_savemem.exit

svcxdr_tmpalloc.exit.i:                           ; preds = %if.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %to_free.i.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 1
  %13 = ptrtoint ptr %to_free.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %to_free.i.i, align 4
  %15 = ptrtoint ptr %call9.i.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %14, ptr %call9.i.i.i, align 128
  store ptr %call9.i.i.i, ptr %to_free.i.i, align 4
  %buf.i.i = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call9.i.i.i, i32 0, i32 1
  %16 = call ptr @memcpy(ptr %buf.i.i, ptr %call7, i32 %8)
  br label %svcxdr_savemem.exit

svcxdr_savemem.exit:                              ; preds = %svcxdr_tmpalloc.exit.i, %if.end8.i.i.i.svcxdr_savemem.exit_crit_edge, %if.end9.svcxdr_savemem.exit_crit_edge
  %retval.0.i25 = phi ptr [ %buf.i.i, %svcxdr_tmpalloc.exit.i ], [ %call7, %if.end9.svcxdr_savemem.exit_crit_edge ], [ null, %if.end8.i.i.i.svcxdr_savemem.exit_crit_edge ]
  %pf_fhval = getelementptr inbounds %struct.nfsd4_putfh, ptr %putfh, i32 0, i32 1
  %17 = ptrtoint ptr %pf_fhval to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %retval.0.i25, ptr %pf_fhval, align 4
  %tobool13.not = icmp eq ptr %retval.0.i25, null
  %. = select i1 %tobool13.not, i32 10008, i32 0
  br label %cleanup

cleanup:                                          ; preds = %svcxdr_savemem.exit, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %if.end.cleanup_crit_edge ], [ 10036, %if.end4.cleanup_crit_edge ], [ %., %svcxdr_savemem.exit ], [ 10036, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @nfsd4_decode_putpubfh(ptr nocapture noundef readonly %argp, ptr nocapture noundef readnone %p) #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %minorversion = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 5
  %0 = ptrtoint ptr %minorversion to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %minorversion, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp eq i32 %1, 0
  %. = select i1 %cmp, i32 0, i32 10004
  ret i32 %.
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_read(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %read) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %read to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %read, align 4
  %si_opaque.i = getelementptr inbounds %struct.stateid_t, ptr %read, i32 0, i32 1
  %5 = call ptr @memcpy(ptr %si_opaque.i, ptr %incdec.ptr.i, i32 12)
  %6 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %argp, align 32
  %call.i14 = tail call ptr @xdr_inline_decode(ptr noundef %7, i32 noundef 8) #16
  %tobool.not.i15 = icmp eq ptr %call.i14, null
  br i1 %tobool.not.i15, label %if.end.cleanup_crit_edge, label %if.end3, !prof !108

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %rd_offset = getelementptr inbounds %struct.nfsd4_read, ptr %read, i32 0, i32 1
  %8 = ptrtoint ptr %call.i14 to i32
  call void @__asan_loadN_noabort(i32 %8, i32 8)
  %9 = load i64, ptr %call.i14, align 1
  %10 = ptrtoint ptr %rd_offset to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %9, ptr %rd_offset, align 8
  %11 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %argp, align 32
  %call.i18 = tail call ptr @xdr_inline_decode(ptr noundef %12, i32 noundef 4) #16
  %tobool.not.i19 = icmp eq ptr %call.i18, null
  br i1 %tobool.not.i19, label %if.end3.cleanup_crit_edge, label %xdr_stream_decode_u32.exit, !prof !108

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

xdr_stream_decode_u32.exit:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  %rd_length = getelementptr inbounds %struct.nfsd4_read, ptr %read, i32 0, i32 2
  %13 = ptrtoint ptr %call.i18 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %call.i18, align 4
  %15 = ptrtoint ptr %rd_length to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %rd_length, align 4
  br label %cleanup

cleanup:                                          ; preds = %xdr_stream_decode_u32.exit, %if.end3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %entry.cleanup_crit_edge ], [ 0, %xdr_stream_decode_u32.exit ], [ 10036, %if.end3.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_readdir(ptr nocapture noundef readonly %argp, ptr noundef writeonly %readdir) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 8) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end, !prof !108

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %3 = load i64, ptr %call.i, align 1
  %4 = ptrtoint ptr %readdir to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %3, ptr %readdir, align 8
  %5 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %argp, align 32
  %call.i28 = tail call ptr @xdr_inline_decode(ptr noundef %6, i32 noundef 8) #16
  %tobool.not.i29 = icmp eq ptr %call.i28, null
  br i1 %tobool.not.i29, label %if.end.cleanup_crit_edge, label %if.end3

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %rd_verf = getelementptr inbounds %struct.nfsd4_readdir, ptr %readdir, i32 0, i32 1
  %7 = ptrtoint ptr %call.i28 to i32
  call void @__asan_loadN_noabort(i32 %7, i32 8)
  %8 = load i64, ptr %call.i28, align 4
  %9 = ptrtoint ptr %rd_verf to i32
  call void @__asan_storeN_noabort(i32 %9, i32 8)
  store i64 %8, ptr %rd_verf, align 1
  %10 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %argp, align 32
  %call.i32 = tail call ptr @xdr_inline_decode(ptr noundef %11, i32 noundef 4) #16
  %tobool.not.i33 = icmp eq ptr %call.i32, null
  br i1 %tobool.not.i33, label %if.end3.cleanup_crit_edge, label %if.end8, !prof !108

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8:                                          ; preds = %if.end3
  %rd_dircount = getelementptr inbounds %struct.nfsd4_readdir, ptr %readdir, i32 0, i32 2
  %12 = ptrtoint ptr %call.i32 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %call.i32, align 4
  %14 = ptrtoint ptr %rd_dircount to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %rd_dircount, align 4
  %15 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %argp, align 32
  %call.i36 = tail call ptr @xdr_inline_decode(ptr noundef %16, i32 noundef 4) #16
  %tobool.not.i37 = icmp eq ptr %call.i36, null
  br i1 %tobool.not.i37, label %if.end8.cleanup_crit_edge, label %if.end13, !prof !108

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end13:                                         ; preds = %if.end8
  %rd_maxcount = getelementptr inbounds %struct.nfsd4_readdir, ptr %readdir, i32 0, i32 3
  %17 = ptrtoint ptr %call.i36 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %call.i36, align 4
  %19 = ptrtoint ptr %rd_maxcount to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %rd_maxcount, align 4
  %20 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %argp, align 32
  %rd_bmval = getelementptr %struct.nfsd4_readdir, ptr %readdir, i32 0, i32 4
  %call.i.i = tail call ptr @xdr_inline_decode(ptr noundef %21, i32 noundef 4) #16
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.end13.xdr_stream_decode_uint32_array.exit.thread_crit_edge, label %if.end.i41, !prof !108

if.end13.xdr_stream_decode_uint32_array.exit.thread_crit_edge: ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit.thread

if.end.i41:                                       ; preds = %if.end13
  %22 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %call.i.i, align 4
  %mul.i = shl i32 %23, 2
  %call3.i = tail call ptr @xdr_inline_decode(ptr noundef %21, i32 noundef %mul.i) #16
  %tobool4.not.i = icmp eq ptr %call3.i, null
  br i1 %tobool4.not.i, label %if.end.i41.xdr_stream_decode_uint32_array.exit.thread_crit_edge, label %if.end14.i, !prof !108

if.end.i41.xdr_stream_decode_uint32_array.exit.thread_crit_edge: ; preds = %if.end.i41
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit.thread

if.end14.i:                                       ; preds = %if.end.i41
  %cmp15.i = icmp eq ptr %rd_bmval, null
  br i1 %cmp15.i, label %if.end14.i.xdr_stream_decode_uint32_array.exit_crit_edge, label %if.end17.i

if.end14.i.xdr_stream_decode_uint32_array.exit_crit_edge: ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit

if.end17.i:                                       ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %23)
  %cmp18.not.i = icmp ugt i32 %23, 3
  br i1 %cmp18.not.i, label %if.end17.i.for.body.i.preheader_crit_edge, label %if.then19.i

if.end17.i.for.body.i.preheader_crit_edge:        ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader

if.then19.i:                                      ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %23)
  %cmp20.i.not = icmp eq i32 %23, 3
  br i1 %cmp20.i.not, label %if.then19.i.for.body.i.preheader_crit_edge, label %if.end24.i

if.then19.i.for.body.i.preheader_crit_edge:       ; preds = %if.then19.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader

if.end24.i:                                       ; preds = %if.then19.i
  %add.ptr.i = getelementptr i32, ptr %rd_bmval, i32 %23
  %.neg = mul nsw i32 %23, -4
  %mul22.i = add nsw i32 %.neg, 12
  %24 = call ptr @memset(ptr %add.ptr.i, i32 0, i32 %mul22.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp25.not47.i = icmp eq i32 %23, 0
  br i1 %cmp25.not47.i, label %if.end24.i.cleanup_crit_edge, label %if.end24.i.for.body.i.preheader_crit_edge

if.end24.i.for.body.i.preheader_crit_edge:        ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader

if.end24.i.cleanup_crit_edge:                     ; preds = %if.end24.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body.i.preheader:                             ; preds = %if.end24.i.for.body.i.preheader_crit_edge, %if.then19.i.for.body.i.preheader_crit_edge, %if.end17.i.for.body.i.preheader_crit_edge
  %retval1.0.i57 = phi i32 [ %23, %if.end24.i.for.body.i.preheader_crit_edge ], [ 3, %if.then19.i.for.body.i.preheader_crit_edge ], [ -90, %if.end17.i.for.body.i.preheader_crit_edge ]
  %array_size.addr.0.i56 = phi i32 [ %23, %if.end24.i.for.body.i.preheader_crit_edge ], [ 3, %if.then19.i.for.body.i.preheader_crit_edge ], [ 3, %if.end17.i.for.body.i.preheader_crit_edge ]
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %for.body.i.preheader
  %p.050.i = phi ptr [ %incdec.ptr.i, %for.body.i.for.body.i_crit_edge ], [ %call3.i, %for.body.i.preheader ]
  %array_size.addr.149.i = phi i32 [ %dec.i, %for.body.i.for.body.i_crit_edge ], [ %array_size.addr.0.i56, %for.body.i.preheader ]
  %array.addr.048.i = phi ptr [ %incdec.ptr27.i, %for.body.i.for.body.i_crit_edge ], [ %rd_bmval, %for.body.i.preheader ]
  %25 = ptrtoint ptr %p.050.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %p.050.i, align 4
  %27 = ptrtoint ptr %array.addr.048.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %array.addr.048.i, align 4
  %incdec.ptr.i = getelementptr i32, ptr %p.050.i, i32 1
  %incdec.ptr27.i = getelementptr i32, ptr %array.addr.048.i, i32 1
  %dec.i = add i32 %array_size.addr.149.i, -1
  %cmp25.not.i = icmp eq i32 %dec.i, 0
  br i1 %cmp25.not.i, label %for.body.i.xdr_stream_decode_uint32_array.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.body.i.xdr_stream_decode_uint32_array.exit_crit_edge: ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit

xdr_stream_decode_uint32_array.exit:              ; preds = %for.body.i.xdr_stream_decode_uint32_array.exit_crit_edge, %if.end14.i.xdr_stream_decode_uint32_array.exit_crit_edge
  %retval.0.i42 = phi i32 [ %23, %if.end14.i.xdr_stream_decode_uint32_array.exit_crit_edge ], [ %retval1.0.i57, %for.body.i.xdr_stream_decode_uint32_array.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i42)
  %cmp16 = icmp slt i32 %retval.0.i42, 0
  br i1 %cmp16, label %xdr_stream_decode_uint32_array.exit.xdr_stream_decode_uint32_array.exit.thread_crit_edge, label %xdr_stream_decode_uint32_array.exit.cleanup_crit_edge

xdr_stream_decode_uint32_array.exit.cleanup_crit_edge: ; preds = %xdr_stream_decode_uint32_array.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

xdr_stream_decode_uint32_array.exit.xdr_stream_decode_uint32_array.exit.thread_crit_edge: ; preds = %xdr_stream_decode_uint32_array.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit.thread

xdr_stream_decode_uint32_array.exit.thread:       ; preds = %xdr_stream_decode_uint32_array.exit.xdr_stream_decode_uint32_array.exit.thread_crit_edge, %if.end.i41.xdr_stream_decode_uint32_array.exit.thread_crit_edge, %if.end13.xdr_stream_decode_uint32_array.exit.thread_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %xdr_stream_decode_uint32_array.exit.thread, %xdr_stream_decode_uint32_array.exit.cleanup_crit_edge, %if.end24.i.cleanup_crit_edge, %if.end8.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %if.end.cleanup_crit_edge ], [ 10036, %xdr_stream_decode_uint32_array.exit.thread ], [ 0, %xdr_stream_decode_uint32_array.exit.cleanup_crit_edge ], [ 10036, %entry.cleanup_crit_edge ], [ 10036, %if.end3.cleanup_crit_edge ], [ 10036, %if.end8.cleanup_crit_edge ], [ 0, %if.end24.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_remove(ptr nocapture noundef %argp, ptr nocapture noundef %remove) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %rm_name = getelementptr inbounds %struct.nfsd4_remove, ptr %remove, i32 0, i32 1
  %call = tail call fastcc i32 @nfsd4_decode_component4(ptr noundef %argp, ptr noundef %rm_name, ptr noundef %remove)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_rename(ptr nocapture noundef %argp, ptr nocapture noundef %rename) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %rn_sname = getelementptr inbounds %struct.nfsd4_rename, ptr %rename, i32 0, i32 1
  %call = tail call fastcc i32 @nfsd4_decode_component4(ptr noundef %argp, ptr noundef %rn_sname, ptr noundef %rename)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %rn_tname = getelementptr inbounds %struct.nfsd4_rename, ptr %rename, i32 0, i32 3
  %rn_tnamelen = getelementptr inbounds %struct.nfsd4_rename, ptr %rename, i32 0, i32 2
  %call1 = tail call fastcc i32 @nfsd4_decode_component4(ptr noundef %argp, ptr noundef %rn_tname, ptr noundef %rn_tnamelen)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_renew(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %clientid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 8) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.nfsd4_decode_clientid4.exit_crit_edge, label %if.end.i

entry.nfsd4_decode_clientid4.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_clientid4.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %3 = load i64, ptr %call.i, align 4
  %4 = ptrtoint ptr %clientid to i32
  call void @__asan_storeN_noabort(i32 %4, i32 8)
  store i64 %3, ptr %clientid, align 4
  br label %nfsd4_decode_clientid4.exit

nfsd4_decode_clientid4.exit:                      ; preds = %if.end.i, %entry.nfsd4_decode_clientid4.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end.i ], [ 10036, %entry.nfsd4_decode_clientid4.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_secinfo(ptr nocapture noundef %argp, ptr nocapture noundef %secinfo) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %si_name = getelementptr inbounds %struct.nfsd4_secinfo, ptr %secinfo, i32 0, i32 1
  %call = tail call fastcc i32 @nfsd4_decode_component4(ptr noundef %argp, ptr noundef %si_name, ptr noundef %secinfo)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_setattr(ptr noundef %argp, ptr noundef %setattr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %setattr to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %setattr, align 4
  %si_opaque.i = getelementptr inbounds %struct.stateid_t, ptr %setattr, i32 0, i32 1
  %5 = call ptr @memcpy(ptr %si_opaque.i, ptr %incdec.ptr.i, i32 12)
  %sa_bmval = getelementptr inbounds %struct.nfsd4_setattr, ptr %setattr, i32 0, i32 1
  %sa_iattr = getelementptr inbounds %struct.nfsd4_setattr, ptr %setattr, i32 0, i32 2
  %sa_acl = getelementptr inbounds %struct.nfsd4_setattr, ptr %setattr, i32 0, i32 3
  %sa_label = getelementptr inbounds %struct.nfsd4_setattr, ptr %setattr, i32 0, i32 4
  %call1 = tail call fastcc i32 @nfsd4_decode_fattr4(ptr noundef %argp, ptr noundef %sa_bmval, ptr noundef %sa_iattr, ptr noundef %sa_acl, ptr noundef %sa_label, ptr noundef null)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ 10036, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_setclientid(ptr nocapture noundef %argp, ptr nocapture noundef %setclientid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %minorversion = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 5
  %0 = ptrtoint ptr %minorversion to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %minorversion, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp.not = icmp eq i32 %1, 0
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %3, i32 noundef 8) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.cleanup_crit_edge, label %if.end2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %4 = ptrtoint ptr %call.i to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %5 = load i64, ptr %call.i, align 4
  %6 = ptrtoint ptr %setclientid to i32
  call void @__asan_storeN_noabort(i32 %6, i32 8)
  store i64 %5, ptr %setclientid, align 1
  %se_name = getelementptr inbounds %struct.nfsd4_setclientid, ptr %setclientid, i32 0, i32 1
  %7 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %argp, align 32
  %call.i.i = tail call ptr @xdr_inline_decode(ptr noundef %8, i32 noundef 4) #16
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.end2.cleanup_crit_edge, label %if.end.i80, !prof !108

if.end2.cleanup_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i80:                                       ; preds = %if.end2
  %9 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %call.i.i, align 4
  %11 = add i32 %10, -1025
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1024, i32 %11)
  %12 = icmp ult i32 %11, -1024
  br i1 %12, label %if.end.i80.cleanup_crit_edge, label %if.end4.i

if.end.i80.cleanup_crit_edge:                     ; preds = %if.end.i80
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4.i:                                        ; preds = %if.end.i80
  %13 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %argp, align 32
  %call6.i = tail call ptr @xdr_inline_decode(ptr noundef %14, i32 noundef %10) #16
  %tobool.not.i81 = icmp eq ptr %call6.i, null
  br i1 %tobool.not.i81, label %if.end4.i.cleanup_crit_edge, label %if.end8.i

if.end4.i.cleanup_crit_edge:                      ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8.i:                                        ; preds = %if.end4.i
  %15 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %argp, align 32
  %scratch.i.i = getelementptr inbounds %struct.xdr_stream, ptr %16, i32 0, i32 4
  %17 = ptrtoint ptr %scratch.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %scratch.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %18, %call6.i
  br i1 %cmp.not.i.i, label %if.end8.i.i.i.i, label %if.end8.i.if.end6_crit_edge

if.end8.i.if.end6_crit_edge:                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6

if.end8.i.i.i.i:                                  ; preds = %if.end8.i
  %add.i.i.i = add nuw nsw i32 %10, 4
  %call9.i.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i.i.i, i32 noundef 3264) #20
  %tobool.not.i.i.i = icmp eq ptr %call9.i.i.i.i, null
  br i1 %tobool.not.i.i.i, label %svcxdr_savemem.exit.thread.i, label %svcxdr_savemem.exit.i

svcxdr_savemem.exit.thread.i:                     ; preds = %if.end8.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %data31.i = getelementptr inbounds %struct.nfsd4_setclientid, ptr %setclientid, i32 0, i32 1, i32 1
  %19 = ptrtoint ptr %data31.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %data31.i, align 4
  br label %cleanup

svcxdr_savemem.exit.i:                            ; preds = %if.end8.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %to_free.i.i.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 1
  %20 = ptrtoint ptr %to_free.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %to_free.i.i.i, align 4
  %22 = ptrtoint ptr %call9.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %21, ptr %call9.i.i.i.i, align 128
  store ptr %call9.i.i.i.i, ptr %to_free.i.i.i, align 4
  %buf.i.i.i = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call9.i.i.i.i, i32 0, i32 1
  %23 = call ptr @memcpy(ptr %buf.i.i.i, ptr %call6.i, i32 %10)
  br label %if.end6

if.end6:                                          ; preds = %svcxdr_savemem.exit.i, %if.end8.i.if.end6_crit_edge
  %buf.i.i.sink.i = phi ptr [ %buf.i.i.i, %svcxdr_savemem.exit.i ], [ %call6.i, %if.end8.i.if.end6_crit_edge ]
  %data.i = getelementptr inbounds %struct.nfsd4_setclientid, ptr %setclientid, i32 0, i32 1, i32 1
  %24 = ptrtoint ptr %data.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %buf.i.i.sink.i, ptr %data.i, align 4
  %25 = ptrtoint ptr %se_name to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %10, ptr %se_name, align 4
  %26 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %argp, align 32
  %call.i83 = tail call ptr @xdr_inline_decode(ptr noundef %27, i32 noundef 4) #16
  %tobool.not.i84 = icmp eq ptr %call.i83, null
  br i1 %tobool.not.i84, label %if.end6.cleanup_crit_edge, label %if.end10, !prof !108

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end10:                                         ; preds = %if.end6
  %se_callback_prog = getelementptr inbounds %struct.nfsd4_setclientid, ptr %setclientid, i32 0, i32 2
  %28 = ptrtoint ptr %call.i83 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %call.i83, align 4
  %30 = ptrtoint ptr %se_callback_prog to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %se_callback_prog, align 4
  %31 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %argp, align 32
  %se_callback_netid_len = getelementptr inbounds %struct.nfsd4_setclientid, ptr %setclientid, i32 0, i32 3
  %call.i87 = tail call ptr @xdr_inline_decode(ptr noundef %32, i32 noundef 4) #16
  %tobool.not.i88 = icmp eq ptr %call.i87, null
  br i1 %tobool.not.i88, label %if.end10.cleanup_crit_edge, label %if.end15, !prof !108

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end15:                                         ; preds = %if.end10
  %33 = ptrtoint ptr %call.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %call.i87, align 4
  %35 = ptrtoint ptr %se_callback_netid_len to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %se_callback_netid_len, align 4
  %36 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %argp, align 32
  %call18 = tail call ptr @xdr_inline_decode(ptr noundef %37, i32 noundef %34) #16
  %tobool19.not = icmp eq ptr %call18, null
  br i1 %tobool19.not, label %if.end15.cleanup_crit_edge, label %if.end21

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end21:                                         ; preds = %if.end15
  %38 = ptrtoint ptr %se_callback_netid_len to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %se_callback_netid_len, align 4
  %call23 = tail call fastcc ptr @svcxdr_savemem(ptr noundef %argp, ptr noundef nonnull %call18, i32 noundef %39)
  %se_callback_netid_val = getelementptr inbounds %struct.nfsd4_setclientid, ptr %setclientid, i32 0, i32 4
  %40 = ptrtoint ptr %se_callback_netid_val to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %call23, ptr %se_callback_netid_val, align 4
  %tobool25.not = icmp eq ptr %call23, null
  br i1 %tobool25.not, label %if.end21.cleanup_crit_edge, label %if.end27

if.end21.cleanup_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end27:                                         ; preds = %if.end21
  %41 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %argp, align 32
  %se_callback_addr_len = getelementptr inbounds %struct.nfsd4_setclientid, ptr %setclientid, i32 0, i32 5
  %call.i92 = tail call ptr @xdr_inline_decode(ptr noundef %42, i32 noundef 4) #16
  %tobool.not.i93 = icmp eq ptr %call.i92, null
  br i1 %tobool.not.i93, label %if.end27.cleanup_crit_edge, label %if.end32, !prof !108

if.end27.cleanup_crit_edge:                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end32:                                         ; preds = %if.end27
  %43 = ptrtoint ptr %call.i92 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %call.i92, align 4
  %45 = ptrtoint ptr %se_callback_addr_len to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %se_callback_addr_len, align 4
  %46 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %argp, align 32
  %call35 = tail call ptr @xdr_inline_decode(ptr noundef %47, i32 noundef %44) #16
  %tobool36.not = icmp eq ptr %call35, null
  br i1 %tobool36.not, label %if.end32.cleanup_crit_edge, label %if.end38

if.end32.cleanup_crit_edge:                       ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end38:                                         ; preds = %if.end32
  %48 = ptrtoint ptr %se_callback_addr_len to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %se_callback_addr_len, align 4
  %call40 = tail call fastcc ptr @svcxdr_savemem(ptr noundef %argp, ptr noundef nonnull %call35, i32 noundef %49)
  %se_callback_addr_val = getelementptr inbounds %struct.nfsd4_setclientid, ptr %setclientid, i32 0, i32 6
  %50 = ptrtoint ptr %se_callback_addr_val to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %call40, ptr %se_callback_addr_val, align 4
  %tobool42.not = icmp eq ptr %call40, null
  br i1 %tobool42.not, label %if.end38.cleanup_crit_edge, label %if.end44

if.end38.cleanup_crit_edge:                       ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end44:                                         ; preds = %if.end38
  %51 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %argp, align 32
  %call.i97 = tail call ptr @xdr_inline_decode(ptr noundef %52, i32 noundef 4) #16
  %tobool.not.i98 = icmp eq ptr %call.i97, null
  br i1 %tobool.not.i98, label %if.end44.cleanup_crit_edge, label %xdr_stream_decode_u32.exit101, !prof !108

if.end44.cleanup_crit_edge:                       ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

xdr_stream_decode_u32.exit101:                    ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #18
  %se_callback_ident = getelementptr inbounds %struct.nfsd4_setclientid, ptr %setclientid, i32 0, i32 7
  %53 = ptrtoint ptr %call.i97 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %call.i97, align 4
  %55 = ptrtoint ptr %se_callback_ident to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %54, ptr %se_callback_ident, align 4
  br label %cleanup

cleanup:                                          ; preds = %xdr_stream_decode_u32.exit101, %if.end44.cleanup_crit_edge, %if.end38.cleanup_crit_edge, %if.end32.cleanup_crit_edge, %if.end27.cleanup_crit_edge, %if.end21.cleanup_crit_edge, %if.end15.cleanup_crit_edge, %if.end10.cleanup_crit_edge, %if.end6.cleanup_crit_edge, %svcxdr_savemem.exit.thread.i, %if.end4.i.cleanup_crit_edge, %if.end.i80.cleanup_crit_edge, %if.end2.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10004, %entry.cleanup_crit_edge ], [ 10036, %if.end15.cleanup_crit_edge ], [ 10008, %if.end21.cleanup_crit_edge ], [ 10036, %if.end32.cleanup_crit_edge ], [ 10008, %if.end38.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ], [ 0, %xdr_stream_decode_u32.exit101 ], [ 10036, %if.end44.cleanup_crit_edge ], [ 10036, %if.end2.cleanup_crit_edge ], [ 10008, %svcxdr_savemem.exit.thread.i ], [ 10036, %if.end4.i.cleanup_crit_edge ], [ 10036, %if.end.i80.cleanup_crit_edge ], [ 10036, %if.end6.cleanup_crit_edge ], [ 10036, %if.end10.cleanup_crit_edge ], [ 10036, %if.end27.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_setclientid_confirm(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %scd_c) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %minorversion = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 5
  %0 = ptrtoint ptr %minorversion to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %minorversion, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp.not = icmp eq i32 %1, 0
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %3, i32 noundef 8) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.cleanup_crit_edge, label %if.end2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %4 = ptrtoint ptr %call.i to i32
  call void @__asan_loadN_noabort(i32 %4, i32 8)
  %5 = load i64, ptr %call.i, align 4
  %6 = ptrtoint ptr %scd_c to i32
  call void @__asan_storeN_noabort(i32 %6, i32 8)
  store i64 %5, ptr %scd_c, align 4
  %7 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %argp, align 32
  %call.i8 = tail call ptr @xdr_inline_decode(ptr noundef %8, i32 noundef 8) #16
  %tobool.not.i9 = icmp eq ptr %call.i8, null
  br i1 %tobool.not.i9, label %if.end2.cleanup_crit_edge, label %if.end.i10

if.end2.cleanup_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i10:                                       ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #18
  %sc_confirm = getelementptr inbounds %struct.nfsd4_setclientid_confirm, ptr %scd_c, i32 0, i32 1
  %9 = ptrtoint ptr %call.i8 to i32
  call void @__asan_loadN_noabort(i32 %9, i32 8)
  %10 = load i64, ptr %call.i8, align 4
  %11 = ptrtoint ptr %sc_confirm to i32
  call void @__asan_storeN_noabort(i32 %11, i32 8)
  store i64 %10, ptr %sc_confirm, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end.i10, %if.end2.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10004, %entry.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ], [ 0, %if.end.i10 ], [ 10036, %if.end2.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_write(ptr nocapture noundef readonly %argp, ptr noundef %write) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %write to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %write, align 4
  %si_opaque.i = getelementptr inbounds %struct.stateid_t, ptr %write, i32 0, i32 1
  %5 = call ptr @memcpy(ptr %si_opaque.i, ptr %incdec.ptr.i, i32 12)
  %6 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %argp, align 32
  %call.i34 = tail call ptr @xdr_inline_decode(ptr noundef %7, i32 noundef 8) #16
  %tobool.not.i35 = icmp eq ptr %call.i34, null
  br i1 %tobool.not.i35, label %if.end.cleanup_crit_edge, label %if.end3, !prof !108

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %wr_offset = getelementptr inbounds %struct.nfsd4_write, ptr %write, i32 0, i32 1
  %8 = ptrtoint ptr %call.i34 to i32
  call void @__asan_loadN_noabort(i32 %8, i32 8)
  %9 = load i64, ptr %call.i34, align 1
  %10 = ptrtoint ptr %wr_offset to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %9, ptr %wr_offset, align 8
  %11 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %argp, align 32
  %call.i38 = tail call ptr @xdr_inline_decode(ptr noundef %12, i32 noundef 4) #16
  %tobool.not.i39 = icmp eq ptr %call.i38, null
  br i1 %tobool.not.i39, label %if.end3.cleanup_crit_edge, label %if.end8, !prof !108

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8:                                          ; preds = %if.end3
  %wr_stable_how = getelementptr inbounds %struct.nfsd4_write, ptr %write, i32 0, i32 2
  %13 = ptrtoint ptr %call.i38 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %call.i38, align 4
  %15 = ptrtoint ptr %wr_stable_how to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %wr_stable_how, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %14)
  %cmp10 = icmp ugt i32 %14, 2
  br i1 %cmp10, label %if.end8.cleanup_crit_edge, label %if.end12

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end12:                                         ; preds = %if.end8
  %16 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %argp, align 32
  %call.i42 = tail call ptr @xdr_inline_decode(ptr noundef %17, i32 noundef 4) #16
  %tobool.not.i43 = icmp eq ptr %call.i42, null
  br i1 %tobool.not.i43, label %if.end12.cleanup_crit_edge, label %if.end17, !prof !108

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end17:                                         ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  %wr_buflen = getelementptr inbounds %struct.nfsd4_write, ptr %write, i32 0, i32 3
  %18 = ptrtoint ptr %call.i42 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %call.i42, align 4
  %20 = ptrtoint ptr %wr_buflen to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %wr_buflen, align 4
  %21 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %argp, align 32
  %wr_payload = getelementptr inbounds %struct.nfsd4_write, ptr %write, i32 0, i32 4
  %call20 = tail call zeroext i1 @xdr_stream_subsegment(ptr noundef %22, ptr noundef %wr_payload, i32 noundef %19) #16
  %. = select i1 %call20, i32 0, i32 10036
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end12.cleanup_crit_edge, %if.end8.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %if.end8.cleanup_crit_edge ], [ %., %if.end17 ], [ 10036, %entry.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ], [ 10036, %if.end3.cleanup_crit_edge ], [ 10036, %if.end12.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_release_lockowner(ptr nocapture noundef %argp, ptr nocapture noundef %rlockowner) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %minorversion = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 5
  %0 = ptrtoint ptr %minorversion to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %minorversion, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp.not = icmp eq i32 %1, 0
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %rl_owner = getelementptr inbounds %struct.nfsd4_release_lockowner, ptr %rlockowner, i32 0, i32 1
  %call = tail call fastcc i32 @nfsd4_decode_state_owner4(ptr noundef %argp, ptr noundef %rlockowner, ptr noundef %rl_owner)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end2, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %2 = ptrtoint ptr %minorversion to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %minorversion, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool4.not = icmp eq i32 %3, 0
  br i1 %tobool4.not, label %if.end2.if.end9_crit_edge, label %land.lhs.true

if.end2.if.end9_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

land.lhs.true:                                    ; preds = %if.end2
  %4 = ptrtoint ptr %rlockowner to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %rlockowner, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp.i = icmp eq i32 %5, 0
  br i1 %cmp.i, label %zero_clientid.exit, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

zero_clientid.exit:                               ; preds = %land.lhs.true
  %cl_id.i = getelementptr inbounds %struct.clientid_t, ptr %rlockowner, i32 0, i32 1
  %6 = ptrtoint ptr %cl_id.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cl_id.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp1.i.not = icmp eq i32 %7, 0
  br i1 %cmp1.i.not, label %zero_clientid.exit.if.end9_crit_edge, label %zero_clientid.exit.cleanup_crit_edge

zero_clientid.exit.cleanup_crit_edge:             ; preds = %zero_clientid.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

zero_clientid.exit.if.end9_crit_edge:             ; preds = %zero_clientid.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

if.end9:                                          ; preds = %zero_clientid.exit.if.end9_crit_edge, %if.end2.if.end9_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %zero_clientid.exit.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end9 ], [ 10004, %entry.cleanup_crit_edge ], [ %call, %if.end.cleanup_crit_edge ], [ 22, %zero_clientid.exit.cleanup_crit_edge ], [ 22, %land.lhs.true.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_backchannel_ctl(ptr nocapture noundef readonly %argp, ptr nocapture noundef %bc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.return_crit_edge, label %if.end, !prof !108

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %bc to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %bc, align 4
  %bc_cb_sec = getelementptr inbounds %struct.nfsd4_backchannel_ctl, ptr %bc, i32 0, i32 1
  %call1 = tail call fastcc i32 @nfsd4_decode_cb_sec(ptr noundef %argp, ptr noundef %bc_cb_sec)
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ 10036, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_bind_conn_to_session(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %bcts) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = call ptr @memcpy(ptr %bcts, ptr %call.i, i32 16)
  %3 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %argp, align 32
  %call.i14 = tail call ptr @xdr_inline_decode(ptr noundef %4, i32 noundef 4) #16
  %tobool.not.i15 = icmp eq ptr %call.i14, null
  br i1 %tobool.not.i15, label %if.end.cleanup_crit_edge, label %if.end3, !prof !108

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %dir = getelementptr inbounds %struct.nfsd4_bind_conn_to_session, ptr %bcts, i32 0, i32 1
  %5 = ptrtoint ptr %call.i14 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %call.i14, align 4
  %7 = ptrtoint ptr %dir to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dir, align 4
  %8 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %argp, align 32
  %call.i18 = tail call ptr @xdr_inline_decode(ptr noundef %9, i32 noundef 4) #16
  %tobool.not.i19 = icmp eq ptr %call.i18, null
  br i1 %tobool.not.i19, label %10, label %if.end3.cleanup_crit_edge, !prof !108

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

10:                                               ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %10, %if.end3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %entry.cleanup_crit_edge ], [ 10036, %10 ], [ 0, %if.end3.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_exchange_id(ptr nocapture noundef %argp, ptr noundef %exid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 8) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %3 = load i64, ptr %call.i, align 4
  %4 = ptrtoint ptr %exid to i32
  call void @__asan_storeN_noabort(i32 %4, i32 8)
  store i64 %3, ptr %exid, align 1
  %clname = getelementptr inbounds %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 1
  %5 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %argp, align 32
  %call.i.i = tail call ptr @xdr_inline_decode(ptr noundef %6, i32 noundef 4) #16
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.end.cleanup_crit_edge, label %if.end.i26, !prof !108

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i26:                                       ; preds = %if.end
  %7 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %call.i.i, align 4
  %9 = add i32 %8, -1025
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1024, i32 %9)
  %10 = icmp ult i32 %9, -1024
  br i1 %10, label %if.end.i26.cleanup_crit_edge, label %if.end4.i

if.end.i26.cleanup_crit_edge:                     ; preds = %if.end.i26
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4.i:                                        ; preds = %if.end.i26
  %11 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %argp, align 32
  %call6.i = tail call ptr @xdr_inline_decode(ptr noundef %12, i32 noundef %8) #16
  %tobool.not.i27 = icmp eq ptr %call6.i, null
  br i1 %tobool.not.i27, label %if.end4.i.cleanup_crit_edge, label %if.end8.i

if.end4.i.cleanup_crit_edge:                      ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8.i:                                        ; preds = %if.end4.i
  %13 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %argp, align 32
  %scratch.i.i = getelementptr inbounds %struct.xdr_stream, ptr %14, i32 0, i32 4
  %15 = ptrtoint ptr %scratch.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %scratch.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %16, %call6.i
  br i1 %cmp.not.i.i, label %if.end8.i.i.i.i, label %if.end8.i.if.end4_crit_edge

if.end8.i.if.end4_crit_edge:                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4

if.end8.i.i.i.i:                                  ; preds = %if.end8.i
  %add.i.i.i = add nuw nsw i32 %8, 4
  %call9.i.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i.i.i, i32 noundef 3264) #20
  %tobool.not.i.i.i = icmp eq ptr %call9.i.i.i.i, null
  br i1 %tobool.not.i.i.i, label %svcxdr_savemem.exit.thread.i, label %svcxdr_savemem.exit.i

svcxdr_savemem.exit.thread.i:                     ; preds = %if.end8.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %data31.i = getelementptr inbounds %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 1, i32 1
  %17 = ptrtoint ptr %data31.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %data31.i, align 4
  br label %cleanup

svcxdr_savemem.exit.i:                            ; preds = %if.end8.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %to_free.i.i.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 1
  %18 = ptrtoint ptr %to_free.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %to_free.i.i.i, align 4
  %20 = ptrtoint ptr %call9.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %19, ptr %call9.i.i.i.i, align 128
  store ptr %call9.i.i.i.i, ptr %to_free.i.i.i, align 4
  %buf.i.i.i = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call9.i.i.i.i, i32 0, i32 1
  %21 = call ptr @memcpy(ptr %buf.i.i.i, ptr %call6.i, i32 %8)
  br label %if.end4

if.end4:                                          ; preds = %svcxdr_savemem.exit.i, %if.end8.i.if.end4_crit_edge
  %buf.i.i.sink.i = phi ptr [ %buf.i.i.i, %svcxdr_savemem.exit.i ], [ %call6.i, %if.end8.i.if.end4_crit_edge ]
  %data.i = getelementptr inbounds %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 1, i32 1
  %22 = ptrtoint ptr %data.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %buf.i.i.sink.i, ptr %data.i, align 4
  %23 = ptrtoint ptr %clname to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %8, ptr %clname, align 4
  %24 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %argp, align 32
  %call.i29 = tail call ptr @xdr_inline_decode(ptr noundef %25, i32 noundef 4) #16
  %tobool.not.i30 = icmp eq ptr %call.i29, null
  br i1 %tobool.not.i30, label %if.end4.cleanup_crit_edge, label %if.end7, !prof !108

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end7:                                          ; preds = %if.end4
  %flags = getelementptr inbounds %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 2
  %26 = ptrtoint ptr %call.i29 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %call.i29, align 4
  %28 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %flags, align 4
  %29 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %argp, align 32
  %call.i.i33 = tail call ptr @xdr_inline_decode(ptr noundef %30, i32 noundef 4) #16
  %tobool.not.i.i34 = icmp eq ptr %call.i.i33, null
  br i1 %tobool.not.i.i34, label %if.end7.cleanup_crit_edge, label %if.end.i35, !prof !108

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i35:                                       ; preds = %if.end7
  %spa_how.i = getelementptr inbounds %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 5
  %31 = ptrtoint ptr %call.i.i33 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %call.i.i33, align 4
  %33 = ptrtoint ptr %spa_how.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %spa_how.i, align 4
  %34 = zext i32 %32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %34, ptr @__sancov_gen_cov_switch_values.44)
  switch i32 %32, label %if.end.i35.cleanup_crit_edge [
    i32 0, label %if.end.i35.if.end11_crit_edge
    i32 1, label %sw.bb.i
    i32 2, label %sw.bb5.i
  ]

if.end.i35.if.end11_crit_edge:                    ; preds = %if.end.i35
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

if.end.i35.cleanup_crit_edge:                     ; preds = %if.end.i35
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb.i:                                          ; preds = %if.end.i35
  %call2.i = tail call fastcc i32 @nfsd4_decode_state_protect_ops(ptr noundef %argp, ptr noundef %exid) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i36 = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i36, label %sw.bb.i.if.end11_crit_edge, label %sw.bb.i.cleanup_crit_edge

sw.bb.i.cleanup_crit_edge:                        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb.i.if.end11_crit_edge:                       ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

sw.bb5.i:                                         ; preds = %if.end.i35
  %call6.i37 = tail call fastcc i32 @nfsd4_decode_ssv_sp_parms(ptr noundef %argp, ptr noundef %exid) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i37)
  %tobool7.not.i = icmp eq i32 %call6.i37, 0
  br i1 %tobool7.not.i, label %sw.bb5.i.if.end11_crit_edge, label %sw.bb5.i.cleanup_crit_edge

sw.bb5.i.cleanup_crit_edge:                       ; preds = %sw.bb5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb5.i.if.end11_crit_edge:                      ; preds = %sw.bb5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

if.end11:                                         ; preds = %sw.bb5.i.if.end11_crit_edge, %sw.bb.i.if.end11_crit_edge, %if.end.i35.if.end11_crit_edge
  %35 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %argp, align 32
  %call.i.i39 = tail call ptr @xdr_inline_decode(ptr noundef %36, i32 noundef 4) #16
  %tobool.not.i.i40 = icmp eq ptr %call.i.i39, null
  br i1 %tobool.not.i.i40, label %if.end11.cleanup_crit_edge, label %if.end.i41, !prof !108

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i41:                                       ; preds = %if.end11
  %37 = ptrtoint ptr %call.i.i39 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %call.i.i39, align 4
  %39 = zext i32 %38 to i64
  call void @__sanitizer_cov_trace_switch(i64 %39, ptr @__sancov_gen_cov_switch_values.45)
  switch i32 %38, label %if.end.i41.cleanup_crit_edge [
    i32 0, label %if.end.i41.sw.epilog.i44_crit_edge
    i32 1, label %sw.bb.i43
  ]

if.end.i41.sw.epilog.i44_crit_edge:               ; preds = %if.end.i41
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i44

if.end.i41.cleanup_crit_edge:                     ; preds = %if.end.i41
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb.i43:                                        ; preds = %if.end.i41
  %nii_domain.i = getelementptr inbounds %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 8
  %40 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %argp, align 32
  %call.i.i.i = tail call ptr @xdr_inline_decode(ptr noundef %41, i32 noundef 4) #16
  %tobool.not.i.i.i42 = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i.i42, label %sw.bb.i43.cleanup_crit_edge, label %if.end.i23.i, !prof !108

sw.bb.i43.cleanup_crit_edge:                      ; preds = %sw.bb.i43
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i23.i:                                     ; preds = %sw.bb.i43
  %42 = ptrtoint ptr %call.i.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %call.i.i.i, align 4
  %44 = add i32 %43, -1025
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1024, i32 %44)
  %45 = icmp ult i32 %44, -1024
  br i1 %45, label %if.end.i23.i.cleanup_crit_edge, label %if.end4.i.i

if.end.i23.i.cleanup_crit_edge:                   ; preds = %if.end.i23.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4.i.i:                                      ; preds = %if.end.i23.i
  %46 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %argp, align 32
  %call6.i.i = tail call ptr @xdr_inline_decode(ptr noundef %47, i32 noundef %43) #16
  %tobool.not.i24.i = icmp eq ptr %call6.i.i, null
  br i1 %tobool.not.i24.i, label %if.end4.i.i.cleanup_crit_edge, label %if.end8.i.i

if.end4.i.i.cleanup_crit_edge:                    ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8.i.i:                                      ; preds = %if.end4.i.i
  %48 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %argp, align 32
  %scratch.i.i.i = getelementptr inbounds %struct.xdr_stream, ptr %49, i32 0, i32 4
  %50 = ptrtoint ptr %scratch.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %scratch.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %51, %call6.i.i
  br i1 %cmp.not.i.i.i, label %if.end8.i.i.i.i.i, label %if.end8.i.i.if.end3.i_crit_edge

if.end8.i.i.if.end3.i_crit_edge:                  ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3.i

if.end8.i.i.i.i.i:                                ; preds = %if.end8.i.i
  %add.i.i.i.i = add nuw nsw i32 %43, 4
  %call9.i.i.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i.i.i.i, i32 noundef 3264) #20
  %tobool.not.i.i.i.i = icmp eq ptr %call9.i.i.i.i.i, null
  br i1 %tobool.not.i.i.i.i, label %svcxdr_savemem.exit.thread.i.i, label %svcxdr_savemem.exit.i.i

svcxdr_savemem.exit.thread.i.i:                   ; preds = %if.end8.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %data31.i.i = getelementptr inbounds %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 8, i32 1
  %52 = ptrtoint ptr %data31.i.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr null, ptr %data31.i.i, align 4
  br label %cleanup

svcxdr_savemem.exit.i.i:                          ; preds = %if.end8.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %to_free.i.i.i.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 1
  %53 = ptrtoint ptr %to_free.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %to_free.i.i.i.i, align 4
  %55 = ptrtoint ptr %call9.i.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr %54, ptr %call9.i.i.i.i.i, align 128
  store ptr %call9.i.i.i.i.i, ptr %to_free.i.i.i.i, align 4
  %buf.i.i.i.i = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call9.i.i.i.i.i, i32 0, i32 1
  %56 = call ptr @memcpy(ptr %buf.i.i.i.i, ptr %call6.i.i, i32 %43)
  br label %if.end3.i

if.end3.i:                                        ; preds = %svcxdr_savemem.exit.i.i, %if.end8.i.i.if.end3.i_crit_edge
  %buf.i.i.sink.i.i = phi ptr [ %buf.i.i.i.i, %svcxdr_savemem.exit.i.i ], [ %call6.i.i, %if.end8.i.i.if.end3.i_crit_edge ]
  %data.i.i = getelementptr inbounds %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 8, i32 1
  %57 = ptrtoint ptr %data.i.i to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %buf.i.i.sink.i.i, ptr %data.i.i, align 4
  %58 = ptrtoint ptr %nii_domain.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %43, ptr %nii_domain.i, align 4
  %nii_name.i = getelementptr inbounds %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 9
  %59 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %argp, align 32
  %call.i.i26.i = tail call ptr @xdr_inline_decode(ptr noundef %60, i32 noundef 4) #16
  %tobool.not.i.i27.i = icmp eq ptr %call.i.i26.i, null
  br i1 %tobool.not.i.i27.i, label %if.end3.i.cleanup_crit_edge, label %if.end.i28.i, !prof !108

if.end3.i.cleanup_crit_edge:                      ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i28.i:                                     ; preds = %if.end3.i
  %61 = ptrtoint ptr %call.i.i26.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %call.i.i26.i, align 4
  %63 = add i32 %62, -1025
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1024, i32 %63)
  %64 = icmp ult i32 %63, -1024
  br i1 %64, label %if.end.i28.i.cleanup_crit_edge, label %if.end4.i31.i

if.end.i28.i.cleanup_crit_edge:                   ; preds = %if.end.i28.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4.i31.i:                                    ; preds = %if.end.i28.i
  %65 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %argp, align 32
  %call6.i29.i = tail call ptr @xdr_inline_decode(ptr noundef %66, i32 noundef %62) #16
  %tobool.not.i30.i = icmp eq ptr %call6.i29.i, null
  br i1 %tobool.not.i30.i, label %if.end4.i31.i.cleanup_crit_edge, label %if.end8.i34.i

if.end4.i31.i.cleanup_crit_edge:                  ; preds = %if.end4.i31.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8.i34.i:                                    ; preds = %if.end4.i31.i
  %67 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %argp, align 32
  %scratch.i.i32.i = getelementptr inbounds %struct.xdr_stream, ptr %68, i32 0, i32 4
  %69 = ptrtoint ptr %scratch.i.i32.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %scratch.i.i32.i, align 4
  %cmp.not.i.i33.i = icmp eq ptr %70, %call6.i29.i
  br i1 %cmp.not.i.i33.i, label %if.end8.i.i.i.i51.i, label %if.end8.i34.i.if.end7.i_crit_edge

if.end8.i34.i.if.end7.i_crit_edge:                ; preds = %if.end8.i34.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7.i

if.end8.i.i.i.i51.i:                              ; preds = %if.end8.i34.i
  %add.i.i.i35.i = add nuw nsw i32 %62, 4
  %call9.i.i.i.i50.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i.i.i35.i, i32 noundef 3264) #20
  %tobool.not.i.i.i53.i = icmp eq ptr %call9.i.i.i.i50.i, null
  br i1 %tobool.not.i.i.i53.i, label %svcxdr_savemem.exit.thread.i56.i, label %svcxdr_savemem.exit.i59.i

svcxdr_savemem.exit.thread.i56.i:                 ; preds = %if.end8.i.i.i.i51.i
  call void @__sanitizer_cov_trace_pc() #18
  %data31.i55.i = getelementptr inbounds %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 9, i32 1
  %71 = ptrtoint ptr %data31.i55.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store ptr null, ptr %data31.i55.i, align 4
  br label %cleanup

svcxdr_savemem.exit.i59.i:                        ; preds = %if.end8.i.i.i.i51.i
  call void @__sanitizer_cov_trace_pc() #18
  %to_free.i.i.i57.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 1
  %72 = ptrtoint ptr %to_free.i.i.i57.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %to_free.i.i.i57.i, align 4
  %74 = ptrtoint ptr %call9.i.i.i.i50.i to i32
  call void @__asan_store4_noabort(i32 %74)
  store ptr %73, ptr %call9.i.i.i.i50.i, align 128
  store ptr %call9.i.i.i.i50.i, ptr %to_free.i.i.i57.i, align 4
  %buf.i.i.i58.i = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call9.i.i.i.i50.i, i32 0, i32 1
  %75 = call ptr @memcpy(ptr %buf.i.i.i58.i, ptr %call6.i29.i, i32 %62)
  br label %if.end7.i

if.end7.i:                                        ; preds = %svcxdr_savemem.exit.i59.i, %if.end8.i34.i.if.end7.i_crit_edge
  %buf.i.i.sink.i60.i = phi ptr [ %buf.i.i.i58.i, %svcxdr_savemem.exit.i59.i ], [ %call6.i29.i, %if.end8.i34.i.if.end7.i_crit_edge ]
  %data.i61.i = getelementptr inbounds %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 9, i32 1
  %76 = ptrtoint ptr %data.i61.i to i32
  call void @__asan_store4_noabort(i32 %76)
  store ptr %buf.i.i.sink.i60.i, ptr %data.i61.i, align 4
  %77 = ptrtoint ptr %nii_name.i to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 %62, ptr %nii_name.i, align 4
  %78 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %argp, align 32
  %call.i65.i = tail call ptr @xdr_inline_decode(ptr noundef %79, i32 noundef 12) #16
  %tobool.not.i66.i = icmp eq ptr %call.i65.i, null
  br i1 %tobool.not.i66.i, label %if.end7.i.cleanup_crit_edge, label %if.end.i67.i

if.end7.i.cleanup_crit_edge:                      ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i67.i:                                     ; preds = %if.end7.i
  %nii_time.i = getelementptr inbounds %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 10
  %80 = ptrtoint ptr %call.i65.i to i32
  call void @__asan_loadN_noabort(i32 %80, i32 8)
  %81 = load i64, ptr %call.i65.i, align 1
  %82 = ptrtoint ptr %nii_time.i to i32
  call void @__asan_store8_noabort(i32 %82)
  store i64 %81, ptr %nii_time.i, align 8
  %add.ptr.i.i.i = getelementptr i32, ptr %call.i65.i, i32 2
  %83 = ptrtoint ptr %add.ptr.i.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load i32, ptr %add.ptr.i.i.i, align 4
  %tv_nsec.i.i = getelementptr inbounds %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 10, i32 1
  %85 = ptrtoint ptr %tv_nsec.i.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store i32 %84, ptr %tv_nsec.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 999999999, i32 %84)
  %cmp.i.i = icmp ugt i32 %84, 999999999
  br i1 %cmp.i.i, label %if.end.i67.i.cleanup_crit_edge, label %if.end.i67.i.sw.epilog.i44_crit_edge

if.end.i67.i.sw.epilog.i44_crit_edge:             ; preds = %if.end.i67.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i44

if.end.i67.i.cleanup_crit_edge:                   ; preds = %if.end.i67.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.epilog.i44:                                    ; preds = %if.end.i67.i.sw.epilog.i44_crit_edge, %if.end.i41.sw.epilog.i44_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog.i44, %if.end.i67.i.cleanup_crit_edge, %if.end7.i.cleanup_crit_edge, %svcxdr_savemem.exit.thread.i56.i, %if.end4.i31.i.cleanup_crit_edge, %if.end.i28.i.cleanup_crit_edge, %if.end3.i.cleanup_crit_edge, %svcxdr_savemem.exit.thread.i.i, %if.end4.i.i.cleanup_crit_edge, %if.end.i23.i.cleanup_crit_edge, %sw.bb.i43.cleanup_crit_edge, %if.end.i41.cleanup_crit_edge, %if.end11.cleanup_crit_edge, %sw.bb5.i.cleanup_crit_edge, %sw.bb.i.cleanup_crit_edge, %if.end.i35.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %svcxdr_savemem.exit.thread.i, %if.end4.i.cleanup_crit_edge, %if.end.i26.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %entry.cleanup_crit_edge ], [ 0, %sw.epilog.i44 ], [ 10036, %if.end.i41.cleanup_crit_edge ], [ 10036, %if.end11.cleanup_crit_edge ], [ 10036, %sw.bb.i43.cleanup_crit_edge ], [ 10008, %svcxdr_savemem.exit.thread.i.i ], [ 10036, %if.end4.i.i.cleanup_crit_edge ], [ 10036, %if.end.i23.i.cleanup_crit_edge ], [ 10036, %if.end3.i.cleanup_crit_edge ], [ 10008, %svcxdr_savemem.exit.thread.i56.i ], [ 10036, %if.end4.i31.i.cleanup_crit_edge ], [ 10036, %if.end.i28.i.cleanup_crit_edge ], [ 10036, %if.end7.i.cleanup_crit_edge ], [ 22, %if.end.i67.i.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ], [ 10008, %svcxdr_savemem.exit.thread.i ], [ 10036, %if.end4.i.cleanup_crit_edge ], [ 10036, %if.end.i26.cleanup_crit_edge ], [ 10036, %if.end4.cleanup_crit_edge ], [ 10036, %if.end7.cleanup_crit_edge ], [ 10036, %if.end.i35.cleanup_crit_edge ], [ %call6.i37, %sw.bb5.i.cleanup_crit_edge ], [ %call2.i, %sw.bb.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_create_session(ptr nocapture noundef readonly %argp, ptr nocapture noundef %sess) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 8) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %3 = load i64, ptr %call.i, align 4
  %4 = ptrtoint ptr %sess to i32
  call void @__asan_storeN_noabort(i32 %4, i32 8)
  store i64 %3, ptr %sess, align 4
  %5 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %argp, align 32
  %call.i45 = tail call ptr @xdr_inline_decode(ptr noundef %6, i32 noundef 4) #16
  %tobool.not.i46 = icmp eq ptr %call.i45, null
  br i1 %tobool.not.i46, label %if.end.cleanup_crit_edge, label %if.end3, !prof !108

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %seqid = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 2
  %7 = ptrtoint ptr %call.i45 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %call.i45, align 4
  %9 = ptrtoint ptr %seqid to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %seqid, align 4
  %10 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %argp, align 32
  %call.i49 = tail call ptr @xdr_inline_decode(ptr noundef %11, i32 noundef 4) #16
  %tobool.not.i50 = icmp eq ptr %call.i49, null
  br i1 %tobool.not.i50, label %if.end3.cleanup_crit_edge, label %if.end8, !prof !108

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8:                                          ; preds = %if.end3
  %flags = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 3
  %12 = ptrtoint ptr %call.i49 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %call.i49, align 4
  %14 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %flags, align 4
  %15 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %argp, align 32
  %call.i54 = tail call ptr @xdr_inline_decode(ptr noundef %16, i32 noundef 28) #16
  %tobool.not.i55 = icmp eq ptr %call.i54, null
  br i1 %tobool.not.i55, label %if.end8.cleanup_crit_edge, label %if.end.i56

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i56:                                       ; preds = %if.end8
  %incdec.ptr.i = getelementptr i32, ptr %call.i54, i32 1
  %incdec.ptr1.i = getelementptr i32, ptr %call.i54, i32 2
  %17 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %incdec.ptr.i, align 4
  %maxreq_sz.i = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 4, i32 1
  %19 = ptrtoint ptr %maxreq_sz.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %maxreq_sz.i, align 4
  %incdec.ptr3.i = getelementptr i32, ptr %call.i54, i32 3
  %20 = ptrtoint ptr %incdec.ptr1.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %incdec.ptr1.i, align 4
  %maxresp_sz.i = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 4, i32 2
  %22 = ptrtoint ptr %maxresp_sz.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %maxresp_sz.i, align 4
  %incdec.ptr5.i = getelementptr i32, ptr %call.i54, i32 4
  %23 = ptrtoint ptr %incdec.ptr3.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %incdec.ptr3.i, align 4
  %maxresp_cached.i = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 4, i32 3
  %25 = ptrtoint ptr %maxresp_cached.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %maxresp_cached.i, align 4
  %incdec.ptr7.i = getelementptr i32, ptr %call.i54, i32 5
  %26 = ptrtoint ptr %incdec.ptr5.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %incdec.ptr5.i, align 4
  %maxops.i = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 4, i32 4
  %28 = ptrtoint ptr %maxops.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %maxops.i, align 4
  %incdec.ptr9.i = getelementptr i32, ptr %call.i54, i32 6
  %29 = ptrtoint ptr %incdec.ptr7.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %incdec.ptr7.i, align 4
  %maxreqs.i = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 4, i32 5
  %31 = ptrtoint ptr %maxreqs.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %maxreqs.i, align 4
  %32 = ptrtoint ptr %incdec.ptr9.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %incdec.ptr9.i, align 4
  %nr_rdma_attrs.i = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 4, i32 6
  %34 = ptrtoint ptr %nr_rdma_attrs.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %nr_rdma_attrs.i, align 4
  %35 = zext i32 %33 to i64
  call void @__sanitizer_cov_trace_switch(i64 %35, ptr @__sancov_gen_cov_switch_values.46)
  switch i32 %33, label %if.end.i56.cleanup_crit_edge [
    i32 0, label %if.end.i56.if.end12_crit_edge
    i32 1, label %sw.bb.i
  ]

if.end.i56.if.end12_crit_edge:                    ; preds = %if.end.i56
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end12

if.end.i56.cleanup_crit_edge:                     ; preds = %if.end.i56
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb.i:                                          ; preds = %if.end.i56
  %36 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %argp, align 32
  %call.i.i = tail call ptr @xdr_inline_decode(ptr noundef %37, i32 noundef 4) #16
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %sw.bb.i.cleanup_crit_edge, label %xdr_stream_decode_u32.exit.i, !prof !108

sw.bb.i.cleanup_crit_edge:                        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

xdr_stream_decode_u32.exit.i:                     ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  %rdma_attrs.i = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 4, i32 7
  %38 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %call.i.i, align 4
  %40 = ptrtoint ptr %rdma_attrs.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %rdma_attrs.i, align 4
  br label %if.end12

if.end12:                                         ; preds = %xdr_stream_decode_u32.exit.i, %if.end.i56.if.end12_crit_edge
  %41 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %argp, align 32
  %call.i58 = tail call ptr @xdr_inline_decode(ptr noundef %42, i32 noundef 28) #16
  %tobool.not.i59 = icmp eq ptr %call.i58, null
  br i1 %tobool.not.i59, label %if.end12.cleanup_crit_edge, label %if.end.i72

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i72:                                       ; preds = %if.end12
  %incdec.ptr.i60 = getelementptr i32, ptr %call.i58, i32 1
  %incdec.ptr1.i61 = getelementptr i32, ptr %call.i58, i32 2
  %43 = ptrtoint ptr %incdec.ptr.i60 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %incdec.ptr.i60, align 4
  %maxreq_sz.i62 = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 5, i32 1
  %45 = ptrtoint ptr %maxreq_sz.i62 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %maxreq_sz.i62, align 4
  %incdec.ptr3.i63 = getelementptr i32, ptr %call.i58, i32 3
  %46 = ptrtoint ptr %incdec.ptr1.i61 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %incdec.ptr1.i61, align 4
  %maxresp_sz.i64 = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 5, i32 2
  %48 = ptrtoint ptr %maxresp_sz.i64 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %maxresp_sz.i64, align 4
  %incdec.ptr5.i65 = getelementptr i32, ptr %call.i58, i32 4
  %49 = ptrtoint ptr %incdec.ptr3.i63 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %incdec.ptr3.i63, align 4
  %maxresp_cached.i66 = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 5, i32 3
  %51 = ptrtoint ptr %maxresp_cached.i66 to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %maxresp_cached.i66, align 4
  %incdec.ptr7.i67 = getelementptr i32, ptr %call.i58, i32 5
  %52 = ptrtoint ptr %incdec.ptr5.i65 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %incdec.ptr5.i65, align 4
  %maxops.i68 = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 5, i32 4
  %54 = ptrtoint ptr %maxops.i68 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %53, ptr %maxops.i68, align 4
  %incdec.ptr9.i69 = getelementptr i32, ptr %call.i58, i32 6
  %55 = ptrtoint ptr %incdec.ptr7.i67 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %incdec.ptr7.i67, align 4
  %maxreqs.i70 = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 5, i32 5
  %57 = ptrtoint ptr %maxreqs.i70 to i32
  call void @__asan_store4_noabort(i32 %57)
  store i32 %56, ptr %maxreqs.i70, align 4
  %58 = ptrtoint ptr %incdec.ptr9.i69 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %incdec.ptr9.i69, align 4
  %nr_rdma_attrs.i71 = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 5, i32 6
  %60 = ptrtoint ptr %nr_rdma_attrs.i71 to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %59, ptr %nr_rdma_attrs.i71, align 4
  %61 = zext i32 %59 to i64
  call void @__sanitizer_cov_trace_switch(i64 %61, ptr @__sancov_gen_cov_switch_values.47)
  switch i32 %59, label %if.end.i72.cleanup_crit_edge [
    i32 0, label %if.end.i72.if.end16_crit_edge
    i32 1, label %sw.bb.i75
  ]

if.end.i72.if.end16_crit_edge:                    ; preds = %if.end.i72
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end16

if.end.i72.cleanup_crit_edge:                     ; preds = %if.end.i72
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb.i75:                                        ; preds = %if.end.i72
  %62 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %argp, align 32
  %call.i.i73 = tail call ptr @xdr_inline_decode(ptr noundef %63, i32 noundef 4) #16
  %tobool.not.i.i74 = icmp eq ptr %call.i.i73, null
  br i1 %tobool.not.i.i74, label %sw.bb.i75.cleanup_crit_edge, label %xdr_stream_decode_u32.exit.i77, !prof !108

sw.bb.i75.cleanup_crit_edge:                      ; preds = %sw.bb.i75
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

xdr_stream_decode_u32.exit.i77:                   ; preds = %sw.bb.i75
  call void @__sanitizer_cov_trace_pc() #18
  %rdma_attrs.i76 = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 5, i32 7
  %64 = ptrtoint ptr %call.i.i73 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %call.i.i73, align 4
  %66 = ptrtoint ptr %rdma_attrs.i76 to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %65, ptr %rdma_attrs.i76, align 4
  br label %if.end16

if.end16:                                         ; preds = %xdr_stream_decode_u32.exit.i77, %if.end.i72.if.end16_crit_edge
  %67 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %argp, align 32
  %call.i81 = tail call ptr @xdr_inline_decode(ptr noundef %68, i32 noundef 4) #16
  %tobool.not.i82 = icmp eq ptr %call.i81, null
  br i1 %tobool.not.i82, label %if.end16.cleanup_crit_edge, label %if.end21, !prof !108

if.end16.cleanup_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end21:                                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  %callback_prog = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 6
  %69 = ptrtoint ptr %call.i81 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %call.i81, align 4
  %71 = ptrtoint ptr %callback_prog to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %70, ptr %callback_prog, align 4
  %cb_sec = getelementptr inbounds %struct.nfsd4_create_session, ptr %sess, i32 0, i32 7
  %call22 = tail call fastcc i32 @nfsd4_decode_cb_sec(ptr noundef %argp, ptr noundef %cb_sec)
  br label %cleanup

cleanup:                                          ; preds = %if.end21, %if.end16.cleanup_crit_edge, %sw.bb.i75.cleanup_crit_edge, %if.end.i72.cleanup_crit_edge, %if.end12.cleanup_crit_edge, %sw.bb.i.cleanup_crit_edge, %if.end.i56.cleanup_crit_edge, %if.end8.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call22, %if.end21 ], [ 10036, %entry.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ], [ 10036, %if.end3.cleanup_crit_edge ], [ 10036, %if.end8.cleanup_crit_edge ], [ 10036, %if.end.i56.cleanup_crit_edge ], [ 10036, %sw.bb.i.cleanup_crit_edge ], [ 10036, %if.end12.cleanup_crit_edge ], [ 10036, %if.end.i72.cleanup_crit_edge ], [ 10036, %sw.bb.i75.cleanup_crit_edge ], [ 10036, %if.end16.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_destroy_session(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %destroy_session) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.nfsd4_decode_sessionid4.exit_crit_edge, label %if.end.i

entry.nfsd4_decode_sessionid4.exit_crit_edge:     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_sessionid4.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %2 = call ptr @memcpy(ptr %destroy_session, ptr %call.i, i32 16)
  br label %nfsd4_decode_sessionid4.exit

nfsd4_decode_sessionid4.exit:                     ; preds = %if.end.i, %entry.nfsd4_decode_sessionid4.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end.i ], [ 10036, %entry.nfsd4_decode_sessionid4.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_free_stateid(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %free_stateid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.nfsd4_decode_stateid4.exit_crit_edge, label %if.end.i

entry.nfsd4_decode_stateid4.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_stateid4.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %free_stateid to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %free_stateid, align 4
  %si_opaque.i = getelementptr inbounds %struct.stateid_t, ptr %free_stateid, i32 0, i32 1
  %5 = call ptr @memcpy(ptr %si_opaque.i, ptr %incdec.ptr.i, i32 12)
  br label %nfsd4_decode_stateid4.exit

nfsd4_decode_stateid4.exit:                       ; preds = %if.end.i, %entry.nfsd4_decode_stateid4.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end.i ], [ 10036, %entry.nfsd4_decode_stateid4.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_getdeviceinfo(ptr nocapture noundef readonly %argp, ptr noundef writeonly %gdev) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = call ptr @memcpy(ptr %gdev, ptr %call.i, i32 16)
  %3 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %argp, align 32
  %call.i21 = tail call ptr @xdr_inline_decode(ptr noundef %4, i32 noundef 4) #16
  %tobool.not.i22 = icmp eq ptr %call.i21, null
  br i1 %tobool.not.i22, label %if.end.cleanup_crit_edge, label %if.end3, !prof !108

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %gd_layout_type = getelementptr inbounds %struct.nfsd4_getdeviceinfo, ptr %gdev, i32 0, i32 1
  %5 = ptrtoint ptr %call.i21 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %call.i21, align 4
  %7 = ptrtoint ptr %gd_layout_type to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %gd_layout_type, align 4
  %8 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %argp, align 32
  %call.i25 = tail call ptr @xdr_inline_decode(ptr noundef %9, i32 noundef 4) #16
  %tobool.not.i26 = icmp eq ptr %call.i25, null
  br i1 %tobool.not.i26, label %if.end3.cleanup_crit_edge, label %if.end8, !prof !108

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8:                                          ; preds = %if.end3
  %gd_maxcount = getelementptr inbounds %struct.nfsd4_getdeviceinfo, ptr %gdev, i32 0, i32 2
  %10 = ptrtoint ptr %call.i25 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %call.i25, align 4
  %12 = ptrtoint ptr %gd_maxcount to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %gd_maxcount, align 4
  %13 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %argp, align 32
  %gd_notify_types = getelementptr inbounds %struct.nfsd4_getdeviceinfo, ptr %gdev, i32 0, i32 3
  %call.i.i = tail call ptr @xdr_inline_decode(ptr noundef %14, i32 noundef 4) #16
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.end8.xdr_stream_decode_uint32_array.exit.thread_crit_edge, label %if.end.i30, !prof !108

if.end8.xdr_stream_decode_uint32_array.exit.thread_crit_edge: ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit.thread

if.end.i30:                                       ; preds = %if.end8
  %15 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %call.i.i, align 4
  %mul.i = shl i32 %16, 2
  %call3.i = tail call ptr @xdr_inline_decode(ptr noundef %14, i32 noundef %mul.i) #16
  %tobool4.not.i = icmp eq ptr %call3.i, null
  br i1 %tobool4.not.i, label %if.end.i30.xdr_stream_decode_uint32_array.exit.thread_crit_edge, label %if.end14.i, !prof !108

if.end.i30.xdr_stream_decode_uint32_array.exit.thread_crit_edge: ; preds = %if.end.i30
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit.thread

if.end14.i:                                       ; preds = %if.end.i30
  %cmp15.i = icmp eq ptr %gd_notify_types, null
  br i1 %cmp15.i, label %if.end14.i.xdr_stream_decode_uint32_array.exit_crit_edge, label %if.end17.i

if.end14.i.xdr_stream_decode_uint32_array.exit_crit_edge: ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit

if.end17.i:                                       ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %16)
  %cmp18.not.i = icmp ugt i32 %16, 1
  br i1 %cmp18.not.i, label %if.end17.i.if.end24.i_crit_edge, label %if.then19.i

if.end17.i.if.end24.i_crit_edge:                  ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end24.i

if.then19.i:                                      ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %cmp20.i = icmp eq i32 %16, 0
  br i1 %cmp20.i, label %xdr_stream_decode_uint32_array.exit.thread43, label %if.then19.i.if.end24.i_crit_edge

if.then19.i.if.end24.i_crit_edge:                 ; preds = %if.then19.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end24.i

xdr_stream_decode_uint32_array.exit.thread43:     ; preds = %if.then19.i
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %gd_notify_types to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %gd_notify_types, align 4
  br label %cleanup

if.end24.i:                                       ; preds = %if.then19.i.if.end24.i_crit_edge, %if.end17.i.if.end24.i_crit_edge
  %retval1.0.i = phi i32 [ -90, %if.end17.i.if.end24.i_crit_edge ], [ 1, %if.then19.i.if.end24.i_crit_edge ]
  %18 = ptrtoint ptr %call3.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %call3.i, align 4
  %20 = ptrtoint ptr %gd_notify_types to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %gd_notify_types, align 4
  br label %xdr_stream_decode_uint32_array.exit

xdr_stream_decode_uint32_array.exit:              ; preds = %if.end24.i, %if.end14.i.xdr_stream_decode_uint32_array.exit_crit_edge
  %retval.0.i31 = phi i32 [ %16, %if.end14.i.xdr_stream_decode_uint32_array.exit_crit_edge ], [ %retval1.0.i, %if.end24.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i31)
  %cmp11 = icmp slt i32 %retval.0.i31, 0
  br i1 %cmp11, label %xdr_stream_decode_uint32_array.exit.xdr_stream_decode_uint32_array.exit.thread_crit_edge, label %xdr_stream_decode_uint32_array.exit.cleanup_crit_edge

xdr_stream_decode_uint32_array.exit.cleanup_crit_edge: ; preds = %xdr_stream_decode_uint32_array.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

xdr_stream_decode_uint32_array.exit.xdr_stream_decode_uint32_array.exit.thread_crit_edge: ; preds = %xdr_stream_decode_uint32_array.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit.thread

xdr_stream_decode_uint32_array.exit.thread:       ; preds = %xdr_stream_decode_uint32_array.exit.xdr_stream_decode_uint32_array.exit.thread_crit_edge, %if.end.i30.xdr_stream_decode_uint32_array.exit.thread_crit_edge, %if.end8.xdr_stream_decode_uint32_array.exit.thread_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %xdr_stream_decode_uint32_array.exit.thread, %xdr_stream_decode_uint32_array.exit.cleanup_crit_edge, %xdr_stream_decode_uint32_array.exit.thread43, %if.end3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %entry.cleanup_crit_edge ], [ 10036, %xdr_stream_decode_uint32_array.exit.thread ], [ 0, %xdr_stream_decode_uint32_array.exit.cleanup_crit_edge ], [ 0, %xdr_stream_decode_uint32_array.exit.thread43 ], [ 10036, %if.end.cleanup_crit_edge ], [ 10036, %if.end3.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_layoutcommit(ptr nocapture noundef readonly %argp, ptr nocapture noundef %lcp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 8) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end, !prof !108

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %offset = getelementptr inbounds %struct.nfsd4_layoutcommit, ptr %lcp, i32 0, i32 1, i32 1
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %3 = load i64, ptr %call.i, align 1
  %4 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %3, ptr %offset, align 8
  %5 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %argp, align 32
  %call.i68 = tail call ptr @xdr_inline_decode(ptr noundef %6, i32 noundef 8) #16
  %tobool.not.i69 = icmp eq ptr %call.i68, null
  br i1 %tobool.not.i69, label %if.end.cleanup_crit_edge, label %if.end6, !prof !108

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %length = getelementptr inbounds %struct.nfsd4_layoutcommit, ptr %lcp, i32 0, i32 1, i32 2
  %7 = ptrtoint ptr %call.i68 to i32
  call void @__asan_loadN_noabort(i32 %7, i32 8)
  %8 = load i64, ptr %call.i68, align 1
  %9 = ptrtoint ptr %length to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %8, ptr %length, align 8
  %10 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %argp, align 32
  %call.i73 = tail call ptr @xdr_inline_decode(ptr noundef %11, i32 noundef 4) #16
  %tobool.not.i74 = icmp eq ptr %call.i73, null
  br i1 %tobool.not.i74, label %if.end6.cleanup_crit_edge, label %if.end11, !prof !108

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end11:                                         ; preds = %if.end6
  %lc_reclaim = getelementptr inbounds %struct.nfsd4_layoutcommit, ptr %lcp, i32 0, i32 2
  %12 = ptrtoint ptr %call.i73 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %call.i73, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp.i = icmp ne i32 %13, 0
  %conv.i = zext i1 %cmp.i to i32
  %14 = ptrtoint ptr %lc_reclaim to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %conv.i, ptr %lc_reclaim, align 4
  %15 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %argp, align 32
  %call.i77 = tail call ptr @xdr_inline_decode(ptr noundef %16, i32 noundef 16) #16
  %tobool.not.i78 = icmp eq ptr %call.i77, null
  br i1 %tobool.not.i78, label %if.end11.cleanup_crit_edge, label %if.end14

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end14:                                         ; preds = %if.end11
  %incdec.ptr.i = getelementptr i32, ptr %call.i77, i32 1
  %17 = ptrtoint ptr %call.i77 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %call.i77, align 4
  %19 = ptrtoint ptr %lcp to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %lcp, align 4
  %si_opaque.i = getelementptr inbounds %struct.stateid_t, ptr %lcp, i32 0, i32 1
  %20 = call ptr @memcpy(ptr %si_opaque.i, ptr %incdec.ptr.i, i32 12)
  %21 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %argp, align 32
  %call.i81 = tail call ptr @xdr_inline_decode(ptr noundef %22, i32 noundef 4) #16
  %tobool.not.i82 = icmp eq ptr %call.i81, null
  br i1 %tobool.not.i82, label %if.end14.cleanup_crit_edge, label %if.end19, !prof !108

if.end14.cleanup_crit_edge:                       ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end19:                                         ; preds = %if.end14
  %lc_newoffset = getelementptr inbounds %struct.nfsd4_layoutcommit, ptr %lcp, i32 0, i32 3
  %23 = ptrtoint ptr %call.i81 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %call.i81, align 4
  %25 = ptrtoint ptr %lc_newoffset to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %lc_newoffset, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool21.not = icmp eq i32 %24, 0
  br i1 %tobool21.not, label %if.else, label %if.then22

if.then22:                                        ; preds = %if.end19
  %26 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %argp, align 32
  %call.i85 = tail call ptr @xdr_inline_decode(ptr noundef %27, i32 noundef 8) #16
  %tobool.not.i86 = icmp eq ptr %call.i85, null
  br i1 %tobool.not.i86, label %if.then22.cleanup_crit_edge, label %xdr_stream_decode_u64.exit89, !prof !108

if.then22.cleanup_crit_edge:                      ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

xdr_stream_decode_u64.exit89:                     ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #18
  %lc_last_wr = getelementptr inbounds %struct.nfsd4_layoutcommit, ptr %lcp, i32 0, i32 4
  %28 = ptrtoint ptr %call.i85 to i32
  call void @__asan_loadN_noabort(i32 %28, i32 8)
  %29 = load i64, ptr %call.i85, align 1
  %30 = ptrtoint ptr %lc_last_wr to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %29, ptr %lc_last_wr, align 8
  br label %if.end29

if.else:                                          ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #18
  %lc_last_wr28 = getelementptr inbounds %struct.nfsd4_layoutcommit, ptr %lcp, i32 0, i32 4
  %31 = ptrtoint ptr %lc_last_wr28 to i32
  call void @__asan_store8_noabort(i32 %31)
  store i64 0, ptr %lc_last_wr28, align 8
  br label %if.end29

if.end29:                                         ; preds = %if.else, %xdr_stream_decode_u64.exit89
  %32 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %argp, align 32
  %call31 = tail call ptr @xdr_inline_decode(ptr noundef %33, i32 noundef 4) #16
  %tobool32.not = icmp eq ptr %call31, null
  br i1 %tobool32.not, label %if.end29.cleanup_crit_edge, label %if.end34

if.end29.cleanup_crit_edge:                       ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end34:                                         ; preds = %if.end29
  %34 = ptrtoint ptr %call31 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %call31, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %cmp.i90.not = icmp eq i32 %35, 0
  br i1 %cmp.i90.not, label %if.else41, label %if.then36

if.then36:                                        ; preds = %if.end34
  %lc_mtime = getelementptr inbounds %struct.nfsd4_layoutcommit, ptr %lcp, i32 0, i32 5
  %call37 = tail call fastcc i32 @nfsd4_decode_nfstime4(ptr noundef %argp, ptr noundef %lc_mtime)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37)
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %if.then36.if.end43_crit_edge, label %if.then36.cleanup_crit_edge

if.then36.cleanup_crit_edge:                      ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then36.if.end43_crit_edge:                     ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end43

if.else41:                                        ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #18
  %tv_nsec = getelementptr inbounds %struct.nfsd4_layoutcommit, ptr %lcp, i32 0, i32 5, i32 1
  %36 = ptrtoint ptr %tv_nsec to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 1073741823, ptr %tv_nsec, align 8
  br label %if.end43

if.end43:                                         ; preds = %if.else41, %if.then36.if.end43_crit_edge
  %37 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %argp, align 32
  %call.i.i = tail call ptr @xdr_inline_decode(ptr noundef %38, i32 noundef 4) #16
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.end43.cleanup_crit_edge, label %if.end.i91, !prof !108

if.end43.cleanup_crit_edge:                       ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i91:                                       ; preds = %if.end43
  %lc_layout_type.i = getelementptr inbounds %struct.nfsd4_layoutcommit, ptr %lcp, i32 0, i32 6
  %39 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %call.i.i, align 4
  %41 = ptrtoint ptr %lc_layout_type.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %lc_layout_type.i, align 4
  %42 = add i32 %40, -6
  call void @__sanitizer_cov_trace_const_cmp4(i32 -5, i32 %42)
  %43 = icmp ult i32 %42, -5
  br i1 %43, label %if.end.i91.cleanup_crit_edge, label %if.end8.i

if.end.i91.cleanup_crit_edge:                     ; preds = %if.end.i91
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8.i:                                        ; preds = %if.end.i91
  %44 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %argp, align 32
  %call.i34.i = tail call ptr @xdr_inline_decode(ptr noundef %45, i32 noundef 4) #16
  %tobool.not.i35.i = icmp eq ptr %call.i34.i, null
  br i1 %tobool.not.i35.i, label %if.end8.i.cleanup_crit_edge, label %if.end13.i, !prof !108

if.end8.i.cleanup_crit_edge:                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end13.i:                                       ; preds = %if.end8.i
  %lc_up_len.i = getelementptr inbounds %struct.nfsd4_layoutcommit, ptr %lcp, i32 0, i32 7
  %46 = ptrtoint ptr %call.i34.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %call.i34.i, align 4
  %48 = ptrtoint ptr %lc_up_len.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %lc_up_len.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %cmp15.not.i = icmp eq i32 %47, 0
  br i1 %cmp15.not.i, label %if.end13.i.if.end23.i_crit_edge, label %if.then16.i

if.end13.i.if.end23.i_crit_edge:                  ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i

if.then16.i:                                      ; preds = %if.end13.i
  %49 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %argp, align 32
  %call19.i = tail call ptr @xdr_inline_decode(ptr noundef %50, i32 noundef %47) #16
  %lc_up_layout.i = getelementptr inbounds %struct.nfsd4_layoutcommit, ptr %lcp, i32 0, i32 8
  %51 = ptrtoint ptr %lc_up_layout.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %call19.i, ptr %lc_up_layout.i, align 8
  %tobool.not.i92 = icmp eq ptr %call19.i, null
  br i1 %tobool.not.i92, label %if.then16.i.cleanup_crit_edge, label %if.then16.i.if.end23.i_crit_edge

if.then16.i.if.end23.i_crit_edge:                 ; preds = %if.then16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end23.i

if.then16.i.cleanup_crit_edge:                    ; preds = %if.then16.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end23.i:                                       ; preds = %if.then16.i.if.end23.i_crit_edge, %if.end13.i.if.end23.i_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %if.end23.i, %if.then16.i.cleanup_crit_edge, %if.end8.i.cleanup_crit_edge, %if.end.i91.cleanup_crit_edge, %if.end43.cleanup_crit_edge, %if.then36.cleanup_crit_edge, %if.end29.cleanup_crit_edge, %if.then22.cleanup_crit_edge, %if.end14.cleanup_crit_edge, %if.end11.cleanup_crit_edge, %if.end6.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %if.end29.cleanup_crit_edge ], [ %call37, %if.then36.cleanup_crit_edge ], [ 10036, %if.end11.cleanup_crit_edge ], [ 0, %if.end23.i ], [ 10036, %if.end.i91.cleanup_crit_edge ], [ 10036, %if.then16.i.cleanup_crit_edge ], [ 10036, %if.end43.cleanup_crit_edge ], [ 10036, %if.end8.i.cleanup_crit_edge ], [ 10036, %entry.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ], [ 10036, %if.end6.cleanup_crit_edge ], [ 10036, %if.end14.cleanup_crit_edge ], [ 10036, %if.then22.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_layoutget(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %lgp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end, !prof !108

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %lg_signal = getelementptr inbounds %struct.nfsd4_layoutget, ptr %lgp, i32 0, i32 1
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %lg_signal to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %lg_signal, align 4
  %5 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %argp, align 32
  %call.i51 = tail call ptr @xdr_inline_decode(ptr noundef %6, i32 noundef 4) #16
  %tobool.not.i52 = icmp eq ptr %call.i51, null
  br i1 %tobool.not.i52, label %if.end.cleanup_crit_edge, label %if.end5, !prof !108

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %lg_layout_type = getelementptr inbounds %struct.nfsd4_layoutget, ptr %lgp, i32 0, i32 2
  %7 = ptrtoint ptr %call.i51 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %call.i51, align 4
  %9 = ptrtoint ptr %lg_layout_type to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %lg_layout_type, align 4
  %10 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %argp, align 32
  %call.i56 = tail call ptr @xdr_inline_decode(ptr noundef %11, i32 noundef 4) #16
  %tobool.not.i57 = icmp eq ptr %call.i56, null
  br i1 %tobool.not.i57, label %if.end5.cleanup_crit_edge, label %if.end10, !prof !108

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end10:                                         ; preds = %if.end5
  %lg_seg = getelementptr inbounds %struct.nfsd4_layoutget, ptr %lgp, i32 0, i32 5
  %12 = ptrtoint ptr %call.i56 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %call.i56, align 4
  %14 = ptrtoint ptr %lg_seg to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %lg_seg, align 4
  %15 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %argp, align 32
  %call.i61 = tail call ptr @xdr_inline_decode(ptr noundef %16, i32 noundef 8) #16
  %tobool.not.i62 = icmp eq ptr %call.i61, null
  br i1 %tobool.not.i62, label %if.end10.cleanup_crit_edge, label %if.end16, !prof !108

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end16:                                         ; preds = %if.end10
  %offset = getelementptr inbounds %struct.nfsd4_layoutget, ptr %lgp, i32 0, i32 5, i32 1
  %17 = ptrtoint ptr %call.i61 to i32
  call void @__asan_loadN_noabort(i32 %17, i32 8)
  %18 = load i64, ptr %call.i61, align 1
  %19 = ptrtoint ptr %offset to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %18, ptr %offset, align 8
  %20 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %argp, align 32
  %call.i65 = tail call ptr @xdr_inline_decode(ptr noundef %21, i32 noundef 8) #16
  %tobool.not.i66 = icmp eq ptr %call.i65, null
  br i1 %tobool.not.i66, label %if.end16.cleanup_crit_edge, label %if.end22, !prof !108

if.end16.cleanup_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end22:                                         ; preds = %if.end16
  %length = getelementptr inbounds %struct.nfsd4_layoutget, ptr %lgp, i32 0, i32 5, i32 2
  %22 = ptrtoint ptr %call.i65 to i32
  call void @__asan_loadN_noabort(i32 %22, i32 8)
  %23 = load i64, ptr %call.i65, align 1
  %24 = ptrtoint ptr %length to i32
  call void @__asan_store8_noabort(i32 %24)
  store i64 %23, ptr %length, align 8
  %25 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %argp, align 32
  %call.i70 = tail call ptr @xdr_inline_decode(ptr noundef %26, i32 noundef 8) #16
  %tobool.not.i71 = icmp eq ptr %call.i70, null
  br i1 %tobool.not.i71, label %if.end22.cleanup_crit_edge, label %if.end27, !prof !108

if.end22.cleanup_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end27:                                         ; preds = %if.end22
  %27 = ptrtoint ptr %call.i70 to i32
  call void @__asan_loadN_noabort(i32 %27, i32 8)
  %28 = load i64, ptr %call.i70, align 1
  %29 = ptrtoint ptr %lgp to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %lgp, align 8
  %30 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %argp, align 32
  %call.i75 = tail call ptr @xdr_inline_decode(ptr noundef %31, i32 noundef 16) #16
  %tobool.not.i76 = icmp eq ptr %call.i75, null
  br i1 %tobool.not.i76, label %if.end27.cleanup_crit_edge, label %if.end30

if.end27.cleanup_crit_edge:                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end30:                                         ; preds = %if.end27
  %lg_sid = getelementptr inbounds %struct.nfsd4_layoutget, ptr %lgp, i32 0, i32 4
  %incdec.ptr.i = getelementptr i32, ptr %call.i75, i32 1
  %32 = ptrtoint ptr %call.i75 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %call.i75, align 4
  %34 = ptrtoint ptr %lg_sid to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %lg_sid, align 4
  %si_opaque.i = getelementptr inbounds %struct.nfsd4_layoutget, ptr %lgp, i32 0, i32 4, i32 1
  %35 = call ptr @memcpy(ptr %si_opaque.i, ptr %incdec.ptr.i, i32 12)
  %36 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %argp, align 32
  %call.i79 = tail call ptr @xdr_inline_decode(ptr noundef %37, i32 noundef 4) #16
  %tobool.not.i80 = icmp eq ptr %call.i79, null
  br i1 %tobool.not.i80, label %if.end30.cleanup_crit_edge, label %xdr_stream_decode_u32.exit83, !prof !108

if.end30.cleanup_crit_edge:                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

xdr_stream_decode_u32.exit83:                     ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #18
  %lg_maxcount = getelementptr inbounds %struct.nfsd4_layoutget, ptr %lgp, i32 0, i32 3
  %38 = ptrtoint ptr %call.i79 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %call.i79, align 4
  %40 = ptrtoint ptr %lg_maxcount to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %lg_maxcount, align 4
  br label %cleanup

cleanup:                                          ; preds = %xdr_stream_decode_u32.exit83, %if.end30.cleanup_crit_edge, %if.end27.cleanup_crit_edge, %if.end22.cleanup_crit_edge, %if.end16.cleanup_crit_edge, %if.end10.cleanup_crit_edge, %if.end5.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %if.end27.cleanup_crit_edge ], [ 0, %xdr_stream_decode_u32.exit83 ], [ 10036, %if.end30.cleanup_crit_edge ], [ 10036, %entry.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ], [ 10036, %if.end5.cleanup_crit_edge ], [ 10036, %if.end10.cleanup_crit_edge ], [ 10036, %if.end16.cleanup_crit_edge ], [ 10036, %if.end22.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_layoutreturn(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %lrp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.return_crit_edge, label %if.end, !prof !108

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %entry
  %lr_reclaim = getelementptr inbounds %struct.nfsd4_layoutreturn, ptr %lrp, i32 0, i32 3
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.i = icmp ne i32 %3, 0
  %conv.i = zext i1 %cmp.i to i32
  %4 = ptrtoint ptr %lr_reclaim to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %conv.i, ptr %lr_reclaim, align 4
  %5 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %argp, align 32
  %call.i18 = tail call ptr @xdr_inline_decode(ptr noundef %6, i32 noundef 4) #16
  %tobool.not.i19 = icmp eq ptr %call.i18, null
  br i1 %tobool.not.i19, label %if.end.return_crit_edge, label %if.end5, !prof !108

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end5:                                          ; preds = %if.end
  %lr_layout_type = getelementptr inbounds %struct.nfsd4_layoutreturn, ptr %lrp, i32 0, i32 1
  %7 = ptrtoint ptr %call.i18 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %call.i18, align 4
  %9 = ptrtoint ptr %lr_layout_type to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %lr_layout_type, align 4
  %10 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %argp, align 32
  %call.i22 = tail call ptr @xdr_inline_decode(ptr noundef %11, i32 noundef 4) #16
  %tobool.not.i23 = icmp eq ptr %call.i22, null
  br i1 %tobool.not.i23, label %if.end5.return_crit_edge, label %if.end10, !prof !108

if.end5.return_crit_edge:                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end10:                                         ; preds = %if.end5
  %lr_seg = getelementptr inbounds %struct.nfsd4_layoutreturn, ptr %lrp, i32 0, i32 2
  %12 = ptrtoint ptr %call.i22 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %call.i22, align 4
  %14 = ptrtoint ptr %lr_seg to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %lr_seg, align 4
  %15 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %argp, align 32
  %call.i.i = tail call ptr @xdr_inline_decode(ptr noundef %16, i32 noundef 4) #16
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.end10.return_crit_edge, label %if.end.i27, !prof !108

if.end10.return_crit_edge:                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end.i27:                                       ; preds = %if.end10
  %17 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %call.i.i, align 4
  %19 = ptrtoint ptr %lrp to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %lrp, align 4
  %20 = zext i32 %18 to i64
  call void @__sanitizer_cov_trace_switch(i64 %20, ptr @__sancov_gen_cov_switch_values.48)
  switch i32 %18, label %if.end.i27.return_crit_edge [
    i32 1, label %sw.bb.i
    i32 2, label %if.end.i27.sw.bb32.i_crit_edge
    i32 3, label %if.end.i27.sw.bb32.i_crit_edge35
  ]

if.end.i27.sw.bb32.i_crit_edge35:                 ; preds = %if.end.i27
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb32.i

if.end.i27.sw.bb32.i_crit_edge:                   ; preds = %if.end.i27
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb32.i

if.end.i27.return_crit_edge:                      ; preds = %if.end.i27
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

sw.bb.i:                                          ; preds = %if.end.i27
  %21 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %argp, align 32
  %call.i54.i = tail call ptr @xdr_inline_decode(ptr noundef %22, i32 noundef 8) #16
  %tobool.not.i55.i = icmp eq ptr %call.i54.i, null
  br i1 %tobool.not.i55.i, label %sw.bb.i.return_crit_edge, label %if.end6.i, !prof !108

sw.bb.i.return_crit_edge:                         ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end6.i:                                        ; preds = %sw.bb.i
  %offset.i = getelementptr inbounds %struct.nfsd4_layoutreturn, ptr %lrp, i32 0, i32 2, i32 1
  %23 = ptrtoint ptr %call.i54.i to i32
  call void @__asan_loadN_noabort(i32 %23, i32 8)
  %24 = load i64, ptr %call.i54.i, align 1
  %25 = ptrtoint ptr %offset.i to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 %24, ptr %offset.i, align 8
  %26 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %argp, align 32
  %call.i58.i = tail call ptr @xdr_inline_decode(ptr noundef %27, i32 noundef 8) #16
  %tobool.not.i59.i = icmp eq ptr %call.i58.i, null
  br i1 %tobool.not.i59.i, label %if.end6.i.return_crit_edge, label %if.end12.i, !prof !108

if.end6.i.return_crit_edge:                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end12.i:                                       ; preds = %if.end6.i
  %length.i = getelementptr inbounds %struct.nfsd4_layoutreturn, ptr %lrp, i32 0, i32 2, i32 2
  %28 = ptrtoint ptr %call.i58.i to i32
  call void @__asan_loadN_noabort(i32 %28, i32 8)
  %29 = load i64, ptr %call.i58.i, align 1
  %30 = ptrtoint ptr %length.i to i32
  call void @__asan_store8_noabort(i32 %30)
  store i64 %29, ptr %length.i, align 8
  %31 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %argp, align 32
  %call.i63.i = tail call ptr @xdr_inline_decode(ptr noundef %32, i32 noundef 16) #16
  %tobool.not.i64.i = icmp eq ptr %call.i63.i, null
  br i1 %tobool.not.i64.i, label %if.end12.i.return_crit_edge, label %if.end15.i

if.end12.i.return_crit_edge:                      ; preds = %if.end12.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end15.i:                                       ; preds = %if.end12.i
  %lr_sid.i = getelementptr inbounds %struct.nfsd4_layoutreturn, ptr %lrp, i32 0, i32 6
  %incdec.ptr.i.i = getelementptr i32, ptr %call.i63.i, i32 1
  %33 = ptrtoint ptr %call.i63.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %call.i63.i, align 4
  %35 = ptrtoint ptr %lr_sid.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %lr_sid.i, align 4
  %si_opaque.i.i = getelementptr inbounds %struct.nfsd4_layoutreturn, ptr %lrp, i32 0, i32 6, i32 1
  %36 = call ptr @memcpy(ptr %si_opaque.i.i, ptr %incdec.ptr.i.i, i32 12)
  %37 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %argp, align 32
  %call.i67.i = tail call ptr @xdr_inline_decode(ptr noundef %38, i32 noundef 4) #16
  %tobool.not.i68.i = icmp eq ptr %call.i67.i, null
  br i1 %tobool.not.i68.i, label %if.end15.i.return_crit_edge, label %if.end20.i, !prof !108

if.end15.i.return_crit_edge:                      ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end20.i:                                       ; preds = %if.end15.i
  %lrf_body_len.i = getelementptr inbounds %struct.nfsd4_layoutreturn, ptr %lrp, i32 0, i32 4
  %39 = ptrtoint ptr %call.i67.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %call.i67.i, align 4
  %41 = ptrtoint ptr %lrf_body_len.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %lrf_body_len.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %cmp22.not.i = icmp eq i32 %40, 0
  br i1 %cmp22.not.i, label %if.end20.i.sw.epilog.i_crit_edge, label %if.then23.i

if.end20.i.sw.epilog.i_crit_edge:                 ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

if.then23.i:                                      ; preds = %if.end20.i
  %42 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %argp, align 32
  %call26.i = tail call ptr @xdr_inline_decode(ptr noundef %43, i32 noundef %40) #16
  %lrf_body.i = getelementptr inbounds %struct.nfsd4_layoutreturn, ptr %lrp, i32 0, i32 5
  %44 = ptrtoint ptr %lrf_body.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %call26.i, ptr %lrf_body.i, align 8
  %tobool28.not.i = icmp eq ptr %call26.i, null
  br i1 %tobool28.not.i, label %if.then23.i.return_crit_edge, label %if.then23.i.sw.epilog.i_crit_edge

if.then23.i.sw.epilog.i_crit_edge:                ; preds = %if.then23.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

if.then23.i.return_crit_edge:                     ; preds = %if.then23.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

sw.bb32.i:                                        ; preds = %if.end.i27.sw.bb32.i_crit_edge, %if.end.i27.sw.bb32.i_crit_edge35
  %offset34.i = getelementptr inbounds %struct.nfsd4_layoutreturn, ptr %lrp, i32 0, i32 2, i32 1
  %45 = ptrtoint ptr %offset34.i to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 0, ptr %offset34.i, align 8
  %length36.i = getelementptr inbounds %struct.nfsd4_layoutreturn, ptr %lrp, i32 0, i32 2, i32 2
  %46 = ptrtoint ptr %length36.i to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 -1, ptr %length36.i, align 8
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.bb32.i, %if.then23.i.sw.epilog.i_crit_edge, %if.end20.i.sw.epilog.i_crit_edge
  br label %return

return:                                           ; preds = %sw.epilog.i, %if.then23.i.return_crit_edge, %if.end15.i.return_crit_edge, %if.end12.i.return_crit_edge, %if.end6.i.return_crit_edge, %sw.bb.i.return_crit_edge, %if.end.i27.return_crit_edge, %if.end10.return_crit_edge, %if.end5.return_crit_edge, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %sw.epilog.i ], [ 10036, %if.then23.i.return_crit_edge ], [ 10036, %if.end.i27.return_crit_edge ], [ 10036, %if.end12.i.return_crit_edge ], [ 10036, %if.end10.return_crit_edge ], [ 10036, %sw.bb.i.return_crit_edge ], [ 10036, %if.end6.i.return_crit_edge ], [ 10036, %if.end15.i.return_crit_edge ], [ 10036, %entry.return_crit_edge ], [ 10036, %if.end.return_crit_edge ], [ 10036, %if.end5.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_secinfo_no_name(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %sin) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry._crit_edge, label %xdr_stream_decode_u32.exit, !prof !108

entry._crit_edge:                                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %5

xdr_stream_decode_u32.exit:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %sin to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %sin, align 4
  br label %5

5:                                                ; preds = %xdr_stream_decode_u32.exit, %entry._crit_edge
  %6 = phi i32 [ 0, %xdr_stream_decode_u32.exit ], [ 10036, %entry._crit_edge ]
  ret i32 %6
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_sequence(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %seq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = call ptr @memcpy(ptr %seq, ptr %call.i, i32 16)
  %3 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %argp, align 32
  %call1 = tail call ptr @xdr_inline_decode(ptr noundef %4, i32 noundef 16) #16
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr = getelementptr i32, ptr %call1, i32 1
  %5 = ptrtoint ptr %call1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %call1, align 4
  %seqid = getelementptr inbounds %struct.nfsd4_sequence, ptr %seq, i32 0, i32 1
  %7 = ptrtoint ptr %seqid to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %seqid, align 4
  %incdec.ptr6 = getelementptr i32, ptr %call1, i32 2
  %8 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %incdec.ptr, align 4
  %slotid = getelementptr inbounds %struct.nfsd4_sequence, ptr %seq, i32 0, i32 2
  %10 = ptrtoint ptr %slotid to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %slotid, align 4
  %incdec.ptr8 = getelementptr i32, ptr %call1, i32 3
  %11 = ptrtoint ptr %incdec.ptr6 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %incdec.ptr6, align 4
  %maxslots = getelementptr inbounds %struct.nfsd4_sequence, ptr %seq, i32 0, i32 3
  %13 = ptrtoint ptr %maxslots to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %maxslots, align 4
  %14 = ptrtoint ptr %incdec.ptr8 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %incdec.ptr8, align 4
  %cachethis = getelementptr inbounds %struct.nfsd4_sequence, ptr %seq, i32 0, i32 4
  %16 = ptrtoint ptr %cachethis to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %cachethis, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end4 ], [ 10036, %if.end.cleanup_crit_edge ], [ 10036, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_test_stateid(ptr nocapture noundef %argp, ptr noundef %test_stateid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end, !prof !108

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %test_stateid to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %test_stateid, align 4
  %ts_stateid_list = getelementptr inbounds %struct.nfsd4_test_stateid, ptr %test_stateid, i32 0, i32 1
  %5 = ptrtoint ptr %ts_stateid_list to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %ts_stateid_list, ptr %ts_stateid_list, align 4
  %prev.i = getelementptr inbounds %struct.nfsd4_test_stateid, ptr %test_stateid, i32 0, i32 1, i32 1
  %6 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %ts_stateid_list, ptr %prev.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp240.not = icmp eq i32 %3, 0
  br i1 %cmp240.not, label %if.end.cleanup_crit_edge, label %for.body.lr.ph

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body.lr.ph:                                   ; preds = %if.end
  %to_free.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 1
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.041 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %7 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %7, i32 noundef 3264, i32 noundef 32) #19
  %tobool.not.i25 = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not.i25, label %if.then4, label %svcxdr_tmpalloc.exit

svcxdr_tmpalloc.exit:                             ; preds = %for.body
  %8 = ptrtoint ptr %to_free.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %to_free.i, align 4
  %10 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %9, ptr %call7.i.i, align 8
  store ptr %call7.i.i, ptr %to_free.i, align 4
  %ts_id_list = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call7.i.i, i32 6
  %11 = ptrtoint ptr %ts_id_list to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %ts_id_list, ptr %ts_id_list, align 8
  %prev.i28 = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call7.i.i, i32 7
  %12 = ptrtoint ptr %prev.i28 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %ts_id_list, ptr %prev.i28, align 4
  %13 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %ts_id_list, ptr noundef %14, ptr noundef %ts_stateid_list) #16
  br i1 %call.i.i, label %if.end.i.i, label %svcxdr_tmpalloc.exit.list_add_tail.exit_crit_edge

svcxdr_tmpalloc.exit.list_add_tail.exit_crit_edge: ; preds = %svcxdr_tmpalloc.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add_tail.exit

if.then4:                                         ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %call5 = tail call i32 @nfserrno(i32 noundef -12) #16
  br label %cleanup

if.end.i.i:                                       ; preds = %svcxdr_tmpalloc.exit
  call void @__sanitizer_cov_trace_pc() #18
  %15 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %ts_id_list, ptr %prev.i, align 4
  %16 = ptrtoint ptr %ts_id_list to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %ts_stateid_list, ptr %ts_id_list, align 8
  %17 = ptrtoint ptr %prev.i28 to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %14, ptr %prev.i28, align 4
  %18 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %ts_id_list, ptr %14, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %svcxdr_tmpalloc.exit.list_add_tail.exit_crit_edge
  %19 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %argp, align 32
  %call.i30 = tail call ptr @xdr_inline_decode(ptr noundef %20, i32 noundef 16) #16
  %tobool.not.i31 = icmp eq ptr %call.i30, null
  br i1 %tobool.not.i31, label %list_add_tail.exit.cleanup_crit_edge, label %for.inc

list_add_tail.exit.cleanup_crit_edge:             ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.inc:                                          ; preds = %list_add_tail.exit
  %ts_id_stateid = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call7.i.i, i32 2
  %incdec.ptr.i = getelementptr i32, ptr %call.i30, i32 1
  %21 = ptrtoint ptr %call.i30 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %call.i30, align 4
  %23 = ptrtoint ptr %ts_id_stateid to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %ts_id_stateid, align 8
  %si_opaque.i = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call7.i.i, i32 3
  %24 = call ptr @memcpy(ptr %si_opaque.i, ptr %incdec.ptr.i, i32 12)
  %inc = add nuw i32 %i.041, 1
  %25 = ptrtoint ptr %test_stateid to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %test_stateid, align 4
  %cmp2 = icmp ult i32 %inc, %26
  br i1 %cmp2, label %for.inc.for.body_crit_edge, label %for.inc.cleanup_crit_edge

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %list_add_tail.exit.cleanup_crit_edge, %if.then4, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.then4 ], [ 10036, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ], [ 10036, %list_add_tail.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_destroy_clientid(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %dc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 8) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.nfsd4_decode_clientid4.exit_crit_edge, label %if.end.i

entry.nfsd4_decode_clientid4.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_clientid4.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %3 = load i64, ptr %call.i, align 4
  %4 = ptrtoint ptr %dc to i32
  call void @__asan_storeN_noabort(i32 %4, i32 8)
  store i64 %3, ptr %dc, align 4
  br label %nfsd4_decode_clientid4.exit

nfsd4_decode_clientid4.exit:                      ; preds = %if.end.i, %entry.nfsd4_decode_clientid4.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end.i ], [ 10036, %entry.nfsd4_decode_clientid4.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_reclaim_complete(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %rc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry._crit_edge, label %xdr_stream_decode_bool.exit, !prof !108

entry._crit_edge:                                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %5

xdr_stream_decode_bool.exit:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.i = icmp ne i32 %3, 0
  %conv.i = zext i1 %cmp.i to i32
  %4 = ptrtoint ptr %rc to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %conv.i, ptr %rc, align 4
  br label %5

5:                                                ; preds = %xdr_stream_decode_bool.exit, %entry._crit_edge
  %6 = phi i32 [ 0, %xdr_stream_decode_bool.exit ], [ 10036, %entry._crit_edge ]
  ret i32 %6
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_fallocate(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %fallocate) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %fallocate to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %fallocate, align 4
  %si_opaque.i = getelementptr inbounds %struct.stateid_t, ptr %fallocate, i32 0, i32 1
  %5 = call ptr @memcpy(ptr %si_opaque.i, ptr %incdec.ptr.i, i32 12)
  %6 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %argp, align 32
  %call.i14 = tail call ptr @xdr_inline_decode(ptr noundef %7, i32 noundef 8) #16
  %tobool.not.i15 = icmp eq ptr %call.i14, null
  br i1 %tobool.not.i15, label %if.end.cleanup_crit_edge, label %if.end3, !prof !108

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %falloc_offset = getelementptr inbounds %struct.nfsd4_fallocate, ptr %fallocate, i32 0, i32 1
  %8 = ptrtoint ptr %call.i14 to i32
  call void @__asan_loadN_noabort(i32 %8, i32 8)
  %9 = load i64, ptr %call.i14, align 1
  %10 = ptrtoint ptr %falloc_offset to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %9, ptr %falloc_offset, align 8
  %11 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %argp, align 32
  %call.i18 = tail call ptr @xdr_inline_decode(ptr noundef %12, i32 noundef 8) #16
  %tobool.not.i19 = icmp eq ptr %call.i18, null
  br i1 %tobool.not.i19, label %if.end3.cleanup_crit_edge, label %xdr_stream_decode_u64.exit22, !prof !108

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

xdr_stream_decode_u64.exit22:                     ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  %falloc_length = getelementptr inbounds %struct.nfsd4_fallocate, ptr %fallocate, i32 0, i32 2
  %13 = ptrtoint ptr %call.i18 to i32
  call void @__asan_loadN_noabort(i32 %13, i32 8)
  %14 = load i64, ptr %call.i18, align 1
  %15 = ptrtoint ptr %falloc_length to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %14, ptr %falloc_length, align 8
  br label %cleanup

cleanup:                                          ; preds = %xdr_stream_decode_u64.exit22, %if.end3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %entry.cleanup_crit_edge ], [ 0, %xdr_stream_decode_u64.exit22 ], [ 10036, %if.end3.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_copy(ptr nocapture noundef readonly %argp, ptr nocapture noundef %copy) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %copy to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %copy, align 4
  %si_opaque.i = getelementptr inbounds %struct.stateid_t, ptr %copy, i32 0, i32 1
  %5 = call ptr @memcpy(ptr %si_opaque.i, ptr %incdec.ptr.i, i32 12)
  %6 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %argp, align 32
  %call.i83 = tail call ptr @xdr_inline_decode(ptr noundef %7, i32 noundef 16) #16
  %tobool.not.i84 = icmp eq ptr %call.i83, null
  br i1 %tobool.not.i84, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %cp_dst_stateid = getelementptr inbounds %struct.nfsd4_copy, ptr %copy, i32 0, i32 1
  %incdec.ptr.i85 = getelementptr i32, ptr %call.i83, i32 1
  %8 = ptrtoint ptr %call.i83 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %call.i83, align 4
  %10 = ptrtoint ptr %cp_dst_stateid to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %cp_dst_stateid, align 4
  %si_opaque.i86 = getelementptr inbounds %struct.nfsd4_copy, ptr %copy, i32 0, i32 1, i32 1
  %11 = call ptr @memcpy(ptr %si_opaque.i86, ptr %incdec.ptr.i85, i32 12)
  %12 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %argp, align 32
  %call.i90 = tail call ptr @xdr_inline_decode(ptr noundef %13, i32 noundef 8) #16
  %tobool.not.i91 = icmp eq ptr %call.i90, null
  br i1 %tobool.not.i91, label %if.end4.cleanup_crit_edge, label %if.end7, !prof !108

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end7:                                          ; preds = %if.end4
  %cp_src_pos = getelementptr inbounds %struct.nfsd4_copy, ptr %copy, i32 0, i32 2
  %14 = ptrtoint ptr %call.i90 to i32
  call void @__asan_loadN_noabort(i32 %14, i32 8)
  %15 = load i64, ptr %call.i90, align 1
  %16 = ptrtoint ptr %cp_src_pos to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %15, ptr %cp_src_pos, align 8
  %17 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %argp, align 32
  %call.i94 = tail call ptr @xdr_inline_decode(ptr noundef %18, i32 noundef 8) #16
  %tobool.not.i95 = icmp eq ptr %call.i94, null
  br i1 %tobool.not.i95, label %if.end7.cleanup_crit_edge, label %if.end12, !prof !108

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end12:                                         ; preds = %if.end7
  %cp_dst_pos = getelementptr inbounds %struct.nfsd4_copy, ptr %copy, i32 0, i32 3
  %19 = ptrtoint ptr %call.i94 to i32
  call void @__asan_loadN_noabort(i32 %19, i32 8)
  %20 = load i64, ptr %call.i94, align 1
  %21 = ptrtoint ptr %cp_dst_pos to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %cp_dst_pos, align 8
  %22 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %argp, align 32
  %call.i99 = tail call ptr @xdr_inline_decode(ptr noundef %23, i32 noundef 8) #16
  %tobool.not.i100 = icmp eq ptr %call.i99, null
  br i1 %tobool.not.i100, label %if.end12.cleanup_crit_edge, label %if.end17, !prof !108

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end17:                                         ; preds = %if.end12
  %cp_count = getelementptr inbounds %struct.nfsd4_copy, ptr %copy, i32 0, i32 4
  %24 = ptrtoint ptr %call.i99 to i32
  call void @__asan_loadN_noabort(i32 %24, i32 8)
  %25 = load i64, ptr %call.i99, align 1
  %26 = ptrtoint ptr %cp_count to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 %25, ptr %cp_count, align 8
  %27 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %argp, align 32
  %call.i104 = tail call ptr @xdr_inline_decode(ptr noundef %28, i32 noundef 4) #16
  %tobool.not.i105 = icmp eq ptr %call.i104, null
  br i1 %tobool.not.i105, label %if.end17.cleanup_crit_edge, label %if.end22, !prof !108

if.end17.cleanup_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end22:                                         ; preds = %if.end17
  %29 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %argp, align 32
  %call.i108 = tail call ptr @xdr_inline_decode(ptr noundef %30, i32 noundef 4) #16
  %tobool.not.i109 = icmp eq ptr %call.i108, null
  br i1 %tobool.not.i109, label %if.end22.cleanup_crit_edge, label %if.end27, !prof !108

if.end22.cleanup_crit_edge:                       ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end27:                                         ; preds = %if.end22
  %cp_synchronous = getelementptr inbounds %struct.nfsd4_copy, ptr %copy, i32 0, i32 7
  %31 = ptrtoint ptr %call.i108 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %call.i108, align 4
  %33 = ptrtoint ptr %cp_synchronous to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %cp_synchronous, align 4
  %34 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %argp, align 32
  %call.i113 = tail call ptr @xdr_inline_decode(ptr noundef %35, i32 noundef 4) #16
  %tobool.not.i114 = icmp eq ptr %call.i113, null
  br i1 %tobool.not.i114, label %if.end27.cleanup_crit_edge, label %if.end32, !prof !108

if.end27.cleanup_crit_edge:                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end32:                                         ; preds = %if.end27
  %36 = ptrtoint ptr %call.i113 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %call.i113, align 4
  %cp_intra = getelementptr inbounds %struct.nfsd4_copy, ptr %copy, i32 0, i32 6
  %38 = ptrtoint ptr %cp_intra to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 0, ptr %cp_intra, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %cmp33 = icmp eq i32 %37, 0
  br i1 %cmp33, label %if.then34, label %if.end36

if.then34:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #18
  %39 = ptrtoint ptr %cp_intra to i32
  call void @__asan_store1_noabort(i32 %39)
  store i8 1, ptr %cp_intra, align 4
  br label %cleanup

if.end36:                                         ; preds = %if.end32
  %cp_src = getelementptr inbounds %struct.nfsd4_copy, ptr %copy, i32 0, i32 5
  %call37 = tail call fastcc i32 @nfsd4_decode_nl4_server(ptr noundef %argp, ptr noundef %cp_src)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call37)
  %tobool38.not = icmp eq i32 %call37, 0
  br i1 %tobool38.not, label %if.end40, label %if.end36.cleanup_crit_edge

if.end36.cleanup_crit_edge:                       ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end40:                                         ; preds = %if.end36
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11) to i32))
  %40 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 11), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %40, i32 noundef 3264, i32 noundef 1036) #19
  %cmp42 = icmp eq ptr %call7.i, null
  br i1 %cmp42, label %if.then43, label %for.cond.preheader

for.cond.preheader:                               ; preds = %if.end40
  %sub = add i32 %37, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp46136.not = icmp eq i32 %sub, 0
  br i1 %cmp46136.not, label %for.cond.preheader.for.end_crit_edge, label %for.cond.preheader.for.body_crit_edge

for.cond.preheader.for.body_crit_edge:            ; preds = %for.cond.preheader
  br label %for.body

for.cond.preheader.for.end_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

if.then43:                                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #18
  %call44 = tail call i32 @nfserrno(i32 noundef -12) #16
  br label %cleanup

for.cond:                                         ; preds = %for.body
  %inc = add nuw i32 %i.0137, 1
  %exitcond.not = icmp eq i32 %inc, %sub
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %for.cond.preheader.for.body_crit_edge
  %i.0137 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %for.cond.preheader.for.body_crit_edge ]
  %call47 = tail call fastcc i32 @nfsd4_decode_nl4_server(ptr noundef %argp, ptr noundef nonnull %call7.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call47)
  %tobool48.not = icmp eq i32 %call47, 0
  br i1 %tobool48.not, label %for.cond, label %if.then49

if.then49:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @kfree(ptr noundef nonnull %call7.i) #16
  br label %cleanup

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %for.cond.preheader.for.end_crit_edge
  tail call void @kfree(ptr noundef nonnull %call7.i) #16
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then49, %if.then43, %if.end36.cleanup_crit_edge, %if.then34, %if.end27.cleanup_crit_edge, %if.end22.cleanup_crit_edge, %if.end17.cleanup_crit_edge, %if.end12.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.then34 ], [ %call44, %if.then43 ], [ %call47, %if.then49 ], [ 0, %for.end ], [ %call37, %if.end36.cleanup_crit_edge ], [ 10036, %entry.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ], [ 10036, %if.end4.cleanup_crit_edge ], [ 10036, %if.end7.cleanup_crit_edge ], [ 10036, %if.end12.cleanup_crit_edge ], [ 10036, %if.end17.cleanup_crit_edge ], [ 10036, %if.end22.cleanup_crit_edge ], [ 10036, %if.end27.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_copy_notify(ptr nocapture noundef readonly %argp, ptr nocapture noundef %cn) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %cn to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %cn, align 4
  %si_opaque.i = getelementptr inbounds %struct.stateid_t, ptr %cn, i32 0, i32 1
  %5 = call ptr @memcpy(ptr %si_opaque.i, ptr %incdec.ptr.i, i32 12)
  %cpn_dst = getelementptr inbounds %struct.nfsd4_copy_notify, ptr %cn, i32 0, i32 1
  %call1 = tail call fastcc i32 @nfsd4_decode_nl4_server(ptr noundef %argp, ptr noundef %cpn_dst)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ 10036, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_offload_status(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %os) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.nfsd4_decode_stateid4.exit_crit_edge, label %if.end.i

entry.nfsd4_decode_stateid4.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_stateid4.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %os to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %os, align 4
  %si_opaque.i = getelementptr inbounds %struct.stateid_t, ptr %os, i32 0, i32 1
  %5 = call ptr @memcpy(ptr %si_opaque.i, ptr %incdec.ptr.i, i32 12)
  br label %nfsd4_decode_stateid4.exit

nfsd4_decode_stateid4.exit:                       ; preds = %if.end.i, %entry.nfsd4_decode_stateid4.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %if.end.i ], [ 10036, %entry.nfsd4_decode_stateid4.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_seek(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %seek) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %seek to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %seek, align 4
  %si_opaque.i = getelementptr inbounds %struct.stateid_t, ptr %seek, i32 0, i32 1
  %5 = call ptr @memcpy(ptr %si_opaque.i, ptr %incdec.ptr.i, i32 12)
  %6 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %argp, align 32
  %call.i14 = tail call ptr @xdr_inline_decode(ptr noundef %7, i32 noundef 8) #16
  %tobool.not.i15 = icmp eq ptr %call.i14, null
  br i1 %tobool.not.i15, label %if.end.cleanup_crit_edge, label %if.end3, !prof !108

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %seek_offset = getelementptr inbounds %struct.nfsd4_seek, ptr %seek, i32 0, i32 1
  %8 = ptrtoint ptr %call.i14 to i32
  call void @__asan_loadN_noabort(i32 %8, i32 8)
  %9 = load i64, ptr %call.i14, align 1
  %10 = ptrtoint ptr %seek_offset to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %9, ptr %seek_offset, align 8
  %11 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %argp, align 32
  %call.i18 = tail call ptr @xdr_inline_decode(ptr noundef %12, i32 noundef 4) #16
  %tobool.not.i19 = icmp eq ptr %call.i18, null
  br i1 %tobool.not.i19, label %if.end3.cleanup_crit_edge, label %xdr_stream_decode_u32.exit, !prof !108

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

xdr_stream_decode_u32.exit:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  %seek_whence = getelementptr inbounds %struct.nfsd4_seek, ptr %seek, i32 0, i32 2
  %13 = ptrtoint ptr %call.i18 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %call.i18, align 4
  %15 = ptrtoint ptr %seek_whence to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %seek_whence, align 4
  br label %cleanup

cleanup:                                          ; preds = %xdr_stream_decode_u32.exit, %if.end3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %entry.cleanup_crit_edge ], [ 0, %xdr_stream_decode_u32.exit ], [ 10036, %if.end3.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_clone(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %clone) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 16) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %incdec.ptr.i = getelementptr i32, ptr %call.i, i32 1
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %clone to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %clone, align 4
  %si_opaque.i = getelementptr inbounds %struct.stateid_t, ptr %clone, i32 0, i32 1
  %5 = call ptr @memcpy(ptr %si_opaque.i, ptr %incdec.ptr.i, i32 12)
  %6 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %argp, align 32
  %call.i29 = tail call ptr @xdr_inline_decode(ptr noundef %7, i32 noundef 16) #16
  %tobool.not.i30 = icmp eq ptr %call.i29, null
  br i1 %tobool.not.i30, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %cl_dst_stateid = getelementptr inbounds %struct.nfsd4_clone, ptr %clone, i32 0, i32 1
  %incdec.ptr.i31 = getelementptr i32, ptr %call.i29, i32 1
  %8 = ptrtoint ptr %call.i29 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %call.i29, align 4
  %10 = ptrtoint ptr %cl_dst_stateid to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %cl_dst_stateid, align 4
  %si_opaque.i32 = getelementptr inbounds %struct.nfsd4_clone, ptr %clone, i32 0, i32 1, i32 1
  %11 = call ptr @memcpy(ptr %si_opaque.i32, ptr %incdec.ptr.i31, i32 12)
  %12 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %argp, align 32
  %call.i36 = tail call ptr @xdr_inline_decode(ptr noundef %13, i32 noundef 8) #16
  %tobool.not.i37 = icmp eq ptr %call.i36, null
  br i1 %tobool.not.i37, label %if.end4.cleanup_crit_edge, label %if.end7, !prof !108

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end7:                                          ; preds = %if.end4
  %cl_src_pos = getelementptr inbounds %struct.nfsd4_clone, ptr %clone, i32 0, i32 2
  %14 = ptrtoint ptr %call.i36 to i32
  call void @__asan_loadN_noabort(i32 %14, i32 8)
  %15 = load i64, ptr %call.i36, align 1
  %16 = ptrtoint ptr %cl_src_pos to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %15, ptr %cl_src_pos, align 8
  %17 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %argp, align 32
  %call.i40 = tail call ptr @xdr_inline_decode(ptr noundef %18, i32 noundef 8) #16
  %tobool.not.i41 = icmp eq ptr %call.i40, null
  br i1 %tobool.not.i41, label %if.end7.cleanup_crit_edge, label %if.end12, !prof !108

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end12:                                         ; preds = %if.end7
  %cl_dst_pos = getelementptr inbounds %struct.nfsd4_clone, ptr %clone, i32 0, i32 3
  %19 = ptrtoint ptr %call.i40 to i32
  call void @__asan_loadN_noabort(i32 %19, i32 8)
  %20 = load i64, ptr %call.i40, align 1
  %21 = ptrtoint ptr %cl_dst_pos to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %cl_dst_pos, align 8
  %22 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %argp, align 32
  %call.i45 = tail call ptr @xdr_inline_decode(ptr noundef %23, i32 noundef 8) #16
  %tobool.not.i46 = icmp eq ptr %call.i45, null
  br i1 %tobool.not.i46, label %if.end12.cleanup_crit_edge, label %xdr_stream_decode_u64.exit49, !prof !108

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

xdr_stream_decode_u64.exit49:                     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #18
  %cl_count = getelementptr inbounds %struct.nfsd4_clone, ptr %clone, i32 0, i32 4
  %24 = ptrtoint ptr %call.i45 to i32
  call void @__asan_loadN_noabort(i32 %24, i32 8)
  %25 = load i64, ptr %call.i45, align 1
  %26 = ptrtoint ptr %cl_count to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 %25, ptr %cl_count, align 8
  br label %cleanup

cleanup:                                          ; preds = %xdr_stream_decode_u64.exit49, %if.end12.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %entry.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ], [ 0, %xdr_stream_decode_u64.exit49 ], [ 10036, %if.end12.cleanup_crit_edge ], [ 10036, %if.end4.cleanup_crit_edge ], [ 10036, %if.end7.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_getxattr(ptr nocapture noundef %argp, ptr nocapture noundef writeonly %getxattr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %entry.cleanup_crit_edge, label %if.end.i, !prof !108

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %2 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 250, i32 %3)
  %cmp1.i = icmp ugt i32 %3, 250
  br i1 %cmp1.i, label %if.end.i.cleanup_crit_edge, label %if.end3.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp4.i = icmp eq i32 %3, 0
  br i1 %cmp4.i, label %if.end3.i.cleanup_crit_edge, label %if.end6.i

if.end3.i.cleanup_crit_edge:                      ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end6.i:                                        ; preds = %if.end3.i
  %4 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %argp, align 32
  %call8.i = tail call ptr @xdr_inline_decode(ptr noundef %5, i32 noundef %3) #16
  %tobool.not.i = icmp eq ptr %call8.i, null
  br i1 %tobool.not.i, label %if.end6.i.cleanup_crit_edge, label %if.end8.i.i.i

if.end6.i.cleanup_crit_edge:                      ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8.i.i.i:                                    ; preds = %if.end6.i
  %add.i.i = add nuw nsw i32 %3, 10
  %call9.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i.i, i32 noundef 3264) #20
  %tobool.not.i35.i = icmp eq ptr %call9.i.i.i, null
  br i1 %tobool.not.i35.i, label %if.end8.i.i.i.cleanup_crit_edge, label %while.body.preheader.i

if.end8.i.i.i.cleanup_crit_edge:                  ; preds = %if.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

while.body.preheader.i:                           ; preds = %if.end8.i.i.i
  %to_free.i.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 1
  %6 = ptrtoint ptr %to_free.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %to_free.i.i, align 4
  %8 = ptrtoint ptr %call9.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %7, ptr %call9.i.i.i, align 128
  store ptr %call9.i.i.i, ptr %to_free.i.i, align 4
  %buf.i.i = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call9.i.i.i, i32 0, i32 1
  %9 = call ptr @memcpy(ptr %buf.i.i, ptr @.str.1, i32 5)
  %add.ptr.i = getelementptr i8, ptr %buf.i.i, i32 5
  br label %while.body.i

while.body.i:                                     ; preds = %if.end20.i.while.body.i_crit_edge, %while.body.preheader.i
  %dec50.in.i = phi i32 [ %dec50.i, %if.end20.i.while.body.i_crit_edge ], [ %3, %while.body.preheader.i ]
  %dp.049.i = phi ptr [ %incdec.ptr21.i, %if.end20.i.while.body.i_crit_edge ], [ %add.ptr.i, %while.body.preheader.i ]
  %sp.048.i = phi ptr [ %incdec.ptr.i, %if.end20.i.while.body.i_crit_edge ], [ %call8.i, %while.body.preheader.i ]
  %10 = ptrtoint ptr %sp.048.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %sp.048.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %cmp17.i = icmp eq i8 %11, 0
  br i1 %cmp17.i, label %while.body.i.cleanup_crit_edge, label %if.end20.i

while.body.i.cleanup_crit_edge:                   ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end20.i:                                       ; preds = %while.body.i
  %dec50.i = add i32 %dec50.in.i, -1
  %incdec.ptr.i = getelementptr i8, ptr %sp.048.i, i32 1
  %incdec.ptr21.i = getelementptr i8, ptr %dp.049.i, i32 1
  %12 = ptrtoint ptr %dp.049.i to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %11, ptr %dp.049.i, align 1
  %cmp16.not.i = icmp eq i32 %dec50.i, 0
  br i1 %cmp16.not.i, label %if.end, label %if.end20.i.while.body.i_crit_edge

if.end20.i.while.body.i_crit_edge:                ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body.i

if.end:                                           ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #18
  %13 = ptrtoint ptr %incdec.ptr21.i to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 0, ptr %incdec.ptr21.i, align 1
  %14 = ptrtoint ptr %getxattr to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %buf.i.i, ptr %getxattr, align 4
  %rqstp = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 2
  %15 = ptrtoint ptr %rqstp to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %rqstp, align 8
  %call1 = tail call i32 @svc_max_payload(ptr noundef %16) #16
  %17 = tail call i32 @llvm.umin.i32(i32 %call1, i32 65536)
  %getxa_len = getelementptr inbounds %struct.nfsd4_getxattr, ptr %getxattr, i32 0, i32 1
  %18 = ptrtoint ptr %getxa_len to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %getxa_len, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %while.body.i.cleanup_crit_edge, %if.end8.i.i.i.cleanup_crit_edge, %if.end6.i.cleanup_crit_edge, %if.end3.i.cleanup_crit_edge, %if.end.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0.i12 = phi i32 [ 0, %if.end ], [ 10008, %if.end8.i.i.i.cleanup_crit_edge ], [ 10036, %entry.cleanup_crit_edge ], [ 10036, %if.end6.i.cleanup_crit_edge ], [ 10036, %if.end3.i.cleanup_crit_edge ], [ 63, %if.end.i.cleanup_crit_edge ], [ 10036, %while.body.i.cleanup_crit_edge ]
  ret i32 %retval.0.i12
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_setxattr(ptr nocapture noundef %argp, ptr nocapture noundef writeonly %setxattr) #0 align 64 {
entry:
  %payload = alloca %struct.xdr_buf, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup25_crit_edge, label %if.end, !prof !108

entry.cleanup25_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup25

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %3)
  %cmp1 = icmp ugt i32 %3, 2
  br i1 %cmp1, label %if.end.cleanup25_crit_edge, label %if.end3

if.end.cleanup25_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup25

if.end3:                                          ; preds = %if.end
  %4 = ptrtoint ptr %setxattr to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %setxattr, align 8
  %setxa_name = getelementptr inbounds %struct.nfsd4_setxattr, ptr %setxattr, i32 0, i32 1
  %5 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %argp, align 32
  %call.i.i = tail call ptr @xdr_inline_decode(ptr noundef %6, i32 noundef 4) #16
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.end3.cleanup25_crit_edge, label %if.end.i43, !prof !108

if.end3.cleanup25_crit_edge:                      ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup25

if.end.i43:                                       ; preds = %if.end3
  %7 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %call.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 250, i32 %8)
  %cmp1.i = icmp ugt i32 %8, 250
  br i1 %cmp1.i, label %if.end.i43.cleanup25_crit_edge, label %if.end3.i

if.end.i43.cleanup25_crit_edge:                   ; preds = %if.end.i43
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup25

if.end3.i:                                        ; preds = %if.end.i43
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp4.i = icmp eq i32 %8, 0
  br i1 %cmp4.i, label %if.end3.i.cleanup25_crit_edge, label %if.end6.i

if.end3.i.cleanup25_crit_edge:                    ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup25

if.end6.i:                                        ; preds = %if.end3.i
  %9 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %argp, align 32
  %call8.i = tail call ptr @xdr_inline_decode(ptr noundef %10, i32 noundef %8) #16
  %tobool.not.i44 = icmp eq ptr %call8.i, null
  br i1 %tobool.not.i44, label %if.end6.i.cleanup25_crit_edge, label %if.end8.i.i.i

if.end6.i.cleanup25_crit_edge:                    ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup25

if.end8.i.i.i:                                    ; preds = %if.end6.i
  %add.i.i = add nuw nsw i32 %8, 10
  %call9.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i.i, i32 noundef 3264) #20
  %tobool.not.i35.i = icmp eq ptr %call9.i.i.i, null
  br i1 %tobool.not.i35.i, label %if.end8.i.i.i.cleanup25_crit_edge, label %while.body.preheader.i

if.end8.i.i.i.cleanup25_crit_edge:                ; preds = %if.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup25

while.body.preheader.i:                           ; preds = %if.end8.i.i.i
  %to_free.i.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 1
  %11 = ptrtoint ptr %to_free.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %to_free.i.i, align 4
  %13 = ptrtoint ptr %call9.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %12, ptr %call9.i.i.i, align 128
  store ptr %call9.i.i.i, ptr %to_free.i.i, align 4
  %buf.i.i = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call9.i.i.i, i32 0, i32 1
  %14 = call ptr @memcpy(ptr %buf.i.i, ptr @.str.1, i32 5)
  %add.ptr.i = getelementptr i8, ptr %buf.i.i, i32 5
  br label %while.body.i

while.body.i:                                     ; preds = %if.end20.i.while.body.i_crit_edge, %while.body.preheader.i
  %dec50.in.i = phi i32 [ %dec50.i, %if.end20.i.while.body.i_crit_edge ], [ %8, %while.body.preheader.i ]
  %dp.049.i = phi ptr [ %incdec.ptr21.i, %if.end20.i.while.body.i_crit_edge ], [ %add.ptr.i, %while.body.preheader.i ]
  %sp.048.i = phi ptr [ %incdec.ptr.i, %if.end20.i.while.body.i_crit_edge ], [ %call8.i, %while.body.preheader.i ]
  %15 = ptrtoint ptr %sp.048.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %sp.048.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %cmp17.i = icmp eq i8 %16, 0
  br i1 %cmp17.i, label %while.body.i.cleanup25_crit_edge, label %if.end20.i

while.body.i.cleanup25_crit_edge:                 ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup25

if.end20.i:                                       ; preds = %while.body.i
  %dec50.i = add i32 %dec50.in.i, -1
  %incdec.ptr.i = getelementptr i8, ptr %sp.048.i, i32 1
  %incdec.ptr21.i = getelementptr i8, ptr %dp.049.i, i32 1
  %17 = ptrtoint ptr %dp.049.i to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %16, ptr %dp.049.i, align 1
  %cmp16.not.i = icmp eq i32 %dec50.i, 0
  br i1 %cmp16.not.i, label %if.end6, label %if.end20.i.while.body.i_crit_edge

if.end20.i.while.body.i_crit_edge:                ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body.i

if.end6:                                          ; preds = %if.end20.i
  %18 = ptrtoint ptr %incdec.ptr21.i to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 0, ptr %incdec.ptr21.i, align 1
  %19 = ptrtoint ptr %setxa_name to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %buf.i.i, ptr %setxa_name, align 4
  %rqstp = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 2
  %20 = ptrtoint ptr %rqstp to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %rqstp, align 8
  %call7 = tail call i32 @svc_max_payload(ptr noundef %21) #16
  %22 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %argp, align 32
  %call.i46 = tail call ptr @xdr_inline_decode(ptr noundef %23, i32 noundef 4) #16
  %tobool.not.i47 = icmp eq ptr %call.i46, null
  br i1 %tobool.not.i47, label %if.end6.cleanup25_crit_edge, label %if.end13, !prof !108

if.end6.cleanup25_crit_edge:                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup25

if.end13:                                         ; preds = %if.end6
  %24 = tail call i32 @llvm.umin.i32(i32 %call7, i32 65536)
  %25 = ptrtoint ptr %call.i46 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %call.i46, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %26, i32 %24)
  %cmp14 = icmp ugt i32 %26, %24
  br i1 %cmp14, label %if.end13.cleanup25_crit_edge, label %if.end16

if.end13.cleanup25_crit_edge:                     ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup25

if.end16:                                         ; preds = %if.end13
  %setxa_len = getelementptr inbounds %struct.nfsd4_setxattr, ptr %setxattr, i32 0, i32 3
  %27 = ptrtoint ptr %setxa_len to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %setxa_len, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %cmp17.not = icmp eq i32 %26, 0
  br i1 %cmp17.not, label %if.end16.cleanup25_crit_edge, label %if.then18

if.end16.cleanup25_crit_edge:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup25

if.then18:                                        ; preds = %if.end16
  call void @llvm.lifetime.start.p0(i64 44, ptr nonnull %payload) #16
  %28 = call ptr @memset(ptr %payload, i32 255, i32 44)
  %29 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %argp, align 32
  %call20 = call zeroext i1 @xdr_stream_subsegment(ptr noundef %30, ptr noundef nonnull %payload, i32 noundef %26) #16
  br i1 %call20, label %if.end22, label %cleanup25.critedge

if.end22:                                         ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #18
  %setxa_buf = getelementptr inbounds %struct.nfsd4_setxattr, ptr %setxattr, i32 0, i32 2
  call fastcc void @nfsd4_vbuf_from_vector(ptr noundef %argp, ptr noundef nonnull %payload, ptr noundef %setxa_buf, i32 noundef %26)
  call void @llvm.lifetime.end.p0(i64 44, ptr nonnull %payload) #16
  br label %cleanup25

cleanup25.critedge:                               ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 44, ptr nonnull %payload) #16
  br label %cleanup25

cleanup25:                                        ; preds = %cleanup25.critedge, %if.end22, %if.end16.cleanup25_crit_edge, %if.end13.cleanup25_crit_edge, %if.end6.cleanup25_crit_edge, %while.body.i.cleanup25_crit_edge, %if.end8.i.i.i.cleanup25_crit_edge, %if.end6.i.cleanup25_crit_edge, %if.end3.i.cleanup25_crit_edge, %if.end.i43.cleanup25_crit_edge, %if.end3.cleanup25_crit_edge, %if.end.cleanup25_crit_edge, %entry.cleanup25_crit_edge
  %retval.1 = phi i32 [ 22, %if.end.cleanup25_crit_edge ], [ 10096, %if.end13.cleanup25_crit_edge ], [ 10036, %cleanup25.critedge ], [ 0, %if.end22 ], [ 0, %if.end16.cleanup25_crit_edge ], [ 10036, %entry.cleanup25_crit_edge ], [ 10008, %if.end8.i.i.i.cleanup25_crit_edge ], [ 10036, %if.end3.cleanup25_crit_edge ], [ 10036, %if.end6.i.cleanup25_crit_edge ], [ 10036, %if.end3.i.cleanup25_crit_edge ], [ 63, %if.end.i43.cleanup25_crit_edge ], [ 10036, %if.end6.cleanup25_crit_edge ], [ 10036, %while.body.i.cleanup25_crit_edge ]
  ret i32 %retval.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_listxattrs(ptr nocapture noundef readonly %argp, ptr nocapture noundef %listxattrs) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 8) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end, !prof !108

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %3 = load i64, ptr %call.i, align 1
  %4 = ptrtoint ptr %listxattrs to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %3, ptr %listxattrs, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 9361, i64 %3)
  %cmp2 = icmp ugt i64 %3, 9361
  br i1 %cmp2, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %5 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %argp, align 32
  %call.i21 = tail call ptr @xdr_inline_decode(ptr noundef %6, i32 noundef 4) #16
  %tobool.not.i22 = icmp eq ptr %call.i21, null
  br i1 %tobool.not.i22, label %if.end4.cleanup_crit_edge, label %if.end9, !prof !108

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end9:                                          ; preds = %if.end4
  %7 = ptrtoint ptr %call.i21 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %call.i21, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %8)
  %cmp10 = icmp ult i32 %8, 8
  br i1 %cmp10, label %if.end9.cleanup_crit_edge, label %if.end12

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end12:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  %rqstp = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 2
  %9 = ptrtoint ptr %rqstp to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %rqstp, align 8
  %call13 = tail call i32 @svc_max_payload(ptr noundef %10) #16
  %11 = tail call i32 @llvm.umin.i32(i32 %8, i32 %call13)
  %lsxa_maxcount = getelementptr inbounds %struct.nfsd4_listxattrs, ptr %listxattrs, i32 0, i32 1
  %12 = ptrtoint ptr %lsxa_maxcount to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %lsxa_maxcount, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end9.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end12 ], [ 10003, %if.end.cleanup_crit_edge ], [ 22, %if.end9.cleanup_crit_edge ], [ 10036, %entry.cleanup_crit_edge ], [ 10036, %if.end4.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @nfsd4_decode_removexattr(ptr nocapture noundef %argp, ptr nocapture noundef writeonly %removexattr) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %entry.nfsd4_decode_xattr_name.exit_crit_edge, label %if.end.i, !prof !108

entry.nfsd4_decode_xattr_name.exit_crit_edge:     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_xattr_name.exit

if.end.i:                                         ; preds = %entry
  %2 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 250, i32 %3)
  %cmp1.i = icmp ugt i32 %3, 250
  br i1 %cmp1.i, label %if.end.i.nfsd4_decode_xattr_name.exit_crit_edge, label %if.end3.i

if.end.i.nfsd4_decode_xattr_name.exit_crit_edge:  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_xattr_name.exit

if.end3.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp4.i = icmp eq i32 %3, 0
  br i1 %cmp4.i, label %if.end3.i.nfsd4_decode_xattr_name.exit_crit_edge, label %if.end6.i

if.end3.i.nfsd4_decode_xattr_name.exit_crit_edge: ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_xattr_name.exit

if.end6.i:                                        ; preds = %if.end3.i
  %4 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %argp, align 32
  %call8.i = tail call ptr @xdr_inline_decode(ptr noundef %5, i32 noundef %3) #16
  %tobool.not.i = icmp eq ptr %call8.i, null
  br i1 %tobool.not.i, label %if.end6.i.nfsd4_decode_xattr_name.exit_crit_edge, label %if.end8.i.i.i

if.end6.i.nfsd4_decode_xattr_name.exit_crit_edge: ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_xattr_name.exit

if.end8.i.i.i:                                    ; preds = %if.end6.i
  %add.i.i = add nuw nsw i32 %3, 10
  %call9.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i.i, i32 noundef 3264) #20
  %tobool.not.i35.i = icmp eq ptr %call9.i.i.i, null
  br i1 %tobool.not.i35.i, label %if.end8.i.i.i.nfsd4_decode_xattr_name.exit_crit_edge, label %while.body.preheader.i

if.end8.i.i.i.nfsd4_decode_xattr_name.exit_crit_edge: ; preds = %if.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_xattr_name.exit

while.body.preheader.i:                           ; preds = %if.end8.i.i.i
  %to_free.i.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 1
  %6 = ptrtoint ptr %to_free.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %to_free.i.i, align 4
  %8 = ptrtoint ptr %call9.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %7, ptr %call9.i.i.i, align 128
  store ptr %call9.i.i.i, ptr %to_free.i.i, align 4
  %buf.i.i = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call9.i.i.i, i32 0, i32 1
  %9 = call ptr @memcpy(ptr %buf.i.i, ptr @.str.1, i32 5)
  %add.ptr.i = getelementptr i8, ptr %buf.i.i, i32 5
  br label %while.body.i

while.body.i:                                     ; preds = %if.end20.i.while.body.i_crit_edge, %while.body.preheader.i
  %dec50.in.i = phi i32 [ %dec50.i, %if.end20.i.while.body.i_crit_edge ], [ %3, %while.body.preheader.i ]
  %dp.049.i = phi ptr [ %incdec.ptr21.i, %if.end20.i.while.body.i_crit_edge ], [ %add.ptr.i, %while.body.preheader.i ]
  %sp.048.i = phi ptr [ %incdec.ptr.i, %if.end20.i.while.body.i_crit_edge ], [ %call8.i, %while.body.preheader.i ]
  %10 = ptrtoint ptr %sp.048.i to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %sp.048.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %11)
  %cmp17.i = icmp eq i8 %11, 0
  br i1 %cmp17.i, label %while.body.i.nfsd4_decode_xattr_name.exit_crit_edge, label %if.end20.i

while.body.i.nfsd4_decode_xattr_name.exit_crit_edge: ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd4_decode_xattr_name.exit

if.end20.i:                                       ; preds = %while.body.i
  %dec50.i = add i32 %dec50.in.i, -1
  %incdec.ptr.i = getelementptr i8, ptr %sp.048.i, i32 1
  %incdec.ptr21.i = getelementptr i8, ptr %dp.049.i, i32 1
  %12 = ptrtoint ptr %dp.049.i to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %11, ptr %dp.049.i, align 1
  %cmp16.not.i = icmp eq i32 %dec50.i, 0
  br i1 %cmp16.not.i, label %while.end.i, label %if.end20.i.while.body.i_crit_edge

if.end20.i.while.body.i_crit_edge:                ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body.i

while.end.i:                                      ; preds = %if.end20.i
  call void @__sanitizer_cov_trace_pc() #18
  %13 = ptrtoint ptr %incdec.ptr21.i to i32
  call void @__asan_store1_noabort(i32 %13)
  store i8 0, ptr %incdec.ptr21.i, align 1
  %14 = ptrtoint ptr %removexattr to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %buf.i.i, ptr %removexattr, align 4
  br label %nfsd4_decode_xattr_name.exit

nfsd4_decode_xattr_name.exit:                     ; preds = %while.end.i, %while.body.i.nfsd4_decode_xattr_name.exit_crit_edge, %if.end8.i.i.i.nfsd4_decode_xattr_name.exit_crit_edge, %if.end6.i.nfsd4_decode_xattr_name.exit_crit_edge, %if.end3.i.nfsd4_decode_xattr_name.exit_crit_edge, %if.end.i.nfsd4_decode_xattr_name.exit_crit_edge, %entry.nfsd4_decode_xattr_name.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %while.end.i ], [ 63, %if.end.i.nfsd4_decode_xattr_name.exit_crit_edge ], [ 10036, %if.end3.i.nfsd4_decode_xattr_name.exit_crit_edge ], [ 10036, %if.end6.i.nfsd4_decode_xattr_name.exit_crit_edge ], [ 10036, %entry.nfsd4_decode_xattr_name.exit_crit_edge ], [ 10008, %if.end8.i.i.i.nfsd4_decode_xattr_name.exit_crit_edge ], [ 10036, %while.body.i.nfsd4_decode_xattr_name.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_decode_component4(ptr nocapture noundef %argp, ptr nocapture noundef writeonly %namp, ptr nocapture noundef %lenp) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end, !prof !108

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %lenp to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %lenp, align 4
  %5 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %argp, align 32
  %call2 = tail call ptr @xdr_inline_decode(ptr noundef %6, i32 noundef %3) #16
  %tobool.not = icmp eq ptr %call2, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %7 = ptrtoint ptr %lenp to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %lenp, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp.i = icmp eq i32 %8, 0
  br i1 %cmp.i, label %if.end4.cleanup_crit_edge, label %if.end.i23

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i23:                                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %8)
  %cmp1.i = icmp sgt i32 %8, 255
  br i1 %cmp1.i, label %if.end.i23.cleanup_crit_edge, label %if.end3.i

if.end.i23.cleanup_crit_edge:                     ; preds = %if.end.i23
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3.i:                                        ; preds = %if.end.i23
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %8)
  %cmp4.i = icmp slt i32 %8, 3
  br i1 %cmp4.i, label %land.lhs.true.i, label %if.end3.i.for.body.i.preheader_crit_edge

if.end3.i.for.body.i.preheader_crit_edge:         ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader

land.lhs.true.i:                                  ; preds = %if.end3.i
  %9 = ptrtoint ptr %call2 to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %call2, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 46, i8 %10)
  %cmp5.i = icmp eq i8 %10, 46
  br i1 %cmp5.i, label %land.lhs.true7.i, label %land.lhs.true.i.if.end15.i_crit_edge

land.lhs.true.i.if.end15.i_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.i

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %8)
  %cmp8.i = icmp eq i32 %8, 1
  br i1 %cmp8.i, label %land.lhs.true7.i.cleanup_crit_edge, label %lor.lhs.false.i

land.lhs.true7.i.cleanup_crit_edge:               ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %land.lhs.true7.i
  %arrayidx10.i = getelementptr i8, ptr %call2, i32 1
  %11 = ptrtoint ptr %arrayidx10.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %arrayidx10.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 46, i8 %12)
  %cmp12.i = icmp eq i8 %12, 46
  br i1 %cmp12.i, label %lor.lhs.false.i.cleanup_crit_edge, label %lor.lhs.false.i.if.end15.i_crit_edge

lor.lhs.false.i.if.end15.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end15.i

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end15.i:                                       ; preds = %lor.lhs.false.i.if.end15.i_crit_edge, %land.lhs.true.i.if.end15.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %cmp1632.i = icmp sgt i32 %8, 0
  br i1 %cmp1632.i, label %if.end15.i.for.body.i.preheader_crit_edge, label %if.end15.i.if.end8_crit_edge

if.end15.i.if.end8_crit_edge:                     ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

if.end15.i.for.body.i.preheader_crit_edge:        ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %if.end15.i.for.body.i.preheader_crit_edge, %if.end3.i.for.body.i.preheader_crit_edge
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %inc.i = add nuw nsw i32 %i.033.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %8
  br i1 %exitcond.not.i, label %for.cond.i.if.end8_crit_edge, label %for.cond.i.for.body.i_crit_edge

for.cond.i.for.body.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

for.cond.i.if.end8_crit_edge:                     ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end8

for.body.i:                                       ; preds = %for.cond.i.for.body.i_crit_edge, %for.body.i.preheader
  %i.033.i = phi i32 [ %inc.i, %for.cond.i.for.body.i_crit_edge ], [ 0, %for.body.i.preheader ]
  %arrayidx18.i = getelementptr i8, ptr %call2, i32 %i.033.i
  %13 = ptrtoint ptr %arrayidx18.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %arrayidx18.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 47, i8 %14)
  %cmp20.i = icmp eq i8 %14, 47
  br i1 %cmp20.i, label %for.body.i.cleanup_crit_edge, label %for.cond.i

for.body.i.cleanup_crit_edge:                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8:                                          ; preds = %for.cond.i.if.end8_crit_edge, %if.end15.i.if.end8_crit_edge
  %15 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %argp, align 32
  %scratch.i = getelementptr inbounds %struct.xdr_stream, ptr %16, i32 0, i32 4
  %17 = ptrtoint ptr %scratch.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %scratch.i, align 4
  %cmp.not.i = icmp eq ptr %18, %call2
  br i1 %cmp.not.i, label %if.end8.i.i.i, label %if.end8.svcxdr_savemem.exit_crit_edge

if.end8.svcxdr_savemem.exit_crit_edge:            ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %svcxdr_savemem.exit

if.end8.i.i.i:                                    ; preds = %if.end8
  %add.i.i = add i32 %8, 4
  %call9.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i.i, i32 noundef 3264) #20
  %tobool.not.i.i = icmp eq ptr %call9.i.i.i, null
  br i1 %tobool.not.i.i, label %if.end8.i.i.i.svcxdr_savemem.exit_crit_edge, label %svcxdr_tmpalloc.exit.i

if.end8.i.i.i.svcxdr_savemem.exit_crit_edge:      ; preds = %if.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %svcxdr_savemem.exit

svcxdr_tmpalloc.exit.i:                           ; preds = %if.end8.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %to_free.i.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 1
  %19 = ptrtoint ptr %to_free.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %to_free.i.i, align 4
  %21 = ptrtoint ptr %call9.i.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %20, ptr %call9.i.i.i, align 128
  store ptr %call9.i.i.i, ptr %to_free.i.i, align 4
  %buf.i.i = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call9.i.i.i, i32 0, i32 1
  %22 = call ptr @memcpy(ptr %buf.i.i, ptr %call2, i32 %8)
  br label %svcxdr_savemem.exit

svcxdr_savemem.exit:                              ; preds = %svcxdr_tmpalloc.exit.i, %if.end8.i.i.i.svcxdr_savemem.exit_crit_edge, %if.end8.svcxdr_savemem.exit_crit_edge
  %retval.0.i26 = phi ptr [ %buf.i.i, %svcxdr_tmpalloc.exit.i ], [ %call2, %if.end8.svcxdr_savemem.exit_crit_edge ], [ null, %if.end8.i.i.i.svcxdr_savemem.exit_crit_edge ]
  %23 = ptrtoint ptr %namp to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %retval.0.i26, ptr %namp, align 4
  %tobool10.not = icmp eq ptr %retval.0.i26, null
  %. = select i1 %tobool10.not, i32 10008, i32 0
  br label %cleanup

cleanup:                                          ; preds = %svcxdr_savemem.exit, %for.body.i.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge, %land.lhs.true7.i.cleanup_crit_edge, %if.end.i23.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %if.end.cleanup_crit_edge ], [ %., %svcxdr_savemem.exit ], [ 10036, %entry.cleanup_crit_edge ], [ 10041, %land.lhs.true7.i.cleanup_crit_edge ], [ 10041, %lor.lhs.false.i.cleanup_crit_edge ], [ 63, %if.end.i23.cleanup_crit_edge ], [ 22, %if.end4.cleanup_crit_edge ], [ 10041, %for.body.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_decode_fattr4(ptr noundef %argp, ptr noundef %bmval, ptr noundef %iattr, ptr nocapture noundef %acl, ptr nocapture noundef writeonly %label, ptr noundef writeonly %umask) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %iattr to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %iattr, align 8
  %1 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %argp, align 32
  %call.i.i.i = tail call ptr @xdr_inline_decode(ptr noundef %2, i32 noundef 4) #16
  %tobool.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i.i, label %entry.cleanup206_crit_edge, label %if.end.i.i, !prof !108

entry.cleanup206_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

if.end.i.i:                                       ; preds = %entry
  %3 = ptrtoint ptr %call.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %call.i.i.i, align 4
  %mul.i.i = shl i32 %4, 2
  %call3.i.i = tail call ptr @xdr_inline_decode(ptr noundef %2, i32 noundef %mul.i.i) #16
  %tobool4.not.i.i = icmp eq ptr %call3.i.i, null
  br i1 %tobool4.not.i.i, label %if.end.i.i.cleanup206_crit_edge, label %if.end14.i.i, !prof !108

if.end.i.i.cleanup206_crit_edge:                  ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

if.end14.i.i:                                     ; preds = %if.end.i.i
  %cmp15.i.i = icmp eq ptr %bmval, null
  br i1 %cmp15.i.i, label %if.end14.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge, label %if.end17.i.i

if.end14.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge: ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit.i

if.end17.i.i:                                     ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %4)
  %cmp18.not.i.i = icmp ugt i32 %4, 3
  br i1 %cmp18.not.i.i, label %if.end17.i.i.for.body.i.preheader.i_crit_edge, label %if.then19.i.i

if.end17.i.i.for.body.i.preheader.i_crit_edge:    ; preds = %if.end17.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader.i

if.then19.i.i:                                    ; preds = %if.end17.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %4)
  %cmp20.i.not.i = icmp eq i32 %4, 3
  br i1 %cmp20.i.not.i, label %if.then19.i.i.for.body.i.preheader.i_crit_edge, label %if.end24.i.i

if.then19.i.i.for.body.i.preheader.i_crit_edge:   ; preds = %if.then19.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader.i

if.end24.i.i:                                     ; preds = %if.then19.i.i
  %add.ptr.i.i = getelementptr i32, ptr %bmval, i32 %4
  %.neg.i = mul nsw i32 %4, -4
  %mul22.i.i = add nsw i32 %.neg.i, 12
  %5 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %mul22.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp25.not47.i.i = icmp eq i32 %4, 0
  br i1 %cmp25.not47.i.i, label %if.end24.i.i.if.end_crit_edge, label %if.end24.i.i.for.body.i.preheader.i_crit_edge

if.end24.i.i.for.body.i.preheader.i_crit_edge:    ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader.i

if.end24.i.i.if.end_crit_edge:                    ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

for.body.i.preheader.i:                           ; preds = %if.end24.i.i.for.body.i.preheader.i_crit_edge, %if.then19.i.i.for.body.i.preheader.i_crit_edge, %if.end17.i.i.for.body.i.preheader.i_crit_edge
  %retval1.0.i7.i = phi i32 [ %4, %if.end24.i.i.for.body.i.preheader.i_crit_edge ], [ 3, %if.then19.i.i.for.body.i.preheader.i_crit_edge ], [ -90, %if.end17.i.i.for.body.i.preheader.i_crit_edge ]
  %array_size.addr.0.i6.i = phi i32 [ %4, %if.end24.i.i.for.body.i.preheader.i_crit_edge ], [ 3, %if.then19.i.i.for.body.i.preheader.i_crit_edge ], [ 3, %if.end17.i.i.for.body.i.preheader.i_crit_edge ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %for.body.i.preheader.i
  %p.050.i.i = phi ptr [ %incdec.ptr.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %call3.i.i, %for.body.i.preheader.i ]
  %array_size.addr.149.i.i = phi i32 [ %dec.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %array_size.addr.0.i6.i, %for.body.i.preheader.i ]
  %array.addr.048.i.i = phi ptr [ %incdec.ptr27.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %bmval, %for.body.i.preheader.i ]
  %6 = ptrtoint ptr %p.050.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %p.050.i.i, align 4
  %8 = ptrtoint ptr %array.addr.048.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %array.addr.048.i.i, align 4
  %incdec.ptr.i.i = getelementptr i32, ptr %p.050.i.i, i32 1
  %incdec.ptr27.i.i = getelementptr i32, ptr %array.addr.048.i.i, i32 1
  %dec.i.i = add i32 %array_size.addr.149.i.i, -1
  %cmp25.not.i.i = icmp eq i32 %dec.i.i, 0
  br i1 %cmp25.not.i.i, label %for.body.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.body.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge: ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit.i

xdr_stream_decode_uint32_array.exit.i:            ; preds = %for.body.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge, %if.end14.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %4, %if.end14.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge ], [ %retval1.0.i7.i, %for.body.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -74, i32 %retval.0.i.i)
  %cmp.i = icmp eq i32 %retval.0.i.i, -74
  br i1 %cmp.i, label %xdr_stream_decode_uint32_array.exit.i.cleanup206_crit_edge, label %xdr_stream_decode_uint32_array.exit.i.if.end_crit_edge

xdr_stream_decode_uint32_array.exit.i.if.end_crit_edge: ; preds = %xdr_stream_decode_uint32_array.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

xdr_stream_decode_uint32_array.exit.i.cleanup206_crit_edge: ; preds = %xdr_stream_decode_uint32_array.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

if.end:                                           ; preds = %xdr_stream_decode_uint32_array.exit.i.if.end_crit_edge, %if.end24.i.i.if.end_crit_edge
  %9 = ptrtoint ptr %bmval to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %bmval, align 4
  %and = and i32 %10, -4113
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %lor.lhs.false, label %if.end.if.then9_crit_edge

if.end.if.then9_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then9

lor.lhs.false:                                    ; preds = %if.end
  %arrayidx2 = getelementptr i32, ptr %bmval, i32 1
  %11 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx2, align 4
  %and3 = and i32 %12, -4259891
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and3)
  %tobool4.not = icmp eq i32 %and3, 0
  br i1 %tobool4.not, label %lor.lhs.false5, label %lor.lhs.false.if.then9_crit_edge

lor.lhs.false.if.then9_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then9

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %arrayidx6 = getelementptr i32, ptr %bmval, i32 2
  %13 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx6, align 4
  %and7 = and i32 %14, -196609
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool8.not = icmp eq i32 %and7, 0
  br i1 %tobool8.not, label %if.end13, label %lor.lhs.false5.if.then9_crit_edge

lor.lhs.false5.if.then9_crit_edge:                ; preds = %lor.lhs.false5
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then9

if.then9:                                         ; preds = %lor.lhs.false5.if.then9_crit_edge, %lor.lhs.false.if.then9_crit_edge, %if.end.if.then9_crit_edge
  %minorversion = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 5
  %15 = ptrtoint ptr %minorversion to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %minorversion, align 4
  %arrayidx.i = getelementptr [3 x [3 x i32]], ptr @nfsd_suppattrs, i32 0, i32 %16
  %17 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx.i, align 4
  %neg.i.i = xor i32 %18, -1
  %and.i.i = and i32 %10, %neg.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %lor.lhs.false.i.i, label %if.then9.cleanup206_crit_edge

if.then9.cleanup206_crit_edge:                    ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

lor.lhs.false.i.i:                                ; preds = %if.then9
  %arrayidx2.i.i = getelementptr i32, ptr %bmval, i32 1
  %19 = ptrtoint ptr %arrayidx2.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %arrayidx2.i.i, align 4
  %arrayidx3.i.i = getelementptr i32, ptr %arrayidx.i, i32 1
  %21 = ptrtoint ptr %arrayidx3.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx3.i.i, align 4
  %neg4.i.i = xor i32 %22, -1
  %and5.i.i = and i32 %20, %neg4.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5.i.i)
  %tobool6.not.i.i = icmp eq i32 %and5.i.i, 0
  br i1 %tobool6.not.i.i, label %nfsd_attrs_supported.exit, label %lor.lhs.false.i.i.cleanup206_crit_edge

lor.lhs.false.i.i.cleanup206_crit_edge:           ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

nfsd_attrs_supported.exit:                        ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx7.i.i = getelementptr i32, ptr %bmval, i32 2
  %23 = ptrtoint ptr %arrayidx7.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %arrayidx7.i.i, align 4
  %arrayidx8.i.i = getelementptr i32, ptr %arrayidx.i, i32 2
  %25 = ptrtoint ptr %arrayidx8.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %arrayidx8.i.i, align 4
  %neg9.i.i = xor i32 %26, -1
  %and10.i.i = and i32 %24, %neg9.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and10.i.i)
  %tobool11.i.i = icmp eq i32 %and10.i.i, 0
  %spec.select = select i1 %tobool11.i.i, i32 22, i32 10032
  br label %cleanup206

if.end13:                                         ; preds = %lor.lhs.false5
  %27 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %28, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end13.cleanup206_crit_edge, label %if.end16, !prof !108

if.end13.cleanup206_crit_edge:                    ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

if.end16:                                         ; preds = %if.end13
  %29 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %call.i, align 4
  %31 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %argp, align 32
  %call18 = tail call i32 @xdr_stream_pos(ptr noundef %32) #16
  %33 = ptrtoint ptr %bmval to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %bmval, align 4
  %and20 = and i32 %34, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and20)
  %tobool21.not = icmp eq i32 %and20, 0
  br i1 %tobool21.not, label %if.end16.if.end29_crit_edge, label %if.then22

if.end16.if.end29_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29

if.then22:                                        ; preds = %if.end16
  %35 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %argp, align 32
  %call.i4 = tail call ptr @xdr_inline_decode(ptr noundef %36, i32 noundef 8) #16
  %tobool.not.i5 = icmp eq ptr %call.i4, null
  br i1 %tobool.not.i5, label %if.then22.cleanup206_crit_edge, label %if.end27, !prof !108

if.then22.cleanup206_crit_edge:                   ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

if.end27:                                         ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #18
  %37 = ptrtoint ptr %call.i4 to i32
  call void @__asan_loadN_noabort(i32 %37, i32 8)
  %38 = load i64, ptr %call.i4, align 1
  %ia_size = getelementptr inbounds %struct.iattr, ptr %iattr, i32 0, i32 4
  %39 = ptrtoint ptr %ia_size to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %38, ptr %ia_size, align 8
  %40 = ptrtoint ptr %iattr to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %iattr, align 8
  %or = or i32 %41, 8
  store i32 %or, ptr %iattr, align 8
  br label %if.end29

if.end29:                                         ; preds = %if.end27, %if.end16.if.end29_crit_edge
  %42 = ptrtoint ptr %bmval to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %bmval, align 4
  %and31 = and i32 %43, 4096
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and31)
  %tobool32.not = icmp eq i32 %and31, 0
  br i1 %tobool32.not, label %if.else, label %if.then33

if.then33:                                        ; preds = %if.end29
  %call34 = tail call fastcc i32 @nfsd4_decode_acl(ptr noundef %argp, ptr noundef %acl)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call34)
  %tobool35.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not, label %if.then33.if.end38_crit_edge, label %if.then33.cleanup206_crit_edge

if.then33.cleanup206_crit_edge:                   ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

if.then33.if.end38_crit_edge:                     ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end38

if.else:                                          ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  %44 = ptrtoint ptr %acl to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr null, ptr %acl, align 4
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.then33.if.end38_crit_edge
  %45 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %arrayidx2, align 4
  %and40 = and i32 %46, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and40)
  %tobool41.not = icmp eq i32 %and40, 0
  br i1 %tobool41.not, label %if.end38.if.end57_crit_edge, label %if.then42

if.end38.if.end57_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end57

if.then42:                                        ; preds = %if.end38
  %47 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %argp, align 32
  %call.i8 = tail call ptr @xdr_inline_decode(ptr noundef %48, i32 noundef 4) #16
  %tobool.not.i9 = icmp eq ptr %call.i8, null
  br i1 %tobool.not.i9, label %if.then42.cleanup206_crit_edge, label %if.end47, !prof !108

if.then42.cleanup206_crit_edge:                   ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

if.end47:                                         ; preds = %if.then42
  call void @__sanitizer_cov_trace_pc() #18
  %49 = ptrtoint ptr %call.i8 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %call.i8, align 4
  %ia_mode = getelementptr inbounds %struct.iattr, ptr %iattr, i32 0, i32 1
  %conv51 = trunc i32 %50 to i16
  %51 = ptrtoint ptr %ia_mode to i32
  call void @__asan_store2_noabort(i32 %51)
  store i16 %conv51, ptr %ia_mode, align 4
  %52 = ptrtoint ptr %iattr to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %iattr, align 8
  %or53 = or i32 %53, 1
  store i32 %or53, ptr %iattr, align 8
  br label %if.end57

if.end57:                                         ; preds = %if.end47, %if.end38.if.end57_crit_edge
  %54 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %arrayidx2, align 4
  %and59 = and i32 %55, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and59)
  %tobool60.not = icmp eq i32 %and59, 0
  br i1 %tobool60.not, label %if.end57.if.end82_crit_edge, label %if.then61

if.end57.if.end82_crit_edge:                      ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end82

if.then61:                                        ; preds = %if.end57
  %56 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %argp, align 32
  %call.i13 = tail call ptr @xdr_inline_decode(ptr noundef %57, i32 noundef 4) #16
  %tobool.not.i14 = icmp eq ptr %call.i13, null
  br i1 %tobool.not.i14, label %if.then61.cleanup206_crit_edge, label %if.end67, !prof !108

if.then61.cleanup206_crit_edge:                   ; preds = %if.then61
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

if.end67:                                         ; preds = %if.then61
  %58 = ptrtoint ptr %call.i13 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %call.i13, align 4
  %60 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %argp, align 32
  %call69 = tail call ptr @xdr_inline_decode(ptr noundef %61, i32 noundef %59) #16
  %tobool70.not = icmp eq ptr %call69, null
  br i1 %tobool70.not, label %if.end67.cleanup206_crit_edge, label %if.end72

if.end67.cleanup206_crit_edge:                    ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

if.end72:                                         ; preds = %if.end67
  %rqstp = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 2
  %62 = ptrtoint ptr %rqstp to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %rqstp, align 8
  %ia_uid = getelementptr inbounds %struct.iattr, ptr %iattr, i32 0, i32 2
  %call73 = tail call i32 @nfsd_map_name_to_uid(ptr noundef %63, ptr noundef nonnull %call69, i32 noundef %59, ptr noundef %ia_uid) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call73)
  %tobool74.not = icmp eq i32 %call73, 0
  br i1 %tobool74.not, label %cleanup79, label %if.end72.cleanup206_crit_edge

if.end72.cleanup206_crit_edge:                    ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

cleanup79:                                        ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #18
  %64 = ptrtoint ptr %iattr to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %iattr, align 8
  %or78 = or i32 %65, 2
  store i32 %or78, ptr %iattr, align 8
  br label %if.end82

if.end82:                                         ; preds = %cleanup79, %if.end57.if.end82_crit_edge
  %66 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %arrayidx2, align 4
  %and84 = and i32 %67, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and84)
  %tobool85.not = icmp eq i32 %and84, 0
  br i1 %tobool85.not, label %if.end82.if.end109_crit_edge, label %if.then86

if.end82.if.end109_crit_edge:                     ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end109

if.then86:                                        ; preds = %if.end82
  %68 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %argp, align 32
  %call.i18 = tail call ptr @xdr_inline_decode(ptr noundef %69, i32 noundef 4) #16
  %tobool.not.i19 = icmp eq ptr %call.i18, null
  br i1 %tobool.not.i19, label %if.then86.cleanup206_crit_edge, label %if.end93, !prof !108

if.then86.cleanup206_crit_edge:                   ; preds = %if.then86
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

if.end93:                                         ; preds = %if.then86
  %70 = ptrtoint ptr %call.i18 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %call.i18, align 4
  %72 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %argp, align 32
  %call95 = tail call ptr @xdr_inline_decode(ptr noundef %73, i32 noundef %71) #16
  %tobool96.not = icmp eq ptr %call95, null
  br i1 %tobool96.not, label %if.end93.cleanup206_crit_edge, label %if.end98

if.end93.cleanup206_crit_edge:                    ; preds = %if.end93
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

if.end98:                                         ; preds = %if.end93
  %rqstp99 = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 2
  %74 = ptrtoint ptr %rqstp99 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %rqstp99, align 8
  %ia_gid = getelementptr inbounds %struct.iattr, ptr %iattr, i32 0, i32 3
  %call100 = tail call i32 @nfsd_map_name_to_gid(ptr noundef %75, ptr noundef nonnull %call95, i32 noundef %71, ptr noundef %ia_gid) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call100)
  %tobool101.not = icmp eq i32 %call100, 0
  br i1 %tobool101.not, label %cleanup106, label %if.end98.cleanup206_crit_edge

if.end98.cleanup206_crit_edge:                    ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

cleanup106:                                       ; preds = %if.end98
  call void @__sanitizer_cov_trace_pc() #18
  %76 = ptrtoint ptr %iattr to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %iattr, align 8
  %or105 = or i32 %77, 4
  store i32 %or105, ptr %iattr, align 8
  br label %if.end109

if.end109:                                        ; preds = %cleanup106, %if.end82.if.end109_crit_edge
  %78 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %arrayidx2, align 4
  %and111 = and i32 %79, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and111)
  %tobool112.not = icmp eq i32 %and111, 0
  br i1 %tobool112.not, label %if.end109.if.end132_crit_edge, label %if.then113

if.end109.if.end132_crit_edge:                    ; preds = %if.end109
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end132

if.then113:                                       ; preds = %if.end109
  %80 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %argp, align 32
  %call.i23 = tail call ptr @xdr_inline_decode(ptr noundef %81, i32 noundef 4) #16
  %tobool.not.i24 = icmp eq ptr %call.i23, null
  br i1 %tobool.not.i24, label %if.then113.cleanup206_crit_edge, label %if.end119, !prof !108

if.then113.cleanup206_crit_edge:                  ; preds = %if.then113
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

if.end119:                                        ; preds = %if.then113
  %82 = ptrtoint ptr %call.i23 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %call.i23, align 4
  %84 = zext i32 %83 to i64
  call void @__sanitizer_cov_trace_switch(i64 %84, ptr @__sancov_gen_cov_switch_values.49)
  switch i32 %83, label %if.end119.cleanup206_crit_edge [
    i32 1, label %sw.bb
    i32 0, label %if.end119.cleanup129_crit_edge
  ]

if.end119.cleanup129_crit_edge:                   ; preds = %if.end119
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup129

if.end119.cleanup206_crit_edge:                   ; preds = %if.end119
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

sw.bb:                                            ; preds = %if.end119
  %ia_atime = getelementptr inbounds %struct.iattr, ptr %iattr, i32 0, i32 5
  %call120 = tail call fastcc i32 @nfsd4_decode_nfstime4(ptr noundef %argp, ptr noundef %ia_atime)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call120)
  %tobool121.not = icmp eq i32 %call120, 0
  br i1 %tobool121.not, label %sw.bb.cleanup129_crit_edge, label %sw.bb.cleanup206_crit_edge

sw.bb.cleanup206_crit_edge:                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

sw.bb.cleanup129_crit_edge:                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup129

cleanup129:                                       ; preds = %sw.bb.cleanup129_crit_edge, %if.end119.cleanup129_crit_edge
  %.sink83 = phi i32 [ 144, %sw.bb.cleanup129_crit_edge ], [ 16, %if.end119.cleanup129_crit_edge ]
  %85 = ptrtoint ptr %iattr to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %iattr, align 8
  %or125 = or i32 %86, %.sink83
  store i32 %or125, ptr %iattr, align 8
  br label %if.end132

if.end132:                                        ; preds = %cleanup129, %if.end109.if.end132_crit_edge
  %87 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load i32, ptr %arrayidx2, align 4
  %and134 = and i32 %88, 4194304
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and134)
  %tobool135.not = icmp eq i32 %and134, 0
  br i1 %tobool135.not, label %if.end132.if.end159_crit_edge, label %if.then136

if.end132.if.end159_crit_edge:                    ; preds = %if.end132
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end159

if.then136:                                       ; preds = %if.end132
  %89 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %argp, align 32
  %call.i28 = tail call ptr @xdr_inline_decode(ptr noundef %90, i32 noundef 4) #16
  %tobool.not.i29 = icmp eq ptr %call.i28, null
  br i1 %tobool.not.i29, label %if.then136.cleanup206_crit_edge, label %if.end143, !prof !108

if.then136.cleanup206_crit_edge:                  ; preds = %if.then136
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

if.end143:                                        ; preds = %if.then136
  %91 = ptrtoint ptr %call.i28 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %call.i28, align 4
  %93 = zext i32 %92 to i64
  call void @__sanitizer_cov_trace_switch(i64 %93, ptr @__sancov_gen_cov_switch_values.50)
  switch i32 %92, label %if.end143.cleanup206_crit_edge [
    i32 1, label %sw.bb144
    i32 0, label %if.end143.cleanup156_crit_edge
  ]

if.end143.cleanup156_crit_edge:                   ; preds = %if.end143
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup156

if.end143.cleanup206_crit_edge:                   ; preds = %if.end143
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

sw.bb144:                                         ; preds = %if.end143
  %ia_mtime = getelementptr inbounds %struct.iattr, ptr %iattr, i32 0, i32 6
  %call145 = tail call fastcc i32 @nfsd4_decode_nfstime4(ptr noundef %argp, ptr noundef %ia_mtime)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call145)
  %tobool146.not = icmp eq i32 %call145, 0
  br i1 %tobool146.not, label %sw.bb144.cleanup156_crit_edge, label %sw.bb144.cleanup206_crit_edge

sw.bb144.cleanup206_crit_edge:                    ; preds = %sw.bb144
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

sw.bb144.cleanup156_crit_edge:                    ; preds = %sw.bb144
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup156

cleanup156:                                       ; preds = %sw.bb144.cleanup156_crit_edge, %if.end143.cleanup156_crit_edge
  %.sink84 = phi i32 [ 288, %sw.bb144.cleanup156_crit_edge ], [ 32, %if.end143.cleanup156_crit_edge ]
  %94 = ptrtoint ptr %iattr to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %iattr, align 8
  %or150 = or i32 %95, %.sink84
  store i32 %or150, ptr %iattr, align 8
  br label %if.end159

if.end159:                                        ; preds = %cleanup156, %if.end132.if.end159_crit_edge
  %96 = ptrtoint ptr %label to i32
  call void @__asan_store4_noabort(i32 %96)
  store i32 0, ptr %label, align 4
  %97 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %arrayidx6, align 4
  %and161 = and i32 %98, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and161)
  %tobool162.not = icmp eq i32 %and161, 0
  br i1 %tobool162.not, label %if.end159.if.end168_crit_edge, label %if.then163

if.end159.if.end168_crit_edge:                    ; preds = %if.end159
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end168

if.then163:                                       ; preds = %if.end159
  %call164 = tail call fastcc i32 @nfsd4_decode_security_label(ptr noundef %argp, ptr noundef %label)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call164)
  %tobool165.not = icmp eq i32 %call164, 0
  br i1 %tobool165.not, label %if.then163.if.end168_crit_edge, label %if.then163.cleanup206_crit_edge

if.then163.cleanup206_crit_edge:                  ; preds = %if.then163
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

if.then163.if.end168_crit_edge:                   ; preds = %if.then163
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end168

if.end168:                                        ; preds = %if.then163.if.end168_crit_edge, %if.end159.if.end168_crit_edge
  %99 = ptrtoint ptr %arrayidx6 to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load i32, ptr %arrayidx6, align 4
  %and170 = and i32 %100, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and170)
  %tobool171.not = icmp eq i32 %and170, 0
  br i1 %tobool171.not, label %if.end168.if.end199_crit_edge, label %if.then172

if.end168.if.end199_crit_edge:                    ; preds = %if.end168
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end199

if.then172:                                       ; preds = %if.end168
  %tobool174.not = icmp eq ptr %umask, null
  br i1 %tobool174.not, label %if.then172.cleanup206_crit_edge, label %if.end176

if.then172.cleanup206_crit_edge:                  ; preds = %if.then172
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

if.end176:                                        ; preds = %if.then172
  %101 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %argp, align 32
  %call.i33 = tail call ptr @xdr_inline_decode(ptr noundef %102, i32 noundef 4) #16
  %tobool.not.i34 = icmp eq ptr %call.i33, null
  br i1 %tobool.not.i34, label %if.end176.cleanup206_crit_edge, label %if.end182, !prof !108

if.end176.cleanup206_crit_edge:                   ; preds = %if.end176
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

if.end182:                                        ; preds = %if.end176
  %103 = ptrtoint ptr %call.i33 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %call.i33, align 4
  %conv184 = trunc i32 %104 to i16
  %ia_mode185 = getelementptr inbounds %struct.iattr, ptr %iattr, i32 0, i32 1
  %105 = ptrtoint ptr %ia_mode185 to i32
  call void @__asan_store2_noabort(i32 %105)
  store i16 %conv184, ptr %ia_mode185, align 4
  %106 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %106)
  %107 = load ptr, ptr %argp, align 32
  %call.i38 = tail call ptr @xdr_inline_decode(ptr noundef %107, i32 noundef 4) #16
  %tobool.not.i39 = icmp eq ptr %call.i38, null
  br i1 %tobool.not.i39, label %if.end182.cleanup206_crit_edge, label %cleanup195, !prof !108

if.end182.cleanup206_crit_edge:                   ; preds = %if.end182
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup206

cleanup195:                                       ; preds = %if.end182
  call void @__sanitizer_cov_trace_pc() #18
  %108 = ptrtoint ptr %call.i38 to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %call.i38, align 4
  %and192 = and i32 %109, 511
  %110 = ptrtoint ptr %umask to i32
  call void @__asan_store4_noabort(i32 %110)
  store i32 %and192, ptr %umask, align 4
  %111 = ptrtoint ptr %iattr to i32
  call void @__asan_load4_noabort(i32 %111)
  %112 = load i32, ptr %iattr, align 8
  %or194 = or i32 %112, 1
  store i32 %or194, ptr %iattr, align 8
  br label %if.end199

if.end199:                                        ; preds = %cleanup195, %if.end168.if.end199_crit_edge
  %113 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %113)
  %114 = load ptr, ptr %argp, align 32
  %call201 = tail call i32 @xdr_stream_pos(ptr noundef %114) #16
  %sub = sub i32 %call201, %call18
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %sub)
  %cmp202.not = icmp eq i32 %30, %sub
  %.3 = select i1 %cmp202.not, i32 0, i32 10036
  br label %cleanup206

cleanup206:                                       ; preds = %if.end199, %if.end182.cleanup206_crit_edge, %if.end176.cleanup206_crit_edge, %if.then172.cleanup206_crit_edge, %if.then163.cleanup206_crit_edge, %sw.bb144.cleanup206_crit_edge, %if.end143.cleanup206_crit_edge, %if.then136.cleanup206_crit_edge, %sw.bb.cleanup206_crit_edge, %if.end119.cleanup206_crit_edge, %if.then113.cleanup206_crit_edge, %if.end98.cleanup206_crit_edge, %if.end93.cleanup206_crit_edge, %if.then86.cleanup206_crit_edge, %if.end72.cleanup206_crit_edge, %if.end67.cleanup206_crit_edge, %if.then61.cleanup206_crit_edge, %if.then42.cleanup206_crit_edge, %if.then33.cleanup206_crit_edge, %if.then22.cleanup206_crit_edge, %if.end13.cleanup206_crit_edge, %nfsd_attrs_supported.exit, %lor.lhs.false.i.i.cleanup206_crit_edge, %if.then9.cleanup206_crit_edge, %xdr_stream_decode_uint32_array.exit.i.cleanup206_crit_edge, %if.end.i.i.cleanup206_crit_edge, %entry.cleanup206_crit_edge
  %retval.13 = phi i32 [ %call34, %if.then33.cleanup206_crit_edge ], [ %call164, %if.then163.cleanup206_crit_edge ], [ %.3, %if.end199 ], [ 10036, %entry.cleanup206_crit_edge ], [ 10036, %if.end.i.i.cleanup206_crit_edge ], [ 10036, %xdr_stream_decode_uint32_array.exit.i.cleanup206_crit_edge ], [ 10036, %if.then22.cleanup206_crit_edge ], [ 10036, %if.then42.cleanup206_crit_edge ], [ 10032, %lor.lhs.false.i.i.cleanup206_crit_edge ], [ 10032, %if.then9.cleanup206_crit_edge ], [ 10036, %if.end13.cleanup206_crit_edge ], [ %call73, %if.end72.cleanup206_crit_edge ], [ 10036, %if.end67.cleanup206_crit_edge ], [ 10036, %if.then61.cleanup206_crit_edge ], [ %call100, %if.end98.cleanup206_crit_edge ], [ 10036, %if.end93.cleanup206_crit_edge ], [ 10036, %if.then86.cleanup206_crit_edge ], [ 10036, %if.end119.cleanup206_crit_edge ], [ %call120, %sw.bb.cleanup206_crit_edge ], [ 10036, %if.then113.cleanup206_crit_edge ], [ 10036, %if.end143.cleanup206_crit_edge ], [ %call145, %sw.bb144.cleanup206_crit_edge ], [ 10036, %if.then136.cleanup206_crit_edge ], [ 10036, %if.then172.cleanup206_crit_edge ], [ 10036, %if.end176.cleanup206_crit_edge ], [ 10036, %if.end182.cleanup206_crit_edge ], [ %spec.select, %nfsd_attrs_supported.exit ]
  ret i32 %retval.13
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xdr_stream_pos(ptr noundef) local_unnamed_addr #2

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_decode_acl(ptr nocapture noundef %argp, ptr nocapture noundef %acl) unnamed_addr #14 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end, !prof !108

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %argp, align 32
  %nwords.i = getelementptr inbounds %struct.xdr_stream, ptr %5, i32 0, i32 6
  %6 = ptrtoint ptr %nwords.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nwords.i, align 4
  %shl.i = shl i32 %7, 2
  %div = udiv i32 %shl.i, 20
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %div)
  %cmp3 = icmp ugt i32 %3, %div
  br i1 %cmp3, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %call6 = tail call i32 @nfs4_acl_bytes(i32 noundef %3) #16
  %add.i = add i32 %call6, 4
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i, i32 noundef 3264) #20
  %tobool.not.i29 = icmp eq ptr %call9.i.i, null
  br i1 %tobool.not.i29, label %svcxdr_tmpalloc.exit.thread, label %svcxdr_tmpalloc.exit

svcxdr_tmpalloc.exit.thread:                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %acl to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %acl, align 4
  br label %cleanup

svcxdr_tmpalloc.exit:                             ; preds = %if.end5
  %to_free.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 1
  %9 = ptrtoint ptr %to_free.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %to_free.i, align 4
  %11 = ptrtoint ptr %call9.i.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %10, ptr %call9.i.i, align 128
  store ptr %call9.i.i, ptr %to_free.i, align 4
  %buf.i = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call9.i.i, i32 0, i32 1
  %12 = ptrtoint ptr %acl to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %buf.i, ptr %acl, align 4
  %13 = ptrtoint ptr %buf.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %3, ptr %buf.i, align 4
  %aces = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call9.i.i, i32 2
  %add.ptr49 = getelementptr %struct.nfs4_ace, ptr %aces, i32 %3
  %cmp1350 = icmp ult ptr %aces, %add.ptr49
  br i1 %cmp1350, label %for.body.lr.ph, label %svcxdr_tmpalloc.exit.cleanup_crit_edge

svcxdr_tmpalloc.exit.cleanup_crit_edge:           ; preds = %svcxdr_tmpalloc.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body.lr.ph:                                   ; preds = %svcxdr_tmpalloc.exit
  %rqstp29.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %ace.051 = phi ptr [ %aces, %for.body.lr.ph ], [ %incdec.ptr, %for.inc.for.body_crit_edge ]
  %14 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %argp, align 32
  %call.i.i = tail call ptr @xdr_inline_decode(ptr noundef %15, i32 noundef 4) #16
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %for.body.cleanup_crit_edge, label %if.end.i32, !prof !108

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i32:                                       ; preds = %for.body
  %16 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %call.i.i, align 4
  %18 = ptrtoint ptr %ace.051 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %ace.051, align 4
  %19 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %argp, align 32
  %flag.i = getelementptr inbounds %struct.nfs4_ace, ptr %ace.051, i32 0, i32 1
  %call.i51.i = tail call ptr @xdr_inline_decode(ptr noundef %20, i32 noundef 4) #16
  %tobool.not.i52.i = icmp eq ptr %call.i51.i, null
  br i1 %tobool.not.i52.i, label %if.end.i32.cleanup_crit_edge, label %if.end5.i, !prof !108

if.end.i32.cleanup_crit_edge:                     ; preds = %if.end.i32
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end5.i:                                        ; preds = %if.end.i32
  %21 = ptrtoint ptr %call.i51.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %call.i51.i, align 4
  %23 = ptrtoint ptr %flag.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %flag.i, align 4
  %24 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %argp, align 32
  %call.i56.i = tail call ptr @xdr_inline_decode(ptr noundef %25, i32 noundef 4) #16
  %tobool.not.i57.i = icmp eq ptr %call.i56.i, null
  br i1 %tobool.not.i57.i, label %if.end5.i.cleanup_crit_edge, label %if.end10.i, !prof !108

if.end5.i.cleanup_crit_edge:                      ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end10.i:                                       ; preds = %if.end5.i
  %access_mask.i = getelementptr inbounds %struct.nfs4_ace, ptr %ace.051, i32 0, i32 2
  %26 = ptrtoint ptr %call.i56.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %call.i56.i, align 4
  %28 = ptrtoint ptr %access_mask.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %access_mask.i, align 4
  %29 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %argp, align 32
  %call.i61.i = tail call ptr @xdr_inline_decode(ptr noundef %30, i32 noundef 4) #16
  %tobool.not.i62.i = icmp eq ptr %call.i61.i, null
  br i1 %tobool.not.i62.i, label %if.end10.i.cleanup_crit_edge, label %if.end15.i, !prof !108

if.end10.i.cleanup_crit_edge:                     ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end15.i:                                       ; preds = %if.end10.i
  %31 = ptrtoint ptr %call.i61.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %call.i61.i, align 4
  %33 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %argp, align 32
  %call17.i = tail call ptr @xdr_inline_decode(ptr noundef %34, i32 noundef %32) #16
  %tobool.not.i33 = icmp eq ptr %call17.i, null
  br i1 %tobool.not.i33, label %if.end15.i.cleanup_crit_edge, label %if.end19.i

if.end15.i.cleanup_crit_edge:                     ; preds = %if.end15.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end19.i:                                       ; preds = %if.end15.i
  %call20.i = tail call i32 @nfs4_acl_get_whotype(ptr noundef nonnull %call17.i, i32 noundef %32) #16
  %whotype.i = getelementptr inbounds %struct.nfs4_ace, ptr %ace.051, i32 0, i32 3
  %35 = ptrtoint ptr %whotype.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %call20.i, ptr %whotype.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20.i)
  %cmp22.not.i = icmp eq i32 %call20.i, 0
  br i1 %cmp22.not.i, label %if.else.i, label %if.end19.i.for.inc_crit_edge

if.end19.i.for.inc_crit_edge:                     ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.else.i:                                        ; preds = %if.end19.i
  %36 = ptrtoint ptr %flag.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %flag.i, align 4
  %and.i = and i32 %37, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool25.not.i = icmp eq i32 %and.i, 0
  %38 = ptrtoint ptr %rqstp29.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %rqstp29.i, align 8
  %40 = getelementptr inbounds %struct.nfs4_ace, ptr %ace.051, i32 0, i32 4
  br i1 %tobool25.not.i, label %if.else28.i, label %if.then26.i

if.then26.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  %call27.i = tail call i32 @nfsd_map_name_to_gid(ptr noundef %39, ptr noundef nonnull %call17.i, i32 noundef %32, ptr noundef %40) #16
  br label %nfsd4_decode_nfsace4.exit

if.else28.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  %call30.i = tail call i32 @nfsd_map_name_to_uid(ptr noundef %39, ptr noundef nonnull %call17.i, i32 noundef %32, ptr noundef %40) #16
  br label %nfsd4_decode_nfsace4.exit

nfsd4_decode_nfsace4.exit:                        ; preds = %if.else28.i, %if.then26.i
  %retval.0.i34 = phi i32 [ %call27.i, %if.then26.i ], [ %call30.i, %if.else28.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i34)
  %tobool.not = icmp eq i32 %retval.0.i34, 0
  br i1 %tobool.not, label %nfsd4_decode_nfsace4.exit.for.inc_crit_edge, label %nfsd4_decode_nfsace4.exit.cleanup_crit_edge

nfsd4_decode_nfsace4.exit.cleanup_crit_edge:      ; preds = %nfsd4_decode_nfsace4.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

nfsd4_decode_nfsace4.exit.for.inc_crit_edge:      ; preds = %nfsd4_decode_nfsace4.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

for.inc:                                          ; preds = %nfsd4_decode_nfsace4.exit.for.inc_crit_edge, %if.end19.i.for.inc_crit_edge
  %incdec.ptr = getelementptr %struct.nfs4_ace, ptr %ace.051, i32 1
  %41 = ptrtoint ptr %acl to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %acl, align 4
  %aces11 = getelementptr inbounds %struct.nfs4_acl, ptr %42, i32 0, i32 1
  %add.ptr = getelementptr %struct.nfs4_ace, ptr %aces11, i32 %3
  %cmp13 = icmp ult ptr %incdec.ptr, %add.ptr
  br i1 %cmp13, label %for.inc.for.body_crit_edge, label %for.inc.cleanup_crit_edge

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %nfsd4_decode_nfsace4.exit.cleanup_crit_edge, %if.end15.i.cleanup_crit_edge, %if.end10.i.cleanup_crit_edge, %if.end5.i.cleanup_crit_edge, %if.end.i32.cleanup_crit_edge, %for.body.cleanup_crit_edge, %svcxdr_tmpalloc.exit.cleanup_crit_edge, %svcxdr_tmpalloc.exit.thread, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 27, %if.end.cleanup_crit_edge ], [ 10008, %svcxdr_tmpalloc.exit.thread ], [ 10036, %entry.cleanup_crit_edge ], [ 0, %svcxdr_tmpalloc.exit.cleanup_crit_edge ], [ %retval.0.i34, %nfsd4_decode_nfsace4.exit.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ], [ 10036, %if.end15.i.cleanup_crit_edge ], [ 10036, %for.body.cleanup_crit_edge ], [ 10036, %if.end.i32.cleanup_crit_edge ], [ 10036, %if.end5.i.cleanup_crit_edge ], [ 10036, %if.end10.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfsd_map_name_to_uid(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfsd_map_name_to_gid(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_decode_nfstime4(ptr nocapture noundef readonly %argp, ptr nocapture noundef writeonly %tv) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 12) #16
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %2 = ptrtoint ptr %call to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %3 = load i64, ptr %call, align 1
  %4 = ptrtoint ptr %tv to i32
  call void @__asan_store8_noabort(i32 %4)
  store i64 %3, ptr %tv, align 8
  %add.ptr.i = getelementptr i32, ptr %call, i32 2
  %5 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %add.ptr.i, align 4
  %tv_nsec = getelementptr inbounds %struct.timespec64, ptr %tv, i32 0, i32 1
  %7 = ptrtoint ptr %tv_nsec to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %tv_nsec, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 999999999, i32 %6)
  %cmp = icmp ugt i32 %6, 999999999
  %. = select i1 %cmp, i32 22, i32 0
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %entry.cleanup_crit_edge ], [ %., %if.end ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_decode_security_label(ptr nocapture noundef %argp, ptr nocapture noundef writeonly %label) unnamed_addr #14 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end, !prof !108

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %argp, align 32
  %call.i33 = tail call ptr @xdr_inline_decode(ptr noundef %3, i32 noundef 4) #16
  %tobool.not.i34 = icmp eq ptr %call.i33, null
  br i1 %tobool.not.i34, label %if.end.cleanup_crit_edge, label %if.end5, !prof !108

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %4 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %argp, align 32
  %call.i38 = tail call ptr @xdr_inline_decode(ptr noundef %5, i32 noundef 4) #16
  %tobool.not.i39 = icmp eq ptr %call.i38, null
  br i1 %tobool.not.i39, label %if.end5.cleanup_crit_edge, label %if.end10, !prof !108

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end10:                                         ; preds = %if.end5
  %6 = ptrtoint ptr %call.i38 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %call.i38, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2048, i32 %7)
  %cmp11 = icmp ugt i32 %7, 2048
  br i1 %cmp11, label %if.end10.cleanup_crit_edge, label %if.end13

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end13:                                         ; preds = %if.end10
  %8 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %argp, align 32
  %call15 = tail call ptr @xdr_inline_decode(ptr noundef %9, i32 noundef %7) #16
  %tobool.not = icmp eq ptr %call15, null
  br i1 %tobool.not, label %if.end13.cleanup_crit_edge, label %if.end17

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end17:                                         ; preds = %if.end13
  %10 = ptrtoint ptr %label to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %7, ptr %label, align 4
  %add.i.i = add nuw nsw i32 %7, 5
  %call9.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i.i, i32 noundef 3264) #20
  %tobool.not.i.i = icmp eq ptr %call9.i.i.i, null
  br i1 %tobool.not.i.i, label %if.end17.svcxdr_dupstr.exit_crit_edge, label %svcxdr_tmpalloc.exit.i

if.end17.svcxdr_dupstr.exit_crit_edge:            ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %svcxdr_dupstr.exit

svcxdr_tmpalloc.exit.i:                           ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  %to_free.i.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 1
  %11 = ptrtoint ptr %to_free.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %to_free.i.i, align 4
  %13 = ptrtoint ptr %call9.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %12, ptr %call9.i.i.i, align 128
  store ptr %call9.i.i.i, ptr %to_free.i.i, align 4
  %buf.i.i = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call9.i.i.i, i32 0, i32 1
  %14 = call ptr @memcpy(ptr %buf.i.i, ptr %call15, i32 %7)
  %arrayidx.i = getelementptr i8, ptr %buf.i.i, i32 %7
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store1_noabort(i32 %15)
  store i8 0, ptr %arrayidx.i, align 1
  br label %svcxdr_dupstr.exit

svcxdr_dupstr.exit:                               ; preds = %svcxdr_tmpalloc.exit.i, %if.end17.svcxdr_dupstr.exit_crit_edge
  %retval.0.i44 = phi ptr [ %buf.i.i, %svcxdr_tmpalloc.exit.i ], [ null, %if.end17.svcxdr_dupstr.exit_crit_edge ]
  %data = getelementptr inbounds %struct.xdr_netobj, ptr %label, i32 0, i32 1
  %16 = ptrtoint ptr %data to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %retval.0.i44, ptr %data, align 4
  %tobool20.not = icmp eq ptr %retval.0.i44, null
  %. = select i1 %tobool20.not, i32 10008, i32 0
  br label %cleanup

cleanup:                                          ; preds = %svcxdr_dupstr.exit, %if.end13.cleanup_crit_edge, %if.end10.cleanup_crit_edge, %if.end5.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10093, %if.end10.cleanup_crit_edge ], [ 10036, %if.end13.cleanup_crit_edge ], [ %., %svcxdr_dupstr.exit ], [ 10036, %entry.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ], [ 10036, %if.end5.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfs4_acl_bytes(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @nfs4_acl_get_whotype(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_decode_state_owner4(ptr nocapture noundef %argp, ptr nocapture noundef writeonly %clientid, ptr nocapture noundef writeonly %owner) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 8) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_loadN_noabort(i32 %2, i32 8)
  %3 = load i64, ptr %call.i, align 4
  %4 = ptrtoint ptr %clientid to i32
  call void @__asan_storeN_noabort(i32 %4, i32 8)
  store i64 %3, ptr %clientid, align 4
  %5 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %argp, align 32
  %call.i.i = tail call ptr @xdr_inline_decode(ptr noundef %6, i32 noundef 4) #16
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %if.end.cleanup_crit_edge, label %if.end.i4, !prof !108

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i4:                                        ; preds = %if.end
  %7 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %call.i.i, align 4
  %9 = add i32 %8, -1025
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1024, i32 %9)
  %10 = icmp ult i32 %9, -1024
  br i1 %10, label %if.end.i4.cleanup_crit_edge, label %if.end4.i

if.end.i4.cleanup_crit_edge:                      ; preds = %if.end.i4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end4.i:                                        ; preds = %if.end.i4
  %11 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %argp, align 32
  %call6.i = tail call ptr @xdr_inline_decode(ptr noundef %12, i32 noundef %8) #16
  %tobool.not.i5 = icmp eq ptr %call6.i, null
  br i1 %tobool.not.i5, label %if.end4.i.cleanup_crit_edge, label %if.end8.i

if.end4.i.cleanup_crit_edge:                      ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8.i:                                        ; preds = %if.end4.i
  %13 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %argp, align 32
  %scratch.i.i = getelementptr inbounds %struct.xdr_stream, ptr %14, i32 0, i32 4
  %15 = ptrtoint ptr %scratch.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %scratch.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %16, %call6.i
  br i1 %cmp.not.i.i, label %if.end8.i.i.i.i, label %if.end8.i.if.end13.i_crit_edge

if.end8.i.if.end13.i_crit_edge:                   ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13.i

if.end8.i.i.i.i:                                  ; preds = %if.end8.i
  %add.i.i.i = add nuw nsw i32 %8, 4
  %call9.i.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i.i.i, i32 noundef 3264) #20
  %tobool.not.i.i.i = icmp eq ptr %call9.i.i.i.i, null
  br i1 %tobool.not.i.i.i, label %svcxdr_savemem.exit.thread.i, label %svcxdr_savemem.exit.i

svcxdr_savemem.exit.thread.i:                     ; preds = %if.end8.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %data31.i = getelementptr inbounds %struct.xdr_netobj, ptr %owner, i32 0, i32 1
  %17 = ptrtoint ptr %data31.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr null, ptr %data31.i, align 4
  br label %cleanup

svcxdr_savemem.exit.i:                            ; preds = %if.end8.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %to_free.i.i.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 1
  %18 = ptrtoint ptr %to_free.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %to_free.i.i.i, align 4
  %20 = ptrtoint ptr %call9.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %19, ptr %call9.i.i.i.i, align 128
  store ptr %call9.i.i.i.i, ptr %to_free.i.i.i, align 4
  %buf.i.i.i = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call9.i.i.i.i, i32 0, i32 1
  %21 = call ptr @memcpy(ptr %buf.i.i.i, ptr %call6.i, i32 %8)
  br label %if.end13.i

if.end13.i:                                       ; preds = %svcxdr_savemem.exit.i, %if.end8.i.if.end13.i_crit_edge
  %buf.i.i.sink.i = phi ptr [ %buf.i.i.i, %svcxdr_savemem.exit.i ], [ %call6.i, %if.end8.i.if.end13.i_crit_edge ]
  %data.i = getelementptr inbounds %struct.xdr_netobj, ptr %owner, i32 0, i32 1
  %22 = ptrtoint ptr %data.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %buf.i.i.sink.i, ptr %data.i, align 4
  %23 = ptrtoint ptr %owner to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %8, ptr %owner, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end13.i, %svcxdr_savemem.exit.thread.i, %if.end4.i.cleanup_crit_edge, %if.end.i4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %entry.cleanup_crit_edge ], [ 0, %if.end13.i ], [ 10036, %if.end.i4.cleanup_crit_edge ], [ 10036, %if.end4.i.cleanup_crit_edge ], [ 10008, %svcxdr_savemem.exit.thread.i ], [ 10036, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_decode_open_claim4(ptr nocapture noundef %argp, ptr nocapture noundef %open) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end, !prof !108

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %open to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %open, align 4
  %5 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.51)
  switch i32 %3, label %if.end.cleanup_crit_edge [
    i32 0, label %if.end.sw.bb_crit_edge
    i32 3, label %if.end.sw.bb_crit_edge82
    i32 1, label %sw.bb5
    i32 2, label %sw.bb11
    i32 4, label %if.end.sw.bb22_crit_edge
    i32 6, label %if.end.sw.bb22_crit_edge83
    i32 5, label %sw.bb26
  ]

if.end.sw.bb22_crit_edge83:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb22

if.end.sw.bb22_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb22

if.end.sw.bb_crit_edge82:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

if.end.sw.bb_crit_edge:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb:                                            ; preds = %if.end.sw.bb_crit_edge, %if.end.sw.bb_crit_edge82
  %op_fname = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 2
  %op_fnamelen = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 1
  %call2 = tail call fastcc i32 @nfsd4_decode_component4(ptr noundef %argp, ptr noundef %op_fname, ptr noundef %op_fnamelen)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool.not = icmp eq i32 %call2, 0
  br i1 %tobool.not, label %sw.bb.sw.epilog_crit_edge, label %sw.bb.cleanup_crit_edge

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb.sw.epilog_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.bb5:                                           ; preds = %if.end
  %6 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %argp, align 32
  %call.i58 = tail call ptr @xdr_inline_decode(ptr noundef %7, i32 noundef 4) #16
  %tobool.not.i59 = icmp eq ptr %call.i58, null
  br i1 %tobool.not.i59, label %sw.bb5.cleanup_crit_edge, label %xdr_stream_decode_u32.exit62, !prof !108

sw.bb5.cleanup_crit_edge:                         ; preds = %sw.bb5
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

xdr_stream_decode_u32.exit62:                     ; preds = %sw.bb5
  call void @__sanitizer_cov_trace_pc() #18
  %op_delegate_type = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 3
  %8 = ptrtoint ptr %call.i58 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %call.i58, align 4
  %10 = ptrtoint ptr %op_delegate_type to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %op_delegate_type, align 4
  br label %sw.epilog

sw.bb11:                                          ; preds = %if.end
  %11 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %argp, align 32
  %call.i63 = tail call ptr @xdr_inline_decode(ptr noundef %12, i32 noundef 16) #16
  %tobool.not.i64 = icmp eq ptr %call.i63, null
  br i1 %tobool.not.i64, label %sw.bb11.cleanup_crit_edge, label %if.end15

sw.bb11.cleanup_crit_edge:                        ; preds = %sw.bb11
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end15:                                         ; preds = %sw.bb11
  %op_delegate_stateid = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 4
  %incdec.ptr.i = getelementptr i32, ptr %call.i63, i32 1
  %13 = ptrtoint ptr %call.i63 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %call.i63, align 4
  %15 = ptrtoint ptr %op_delegate_stateid to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %op_delegate_stateid, align 4
  %si_opaque.i = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 4, i32 1
  %16 = call ptr @memcpy(ptr %si_opaque.i, ptr %incdec.ptr.i, i32 12)
  %op_fname16 = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 2
  %op_fnamelen17 = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 1
  %call18 = tail call fastcc i32 @nfsd4_decode_component4(ptr noundef %argp, ptr noundef %op_fname16, ptr noundef %op_fnamelen17)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %if.end15.sw.epilog_crit_edge, label %if.end15.cleanup_crit_edge

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end15.sw.epilog_crit_edge:                     ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.bb22:                                          ; preds = %if.end.sw.bb22_crit_edge, %if.end.sw.bb22_crit_edge83
  %minorversion = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 5
  %17 = ptrtoint ptr %minorversion to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %minorversion, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %cmp23 = icmp eq i32 %18, 0
  br i1 %cmp23, label %sw.bb22.cleanup_crit_edge, label %sw.bb22.sw.epilog_crit_edge

sw.bb22.sw.epilog_crit_edge:                      ; preds = %sw.bb22
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.bb22.cleanup_crit_edge:                        ; preds = %sw.bb22
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb26:                                          ; preds = %if.end
  %minorversion27 = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 5
  %19 = ptrtoint ptr %minorversion27 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %minorversion27, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %cmp28 = icmp eq i32 %20, 0
  br i1 %cmp28, label %sw.bb26.cleanup_crit_edge, label %if.end30

sw.bb26.cleanup_crit_edge:                        ; preds = %sw.bb26
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end30:                                         ; preds = %sw.bb26
  %21 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %argp, align 32
  %call.i67 = tail call ptr @xdr_inline_decode(ptr noundef %22, i32 noundef 16) #16
  %tobool.not.i68 = icmp eq ptr %call.i67, null
  br i1 %tobool.not.i68, label %if.end30.cleanup_crit_edge, label %nfsd4_decode_stateid4.exit73.thread

if.end30.cleanup_crit_edge:                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

nfsd4_decode_stateid4.exit73.thread:              ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #18
  %op_delegate_stateid31 = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 4
  %incdec.ptr.i69 = getelementptr i32, ptr %call.i67, i32 1
  %23 = ptrtoint ptr %call.i67 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %call.i67, align 4
  %25 = ptrtoint ptr %op_delegate_stateid31 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %op_delegate_stateid31, align 4
  %si_opaque.i70 = getelementptr inbounds %struct.nfsd4_open, ptr %open, i32 0, i32 4, i32 1
  %26 = call ptr @memcpy(ptr %si_opaque.i70, ptr %incdec.ptr.i69, i32 12)
  br label %sw.epilog

sw.epilog:                                        ; preds = %nfsd4_decode_stateid4.exit73.thread, %sw.bb22.sw.epilog_crit_edge, %if.end15.sw.epilog_crit_edge, %xdr_stream_decode_u32.exit62, %sw.bb.sw.epilog_crit_edge
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %if.end30.cleanup_crit_edge, %sw.bb26.cleanup_crit_edge, %sw.bb22.cleanup_crit_edge, %if.end15.cleanup_crit_edge, %sw.bb11.cleanup_crit_edge, %sw.bb5.cleanup_crit_edge, %sw.bb.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %sw.epilog ], [ %call2, %sw.bb.cleanup_crit_edge ], [ %call18, %if.end15.cleanup_crit_edge ], [ 10036, %sw.bb22.cleanup_crit_edge ], [ 10036, %sw.bb26.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ], [ 10036, %sw.bb11.cleanup_crit_edge ], [ 10036, %if.end30.cleanup_crit_edge ], [ 10036, %entry.cleanup_crit_edge ], [ 10036, %sw.bb5.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @xdr_stream_subsegment(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_decode_cb_sec(ptr nocapture noundef readonly %argp, ptr nocapture noundef %cbs) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end, !prof !108

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp ne i32 %3, 0
  %. = sext i1 %tobool.not to i32
  %4 = ptrtoint ptr %cbs to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %., ptr %cbs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp469.not = icmp eq i32 %3, 0
  br i1 %cmp469.not, label %if.end.cleanup_crit_edge, label %for.body.lr.ph

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body.lr.ph:                                   ; preds = %if.end
  %rqstp.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 2
  %uid38.i = getelementptr inbounds %struct.nfsd4_cb_sec, ptr %cbs, i32 0, i32 1
  %gid39.i = getelementptr inbounds %struct.nfsd4_cb_sec, ptr %cbs, i32 0, i32 2
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.070 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %5 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %argp, align 32
  %call.i40 = tail call ptr @xdr_inline_decode(ptr noundef %6, i32 noundef 4) #16
  %tobool.not.i41 = icmp eq ptr %call.i40, null
  br i1 %tobool.not.i41, label %for.body.cleanup_crit_edge, label %if.end9, !prof !108

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end9:                                          ; preds = %for.body
  %7 = ptrtoint ptr %call.i40 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %call.i40, align 4
  %9 = zext i32 %8 to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.52)
  switch i32 %8, label %if.end9.cleanup_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb15
    i32 6, label %sw.bb20
  ]

if.end9.cleanup_crit_edge:                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb:                                            ; preds = %if.end9
  %10 = ptrtoint ptr %cbs to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cbs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %11)
  %cmp11 = icmp eq i32 %11, -1
  br i1 %cmp11, label %if.then12, label %sw.bb.for.inc_crit_edge

sw.bb.for.inc_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then12:                                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  %12 = ptrtoint ptr %cbs to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %cbs, align 4
  br label %for.inc

sw.bb15:                                          ; preds = %if.end9
  %13 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %argp, align 32
  %call.i.i = tail call ptr @xdr_inline_decode(ptr noundef %14, i32 noundef 4) #16
  %tobool.not.i.i = icmp eq ptr %call.i.i, null
  br i1 %tobool.not.i.i, label %sw.bb15.cleanup_crit_edge, label %if.end.i45, !prof !108

sw.bb15.cleanup_crit_edge:                        ; preds = %sw.bb15
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i45:                                       ; preds = %sw.bb15
  %15 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %argp, align 32
  %call.i.i.i = tail call ptr @xdr_inline_decode(ptr noundef %16, i32 noundef 4) #16
  %tobool.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i.i, label %if.end.i45.cleanup_crit_edge, label %if.end.i67.i, !prof !108

if.end.i45.cleanup_crit_edge:                     ; preds = %if.end.i45
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i67.i:                                     ; preds = %if.end.i45
  %17 = ptrtoint ptr %call.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %call.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 255, i32 %18)
  %cmp1.i.i = icmp ugt i32 %18, 255
  br i1 %cmp1.i.i, label %if.end.i67.i.cleanup_crit_edge, label %if.end3.i.i

if.end.i67.i.cleanup_crit_edge:                   ; preds = %if.end.i67.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3.i.i:                                      ; preds = %if.end.i67.i
  %19 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %argp, align 32
  %call5.i.i = tail call ptr @xdr_inline_decode(ptr noundef %20, i32 noundef %18) #16
  %tobool6.not.i.i = icmp eq ptr %call5.i.i, null
  br i1 %tobool6.not.i.i, label %if.end3.i.i.cleanup_crit_edge, label %if.end3.i

if.end3.i.i.cleanup_crit_edge:                    ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end3.i:                                        ; preds = %if.end3.i.i
  %21 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %argp, align 32
  %call.i69.i = tail call ptr @xdr_inline_decode(ptr noundef %22, i32 noundef 4) #16
  %tobool.not.i70.i = icmp eq ptr %call.i69.i, null
  br i1 %tobool.not.i70.i, label %if.end3.i.cleanup_crit_edge, label %if.end8.i, !prof !108

if.end3.i.cleanup_crit_edge:                      ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end8.i:                                        ; preds = %if.end3.i
  %23 = ptrtoint ptr %call.i69.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %call.i69.i, align 4
  %25 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %argp, align 32
  %call.i74.i = tail call ptr @xdr_inline_decode(ptr noundef %26, i32 noundef 4) #16
  %tobool.not.i75.i = icmp eq ptr %call.i74.i, null
  br i1 %tobool.not.i75.i, label %if.end8.i.cleanup_crit_edge, label %if.end13.i, !prof !108

if.end8.i.cleanup_crit_edge:                      ; preds = %if.end8.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end13.i:                                       ; preds = %if.end8.i
  %27 = ptrtoint ptr %call.i74.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %call.i74.i, align 4
  %29 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %argp, align 32
  %call.i79.i = tail call ptr @xdr_inline_decode(ptr noundef %30, i32 noundef 4) #16
  %tobool.not.i80.i = icmp eq ptr %call.i79.i, null
  br i1 %tobool.not.i80.i, label %if.end13.i.cleanup_crit_edge, label %if.end18.i, !prof !108

if.end13.i.cleanup_crit_edge:                     ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end18.i:                                       ; preds = %if.end13.i
  %31 = ptrtoint ptr %call.i79.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %call.i79.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %32)
  %cmp19.i = icmp ugt i32 %32, 16
  br i1 %cmp19.i, label %if.end18.i.cleanup_crit_edge, label %if.end21.i

if.end18.i.cleanup_crit_edge:                     ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end21.i:                                       ; preds = %if.end18.i
  %33 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %argp, align 32
  %shl.i = shl nuw nsw i32 %32, 2
  %call23.i = tail call ptr @xdr_inline_decode(ptr noundef %34, i32 noundef %shl.i) #16
  %tobool24.not.i = icmp eq ptr %call23.i, null
  br i1 %tobool24.not.i, label %if.end21.i.cleanup_crit_edge, label %if.end26.i

if.end21.i.cleanup_crit_edge:                     ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end26.i:                                       ; preds = %if.end21.i
  %35 = ptrtoint ptr %cbs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %cbs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %36)
  %cmp27.i = icmp eq i32 %36, -1
  br i1 %cmp27.i, label %if.then28.i, label %if.end26.i.for.inc_crit_edge

if.end26.i.for.inc_crit_edge:                     ; preds = %if.end26.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.then28.i:                                      ; preds = %if.end26.i
  %37 = ptrtoint ptr %rqstp.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %rqstp.i, align 8
  %rq_xprt.i.i = getelementptr inbounds %struct.svc_rqst, ptr %38, i32 0, i32 2
  %39 = ptrtoint ptr %rq_xprt.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %rq_xprt.i.i, align 8
  %xpt_cred.i.i = getelementptr inbounds %struct.svc_xprt, ptr %40, i32 0, i32 20
  %41 = ptrtoint ptr %xpt_cred.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %xpt_cred.i.i, align 4
  %tobool.not.i84.i = icmp eq ptr %42, null
  br i1 %tobool.not.i84.i, label %if.then28.i.nfsd_user_namespace.exit.i_crit_edge, label %cond.true.i.i

if.then28.i.nfsd_user_namespace.exit.i_crit_edge: ; preds = %if.then28.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %nfsd_user_namespace.exit.i

cond.true.i.i:                                    ; preds = %if.then28.i
  call void @__sanitizer_cov_trace_pc() #18
  %user_ns.i.i = getelementptr inbounds %struct.cred, ptr %42, i32 0, i32 25
  %43 = ptrtoint ptr %user_ns.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %user_ns.i.i, align 4
  br label %nfsd_user_namespace.exit.i

nfsd_user_namespace.exit.i:                       ; preds = %cond.true.i.i, %if.then28.i.nfsd_user_namespace.exit.i_crit_edge
  %cond.i.i = phi ptr [ %44, %cond.true.i.i ], [ @init_user_ns, %if.then28.i.nfsd_user_namespace.exit.i_crit_edge ]
  %call30.i = tail call i32 @make_kuid(ptr noundef %cond.i.i, i32 noundef %24) #16
  %call31.i = tail call i32 @make_kgid(ptr noundef %cond.i.i, i32 noundef %28) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call30.i)
  %cmp.i.i = icmp ne i32 %call30.i, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call31.i)
  %cmp.i85.i = icmp ne i32 %call31.i, -1
  %or.cond.i = select i1 %cmp.i.i, i1 %cmp.i85.i, i1 false
  br i1 %or.cond.i, label %if.then37.i, label %do.body.i

if.then37.i:                                      ; preds = %nfsd_user_namespace.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %45 = ptrtoint ptr %uid38.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %call30.i, ptr %uid38.i, align 4
  %46 = ptrtoint ptr %gid39.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %call31.i, ptr %gid39.i, align 4
  %47 = ptrtoint ptr %cbs to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 1, ptr %cbs, align 4
  br label %for.inc

do.body.i:                                        ; preds = %nfsd_user_namespace.exit.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfsd_debug to i32))
  %48 = load i32, ptr @nfsd_debug, align 4
  %and.i = and i32 %48, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool41.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool41.not.i, label %do.body.i.for.inc_crit_edge, label %do.end.i

do.body.i.for.inc_crit_edge:                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

do.end.i:                                         ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %call44.i = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.26) #21
  br label %for.inc

sw.bb20:                                          ; preds = %if.end9
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nfsd_debug to i32))
  %49 = load i32, ptr @nfsd_debug, align 4
  %and.i47 = and i32 %49, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i47)
  %tobool.not.i48 = icmp eq i32 %and.i47, 0
  br i1 %tobool.not.i48, label %sw.bb20.do.end3.i_crit_edge, label %do.end.i50

sw.bb20.do.end3.i_crit_edge:                      ; preds = %sw.bb20
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end3.i

do.end.i50:                                       ; preds = %sw.bb20
  call void @__sanitizer_cov_trace_pc() #18
  %call.i49 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.28) #21
  br label %do.end3.i

do.end3.i:                                        ; preds = %do.end.i50, %sw.bb20.do.end3.i_crit_edge
  %50 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %argp, align 32
  %call.i.i51 = tail call ptr @xdr_inline_decode(ptr noundef %51, i32 noundef 4) #16
  %tobool.not.i.i52 = icmp eq ptr %call.i.i51, null
  br i1 %tobool.not.i.i52, label %do.end3.i.cleanup_crit_edge, label %if.end6.i, !prof !108

do.end3.i.cleanup_crit_edge:                      ; preds = %do.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end6.i:                                        ; preds = %do.end3.i
  %52 = ptrtoint ptr %call.i.i51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %call.i.i51, align 4
  %54 = add i32 %53, -4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -3, i32 %54)
  %55 = icmp ult i32 %54, -3
  br i1 %55, label %if.end6.i.cleanup_crit_edge, label %if.end10.i

if.end6.i.cleanup_crit_edge:                      ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end10.i:                                       ; preds = %if.end6.i
  %56 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %argp, align 32
  %call.i.i.i53 = tail call ptr @xdr_inline_decode(ptr noundef %57, i32 noundef 4) #16
  %tobool.not.i.i.i54 = icmp eq ptr %call.i.i.i53, null
  br i1 %tobool.not.i.i.i54, label %if.end10.i.cleanup_crit_edge, label %if.end.i1.i, !prof !108

if.end10.i.cleanup_crit_edge:                     ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i1.i:                                      ; preds = %if.end10.i
  %58 = ptrtoint ptr %call.i.i.i53 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %call.i.i.i53, align 4
  %60 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %argp, align 32
  %call5.i.i55 = tail call ptr @xdr_inline_decode(ptr noundef %61, i32 noundef %59) #16
  %tobool6.not.i.i56 = icmp eq ptr %call5.i.i55, null
  br i1 %tobool6.not.i.i56, label %if.end.i1.i.cleanup_crit_edge, label %if.end14.i

if.end.i1.i.cleanup_crit_edge:                    ; preds = %if.end.i1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end14.i:                                       ; preds = %if.end.i1.i
  %62 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %argp, align 32
  %call.i.i3.i = tail call ptr @xdr_inline_decode(ptr noundef %63, i32 noundef 4) #16
  %tobool.not.i.i4.i = icmp eq ptr %call.i.i3.i, null
  br i1 %tobool.not.i.i4.i, label %if.end14.i.cleanup_crit_edge, label %if.end.i6.i, !prof !108

if.end14.i.cleanup_crit_edge:                     ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i6.i:                                      ; preds = %if.end14.i
  %64 = ptrtoint ptr %call.i.i3.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %call.i.i3.i, align 4
  %66 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %argp, align 32
  %call5.i7.i = tail call ptr @xdr_inline_decode(ptr noundef %67, i32 noundef %65) #16
  %tobool6.not.i8.i = icmp eq ptr %call5.i7.i, null
  br i1 %tobool6.not.i8.i, label %if.end.i6.i.cleanup_crit_edge, label %if.end.i6.i.for.inc_crit_edge

if.end.i6.i.for.inc_crit_edge:                    ; preds = %if.end.i6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

if.end.i6.i.cleanup_crit_edge:                    ; preds = %if.end.i6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.inc:                                          ; preds = %if.end.i6.i.for.inc_crit_edge, %do.end.i, %do.body.i.for.inc_crit_edge, %if.then37.i, %if.end26.i.for.inc_crit_edge, %if.then12, %sw.bb.for.inc_crit_edge
  %inc = add nuw i32 %i.070, 1
  %exitcond.not = icmp eq i32 %inc, %3
  br i1 %exitcond.not, label %for.inc.cleanup_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.end.i6.i.cleanup_crit_edge, %if.end14.i.cleanup_crit_edge, %if.end.i1.i.cleanup_crit_edge, %if.end10.i.cleanup_crit_edge, %if.end6.i.cleanup_crit_edge, %do.end3.i.cleanup_crit_edge, %if.end21.i.cleanup_crit_edge, %if.end18.i.cleanup_crit_edge, %if.end13.i.cleanup_crit_edge, %if.end8.i.cleanup_crit_edge, %if.end3.i.cleanup_crit_edge, %if.end3.i.i.cleanup_crit_edge, %if.end.i67.i.cleanup_crit_edge, %if.end.i45.cleanup_crit_edge, %sw.bb15.cleanup_crit_edge, %if.end9.cleanup_crit_edge, %for.body.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ 22, %if.end9.cleanup_crit_edge ], [ 0, %for.inc.cleanup_crit_edge ], [ 10036, %for.body.cleanup_crit_edge ], [ 10036, %if.end18.i.cleanup_crit_edge ], [ 10036, %if.end21.i.cleanup_crit_edge ], [ 10036, %sw.bb15.cleanup_crit_edge ], [ 10036, %if.end.i45.cleanup_crit_edge ], [ 10036, %if.end.i67.i.cleanup_crit_edge ], [ 10036, %if.end3.i.i.cleanup_crit_edge ], [ 10036, %if.end3.i.cleanup_crit_edge ], [ 10036, %if.end8.i.cleanup_crit_edge ], [ 10036, %if.end13.i.cleanup_crit_edge ], [ 10036, %if.end6.i.cleanup_crit_edge ], [ 10036, %do.end3.i.cleanup_crit_edge ], [ 10036, %if.end10.i.cleanup_crit_edge ], [ 10036, %if.end.i1.i.cleanup_crit_edge ], [ 10036, %if.end14.i.cleanup_crit_edge ], [ 10036, %if.end.i6.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @make_kuid(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @make_kgid(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_decode_state_protect_ops(ptr nocapture noundef readonly %argp, ptr noundef writeonly %exid) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %spo_must_enforce = getelementptr %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 6
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i.i.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i.i.i = icmp eq ptr %call.i.i.i, null
  br i1 %tobool.not.i.i.i, label %entry.cleanup_crit_edge, label %if.end.i.i, !prof !108

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i.i:                                       ; preds = %entry
  %2 = ptrtoint ptr %call.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i.i.i, align 4
  %mul.i.i = shl i32 %3, 2
  %call3.i.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef %mul.i.i) #16
  %tobool4.not.i.i = icmp eq ptr %call3.i.i, null
  br i1 %tobool4.not.i.i, label %if.end.i.i.cleanup_crit_edge, label %if.end14.i.i, !prof !108

if.end.i.i.cleanup_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end14.i.i:                                     ; preds = %if.end.i.i
  %cmp15.i.i = icmp eq ptr %spo_must_enforce, null
  br i1 %cmp15.i.i, label %if.end14.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge, label %if.end17.i.i

if.end14.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge: ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit.i

if.end17.i.i:                                     ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %3)
  %cmp18.not.i.i = icmp ugt i32 %3, 3
  br i1 %cmp18.not.i.i, label %if.end17.i.i.for.body.i.preheader.i_crit_edge, label %if.then19.i.i

if.end17.i.i.for.body.i.preheader.i_crit_edge:    ; preds = %if.end17.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader.i

if.then19.i.i:                                    ; preds = %if.end17.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %3)
  %cmp20.i.not.i = icmp eq i32 %3, 3
  br i1 %cmp20.i.not.i, label %if.then19.i.i.for.body.i.preheader.i_crit_edge, label %if.end24.i.i

if.then19.i.i.for.body.i.preheader.i_crit_edge:   ; preds = %if.then19.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader.i

if.end24.i.i:                                     ; preds = %if.then19.i.i
  %add.ptr.i.i = getelementptr i32, ptr %spo_must_enforce, i32 %3
  %.neg.i = mul nsw i32 %3, -4
  %mul22.i.i = add nsw i32 %.neg.i, 12
  %4 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %mul22.i.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp25.not47.i.i = icmp eq i32 %3, 0
  br i1 %cmp25.not47.i.i, label %if.end24.i.i.if.end_crit_edge, label %if.end24.i.i.for.body.i.preheader.i_crit_edge

if.end24.i.i.for.body.i.preheader.i_crit_edge:    ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader.i

if.end24.i.i.if.end_crit_edge:                    ; preds = %if.end24.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

for.body.i.preheader.i:                           ; preds = %if.end24.i.i.for.body.i.preheader.i_crit_edge, %if.then19.i.i.for.body.i.preheader.i_crit_edge, %if.end17.i.i.for.body.i.preheader.i_crit_edge
  %retval1.0.i7.i = phi i32 [ %3, %if.end24.i.i.for.body.i.preheader.i_crit_edge ], [ 3, %if.then19.i.i.for.body.i.preheader.i_crit_edge ], [ -90, %if.end17.i.i.for.body.i.preheader.i_crit_edge ]
  %array_size.addr.0.i6.i = phi i32 [ %3, %if.end24.i.i.for.body.i.preheader.i_crit_edge ], [ 3, %if.then19.i.i.for.body.i.preheader.i_crit_edge ], [ 3, %if.end17.i.i.for.body.i.preheader.i_crit_edge ]
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %for.body.i.preheader.i
  %p.050.i.i = phi ptr [ %incdec.ptr.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %call3.i.i, %for.body.i.preheader.i ]
  %array_size.addr.149.i.i = phi i32 [ %dec.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %array_size.addr.0.i6.i, %for.body.i.preheader.i ]
  %array.addr.048.i.i = phi ptr [ %incdec.ptr27.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %spo_must_enforce, %for.body.i.preheader.i ]
  %5 = ptrtoint ptr %p.050.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %p.050.i.i, align 4
  %7 = ptrtoint ptr %array.addr.048.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %array.addr.048.i.i, align 4
  %incdec.ptr.i.i = getelementptr i32, ptr %p.050.i.i, i32 1
  %incdec.ptr27.i.i = getelementptr i32, ptr %array.addr.048.i.i, i32 1
  %dec.i.i = add i32 %array_size.addr.149.i.i, -1
  %cmp25.not.i.i = icmp eq i32 %dec.i.i, 0
  br i1 %cmp25.not.i.i, label %for.body.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i

for.body.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge: ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit.i

xdr_stream_decode_uint32_array.exit.i:            ; preds = %for.body.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge, %if.end14.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge
  %retval.0.i.i = phi i32 [ %3, %if.end14.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge ], [ %retval1.0.i7.i, %for.body.i.i.xdr_stream_decode_uint32_array.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -74, i32 %retval.0.i.i)
  %cmp.i = icmp eq i32 %retval.0.i.i, -74
  br i1 %cmp.i, label %xdr_stream_decode_uint32_array.exit.i.cleanup_crit_edge, label %xdr_stream_decode_uint32_array.exit.i.if.end_crit_edge

xdr_stream_decode_uint32_array.exit.i.if.end_crit_edge: ; preds = %xdr_stream_decode_uint32_array.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

xdr_stream_decode_uint32_array.exit.i.cleanup_crit_edge: ; preds = %xdr_stream_decode_uint32_array.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %xdr_stream_decode_uint32_array.exit.i.if.end_crit_edge, %if.end24.i.i.if.end_crit_edge
  %spo_must_allow = getelementptr %struct.nfsd4_exchange_id, ptr %exid, i32 0, i32 7
  %8 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %argp, align 32
  %call.i.i.i9 = tail call ptr @xdr_inline_decode(ptr noundef %9, i32 noundef 4) #16
  %tobool.not.i.i.i10 = icmp eq ptr %call.i.i.i9, null
  br i1 %tobool.not.i.i.i10, label %if.end.cleanup_crit_edge, label %if.end.i.i14, !prof !108

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i.i14:                                     ; preds = %if.end
  %10 = ptrtoint ptr %call.i.i.i9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %call.i.i.i9, align 4
  %mul.i.i11 = shl i32 %11, 2
  %call3.i.i12 = tail call ptr @xdr_inline_decode(ptr noundef %9, i32 noundef %mul.i.i11) #16
  %tobool4.not.i.i13 = icmp eq ptr %call3.i.i12, null
  br i1 %tobool4.not.i.i13, label %if.end.i.i14.cleanup_crit_edge, label %if.end14.i.i16, !prof !108

if.end.i.i14.cleanup_crit_edge:                   ; preds = %if.end.i.i14
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end14.i.i16:                                   ; preds = %if.end.i.i14
  %cmp15.i.i15 = icmp eq ptr %spo_must_allow, null
  br i1 %cmp15.i.i15, label %if.end14.i.i16.xdr_stream_decode_uint32_array.exit.i39_crit_edge, label %if.end17.i.i18

if.end14.i.i16.xdr_stream_decode_uint32_array.exit.i39_crit_edge: ; preds = %if.end14.i.i16
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit.i39

if.end17.i.i18:                                   ; preds = %if.end14.i.i16
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %11)
  %cmp18.not.i.i17 = icmp ugt i32 %11, 3
  br i1 %cmp18.not.i.i17, label %if.end17.i.i18.for.body.i.preheader.i28_crit_edge, label %if.then19.i.i20

if.end17.i.i18.for.body.i.preheader.i28_crit_edge: ; preds = %if.end17.i.i18
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader.i28

if.then19.i.i20:                                  ; preds = %if.end17.i.i18
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %11)
  %cmp20.i.not.i19 = icmp eq i32 %11, 3
  br i1 %cmp20.i.not.i19, label %if.then19.i.i20.for.body.i.preheader.i28_crit_edge, label %if.end24.i.i25

if.then19.i.i20.for.body.i.preheader.i28_crit_edge: ; preds = %if.then19.i.i20
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader.i28

if.end24.i.i25:                                   ; preds = %if.then19.i.i20
  %add.ptr.i.i21 = getelementptr i32, ptr %spo_must_allow, i32 %11
  %.neg.i22 = mul nsw i32 %11, -4
  %mul22.i.i23 = add nsw i32 %.neg.i22, 12
  %12 = call ptr @memset(ptr %add.ptr.i.i21, i32 0, i32 %mul22.i.i23)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %cmp25.not47.i.i24 = icmp eq i32 %11, 0
  br i1 %cmp25.not47.i.i24, label %if.end24.i.i25._crit_edge, label %if.end24.i.i25.for.body.i.preheader.i28_crit_edge

if.end24.i.i25.for.body.i.preheader.i28_crit_edge: ; preds = %if.end24.i.i25
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.preheader.i28

if.end24.i.i25._crit_edge:                        ; preds = %if.end24.i.i25
  call void @__sanitizer_cov_trace_pc() #18
  br label %16

for.body.i.preheader.i28:                         ; preds = %if.end24.i.i25.for.body.i.preheader.i28_crit_edge, %if.then19.i.i20.for.body.i.preheader.i28_crit_edge, %if.end17.i.i18.for.body.i.preheader.i28_crit_edge
  %retval1.0.i7.i26 = phi i32 [ %11, %if.end24.i.i25.for.body.i.preheader.i28_crit_edge ], [ 3, %if.then19.i.i20.for.body.i.preheader.i28_crit_edge ], [ -90, %if.end17.i.i18.for.body.i.preheader.i28_crit_edge ]
  %array_size.addr.0.i6.i27 = phi i32 [ %11, %if.end24.i.i25.for.body.i.preheader.i28_crit_edge ], [ 3, %if.then19.i.i20.for.body.i.preheader.i28_crit_edge ], [ 3, %if.end17.i.i18.for.body.i.preheader.i28_crit_edge ]
  br label %for.body.i.i36

for.body.i.i36:                                   ; preds = %for.body.i.i36.for.body.i.i36_crit_edge, %for.body.i.preheader.i28
  %p.050.i.i29 = phi ptr [ %incdec.ptr.i.i32, %for.body.i.i36.for.body.i.i36_crit_edge ], [ %call3.i.i12, %for.body.i.preheader.i28 ]
  %array_size.addr.149.i.i30 = phi i32 [ %dec.i.i34, %for.body.i.i36.for.body.i.i36_crit_edge ], [ %array_size.addr.0.i6.i27, %for.body.i.preheader.i28 ]
  %array.addr.048.i.i31 = phi ptr [ %incdec.ptr27.i.i33, %for.body.i.i36.for.body.i.i36_crit_edge ], [ %spo_must_allow, %for.body.i.preheader.i28 ]
  %13 = ptrtoint ptr %p.050.i.i29 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %p.050.i.i29, align 4
  %15 = ptrtoint ptr %array.addr.048.i.i31 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %array.addr.048.i.i31, align 4
  %incdec.ptr.i.i32 = getelementptr i32, ptr %p.050.i.i29, i32 1
  %incdec.ptr27.i.i33 = getelementptr i32, ptr %array.addr.048.i.i31, i32 1
  %dec.i.i34 = add i32 %array_size.addr.149.i.i30, -1
  %cmp25.not.i.i35 = icmp eq i32 %dec.i.i34, 0
  br i1 %cmp25.not.i.i35, label %for.body.i.i36.xdr_stream_decode_uint32_array.exit.i39_crit_edge, label %for.body.i.i36.for.body.i.i36_crit_edge

for.body.i.i36.for.body.i.i36_crit_edge:          ; preds = %for.body.i.i36
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i.i36

for.body.i.i36.xdr_stream_decode_uint32_array.exit.i39_crit_edge: ; preds = %for.body.i.i36
  call void @__sanitizer_cov_trace_pc() #18
  br label %xdr_stream_decode_uint32_array.exit.i39

xdr_stream_decode_uint32_array.exit.i39:          ; preds = %for.body.i.i36.xdr_stream_decode_uint32_array.exit.i39_crit_edge, %if.end14.i.i16.xdr_stream_decode_uint32_array.exit.i39_crit_edge
  %retval.0.i.i37 = phi i32 [ %11, %if.end14.i.i16.xdr_stream_decode_uint32_array.exit.i39_crit_edge ], [ %retval1.0.i7.i26, %for.body.i.i36.xdr_stream_decode_uint32_array.exit.i39_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 -74, i32 %retval.0.i.i37)
  %cmp.i38 = icmp eq i32 %retval.0.i.i37, -74
  br i1 %cmp.i38, label %xdr_stream_decode_uint32_array.exit.i39.cleanup_crit_edge, label %xdr_stream_decode_uint32_array.exit.i39._crit_edge

xdr_stream_decode_uint32_array.exit.i39._crit_edge: ; preds = %xdr_stream_decode_uint32_array.exit.i39
  call void @__sanitizer_cov_trace_pc() #18
  br label %16

xdr_stream_decode_uint32_array.exit.i39.cleanup_crit_edge: ; preds = %xdr_stream_decode_uint32_array.exit.i39
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

16:                                               ; preds = %xdr_stream_decode_uint32_array.exit.i39._crit_edge, %if.end24.i.i25._crit_edge
  br label %cleanup

cleanup:                                          ; preds = %16, %xdr_stream_decode_uint32_array.exit.i39.cleanup_crit_edge, %if.end.i.i14.cleanup_crit_edge, %if.end.cleanup_crit_edge, %xdr_stream_decode_uint32_array.exit.i.cleanup_crit_edge, %if.end.i.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 10036, %entry.cleanup_crit_edge ], [ 10036, %if.end.i.i.cleanup_crit_edge ], [ 10036, %xdr_stream_decode_uint32_array.exit.i.cleanup_crit_edge ], [ 0, %16 ], [ 10036, %if.end.cleanup_crit_edge ], [ 10036, %if.end.i.i14.cleanup_crit_edge ], [ 10036, %xdr_stream_decode_uint32_array.exit.i39.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_decode_ssv_sp_parms(ptr nocapture noundef readonly %argp, ptr noundef %exid) unnamed_addr #14 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @nfsd4_decode_state_protect_ops(ptr noundef %argp, ptr noundef %exid)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %if.end.cleanup_crit_edge, label %xdr_stream_decode_u32.exit, !prof !108

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

xdr_stream_decode_u32.exit:                       ; preds = %if.end
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  br label %while.cond

while.cond:                                       ; preds = %if.end.i47.while.cond_crit_edge, %xdr_stream_decode_u32.exit
  %count.1 = phi i32 [ %3, %xdr_stream_decode_u32.exit ], [ %dec, %if.end.i47.while.cond_crit_edge ]
  %dec = add i32 %count.1, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count.1)
  %tobool4.not = icmp eq i32 %count.1, 0
  %4 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %argp, align 32
  %call.i49 = tail call ptr @xdr_inline_decode(ptr noundef %5, i32 noundef 4) #16
  %tobool.not.i50 = icmp eq ptr %call.i49, null
  br i1 %tobool4.not, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond
  br i1 %tobool.not.i50, label %while.body.cleanup_crit_edge, label %if.end.i47, !prof !108

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i47:                                       ; preds = %while.body
  %6 = ptrtoint ptr %call.i49 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %call.i49, align 4
  %8 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %argp, align 32
  %call5.i = tail call ptr @xdr_inline_decode(ptr noundef %9, i32 noundef %7) #16
  %tobool6.not.i = icmp eq ptr %call5.i, null
  br i1 %tobool6.not.i, label %if.end.i47.cleanup_crit_edge, label %if.end.i47.while.cond_crit_edge

if.end.i47.while.cond_crit_edge:                  ; preds = %if.end.i47
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.cond

if.end.i47.cleanup_crit_edge:                     ; preds = %if.end.i47
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

while.end:                                        ; preds = %while.cond
  br i1 %tobool.not.i50, label %while.end.cleanup_crit_edge, label %xdr_stream_decode_u32.exit53, !prof !108

while.end.cleanup_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

xdr_stream_decode_u32.exit53:                     ; preds = %while.end
  %10 = ptrtoint ptr %call.i49 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %call.i49, align 4
  br label %while.cond14

while.cond14:                                     ; preds = %if.end.i57.while.cond14_crit_edge, %xdr_stream_decode_u32.exit53
  %count.3 = phi i32 [ %11, %xdr_stream_decode_u32.exit53 ], [ %dec15, %if.end.i57.while.cond14_crit_edge ]
  %dec15 = add i32 %count.3, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count.3)
  %tobool16.not = icmp eq i32 %count.3, 0
  %12 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %argp, align 32
  %call.i63 = tail call ptr @xdr_inline_decode(ptr noundef %13, i32 noundef 4) #16
  %tobool.not.i64 = icmp eq ptr %call.i63, null
  br i1 %tobool16.not, label %while.end22, label %while.body17

while.body17:                                     ; preds = %while.cond14
  br i1 %tobool.not.i64, label %while.body17.cleanup_crit_edge, label %if.end.i57, !prof !108

while.body17.cleanup_crit_edge:                   ; preds = %while.body17
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end.i57:                                       ; preds = %while.body17
  %14 = ptrtoint ptr %call.i63 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %call.i63, align 4
  %16 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %argp, align 32
  %call5.i58 = tail call ptr @xdr_inline_decode(ptr noundef %17, i32 noundef %15) #16
  %tobool6.not.i59 = icmp eq ptr %call5.i58, null
  br i1 %tobool6.not.i59, label %if.end.i57.cleanup_crit_edge, label %if.end.i57.while.cond14_crit_edge

if.end.i57.while.cond14_crit_edge:                ; preds = %if.end.i57
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.cond14

if.end.i57.cleanup_crit_edge:                     ; preds = %if.end.i57
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

while.end22:                                      ; preds = %while.cond14
  br i1 %tobool.not.i64, label %while.end22.cleanup_crit_edge, label %if.end27, !prof !108

while.end22.cleanup_crit_edge:                    ; preds = %while.end22
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end27:                                         ; preds = %while.end22
  %18 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %argp, align 32
  %call.i68 = tail call ptr @xdr_inline_decode(ptr noundef %19, i32 noundef 4) #16
  %tobool.not.i69 = icmp eq ptr %call.i68, null
  br i1 %tobool.not.i69, label %20, label %if.end27.cleanup_crit_edge, !prof !108

if.end27.cleanup_crit_edge:                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

20:                                               ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %20, %if.end27.cleanup_crit_edge, %while.end22.cleanup_crit_edge, %if.end.i57.cleanup_crit_edge, %while.body17.cleanup_crit_edge, %while.end.cleanup_crit_edge, %if.end.i47.cleanup_crit_edge, %while.body.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ 10036, %20 ], [ 0, %if.end27.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ], [ 10036, %while.end.cleanup_crit_edge ], [ 10036, %while.end22.cleanup_crit_edge ], [ 10036, %while.body17.cleanup_crit_edge ], [ 10036, %if.end.i57.cleanup_crit_edge ], [ 10036, %while.body.cleanup_crit_edge ], [ 10036, %if.end.i47.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @nfsd4_decode_nl4_server(ptr nocapture noundef readonly %argp, ptr nocapture noundef %ns) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %argp, align 32
  %call.i = tail call ptr @xdr_inline_decode(ptr noundef %1, i32 noundef 4) #16
  %tobool.not.i = icmp eq ptr %call.i, null
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end, !prof !108

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %call.i, align 4
  %4 = ptrtoint ptr %ns to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %3, ptr %ns, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %3)
  %cond = icmp eq i32 %3, 3
  br i1 %cond, label %sw.bb, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

sw.bb:                                            ; preds = %if.end
  %u = getelementptr inbounds %struct.nl4_server, ptr %ns, i32 0, i32 1
  %5 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %argp, align 32
  %netid_len = getelementptr inbounds %struct.nl4_server, ptr %ns, i32 0, i32 1, i32 0, i32 1, i32 60
  %call.i54 = tail call ptr @xdr_inline_decode(ptr noundef %6, i32 noundef 4) #16
  %tobool.not.i55 = icmp eq ptr %call.i54, null
  br i1 %tobool.not.i55, label %sw.bb.cleanup_crit_edge, label %if.end6, !prof !108

sw.bb.cleanup_crit_edge:                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end6:                                          ; preds = %sw.bb
  %7 = ptrtoint ptr %call.i54 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %call.i54, align 4
  %9 = ptrtoint ptr %netid_len to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %netid_len, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %8)
  %cmp8 = icmp ugt i32 %8, 5
  br i1 %cmp8, label %if.end6.cleanup_crit_edge, label %if.end10

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end10:                                         ; preds = %if.end6
  %10 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %argp, align 32
  %call13 = tail call ptr @xdr_inline_decode(ptr noundef %11, i32 noundef %8) #16
  %tobool.not = icmp eq ptr %call13, null
  br i1 %tobool.not, label %if.end10.cleanup_crit_edge, label %if.end15

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end15:                                         ; preds = %if.end10
  %12 = ptrtoint ptr %netid_len to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %netid_len, align 4
  %14 = call ptr @memcpy(ptr %u, ptr %call13, i32 %13)
  %15 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %argp, align 32
  %addr_len = getelementptr inbounds %struct.nl4_server, ptr %ns, i32 0, i32 1, i32 0, i32 1, i32 64
  %call.i59 = tail call ptr @xdr_inline_decode(ptr noundef %16, i32 noundef 4) #16
  %tobool.not.i60 = icmp eq ptr %call.i59, null
  br i1 %tobool.not.i60, label %if.end15.cleanup_crit_edge, label %if.end21, !prof !108

if.end15.cleanup_crit_edge:                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end21:                                         ; preds = %if.end15
  %17 = ptrtoint ptr %call.i59 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %call.i59, align 4
  %19 = ptrtoint ptr %addr_len to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %18, ptr %addr_len, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 57, i32 %18)
  %cmp23 = icmp ugt i32 %18, 57
  br i1 %cmp23, label %if.end21.cleanup_crit_edge, label %if.end25

if.end21.cleanup_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end25:                                         ; preds = %if.end21
  %20 = ptrtoint ptr %argp to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %argp, align 32
  %call28 = tail call ptr @xdr_inline_decode(ptr noundef %21, i32 noundef %18) #16
  %tobool29.not = icmp eq ptr %call28, null
  br i1 %tobool29.not, label %if.end25.cleanup_crit_edge, label %if.end31

if.end25.cleanup_crit_edge:                       ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end31:                                         ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #18
  %addr = getelementptr inbounds %struct.nl4_server, ptr %ns, i32 0, i32 1, i32 0, i32 1, i32 1
  %22 = ptrtoint ptr %addr_len to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %addr_len, align 4
  %24 = call ptr @memcpy(ptr %addr, ptr %call28, i32 %23)
  br label %cleanup

cleanup:                                          ; preds = %if.end31, %if.end25.cleanup_crit_edge, %if.end21.cleanup_crit_edge, %if.end15.cleanup_crit_edge, %if.end10.cleanup_crit_edge, %if.end6.cleanup_crit_edge, %sw.bb.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end31 ], [ 10036, %if.end6.cleanup_crit_edge ], [ 10036, %if.end10.cleanup_crit_edge ], [ 10036, %if.end21.cleanup_crit_edge ], [ 10036, %if.end25.cleanup_crit_edge ], [ 10036, %if.end.cleanup_crit_edge ], [ 10036, %entry.cleanup_crit_edge ], [ 10036, %sw.bb.cleanup_crit_edge ], [ 10036, %if.end15.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @nfsd4_vbuf_from_vector(ptr nocapture noundef %argp, ptr nocapture noundef readonly %xdr, ptr nocapture noundef writeonly %bufp, i32 noundef %buflen) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %pages1 = getelementptr inbounds %struct.xdr_buf, ptr %xdr, i32 0, i32 3
  %0 = ptrtoint ptr %pages1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %pages1, align 4
  %iov_len = getelementptr inbounds %struct.kvec, ptr %xdr, i32 0, i32 1
  %2 = ptrtoint ptr %iov_len to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %iov_len, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %3, i32 %buflen)
  %cmp.not = icmp ult i32 %3, %buflen
  br i1 %cmp.not, label %if.end8.i.i, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %4 = ptrtoint ptr %xdr to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %xdr, align 4
  br label %cleanup.sink.split

if.end8.i.i:                                      ; preds = %entry
  %add.i = add i32 %buflen, 4
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %add.i, i32 noundef 3264) #20
  %tobool.not.i = icmp eq ptr %call9.i.i, null
  br i1 %tobool.not.i, label %if.end8.i.i.cleanup_crit_edge, label %svcxdr_tmpalloc.exit

if.end8.i.i.cleanup_crit_edge:                    ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

svcxdr_tmpalloc.exit:                             ; preds = %if.end8.i.i
  %to_free.i = getelementptr inbounds %struct.nfsd4_compoundargs, ptr %argp, i32 0, i32 1
  %6 = ptrtoint ptr %to_free.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %to_free.i, align 4
  %8 = ptrtoint ptr %call9.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %7, ptr %call9.i.i, align 128
  store ptr %call9.i.i, ptr %to_free.i, align 4
  %buf.i = getelementptr inbounds %struct.svcxdr_tmpbuf, ptr %call9.i.i, i32 0, i32 1
  %9 = ptrtoint ptr %xdr to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %xdr, align 4
  %11 = ptrtoint ptr %iov_len to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %iov_len, align 4
  %13 = call ptr @memcpy(ptr %buf.i, ptr %10, i32 %12)
  %sub = sub i32 %buflen, %12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp10.not3 = icmp eq i32 %sub, 0
  br i1 %cmp10.not3, label %svcxdr_tmpalloc.exit.cleanup.sink.split_crit_edge, label %while.body.preheader

svcxdr_tmpalloc.exit.cleanup.sink.split_crit_edge: ; preds = %svcxdr_tmpalloc.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

while.body.preheader:                             ; preds = %svcxdr_tmpalloc.exit
  %add.ptr = getelementptr i8, ptr %buf.i, i32 %12
  br label %while.body

while.body:                                       ; preds = %while.body.while.body_crit_edge, %while.body.preheader
  %dp.06 = phi ptr [ %add.ptr15, %while.body.while.body_crit_edge ], [ %add.ptr, %while.body.preheader ]
  %pages.05 = phi ptr [ %incdec.ptr, %while.body.while.body_crit_edge ], [ %1, %while.body.preheader ]
  %buflen.addr.04 = phi i32 [ %sub14, %while.body.while.body_crit_edge ], [ %sub, %while.body.preheader ]
  %14 = tail call i32 @llvm.umin.i32(i32 %buflen.addr.04, i32 4096)
  %15 = ptrtoint ptr %pages.05 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %pages.05, align 4
  %call13 = tail call ptr @page_address(ptr noundef %16) #16
  %17 = call ptr @memcpy(ptr %dp.06, ptr %call13, i32 %14)
  %sub14 = sub i32 %buflen.addr.04, %14
  %add.ptr15 = getelementptr i8, ptr %dp.06, i32 %14
  %incdec.ptr = getelementptr ptr, ptr %pages.05, i32 1
  %cmp10.not = icmp eq i32 %sub14, 0
  br i1 %cmp10.not, label %while.body.cleanup.sink.split_crit_edge, label %while.body.while.body_crit_edge

while.body.while.body_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

while.body.cleanup.sink.split_crit_edge:          ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %while.body.cleanup.sink.split_crit_edge, %svcxdr_tmpalloc.exit.cleanup.sink.split_crit_edge, %if.then
  %buf.i.sink = phi ptr [ %5, %if.then ], [ %buf.i, %svcxdr_tmpalloc.exit.cleanup.sink.split_crit_edge ], [ %buf.i, %while.body.cleanup.sink.split_crit_edge ]
  %18 = ptrtoint ptr %bufp to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %buf.i.sink, ptr %bufp, align 4
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end8.i.i.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @page_address(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_nfsd_compound_decode_err(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #15

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #15

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #15

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #15

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #16

declare void @__sanitizer_cov_trace_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #17 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 39)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #17 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 39)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { nounwind readonly }
attributes #6 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { null_pointer_is_valid allocsize(1) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #10 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #11 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #13 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #16 = { nounwind }
attributes #17 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #18 = { nomerge }
attributes #19 = { nounwind allocsize(2) }
attributes #20 = { nounwind allocsize(0) }
attributes #21 = { cold nounwind }
attributes #22 = { nounwind allocsize(1) }
attributes #23 = { nobuiltin }

!llvm.asan.globals = !{!0, !2, !4, !5, !7, !9, !11, !13, !15, !16, !17, !19, !20, !21, !23, !24, !26, !27, !28, !29, !31, !32, !33, !35, !36, !37, !39, !40, !41, !42, !44, !46, !48, !50, !52, !54, !55, !56, !57, !59, !61, !62, !63, !64, !66, !68, !69, !70, !72, !73, !75, !76, !77, !78, !80, !82, !83, !84, !85, !87, !88, !89, !90, !92}
!llvm.named.register.sp = !{!93}
!llvm.module.flags = !{!94, !95, !96, !97, !98, !99, !100, !101}
!llvm.ident = !{!102}

!0 = !{ptr @nfsd_suppattrs, !1, !"nfsd_suppattrs", i1 false, i1 false}
!1 = !{!"../fs/nfsd/nfs4xdr.c", i32 66, i32 11}
!2 = distinct !{null, !3, !"__already_done", i1 false, i1 false}
!3 = !{!"../fs/nfsd/nfs4xdr.c", i32 5280, i32 3}
!4 = !{ptr @.str, !3, !"<string literal>", i1 false, i1 false}
!5 = distinct !{null, !6, !"__already_done", i1 false, i1 false}
!6 = !{!"../fs/nfsd/nfs4xdr.c", i32 5299, i32 3}
!7 = distinct !{null, !8, !"__already_done", i1 false, i1 false}
!8 = !{!"../fs/nfsd/nfs4xdr.c", i32 5375, i32 3}
!9 = distinct !{null, !10, !"__already_done", i1 false, i1 false}
!10 = !{!"../fs/nfsd/nfs4xdr.c", i32 5421, i32 2}
!11 = !{ptr @.str.1, !12, !"<string literal>", i1 false, i1 false}
!12 = !{!"../fs/nfsd/nfs4xdr.c", i32 3324, i32 7}
!13 = distinct !{null, !14, !"__warned", i1 false, i1 false}
!14 = !{!"../include/net/netns/generic.h", i32 45, i32 7}
!15 = !{ptr @.str.2, !14, !"<string literal>", i1 false, i1 false}
!16 = !{ptr @.str.3, !14, !"<string literal>", i1 false, i1 false}
!17 = distinct !{null, !18, !"__warned", i1 false, i1 false}
!18 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!19 = !{ptr @.str.4, !18, !"<string literal>", i1 false, i1 false}
!20 = !{ptr @.str.5, !18, !"<string literal>", i1 false, i1 false}
!21 = distinct !{null, !22, !"__warned", i1 false, i1 false}
!22 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!23 = !{ptr @.str.6, !22, !"<string literal>", i1 false, i1 false}
!24 = !{ptr @.str.7, !25, !"<string literal>", i1 false, i1 false}
!25 = !{!"../fs/nfsd/nfs4xdr.c", i32 2563, i32 2}
!26 = !{ptr @.str.8, !25, !"<string literal>", i1 false, i1 false}
!27 = !{ptr @nfsd4_encode_path._entry, !25, !"_entry", i1 false, i1 false}
!28 = !{ptr @nfsd4_encode_path._entry_ptr, !25, !"_entry_ptr", i1 false, i1 false}
!29 = !{ptr @.str.10, !30, !"<string literal>", i1 false, i1 false}
!30 = !{!"../fs/nfsd/nfs4xdr.c", i32 2607, i32 3}
!31 = !{ptr @nfsd4_encode_path._entry.9, !30, !"_entry", i1 false, i1 false}
!32 = !{ptr @nfsd4_encode_path._entry_ptr.11, !30, !"_entry_ptr", i1 false, i1 false}
!33 = !{ptr @.str.13, !34, !"<string literal>", i1 false, i1 false}
!34 = !{!"../fs/nfsd/nfs4xdr.c", i32 2615, i32 2}
!35 = !{ptr @nfsd4_encode_path._entry.12, !34, !"_entry", i1 false, i1 false}
!36 = !{ptr @nfsd4_encode_path._entry_ptr.14, !34, !"_entry_ptr", i1 false, i1 false}
!37 = !{ptr @.str.15, !38, !"<string literal>", i1 false, i1 false}
!38 = !{!"../fs/nfsd/nfs4xdr.c", i32 2476, i32 2}
!39 = !{ptr @.str.16, !38, !"<string literal>", i1 false, i1 false}
!40 = !{ptr @nfsd4_encode_components_esc._entry, !38, !"_entry", i1 false, i1 false}
!41 = !{ptr @nfsd4_encode_components_esc._entry_ptr, !38, !"_entry_ptr", i1 false, i1 false}
!42 = !{ptr @nfsd4_enc_ops, !43, !"nfsd4_enc_ops", i1 false, i1 false}
!43 = !{!"../fs/nfsd/nfs4xdr.c", i32 5167, i32 24}
!44 = distinct !{null, !45, !"__already_done", i1 false, i1 false}
!45 = !{!"../fs/nfsd/nfs4xdr.c", i32 3979, i32 3}
!46 = distinct !{null, !47, !"__already_done", i1 false, i1 false}
!47 = !{!"../fs/nfsd/nfs4xdr.c", i32 3984, i32 3}
!48 = distinct !{null, !49, !"__already_done", i1 false, i1 false}
!49 = !{!"../fs/nfsd/nfs4xdr.c", i32 4134, i32 3}
!50 = distinct !{null, !51, !"report", i1 false, i1 false}
!51 = !{!"../fs/nfsd/nfs4xdr.c", i32 4180, i32 14}
!52 = !{ptr @.str.18, !53, !"<string literal>", i1 false, i1 false}
!53 = !{!"../fs/nfsd/nfs4xdr.c", i32 4230, i32 5}
!54 = !{ptr @.str.19, !53, !"<string literal>", i1 false, i1 false}
!55 = !{ptr @nfsd4_do_encode_secinfo._entry, !53, !"_entry", i1 false, i1 false}
!56 = !{ptr @nfsd4_do_encode_secinfo._entry_ptr, !53, !"_entry_ptr", i1 false, i1 false}
!57 = distinct !{null, !58, !"__already_done", i1 false, i1 false}
!58 = !{!"../fs/nfsd/nfs4xdr.c", i32 4379, i32 3}
!59 = !{ptr @.str.20, !60, !"<string literal>", i1 false, i1 false}
!60 = !{!"../fs/nfsd/nfs4xdr.c", i32 4548, i32 2}
!61 = !{ptr @.str.21, !60, !"<string literal>", i1 false, i1 false}
!62 = !{ptr @nfsd4_encode_getdeviceinfo._entry, !60, !"_entry", i1 false, i1 false}
!63 = !{ptr @nfsd4_encode_getdeviceinfo._entry_ptr, !60, !"_entry_ptr", i1 false, i1 false}
!64 = distinct !{null, !65, !"__already_done", i1 false, i1 false}
!65 = !{!"../fs/nfsd/nfs4xdr.c", i32 4685, i32 3}
!66 = distinct !{null, !67, !"__already_done", i1 false, i1 false}
!67 = !{!"../fs/nfsd/trace.h", i32 163, i32 1}
!68 = !{ptr @.str.22, !67, !"<string literal>", i1 false, i1 false}
!69 = distinct !{null, !67, !"__warned", i1 false, i1 false}
!70 = distinct !{null, !71, !"__already_done", i1 false, i1 false}
!71 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!72 = !{ptr @.str.23, !71, !"<string literal>", i1 false, i1 false}
!73 = !{ptr @.str.24, !74, !"<string literal>", i1 false, i1 false}
!74 = !{!"../fs/nfsd/nfs4xdr.c", i32 2356, i32 4}
!75 = !{ptr @.str.25, !74, !"<string literal>", i1 false, i1 false}
!76 = !{ptr @nfsd4_decode_compound._entry, !74, !"_entry", i1 false, i1 false}
!77 = !{ptr @nfsd4_decode_compound._entry_ptr, !74, !"_entry_ptr", i1 false, i1 false}
!78 = !{ptr @nfsd4_dec_ops, !79, !"nfsd4_dec_ops", i1 false, i1 false}
!79 = !{!"../fs/nfsd/nfs4xdr.c", i32 2208, i32 24}
!80 = !{ptr @.str.26, !81, !"<string literal>", i1 false, i1 false}
!81 = !{!"../fs/nfsd/nfs4xdr.c", i32 680, i32 4}
!82 = !{ptr @.str.27, !81, !"<string literal>", i1 false, i1 false}
!83 = !{ptr @nfsd4_decode_authsys_parms._entry, !81, !"_entry", i1 false, i1 false}
!84 = !{ptr @nfsd4_decode_authsys_parms._entry_ptr, !81, !"_entry_ptr", i1 false, i1 false}
!85 = !{ptr @.str.28, !86, !"<string literal>", i1 false, i1 false}
!86 = !{!"../fs/nfsd/nfs4xdr.c", i32 694, i32 2}
!87 = !{ptr @.str.29, !86, !"<string literal>", i1 false, i1 false}
!88 = !{ptr @nfsd4_decode_gss_cb_handles4._entry, !86, !"_entry", i1 false, i1 false}
!89 = !{ptr @nfsd4_decode_gss_cb_handles4._entry_ptr, !86, !"_entry_ptr", i1 false, i1 false}
!90 = distinct !{null, !91, !"__already_done", i1 false, i1 false}
!91 = !{!"../fs/nfsd/trace.h", i32 135, i32 1}
!92 = distinct !{null, !91, !"__warned", i1 false, i1 false}
!93 = !{!"sp"}
!94 = !{i32 1, !"wchar_size", i32 2}
!95 = !{i32 1, !"min_enum_size", i32 4}
!96 = !{i32 8, !"branch-target-enforcement", i32 0}
!97 = !{i32 8, !"sign-return-address", i32 0}
!98 = !{i32 8, !"sign-return-address-all", i32 0}
!99 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!100 = !{i32 7, !"uwtable", i32 1}
!101 = !{i32 7, !"frame-pointer", i32 2}
!102 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!103 = !{!"auto-init"}
!104 = !{!"branch_weights", i32 2000, i32 1}
!105 = !{i64 2159331457, i64 2159331940, i64 2159331494, i64 2159331550, i64 2159331584, i64 2159331608, i64 2159331649, i64 2159331670, i64 2159331698, i64 2159331732}
!106 = !{!"branch_weights", i32 2146410443, i32 1073205}
!107 = !{i64 2159333094, i64 2159333577, i64 2159333131, i64 2159333187, i64 2159333221, i64 2159333245, i64 2159333286, i64 2159333307, i64 2159333335, i64 2159333369}
!108 = !{!"branch_weights", i32 1, i32 2000}
!109 = !{i64 2159404030, i64 2159404513, i64 2159404067, i64 2159404123, i64 2159404157, i64 2159404181, i64 2159404222, i64 2159404243, i64 2159404271, i64 2159404305}
!110 = !{i64 2148355454, i64 2148355459, i64 2148355472, i64 2148355516, i64 2148355550, i64 2148355571}
!111 = !{i64 2157932714}
!112 = !{i64 2157932965}
!113 = !{i64 2150071358}
!114 = !{i64 2150072394}
!115 = !{i64 2150062799}
!116 = !{i64 2150063065}
!117 = !{i64 2157573373}
!118 = !{i64 2148817021}
!119 = !{i64 2148731461, i64 2148731493, i64 2148731522, i64 2148731556, i64 2148731587, i64 2148731610}
!120 = !{i64 2150013256}
!121 = !{i64 2159347090, i64 2159347573, i64 2159347127, i64 2159347183, i64 2159347217, i64 2159347241, i64 2159347282, i64 2159347303, i64 2159347331, i64 2159347365}
!122 = !{i64 2148728996, i64 2148729028, i64 2148729057, i64 2148729091, i64 2148729122, i64 2148729145}
!123 = !{i64 1132146, i64 1132207}
!124 = !{i64 1134878}
!125 = !{i64 1135163}
!126 = !{i64 2153049330}
!127 = !{i64 2153049172}
!128 = !{i64 2153049500}
!129 = !{i64 2149905327}
!130 = !{i64 2157914761}
!131 = !{i64 2157915060}
