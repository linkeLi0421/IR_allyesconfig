; ModuleID = '/llk/IR_all_yes/fs/nfsd/trace.c_pt.bc'
source_filename = "../fs/nfsd/trace.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_eval_map = type { ptr, ptr, i32 }
%struct.trace_event_fields = type { ptr, %union.anon.184 }
%union.anon.184 = type { %struct.anon.185 }
%struct.anon.185 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.186, %struct.trace_event, ptr, ptr, %union.anon.187, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.186 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.187 = type { ptr }
%union.anon.188 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.189 = type { %struct.bpf_raw_event_map }
%union.anon.190 = type { %struct.bpf_raw_event_map }
%union.anon.191 = type { %struct.bpf_raw_event_map }
%union.anon.192 = type { %struct.bpf_raw_event_map }
%union.anon.193 = type { %struct.bpf_raw_event_map }
%union.anon.194 = type { %struct.bpf_raw_event_map }
%union.anon.195 = type { %struct.bpf_raw_event_map }
%union.anon.196 = type { %struct.bpf_raw_event_map }
%union.anon.197 = type { %struct.bpf_raw_event_map }
%union.anon.198 = type { %struct.bpf_raw_event_map }
%union.anon.199 = type { %struct.bpf_raw_event_map }
%union.anon.200 = type { %struct.bpf_raw_event_map }
%union.anon.201 = type { %struct.bpf_raw_event_map }
%union.anon.202 = type { %struct.bpf_raw_event_map }
%union.anon.203 = type { %struct.bpf_raw_event_map }
%union.anon.204 = type { %struct.bpf_raw_event_map }
%union.anon.205 = type { %struct.bpf_raw_event_map }
%union.anon.206 = type { %struct.bpf_raw_event_map }
%union.anon.207 = type { %struct.bpf_raw_event_map }
%union.anon.208 = type { %struct.bpf_raw_event_map }
%union.anon.209 = type { %struct.bpf_raw_event_map }
%union.anon.210 = type { %struct.bpf_raw_event_map }
%union.anon.211 = type { %struct.bpf_raw_event_map }
%union.anon.212 = type { %struct.bpf_raw_event_map }
%union.anon.213 = type { %struct.bpf_raw_event_map }
%union.anon.214 = type { %struct.bpf_raw_event_map }
%union.anon.215 = type { %struct.bpf_raw_event_map }
%union.anon.216 = type { %struct.bpf_raw_event_map }
%union.anon.217 = type { %struct.bpf_raw_event_map }
%union.anon.218 = type { %struct.bpf_raw_event_map }
%union.anon.219 = type { %struct.bpf_raw_event_map }
%union.anon.220 = type { %struct.bpf_raw_event_map }
%union.anon.221 = type { %struct.bpf_raw_event_map }
%union.anon.222 = type { %struct.bpf_raw_event_map }
%union.anon.223 = type { %struct.bpf_raw_event_map }
%union.anon.224 = type { %struct.bpf_raw_event_map }
%union.anon.225 = type { %struct.bpf_raw_event_map }
%union.anon.226 = type { %struct.bpf_raw_event_map }
%union.anon.227 = type { %struct.bpf_raw_event_map }
%union.anon.228 = type { %struct.bpf_raw_event_map }
%union.anon.229 = type { %struct.bpf_raw_event_map }
%union.anon.230 = type { %struct.bpf_raw_event_map }
%union.anon.231 = type { %struct.bpf_raw_event_map }
%union.anon.232 = type { %struct.bpf_raw_event_map }
%union.anon.233 = type { %struct.bpf_raw_event_map }
%union.anon.234 = type { %struct.bpf_raw_event_map }
%union.anon.235 = type { %struct.bpf_raw_event_map }
%union.anon.236 = type { %struct.bpf_raw_event_map }
%union.anon.237 = type { %struct.bpf_raw_event_map }
%union.anon.238 = type { %struct.bpf_raw_event_map }
%union.anon.239 = type { %struct.bpf_raw_event_map }
%union.anon.240 = type { %struct.bpf_raw_event_map }
%union.anon.241 = type { %struct.bpf_raw_event_map }
%union.anon.242 = type { %struct.bpf_raw_event_map }
%union.anon.243 = type { %struct.bpf_raw_event_map }
%union.anon.244 = type { %struct.bpf_raw_event_map }
%union.anon.245 = type { %struct.bpf_raw_event_map }
%union.anon.246 = type { %struct.bpf_raw_event_map }
%union.anon.247 = type { %struct.bpf_raw_event_map }
%union.anon.248 = type { %struct.bpf_raw_event_map }
%union.anon.249 = type { %struct.bpf_raw_event_map }
%union.anon.250 = type { %struct.bpf_raw_event_map }
%union.anon.251 = type { %struct.bpf_raw_event_map }
%union.anon.252 = type { %struct.bpf_raw_event_map }
%union.anon.253 = type { %struct.bpf_raw_event_map }
%union.anon.254 = type { %struct.bpf_raw_event_map }
%union.anon.255 = type { %struct.bpf_raw_event_map }
%union.anon.256 = type { %struct.bpf_raw_event_map }
%union.anon.257 = type { %struct.bpf_raw_event_map }
%union.anon.258 = type { %struct.bpf_raw_event_map }
%union.anon.259 = type { %struct.bpf_raw_event_map }
%union.anon.260 = type { %struct.bpf_raw_event_map }
%union.anon.261 = type { %struct.bpf_raw_event_map }
%union.anon.262 = type { %struct.bpf_raw_event_map }
%union.anon.263 = type { %struct.bpf_raw_event_map }
%union.anon.264 = type { %struct.bpf_raw_event_map }
%union.anon.265 = type { %struct.bpf_raw_event_map }
%union.anon.266 = type { %struct.bpf_raw_event_map }
%struct.trace_print_flags = type { i32, ptr }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.svc_rqst = type { %struct.list_head, %struct.callback_head, ptr, %struct.__kernel_sockaddr_storage, i32, %struct.__kernel_sockaddr_storage, i32, ptr, ptr, ptr, ptr, %struct.svc_cred, ptr, ptr, i32, %struct.xdr_buf, %struct.xdr_stream, %struct.xdr_stream, ptr, %struct.xdr_buf, [260 x ptr], ptr, ptr, ptr, %struct.pagevec, [259 x %struct.kvec], [259 x %struct.bio_vec], i32, i32, i32, i32, i32, i32, i32, i64, ptr, ptr, ptr, i32, i32, i32, i64, %struct.cache_req, ptr, ptr, ptr, ptr, %struct.spinlock, ptr, ptr }
%struct.callback_head = type { ptr, ptr }
%struct.__kernel_sockaddr_storage = type { %union.anon.134 }
%union.anon.134 = type { ptr, [124 x i8] }
%struct.svc_cred = type { %struct.kuid_t, %struct.kgid_t, ptr, i32, ptr, ptr, ptr, ptr }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.xdr_stream = type { ptr, ptr, ptr, ptr, %struct.kvec, ptr, i32, ptr }
%struct.kvec = type { ptr, i32 }
%struct.xdr_buf = type { [1 x %struct.kvec], [1 x %struct.kvec], ptr, ptr, i32, i32, i32, i32, i32 }
%struct.pagevec = type { i8, i8, [15 x ptr] }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.cache_req = type { ptr, i32 }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.2 }
%union.anon.2 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.svc_xprt = type { ptr, ptr, %struct.kref, %struct.list_head, %struct.list_head, i32, ptr, %struct.atomic_t, %struct.atomic_t, %struct.mutex, %struct.spinlock, ptr, %struct.list_head, %struct.__kernel_sockaddr_storage, i32, %struct.__kernel_sockaddr_storage, i32, [58 x i8], %struct.list_head, ptr, ptr, ptr, ptr }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.net = type { %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, ptr, ptr, ptr, %struct.idr, %struct.ns_common, %struct.ref_tracker_dir, %struct.list_head, ptr, ptr, %struct.ctl_table_set, ptr, ptr, ptr, ptr, ptr, %struct.raw_notifier_head, i32, ptr, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, [80 x i8], %struct.netns_ipv4, %struct.netns_ipv6, %struct.netns_ieee802154_lowpan, %struct.netns_sctp, %struct.netns_nf, %struct.netns_ct, %struct.netns_nftables, %struct.sk_buff_head, ptr, %struct.netns_bpf, [92 x i8], %struct.netns_xfrm, i64, ptr, %struct.netns_mpls, %struct.netns_can, %struct.netns_xdp, %struct.netns_mctp, ptr, ptr, %struct.netns_smc }
%struct.llist_node = type { ptr }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.ref_tracker_dir = type { %struct.spinlock, i32, %struct.refcount_struct, %struct.list_head, %struct.list_head }
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.38, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.38 = type { %struct.anon.39 }
%struct.anon.39 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.rb_root = type { ptr }
%struct.raw_notifier_head = type { ptr }
%struct.netns_core = type { ptr, i32, ptr }
%struct.netns_mib = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, ptr }
%struct.netns_nexthop = type { %struct.rb_root, ptr, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, ptr }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.netns_ipv4 = type { %struct.inet_timewait_death_row, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, ptr, ptr, ptr, i32, i8, i8, i8, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i8, i8, i8, i8, i32, i32, i32, i32, %struct.local_ports, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, [3 x i32], [3 x i32], i32, i32, i32, i32, ptr, ptr, i32, %struct.atomic_t, i32, i32, i32, i8, i8, i8, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, ptr, i32, %struct.list_head, ptr, i32, i8, i8, ptr, i32, ptr, i32, %struct.atomic_t, %struct.siphash_key_t, [96 x i8] }
%struct.inet_timewait_death_row = type { %struct.atomic_t, [124 x i8], ptr, i32 }
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.dst_ops, %struct.netns_sysctl_ipv6, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.timer_list, ptr, ptr, %struct.list_head, %struct.rwlock_t, %struct.spinlock, i32, i32, i8, i8, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr, %struct.atomic_t, %struct.atomic_t, ptr, ptr, ptr, i32, %struct.anon.91, ptr, [24 x i8] }
%struct.dst_ops = type { i16, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, [60 x i8], %struct.percpu_counter, [56 x i8] }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.netns_sysctl_ipv6 = type { ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i32, i8, i8, i8, [8 x i32], ptr, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8, i8 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.anon.91 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.netns_ieee802154_lowpan = type { %struct.netns_sysctl_lowpan, ptr }
%struct.netns_sysctl_lowpan = type { ptr }
%struct.netns_sctp = type { ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, %struct.list_head, %struct.list_head, %struct.timer_list, %struct.list_head, %struct.spinlock, %struct.spinlock, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.netns_nf = type { ptr, [13 x ptr], ptr, [5 x ptr], [5 x ptr], [3 x ptr], [5 x ptr], [7 x ptr], i32, i32 }
%struct.netns_ct = type { i8, i8, i8, i8, i8, i8, i8, ptr, ptr, ptr, %struct.nf_ip_net, i32 }
%struct.nf_ip_net = type { %struct.nf_generic_net, %struct.nf_tcp_net, %struct.nf_udp_net, %struct.nf_icmp_net, %struct.nf_icmp_net, %struct.nf_dccp_net, %struct.nf_sctp_net, %struct.nf_gre_net }
%struct.nf_generic_net = type { i32 }
%struct.nf_tcp_net = type { [14 x i32], i8, i8, i8, i8, i32 }
%struct.nf_udp_net = type { [2 x i32], i32 }
%struct.nf_icmp_net = type { i32 }
%struct.nf_dccp_net = type { i8, [10 x i32] }
%struct.nf_sctp_net = type { [10 x i32] }
%struct.nf_gre_net = type { %struct.list_head, [2 x i32] }
%struct.netns_nftables = type { i8 }
%struct.sk_buff_head = type { %union.anon.79, i32, %struct.spinlock }
%union.anon.79 = type { %struct.anon.80 }
%struct.anon.80 = type { ptr, ptr }
%struct.netns_bpf = type { [2 x ptr], [2 x ptr], [2 x %struct.list_head] }
%struct.netns_xfrm = type { %struct.list_head, ptr, ptr, ptr, ptr, i32, i32, %struct.work_struct, %struct.list_head, ptr, i32, [3 x %struct.hlist_head], [3 x %struct.xfrm_policy_hash], [6 x i32], %struct.work_struct, %struct.xfrm_policy_hthresh, %struct.list_head, ptr, ptr, i32, i32, i32, i32, i8, ptr, [8 x i8], %struct.dst_ops, %struct.dst_ops, %struct.spinlock, %struct.seqcount_spinlock, %struct.seqcount_spinlock, %struct.spinlock, %struct.mutex }
%struct.xfrm_policy_hash = type { ptr, i32, i8, i8, i8, i8 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.xfrm_policy_hthresh = type { %struct.work_struct, %struct.seqlock_t, i8, i8, i8, i8 }
%struct.netns_mpls = type { i32, i32, i32, ptr, ptr }
%struct.netns_can = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.spinlock, %struct.timer_list, ptr, ptr, %struct.hlist_head }
%struct.netns_xdp = type { %struct.mutex, %struct.hlist_head }
%struct.netns_mctp = type { %struct.list_head, %struct.mutex, %struct.hlist_head, %struct.spinlock, %struct.hlist_head, i32, %struct.mutex, %struct.list_head }
%struct.netns_smc = type { ptr, %struct.mutex, ptr }
%struct.trace_event_raw_nfsd_xdr_err_class = type { %struct.trace_entry, i32, i32, [28 x i8], [28 x i8], i32, i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_nfsd_compound = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_nfsd_compound_status = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_nfsd_compound_decode_err = type { %struct.trace_entry, i32, i32, i32, [28 x i8], [28 x i8], i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_nfsd_compound_encode_err = type { %struct.trace_entry, i32, i32, i32, [28 x i8], [28 x i8], i32, [0 x i8] }
%struct.trace_event_raw_nfsd_fh_err_class = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.knfsd_fh = type { i32, %union.anon.157 }
%union.anon.157 = type { %struct.anon.158, [124 x i8] }
%struct.anon.158 = type { i8, i8, i8, i8, [0 x i32] }
%struct.svc_expkey = type { %struct.cache_head, ptr, i32, [6 x i32], %struct.path, %struct.callback_head }
%struct.cache_head = type { %struct.hlist_node, i64, i64, %struct.kref, i32 }
%struct.path = type { ptr, ptr }
%struct.auth_domain = type { %struct.kref, %struct.hlist_node, ptr, ptr, %struct.callback_head }
%struct.trace_event_raw_nfsd_exp_find_key = type { %struct.trace_entry, i32, [6 x i32], i32, i32, [0 x i8] }
%struct.trace_event_raw_nfsd_expkey_update = type { %struct.trace_entry, i32, [6 x i32], i32, i32, i8, [0 x i8] }
%struct.svc_export = type { %struct.cache_head, ptr, i32, %struct.path, %struct.kuid_t, %struct.kgid_t, i32, ptr, %struct.nfsd4_fs_locations, i32, [8 x %struct.exp_flavor_info], i32, ptr, ptr, %struct.callback_head, %struct.export_stats }
%struct.nfsd4_fs_locations = type { i32, ptr, i32 }
%struct.exp_flavor_info = type { i32, i32 }
%struct.export_stats = type { i64, [3 x %struct.percpu_counter] }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, ptr, %struct.qstr, ptr, [36 x i8], %struct.lockref, ptr, ptr, i32, ptr, %union.anon.124, %struct.list_head, %struct.list_head, %union.anon.125 }
%struct.hlist_bl_node = type { ptr, ptr }
%struct.qstr = type { %union.anon.17, ptr }
%union.anon.17 = type { i64 }
%struct.lockref = type { %union.anon.19 }
%union.anon.19 = type { %struct.anon.20 }
%struct.anon.20 = type { %struct.spinlock, i32 }
%union.anon.124 = type { %struct.list_head }
%union.anon.125 = type { %struct.hlist_node }
%struct.trace_event_raw_nfsd_exp_get_by_name = type { %struct.trace_entry, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_nfsd_export_update = type { %struct.trace_entry, i32, i32, i8, [0 x i8] }
%struct.trace_event_raw_nfsd_io_class = type { %struct.trace_entry, i32, i32, i64, i32, [0 x i8] }
%struct.trace_event_raw_nfsd_err_class = type { %struct.trace_entry, i32, i32, i64, i32, [0 x i8] }
%struct.trace_event_raw_nfsd_dirent = type { %struct.trace_entry, i32, i64, i32, [0 x i8] }
%struct.trace_event_raw_nfsd_copy_err_class = type { %struct.trace_entry, i32, i32, i64, i32, i64, i64, i32, [0 x i8] }
%struct.stateid_t = type { i32, %struct.stateid_opaque_t }
%struct.stateid_opaque_t = type { %struct.clientid_t, i32 }
%struct.clientid_t = type { i32, i32 }
%struct.trace_event_raw_nfsd_stateid_class = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_nfsd_stateseqid_class = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_nfsd_clientid_class = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.nfsd_net = type { ptr, ptr, ptr, ptr, ptr, %struct.lock_manager, i8, i64, ptr, ptr, i32, ptr, %struct.rb_root, ptr, %struct.rb_root, ptr, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.delayed_work, %struct.spinlock, %struct.spinlock, ptr, i8, ptr, i64, i64, i8, i8, %struct.atomic_t, i8, i8, %struct.seqlock_t, [8 x i8], i32, i32, i32, i32, ptr, i32, i32, %struct.idr, %struct.spinlock, ptr, ptr, ptr, i32, i32, i32, %struct.atomic_t, [2 x %struct.percpu_counter], i32, i32, %struct.shrinker, %struct.spinlock, %struct.list_head, %struct.wait_queue_head, [65 x i8], ptr, %struct.siphash_key_t }
%struct.lock_manager = type { %struct.list_head, i8 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.trace_event_raw_nfsd_net_class = type { %struct.trace_entry, i64, [0 x i8] }
%struct.trace_event_raw_nfsd_writeverf_reset = type { %struct.trace_entry, i64, i32, i32, [8 x i8], [0 x i8] }
%struct.nfs4_client = type { %struct.list_head, %struct.rb_node, ptr, %struct.list_head, %struct.idr, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.xdr_netobj, %struct.nfs4_verifier, i64, %struct.__kernel_sockaddr_storage, i8, %struct.svc_cred, %struct.clientid_t, %struct.nfs4_verifier, i32, %struct.xdr_netobj, %struct.xdr_netobj, %struct.timespec64, %struct.nfs4_cb_conn, i32, ptr, ptr, i32, i32, %struct.nfsd4_callback, ptr, %struct.spinlock, %struct.list_head, %struct.nfsd4_clid_slot, i32, %struct.atomic_t, %struct.nfsdfs_client, %struct.nfs4_op_map, ptr, ptr, i32, %struct.rpc_wait_queue, ptr, %struct.list_head, %struct.spinlock, %struct.atomic_t }
%struct.rb_node = type { i32, ptr, ptr }
%struct.nfs4_verifier = type { [8 x i8] }
%struct.xdr_netobj = type { i32, ptr }
%struct.timespec64 = type { i64, i32 }
%struct.nfs4_cb_conn = type { %struct.__kernel_sockaddr_storage, %struct.__kernel_sockaddr_storage, i32, i32, i32, ptr }
%struct.nfsd4_callback = type { ptr, %struct.rpc_message, ptr, %struct.work_struct, i32, i32, i8, i8 }
%struct.rpc_message = type { ptr, ptr, ptr, ptr }
%struct.nfsd4_clid_slot = type { i32, i32, %struct.nfsd4_create_session }
%struct.nfsd4_create_session = type { %struct.clientid_t, %struct.nfs4_sessionid, i32, i32, %struct.nfsd4_channel_attrs, %struct.nfsd4_channel_attrs, i32, %struct.nfsd4_cb_sec }
%struct.nfs4_sessionid = type { [16 x i8] }
%struct.nfsd4_channel_attrs = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.nfsd4_cb_sec = type { i32, %struct.kuid_t, %struct.kgid_t }
%struct.nfsdfs_client = type { %struct.kref, ptr }
%struct.nfs4_op_map = type { %union.anon.161 }
%union.anon.161 = type { [3 x i32] }
%struct.rpc_wait_queue = type { %struct.spinlock, [4 x %struct.list_head], i8, i8, i8, i16, %struct.rpc_timer, ptr }
%struct.rpc_timer = type { %struct.list_head, i32, %struct.delayed_work }
%struct.trace_event_raw_nfsd_clid_cred_mismatch = type { %struct.trace_entry, i32, i32, i32, i32, [28 x i8], [0 x i8] }
%struct.trace_event_raw_nfsd_clid_verf_mismatch = type { %struct.trace_entry, i32, i32, [8 x i8], [8 x i8], [28 x i8], [0 x i8] }
%struct.trace_event_raw_nfsd_clid_class = type { %struct.trace_entry, i32, i32, [28 x i8], i32, [8 x i8], i32, [0 x i8] }
%struct.nfsd_file = type { %struct.hlist_node, %struct.list_head, %struct.callback_head, ptr, ptr, ptr, i32, ptr, i32, %struct.refcount_struct, i8, ptr }
%struct.trace_event_raw_nfsd_file_class = type { %struct.trace_entry, i32, ptr, i32, i32, i8, ptr, [0 x i8] }
%struct.trace_event_raw_nfsd_file_acquire = type { %struct.trace_entry, i32, i32, ptr, i32, i32, i32, i32, ptr, i32, [0 x i8] }
%struct.trace_event_raw_nfsd_file_search_class = type { %struct.trace_entry, ptr, i32, i32, [0 x i8] }
%struct.trace_event_raw_nfsd_file_fsnotify_handle_event = type { %struct.trace_entry, ptr, i32, i16, i32, [0 x i8] }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.138, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.139, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.140, ptr, %struct.address_space, %struct.list_head, %union.anon.141, i32, i32, ptr, ptr, ptr, ptr }
%union.anon.138 = type { i32 }
%union.anon.139 = type { %struct.callback_head }
%struct.atomic64_t = type { i64 }
%union.anon.140 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%union.anon.141 = type { ptr }
%struct.trace_event_raw_nfsd_drc_found = type { %struct.trace_entry, i64, i32, i32, [0 x i8] }
%struct.trace_event_raw_nfsd_drc_mismatch = type { %struct.trace_entry, i64, i32, i32, i32, [0 x i8] }
%struct.anon.136 = type { i32, i32, i32, i32, i32, i32, %struct.sockaddr_in6 }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.in6_addr = type { %union.anon.72 }
%union.anon.72 = type { [4 x i32] }
%struct.trace_event_raw_nfsd_cb_args = type { %struct.trace_entry, i32, i32, i32, i32, [28 x i8], [0 x i8] }
%struct.trace_event_raw_nfsd_cb_nodelegs = type { %struct.trace_entry, i32, i32, [0 x i8] }
%struct.trace_event_raw_nfsd_cb_class = type { %struct.trace_entry, i32, i32, i32, [28 x i8], [0 x i8] }
%struct.trace_event_raw_nfsd_cb_setup = type { %struct.trace_entry, i32, i32, i32, [28 x i8], [8 x i8], [0 x i8] }
%struct.trace_event_raw_nfsd_cb_setup_err = type { %struct.trace_entry, i32, i32, i32, [28 x i8], [0 x i8] }
%struct.nfs4_stid = type { %struct.refcount_struct, %struct.list_head, i8, %struct.stateid_t, %struct.spinlock, ptr, ptr, ptr }
%struct.trace_event_raw_nfsd_cb_recall = type { %struct.trace_entry, i32, i32, i32, i32, [28 x i8], [0 x i8] }
%struct.nfs4_stateowner = type { %struct.list_head, %struct.list_head, ptr, ptr, %struct.atomic_t, i32, %struct.xdr_netobj, %struct.nfs4_replay, i8 }
%struct.nfs4_replay = type { i32, i32, ptr, %struct.knfsd_fh, %struct.mutex, [112 x i8] }
%struct.trace_event_raw_nfsd_cb_notify_lock = type { %struct.trace_entry, i32, i32, i32, [28 x i8], [0 x i8] }
%struct.nfsd4_blocked_lock = type { %struct.list_head, %struct.list_head, i64, %struct.file_lock, %struct.knfsd_fh, %struct.nfsd4_callback, %struct.kref }
%struct.file_lock = type { ptr, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, ptr, i32, i8, i32, i32, %struct.wait_queue_head, ptr, i64, i64, ptr, i32, i32, ptr, ptr, %union.anon.126 }
%union.anon.126 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, ptr, %struct.list_head }
%struct.trace_event_raw_nfsd_cb_offload = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i64, [28 x i8], [0 x i8] }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }

@__tpstrtab_nfsd_garbage_args_err = internal constant [22 x i8] c"nfsd_garbage_args_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_garbage_args_err = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_garbage_args_err }, align 4
@__tracepoint_nfsd_garbage_args_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_garbage_args_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_garbage_args_err, ptr null, ptr @__traceiter_nfsd_garbage_args_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_garbage_args_err = internal constant ptr @__tracepoint_nfsd_garbage_args_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_cant_encode_err = internal constant [21 x i8] c"nfsd_cant_encode_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_cant_encode_err = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_cant_encode_err }, align 4
@__tracepoint_nfsd_cant_encode_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_cant_encode_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_cant_encode_err, ptr null, ptr @__traceiter_nfsd_cant_encode_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_cant_encode_err = internal constant ptr @__tracepoint_nfsd_cant_encode_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_compound = internal constant [14 x i8] c"nfsd_compound\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_compound = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_compound }, align 4
@__tracepoint_nfsd_compound = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_compound, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_compound, ptr null, ptr @__traceiter_nfsd_compound, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_compound = internal constant ptr @__tracepoint_nfsd_compound, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_compound_status = internal constant [21 x i8] c"nfsd_compound_status\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_compound_status = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_compound_status }, align 4
@__tracepoint_nfsd_compound_status = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_compound_status, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_compound_status, ptr null, ptr @__traceiter_nfsd_compound_status, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_compound_status = internal constant ptr @__tracepoint_nfsd_compound_status, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_compound_decode_err = internal constant [25 x i8] c"nfsd_compound_decode_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_compound_decode_err = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_compound_decode_err }, align 4
@__tracepoint_nfsd_compound_decode_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_compound_decode_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_compound_decode_err, ptr null, ptr @__traceiter_nfsd_compound_decode_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_compound_decode_err = internal constant ptr @__tracepoint_nfsd_compound_decode_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_compound_encode_err = internal constant [25 x i8] c"nfsd_compound_encode_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_compound_encode_err = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_compound_encode_err }, align 4
@__tracepoint_nfsd_compound_encode_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_compound_encode_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_compound_encode_err, ptr null, ptr @__traceiter_nfsd_compound_encode_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_compound_encode_err = internal constant ptr @__tracepoint_nfsd_compound_encode_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_set_fh_dentry_badexport = internal constant [29 x i8] c"nfsd_set_fh_dentry_badexport\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_set_fh_dentry_badexport = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_set_fh_dentry_badexport }, align 4
@__tracepoint_nfsd_set_fh_dentry_badexport = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_set_fh_dentry_badexport, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_set_fh_dentry_badexport, ptr null, ptr @__traceiter_nfsd_set_fh_dentry_badexport, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_set_fh_dentry_badexport = internal constant ptr @__tracepoint_nfsd_set_fh_dentry_badexport, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_set_fh_dentry_badhandle = internal constant [29 x i8] c"nfsd_set_fh_dentry_badhandle\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_set_fh_dentry_badhandle = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_set_fh_dentry_badhandle }, align 4
@__tracepoint_nfsd_set_fh_dentry_badhandle = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_set_fh_dentry_badhandle, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_set_fh_dentry_badhandle, ptr null, ptr @__traceiter_nfsd_set_fh_dentry_badhandle, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_set_fh_dentry_badhandle = internal constant ptr @__tracepoint_nfsd_set_fh_dentry_badhandle, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_exp_find_key = internal constant [18 x i8] c"nfsd_exp_find_key\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_exp_find_key = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_exp_find_key }, align 4
@__tracepoint_nfsd_exp_find_key = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_exp_find_key, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_exp_find_key, ptr null, ptr @__traceiter_nfsd_exp_find_key, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_exp_find_key = internal constant ptr @__tracepoint_nfsd_exp_find_key, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_expkey_update = internal constant [19 x i8] c"nfsd_expkey_update\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_expkey_update = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_expkey_update }, align 4
@__tracepoint_nfsd_expkey_update = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_expkey_update, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_expkey_update, ptr null, ptr @__traceiter_nfsd_expkey_update, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_expkey_update = internal constant ptr @__tracepoint_nfsd_expkey_update, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_exp_get_by_name = internal constant [21 x i8] c"nfsd_exp_get_by_name\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_exp_get_by_name = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_exp_get_by_name }, align 4
@__tracepoint_nfsd_exp_get_by_name = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_exp_get_by_name, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_exp_get_by_name, ptr null, ptr @__traceiter_nfsd_exp_get_by_name, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_exp_get_by_name = internal constant ptr @__tracepoint_nfsd_exp_get_by_name, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_export_update = internal constant [19 x i8] c"nfsd_export_update\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_export_update = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_export_update }, align 4
@__tracepoint_nfsd_export_update = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_export_update, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_export_update, ptr null, ptr @__traceiter_nfsd_export_update, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_export_update = internal constant ptr @__tracepoint_nfsd_export_update, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_read_start = internal constant [16 x i8] c"nfsd_read_start\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_read_start = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_read_start }, align 4
@__tracepoint_nfsd_read_start = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_read_start, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_read_start, ptr null, ptr @__traceiter_nfsd_read_start, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_read_start = internal constant ptr @__tracepoint_nfsd_read_start, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_read_splice = internal constant [17 x i8] c"nfsd_read_splice\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_read_splice = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_read_splice }, align 4
@__tracepoint_nfsd_read_splice = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_read_splice, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_read_splice, ptr null, ptr @__traceiter_nfsd_read_splice, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_read_splice = internal constant ptr @__tracepoint_nfsd_read_splice, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_read_vector = internal constant [17 x i8] c"nfsd_read_vector\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_read_vector = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_read_vector }, align 4
@__tracepoint_nfsd_read_vector = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_read_vector, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_read_vector, ptr null, ptr @__traceiter_nfsd_read_vector, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_read_vector = internal constant ptr @__tracepoint_nfsd_read_vector, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_read_io_done = internal constant [18 x i8] c"nfsd_read_io_done\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_read_io_done = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_read_io_done }, align 4
@__tracepoint_nfsd_read_io_done = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_read_io_done, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_read_io_done, ptr null, ptr @__traceiter_nfsd_read_io_done, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_read_io_done = internal constant ptr @__tracepoint_nfsd_read_io_done, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_read_done = internal constant [15 x i8] c"nfsd_read_done\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_read_done = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_read_done }, align 4
@__tracepoint_nfsd_read_done = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_read_done, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_read_done, ptr null, ptr @__traceiter_nfsd_read_done, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_read_done = internal constant ptr @__tracepoint_nfsd_read_done, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_write_start = internal constant [17 x i8] c"nfsd_write_start\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_write_start = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_write_start }, align 4
@__tracepoint_nfsd_write_start = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_write_start, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_write_start, ptr null, ptr @__traceiter_nfsd_write_start, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_write_start = internal constant ptr @__tracepoint_nfsd_write_start, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_write_opened = internal constant [18 x i8] c"nfsd_write_opened\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_write_opened = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_write_opened }, align 4
@__tracepoint_nfsd_write_opened = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_write_opened, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_write_opened, ptr null, ptr @__traceiter_nfsd_write_opened, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_write_opened = internal constant ptr @__tracepoint_nfsd_write_opened, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_write_io_done = internal constant [19 x i8] c"nfsd_write_io_done\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_write_io_done = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_write_io_done }, align 4
@__tracepoint_nfsd_write_io_done = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_write_io_done, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_write_io_done, ptr null, ptr @__traceiter_nfsd_write_io_done, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_write_io_done = internal constant ptr @__tracepoint_nfsd_write_io_done, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_write_done = internal constant [16 x i8] c"nfsd_write_done\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_write_done = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_write_done }, align 4
@__tracepoint_nfsd_write_done = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_write_done, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_write_done, ptr null, ptr @__traceiter_nfsd_write_done, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_write_done = internal constant ptr @__tracepoint_nfsd_write_done, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_read_err = internal constant [14 x i8] c"nfsd_read_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_read_err = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_read_err }, align 4
@__tracepoint_nfsd_read_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_read_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_read_err, ptr null, ptr @__traceiter_nfsd_read_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_read_err = internal constant ptr @__tracepoint_nfsd_read_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_write_err = internal constant [15 x i8] c"nfsd_write_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_write_err = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_write_err }, align 4
@__tracepoint_nfsd_write_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_write_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_write_err, ptr null, ptr @__traceiter_nfsd_write_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_write_err = internal constant ptr @__tracepoint_nfsd_write_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_dirent = internal constant [12 x i8] c"nfsd_dirent\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_dirent = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_dirent }, align 4
@__tracepoint_nfsd_dirent = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_dirent, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_dirent, ptr null, ptr @__traceiter_nfsd_dirent, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_dirent = internal constant ptr @__tracepoint_nfsd_dirent, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_clone_file_range_err = internal constant [26 x i8] c"nfsd_clone_file_range_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_clone_file_range_err = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_clone_file_range_err }, align 4
@__tracepoint_nfsd_clone_file_range_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_clone_file_range_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_clone_file_range_err, ptr null, ptr @__traceiter_nfsd_clone_file_range_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_clone_file_range_err = internal constant ptr @__tracepoint_nfsd_clone_file_range_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_layoutstate_alloc = internal constant [23 x i8] c"nfsd_layoutstate_alloc\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_layoutstate_alloc = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_layoutstate_alloc }, align 4
@__tracepoint_nfsd_layoutstate_alloc = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_layoutstate_alloc, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_layoutstate_alloc, ptr null, ptr @__traceiter_nfsd_layoutstate_alloc, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_layoutstate_alloc = internal constant ptr @__tracepoint_nfsd_layoutstate_alloc, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_layoutstate_unhash = internal constant [24 x i8] c"nfsd_layoutstate_unhash\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_layoutstate_unhash = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_layoutstate_unhash }, align 4
@__tracepoint_nfsd_layoutstate_unhash = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_layoutstate_unhash, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_layoutstate_unhash, ptr null, ptr @__traceiter_nfsd_layoutstate_unhash, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_layoutstate_unhash = internal constant ptr @__tracepoint_nfsd_layoutstate_unhash, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_layoutstate_free = internal constant [22 x i8] c"nfsd_layoutstate_free\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_layoutstate_free = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_layoutstate_free }, align 4
@__tracepoint_nfsd_layoutstate_free = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_layoutstate_free, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_layoutstate_free, ptr null, ptr @__traceiter_nfsd_layoutstate_free, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_layoutstate_free = internal constant ptr @__tracepoint_nfsd_layoutstate_free, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_layout_get_lookup_fail = internal constant [28 x i8] c"nfsd_layout_get_lookup_fail\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_layout_get_lookup_fail = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_layout_get_lookup_fail }, align 4
@__tracepoint_nfsd_layout_get_lookup_fail = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_layout_get_lookup_fail, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_layout_get_lookup_fail, ptr null, ptr @__traceiter_nfsd_layout_get_lookup_fail, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_layout_get_lookup_fail = internal constant ptr @__tracepoint_nfsd_layout_get_lookup_fail, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_layout_commit_lookup_fail = internal constant [31 x i8] c"nfsd_layout_commit_lookup_fail\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_layout_commit_lookup_fail = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_layout_commit_lookup_fail }, align 4
@__tracepoint_nfsd_layout_commit_lookup_fail = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_layout_commit_lookup_fail, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_layout_commit_lookup_fail, ptr null, ptr @__traceiter_nfsd_layout_commit_lookup_fail, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_layout_commit_lookup_fail = internal constant ptr @__tracepoint_nfsd_layout_commit_lookup_fail, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_layout_return_lookup_fail = internal constant [31 x i8] c"nfsd_layout_return_lookup_fail\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_layout_return_lookup_fail = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_layout_return_lookup_fail }, align 4
@__tracepoint_nfsd_layout_return_lookup_fail = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_layout_return_lookup_fail, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_layout_return_lookup_fail, ptr null, ptr @__traceiter_nfsd_layout_return_lookup_fail, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_layout_return_lookup_fail = internal constant ptr @__tracepoint_nfsd_layout_return_lookup_fail, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_layout_recall = internal constant [19 x i8] c"nfsd_layout_recall\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_layout_recall = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_layout_recall }, align 4
@__tracepoint_nfsd_layout_recall = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_layout_recall, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_layout_recall, ptr null, ptr @__traceiter_nfsd_layout_recall, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_layout_recall = internal constant ptr @__tracepoint_nfsd_layout_recall, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_layout_recall_done = internal constant [24 x i8] c"nfsd_layout_recall_done\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_layout_recall_done = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_layout_recall_done }, align 4
@__tracepoint_nfsd_layout_recall_done = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_layout_recall_done, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_layout_recall_done, ptr null, ptr @__traceiter_nfsd_layout_recall_done, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_layout_recall_done = internal constant ptr @__tracepoint_nfsd_layout_recall_done, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_layout_recall_fail = internal constant [24 x i8] c"nfsd_layout_recall_fail\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_layout_recall_fail = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_layout_recall_fail }, align 4
@__tracepoint_nfsd_layout_recall_fail = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_layout_recall_fail, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_layout_recall_fail, ptr null, ptr @__traceiter_nfsd_layout_recall_fail, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_layout_recall_fail = internal constant ptr @__tracepoint_nfsd_layout_recall_fail, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_layout_recall_release = internal constant [27 x i8] c"nfsd_layout_recall_release\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_layout_recall_release = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_layout_recall_release }, align 4
@__tracepoint_nfsd_layout_recall_release = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_layout_recall_release, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_layout_recall_release, ptr null, ptr @__traceiter_nfsd_layout_recall_release, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_layout_recall_release = internal constant ptr @__tracepoint_nfsd_layout_recall_release, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_open = internal constant [10 x i8] c"nfsd_open\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_open = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_open }, align 4
@__tracepoint_nfsd_open = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_open, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_open, ptr null, ptr @__traceiter_nfsd_open, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_open = internal constant ptr @__tracepoint_nfsd_open, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_deleg_read = internal constant [16 x i8] c"nfsd_deleg_read\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_deleg_read = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_deleg_read }, align 4
@__tracepoint_nfsd_deleg_read = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_deleg_read, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_deleg_read, ptr null, ptr @__traceiter_nfsd_deleg_read, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_deleg_read = internal constant ptr @__tracepoint_nfsd_deleg_read, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_deleg_recall = internal constant [18 x i8] c"nfsd_deleg_recall\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_deleg_recall = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_deleg_recall }, align 4
@__tracepoint_nfsd_deleg_recall = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_deleg_recall, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_deleg_recall, ptr null, ptr @__traceiter_nfsd_deleg_recall, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_deleg_recall = internal constant ptr @__tracepoint_nfsd_deleg_recall, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_preprocess = internal constant [16 x i8] c"nfsd_preprocess\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_preprocess = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_preprocess }, align 4
@__tracepoint_nfsd_preprocess = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_preprocess, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_preprocess, ptr null, ptr @__traceiter_nfsd_preprocess, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_preprocess = internal constant ptr @__tracepoint_nfsd_preprocess, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_open_confirm = internal constant [18 x i8] c"nfsd_open_confirm\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_open_confirm = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_open_confirm }, align 4
@__tracepoint_nfsd_open_confirm = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_open_confirm, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_open_confirm, ptr null, ptr @__traceiter_nfsd_open_confirm, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_open_confirm = internal constant ptr @__tracepoint_nfsd_open_confirm, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_clid_expire_unconf = internal constant [24 x i8] c"nfsd_clid_expire_unconf\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_clid_expire_unconf = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_clid_expire_unconf }, align 4
@__tracepoint_nfsd_clid_expire_unconf = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_clid_expire_unconf, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_clid_expire_unconf, ptr null, ptr @__traceiter_nfsd_clid_expire_unconf, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_clid_expire_unconf = internal constant ptr @__tracepoint_nfsd_clid_expire_unconf, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_clid_reclaim_complete = internal constant [27 x i8] c"nfsd_clid_reclaim_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_clid_reclaim_complete = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_clid_reclaim_complete }, align 4
@__tracepoint_nfsd_clid_reclaim_complete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_clid_reclaim_complete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_clid_reclaim_complete, ptr null, ptr @__traceiter_nfsd_clid_reclaim_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_clid_reclaim_complete = internal constant ptr @__tracepoint_nfsd_clid_reclaim_complete, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_clid_confirmed = internal constant [20 x i8] c"nfsd_clid_confirmed\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_clid_confirmed = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_clid_confirmed }, align 4
@__tracepoint_nfsd_clid_confirmed = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_clid_confirmed, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_clid_confirmed, ptr null, ptr @__traceiter_nfsd_clid_confirmed, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_clid_confirmed = internal constant ptr @__tracepoint_nfsd_clid_confirmed, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_clid_destroyed = internal constant [20 x i8] c"nfsd_clid_destroyed\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_clid_destroyed = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_clid_destroyed }, align 4
@__tracepoint_nfsd_clid_destroyed = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_clid_destroyed, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_clid_destroyed, ptr null, ptr @__traceiter_nfsd_clid_destroyed, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_clid_destroyed = internal constant ptr @__tracepoint_nfsd_clid_destroyed, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_clid_admin_expired = internal constant [24 x i8] c"nfsd_clid_admin_expired\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_clid_admin_expired = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_clid_admin_expired }, align 4
@__tracepoint_nfsd_clid_admin_expired = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_clid_admin_expired, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_clid_admin_expired, ptr null, ptr @__traceiter_nfsd_clid_admin_expired, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_clid_admin_expired = internal constant ptr @__tracepoint_nfsd_clid_admin_expired, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_clid_replaced = internal constant [19 x i8] c"nfsd_clid_replaced\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_clid_replaced = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_clid_replaced }, align 4
@__tracepoint_nfsd_clid_replaced = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_clid_replaced, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_clid_replaced, ptr null, ptr @__traceiter_nfsd_clid_replaced, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_clid_replaced = internal constant ptr @__tracepoint_nfsd_clid_replaced, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_clid_purged = internal constant [17 x i8] c"nfsd_clid_purged\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_clid_purged = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_clid_purged }, align 4
@__tracepoint_nfsd_clid_purged = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_clid_purged, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_clid_purged, ptr null, ptr @__traceiter_nfsd_clid_purged, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_clid_purged = internal constant ptr @__tracepoint_nfsd_clid_purged, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_clid_renew = internal constant [16 x i8] c"nfsd_clid_renew\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_clid_renew = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_clid_renew }, align 4
@__tracepoint_nfsd_clid_renew = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_clid_renew, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_clid_renew, ptr null, ptr @__traceiter_nfsd_clid_renew, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_clid_renew = internal constant ptr @__tracepoint_nfsd_clid_renew, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_clid_stale = internal constant [16 x i8] c"nfsd_clid_stale\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_clid_stale = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_clid_stale }, align 4
@__tracepoint_nfsd_clid_stale = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_clid_stale, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_clid_stale, ptr null, ptr @__traceiter_nfsd_clid_stale, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_clid_stale = internal constant ptr @__tracepoint_nfsd_clid_stale, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_grace_start = internal constant [17 x i8] c"nfsd_grace_start\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_grace_start = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_grace_start }, align 4
@__tracepoint_nfsd_grace_start = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_grace_start, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_grace_start, ptr null, ptr @__traceiter_nfsd_grace_start, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_grace_start = internal constant ptr @__tracepoint_nfsd_grace_start, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_grace_complete = internal constant [20 x i8] c"nfsd_grace_complete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_grace_complete = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_grace_complete }, align 4
@__tracepoint_nfsd_grace_complete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_grace_complete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_grace_complete, ptr null, ptr @__traceiter_nfsd_grace_complete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_grace_complete = internal constant ptr @__tracepoint_nfsd_grace_complete, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_writeverf_reset = internal constant [21 x i8] c"nfsd_writeverf_reset\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_writeverf_reset = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_writeverf_reset }, align 4
@__tracepoint_nfsd_writeverf_reset = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_writeverf_reset, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_writeverf_reset, ptr null, ptr @__traceiter_nfsd_writeverf_reset, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_writeverf_reset = internal constant ptr @__tracepoint_nfsd_writeverf_reset, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_clid_cred_mismatch = internal constant [24 x i8] c"nfsd_clid_cred_mismatch\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_clid_cred_mismatch = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_clid_cred_mismatch }, align 4
@__tracepoint_nfsd_clid_cred_mismatch = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_clid_cred_mismatch, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_clid_cred_mismatch, ptr null, ptr @__traceiter_nfsd_clid_cred_mismatch, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_clid_cred_mismatch = internal constant ptr @__tracepoint_nfsd_clid_cred_mismatch, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_clid_verf_mismatch = internal constant [24 x i8] c"nfsd_clid_verf_mismatch\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_clid_verf_mismatch = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_clid_verf_mismatch }, align 4
@__tracepoint_nfsd_clid_verf_mismatch = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_clid_verf_mismatch, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_clid_verf_mismatch, ptr null, ptr @__traceiter_nfsd_clid_verf_mismatch, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_clid_verf_mismatch = internal constant ptr @__tracepoint_nfsd_clid_verf_mismatch, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_clid_fresh = internal constant [16 x i8] c"nfsd_clid_fresh\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_clid_fresh = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_clid_fresh }, align 4
@__tracepoint_nfsd_clid_fresh = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_clid_fresh, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_clid_fresh, ptr null, ptr @__traceiter_nfsd_clid_fresh, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_clid_fresh = internal constant ptr @__tracepoint_nfsd_clid_fresh, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_clid_confirmed_r = internal constant [22 x i8] c"nfsd_clid_confirmed_r\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_clid_confirmed_r = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_clid_confirmed_r }, align 4
@__tracepoint_nfsd_clid_confirmed_r = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_clid_confirmed_r, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_clid_confirmed_r, ptr null, ptr @__traceiter_nfsd_clid_confirmed_r, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_clid_confirmed_r = internal constant ptr @__tracepoint_nfsd_clid_confirmed_r, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_file_alloc = internal constant [16 x i8] c"nfsd_file_alloc\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_file_alloc = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_file_alloc }, align 4
@__tracepoint_nfsd_file_alloc = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_file_alloc, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_file_alloc, ptr null, ptr @__traceiter_nfsd_file_alloc, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_file_alloc = internal constant ptr @__tracepoint_nfsd_file_alloc, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_file_put_final = internal constant [20 x i8] c"nfsd_file_put_final\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_file_put_final = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_file_put_final }, align 4
@__tracepoint_nfsd_file_put_final = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_file_put_final, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_file_put_final, ptr null, ptr @__traceiter_nfsd_file_put_final, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_file_put_final = internal constant ptr @__tracepoint_nfsd_file_put_final, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_file_unhash = internal constant [17 x i8] c"nfsd_file_unhash\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_file_unhash = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_file_unhash }, align 4
@__tracepoint_nfsd_file_unhash = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_file_unhash, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_file_unhash, ptr null, ptr @__traceiter_nfsd_file_unhash, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_file_unhash = internal constant ptr @__tracepoint_nfsd_file_unhash, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_file_put = internal constant [14 x i8] c"nfsd_file_put\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_file_put = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_file_put }, align 4
@__tracepoint_nfsd_file_put = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_file_put, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_file_put, ptr null, ptr @__traceiter_nfsd_file_put, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_file_put = internal constant ptr @__tracepoint_nfsd_file_put, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_file_unhash_and_release_locked = internal constant [36 x i8] c"nfsd_file_unhash_and_release_locked\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_file_unhash_and_release_locked = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_file_unhash_and_release_locked }, align 4
@__tracepoint_nfsd_file_unhash_and_release_locked = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_file_unhash_and_release_locked, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_file_unhash_and_release_locked, ptr null, ptr @__traceiter_nfsd_file_unhash_and_release_locked, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_file_unhash_and_release_locked = internal constant ptr @__tracepoint_nfsd_file_unhash_and_release_locked, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_file_acquire = internal constant [18 x i8] c"nfsd_file_acquire\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_file_acquire = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_file_acquire }, align 4
@__tracepoint_nfsd_file_acquire = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_file_acquire, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_file_acquire, ptr null, ptr @__traceiter_nfsd_file_acquire, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_file_acquire = internal constant ptr @__tracepoint_nfsd_file_acquire, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_file_close_inode_sync = internal constant [27 x i8] c"nfsd_file_close_inode_sync\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_file_close_inode_sync = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_file_close_inode_sync }, align 4
@__tracepoint_nfsd_file_close_inode_sync = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_file_close_inode_sync, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_file_close_inode_sync, ptr null, ptr @__traceiter_nfsd_file_close_inode_sync, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_file_close_inode_sync = internal constant ptr @__tracepoint_nfsd_file_close_inode_sync, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_file_close_inode = internal constant [22 x i8] c"nfsd_file_close_inode\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_file_close_inode = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_file_close_inode }, align 4
@__tracepoint_nfsd_file_close_inode = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_file_close_inode, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_file_close_inode, ptr null, ptr @__traceiter_nfsd_file_close_inode, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_file_close_inode = internal constant ptr @__tracepoint_nfsd_file_close_inode, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_file_is_cached = internal constant [20 x i8] c"nfsd_file_is_cached\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_file_is_cached = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_file_is_cached }, align 4
@__tracepoint_nfsd_file_is_cached = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_file_is_cached, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_file_is_cached, ptr null, ptr @__traceiter_nfsd_file_is_cached, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_file_is_cached = internal constant ptr @__tracepoint_nfsd_file_is_cached, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_file_fsnotify_handle_event = internal constant [32 x i8] c"nfsd_file_fsnotify_handle_event\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_file_fsnotify_handle_event = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_file_fsnotify_handle_event }, align 4
@__tracepoint_nfsd_file_fsnotify_handle_event = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_file_fsnotify_handle_event, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_file_fsnotify_handle_event, ptr null, ptr @__traceiter_nfsd_file_fsnotify_handle_event, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_file_fsnotify_handle_event = internal constant ptr @__tracepoint_nfsd_file_fsnotify_handle_event, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_drc_found = internal constant [15 x i8] c"nfsd_drc_found\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_drc_found = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_drc_found }, align 4
@__tracepoint_nfsd_drc_found = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_drc_found, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_drc_found, ptr null, ptr @__traceiter_nfsd_drc_found, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_drc_found = internal constant ptr @__tracepoint_nfsd_drc_found, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_drc_mismatch = internal constant [18 x i8] c"nfsd_drc_mismatch\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_drc_mismatch = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_drc_mismatch }, align 4
@__tracepoint_nfsd_drc_mismatch = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_drc_mismatch, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_drc_mismatch, ptr null, ptr @__traceiter_nfsd_drc_mismatch, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_drc_mismatch = internal constant ptr @__tracepoint_nfsd_drc_mismatch, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_cb_args = internal constant [13 x i8] c"nfsd_cb_args\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_cb_args = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_cb_args }, align 4
@__tracepoint_nfsd_cb_args = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_cb_args, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_cb_args, ptr null, ptr @__traceiter_nfsd_cb_args, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_cb_args = internal constant ptr @__tracepoint_nfsd_cb_args, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_cb_nodelegs = internal constant [17 x i8] c"nfsd_cb_nodelegs\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_cb_nodelegs = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_cb_nodelegs }, align 4
@__tracepoint_nfsd_cb_nodelegs = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_cb_nodelegs, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_cb_nodelegs, ptr null, ptr @__traceiter_nfsd_cb_nodelegs, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_cb_nodelegs = internal constant ptr @__tracepoint_nfsd_cb_nodelegs, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_cb_state = internal constant [14 x i8] c"nfsd_cb_state\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_cb_state = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_cb_state }, align 4
@__tracepoint_nfsd_cb_state = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_cb_state, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_cb_state, ptr null, ptr @__traceiter_nfsd_cb_state, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_cb_state = internal constant ptr @__tracepoint_nfsd_cb_state, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_cb_probe = internal constant [14 x i8] c"nfsd_cb_probe\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_cb_probe = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_cb_probe }, align 4
@__tracepoint_nfsd_cb_probe = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_cb_probe, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_cb_probe, ptr null, ptr @__traceiter_nfsd_cb_probe, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_cb_probe = internal constant ptr @__tracepoint_nfsd_cb_probe, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_cb_lost = internal constant [13 x i8] c"nfsd_cb_lost\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_cb_lost = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_cb_lost }, align 4
@__tracepoint_nfsd_cb_lost = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_cb_lost, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_cb_lost, ptr null, ptr @__traceiter_nfsd_cb_lost, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_cb_lost = internal constant ptr @__tracepoint_nfsd_cb_lost, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_cb_shutdown = internal constant [17 x i8] c"nfsd_cb_shutdown\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_cb_shutdown = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_cb_shutdown }, align 4
@__tracepoint_nfsd_cb_shutdown = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_cb_shutdown, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_cb_shutdown, ptr null, ptr @__traceiter_nfsd_cb_shutdown, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_cb_shutdown = internal constant ptr @__tracepoint_nfsd_cb_shutdown, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_cb_setup = internal constant [14 x i8] c"nfsd_cb_setup\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_cb_setup = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_cb_setup }, align 4
@__tracepoint_nfsd_cb_setup = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_cb_setup, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_cb_setup, ptr null, ptr @__traceiter_nfsd_cb_setup, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_cb_setup = internal constant ptr @__tracepoint_nfsd_cb_setup, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_cb_setup_err = internal constant [18 x i8] c"nfsd_cb_setup_err\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_cb_setup_err = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_cb_setup_err }, align 4
@__tracepoint_nfsd_cb_setup_err = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_cb_setup_err, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_cb_setup_err, ptr null, ptr @__traceiter_nfsd_cb_setup_err, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_cb_setup_err = internal constant ptr @__tracepoint_nfsd_cb_setup_err, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_cb_recall = internal constant [15 x i8] c"nfsd_cb_recall\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_cb_recall = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_cb_recall }, align 4
@__tracepoint_nfsd_cb_recall = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_cb_recall, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_cb_recall, ptr null, ptr @__traceiter_nfsd_cb_recall, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_cb_recall = internal constant ptr @__tracepoint_nfsd_cb_recall, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_cb_notify_lock = internal constant [20 x i8] c"nfsd_cb_notify_lock\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_cb_notify_lock = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_cb_notify_lock }, align 4
@__tracepoint_nfsd_cb_notify_lock = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_cb_notify_lock, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_cb_notify_lock, ptr null, ptr @__traceiter_nfsd_cb_notify_lock, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_cb_notify_lock = internal constant ptr @__tracepoint_nfsd_cb_notify_lock, section "__tracepoints_ptrs", align 4
@__tpstrtab_nfsd_cb_offload = internal constant [16 x i8] c"nfsd_cb_offload\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_nfsd_cb_offload = dso_local global %struct.static_call_key { ptr @__traceiter_nfsd_cb_offload }, align 4
@__tracepoint_nfsd_cb_offload = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_nfsd_cb_offload, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_nfsd_cb_offload, ptr null, ptr @__traceiter_nfsd_cb_offload, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_nfsd_cb_offload = internal constant ptr @__tracepoint_nfsd_cb_offload, section "__tracepoints_ptrs", align 4
@str__nfsd__trace_system_name = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"nfsd\00", [27 x i8] zeroinitializer }, align 32
@.str = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"NFSD_FILE_HASHED\00", [47 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_NFSD_FILE_HASHED = internal global %struct.trace_eval_map { ptr @str__nfsd__trace_system_name, ptr @.str, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_NFSD_FILE_HASHED = internal global ptr @__TRACE_SYSTEM_NFSD_FILE_HASHED, section "_ftrace_eval_map", align 4
@.str.1 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"NFSD_FILE_PENDING\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_NFSD_FILE_PENDING = internal global %struct.trace_eval_map { ptr @str__nfsd__trace_system_name, ptr @.str.1, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_NFSD_FILE_PENDING = internal global ptr @__TRACE_SYSTEM_NFSD_FILE_PENDING, section "_ftrace_eval_map", align 4
@.str.2 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"NFSD_FILE_BREAK_READ\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_NFSD_FILE_BREAK_READ = internal global %struct.trace_eval_map { ptr @str__nfsd__trace_system_name, ptr @.str.2, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_NFSD_FILE_BREAK_READ = internal global ptr @__TRACE_SYSTEM_NFSD_FILE_BREAK_READ, section "_ftrace_eval_map", align 4
@.str.3 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"NFSD_FILE_BREAK_WRITE\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_NFSD_FILE_BREAK_WRITE = internal global %struct.trace_eval_map { ptr @str__nfsd__trace_system_name, ptr @.str.3, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_NFSD_FILE_BREAK_WRITE = internal global ptr @__TRACE_SYSTEM_NFSD_FILE_BREAK_WRITE, section "_ftrace_eval_map", align 4
@.str.4 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"NFSD_FILE_REFERENCED\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_NFSD_FILE_REFERENCED = internal global %struct.trace_eval_map { ptr @str__nfsd__trace_system_name, ptr @.str.4, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_NFSD_FILE_REFERENCED = internal global ptr @__TRACE_SYSTEM_NFSD_FILE_REFERENCED, section "_ftrace_eval_map", align 4
@.str.5 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"RC_DROPIT\00", [22 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RC_DROPIT = internal global %struct.trace_eval_map { ptr @str__nfsd__trace_system_name, ptr @.str.5, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_RC_DROPIT = internal global ptr @__TRACE_SYSTEM_RC_DROPIT, section "_ftrace_eval_map", align 4
@.str.6 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"RC_REPLY\00", [23 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RC_REPLY = internal global %struct.trace_eval_map { ptr @str__nfsd__trace_system_name, ptr @.str.6, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_RC_REPLY = internal global ptr @__TRACE_SYSTEM_RC_REPLY, section "_ftrace_eval_map", align 4
@.str.7 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"RC_DOIT\00", [24 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RC_DOIT = internal global %struct.trace_eval_map { ptr @str__nfsd__trace_system_name, ptr @.str.7, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_RC_DOIT = internal global ptr @__TRACE_SYSTEM_RC_DOIT, section "_ftrace_eval_map", align 4
@.str.8 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"RPC_AUTH_NULL\00", [18 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RPC_AUTH_NULL = internal global %struct.trace_eval_map { ptr @str__nfsd__trace_system_name, ptr @.str.8, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_RPC_AUTH_NULL = internal global ptr @__TRACE_SYSTEM_RPC_AUTH_NULL, section "_ftrace_eval_map", align 4
@.str.9 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"RPC_AUTH_UNIX\00", [18 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RPC_AUTH_UNIX = internal global %struct.trace_eval_map { ptr @str__nfsd__trace_system_name, ptr @.str.9, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_RPC_AUTH_UNIX = internal global ptr @__TRACE_SYSTEM_RPC_AUTH_UNIX, section "_ftrace_eval_map", align 4
@.str.10 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"RPC_AUTH_GSS\00", [19 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RPC_AUTH_GSS = internal global %struct.trace_eval_map { ptr @str__nfsd__trace_system_name, ptr @.str.10, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_RPC_AUTH_GSS = internal global ptr @__TRACE_SYSTEM_RPC_AUTH_GSS, section "_ftrace_eval_map", align 4
@.str.11 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"RPC_AUTH_GSS_KRB5\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RPC_AUTH_GSS_KRB5 = internal global %struct.trace_eval_map { ptr @str__nfsd__trace_system_name, ptr @.str.11, i32 390003 }, section ".init.data", align 4
@TRACE_SYSTEM_RPC_AUTH_GSS_KRB5 = internal global ptr @__TRACE_SYSTEM_RPC_AUTH_GSS_KRB5, section "_ftrace_eval_map", align 4
@.str.12 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"RPC_AUTH_GSS_KRB5I\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RPC_AUTH_GSS_KRB5I = internal global %struct.trace_eval_map { ptr @str__nfsd__trace_system_name, ptr @.str.12, i32 390004 }, section ".init.data", align 4
@TRACE_SYSTEM_RPC_AUTH_GSS_KRB5I = internal global ptr @__TRACE_SYSTEM_RPC_AUTH_GSS_KRB5I, section "_ftrace_eval_map", align 4
@.str.13 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"RPC_AUTH_GSS_KRB5P\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_RPC_AUTH_GSS_KRB5P = internal global %struct.trace_eval_map { ptr @str__nfsd__trace_system_name, ptr @.str.13, i32 390005 }, section ".init.data", align 4
@TRACE_SYSTEM_RPC_AUTH_GSS_KRB5P = internal global ptr @__TRACE_SYSTEM_RPC_AUTH_GSS_KRB5P, section "_ftrace_eval_map", align 4
@trace_event_fields_nfsd_xdr_err_class = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.14, %union.anon.184 { %struct.anon.185 { ptr @.str.15, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.17, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.18, %union.anon.184 { %struct.anon.185 { ptr @.str.19, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.18, %union.anon.184 { %struct.anon.185 { ptr @.str.20, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.21, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.22, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_nfsd_xdr_err_class = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_xdr_err_class, ptr @perf_trace_nfsd_xdr_err_class, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_xdr_err_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_xdr_err_class, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_xdr_err_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_xdr_err_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_xdr_err_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_xdr_err_class = internal global { [61 x i8], [35 x i8] } { [61 x i8] c"\22xid=0x%08x vers=%u proc=%u\22, REC->xid, REC->vers, REC->proc\00", [35 x i8] zeroinitializer }, align 32
@event_nfsd_garbage_args_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_xdr_err_class, %union.anon.186 { ptr @__tracepoint_nfsd_garbage_args_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_xdr_err_class }, ptr @print_fmt_nfsd_xdr_err_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_garbage_args_err = internal global ptr @event_nfsd_garbage_args_err, section "_ftrace_events", align 4
@event_nfsd_cant_encode_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_xdr_err_class, %union.anon.186 { ptr @__tracepoint_nfsd_cant_encode_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_xdr_err_class }, ptr @print_fmt_nfsd_xdr_err_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_cant_encode_err = internal global ptr @event_nfsd_cant_encode_err, section "_ftrace_events", align 4
@trace_event_fields_nfsd_compound = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.17, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.24, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_nfsd_compound = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_compound, ptr @perf_trace_nfsd_compound, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_compound, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_compound, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_compound, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_compound = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_compound, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_compound = internal global { [49 x i8], [47 x i8] } { [49 x i8] c"\22xid=0x%08x opcnt=%u\22, REC->xid, REC->args_opcnt\00", [47 x i8] zeroinitializer }, align 32
@event_nfsd_compound = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_compound, %union.anon.186 { ptr @__tracepoint_nfsd_compound }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_compound }, ptr @print_fmt_nfsd_compound, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_compound = internal global ptr @event_nfsd_compound, section "_ftrace_events", align 4
@trace_event_fields_nfsd_compound_status = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.24, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.27, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.184 { %struct.anon.185 { ptr @.str.29, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.30, %union.anon.184 { %struct.anon.185 { ptr @.str.31, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_nfsd_compound_status = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_compound_status, ptr @perf_trace_nfsd_compound_status, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_compound_status, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_compound_status, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_compound_status, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_compound_status = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_compound_status, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_compound_status = internal global { [88 x i8], [40 x i8] } { [88 x i8] c"\22op=%u/%u %s status=%d\22, REC->resp_opcnt, REC->args_opcnt, __get_str(name), REC->status\00", [40 x i8] zeroinitializer }, align 32
@event_nfsd_compound_status = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_compound_status, %union.anon.186 { ptr @__tracepoint_nfsd_compound_status }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_compound_status }, ptr @print_fmt_nfsd_compound_status, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_compound_status = internal global ptr @event_nfsd_compound_status, section "_ftrace_events", align 4
@trace_event_fields_nfsd_compound_decode_err = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.14, %union.anon.184 { %struct.anon.185 { ptr @.str.15, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.17, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.33, %union.anon.184 { %struct.anon.185 { ptr @.str.29, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.18, %union.anon.184 { %struct.anon.185 { ptr @.str.19, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.18, %union.anon.184 { %struct.anon.185 { ptr @.str.20, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.24, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.27, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_nfsd_compound_decode_err = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_compound_decode_err, ptr @perf_trace_nfsd_compound_decode_err, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_compound_decode_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_compound_decode_err, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_compound_decode_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_compound_decode_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_compound_decode_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_compound_decode_err = internal global { [90 x i8], [38 x i8] } { [90 x i8] c"\22op=%u/%u opnum=%u status=%lu\22, REC->resp_opcnt, REC->args_opcnt, REC->opnum, REC->status\00", [38 x i8] zeroinitializer }, align 32
@event_nfsd_compound_decode_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_compound_decode_err, %union.anon.186 { ptr @__tracepoint_nfsd_compound_decode_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_compound_decode_err }, ptr @print_fmt_nfsd_compound_decode_err, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_compound_decode_err = internal global ptr @event_nfsd_compound_decode_err, section "_ftrace_events", align 4
@trace_event_fields_nfsd_compound_encode_err = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.14, %union.anon.184 { %struct.anon.185 { ptr @.str.15, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.17, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.33, %union.anon.184 { %struct.anon.185 { ptr @.str.29, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.18, %union.anon.184 { %struct.anon.185 { ptr @.str.19, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.18, %union.anon.184 { %struct.anon.185 { ptr @.str.20, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.34, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_nfsd_compound_encode_err = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_compound_encode_err, ptr @perf_trace_nfsd_compound_encode_err, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_compound_encode_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_compound_encode_err, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_compound_encode_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_compound_encode_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_compound_encode_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_compound_encode_err = internal global { [47 x i8], [49 x i8] } { [47 x i8] c"\22opnum=%u status=%lu\22, REC->opnum, REC->status\00", [49 x i8] zeroinitializer }, align 32
@event_nfsd_compound_encode_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_compound_encode_err, %union.anon.186 { ptr @__tracepoint_nfsd_compound_encode_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_compound_encode_err }, ptr @print_fmt_nfsd_compound_encode_err, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_compound_encode_err = internal global ptr @event_nfsd_compound_encode_err, section "_ftrace_events", align 4
@trace_event_fields_nfsd_fh_err_class = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.17, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.184 { %struct.anon.185 { ptr @.str.29, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_nfsd_fh_err_class = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_fh_err_class, ptr @perf_trace_nfsd_fh_err_class, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_fh_err_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_fh_err_class, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_fh_err_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_fh_err_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_fh_err_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_fh_err_class = internal global { [75 x i8], [53 x i8] } { [75 x i8] c"\22xid=0x%08x fh_hash=0x%08x status=%d\22, REC->xid, REC->fh_hash, REC->status\00", [53 x i8] zeroinitializer }, align 32
@event_nfsd_set_fh_dentry_badexport = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_fh_err_class, %union.anon.186 { ptr @__tracepoint_nfsd_set_fh_dentry_badexport }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_fh_err_class }, ptr @print_fmt_nfsd_fh_err_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_set_fh_dentry_badexport = internal global ptr @event_nfsd_set_fh_dentry_badexport, section "_ftrace_events", align 4
@event_nfsd_set_fh_dentry_badhandle = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_fh_err_class, %union.anon.186 { ptr @__tracepoint_nfsd_set_fh_dentry_badhandle }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_fh_err_class }, ptr @print_fmt_nfsd_fh_err_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_set_fh_dentry_badhandle = internal global ptr @event_nfsd_set_fh_dentry_badhandle, section "_ftrace_events", align 4
@trace_event_fields_nfsd_exp_find_key = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.28, %union.anon.184 { %struct.anon.185 { ptr @.str.39, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.40, %union.anon.184 { %struct.anon.185 { ptr @.str.41, i32 24, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.30, %union.anon.184 { %struct.anon.185 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.184 { %struct.anon.185 { ptr @.str.29, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_nfsd_exp_find_key = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_exp_find_key, ptr @perf_trace_nfsd_exp_find_key, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_exp_find_key, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_exp_find_key, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_exp_find_key, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_exp_find_key = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_exp_find_key, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_exp_find_key = internal global { [118 x i8], [42 x i8] } { [118 x i8] c"\22fsid=%x::%s domain=%s status=%d\22, REC->fsidtype, __print_array(REC->fsid, 6, 4), __get_str(auth_domain), REC->status\00", [42 x i8] zeroinitializer }, align 32
@event_nfsd_exp_find_key = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_exp_find_key, %union.anon.186 { ptr @__tracepoint_nfsd_exp_find_key }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_exp_find_key }, ptr @print_fmt_nfsd_exp_find_key, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_exp_find_key = internal global ptr @event_nfsd_exp_find_key, section "_ftrace_events", align 4
@trace_event_fields_nfsd_expkey_update = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.28, %union.anon.184 { %struct.anon.185 { ptr @.str.39, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.40, %union.anon.184 { %struct.anon.185 { ptr @.str.41, i32 24, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.30, %union.anon.184 { %struct.anon.185 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.30, %union.anon.184 { %struct.anon.185 { ptr @.str.44, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.45, %union.anon.184 { %struct.anon.185 { ptr @.str.46, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_nfsd_expkey_update = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_expkey_update, ptr @perf_trace_nfsd_expkey_update, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_expkey_update, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_expkey_update, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_expkey_update, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_expkey_update = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_expkey_update, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_expkey_update = internal global { [157 x i8], [35 x i8] } { [157 x i8] c"\22fsid=%x::%s domain=%s path=%s cache=%s\22, REC->fsidtype, __print_array(REC->fsid, 6, 4), __get_str(auth_domain), __get_str(path), REC->cache ? \22pos\22 : \22neg\22\00", [35 x i8] zeroinitializer }, align 32
@event_nfsd_expkey_update = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_expkey_update, %union.anon.186 { ptr @__tracepoint_nfsd_expkey_update }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_expkey_update }, ptr @print_fmt_nfsd_expkey_update, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_expkey_update = internal global ptr @event_nfsd_expkey_update, section "_ftrace_events", align 4
@trace_event_fields_nfsd_exp_get_by_name = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.30, %union.anon.184 { %struct.anon.185 { ptr @.str.44, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.30, %union.anon.184 { %struct.anon.185 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.184 { %struct.anon.185 { ptr @.str.29, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_nfsd_exp_get_by_name = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_exp_get_by_name, ptr @perf_trace_nfsd_exp_get_by_name, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_exp_get_by_name, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_exp_get_by_name, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_exp_get_by_name, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_exp_get_by_name = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_exp_get_by_name, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_exp_get_by_name = internal global { [84 x i8], [44 x i8] } { [84 x i8] c"\22path=%s domain=%s status=%d\22, __get_str(path), __get_str(auth_domain), REC->status\00", [44 x i8] zeroinitializer }, align 32
@event_nfsd_exp_get_by_name = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_exp_get_by_name, %union.anon.186 { ptr @__tracepoint_nfsd_exp_get_by_name }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_exp_get_by_name }, ptr @print_fmt_nfsd_exp_get_by_name, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_exp_get_by_name = internal global ptr @event_nfsd_exp_get_by_name, section "_ftrace_events", align 4
@trace_event_fields_nfsd_export_update = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.30, %union.anon.184 { %struct.anon.185 { ptr @.str.44, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.30, %union.anon.184 { %struct.anon.185 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.45, %union.anon.184 { %struct.anon.185 { ptr @.str.46, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_nfsd_export_update = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_export_update, ptr @perf_trace_nfsd_export_update, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_export_update, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_export_update, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_export_update, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_export_update = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_export_update, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_export_update = internal global { [98 x i8], [62 x i8] } { [98 x i8] c"\22path=%s domain=%s cache=%s\22, __get_str(path), __get_str(auth_domain), REC->cache ? \22pos\22 : \22neg\22\00", [62 x i8] zeroinitializer }, align 32
@event_nfsd_export_update = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_export_update, %union.anon.186 { ptr @__tracepoint_nfsd_export_update }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_export_update }, ptr @print_fmt_nfsd_export_update, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_export_update = internal global ptr @event_nfsd_export_update, section "_ftrace_events", align 4
@trace_event_fields_nfsd_io_class = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.17, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.52, %union.anon.184 { %struct.anon.185 { ptr @.str.53, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.54, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_nfsd_io_class = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_io_class, ptr @perf_trace_nfsd_io_class, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_io_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_io_class, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_io_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_io_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_io_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_io_class = internal global { [94 x i8], [34 x i8] } { [94 x i8] c"\22xid=0x%08x fh_hash=0x%08x offset=%llu len=%u\22, REC->xid, REC->fh_hash, REC->offset, REC->len\00", [34 x i8] zeroinitializer }, align 32
@event_nfsd_read_start = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_io_class, %union.anon.186 { ptr @__tracepoint_nfsd_read_start }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_io_class }, ptr @print_fmt_nfsd_io_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_read_start = internal global ptr @event_nfsd_read_start, section "_ftrace_events", align 4
@event_nfsd_read_splice = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_io_class, %union.anon.186 { ptr @__tracepoint_nfsd_read_splice }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_io_class }, ptr @print_fmt_nfsd_io_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_read_splice = internal global ptr @event_nfsd_read_splice, section "_ftrace_events", align 4
@event_nfsd_read_vector = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_io_class, %union.anon.186 { ptr @__tracepoint_nfsd_read_vector }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_io_class }, ptr @print_fmt_nfsd_io_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_read_vector = internal global ptr @event_nfsd_read_vector, section "_ftrace_events", align 4
@event_nfsd_read_io_done = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_io_class, %union.anon.186 { ptr @__tracepoint_nfsd_read_io_done }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_io_class }, ptr @print_fmt_nfsd_io_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_read_io_done = internal global ptr @event_nfsd_read_io_done, section "_ftrace_events", align 4
@event_nfsd_read_done = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_io_class, %union.anon.186 { ptr @__tracepoint_nfsd_read_done }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_io_class }, ptr @print_fmt_nfsd_io_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_read_done = internal global ptr @event_nfsd_read_done, section "_ftrace_events", align 4
@event_nfsd_write_start = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_io_class, %union.anon.186 { ptr @__tracepoint_nfsd_write_start }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_io_class }, ptr @print_fmt_nfsd_io_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_write_start = internal global ptr @event_nfsd_write_start, section "_ftrace_events", align 4
@event_nfsd_write_opened = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_io_class, %union.anon.186 { ptr @__tracepoint_nfsd_write_opened }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_io_class }, ptr @print_fmt_nfsd_io_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_write_opened = internal global ptr @event_nfsd_write_opened, section "_ftrace_events", align 4
@event_nfsd_write_io_done = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_io_class, %union.anon.186 { ptr @__tracepoint_nfsd_write_io_done }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_io_class }, ptr @print_fmt_nfsd_io_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_write_io_done = internal global ptr @event_nfsd_write_io_done, section "_ftrace_events", align 4
@event_nfsd_write_done = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_io_class, %union.anon.186 { ptr @__tracepoint_nfsd_write_done }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_io_class }, ptr @print_fmt_nfsd_io_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_write_done = internal global ptr @event_nfsd_write_done, section "_ftrace_events", align 4
@trace_event_fields_nfsd_err_class = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.17, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.56, %union.anon.184 { %struct.anon.185 { ptr @.str.53, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.184 { %struct.anon.185 { ptr @.str.29, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_nfsd_err_class = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_err_class, ptr @perf_trace_nfsd_err_class, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_err_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_err_class, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_err_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_err_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_err_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_err_class = internal global { [100 x i8], [60 x i8] } { [100 x i8] c"\22xid=0x%08x fh_hash=0x%08x offset=%lld status=%d\22, REC->xid, REC->fh_hash, REC->offset, REC->status\00", [60 x i8] zeroinitializer }, align 32
@event_nfsd_read_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_err_class, %union.anon.186 { ptr @__tracepoint_nfsd_read_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_err_class }, ptr @print_fmt_nfsd_err_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_read_err = internal global ptr @event_nfsd_read_err, section "_ftrace_events", align 4
@event_nfsd_write_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_err_class, %union.anon.186 { ptr @__tracepoint_nfsd_write_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_err_class }, ptr @print_fmt_nfsd_err_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_write_err = internal global ptr @event_nfsd_write_err, section "_ftrace_events", align 4
@trace_event_fields_nfsd_dirent = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.52, %union.anon.184 { %struct.anon.185 { ptr @.str.58, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.30, %union.anon.184 { %struct.anon.185 { ptr @.str.31, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_nfsd_dirent = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_dirent, ptr @perf_trace_nfsd_dirent, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_dirent, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_dirent, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_dirent, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_dirent = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_dirent, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_dirent = internal global { [75 x i8], [53 x i8] } { [75 x i8] c"\22fh_hash=0x%08x ino=%llu name=%s\22, REC->fh_hash, REC->ino, __get_str(name)\00", [53 x i8] zeroinitializer }, align 32
@event_nfsd_dirent = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_dirent, %union.anon.186 { ptr @__tracepoint_nfsd_dirent }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_dirent }, ptr @print_fmt_nfsd_dirent, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_dirent = internal global ptr @event_nfsd_dirent, section "_ftrace_events", align 4
@trace_event_fields_nfsd_copy_err_class = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.17, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.60, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.56, %union.anon.184 { %struct.anon.185 { ptr @.str.61, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.62, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.56, %union.anon.184 { %struct.anon.185 { ptr @.str.63, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.52, %union.anon.184 { %struct.anon.185 { ptr @.str.64, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.184 { %struct.anon.185 { ptr @.str.29, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_nfsd_copy_err_class = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_copy_err_class, ptr @perf_trace_nfsd_copy_err_class, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_copy_err_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_copy_err_class, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_copy_err_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_copy_err_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_copy_err_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_copy_err_class = internal global { [229 x i8], [59 x i8] } { [229 x i8] c"\22xid=0x%08x src_fh_hash=0x%08x src_offset=%lld dst_fh_hash=0x%08x dst_offset=%lld count=%llu status=%d\22, REC->xid, REC->src_fh_hash, REC->src_offset, REC->dst_fh_hash, REC->dst_offset, (unsigned long long)REC->count, REC->status\00", [59 x i8] zeroinitializer }, align 32
@event_nfsd_clone_file_range_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_copy_err_class, %union.anon.186 { ptr @__tracepoint_nfsd_clone_file_range_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_copy_err_class }, ptr @print_fmt_nfsd_copy_err_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_clone_file_range_err = internal global ptr @event_nfsd_clone_file_range_err, section "_ftrace_events", align 4
@trace_event_fields_nfsd_stateid_class = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.67, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.68, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.69, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_nfsd_stateid_class = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_stateid_class, ptr @perf_trace_nfsd_stateid_class, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_stateid_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_stateid_class, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_stateid_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_stateid_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_stateid_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_stateid_class = internal global { [95 x i8], [33 x i8] } { [95 x i8] c"\22client %08x:%08x stateid %08x:%08x\22, REC->cl_boot, REC->cl_id, REC->si_id, REC->si_generation\00", [33 x i8] zeroinitializer }, align 32
@event_nfsd_layoutstate_alloc = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_stateid_class, %union.anon.186 { ptr @__tracepoint_nfsd_layoutstate_alloc }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_stateid_class }, ptr @print_fmt_nfsd_stateid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_layoutstate_alloc = internal global ptr @event_nfsd_layoutstate_alloc, section "_ftrace_events", align 4
@event_nfsd_layoutstate_unhash = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_stateid_class, %union.anon.186 { ptr @__tracepoint_nfsd_layoutstate_unhash }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_stateid_class }, ptr @print_fmt_nfsd_stateid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_layoutstate_unhash = internal global ptr @event_nfsd_layoutstate_unhash, section "_ftrace_events", align 4
@event_nfsd_layoutstate_free = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_stateid_class, %union.anon.186 { ptr @__tracepoint_nfsd_layoutstate_free }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_stateid_class }, ptr @print_fmt_nfsd_stateid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_layoutstate_free = internal global ptr @event_nfsd_layoutstate_free, section "_ftrace_events", align 4
@event_nfsd_layout_get_lookup_fail = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_stateid_class, %union.anon.186 { ptr @__tracepoint_nfsd_layout_get_lookup_fail }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_stateid_class }, ptr @print_fmt_nfsd_stateid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_layout_get_lookup_fail = internal global ptr @event_nfsd_layout_get_lookup_fail, section "_ftrace_events", align 4
@event_nfsd_layout_commit_lookup_fail = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_stateid_class, %union.anon.186 { ptr @__tracepoint_nfsd_layout_commit_lookup_fail }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_stateid_class }, ptr @print_fmt_nfsd_stateid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_layout_commit_lookup_fail = internal global ptr @event_nfsd_layout_commit_lookup_fail, section "_ftrace_events", align 4
@event_nfsd_layout_return_lookup_fail = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_stateid_class, %union.anon.186 { ptr @__tracepoint_nfsd_layout_return_lookup_fail }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_stateid_class }, ptr @print_fmt_nfsd_stateid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_layout_return_lookup_fail = internal global ptr @event_nfsd_layout_return_lookup_fail, section "_ftrace_events", align 4
@event_nfsd_layout_recall = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_stateid_class, %union.anon.186 { ptr @__tracepoint_nfsd_layout_recall }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_stateid_class }, ptr @print_fmt_nfsd_stateid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_layout_recall = internal global ptr @event_nfsd_layout_recall, section "_ftrace_events", align 4
@event_nfsd_layout_recall_done = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_stateid_class, %union.anon.186 { ptr @__tracepoint_nfsd_layout_recall_done }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_stateid_class }, ptr @print_fmt_nfsd_stateid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_layout_recall_done = internal global ptr @event_nfsd_layout_recall_done, section "_ftrace_events", align 4
@event_nfsd_layout_recall_fail = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_stateid_class, %union.anon.186 { ptr @__tracepoint_nfsd_layout_recall_fail }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_stateid_class }, ptr @print_fmt_nfsd_stateid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_layout_recall_fail = internal global ptr @event_nfsd_layout_recall_fail, section "_ftrace_events", align 4
@event_nfsd_layout_recall_release = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_stateid_class, %union.anon.186 { ptr @__tracepoint_nfsd_layout_recall_release }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_stateid_class }, ptr @print_fmt_nfsd_stateid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_layout_recall_release = internal global ptr @event_nfsd_layout_recall_release, section "_ftrace_events", align 4
@event_nfsd_open = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_stateid_class, %union.anon.186 { ptr @__tracepoint_nfsd_open }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_stateid_class }, ptr @print_fmt_nfsd_stateid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_open = internal global ptr @event_nfsd_open, section "_ftrace_events", align 4
@event_nfsd_deleg_read = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_stateid_class, %union.anon.186 { ptr @__tracepoint_nfsd_deleg_read }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_stateid_class }, ptr @print_fmt_nfsd_stateid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_deleg_read = internal global ptr @event_nfsd_deleg_read, section "_ftrace_events", align 4
@event_nfsd_deleg_recall = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_stateid_class, %union.anon.186 { ptr @__tracepoint_nfsd_deleg_recall }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_stateid_class }, ptr @print_fmt_nfsd_stateid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_deleg_recall = internal global ptr @event_nfsd_deleg_recall, section "_ftrace_events", align 4
@trace_event_fields_nfsd_stateseqid_class = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.71, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.67, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.68, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.69, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_nfsd_stateseqid_class = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_stateseqid_class, ptr @perf_trace_nfsd_stateseqid_class, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_stateseqid_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_stateseqid_class, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_stateseqid_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_stateseqid_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_stateseqid_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_stateseqid_class = internal global { [116 x i8], [44 x i8] } { [116 x i8] c"\22seqid=%u client %08x:%08x stateid %08x:%08x\22, REC->seqid, REC->cl_boot, REC->cl_id, REC->si_id, REC->si_generation\00", [44 x i8] zeroinitializer }, align 32
@event_nfsd_preprocess = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_stateseqid_class, %union.anon.186 { ptr @__tracepoint_nfsd_preprocess }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_stateseqid_class }, ptr @print_fmt_nfsd_stateseqid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_preprocess = internal global ptr @event_nfsd_preprocess, section "_ftrace_events", align 4
@event_nfsd_open_confirm = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_stateseqid_class, %union.anon.186 { ptr @__tracepoint_nfsd_open_confirm }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_stateseqid_class }, ptr @print_fmt_nfsd_stateseqid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_open_confirm = internal global ptr @event_nfsd_open_confirm, section "_ftrace_events", align 4
@trace_event_fields_nfsd_clientid_class = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.67, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_nfsd_clientid_class = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_clientid_class, ptr @perf_trace_nfsd_clientid_class, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_clientid_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_clientid_class, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_clientid_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_clientid_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_clientid_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_clientid_class = internal global { [45 x i8], [51 x i8] } { [45 x i8] c"\22client %08x:%08x\22, REC->cl_boot, REC->cl_id\00", [51 x i8] zeroinitializer }, align 32
@event_nfsd_clid_expire_unconf = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_clientid_class, %union.anon.186 { ptr @__tracepoint_nfsd_clid_expire_unconf }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_clientid_class }, ptr @print_fmt_nfsd_clientid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_clid_expire_unconf = internal global ptr @event_nfsd_clid_expire_unconf, section "_ftrace_events", align 4
@event_nfsd_clid_reclaim_complete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_clientid_class, %union.anon.186 { ptr @__tracepoint_nfsd_clid_reclaim_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_clientid_class }, ptr @print_fmt_nfsd_clientid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_clid_reclaim_complete = internal global ptr @event_nfsd_clid_reclaim_complete, section "_ftrace_events", align 4
@event_nfsd_clid_confirmed = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_clientid_class, %union.anon.186 { ptr @__tracepoint_nfsd_clid_confirmed }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_clientid_class }, ptr @print_fmt_nfsd_clientid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_clid_confirmed = internal global ptr @event_nfsd_clid_confirmed, section "_ftrace_events", align 4
@event_nfsd_clid_destroyed = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_clientid_class, %union.anon.186 { ptr @__tracepoint_nfsd_clid_destroyed }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_clientid_class }, ptr @print_fmt_nfsd_clientid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_clid_destroyed = internal global ptr @event_nfsd_clid_destroyed, section "_ftrace_events", align 4
@event_nfsd_clid_admin_expired = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_clientid_class, %union.anon.186 { ptr @__tracepoint_nfsd_clid_admin_expired }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_clientid_class }, ptr @print_fmt_nfsd_clientid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_clid_admin_expired = internal global ptr @event_nfsd_clid_admin_expired, section "_ftrace_events", align 4
@event_nfsd_clid_replaced = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_clientid_class, %union.anon.186 { ptr @__tracepoint_nfsd_clid_replaced }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_clientid_class }, ptr @print_fmt_nfsd_clientid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_clid_replaced = internal global ptr @event_nfsd_clid_replaced, section "_ftrace_events", align 4
@event_nfsd_clid_purged = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_clientid_class, %union.anon.186 { ptr @__tracepoint_nfsd_clid_purged }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_clientid_class }, ptr @print_fmt_nfsd_clientid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_clid_purged = internal global ptr @event_nfsd_clid_purged, section "_ftrace_events", align 4
@event_nfsd_clid_renew = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_clientid_class, %union.anon.186 { ptr @__tracepoint_nfsd_clid_renew }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_clientid_class }, ptr @print_fmt_nfsd_clientid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_clid_renew = internal global ptr @event_nfsd_clid_renew, section "_ftrace_events", align 4
@event_nfsd_clid_stale = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_clientid_class, %union.anon.186 { ptr @__tracepoint_nfsd_clid_stale }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_clientid_class }, ptr @print_fmt_nfsd_clientid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_clid_stale = internal global ptr @event_nfsd_clid_stale, section "_ftrace_events", align 4
@trace_event_fields_nfsd_net_class = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.74, %union.anon.184 { %struct.anon.185 { ptr @.str.75, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_nfsd_net_class = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_net_class, ptr @perf_trace_nfsd_net_class, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_net_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_net_class, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_net_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_net_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_net_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_net_class = internal global { [35 x i8], [61 x i8] } { [35 x i8] c"\22boot_time=%16llx\22, REC->boot_time\00", [61 x i8] zeroinitializer }, align 32
@event_nfsd_grace_start = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_net_class, %union.anon.186 { ptr @__tracepoint_nfsd_grace_start }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_net_class }, ptr @print_fmt_nfsd_net_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_grace_start = internal global ptr @event_nfsd_grace_start, section "_ftrace_events", align 4
@event_nfsd_grace_complete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_net_class, %union.anon.186 { ptr @__tracepoint_nfsd_grace_complete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_net_class }, ptr @print_fmt_nfsd_net_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_grace_complete = internal global ptr @event_nfsd_grace_complete, section "_ftrace_events", align 4
@trace_event_fields_nfsd_writeverf_reset = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.74, %union.anon.184 { %struct.anon.185 { ptr @.str.75, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.17, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.184 { %struct.anon.185 { ptr @.str.77, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.184 { %struct.anon.185 { ptr @.str.79, i32 8, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_nfsd_writeverf_reset = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_writeverf_reset, ptr @perf_trace_nfsd_writeverf_reset, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_writeverf_reset, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_writeverf_reset, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_writeverf_reset, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_writeverf_reset = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_writeverf_reset, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_writeverf_reset = internal global { [130 x i8], [62 x i8] } { [130 x i8] c"\22boot_time=%16llx xid=0x%08x error=%d new verifier=0x%s\22, REC->boot_time, REC->xid, REC->error, __print_hex_str(REC->verifier, 8)\00", [62 x i8] zeroinitializer }, align 32
@event_nfsd_writeverf_reset = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_writeverf_reset, %union.anon.186 { ptr @__tracepoint_nfsd_writeverf_reset }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_writeverf_reset }, ptr @print_fmt_nfsd_writeverf_reset, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_writeverf_reset = internal global ptr @event_nfsd_writeverf_reset, section "_ftrace_events", align 4
@trace_event_fields_nfsd_clid_cred_mismatch = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.67, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.33, %union.anon.184 { %struct.anon.185 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.33, %union.anon.184 { %struct.anon.185 { ptr @.str.82, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.18, %union.anon.184 { %struct.anon.185 { ptr @.str.83, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_nfsd_clid_cred_mismatch = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_clid_cred_mismatch, ptr @perf_trace_nfsd_clid_cred_mismatch, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_clid_cred_mismatch, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_clid_cred_mismatch, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_clid_cred_mismatch, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_clid_cred_mismatch = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_clid_cred_mismatch, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_clid_cred_mismatch = internal global { [515 x i8], [157 x i8] } { [515 x i8] c"\22client %08x:%08x flavor=%s, conflict=%s from addr=%pISpc\22, REC->cl_boot, REC->cl_id, __print_symbolic(REC->cl_flavor, { RPC_AUTH_NULL, \22none\22 }, { RPC_AUTH_UNIX, \22sys\22 }, { RPC_AUTH_GSS, \22gss\22 }, { RPC_AUTH_GSS_KRB5, \22krb5\22 }, { RPC_AUTH_GSS_KRB5I, \22krb5i\22 }, { RPC_AUTH_GSS_KRB5P, \22krb5p\22 }), __print_symbolic(REC->new_flavor, { RPC_AUTH_NULL, \22none\22 }, { RPC_AUTH_UNIX, \22sys\22 }, { RPC_AUTH_GSS, \22gss\22 }, { RPC_AUTH_GSS_KRB5, \22krb5\22 }, { RPC_AUTH_GSS_KRB5I, \22krb5i\22 }, { RPC_AUTH_GSS_KRB5P, \22krb5p\22 }), REC->addr\00", [157 x i8] zeroinitializer }, align 32
@event_nfsd_clid_cred_mismatch = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_clid_cred_mismatch, %union.anon.186 { ptr @__tracepoint_nfsd_clid_cred_mismatch }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_clid_cred_mismatch }, ptr @print_fmt_nfsd_clid_cred_mismatch, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_clid_cred_mismatch = internal global ptr @event_nfsd_clid_cred_mismatch, section "_ftrace_events", align 4
@trace_event_fields_nfsd_clid_verf_mismatch = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.67, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.184 { %struct.anon.185 { ptr @.str.92, i32 8, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.184 { %struct.anon.185 { ptr @.str.93, i32 8, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.18, %union.anon.184 { %struct.anon.185 { ptr @.str.83, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_nfsd_clid_verf_mismatch = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_clid_verf_mismatch, ptr @perf_trace_nfsd_clid_verf_mismatch, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_clid_verf_mismatch, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_clid_verf_mismatch, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_clid_verf_mismatch, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_clid_verf_mismatch = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_clid_verf_mismatch, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_clid_verf_mismatch = internal global { [174 x i8], [50 x i8] } { [174 x i8] c"\22client %08x:%08x verf=0x%s, updated=0x%s from addr=%pISpc\22, REC->cl_boot, REC->cl_id, __print_hex_str(REC->cl_verifier, 8), __print_hex_str(REC->new_verifier, 8), REC->addr\00", [50 x i8] zeroinitializer }, align 32
@event_nfsd_clid_verf_mismatch = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_clid_verf_mismatch, %union.anon.186 { ptr @__tracepoint_nfsd_clid_verf_mismatch }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_clid_verf_mismatch }, ptr @print_fmt_nfsd_clid_verf_mismatch, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_clid_verf_mismatch = internal global ptr @event_nfsd_clid_verf_mismatch, section "_ftrace_events", align 4
@trace_event_fields_nfsd_clid_class = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.67, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.18, %union.anon.184 { %struct.anon.185 { ptr @.str.83, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.33, %union.anon.184 { %struct.anon.185 { ptr @.str.95, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.184 { %struct.anon.185 { ptr @.str.79, i32 8, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.30, %union.anon.184 { %struct.anon.185 { ptr @.str.31, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_nfsd_clid_class = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_clid_class, ptr @perf_trace_nfsd_clid_class, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_clid_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_clid_class, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_clid_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_clid_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_clid_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_clid_class = internal global { [360 x i8], [88 x i8] } { [360 x i8] c"\22addr=%pISpc name='%s' verifier=0x%s flavor=%s client=%08x:%08x\22, REC->addr, __get_str(name), __print_hex_str(REC->verifier, 8), __print_symbolic(REC->flavor, { RPC_AUTH_NULL, \22none\22 }, { RPC_AUTH_UNIX, \22sys\22 }, { RPC_AUTH_GSS, \22gss\22 }, { RPC_AUTH_GSS_KRB5, \22krb5\22 }, { RPC_AUTH_GSS_KRB5I, \22krb5i\22 }, { RPC_AUTH_GSS_KRB5P, \22krb5p\22 }), REC->cl_boot, REC->cl_id\00", [88 x i8] zeroinitializer }, align 32
@event_nfsd_clid_fresh = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_clid_class, %union.anon.186 { ptr @__tracepoint_nfsd_clid_fresh }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_clid_class }, ptr @print_fmt_nfsd_clid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_clid_fresh = internal global ptr @event_nfsd_clid_fresh, section "_ftrace_events", align 4
@event_nfsd_clid_confirmed_r = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_clid_class, %union.anon.186 { ptr @__tracepoint_nfsd_clid_confirmed_r }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_clid_class }, ptr @print_fmt_nfsd_clid_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_clid_confirmed_r = internal global ptr @event_nfsd_clid_confirmed_r, section "_ftrace_events", align 4
@trace_event_fields_nfsd_file_class = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.14, %union.anon.184 { %struct.anon.185 { ptr @.str.97, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.184 { %struct.anon.185 { ptr @.str.99, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.184 { %struct.anon.185 { ptr @.str.100, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.33, %union.anon.184 { %struct.anon.185 { ptr @.str.101, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.102, %union.anon.184 { %struct.anon.185 { ptr @.str.103, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.104, %union.anon.184 { %struct.anon.185 { ptr @.str.105, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_nfsd_file_class = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_file_class, ptr @perf_trace_nfsd_file_class, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_file_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_file_class, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_file_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_file_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_file_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_file_class = internal global { [628 x i8], [140 x i8] } { [628 x i8] c"\22hash=0x%x inode=%p ref=%d flags=%s may=%s file=%p\22, REC->nf_hashval, REC->nf_inode, REC->nf_ref, __print_flags(REC->nf_flags, \22|\22, { 1 << (0), \22HASHED\22 }, { 1 << (1), \22PENDING\22 }, { 1 << (2), \22BREAK_READ\22 }, { 1 << (3), \22BREAK_WRITE\22 }, { 1 << (4), \22REFERENCED\22}), __print_flags(REC->nf_may, \22|\22, { 0x001, \22EXEC\22 }, { 0x002, \22WRITE\22 }, { 0x004, \22READ\22 }, { 0x008, \22SATTR\22 }, { 0x010, \22TRUNC\22 }, { 0x020, \22LOCK\22 }, { 0x040, \22OWNER_OVERRIDE\22 }, { 0x080, \22LOCAL_ACCESS\22 }, { 0x100, \22BYPASS_GSS_ON_ROOT\22 }, { 0x200, \22NOT_BREAK_LEASE\22 }, { 0x400, \22BYPASS_GSS\22 }, { 0x800, \22READ_IF_EXEC\22 }, { 0x1000, \2264BIT_COOKIE\22 }), REC->nf_file\00", [140 x i8] zeroinitializer }, align 32
@event_nfsd_file_alloc = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_file_class, %union.anon.186 { ptr @__tracepoint_nfsd_file_alloc }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_file_class }, ptr @print_fmt_nfsd_file_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_file_alloc = internal global ptr @event_nfsd_file_alloc, section "_ftrace_events", align 4
@event_nfsd_file_put_final = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_file_class, %union.anon.186 { ptr @__tracepoint_nfsd_file_put_final }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_file_class }, ptr @print_fmt_nfsd_file_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_file_put_final = internal global ptr @event_nfsd_file_put_final, section "_ftrace_events", align 4
@event_nfsd_file_unhash = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_file_class, %union.anon.186 { ptr @__tracepoint_nfsd_file_unhash }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_file_class }, ptr @print_fmt_nfsd_file_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_file_unhash = internal global ptr @event_nfsd_file_unhash, section "_ftrace_events", align 4
@event_nfsd_file_put = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_file_class, %union.anon.186 { ptr @__tracepoint_nfsd_file_put }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_file_class }, ptr @print_fmt_nfsd_file_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_file_put = internal global ptr @event_nfsd_file_put, section "_ftrace_events", align 4
@event_nfsd_file_unhash_and_release_locked = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_file_class, %union.anon.186 { ptr @__tracepoint_nfsd_file_unhash_and_release_locked }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_file_class }, ptr @print_fmt_nfsd_file_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_file_unhash_and_release_locked = internal global ptr @event_nfsd_file_unhash_and_release_locked, section "_ftrace_events", align 4
@trace_event_fields_nfsd_file_acquire = internal global { [10 x %struct.trace_event_fields], [48 x i8] } { [10 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.17, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.184 { %struct.anon.185 { ptr @.str.127, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.98, %union.anon.184 { %struct.anon.185 { ptr @.str.128, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.33, %union.anon.184 { %struct.anon.185 { ptr @.str.129, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.184 { %struct.anon.185 { ptr @.str.100, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.33, %union.anon.184 { %struct.anon.185 { ptr @.str.101, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.33, %union.anon.184 { %struct.anon.185 { ptr @.str.103, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.104, %union.anon.184 { %struct.anon.185 { ptr @.str.105, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.29, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_nfsd_file_acquire = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_file_acquire, ptr @perf_trace_nfsd_file_acquire, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_file_acquire, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_file_acquire, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_file_acquire, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_file_acquire = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_file_acquire, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_file_acquire = internal global { [1035 x i8], [277 x i8] } { [1035 x i8] c"\22xid=0x%x hash=0x%x inode=%p may_flags=%s ref=%d nf_flags=%s nf_may=%s nf_file=%p status=%u\22, REC->xid, REC->hash, REC->inode, __print_flags(REC->may_flags, \22|\22, { 0x001, \22EXEC\22 }, { 0x002, \22WRITE\22 }, { 0x004, \22READ\22 }, { 0x008, \22SATTR\22 }, { 0x010, \22TRUNC\22 }, { 0x020, \22LOCK\22 }, { 0x040, \22OWNER_OVERRIDE\22 }, { 0x080, \22LOCAL_ACCESS\22 }, { 0x100, \22BYPASS_GSS_ON_ROOT\22 }, { 0x200, \22NOT_BREAK_LEASE\22 }, { 0x400, \22BYPASS_GSS\22 }, { 0x800, \22READ_IF_EXEC\22 }, { 0x1000, \2264BIT_COOKIE\22 }), REC->nf_ref, __print_flags(REC->nf_flags, \22|\22, { 1 << (0), \22HASHED\22 }, { 1 << (1), \22PENDING\22 }, { 1 << (2), \22BREAK_READ\22 }, { 1 << (3), \22BREAK_WRITE\22 }, { 1 << (4), \22REFERENCED\22}), __print_flags(REC->nf_may, \22|\22, { 0x001, \22EXEC\22 }, { 0x002, \22WRITE\22 }, { 0x004, \22READ\22 }, { 0x008, \22SATTR\22 }, { 0x010, \22TRUNC\22 }, { 0x020, \22LOCK\22 }, { 0x040, \22OWNER_OVERRIDE\22 }, { 0x080, \22LOCAL_ACCESS\22 }, { 0x100, \22BYPASS_GSS_ON_ROOT\22 }, { 0x200, \22NOT_BREAK_LEASE\22 }, { 0x400, \22BYPASS_GSS\22 }, { 0x800, \22READ_IF_EXEC\22 }, { 0x1000, \2264BIT_COOKIE\22 }), REC->nf_file, REC->status\00", [277 x i8] zeroinitializer }, align 32
@event_nfsd_file_acquire = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_file_acquire, %union.anon.186 { ptr @__tracepoint_nfsd_file_acquire }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_file_acquire }, ptr @print_fmt_nfsd_file_acquire, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_file_acquire = internal global ptr @event_nfsd_file_acquire, section "_ftrace_events", align 4
@trace_event_fields_nfsd_file_search_class = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.133, %union.anon.184 { %struct.anon.185 { ptr @.str.128, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.184 { %struct.anon.185 { ptr @.str.127, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.184 { %struct.anon.185 { ptr @.str.134, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_nfsd_file_search_class = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_file_search_class, ptr @perf_trace_nfsd_file_search_class, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_file_search_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_file_search_class, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_file_search_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_file_search_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_file_search_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_file_search_class = internal global { [65 x i8], [63 x i8] } { [65 x i8] c"\22hash=0x%x inode=%p found=%d\22, REC->hash, REC->inode, REC->found\00", [63 x i8] zeroinitializer }, align 32
@event_nfsd_file_close_inode_sync = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_file_search_class, %union.anon.186 { ptr @__tracepoint_nfsd_file_close_inode_sync }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_file_search_class }, ptr @print_fmt_nfsd_file_search_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_file_close_inode_sync = internal global ptr @event_nfsd_file_close_inode_sync, section "_ftrace_events", align 4
@event_nfsd_file_close_inode = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_file_search_class, %union.anon.186 { ptr @__tracepoint_nfsd_file_close_inode }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_file_search_class }, ptr @print_fmt_nfsd_file_search_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_file_close_inode = internal global ptr @event_nfsd_file_close_inode, section "_ftrace_events", align 4
@event_nfsd_file_is_cached = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_file_search_class, %union.anon.186 { ptr @__tracepoint_nfsd_file_is_cached }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_file_search_class }, ptr @print_fmt_nfsd_file_search_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_file_is_cached = internal global ptr @event_nfsd_file_is_cached, section "_ftrace_events", align 4
@trace_event_fields_nfsd_file_fsnotify_handle_event = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.133, %union.anon.184 { %struct.anon.185 { ptr @.str.128, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.14, %union.anon.184 { %struct.anon.185 { ptr @.str.136, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.137, %union.anon.184 { %struct.anon.185 { ptr @.str.138, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.139, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_nfsd_file_fsnotify_handle_event = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_file_fsnotify_handle_event, ptr @perf_trace_nfsd_file_fsnotify_handle_event, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_file_fsnotify_handle_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_file_fsnotify_handle_event, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_file_fsnotify_handle_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_file_fsnotify_handle_event = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_file_fsnotify_handle_event, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_file_fsnotify_handle_event = internal global { [86 x i8], [42 x i8] } { [86 x i8] c"\22inode=%p nlink=%u mode=0%ho mask=0x%x\22, REC->inode, REC->nlink, REC->mode, REC->mask\00", [42 x i8] zeroinitializer }, align 32
@event_nfsd_file_fsnotify_handle_event = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_file_fsnotify_handle_event, %union.anon.186 { ptr @__tracepoint_nfsd_file_fsnotify_handle_event }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_file_fsnotify_handle_event }, ptr @print_fmt_nfsd_file_fsnotify_handle_event, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_file_fsnotify_handle_event = internal global ptr @event_nfsd_file_fsnotify_handle_event, section "_ftrace_events", align 4
@trace_event_fields_nfsd_drc_found = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.74, %union.anon.184 { %struct.anon.185 { ptr @.str.75, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.33, %union.anon.184 { %struct.anon.185 { ptr @.str.141, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.17, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_nfsd_drc_found = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_drc_found, ptr @perf_trace_nfsd_drc_found, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_drc_found, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_drc_found, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_drc_found, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_drc_found = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_drc_found, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_drc_found = internal global { [166 x i8], [58 x i8] } { [166 x i8] c"\22boot_time=%16llx xid=0x%08x result=%s\22, REC->boot_time, REC->xid, __print_symbolic(REC->result, { RC_DROPIT, \22DROPIT\22 }, { RC_REPLY, \22REPLY\22 }, { RC_DOIT, \22DOIT\22 })\00", [58 x i8] zeroinitializer }, align 32
@event_nfsd_drc_found = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_drc_found, %union.anon.186 { ptr @__tracepoint_nfsd_drc_found }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_drc_found }, ptr @print_fmt_nfsd_drc_found, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_drc_found = internal global ptr @event_nfsd_drc_found, section "_ftrace_events", align 4
@trace_event_fields_nfsd_drc_mismatch = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.74, %union.anon.184 { %struct.anon.185 { ptr @.str.75, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.17, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.146, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.147, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_nfsd_drc_mismatch = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_drc_mismatch, ptr @perf_trace_nfsd_drc_mismatch, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_drc_mismatch, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_drc_mismatch, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_drc_mismatch, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_drc_mismatch = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_drc_mismatch, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_drc_mismatch = internal global { [122 x i8], [38 x i8] } { [122 x i8] c"\22boot_time=%16llx xid=0x%08x cached-csum=0x%08x ingress-csum=0x%08x\22, REC->boot_time, REC->xid, REC->cached, REC->ingress\00", [38 x i8] zeroinitializer }, align 32
@event_nfsd_drc_mismatch = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_drc_mismatch, %union.anon.186 { ptr @__tracepoint_nfsd_drc_mismatch }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_drc_mismatch }, ptr @print_fmt_nfsd_drc_mismatch, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_drc_mismatch = internal global ptr @event_nfsd_drc_mismatch, section "_ftrace_events", align 4
@trace_event_fields_nfsd_cb_args = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.67, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.149, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.150, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.18, %union.anon.184 { %struct.anon.185 { ptr @.str.83, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_nfsd_cb_args = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_cb_args, ptr @perf_trace_nfsd_cb_args, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_cb_args, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_cb_args, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_cb_args, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_cb_args = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_cb_args, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_cb_args = internal global { [108 x i8], [52 x i8] } { [108 x i8] c"\22addr=%pISpc client %08x:%08x prog=%u ident=%u\22, REC->addr, REC->cl_boot, REC->cl_id, REC->prog, REC->ident\00", [52 x i8] zeroinitializer }, align 32
@event_nfsd_cb_args = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_cb_args, %union.anon.186 { ptr @__tracepoint_nfsd_cb_args }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_cb_args }, ptr @print_fmt_nfsd_cb_args, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_cb_args = internal global ptr @event_nfsd_cb_args, section "_ftrace_events", align 4
@trace_event_fields_nfsd_cb_nodelegs = internal global { [3 x %struct.trace_event_fields], [56 x i8] } { [3 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.67, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_nfsd_cb_nodelegs = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_cb_nodelegs, ptr @perf_trace_nfsd_cb_nodelegs, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_cb_nodelegs, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_cb_nodelegs, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_cb_nodelegs, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_cb_nodelegs = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_cb_nodelegs, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_cb_nodelegs = internal global { [45 x i8], [51 x i8] } { [45 x i8] c"\22client %08x:%08x\22, REC->cl_boot, REC->cl_id\00", [51 x i8] zeroinitializer }, align 32
@event_nfsd_cb_nodelegs = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_cb_nodelegs, %union.anon.186 { ptr @__tracepoint_nfsd_cb_nodelegs }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_cb_nodelegs }, ptr @print_fmt_nfsd_cb_nodelegs, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_cb_nodelegs = internal global ptr @event_nfsd_cb_nodelegs, section "_ftrace_events", align 4
@trace_event_fields_nfsd_cb_class = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.33, %union.anon.184 { %struct.anon.185 { ptr @.str.152, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.67, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.18, %union.anon.184 { %struct.anon.185 { ptr @.str.83, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_nfsd_cb_class = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_cb_class, ptr @perf_trace_nfsd_cb_class, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_cb_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_cb_class, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_cb_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_cb_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_cb_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_cb_class = internal global { [168 x i8], [56 x i8] } { [168 x i8] c"\22addr=%pISpc client %08x:%08x state=%s\22, REC->addr, REC->cl_boot, REC->cl_id, __print_symbolic(REC->state, { 0, \22UP\22 }, { 1, \22UNKNOWN\22 }, { 2, \22DOWN\22 }, { 3, \22FAULT\22})\00", [56 x i8] zeroinitializer }, align 32
@event_nfsd_cb_state = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_cb_class, %union.anon.186 { ptr @__tracepoint_nfsd_cb_state }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_cb_class }, ptr @print_fmt_nfsd_cb_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_cb_state = internal global ptr @event_nfsd_cb_state, section "_ftrace_events", align 4
@event_nfsd_cb_probe = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_cb_class, %union.anon.186 { ptr @__tracepoint_nfsd_cb_probe }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_cb_class }, ptr @print_fmt_nfsd_cb_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_cb_probe = internal global ptr @event_nfsd_cb_probe, section "_ftrace_events", align 4
@event_nfsd_cb_lost = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_cb_class, %union.anon.186 { ptr @__tracepoint_nfsd_cb_lost }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_cb_class }, ptr @print_fmt_nfsd_cb_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_cb_lost = internal global ptr @event_nfsd_cb_lost, section "_ftrace_events", align 4
@event_nfsd_cb_shutdown = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_cb_class, %union.anon.186 { ptr @__tracepoint_nfsd_cb_shutdown }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_cb_class }, ptr @print_fmt_nfsd_cb_class, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_cb_shutdown = internal global ptr @event_nfsd_cb_shutdown, section "_ftrace_events", align 4
@trace_event_fields_nfsd_cb_setup = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.67, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.33, %union.anon.184 { %struct.anon.185 { ptr @.str.158, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.18, %union.anon.184 { %struct.anon.185 { ptr @.str.83, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.78, %union.anon.184 { %struct.anon.185 { ptr @.str.159, i32 8, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_nfsd_cb_setup = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_cb_setup, ptr @perf_trace_nfsd_cb_setup, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_cb_setup, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_cb_setup, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_cb_setup, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_cb_setup = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_cb_setup, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_cb_setup = internal global { [309 x i8], [75 x i8] } { [309 x i8] c"\22addr=%pISpc client %08x:%08x proto=%s flavor=%s\22, REC->addr, REC->cl_boot, REC->cl_id, REC->netid, __print_symbolic(REC->authflavor, { RPC_AUTH_NULL, \22none\22 }, { RPC_AUTH_UNIX, \22sys\22 }, { RPC_AUTH_GSS, \22gss\22 }, { RPC_AUTH_GSS_KRB5, \22krb5\22 }, { RPC_AUTH_GSS_KRB5I, \22krb5i\22 }, { RPC_AUTH_GSS_KRB5P, \22krb5p\22 })\00", [75 x i8] zeroinitializer }, align 32
@event_nfsd_cb_setup = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_cb_setup, %union.anon.186 { ptr @__tracepoint_nfsd_cb_setup }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_cb_setup }, ptr @print_fmt_nfsd_cb_setup, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_cb_setup = internal global ptr @event_nfsd_cb_setup, section "_ftrace_events", align 4
@trace_event_fields_nfsd_cb_setup_err = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.161, %union.anon.184 { %struct.anon.185 { ptr @.str.77, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.67, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.18, %union.anon.184 { %struct.anon.185 { ptr @.str.83, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_nfsd_cb_setup_err = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_cb_setup_err, ptr @perf_trace_nfsd_cb_setup_err, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_cb_setup_err, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_cb_setup_err, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_cb_setup_err, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_cb_setup_err = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_cb_setup_err, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_cb_setup_err = internal global { [90 x i8], [38 x i8] } { [90 x i8] c"\22addr=%pISpc client %08x:%08x error=%ld\22, REC->addr, REC->cl_boot, REC->cl_id, REC->error\00", [38 x i8] zeroinitializer }, align 32
@event_nfsd_cb_setup_err = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_cb_setup_err, %union.anon.186 { ptr @__tracepoint_nfsd_cb_setup_err }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_cb_setup_err }, ptr @print_fmt_nfsd_cb_setup_err, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_cb_setup_err = internal global ptr @event_nfsd_cb_setup_err, section "_ftrace_events", align 4
@trace_event_fields_nfsd_cb_recall = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.67, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.68, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.69, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.18, %union.anon.184 { %struct.anon.185 { ptr @.str.83, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_nfsd_cb_recall = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_cb_recall, ptr @perf_trace_nfsd_cb_recall, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_cb_recall, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_cb_recall, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_cb_recall, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_cb_recall = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_cb_recall, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_cb_recall = internal global { [118 x i8], [42 x i8] } { [118 x i8] c"\22addr=%pISpc client %08x:%08x stateid %08x:%08x\22, REC->addr, REC->cl_boot, REC->cl_id, REC->si_id, REC->si_generation\00", [42 x i8] zeroinitializer }, align 32
@event_nfsd_cb_recall = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_cb_recall, %union.anon.186 { ptr @__tracepoint_nfsd_cb_recall }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_cb_recall }, ptr @print_fmt_nfsd_cb_recall, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_cb_recall = internal global ptr @event_nfsd_cb_recall, section "_ftrace_events", align 4
@trace_event_fields_nfsd_cb_notify_lock = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.67, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.18, %union.anon.184 { %struct.anon.185 { ptr @.str.83, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_nfsd_cb_notify_lock = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_cb_notify_lock, ptr @perf_trace_nfsd_cb_notify_lock, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_cb_notify_lock, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_cb_notify_lock, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_cb_notify_lock, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_cb_notify_lock = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_cb_notify_lock, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_cb_notify_lock = internal global { [97 x i8], [63 x i8] } { [97 x i8] c"\22addr=%pISpc client %08x:%08x fh_hash=0x%08x\22, REC->addr, REC->cl_boot, REC->cl_id, REC->fh_hash\00", [63 x i8] zeroinitializer }, align 32
@event_nfsd_cb_notify_lock = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_cb_notify_lock, %union.anon.186 { ptr @__tracepoint_nfsd_cb_notify_lock }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_cb_notify_lock }, ptr @print_fmt_nfsd_cb_notify_lock, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_cb_notify_lock = internal global ptr @event_nfsd_cb_notify_lock, section "_ftrace_events", align 4
@trace_event_fields_nfsd_cb_offload = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.66, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.67, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.68, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.69, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.16, %union.anon.184 { %struct.anon.185 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.28, %union.anon.184 { %struct.anon.185 { ptr @.str.29, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.52, %union.anon.184 { %struct.anon.185 { ptr @.str.64, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.18, %union.anon.184 { %struct.anon.185 { ptr @.str.83, i32 28, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_nfsd_cb_offload = internal global %struct.trace_event_class { ptr @str__nfsd__trace_system_name, ptr @trace_event_raw_event_nfsd_cb_offload, ptr @perf_trace_nfsd_cb_offload, ptr @trace_event_reg, ptr @trace_event_fields_nfsd_cb_offload, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_nfsd_cb_offload, i64 24), ptr getelementptr (i8, ptr @event_class_nfsd_cb_offload, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_nfsd_cb_offload = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_nfsd_cb_offload, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_nfsd_cb_offload = internal global { [193 x i8], [63 x i8] } { [193 x i8] c"\22addr=%pISpc client %08x:%08x stateid %08x:%08x fh_hash=0x%08x count=%llu status=%d\22, REC->addr, REC->cl_boot, REC->cl_id, REC->si_id, REC->si_generation, REC->fh_hash, REC->count, REC->status\00", [63 x i8] zeroinitializer }, align 32
@event_nfsd_cb_offload = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_nfsd_cb_offload, %union.anon.186 { ptr @__tracepoint_nfsd_cb_offload }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_nfsd_cb_offload }, ptr @print_fmt_nfsd_cb_offload, ptr null, %union.anon.187 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_nfsd_cb_offload = internal global ptr @event_nfsd_cb_offload, section "_ftrace_events", align 4
@__bpf_trace_tp_map_nfsd_garbage_args_err = internal global %union.anon.188 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_garbage_args_err, ptr @__bpf_trace_nfsd_xdr_err_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_cant_encode_err = internal global %union.anon.189 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_cant_encode_err, ptr @__bpf_trace_nfsd_xdr_err_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_compound = internal global %union.anon.190 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_compound, ptr @__bpf_trace_nfsd_compound, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_compound_status = internal global %union.anon.191 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_compound_status, ptr @__bpf_trace_nfsd_compound_status, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_compound_decode_err = internal global %union.anon.192 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_compound_decode_err, ptr @__bpf_trace_nfsd_compound_decode_err, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_compound_encode_err = internal global %union.anon.193 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_compound_encode_err, ptr @__bpf_trace_nfsd_compound_encode_err, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_set_fh_dentry_badexport = internal global %union.anon.194 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_set_fh_dentry_badexport, ptr @__bpf_trace_nfsd_fh_err_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_set_fh_dentry_badhandle = internal global %union.anon.195 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_set_fh_dentry_badhandle, ptr @__bpf_trace_nfsd_fh_err_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_exp_find_key = internal global %union.anon.196 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_exp_find_key, ptr @__bpf_trace_nfsd_exp_find_key, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_expkey_update = internal global %union.anon.197 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_expkey_update, ptr @__bpf_trace_nfsd_expkey_update, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_exp_get_by_name = internal global %union.anon.198 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_exp_get_by_name, ptr @__bpf_trace_nfsd_exp_get_by_name, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_export_update = internal global %union.anon.199 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_export_update, ptr @__bpf_trace_nfsd_export_update, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_read_start = internal global %union.anon.200 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_read_start, ptr @__bpf_trace_nfsd_io_class, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_read_splice = internal global %union.anon.201 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_read_splice, ptr @__bpf_trace_nfsd_io_class, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_read_vector = internal global %union.anon.202 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_read_vector, ptr @__bpf_trace_nfsd_io_class, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_read_io_done = internal global %union.anon.203 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_read_io_done, ptr @__bpf_trace_nfsd_io_class, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_read_done = internal global %union.anon.204 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_read_done, ptr @__bpf_trace_nfsd_io_class, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_write_start = internal global %union.anon.205 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_write_start, ptr @__bpf_trace_nfsd_io_class, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_write_opened = internal global %union.anon.206 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_write_opened, ptr @__bpf_trace_nfsd_io_class, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_write_io_done = internal global %union.anon.207 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_write_io_done, ptr @__bpf_trace_nfsd_io_class, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_write_done = internal global %union.anon.208 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_write_done, ptr @__bpf_trace_nfsd_io_class, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_read_err = internal global %union.anon.209 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_read_err, ptr @__bpf_trace_nfsd_err_class, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_write_err = internal global %union.anon.210 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_write_err, ptr @__bpf_trace_nfsd_err_class, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_dirent = internal global %union.anon.211 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_dirent, ptr @__bpf_trace_nfsd_dirent, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_clone_file_range_err = internal global %union.anon.212 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_clone_file_range_err, ptr @__bpf_trace_nfsd_copy_err_class, i32 7, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_layoutstate_alloc = internal global %union.anon.213 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_layoutstate_alloc, ptr @__bpf_trace_nfsd_stateid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_layoutstate_unhash = internal global %union.anon.214 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_layoutstate_unhash, ptr @__bpf_trace_nfsd_stateid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_layoutstate_free = internal global %union.anon.215 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_layoutstate_free, ptr @__bpf_trace_nfsd_stateid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_layout_get_lookup_fail = internal global %union.anon.216 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_layout_get_lookup_fail, ptr @__bpf_trace_nfsd_stateid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_layout_commit_lookup_fail = internal global %union.anon.217 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_layout_commit_lookup_fail, ptr @__bpf_trace_nfsd_stateid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_layout_return_lookup_fail = internal global %union.anon.218 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_layout_return_lookup_fail, ptr @__bpf_trace_nfsd_stateid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_layout_recall = internal global %union.anon.219 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_layout_recall, ptr @__bpf_trace_nfsd_stateid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_layout_recall_done = internal global %union.anon.220 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_layout_recall_done, ptr @__bpf_trace_nfsd_stateid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_layout_recall_fail = internal global %union.anon.221 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_layout_recall_fail, ptr @__bpf_trace_nfsd_stateid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_layout_recall_release = internal global %union.anon.222 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_layout_recall_release, ptr @__bpf_trace_nfsd_stateid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_open = internal global %union.anon.223 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_open, ptr @__bpf_trace_nfsd_stateid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_deleg_read = internal global %union.anon.224 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_deleg_read, ptr @__bpf_trace_nfsd_stateid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_deleg_recall = internal global %union.anon.225 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_deleg_recall, ptr @__bpf_trace_nfsd_stateid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_preprocess = internal global %union.anon.226 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_preprocess, ptr @__bpf_trace_nfsd_stateseqid_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_open_confirm = internal global %union.anon.227 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_open_confirm, ptr @__bpf_trace_nfsd_stateseqid_class, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_clid_expire_unconf = internal global %union.anon.228 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_clid_expire_unconf, ptr @__bpf_trace_nfsd_clientid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_clid_reclaim_complete = internal global %union.anon.229 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_clid_reclaim_complete, ptr @__bpf_trace_nfsd_clientid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_clid_confirmed = internal global %union.anon.230 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_clid_confirmed, ptr @__bpf_trace_nfsd_clientid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_clid_destroyed = internal global %union.anon.231 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_clid_destroyed, ptr @__bpf_trace_nfsd_clientid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_clid_admin_expired = internal global %union.anon.232 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_clid_admin_expired, ptr @__bpf_trace_nfsd_clientid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_clid_replaced = internal global %union.anon.233 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_clid_replaced, ptr @__bpf_trace_nfsd_clientid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_clid_purged = internal global %union.anon.234 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_clid_purged, ptr @__bpf_trace_nfsd_clientid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_clid_renew = internal global %union.anon.235 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_clid_renew, ptr @__bpf_trace_nfsd_clientid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_clid_stale = internal global %union.anon.236 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_clid_stale, ptr @__bpf_trace_nfsd_clientid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_grace_start = internal global %union.anon.237 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_grace_start, ptr @__bpf_trace_nfsd_net_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_grace_complete = internal global %union.anon.238 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_grace_complete, ptr @__bpf_trace_nfsd_net_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_writeverf_reset = internal global %union.anon.239 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_writeverf_reset, ptr @__bpf_trace_nfsd_writeverf_reset, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_clid_cred_mismatch = internal global %union.anon.240 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_clid_cred_mismatch, ptr @__bpf_trace_nfsd_clid_cred_mismatch, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_clid_verf_mismatch = internal global %union.anon.241 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_clid_verf_mismatch, ptr @__bpf_trace_nfsd_clid_verf_mismatch, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_clid_fresh = internal global %union.anon.242 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_clid_fresh, ptr @__bpf_trace_nfsd_clid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_clid_confirmed_r = internal global %union.anon.243 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_clid_confirmed_r, ptr @__bpf_trace_nfsd_clid_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_file_alloc = internal global %union.anon.244 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_file_alloc, ptr @__bpf_trace_nfsd_file_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_file_put_final = internal global %union.anon.245 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_file_put_final, ptr @__bpf_trace_nfsd_file_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_file_unhash = internal global %union.anon.246 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_file_unhash, ptr @__bpf_trace_nfsd_file_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_file_put = internal global %union.anon.247 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_file_put, ptr @__bpf_trace_nfsd_file_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_file_unhash_and_release_locked = internal global %union.anon.248 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_file_unhash_and_release_locked, ptr @__bpf_trace_nfsd_file_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_file_acquire = internal global %union.anon.249 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_file_acquire, ptr @__bpf_trace_nfsd_file_acquire, i32 6, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_file_close_inode_sync = internal global %union.anon.250 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_file_close_inode_sync, ptr @__bpf_trace_nfsd_file_search_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_file_close_inode = internal global %union.anon.251 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_file_close_inode, ptr @__bpf_trace_nfsd_file_search_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_file_is_cached = internal global %union.anon.252 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_file_is_cached, ptr @__bpf_trace_nfsd_file_search_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_file_fsnotify_handle_event = internal global %union.anon.253 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_file_fsnotify_handle_event, ptr @__bpf_trace_nfsd_file_fsnotify_handle_event, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_drc_found = internal global %union.anon.254 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_drc_found, ptr @__bpf_trace_nfsd_drc_found, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_drc_mismatch = internal global %union.anon.255 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_drc_mismatch, ptr @__bpf_trace_nfsd_drc_mismatch, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_cb_args = internal global %union.anon.256 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_cb_args, ptr @__bpf_trace_nfsd_cb_args, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_cb_nodelegs = internal global %union.anon.257 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_cb_nodelegs, ptr @__bpf_trace_nfsd_cb_nodelegs, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_cb_state = internal global %union.anon.258 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_cb_state, ptr @__bpf_trace_nfsd_cb_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_cb_probe = internal global %union.anon.259 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_cb_probe, ptr @__bpf_trace_nfsd_cb_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_cb_lost = internal global %union.anon.260 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_cb_lost, ptr @__bpf_trace_nfsd_cb_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_cb_shutdown = internal global %union.anon.261 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_cb_shutdown, ptr @__bpf_trace_nfsd_cb_class, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_cb_setup = internal global %union.anon.262 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_cb_setup, ptr @__bpf_trace_nfsd_cb_setup, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_cb_setup_err = internal global %union.anon.263 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_cb_setup_err, ptr @__bpf_trace_nfsd_cb_setup_err, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_cb_recall = internal global %union.anon.264 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_cb_recall, ptr @__bpf_trace_nfsd_cb_recall, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_cb_notify_lock = internal global %union.anon.265 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_cb_notify_lock, ptr @__bpf_trace_nfsd_cb_notify_lock, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_nfsd_cb_offload = internal global %union.anon.266 { %struct.bpf_raw_event_map { ptr @__tracepoint_nfsd_cb_offload, ptr @__bpf_trace_nfsd_cb_offload, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@.str.14 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"netns_ino\00", [22 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"u32\00", [28 x i8] zeroinitializer }, align 32
@.str.17 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"xid\00", [28 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"unsigned char[sizeof(struct sockaddr_in6)]\00", [53 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"server\00", [25 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"client\00", [25 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"vers\00", [27 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"proc\00", [27 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"xid=0x%08x vers=%u proc=%u\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"args_opcnt\00", [21 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"xid=0x%08x opcnt=%u\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"(null)\00", [25 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"resp_opcnt\00", [21 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"status\00", [25 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__data_loc char[]\00", [46 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"name\00", [27 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"op=%u/%u %s status=%d\0A\00", [41 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned long\00", [18 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"opnum\00", [26 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"op=%u/%u opnum=%u status=%lu\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"opnum=%u status=%lu\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"fh_hash\00", [24 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"xid=0x%08x fh_hash=0x%08x status=%d\0A\00", [59 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"fsidtype\00", [23 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"u32[6]\00", [25 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"fsid\00", [27 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"auth_domain\00", [20 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"fsid=%x::%s domain=%s status=%d\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"path\00", [27 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"bool\00", [27 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"cache\00", [26 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"fsid=%x::%s domain=%s path=%s cache=%s\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"pos\00", [28 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"neg\00", [28 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"path=%s domain=%s status=%d\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"path=%s domain=%s cache=%s\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"u64\00", [28 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"offset\00", [25 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"len\00", [28 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"xid=0x%08x fh_hash=0x%08x offset=%llu len=%u\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"loff_t\00", [25 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"xid=0x%08x fh_hash=0x%08x offset=%lld status=%d\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ino\00", [28 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"fh_hash=0x%08x ino=%llu name=%s\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"src_fh_hash\00", [20 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"src_offset\00", [21 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"dst_fh_hash\00", [20 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"dst_offset\00", [21 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"count\00", [26 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [103 x i8], [57 x i8] } { [103 x i8] c"xid=0x%08x src_fh_hash=0x%08x src_offset=%lld dst_fh_hash=0x%08x dst_offset=%lld count=%llu status=%d\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"cl_boot\00", [24 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"cl_id\00", [26 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"si_id\00", [26 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"si_generation\00", [18 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"client %08x:%08x stateid %08x:%08x\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"seqid\00", [26 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"seqid=%u client %08x:%08x stateid %08x:%08x\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"client %08x:%08x\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"unsigned long long\00", [45 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"boot_time\00", [22 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"boot_time=%16llx\0A\00", [46 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"error\00", [26 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"unsigned char[8]\00", [47 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"verifier\00", [23 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"boot_time=%16llx xid=0x%08x error=%d new verifier=0x%s\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"cl_flavor\00", [22 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"new_flavor\00", [21 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"addr\00", [27 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"client %08x:%08x flavor=%s, conflict=%s from addr=%pISpc\0A\00", [38 x i8] zeroinitializer }, align 32
@trace_raw_output_nfsd_clid_cred_mismatch.symbols = internal constant { [7 x %struct.trace_print_flags], [40 x i8] } { [7 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.85 }, %struct.trace_print_flags { i32 1, ptr @.str.86 }, %struct.trace_print_flags { i32 6, ptr @.str.87 }, %struct.trace_print_flags { i32 390003, ptr @.str.88 }, %struct.trace_print_flags { i32 390004, ptr @.str.89 }, %struct.trace_print_flags { i32 390005, ptr @.str.90 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"none\00", [27 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"sys\00", [28 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"gss\00", [28 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"krb5\00", [27 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"krb5i\00", [26 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"krb5p\00", [26 x i8] zeroinitializer }, align 32
@trace_raw_output_nfsd_clid_cred_mismatch.symbols.91 = internal constant { [7 x %struct.trace_print_flags], [40 x i8] } { [7 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.85 }, %struct.trace_print_flags { i32 1, ptr @.str.86 }, %struct.trace_print_flags { i32 6, ptr @.str.87 }, %struct.trace_print_flags { i32 390003, ptr @.str.88 }, %struct.trace_print_flags { i32 390004, ptr @.str.89 }, %struct.trace_print_flags { i32 390005, ptr @.str.90 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"cl_verifier\00", [20 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"new_verifier\00", [19 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [59 x i8], [37 x i8] } { [59 x i8] c"client %08x:%08x verf=0x%s, updated=0x%s from addr=%pISpc\0A\00", [37 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"flavor\00", [25 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"addr=%pISpc name='%s' verifier=0x%s flavor=%s client=%08x:%08x\0A\00", [32 x i8] zeroinitializer }, align 32
@trace_raw_output_nfsd_clid_class.symbols = internal constant { [7 x %struct.trace_print_flags], [40 x i8] } { [7 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.85 }, %struct.trace_print_flags { i32 1, ptr @.str.86 }, %struct.trace_print_flags { i32 6, ptr @.str.87 }, %struct.trace_print_flags { i32 390003, ptr @.str.88 }, %struct.trace_print_flags { i32 390004, ptr @.str.89 }, %struct.trace_print_flags { i32 390005, ptr @.str.90 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"nf_hashval\00", [21 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"void *\00", [25 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"nf_inode\00", [23 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"nf_ref\00", [25 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"nf_flags\00", [23 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"unsigned char\00", [18 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"nf_may\00", [25 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"struct file *\00", [18 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"nf_file\00", [24 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"hash=0x%x inode=%p ref=%d flags=%s may=%s file=%p\0A\00", [45 x i8] zeroinitializer }, align 32
@trace_raw_output_nfsd_file_class.__flags = internal constant { [6 x %struct.trace_print_flags], [48 x i8] } { [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.107 }, %struct.trace_print_flags { i32 2, ptr @.str.108 }, %struct.trace_print_flags { i32 4, ptr @.str.109 }, %struct.trace_print_flags { i32 8, ptr @.str.110 }, %struct.trace_print_flags { i32 16, ptr @.str.111 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"HASHED\00", [25 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"PENDING\00", [24 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"BREAK_READ\00", [21 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"BREAK_WRITE\00", [20 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"REFERENCED\00", [21 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"|\00", [30 x i8] zeroinitializer }, align 32
@trace_raw_output_nfsd_file_class.__flags.113 = internal constant { [14 x %struct.trace_print_flags], [48 x i8] } { [14 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.114 }, %struct.trace_print_flags { i32 2, ptr @.str.115 }, %struct.trace_print_flags { i32 4, ptr @.str.116 }, %struct.trace_print_flags { i32 8, ptr @.str.117 }, %struct.trace_print_flags { i32 16, ptr @.str.118 }, %struct.trace_print_flags { i32 32, ptr @.str.119 }, %struct.trace_print_flags { i32 64, ptr @.str.120 }, %struct.trace_print_flags { i32 128, ptr @.str.121 }, %struct.trace_print_flags { i32 256, ptr @.str.122 }, %struct.trace_print_flags { i32 512, ptr @.str.123 }, %struct.trace_print_flags { i32 1024, ptr @.str.124 }, %struct.trace_print_flags { i32 2048, ptr @.str.125 }, %struct.trace_print_flags { i32 4096, ptr @.str.126 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"EXEC\00", [27 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"WRITE\00", [26 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"READ\00", [27 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"SATTR\00", [26 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"TRUNC\00", [26 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"LOCK\00", [27 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"OWNER_OVERRIDE\00", [17 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"LOCAL_ACCESS\00", [19 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"BYPASS_GSS_ON_ROOT\00", [45 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"NOT_BREAK_LEASE\00", [16 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"BYPASS_GSS\00", [21 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"READ_IF_EXEC\00", [19 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"64BIT_COOKIE\00", [19 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"hash\00", [27 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"inode\00", [26 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"may_flags\00", [22 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [92 x i8], [36 x i8] } { [92 x i8] c"xid=0x%x hash=0x%x inode=%p may_flags=%s ref=%d nf_flags=%s nf_may=%s nf_file=%p status=%u\0A\00", [36 x i8] zeroinitializer }, align 32
@trace_raw_output_nfsd_file_acquire.__flags = internal constant { [14 x %struct.trace_print_flags], [48 x i8] } { [14 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.114 }, %struct.trace_print_flags { i32 2, ptr @.str.115 }, %struct.trace_print_flags { i32 4, ptr @.str.116 }, %struct.trace_print_flags { i32 8, ptr @.str.117 }, %struct.trace_print_flags { i32 16, ptr @.str.118 }, %struct.trace_print_flags { i32 32, ptr @.str.119 }, %struct.trace_print_flags { i32 64, ptr @.str.120 }, %struct.trace_print_flags { i32 128, ptr @.str.121 }, %struct.trace_print_flags { i32 256, ptr @.str.122 }, %struct.trace_print_flags { i32 512, ptr @.str.123 }, %struct.trace_print_flags { i32 1024, ptr @.str.124 }, %struct.trace_print_flags { i32 2048, ptr @.str.125 }, %struct.trace_print_flags { i32 4096, ptr @.str.126 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@trace_raw_output_nfsd_file_acquire.__flags.131 = internal constant { [6 x %struct.trace_print_flags], [48 x i8] } { [6 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.107 }, %struct.trace_print_flags { i32 2, ptr @.str.108 }, %struct.trace_print_flags { i32 4, ptr @.str.109 }, %struct.trace_print_flags { i32 8, ptr @.str.110 }, %struct.trace_print_flags { i32 16, ptr @.str.111 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@trace_raw_output_nfsd_file_acquire.__flags.132 = internal constant { [14 x %struct.trace_print_flags], [48 x i8] } { [14 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.114 }, %struct.trace_print_flags { i32 2, ptr @.str.115 }, %struct.trace_print_flags { i32 4, ptr @.str.116 }, %struct.trace_print_flags { i32 8, ptr @.str.117 }, %struct.trace_print_flags { i32 16, ptr @.str.118 }, %struct.trace_print_flags { i32 32, ptr @.str.119 }, %struct.trace_print_flags { i32 64, ptr @.str.120 }, %struct.trace_print_flags { i32 128, ptr @.str.121 }, %struct.trace_print_flags { i32 256, ptr @.str.122 }, %struct.trace_print_flags { i32 512, ptr @.str.123 }, %struct.trace_print_flags { i32 1024, ptr @.str.124 }, %struct.trace_print_flags { i32 2048, ptr @.str.125 }, %struct.trace_print_flags { i32 4096, ptr @.str.126 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"struct inode *\00", [17 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"found\00", [26 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"hash=0x%x inode=%p found=%d\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"nlink\00", [26 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"umode_t\00", [24 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"mode\00", [27 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"mask\00", [27 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"inode=%p nlink=%u mode=0%ho mask=0x%x\0A\00", [57 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"result\00", [25 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"boot_time=%16llx xid=0x%08x result=%s\0A\00", [57 x i8] zeroinitializer }, align 32
@trace_raw_output_nfsd_drc_found.symbols = internal constant { [4 x %struct.trace_print_flags], [32 x i8] } { [4 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.143 }, %struct.trace_print_flags { i32 1, ptr @.str.144 }, %struct.trace_print_flags { i32 2, ptr @.str.145 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"DROPIT\00", [25 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"REPLY\00", [26 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"DOIT\00", [27 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"cached\00", [25 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ingress\00", [24 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"boot_time=%16llx xid=0x%08x cached-csum=0x%08x ingress-csum=0x%08x\0A\00", [60 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"prog\00", [27 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"ident\00", [26 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"addr=%pISpc client %08x:%08x prog=%u ident=%u\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"state\00", [26 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"addr=%pISpc client %08x:%08x state=%s\0A\00", [57 x i8] zeroinitializer }, align 32
@trace_raw_output_nfsd_cb_class.symbols = internal constant { [5 x %struct.trace_print_flags], [56 x i8] } { [5 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.154 }, %struct.trace_print_flags { i32 1, ptr @.str.155 }, %struct.trace_print_flags { i32 2, ptr @.str.156 }, %struct.trace_print_flags { i32 3, ptr @.str.157 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"UP\00", [29 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"UNKNOWN\00", [24 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"DOWN\00", [27 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"FAULT\00", [26 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"authflavor\00", [21 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"netid\00", [26 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"addr=%pISpc client %08x:%08x proto=%s flavor=%s\0A\00", [47 x i8] zeroinitializer }, align 32
@trace_raw_output_nfsd_cb_setup.symbols = internal constant { [7 x %struct.trace_print_flags], [40 x i8] } { [7 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.85 }, %struct.trace_print_flags { i32 1, ptr @.str.86 }, %struct.trace_print_flags { i32 6, ptr @.str.87 }, %struct.trace_print_flags { i32 390003, ptr @.str.88 }, %struct.trace_print_flags { i32 390004, ptr @.str.89 }, %struct.trace_print_flags { i32 390005, ptr @.str.90 }, %struct.trace_print_flags { i32 -1, ptr null }], [40 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"long\00", [27 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"addr=%pISpc client %08x:%08x error=%ld\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"addr=%pISpc client %08x:%08x stateid %08x:%08x\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"addr=%pISpc client %08x:%08x fh_hash=0x%08x\0A\00", [51 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [84 x i8], [44 x i8] } { [84 x i8] c"addr=%pISpc client %08x:%08x stateid %08x:%08x fh_hash=0x%08x count=%llu status=%d\0A\00", [44 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@___asan_gen_ = private constant [19 x i8] c"../fs/nfsd/trace.c\00", align 1
@___asan_gen_.166 = private unnamed_addr constant [29 x i8] c"str__nfsd__trace_system_name\00", align 1
@___asan_gen_.167 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.168 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.167, i32 36, i32 1 }
@___asan_gen_.171 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 704, i32 1 }
@___asan_gen_.174 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 705, i32 1 }
@___asan_gen_.177 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 706, i32 1 }
@___asan_gen_.180 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 707, i32 1 }
@___asan_gen_.183 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 708, i32 1 }
@___asan_gen_.186 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 843, i32 1 }
@___asan_gen_.189 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 844, i32 1 }
@___asan_gen_.192 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 845, i32 1 }
@___asan_gen_.195 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 978, i32 1 }
@___asan_gen_.198 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 979, i32 1 }
@___asan_gen_.201 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 980, i32 1 }
@___asan_gen_.204 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 981, i32 1 }
@___asan_gen_.207 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 982, i32 1 }
@___asan_gen_.210 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 983, i32 1 }
@___asan_gen_.211 = private unnamed_addr constant [38 x i8] c"trace_event_fields_nfsd_xdr_err_class\00", align 1
@___asan_gen_.214 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_nfsd_xdr_err_class\00", align 1
@___asan_gen_.217 = private unnamed_addr constant [29 x i8] c"print_fmt_nfsd_xdr_err_class\00", align 1
@___asan_gen_.220 = private unnamed_addr constant [28 x i8] c"event_nfsd_garbage_args_err\00", align 1
@___asan_gen_.222 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 77, i32 1 }
@___asan_gen_.223 = private unnamed_addr constant [27 x i8] c"event_nfsd_cant_encode_err\00", align 1
@___asan_gen_.225 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 78, i32 1 }
@___asan_gen_.226 = private unnamed_addr constant [33 x i8] c"trace_event_fields_nfsd_compound\00", align 1
@___asan_gen_.229 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_nfsd_compound\00", align 1
@___asan_gen_.232 = private unnamed_addr constant [24 x i8] c"print_fmt_nfsd_compound\00", align 1
@___asan_gen_.235 = private unnamed_addr constant [20 x i8] c"event_nfsd_compound\00", align 1
@___asan_gen_.238 = private unnamed_addr constant [40 x i8] c"trace_event_fields_nfsd_compound_status\00", align 1
@___asan_gen_.241 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_nfsd_compound_status\00", align 1
@___asan_gen_.244 = private unnamed_addr constant [31 x i8] c"print_fmt_nfsd_compound_status\00", align 1
@___asan_gen_.247 = private unnamed_addr constant [27 x i8] c"event_nfsd_compound_status\00", align 1
@___asan_gen_.250 = private unnamed_addr constant [44 x i8] c"trace_event_fields_nfsd_compound_decode_err\00", align 1
@___asan_gen_.253 = private unnamed_addr constant [48 x i8] c"trace_event_type_funcs_nfsd_compound_decode_err\00", align 1
@___asan_gen_.256 = private unnamed_addr constant [35 x i8] c"print_fmt_nfsd_compound_decode_err\00", align 1
@___asan_gen_.259 = private unnamed_addr constant [31 x i8] c"event_nfsd_compound_decode_err\00", align 1
@___asan_gen_.262 = private unnamed_addr constant [44 x i8] c"trace_event_fields_nfsd_compound_encode_err\00", align 1
@___asan_gen_.265 = private unnamed_addr constant [48 x i8] c"trace_event_type_funcs_nfsd_compound_encode_err\00", align 1
@___asan_gen_.268 = private unnamed_addr constant [35 x i8] c"print_fmt_nfsd_compound_encode_err\00", align 1
@___asan_gen_.271 = private unnamed_addr constant [31 x i8] c"event_nfsd_compound_encode_err\00", align 1
@___asan_gen_.274 = private unnamed_addr constant [37 x i8] c"trace_event_fields_nfsd_fh_err_class\00", align 1
@___asan_gen_.277 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_nfsd_fh_err_class\00", align 1
@___asan_gen_.280 = private unnamed_addr constant [28 x i8] c"print_fmt_nfsd_fh_err_class\00", align 1
@___asan_gen_.283 = private unnamed_addr constant [35 x i8] c"event_nfsd_set_fh_dentry_badexport\00", align 1
@___asan_gen_.285 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 212, i32 1 }
@___asan_gen_.286 = private unnamed_addr constant [35 x i8] c"event_nfsd_set_fh_dentry_badhandle\00", align 1
@___asan_gen_.288 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 213, i32 1 }
@___asan_gen_.289 = private unnamed_addr constant [37 x i8] c"trace_event_fields_nfsd_exp_find_key\00", align 1
@___asan_gen_.292 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_nfsd_exp_find_key\00", align 1
@___asan_gen_.295 = private unnamed_addr constant [28 x i8] c"print_fmt_nfsd_exp_find_key\00", align 1
@___asan_gen_.298 = private unnamed_addr constant [24 x i8] c"event_nfsd_exp_find_key\00", align 1
@___asan_gen_.301 = private unnamed_addr constant [38 x i8] c"trace_event_fields_nfsd_expkey_update\00", align 1
@___asan_gen_.304 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_nfsd_expkey_update\00", align 1
@___asan_gen_.307 = private unnamed_addr constant [29 x i8] c"print_fmt_nfsd_expkey_update\00", align 1
@___asan_gen_.310 = private unnamed_addr constant [25 x i8] c"event_nfsd_expkey_update\00", align 1
@___asan_gen_.313 = private unnamed_addr constant [40 x i8] c"trace_event_fields_nfsd_exp_get_by_name\00", align 1
@___asan_gen_.316 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_nfsd_exp_get_by_name\00", align 1
@___asan_gen_.319 = private unnamed_addr constant [31 x i8] c"print_fmt_nfsd_exp_get_by_name\00", align 1
@___asan_gen_.322 = private unnamed_addr constant [27 x i8] c"event_nfsd_exp_get_by_name\00", align 1
@___asan_gen_.325 = private unnamed_addr constant [38 x i8] c"trace_event_fields_nfsd_export_update\00", align 1
@___asan_gen_.328 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_nfsd_export_update\00", align 1
@___asan_gen_.331 = private unnamed_addr constant [29 x i8] c"print_fmt_nfsd_export_update\00", align 1
@___asan_gen_.334 = private unnamed_addr constant [25 x i8] c"event_nfsd_export_update\00", align 1
@___asan_gen_.337 = private unnamed_addr constant [33 x i8] c"trace_event_fields_nfsd_io_class\00", align 1
@___asan_gen_.340 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_nfsd_io_class\00", align 1
@___asan_gen_.343 = private unnamed_addr constant [24 x i8] c"print_fmt_nfsd_io_class\00", align 1
@___asan_gen_.346 = private unnamed_addr constant [22 x i8] c"event_nfsd_read_start\00", align 1
@___asan_gen_.348 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 337, i32 1 }
@___asan_gen_.349 = private unnamed_addr constant [23 x i8] c"event_nfsd_read_splice\00", align 1
@___asan_gen_.351 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 338, i32 1 }
@___asan_gen_.352 = private unnamed_addr constant [23 x i8] c"event_nfsd_read_vector\00", align 1
@___asan_gen_.354 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 339, i32 1 }
@___asan_gen_.355 = private unnamed_addr constant [24 x i8] c"event_nfsd_read_io_done\00", align 1
@___asan_gen_.357 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 340, i32 1 }
@___asan_gen_.358 = private unnamed_addr constant [21 x i8] c"event_nfsd_read_done\00", align 1
@___asan_gen_.360 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 341, i32 1 }
@___asan_gen_.361 = private unnamed_addr constant [23 x i8] c"event_nfsd_write_start\00", align 1
@___asan_gen_.363 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 342, i32 1 }
@___asan_gen_.364 = private unnamed_addr constant [24 x i8] c"event_nfsd_write_opened\00", align 1
@___asan_gen_.366 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 343, i32 1 }
@___asan_gen_.367 = private unnamed_addr constant [25 x i8] c"event_nfsd_write_io_done\00", align 1
@___asan_gen_.369 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 344, i32 1 }
@___asan_gen_.370 = private unnamed_addr constant [22 x i8] c"event_nfsd_write_done\00", align 1
@___asan_gen_.372 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 345, i32 1 }
@___asan_gen_.373 = private unnamed_addr constant [34 x i8] c"trace_event_fields_nfsd_err_class\00", align 1
@___asan_gen_.376 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_nfsd_err_class\00", align 1
@___asan_gen_.379 = private unnamed_addr constant [25 x i8] c"print_fmt_nfsd_err_class\00", align 1
@___asan_gen_.382 = private unnamed_addr constant [20 x i8] c"event_nfsd_read_err\00", align 1
@___asan_gen_.384 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 378, i32 1 }
@___asan_gen_.385 = private unnamed_addr constant [21 x i8] c"event_nfsd_write_err\00", align 1
@___asan_gen_.387 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 379, i32 1 }
@___asan_gen_.388 = private unnamed_addr constant [31 x i8] c"trace_event_fields_nfsd_dirent\00", align 1
@___asan_gen_.391 = private unnamed_addr constant [35 x i8] c"trace_event_type_funcs_nfsd_dirent\00", align 1
@___asan_gen_.394 = private unnamed_addr constant [22 x i8] c"print_fmt_nfsd_dirent\00", align 1
@___asan_gen_.397 = private unnamed_addr constant [18 x i8] c"event_nfsd_dirent\00", align 1
@___asan_gen_.400 = private unnamed_addr constant [39 x i8] c"trace_event_fields_nfsd_copy_err_class\00", align 1
@___asan_gen_.403 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_nfsd_copy_err_class\00", align 1
@___asan_gen_.406 = private unnamed_addr constant [30 x i8] c"print_fmt_nfsd_copy_err_class\00", align 1
@___asan_gen_.409 = private unnamed_addr constant [32 x i8] c"event_nfsd_clone_file_range_err\00", align 1
@___asan_gen_.411 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 450, i32 1 }
@___asan_gen_.412 = private unnamed_addr constant [38 x i8] c"trace_event_fields_nfsd_stateid_class\00", align 1
@___asan_gen_.415 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_nfsd_stateid_class\00", align 1
@___asan_gen_.418 = private unnamed_addr constant [29 x i8] c"print_fmt_nfsd_stateid_class\00", align 1
@___asan_gen_.421 = private unnamed_addr constant [29 x i8] c"event_nfsd_layoutstate_alloc\00", align 1
@___asan_gen_.423 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 483, i32 1 }
@___asan_gen_.424 = private unnamed_addr constant [30 x i8] c"event_nfsd_layoutstate_unhash\00", align 1
@___asan_gen_.426 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 484, i32 1 }
@___asan_gen_.427 = private unnamed_addr constant [28 x i8] c"event_nfsd_layoutstate_free\00", align 1
@___asan_gen_.429 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 485, i32 1 }
@___asan_gen_.430 = private unnamed_addr constant [34 x i8] c"event_nfsd_layout_get_lookup_fail\00", align 1
@___asan_gen_.432 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 486, i32 1 }
@___asan_gen_.433 = private unnamed_addr constant [37 x i8] c"event_nfsd_layout_commit_lookup_fail\00", align 1
@___asan_gen_.435 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 487, i32 1 }
@___asan_gen_.436 = private unnamed_addr constant [37 x i8] c"event_nfsd_layout_return_lookup_fail\00", align 1
@___asan_gen_.438 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 488, i32 1 }
@___asan_gen_.439 = private unnamed_addr constant [25 x i8] c"event_nfsd_layout_recall\00", align 1
@___asan_gen_.441 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 489, i32 1 }
@___asan_gen_.442 = private unnamed_addr constant [30 x i8] c"event_nfsd_layout_recall_done\00", align 1
@___asan_gen_.444 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 490, i32 1 }
@___asan_gen_.445 = private unnamed_addr constant [30 x i8] c"event_nfsd_layout_recall_fail\00", align 1
@___asan_gen_.447 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 491, i32 1 }
@___asan_gen_.448 = private unnamed_addr constant [33 x i8] c"event_nfsd_layout_recall_release\00", align 1
@___asan_gen_.450 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 492, i32 1 }
@___asan_gen_.451 = private unnamed_addr constant [16 x i8] c"event_nfsd_open\00", align 1
@___asan_gen_.453 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 494, i32 1 }
@___asan_gen_.454 = private unnamed_addr constant [22 x i8] c"event_nfsd_deleg_read\00", align 1
@___asan_gen_.456 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 495, i32 1 }
@___asan_gen_.457 = private unnamed_addr constant [24 x i8] c"event_nfsd_deleg_recall\00", align 1
@___asan_gen_.459 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 496, i32 1 }
@___asan_gen_.460 = private unnamed_addr constant [41 x i8] c"trace_event_fields_nfsd_stateseqid_class\00", align 1
@___asan_gen_.463 = private unnamed_addr constant [45 x i8] c"trace_event_type_funcs_nfsd_stateseqid_class\00", align 1
@___asan_gen_.466 = private unnamed_addr constant [32 x i8] c"print_fmt_nfsd_stateseqid_class\00", align 1
@___asan_gen_.469 = private unnamed_addr constant [22 x i8] c"event_nfsd_preprocess\00", align 1
@___asan_gen_.471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 525, i32 1 }
@___asan_gen_.472 = private unnamed_addr constant [24 x i8] c"event_nfsd_open_confirm\00", align 1
@___asan_gen_.474 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 526, i32 1 }
@___asan_gen_.475 = private unnamed_addr constant [39 x i8] c"trace_event_fields_nfsd_clientid_class\00", align 1
@___asan_gen_.478 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_nfsd_clientid_class\00", align 1
@___asan_gen_.481 = private unnamed_addr constant [30 x i8] c"print_fmt_nfsd_clientid_class\00", align 1
@___asan_gen_.484 = private unnamed_addr constant [30 x i8] c"event_nfsd_clid_expire_unconf\00", align 1
@___asan_gen_.486 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 547, i32 1 }
@___asan_gen_.487 = private unnamed_addr constant [33 x i8] c"event_nfsd_clid_reclaim_complete\00", align 1
@___asan_gen_.489 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 548, i32 1 }
@___asan_gen_.490 = private unnamed_addr constant [26 x i8] c"event_nfsd_clid_confirmed\00", align 1
@___asan_gen_.492 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 549, i32 1 }
@___asan_gen_.493 = private unnamed_addr constant [26 x i8] c"event_nfsd_clid_destroyed\00", align 1
@___asan_gen_.495 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 550, i32 1 }
@___asan_gen_.496 = private unnamed_addr constant [30 x i8] c"event_nfsd_clid_admin_expired\00", align 1
@___asan_gen_.498 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 551, i32 1 }
@___asan_gen_.499 = private unnamed_addr constant [25 x i8] c"event_nfsd_clid_replaced\00", align 1
@___asan_gen_.501 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 552, i32 1 }
@___asan_gen_.502 = private unnamed_addr constant [23 x i8] c"event_nfsd_clid_purged\00", align 1
@___asan_gen_.504 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 553, i32 1 }
@___asan_gen_.505 = private unnamed_addr constant [22 x i8] c"event_nfsd_clid_renew\00", align 1
@___asan_gen_.507 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 554, i32 1 }
@___asan_gen_.508 = private unnamed_addr constant [22 x i8] c"event_nfsd_clid_stale\00", align 1
@___asan_gen_.510 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 555, i32 1 }
@___asan_gen_.511 = private unnamed_addr constant [34 x i8] c"trace_event_fields_nfsd_net_class\00", align 1
@___asan_gen_.514 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_nfsd_net_class\00", align 1
@___asan_gen_.517 = private unnamed_addr constant [25 x i8] c"print_fmt_nfsd_net_class\00", align 1
@___asan_gen_.520 = private unnamed_addr constant [23 x i8] c"event_nfsd_grace_start\00", align 1
@___asan_gen_.522 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 574, i32 1 }
@___asan_gen_.523 = private unnamed_addr constant [26 x i8] c"event_nfsd_grace_complete\00", align 1
@___asan_gen_.525 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 575, i32 1 }
@___asan_gen_.526 = private unnamed_addr constant [40 x i8] c"trace_event_fields_nfsd_writeverf_reset\00", align 1
@___asan_gen_.529 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_nfsd_writeverf_reset\00", align 1
@___asan_gen_.532 = private unnamed_addr constant [31 x i8] c"print_fmt_nfsd_writeverf_reset\00", align 1
@___asan_gen_.535 = private unnamed_addr constant [27 x i8] c"event_nfsd_writeverf_reset\00", align 1
@___asan_gen_.538 = private unnamed_addr constant [43 x i8] c"trace_event_fields_nfsd_clid_cred_mismatch\00", align 1
@___asan_gen_.541 = private unnamed_addr constant [47 x i8] c"trace_event_type_funcs_nfsd_clid_cred_mismatch\00", align 1
@___asan_gen_.544 = private unnamed_addr constant [34 x i8] c"print_fmt_nfsd_clid_cred_mismatch\00", align 1
@___asan_gen_.547 = private unnamed_addr constant [30 x i8] c"event_nfsd_clid_cred_mismatch\00", align 1
@___asan_gen_.550 = private unnamed_addr constant [43 x i8] c"trace_event_fields_nfsd_clid_verf_mismatch\00", align 1
@___asan_gen_.553 = private unnamed_addr constant [47 x i8] c"trace_event_type_funcs_nfsd_clid_verf_mismatch\00", align 1
@___asan_gen_.556 = private unnamed_addr constant [34 x i8] c"print_fmt_nfsd_clid_verf_mismatch\00", align 1
@___asan_gen_.559 = private unnamed_addr constant [30 x i8] c"event_nfsd_clid_verf_mismatch\00", align 1
@___asan_gen_.562 = private unnamed_addr constant [35 x i8] c"trace_event_fields_nfsd_clid_class\00", align 1
@___asan_gen_.565 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_nfsd_clid_class\00", align 1
@___asan_gen_.568 = private unnamed_addr constant [26 x i8] c"print_fmt_nfsd_clid_class\00", align 1
@___asan_gen_.571 = private unnamed_addr constant [22 x i8] c"event_nfsd_clid_fresh\00", align 1
@___asan_gen_.573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 698, i32 1 }
@___asan_gen_.574 = private unnamed_addr constant [28 x i8] c"event_nfsd_clid_confirmed_r\00", align 1
@___asan_gen_.576 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 699, i32 1 }
@___asan_gen_.577 = private unnamed_addr constant [35 x i8] c"trace_event_fields_nfsd_file_class\00", align 1
@___asan_gen_.580 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_nfsd_file_class\00", align 1
@___asan_gen_.583 = private unnamed_addr constant [26 x i8] c"print_fmt_nfsd_file_class\00", align 1
@___asan_gen_.586 = private unnamed_addr constant [22 x i8] c"event_nfsd_file_alloc\00", align 1
@___asan_gen_.588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 751, i32 1 }
@___asan_gen_.589 = private unnamed_addr constant [26 x i8] c"event_nfsd_file_put_final\00", align 1
@___asan_gen_.591 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 752, i32 1 }
@___asan_gen_.592 = private unnamed_addr constant [23 x i8] c"event_nfsd_file_unhash\00", align 1
@___asan_gen_.594 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 753, i32 1 }
@___asan_gen_.595 = private unnamed_addr constant [20 x i8] c"event_nfsd_file_put\00", align 1
@___asan_gen_.597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 754, i32 1 }
@___asan_gen_.598 = private unnamed_addr constant [42 x i8] c"event_nfsd_file_unhash_and_release_locked\00", align 1
@___asan_gen_.600 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 755, i32 1 }
@___asan_gen_.601 = private unnamed_addr constant [37 x i8] c"trace_event_fields_nfsd_file_acquire\00", align 1
@___asan_gen_.604 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_nfsd_file_acquire\00", align 1
@___asan_gen_.607 = private unnamed_addr constant [28 x i8] c"print_fmt_nfsd_file_acquire\00", align 1
@___asan_gen_.610 = private unnamed_addr constant [24 x i8] c"event_nfsd_file_acquire\00", align 1
@___asan_gen_.613 = private unnamed_addr constant [42 x i8] c"trace_event_fields_nfsd_file_search_class\00", align 1
@___asan_gen_.616 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_nfsd_file_search_class\00", align 1
@___asan_gen_.619 = private unnamed_addr constant [33 x i8] c"print_fmt_nfsd_file_search_class\00", align 1
@___asan_gen_.622 = private unnamed_addr constant [33 x i8] c"event_nfsd_file_close_inode_sync\00", align 1
@___asan_gen_.624 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 818, i32 1 }
@___asan_gen_.625 = private unnamed_addr constant [28 x i8] c"event_nfsd_file_close_inode\00", align 1
@___asan_gen_.627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 819, i32 1 }
@___asan_gen_.628 = private unnamed_addr constant [26 x i8] c"event_nfsd_file_is_cached\00", align 1
@___asan_gen_.630 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 820, i32 1 }
@___asan_gen_.631 = private unnamed_addr constant [51 x i8] c"trace_event_fields_nfsd_file_fsnotify_handle_event\00", align 1
@___asan_gen_.634 = private unnamed_addr constant [55 x i8] c"trace_event_type_funcs_nfsd_file_fsnotify_handle_event\00", align 1
@___asan_gen_.637 = private unnamed_addr constant [42 x i8] c"print_fmt_nfsd_file_fsnotify_handle_event\00", align 1
@___asan_gen_.640 = private unnamed_addr constant [38 x i8] c"event_nfsd_file_fsnotify_handle_event\00", align 1
@___asan_gen_.643 = private unnamed_addr constant [34 x i8] c"trace_event_fields_nfsd_drc_found\00", align 1
@___asan_gen_.646 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_nfsd_drc_found\00", align 1
@___asan_gen_.649 = private unnamed_addr constant [25 x i8] c"print_fmt_nfsd_drc_found\00", align 1
@___asan_gen_.652 = private unnamed_addr constant [21 x i8] c"event_nfsd_drc_found\00", align 1
@___asan_gen_.655 = private unnamed_addr constant [37 x i8] c"trace_event_fields_nfsd_drc_mismatch\00", align 1
@___asan_gen_.658 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_nfsd_drc_mismatch\00", align 1
@___asan_gen_.661 = private unnamed_addr constant [28 x i8] c"print_fmt_nfsd_drc_mismatch\00", align 1
@___asan_gen_.664 = private unnamed_addr constant [24 x i8] c"event_nfsd_drc_mismatch\00", align 1
@___asan_gen_.667 = private unnamed_addr constant [32 x i8] c"trace_event_fields_nfsd_cb_args\00", align 1
@___asan_gen_.670 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_nfsd_cb_args\00", align 1
@___asan_gen_.673 = private unnamed_addr constant [23 x i8] c"print_fmt_nfsd_cb_args\00", align 1
@___asan_gen_.676 = private unnamed_addr constant [19 x i8] c"event_nfsd_cb_args\00", align 1
@___asan_gen_.679 = private unnamed_addr constant [36 x i8] c"trace_event_fields_nfsd_cb_nodelegs\00", align 1
@___asan_gen_.682 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_nfsd_cb_nodelegs\00", align 1
@___asan_gen_.685 = private unnamed_addr constant [27 x i8] c"print_fmt_nfsd_cb_nodelegs\00", align 1
@___asan_gen_.688 = private unnamed_addr constant [23 x i8] c"event_nfsd_cb_nodelegs\00", align 1
@___asan_gen_.690 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 926, i32 1 }
@___asan_gen_.691 = private unnamed_addr constant [33 x i8] c"trace_event_fields_nfsd_cb_class\00", align 1
@___asan_gen_.694 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_nfsd_cb_class\00", align 1
@___asan_gen_.697 = private unnamed_addr constant [24 x i8] c"print_fmt_nfsd_cb_class\00", align 1
@___asan_gen_.700 = private unnamed_addr constant [20 x i8] c"event_nfsd_cb_state\00", align 1
@___asan_gen_.702 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 973, i32 1 }
@___asan_gen_.703 = private unnamed_addr constant [20 x i8] c"event_nfsd_cb_probe\00", align 1
@___asan_gen_.705 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 974, i32 1 }
@___asan_gen_.706 = private unnamed_addr constant [19 x i8] c"event_nfsd_cb_lost\00", align 1
@___asan_gen_.708 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 975, i32 1 }
@___asan_gen_.709 = private unnamed_addr constant [23 x i8] c"event_nfsd_cb_shutdown\00", align 1
@___asan_gen_.711 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 976, i32 1 }
@___asan_gen_.712 = private unnamed_addr constant [33 x i8] c"trace_event_fields_nfsd_cb_setup\00", align 1
@___asan_gen_.715 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_nfsd_cb_setup\00", align 1
@___asan_gen_.718 = private unnamed_addr constant [24 x i8] c"print_fmt_nfsd_cb_setup\00", align 1
@___asan_gen_.721 = private unnamed_addr constant [20 x i8] c"event_nfsd_cb_setup\00", align 1
@___asan_gen_.724 = private unnamed_addr constant [37 x i8] c"trace_event_fields_nfsd_cb_setup_err\00", align 1
@___asan_gen_.727 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_nfsd_cb_setup_err\00", align 1
@___asan_gen_.730 = private unnamed_addr constant [28 x i8] c"print_fmt_nfsd_cb_setup_err\00", align 1
@___asan_gen_.733 = private unnamed_addr constant [24 x i8] c"event_nfsd_cb_setup_err\00", align 1
@___asan_gen_.736 = private unnamed_addr constant [34 x i8] c"trace_event_fields_nfsd_cb_recall\00", align 1
@___asan_gen_.739 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_nfsd_cb_recall\00", align 1
@___asan_gen_.742 = private unnamed_addr constant [25 x i8] c"print_fmt_nfsd_cb_recall\00", align 1
@___asan_gen_.745 = private unnamed_addr constant [21 x i8] c"event_nfsd_cb_recall\00", align 1
@___asan_gen_.748 = private unnamed_addr constant [39 x i8] c"trace_event_fields_nfsd_cb_notify_lock\00", align 1
@___asan_gen_.751 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_nfsd_cb_notify_lock\00", align 1
@___asan_gen_.754 = private unnamed_addr constant [30 x i8] c"print_fmt_nfsd_cb_notify_lock\00", align 1
@___asan_gen_.757 = private unnamed_addr constant [26 x i8] c"event_nfsd_cb_notify_lock\00", align 1
@___asan_gen_.760 = private unnamed_addr constant [35 x i8] c"trace_event_fields_nfsd_cb_offload\00", align 1
@___asan_gen_.763 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_nfsd_cb_offload\00", align 1
@___asan_gen_.766 = private unnamed_addr constant [26 x i8] c"print_fmt_nfsd_cb_offload\00", align 1
@___asan_gen_.769 = private unnamed_addr constant [22 x i8] c"event_nfsd_cb_offload\00", align 1
@___asan_gen_.801 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 50, i32 1 }
@___asan_gen_.807 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 96, i32 1 }
@___asan_gen_.828 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 112, i32 1 }
@___asan_gen_.837 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 135, i32 1 }
@___asan_gen_.840 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 163, i32 1 }
@___asan_gen_.846 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 185, i32 1 }
@___asan_gen_.861 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 215, i32 1 }
@___asan_gen_.879 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 239, i32 1 }
@___asan_gen_.882 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 265, i32 1 }
@___asan_gen_.885 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 286, i32 1 }
@___asan_gen_.897 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 306, i32 1 }
@___asan_gen_.903 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 347, i32 1 }
@___asan_gen_.909 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 381, i32 1 }
@___asan_gen_.927 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 402, i32 1 }
@___asan_gen_.942 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 456, i32 1 }
@___asan_gen_.948 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 498, i32 1 }
@___asan_gen_.951 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 528, i32 1 }
@___asan_gen_.960 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 557, i32 1 }
@___asan_gen_.972 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 577, i32 1 }
@___asan_gen_.1008 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 605, i32 1 }
@___asan_gen_.1017 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 633, i32 1 }
@___asan_gen_.1026 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 665, i32 1 }
@___asan_gen_.1119 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 718, i32 1 }
@___asan_gen_.1138 = private unnamed_addr constant [8 x i8] c"__flags\00", align 1
@___asan_gen_.1140 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 757, i32 1 }
@___asan_gen_.1149 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 796, i32 1 }
@___asan_gen_.1164 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 822, i32 1 }
@___asan_gen_.1182 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 853, i32 1 }
@___asan_gen_.1191 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 876, i32 1 }
@___asan_gen_.1200 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 900, i32 1 }
@___asan_gen_.1221 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 947, i32 1 }
@___asan_gen_.1231 = private unnamed_addr constant [8 x i8] c"symbols\00", align 1
@___asan_gen_.1233 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 994, i32 1 }
@___asan_gen_.1239 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 1020, i32 1 }
@___asan_gen_.1242 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 1043, i32 1 }
@___asan_gen_.1245 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 1074, i32 1 }
@___asan_gen_.1246 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1247 = private unnamed_addr constant [21 x i8] c"../fs/nfsd/./trace.h\00", align 1
@___asan_gen_.1248 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1247, i32 1100, i32 1 }
@llvm.compiler.used = appending global [741 x ptr] [ptr @TRACE_SYSTEM_NFSD_FILE_BREAK_READ, ptr @TRACE_SYSTEM_NFSD_FILE_BREAK_WRITE, ptr @TRACE_SYSTEM_NFSD_FILE_HASHED, ptr @TRACE_SYSTEM_NFSD_FILE_PENDING, ptr @TRACE_SYSTEM_NFSD_FILE_REFERENCED, ptr @TRACE_SYSTEM_RC_DOIT, ptr @TRACE_SYSTEM_RC_DROPIT, ptr @TRACE_SYSTEM_RC_REPLY, ptr @TRACE_SYSTEM_RPC_AUTH_GSS, ptr @TRACE_SYSTEM_RPC_AUTH_GSS_KRB5, ptr @TRACE_SYSTEM_RPC_AUTH_GSS_KRB5I, ptr @TRACE_SYSTEM_RPC_AUTH_GSS_KRB5P, ptr @TRACE_SYSTEM_RPC_AUTH_NULL, ptr @TRACE_SYSTEM_RPC_AUTH_UNIX, ptr @__TRACE_SYSTEM_NFSD_FILE_BREAK_READ, ptr @__TRACE_SYSTEM_NFSD_FILE_BREAK_WRITE, ptr @__TRACE_SYSTEM_NFSD_FILE_HASHED, ptr @__TRACE_SYSTEM_NFSD_FILE_PENDING, ptr @__TRACE_SYSTEM_NFSD_FILE_REFERENCED, ptr @__TRACE_SYSTEM_RC_DOIT, ptr @__TRACE_SYSTEM_RC_DROPIT, ptr @__TRACE_SYSTEM_RC_REPLY, ptr @__TRACE_SYSTEM_RPC_AUTH_GSS, ptr @__TRACE_SYSTEM_RPC_AUTH_GSS_KRB5, ptr @__TRACE_SYSTEM_RPC_AUTH_GSS_KRB5I, ptr @__TRACE_SYSTEM_RPC_AUTH_GSS_KRB5P, ptr @__TRACE_SYSTEM_RPC_AUTH_NULL, ptr @__TRACE_SYSTEM_RPC_AUTH_UNIX, ptr @__bpf_trace_tp_map_nfsd_cant_encode_err, ptr @__bpf_trace_tp_map_nfsd_cb_args, ptr @__bpf_trace_tp_map_nfsd_cb_lost, ptr @__bpf_trace_tp_map_nfsd_cb_nodelegs, ptr @__bpf_trace_tp_map_nfsd_cb_notify_lock, ptr @__bpf_trace_tp_map_nfsd_cb_offload, ptr @__bpf_trace_tp_map_nfsd_cb_probe, ptr @__bpf_trace_tp_map_nfsd_cb_recall, ptr @__bpf_trace_tp_map_nfsd_cb_setup, ptr @__bpf_trace_tp_map_nfsd_cb_setup_err, ptr @__bpf_trace_tp_map_nfsd_cb_shutdown, ptr @__bpf_trace_tp_map_nfsd_cb_state, ptr @__bpf_trace_tp_map_nfsd_clid_admin_expired, ptr @__bpf_trace_tp_map_nfsd_clid_confirmed, ptr @__bpf_trace_tp_map_nfsd_clid_confirmed_r, ptr @__bpf_trace_tp_map_nfsd_clid_cred_mismatch, ptr @__bpf_trace_tp_map_nfsd_clid_destroyed, ptr @__bpf_trace_tp_map_nfsd_clid_expire_unconf, ptr @__bpf_trace_tp_map_nfsd_clid_fresh, ptr @__bpf_trace_tp_map_nfsd_clid_purged, ptr @__bpf_trace_tp_map_nfsd_clid_reclaim_complete, ptr @__bpf_trace_tp_map_nfsd_clid_renew, ptr @__bpf_trace_tp_map_nfsd_clid_replaced, ptr @__bpf_trace_tp_map_nfsd_clid_stale, ptr @__bpf_trace_tp_map_nfsd_clid_verf_mismatch, ptr @__bpf_trace_tp_map_nfsd_clone_file_range_err, ptr @__bpf_trace_tp_map_nfsd_compound, ptr @__bpf_trace_tp_map_nfsd_compound_decode_err, ptr @__bpf_trace_tp_map_nfsd_compound_encode_err, ptr @__bpf_trace_tp_map_nfsd_compound_status, ptr @__bpf_trace_tp_map_nfsd_deleg_read, ptr @__bpf_trace_tp_map_nfsd_deleg_recall, ptr @__bpf_trace_tp_map_nfsd_dirent, ptr @__bpf_trace_tp_map_nfsd_drc_found, ptr @__bpf_trace_tp_map_nfsd_drc_mismatch, ptr @__bpf_trace_tp_map_nfsd_exp_find_key, ptr @__bpf_trace_tp_map_nfsd_exp_get_by_name, ptr @__bpf_trace_tp_map_nfsd_expkey_update, ptr @__bpf_trace_tp_map_nfsd_export_update, ptr @__bpf_trace_tp_map_nfsd_file_acquire, ptr @__bpf_trace_tp_map_nfsd_file_alloc, ptr @__bpf_trace_tp_map_nfsd_file_close_inode, ptr @__bpf_trace_tp_map_nfsd_file_close_inode_sync, ptr @__bpf_trace_tp_map_nfsd_file_fsnotify_handle_event, ptr @__bpf_trace_tp_map_nfsd_file_is_cached, ptr @__bpf_trace_tp_map_nfsd_file_put, ptr @__bpf_trace_tp_map_nfsd_file_put_final, ptr @__bpf_trace_tp_map_nfsd_file_unhash, ptr @__bpf_trace_tp_map_nfsd_file_unhash_and_release_locked, ptr @__bpf_trace_tp_map_nfsd_garbage_args_err, ptr @__bpf_trace_tp_map_nfsd_grace_complete, ptr @__bpf_trace_tp_map_nfsd_grace_start, ptr @__bpf_trace_tp_map_nfsd_layout_commit_lookup_fail, ptr @__bpf_trace_tp_map_nfsd_layout_get_lookup_fail, ptr @__bpf_trace_tp_map_nfsd_layout_recall, ptr @__bpf_trace_tp_map_nfsd_layout_recall_done, ptr @__bpf_trace_tp_map_nfsd_layout_recall_fail, ptr @__bpf_trace_tp_map_nfsd_layout_recall_release, ptr @__bpf_trace_tp_map_nfsd_layout_return_lookup_fail, ptr @__bpf_trace_tp_map_nfsd_layoutstate_alloc, ptr @__bpf_trace_tp_map_nfsd_layoutstate_free, ptr @__bpf_trace_tp_map_nfsd_layoutstate_unhash, ptr @__bpf_trace_tp_map_nfsd_open, ptr @__bpf_trace_tp_map_nfsd_open_confirm, ptr @__bpf_trace_tp_map_nfsd_preprocess, ptr @__bpf_trace_tp_map_nfsd_read_done, ptr @__bpf_trace_tp_map_nfsd_read_err, ptr @__bpf_trace_tp_map_nfsd_read_io_done, ptr @__bpf_trace_tp_map_nfsd_read_splice, ptr @__bpf_trace_tp_map_nfsd_read_start, ptr @__bpf_trace_tp_map_nfsd_read_vector, ptr @__bpf_trace_tp_map_nfsd_set_fh_dentry_badexport, ptr @__bpf_trace_tp_map_nfsd_set_fh_dentry_badhandle, ptr @__bpf_trace_tp_map_nfsd_write_done, ptr @__bpf_trace_tp_map_nfsd_write_err, ptr @__bpf_trace_tp_map_nfsd_write_io_done, ptr @__bpf_trace_tp_map_nfsd_write_opened, ptr @__bpf_trace_tp_map_nfsd_write_start, ptr @__bpf_trace_tp_map_nfsd_writeverf_reset, ptr @__event_nfsd_cant_encode_err, ptr @__event_nfsd_cb_args, ptr @__event_nfsd_cb_lost, ptr @__event_nfsd_cb_nodelegs, ptr @__event_nfsd_cb_notify_lock, ptr @__event_nfsd_cb_offload, ptr @__event_nfsd_cb_probe, ptr @__event_nfsd_cb_recall, ptr @__event_nfsd_cb_setup, ptr @__event_nfsd_cb_setup_err, ptr @__event_nfsd_cb_shutdown, ptr @__event_nfsd_cb_state, ptr @__event_nfsd_clid_admin_expired, ptr @__event_nfsd_clid_confirmed, ptr @__event_nfsd_clid_confirmed_r, ptr @__event_nfsd_clid_cred_mismatch, ptr @__event_nfsd_clid_destroyed, ptr @__event_nfsd_clid_expire_unconf, ptr @__event_nfsd_clid_fresh, ptr @__event_nfsd_clid_purged, ptr @__event_nfsd_clid_reclaim_complete, ptr @__event_nfsd_clid_renew, ptr @__event_nfsd_clid_replaced, ptr @__event_nfsd_clid_stale, ptr @__event_nfsd_clid_verf_mismatch, ptr @__event_nfsd_clone_file_range_err, ptr @__event_nfsd_compound, ptr @__event_nfsd_compound_decode_err, ptr @__event_nfsd_compound_encode_err, ptr @__event_nfsd_compound_status, ptr @__event_nfsd_deleg_read, ptr @__event_nfsd_deleg_recall, ptr @__event_nfsd_dirent, ptr @__event_nfsd_drc_found, ptr @__event_nfsd_drc_mismatch, ptr @__event_nfsd_exp_find_key, ptr @__event_nfsd_exp_get_by_name, ptr @__event_nfsd_expkey_update, ptr @__event_nfsd_export_update, ptr @__event_nfsd_file_acquire, ptr @__event_nfsd_file_alloc, ptr @__event_nfsd_file_close_inode, ptr @__event_nfsd_file_close_inode_sync, ptr @__event_nfsd_file_fsnotify_handle_event, ptr @__event_nfsd_file_is_cached, ptr @__event_nfsd_file_put, ptr @__event_nfsd_file_put_final, ptr @__event_nfsd_file_unhash, ptr @__event_nfsd_file_unhash_and_release_locked, ptr @__event_nfsd_garbage_args_err, ptr @__event_nfsd_grace_complete, ptr @__event_nfsd_grace_start, ptr @__event_nfsd_layout_commit_lookup_fail, ptr @__event_nfsd_layout_get_lookup_fail, ptr @__event_nfsd_layout_recall, ptr @__event_nfsd_layout_recall_done, ptr @__event_nfsd_layout_recall_fail, ptr @__event_nfsd_layout_recall_release, ptr @__event_nfsd_layout_return_lookup_fail, ptr @__event_nfsd_layoutstate_alloc, ptr @__event_nfsd_layoutstate_free, ptr @__event_nfsd_layoutstate_unhash, ptr @__event_nfsd_open, ptr @__event_nfsd_open_confirm, ptr @__event_nfsd_preprocess, ptr @__event_nfsd_read_done, ptr @__event_nfsd_read_err, ptr @__event_nfsd_read_io_done, ptr @__event_nfsd_read_splice, ptr @__event_nfsd_read_start, ptr @__event_nfsd_read_vector, ptr @__event_nfsd_set_fh_dentry_badexport, ptr @__event_nfsd_set_fh_dentry_badhandle, ptr @__event_nfsd_write_done, ptr @__event_nfsd_write_err, ptr @__event_nfsd_write_io_done, ptr @__event_nfsd_write_opened, ptr @__event_nfsd_write_start, ptr @__event_nfsd_writeverf_reset, ptr @__tracepoint_nfsd_cant_encode_err, ptr @__tracepoint_nfsd_cb_args, ptr @__tracepoint_nfsd_cb_lost, ptr @__tracepoint_nfsd_cb_nodelegs, ptr @__tracepoint_nfsd_cb_notify_lock, ptr @__tracepoint_nfsd_cb_offload, ptr @__tracepoint_nfsd_cb_probe, ptr @__tracepoint_nfsd_cb_recall, ptr @__tracepoint_nfsd_cb_setup, ptr @__tracepoint_nfsd_cb_setup_err, ptr @__tracepoint_nfsd_cb_shutdown, ptr @__tracepoint_nfsd_cb_state, ptr @__tracepoint_nfsd_clid_admin_expired, ptr @__tracepoint_nfsd_clid_confirmed, ptr @__tracepoint_nfsd_clid_confirmed_r, ptr @__tracepoint_nfsd_clid_cred_mismatch, ptr @__tracepoint_nfsd_clid_destroyed, ptr @__tracepoint_nfsd_clid_expire_unconf, ptr @__tracepoint_nfsd_clid_fresh, ptr @__tracepoint_nfsd_clid_purged, ptr @__tracepoint_nfsd_clid_reclaim_complete, ptr @__tracepoint_nfsd_clid_renew, ptr @__tracepoint_nfsd_clid_replaced, ptr @__tracepoint_nfsd_clid_stale, ptr @__tracepoint_nfsd_clid_verf_mismatch, ptr @__tracepoint_nfsd_clone_file_range_err, ptr @__tracepoint_nfsd_compound, ptr @__tracepoint_nfsd_compound_decode_err, ptr @__tracepoint_nfsd_compound_encode_err, ptr @__tracepoint_nfsd_compound_status, ptr @__tracepoint_nfsd_deleg_read, ptr @__tracepoint_nfsd_deleg_recall, ptr @__tracepoint_nfsd_dirent, ptr @__tracepoint_nfsd_drc_found, ptr @__tracepoint_nfsd_drc_mismatch, ptr @__tracepoint_nfsd_exp_find_key, ptr @__tracepoint_nfsd_exp_get_by_name, ptr @__tracepoint_nfsd_expkey_update, ptr @__tracepoint_nfsd_export_update, ptr @__tracepoint_nfsd_file_acquire, ptr @__tracepoint_nfsd_file_alloc, ptr @__tracepoint_nfsd_file_close_inode, ptr @__tracepoint_nfsd_file_close_inode_sync, ptr @__tracepoint_nfsd_file_fsnotify_handle_event, ptr @__tracepoint_nfsd_file_is_cached, ptr @__tracepoint_nfsd_file_put, ptr @__tracepoint_nfsd_file_put_final, ptr @__tracepoint_nfsd_file_unhash, ptr @__tracepoint_nfsd_file_unhash_and_release_locked, ptr @__tracepoint_nfsd_garbage_args_err, ptr @__tracepoint_nfsd_grace_complete, ptr @__tracepoint_nfsd_grace_start, ptr @__tracepoint_nfsd_layout_commit_lookup_fail, ptr @__tracepoint_nfsd_layout_get_lookup_fail, ptr @__tracepoint_nfsd_layout_recall, ptr @__tracepoint_nfsd_layout_recall_done, ptr @__tracepoint_nfsd_layout_recall_fail, ptr @__tracepoint_nfsd_layout_recall_release, ptr @__tracepoint_nfsd_layout_return_lookup_fail, ptr @__tracepoint_nfsd_layoutstate_alloc, ptr @__tracepoint_nfsd_layoutstate_free, ptr @__tracepoint_nfsd_layoutstate_unhash, ptr @__tracepoint_nfsd_open, ptr @__tracepoint_nfsd_open_confirm, ptr @__tracepoint_nfsd_preprocess, ptr @__tracepoint_nfsd_read_done, ptr @__tracepoint_nfsd_read_err, ptr @__tracepoint_nfsd_read_io_done, ptr @__tracepoint_nfsd_read_splice, ptr @__tracepoint_nfsd_read_start, ptr @__tracepoint_nfsd_read_vector, ptr @__tracepoint_nfsd_set_fh_dentry_badexport, ptr @__tracepoint_nfsd_set_fh_dentry_badhandle, ptr @__tracepoint_nfsd_write_done, ptr @__tracepoint_nfsd_write_err, ptr @__tracepoint_nfsd_write_io_done, ptr @__tracepoint_nfsd_write_opened, ptr @__tracepoint_nfsd_write_start, ptr @__tracepoint_nfsd_writeverf_reset, ptr @__tracepoint_ptr_nfsd_cant_encode_err, ptr @__tracepoint_ptr_nfsd_cb_args, ptr @__tracepoint_ptr_nfsd_cb_lost, ptr @__tracepoint_ptr_nfsd_cb_nodelegs, ptr @__tracepoint_ptr_nfsd_cb_notify_lock, ptr @__tracepoint_ptr_nfsd_cb_offload, ptr @__tracepoint_ptr_nfsd_cb_probe, ptr @__tracepoint_ptr_nfsd_cb_recall, ptr @__tracepoint_ptr_nfsd_cb_setup, ptr @__tracepoint_ptr_nfsd_cb_setup_err, ptr @__tracepoint_ptr_nfsd_cb_shutdown, ptr @__tracepoint_ptr_nfsd_cb_state, ptr @__tracepoint_ptr_nfsd_clid_admin_expired, ptr @__tracepoint_ptr_nfsd_clid_confirmed, ptr @__tracepoint_ptr_nfsd_clid_confirmed_r, ptr @__tracepoint_ptr_nfsd_clid_cred_mismatch, ptr @__tracepoint_ptr_nfsd_clid_destroyed, ptr @__tracepoint_ptr_nfsd_clid_expire_unconf, ptr @__tracepoint_ptr_nfsd_clid_fresh, ptr @__tracepoint_ptr_nfsd_clid_purged, ptr @__tracepoint_ptr_nfsd_clid_reclaim_complete, ptr @__tracepoint_ptr_nfsd_clid_renew, ptr @__tracepoint_ptr_nfsd_clid_replaced, ptr @__tracepoint_ptr_nfsd_clid_stale, ptr @__tracepoint_ptr_nfsd_clid_verf_mismatch, ptr @__tracepoint_ptr_nfsd_clone_file_range_err, ptr @__tracepoint_ptr_nfsd_compound, ptr @__tracepoint_ptr_nfsd_compound_decode_err, ptr @__tracepoint_ptr_nfsd_compound_encode_err, ptr @__tracepoint_ptr_nfsd_compound_status, ptr @__tracepoint_ptr_nfsd_deleg_read, ptr @__tracepoint_ptr_nfsd_deleg_recall, ptr @__tracepoint_ptr_nfsd_dirent, ptr @__tracepoint_ptr_nfsd_drc_found, ptr @__tracepoint_ptr_nfsd_drc_mismatch, ptr @__tracepoint_ptr_nfsd_exp_find_key, ptr @__tracepoint_ptr_nfsd_exp_get_by_name, ptr @__tracepoint_ptr_nfsd_expkey_update, ptr @__tracepoint_ptr_nfsd_export_update, ptr @__tracepoint_ptr_nfsd_file_acquire, ptr @__tracepoint_ptr_nfsd_file_alloc, ptr @__tracepoint_ptr_nfsd_file_close_inode, ptr @__tracepoint_ptr_nfsd_file_close_inode_sync, ptr @__tracepoint_ptr_nfsd_file_fsnotify_handle_event, ptr @__tracepoint_ptr_nfsd_file_is_cached, ptr @__tracepoint_ptr_nfsd_file_put, ptr @__tracepoint_ptr_nfsd_file_put_final, ptr @__tracepoint_ptr_nfsd_file_unhash, ptr @__tracepoint_ptr_nfsd_file_unhash_and_release_locked, ptr @__tracepoint_ptr_nfsd_garbage_args_err, ptr @__tracepoint_ptr_nfsd_grace_complete, ptr @__tracepoint_ptr_nfsd_grace_start, ptr @__tracepoint_ptr_nfsd_layout_commit_lookup_fail, ptr @__tracepoint_ptr_nfsd_layout_get_lookup_fail, ptr @__tracepoint_ptr_nfsd_layout_recall, ptr @__tracepoint_ptr_nfsd_layout_recall_done, ptr @__tracepoint_ptr_nfsd_layout_recall_fail, ptr @__tracepoint_ptr_nfsd_layout_recall_release, ptr @__tracepoint_ptr_nfsd_layout_return_lookup_fail, ptr @__tracepoint_ptr_nfsd_layoutstate_alloc, ptr @__tracepoint_ptr_nfsd_layoutstate_free, ptr @__tracepoint_ptr_nfsd_layoutstate_unhash, ptr @__tracepoint_ptr_nfsd_open, ptr @__tracepoint_ptr_nfsd_open_confirm, ptr @__tracepoint_ptr_nfsd_preprocess, ptr @__tracepoint_ptr_nfsd_read_done, ptr @__tracepoint_ptr_nfsd_read_err, ptr @__tracepoint_ptr_nfsd_read_io_done, ptr @__tracepoint_ptr_nfsd_read_splice, ptr @__tracepoint_ptr_nfsd_read_start, ptr @__tracepoint_ptr_nfsd_read_vector, ptr @__tracepoint_ptr_nfsd_set_fh_dentry_badexport, ptr @__tracepoint_ptr_nfsd_set_fh_dentry_badhandle, ptr @__tracepoint_ptr_nfsd_write_done, ptr @__tracepoint_ptr_nfsd_write_err, ptr @__tracepoint_ptr_nfsd_write_io_done, ptr @__tracepoint_ptr_nfsd_write_opened, ptr @__tracepoint_ptr_nfsd_write_start, ptr @__tracepoint_ptr_nfsd_writeverf_reset, ptr @event_class_nfsd_cb_args, ptr @event_class_nfsd_cb_class, ptr @event_class_nfsd_cb_nodelegs, ptr @event_class_nfsd_cb_notify_lock, ptr @event_class_nfsd_cb_offload, ptr @event_class_nfsd_cb_recall, ptr @event_class_nfsd_cb_setup, ptr @event_class_nfsd_cb_setup_err, ptr @event_class_nfsd_clid_class, ptr @event_class_nfsd_clid_cred_mismatch, ptr @event_class_nfsd_clid_verf_mismatch, ptr @event_class_nfsd_clientid_class, ptr @event_class_nfsd_compound, ptr @event_class_nfsd_compound_decode_err, ptr @event_class_nfsd_compound_encode_err, ptr @event_class_nfsd_compound_status, ptr @event_class_nfsd_copy_err_class, ptr @event_class_nfsd_dirent, ptr @event_class_nfsd_drc_found, ptr @event_class_nfsd_drc_mismatch, ptr @event_class_nfsd_err_class, ptr @event_class_nfsd_exp_find_key, ptr @event_class_nfsd_exp_get_by_name, ptr @event_class_nfsd_expkey_update, ptr @event_class_nfsd_export_update, ptr @event_class_nfsd_fh_err_class, ptr @event_class_nfsd_file_acquire, ptr @event_class_nfsd_file_class, ptr @event_class_nfsd_file_fsnotify_handle_event, ptr @event_class_nfsd_file_search_class, ptr @event_class_nfsd_io_class, ptr @event_class_nfsd_net_class, ptr @event_class_nfsd_stateid_class, ptr @event_class_nfsd_stateseqid_class, ptr @event_class_nfsd_writeverf_reset, ptr @event_class_nfsd_xdr_err_class, ptr @event_nfsd_cant_encode_err, ptr @event_nfsd_cb_args, ptr @event_nfsd_cb_lost, ptr @event_nfsd_cb_nodelegs, ptr @event_nfsd_cb_notify_lock, ptr @event_nfsd_cb_offload, ptr @event_nfsd_cb_probe, ptr @event_nfsd_cb_recall, ptr @event_nfsd_cb_setup, ptr @event_nfsd_cb_setup_err, ptr @event_nfsd_cb_shutdown, ptr @event_nfsd_cb_state, ptr @event_nfsd_clid_admin_expired, ptr @event_nfsd_clid_confirmed, ptr @event_nfsd_clid_confirmed_r, ptr @event_nfsd_clid_cred_mismatch, ptr @event_nfsd_clid_destroyed, ptr @event_nfsd_clid_expire_unconf, ptr @event_nfsd_clid_fresh, ptr @event_nfsd_clid_purged, ptr @event_nfsd_clid_reclaim_complete, ptr @event_nfsd_clid_renew, ptr @event_nfsd_clid_replaced, ptr @event_nfsd_clid_stale, ptr @event_nfsd_clid_verf_mismatch, ptr @event_nfsd_clone_file_range_err, ptr @event_nfsd_compound, ptr @event_nfsd_compound_decode_err, ptr @event_nfsd_compound_encode_err, ptr @event_nfsd_compound_status, ptr @event_nfsd_deleg_read, ptr @event_nfsd_deleg_recall, ptr @event_nfsd_dirent, ptr @event_nfsd_drc_found, ptr @event_nfsd_drc_mismatch, ptr @event_nfsd_exp_find_key, ptr @event_nfsd_exp_get_by_name, ptr @event_nfsd_expkey_update, ptr @event_nfsd_export_update, ptr @event_nfsd_file_acquire, ptr @event_nfsd_file_alloc, ptr @event_nfsd_file_close_inode, ptr @event_nfsd_file_close_inode_sync, ptr @event_nfsd_file_fsnotify_handle_event, ptr @event_nfsd_file_is_cached, ptr @event_nfsd_file_put, ptr @event_nfsd_file_put_final, ptr @event_nfsd_file_unhash, ptr @event_nfsd_file_unhash_and_release_locked, ptr @event_nfsd_garbage_args_err, ptr @event_nfsd_grace_complete, ptr @event_nfsd_grace_start, ptr @event_nfsd_layout_commit_lookup_fail, ptr @event_nfsd_layout_get_lookup_fail, ptr @event_nfsd_layout_recall, ptr @event_nfsd_layout_recall_done, ptr @event_nfsd_layout_recall_fail, ptr @event_nfsd_layout_recall_release, ptr @event_nfsd_layout_return_lookup_fail, ptr @event_nfsd_layoutstate_alloc, ptr @event_nfsd_layoutstate_free, ptr @event_nfsd_layoutstate_unhash, ptr @event_nfsd_open, ptr @event_nfsd_open_confirm, ptr @event_nfsd_preprocess, ptr @event_nfsd_read_done, ptr @event_nfsd_read_err, ptr @event_nfsd_read_io_done, ptr @event_nfsd_read_splice, ptr @event_nfsd_read_start, ptr @event_nfsd_read_vector, ptr @event_nfsd_set_fh_dentry_badexport, ptr @event_nfsd_set_fh_dentry_badhandle, ptr @event_nfsd_write_done, ptr @event_nfsd_write_err, ptr @event_nfsd_write_io_done, ptr @event_nfsd_write_opened, ptr @event_nfsd_write_start, ptr @event_nfsd_writeverf_reset, ptr @str__nfsd__trace_system_name, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @trace_event_fields_nfsd_xdr_err_class, ptr @trace_event_type_funcs_nfsd_xdr_err_class, ptr @print_fmt_nfsd_xdr_err_class, ptr @trace_event_fields_nfsd_compound, ptr @trace_event_type_funcs_nfsd_compound, ptr @print_fmt_nfsd_compound, ptr @trace_event_fields_nfsd_compound_status, ptr @trace_event_type_funcs_nfsd_compound_status, ptr @print_fmt_nfsd_compound_status, ptr @trace_event_fields_nfsd_compound_decode_err, ptr @trace_event_type_funcs_nfsd_compound_decode_err, ptr @print_fmt_nfsd_compound_decode_err, ptr @trace_event_fields_nfsd_compound_encode_err, ptr @trace_event_type_funcs_nfsd_compound_encode_err, ptr @print_fmt_nfsd_compound_encode_err, ptr @trace_event_fields_nfsd_fh_err_class, ptr @trace_event_type_funcs_nfsd_fh_err_class, ptr @print_fmt_nfsd_fh_err_class, ptr @trace_event_fields_nfsd_exp_find_key, ptr @trace_event_type_funcs_nfsd_exp_find_key, ptr @print_fmt_nfsd_exp_find_key, ptr @trace_event_fields_nfsd_expkey_update, ptr @trace_event_type_funcs_nfsd_expkey_update, ptr @print_fmt_nfsd_expkey_update, ptr @trace_event_fields_nfsd_exp_get_by_name, ptr @trace_event_type_funcs_nfsd_exp_get_by_name, ptr @print_fmt_nfsd_exp_get_by_name, ptr @trace_event_fields_nfsd_export_update, ptr @trace_event_type_funcs_nfsd_export_update, ptr @print_fmt_nfsd_export_update, ptr @trace_event_fields_nfsd_io_class, ptr @trace_event_type_funcs_nfsd_io_class, ptr @print_fmt_nfsd_io_class, ptr @trace_event_fields_nfsd_err_class, ptr @trace_event_type_funcs_nfsd_err_class, ptr @print_fmt_nfsd_err_class, ptr @trace_event_fields_nfsd_dirent, ptr @trace_event_type_funcs_nfsd_dirent, ptr @print_fmt_nfsd_dirent, ptr @trace_event_fields_nfsd_copy_err_class, ptr @trace_event_type_funcs_nfsd_copy_err_class, ptr @print_fmt_nfsd_copy_err_class, ptr @trace_event_fields_nfsd_stateid_class, ptr @trace_event_type_funcs_nfsd_stateid_class, ptr @print_fmt_nfsd_stateid_class, ptr @trace_event_fields_nfsd_stateseqid_class, ptr @trace_event_type_funcs_nfsd_stateseqid_class, ptr @print_fmt_nfsd_stateseqid_class, ptr @trace_event_fields_nfsd_clientid_class, ptr @trace_event_type_funcs_nfsd_clientid_class, ptr @print_fmt_nfsd_clientid_class, ptr @trace_event_fields_nfsd_net_class, ptr @trace_event_type_funcs_nfsd_net_class, ptr @print_fmt_nfsd_net_class, ptr @trace_event_fields_nfsd_writeverf_reset, ptr @trace_event_type_funcs_nfsd_writeverf_reset, ptr @print_fmt_nfsd_writeverf_reset, ptr @trace_event_fields_nfsd_clid_cred_mismatch, ptr @trace_event_type_funcs_nfsd_clid_cred_mismatch, ptr @print_fmt_nfsd_clid_cred_mismatch, ptr @trace_event_fields_nfsd_clid_verf_mismatch, ptr @trace_event_type_funcs_nfsd_clid_verf_mismatch, ptr @print_fmt_nfsd_clid_verf_mismatch, ptr @trace_event_fields_nfsd_clid_class, ptr @trace_event_type_funcs_nfsd_clid_class, ptr @print_fmt_nfsd_clid_class, ptr @trace_event_fields_nfsd_file_class, ptr @trace_event_type_funcs_nfsd_file_class, ptr @print_fmt_nfsd_file_class, ptr @trace_event_fields_nfsd_file_acquire, ptr @trace_event_type_funcs_nfsd_file_acquire, ptr @print_fmt_nfsd_file_acquire, ptr @trace_event_fields_nfsd_file_search_class, ptr @trace_event_type_funcs_nfsd_file_search_class, ptr @print_fmt_nfsd_file_search_class, ptr @trace_event_fields_nfsd_file_fsnotify_handle_event, ptr @trace_event_type_funcs_nfsd_file_fsnotify_handle_event, ptr @print_fmt_nfsd_file_fsnotify_handle_event, ptr @trace_event_fields_nfsd_drc_found, ptr @trace_event_type_funcs_nfsd_drc_found, ptr @print_fmt_nfsd_drc_found, ptr @trace_event_fields_nfsd_drc_mismatch, ptr @trace_event_type_funcs_nfsd_drc_mismatch, ptr @print_fmt_nfsd_drc_mismatch, ptr @trace_event_fields_nfsd_cb_args, ptr @trace_event_type_funcs_nfsd_cb_args, ptr @print_fmt_nfsd_cb_args, ptr @trace_event_fields_nfsd_cb_nodelegs, ptr @trace_event_type_funcs_nfsd_cb_nodelegs, ptr @print_fmt_nfsd_cb_nodelegs, ptr @trace_event_fields_nfsd_cb_class, ptr @trace_event_type_funcs_nfsd_cb_class, ptr @print_fmt_nfsd_cb_class, ptr @trace_event_fields_nfsd_cb_setup, ptr @trace_event_type_funcs_nfsd_cb_setup, ptr @print_fmt_nfsd_cb_setup, ptr @trace_event_fields_nfsd_cb_setup_err, ptr @trace_event_type_funcs_nfsd_cb_setup_err, ptr @print_fmt_nfsd_cb_setup_err, ptr @trace_event_fields_nfsd_cb_recall, ptr @trace_event_type_funcs_nfsd_cb_recall, ptr @print_fmt_nfsd_cb_recall, ptr @trace_event_fields_nfsd_cb_notify_lock, ptr @trace_event_type_funcs_nfsd_cb_notify_lock, ptr @print_fmt_nfsd_cb_notify_lock, ptr @trace_event_fields_nfsd_cb_offload, ptr @trace_event_type_funcs_nfsd_cb_offload, ptr @print_fmt_nfsd_cb_offload, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @trace_raw_output_nfsd_clid_cred_mismatch.symbols, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @trace_raw_output_nfsd_clid_cred_mismatch.symbols.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @trace_raw_output_nfsd_clid_class.symbols, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @trace_raw_output_nfsd_file_class.__flags, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @trace_raw_output_nfsd_file_class.__flags.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @trace_raw_output_nfsd_file_acquire.__flags, ptr @trace_raw_output_nfsd_file_acquire.__flags.131, ptr @trace_raw_output_nfsd_file_acquire.__flags.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @trace_raw_output_nfsd_drc_found.symbols, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @trace_raw_output_nfsd_cb_class.symbols, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @trace_raw_output_nfsd_cb_setup.symbols, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165], section "llvm.metadata"
@0 = internal global [361 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__nfsd__trace_system_name to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.166 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.168 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.171 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.174 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.180 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.186 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.189 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.192 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.201 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.207 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_xdr_err_class to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_xdr_err_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_xdr_err_class to i32), i32 61, i32 96, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_garbage_args_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.222 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_cant_encode_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.225 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_compound to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_compound to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_compound to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_compound to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_compound_status to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_compound_status to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.241 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_compound_status to i32), i32 88, i32 128, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_compound_status to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_compound_decode_err to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.250 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_compound_decode_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_compound_decode_err to i32), i32 90, i32 128, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_compound_decode_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_compound_encode_err to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.262 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_compound_encode_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_compound_encode_err to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_compound_encode_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_fh_err_class to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_fh_err_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_fh_err_class to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_set_fh_dentry_badexport to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_set_fh_dentry_badhandle to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_exp_find_key to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_exp_find_key to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_exp_find_key to i32), i32 118, i32 160, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_exp_find_key to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_expkey_update to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.301 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_expkey_update to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.304 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_expkey_update to i32), i32 157, i32 192, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_expkey_update to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.310 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_exp_get_by_name to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_exp_get_by_name to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.316 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_exp_get_by_name to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_exp_get_by_name to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.322 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_export_update to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_export_update to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_export_update to i32), i32 98, i32 160, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_export_update to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_io_class to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_io_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_io_class to i32), i32 94, i32 128, i32 ptrtoint (ptr @___asan_gen_.343 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_read_start to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_read_splice to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_read_vector to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_read_io_done to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.357 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_read_done to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_write_start to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_write_opened to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.366 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_write_io_done to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.369 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_write_done to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_err_class to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.373 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.903 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_err_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.376 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.903 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_err_class to i32), i32 100, i32 160, i32 ptrtoint (ptr @___asan_gen_.379 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.903 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_read_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_write_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.385 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_dirent to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_dirent to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.391 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_dirent to i32), i32 75, i32 128, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_dirent to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.397 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_copy_err_class to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.400 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_copy_err_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_copy_err_class to i32), i32 229, i32 288, i32 ptrtoint (ptr @___asan_gen_.406 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_clone_file_range_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.409 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_stateid_class to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.412 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.942 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_stateid_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.415 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.942 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_stateid_class to i32), i32 95, i32 128, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.942 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_layoutstate_alloc to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.421 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_layoutstate_unhash to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_layoutstate_free to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.427 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_layout_get_lookup_fail to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.430 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_layout_commit_lookup_fail to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_layout_return_lookup_fail to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_layout_recall to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_layout_recall_done to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.442 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_layout_recall_fail to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_layout_recall_release to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.448 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_open to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_deleg_read to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_deleg_recall to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.459 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_stateseqid_class to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.948 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_stateseqid_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.948 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_stateseqid_class to i32), i32 116, i32 160, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.948 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_preprocess to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_open_confirm to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_clientid_class to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.475 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.951 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_clientid_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.478 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.951 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_clientid_class to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.481 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.951 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_clid_expire_unconf to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.484 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.486 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_clid_reclaim_complete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.487 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_clid_confirmed to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.490 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_clid_destroyed to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.493 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.495 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_clid_admin_expired to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.498 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_clid_replaced to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.499 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.501 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_clid_purged to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.502 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_clid_renew to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.505 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.507 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_clid_stale to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_net_class to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_net_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.514 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_net_class to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.517 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_grace_start to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.520 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.522 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_grace_complete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_writeverf_reset to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_writeverf_reset to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_writeverf_reset to i32), i32 130, i32 192, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_writeverf_reset to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.535 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_clid_cred_mismatch to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_clid_cred_mismatch to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.541 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_clid_cred_mismatch to i32), i32 515, i32 672, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_clid_cred_mismatch to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_clid_verf_mismatch to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1017 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_clid_verf_mismatch to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1017 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_clid_verf_mismatch to i32), i32 174, i32 224, i32 ptrtoint (ptr @___asan_gen_.556 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1017 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_clid_verf_mismatch to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1017 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_clid_class to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.562 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1026 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_clid_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1026 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_clid_class to i32), i32 360, i32 448, i32 ptrtoint (ptr @___asan_gen_.568 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1026 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_clid_fresh to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_clid_confirmed_r to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.574 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.576 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_file_class to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_file_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.580 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_file_class to i32), i32 628, i32 768, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_file_alloc to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_file_put_final to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.589 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_file_unhash to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_file_put to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.595 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_file_unhash_and_release_locked to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_file_acquire to i32), i32 240, i32 288, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_file_acquire to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.604 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_file_acquire to i32), i32 1035, i32 1312, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_file_acquire to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.610 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_file_search_class to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_file_search_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_file_search_class to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.619 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_file_close_inode_sync to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.622 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_file_close_inode to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_file_is_cached to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_file_fsnotify_handle_event to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.631 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_file_fsnotify_handle_event to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.634 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_file_fsnotify_handle_event to i32), i32 86, i32 128, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_file_fsnotify_handle_event to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_drc_found to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_drc_found to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_drc_found to i32), i32 166, i32 224, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_drc_found to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.652 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_drc_mismatch to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_drc_mismatch to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.658 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_drc_mismatch to i32), i32 122, i32 160, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_drc_mismatch to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.664 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_cb_args to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.667 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_cb_args to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_cb_args to i32), i32 108, i32 160, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_cb_args to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_cb_nodelegs to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.679 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_cb_nodelegs to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_cb_nodelegs to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_cb_nodelegs to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.690 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_cb_class to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_cb_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_cb_class to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_cb_state to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.700 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.702 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_cb_probe to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.705 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_cb_lost to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.708 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_cb_shutdown to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.711 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_cb_setup to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_cb_setup to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.715 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_cb_setup to i32), i32 309, i32 384, i32 ptrtoint (ptr @___asan_gen_.718 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_cb_setup to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.721 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_cb_setup_err to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.724 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_cb_setup_err to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_cb_setup_err to i32), i32 90, i32 128, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_cb_setup_err to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.733 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_cb_recall to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.736 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_cb_recall to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_cb_recall to i32), i32 118, i32 160, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_cb_recall to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.745 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_cb_notify_lock to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.748 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_cb_notify_lock to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_cb_notify_lock to i32), i32 97, i32 160, i32 ptrtoint (ptr @___asan_gen_.754 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_cb_notify_lock to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.757 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_nfsd_cb_offload to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.760 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_nfsd_cb_offload to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.763 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_nfsd_cb_offload to i32), i32 193, i32 256, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_nfsd_cb_offload to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1248 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.801 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.807 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.828 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.837 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.840 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.846 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.861 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.879 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.882 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.885 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.897 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.903 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.903 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.909 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 103, i32 160, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.927 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.942 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.942 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.942 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.942 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.942 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.948 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.948 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.951 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.960 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.972 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_nfsd_clid_cred_mismatch.symbols to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1231 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_nfsd_clid_cred_mismatch.symbols.91 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1231 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1008 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1017 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1017 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 59, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1017 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1026 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1026 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_nfsd_clid_class.symbols to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1231 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1026 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_nfsd_file_class.__flags to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1138 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_nfsd_file_class.__flags.113 to i32), i32 112, i32 160, i32 ptrtoint (ptr @___asan_gen_.1138 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1119 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_nfsd_file_acquire.__flags to i32), i32 112, i32 160, i32 ptrtoint (ptr @___asan_gen_.1138 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_nfsd_file_acquire.__flags.131 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1138 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_nfsd_file_acquire.__flags.132 to i32), i32 112, i32 160, i32 ptrtoint (ptr @___asan_gen_.1138 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1140 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1149 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1164 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_nfsd_drc_found.symbols to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1231 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1182 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1191 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1200 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_nfsd_cb_class.symbols to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1231 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1221 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_nfsd_cb_setup.symbols to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1231 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1233 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1239 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1242 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1245 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.1246 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1248 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_garbage_args_err(ptr nocapture readnone %__data, ptr noundef %rqstp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_garbage_args_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqstp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_cant_encode_err(ptr nocapture readnone %__data, ptr noundef %rqstp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_cant_encode_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqstp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_compound(ptr nocapture readnone %__data, ptr noundef %rqst, i32 noundef %args_opcnt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_compound, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqst, i32 noundef %args_opcnt) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_compound_status(ptr nocapture readnone %__data, i32 noundef %args_opcnt, i32 noundef %resp_opcnt, i32 noundef %status, ptr noundef %name) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_compound_status, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %args_opcnt, i32 noundef %resp_opcnt, i32 noundef %status, ptr noundef %name) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_compound_decode_err(ptr nocapture readnone %__data, ptr noundef %rqstp, i32 noundef %args_opcnt, i32 noundef %resp_opcnt, i32 noundef %opnum, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_compound_decode_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqstp, i32 noundef %args_opcnt, i32 noundef %resp_opcnt, i32 noundef %opnum, i32 noundef %status) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_compound_encode_err(ptr nocapture readnone %__data, ptr noundef %rqstp, i32 noundef %opnum, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_compound_encode_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqstp, i32 noundef %opnum, i32 noundef %status) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_set_fh_dentry_badexport(ptr nocapture readnone %__data, ptr noundef %rqstp, ptr noundef %fhp, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_set_fh_dentry_badexport, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqstp, ptr noundef %fhp, i32 noundef %status) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_set_fh_dentry_badhandle(ptr nocapture readnone %__data, ptr noundef %rqstp, ptr noundef %fhp, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_set_fh_dentry_badhandle, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqstp, ptr noundef %fhp, i32 noundef %status) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_exp_find_key(ptr nocapture readnone %__data, ptr noundef %key, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_exp_find_key, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %key, i32 noundef %status) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_expkey_update(ptr nocapture readnone %__data, ptr noundef %key, ptr noundef %exp_path) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_expkey_update, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %key, ptr noundef %exp_path) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_exp_get_by_name(ptr nocapture readnone %__data, ptr noundef %key, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_exp_get_by_name, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %key, i32 noundef %status) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_export_update(ptr nocapture readnone %__data, ptr noundef %key) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_export_update, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %key) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_read_start(ptr nocapture readnone %__data, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_read_start, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_read_splice(ptr nocapture readnone %__data, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_read_splice, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_read_vector(ptr nocapture readnone %__data, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_read_vector, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_read_io_done(ptr nocapture readnone %__data, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_read_io_done, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_read_done(ptr nocapture readnone %__data, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_read_done, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_write_start(ptr nocapture readnone %__data, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_write_start, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_write_opened(ptr nocapture readnone %__data, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_write_opened, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_write_io_done(ptr nocapture readnone %__data, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_write_io_done, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_write_done(ptr nocapture readnone %__data, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_write_done, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_read_err(ptr nocapture readnone %__data, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_read_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_write_err(ptr nocapture readnone %__data, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_write_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_dirent(ptr nocapture readnone %__data, ptr noundef %fhp, i64 noundef %ino, ptr noundef %name, i32 noundef %namlen) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_dirent, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %fhp, i64 noundef %ino, ptr noundef %name, i32 noundef %namlen) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_clone_file_range_err(ptr nocapture readnone %__data, ptr noundef %rqstp, ptr noundef %src_fhp, i64 noundef %src_offset, ptr noundef %dst_fhp, i64 noundef %dst_offset, i64 noundef %count, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_clone_file_range_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqstp, ptr noundef %src_fhp, i64 noundef %src_offset, ptr noundef %dst_fhp, i64 noundef %dst_offset, i64 noundef %count, i32 noundef %status) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_layoutstate_alloc(ptr nocapture readnone %__data, ptr noundef %stp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_layoutstate_alloc, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %stp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_layoutstate_unhash(ptr nocapture readnone %__data, ptr noundef %stp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_layoutstate_unhash, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %stp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_layoutstate_free(ptr nocapture readnone %__data, ptr noundef %stp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_layoutstate_free, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %stp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_layout_get_lookup_fail(ptr nocapture readnone %__data, ptr noundef %stp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_layout_get_lookup_fail, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %stp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_layout_commit_lookup_fail(ptr nocapture readnone %__data, ptr noundef %stp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_layout_commit_lookup_fail, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %stp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_layout_return_lookup_fail(ptr nocapture readnone %__data, ptr noundef %stp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_layout_return_lookup_fail, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %stp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_layout_recall(ptr nocapture readnone %__data, ptr noundef %stp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_layout_recall, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %stp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_layout_recall_done(ptr nocapture readnone %__data, ptr noundef %stp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_layout_recall_done, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %stp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_layout_recall_fail(ptr nocapture readnone %__data, ptr noundef %stp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_layout_recall_fail, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %stp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_layout_recall_release(ptr nocapture readnone %__data, ptr noundef %stp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_layout_recall_release, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %stp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_open(ptr nocapture readnone %__data, ptr noundef %stp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_open, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %stp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_deleg_read(ptr nocapture readnone %__data, ptr noundef %stp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_deleg_read, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %stp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_deleg_recall(ptr nocapture readnone %__data, ptr noundef %stp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_deleg_recall, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %stp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_preprocess(ptr nocapture readnone %__data, i32 noundef %seqid, ptr noundef %stp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_preprocess, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %seqid, ptr noundef %stp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_open_confirm(ptr nocapture readnone %__data, i32 noundef %seqid, ptr noundef %stp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_open_confirm, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, i32 noundef %seqid, ptr noundef %stp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_clid_expire_unconf(ptr nocapture readnone %__data, ptr noundef %clid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_clid_expire_unconf, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clid) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_clid_reclaim_complete(ptr nocapture readnone %__data, ptr noundef %clid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_clid_reclaim_complete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clid) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_clid_confirmed(ptr nocapture readnone %__data, ptr noundef %clid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_clid_confirmed, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clid) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_clid_destroyed(ptr nocapture readnone %__data, ptr noundef %clid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_clid_destroyed, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clid) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_clid_admin_expired(ptr nocapture readnone %__data, ptr noundef %clid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_clid_admin_expired, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clid) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_clid_replaced(ptr nocapture readnone %__data, ptr noundef %clid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_clid_replaced, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clid) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_clid_purged(ptr nocapture readnone %__data, ptr noundef %clid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_clid_purged, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clid) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_clid_renew(ptr nocapture readnone %__data, ptr noundef %clid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_clid_renew, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clid) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_clid_stale(ptr nocapture readnone %__data, ptr noundef %clid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_clid_stale, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clid) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_grace_start(ptr nocapture readnone %__data, ptr noundef %nn) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_grace_start, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %nn) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_grace_complete(ptr nocapture readnone %__data, ptr noundef %nn) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_grace_complete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %nn) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_writeverf_reset(ptr nocapture readnone %__data, ptr noundef %nn, ptr noundef %rqstp, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_writeverf_reset, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %nn, ptr noundef %rqstp, i32 noundef %error) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_clid_cred_mismatch(ptr nocapture readnone %__data, ptr noundef %clp, ptr noundef %rqstp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_clid_cred_mismatch, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clp, ptr noundef %rqstp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_clid_verf_mismatch(ptr nocapture readnone %__data, ptr noundef %clp, ptr noundef %rqstp, ptr noundef %verf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_clid_verf_mismatch, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clp, ptr noundef %rqstp, ptr noundef %verf) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_clid_fresh(ptr nocapture readnone %__data, ptr noundef %clp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_clid_fresh, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_clid_confirmed_r(ptr nocapture readnone %__data, ptr noundef %clp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_clid_confirmed_r, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_file_alloc(ptr nocapture readnone %__data, ptr noundef %nf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_file_alloc, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %nf) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_file_put_final(ptr nocapture readnone %__data, ptr noundef %nf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_file_put_final, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %nf) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_file_unhash(ptr nocapture readnone %__data, ptr noundef %nf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_file_unhash, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %nf) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_file_put(ptr nocapture readnone %__data, ptr noundef %nf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_file_put, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %nf) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_file_unhash_and_release_locked(ptr nocapture readnone %__data, ptr noundef %nf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_file_unhash_and_release_locked, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %nf) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_file_acquire(ptr nocapture readnone %__data, ptr noundef %rqstp, i32 noundef %hash, ptr noundef %inode, i32 noundef %may_flags, ptr noundef %nf, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_file_acquire, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %rqstp, i32 noundef %hash, ptr noundef %inode, i32 noundef %may_flags, ptr noundef %nf, i32 noundef %status) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_file_close_inode_sync(ptr nocapture readnone %__data, ptr noundef %inode, i32 noundef %hash, i32 noundef %found) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_file_close_inode_sync, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, i32 noundef %hash, i32 noundef %found) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_file_close_inode(ptr nocapture readnone %__data, ptr noundef %inode, i32 noundef %hash, i32 noundef %found) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_file_close_inode, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, i32 noundef %hash, i32 noundef %found) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_file_is_cached(ptr nocapture readnone %__data, ptr noundef %inode, i32 noundef %hash, i32 noundef %found) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_file_is_cached, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, i32 noundef %hash, i32 noundef %found) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_file_fsnotify_handle_event(ptr nocapture readnone %__data, ptr noundef %inode, i32 noundef %mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_file_fsnotify_handle_event, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %inode, i32 noundef %mask) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_drc_found(ptr nocapture readnone %__data, ptr noundef %nn, ptr noundef %rqstp, i32 noundef %result) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_drc_found, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %nn, ptr noundef %rqstp, i32 noundef %result) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_drc_mismatch(ptr nocapture readnone %__data, ptr noundef %nn, ptr noundef %key, ptr noundef %rp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_drc_mismatch, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %nn, ptr noundef %key, ptr noundef %rp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_cb_args(ptr nocapture readnone %__data, ptr noundef %clp, ptr noundef %conn) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_cb_args, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clp, ptr noundef %conn) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_cb_nodelegs(ptr nocapture readnone %__data, ptr noundef %clp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_cb_nodelegs, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_cb_state(ptr nocapture readnone %__data, ptr noundef %clp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_cb_state, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_cb_probe(ptr nocapture readnone %__data, ptr noundef %clp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_cb_probe, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_cb_lost(ptr nocapture readnone %__data, ptr noundef %clp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_cb_lost, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_cb_shutdown(ptr nocapture readnone %__data, ptr noundef %clp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_cb_shutdown, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clp) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_cb_setup(ptr nocapture readnone %__data, ptr noundef %clp, ptr noundef %netid, i32 noundef %authflavor) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_cb_setup, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clp, ptr noundef %netid, i32 noundef %authflavor) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_cb_setup_err(ptr nocapture readnone %__data, ptr noundef %clp, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_cb_setup_err, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clp, i32 noundef %error) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_cb_recall(ptr nocapture readnone %__data, ptr noundef %stid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_cb_recall, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %stid) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_cb_notify_lock(ptr nocapture readnone %__data, ptr noundef %lo, ptr noundef %nbl) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_cb_notify_lock, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %lo, ptr noundef %nbl) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_nfsd_cb_offload(ptr nocapture readnone %__data, ptr noundef %clp, ptr noundef %stp, ptr noundef %fh, i64 noundef %count, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_nfsd_cb_offload, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %clp, ptr noundef %stp, ptr noundef %fh, i64 noundef %count, i32 noundef %status) #9
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_xdr_err_class(ptr noundef %__data, ptr nocapture noundef readonly %rqstp) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 80) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %do.body

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

do.body:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %rq_xprt = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 2
  %3 = ptrtoint ptr %rq_xprt to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_xprt, align 8
  %tobool6.not = icmp eq ptr %4, null
  %xpt_net = getelementptr inbounds %struct.svc_xprt, ptr %4, i32 0, i32 19
  %rq_bc_net = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 48
  %cond.in = select i1 %tobool6.not, ptr %rq_bc_net, ptr %xpt_net
  %5 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %5)
  %cond = load ptr, ptr %cond.in, align 4
  %inum = getelementptr inbounds %struct.net, ptr %cond, i32 0, i32 14, i32 2
  %6 = ptrtoint ptr %inum to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %inum, align 8
  %netns_ino = getelementptr inbounds %struct.trace_event_raw_nfsd_xdr_err_class, ptr %call3, i32 0, i32 1
  %8 = ptrtoint ptr %netns_ino to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %netns_ino, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %9 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_xdr_err_class, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %xid, align 4
  %server = getelementptr inbounds %struct.trace_event_raw_nfsd_xdr_err_class, ptr %call3, i32 0, i32 3
  %12 = load ptr, ptr %rq_xprt, align 8
  %xpt_local = getelementptr inbounds %struct.svc_xprt, ptr %12, i32 0, i32 13
  %xpt_locallen = getelementptr inbounds %struct.svc_xprt, ptr %12, i32 0, i32 14
  %13 = ptrtoint ptr %xpt_locallen to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %xpt_locallen, align 4
  %15 = call ptr @memcpy(ptr %server, ptr %xpt_local, i32 %14)
  %client = getelementptr inbounds %struct.trace_event_raw_nfsd_xdr_err_class, ptr %call3, i32 0, i32 4
  %16 = load ptr, ptr %rq_xprt, align 8
  %xpt_remote = getelementptr inbounds %struct.svc_xprt, ptr %16, i32 0, i32 15
  %xpt_remotelen = getelementptr inbounds %struct.svc_xprt, ptr %16, i32 0, i32 16
  %17 = ptrtoint ptr %xpt_remotelen to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %xpt_remotelen, align 4
  %19 = call ptr @memcpy(ptr %client, ptr %xpt_remote, i32 %18)
  %rq_vers = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 29
  %20 = ptrtoint ptr %rq_vers to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %rq_vers, align 4
  %vers = getelementptr inbounds %struct.trace_event_raw_nfsd_xdr_err_class, ptr %call3, i32 0, i32 5
  %22 = ptrtoint ptr %vers to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %vers, align 4
  %rq_proc = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 30
  %23 = ptrtoint ptr %rq_proc to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %rq_proc, align 8
  %proc = getelementptr inbounds %struct.trace_event_raw_nfsd_xdr_err_class, ptr %call3, i32 0, i32 6
  %25 = ptrtoint ptr %proc to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %proc, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %do.body, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_xdr_err_class(ptr noundef %__data, ptr nocapture noundef readonly %rqstp) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 84, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_xprt = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 2
  %27 = ptrtoint ptr %rq_xprt to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rq_xprt, align 8
  %tobool18.not = icmp eq ptr %28, null
  %xpt_net = getelementptr inbounds %struct.svc_xprt, ptr %28, i32 0, i32 19
  %rq_bc_net = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 48
  %cond.in = select i1 %tobool18.not, ptr %rq_bc_net, ptr %xpt_net
  %29 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %29)
  %cond = load ptr, ptr %cond.in, align 4
  %inum = getelementptr inbounds %struct.net, ptr %cond, i32 0, i32 14, i32 2
  %30 = ptrtoint ptr %inum to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %inum, align 8
  %netns_ino = getelementptr inbounds %struct.trace_event_raw_nfsd_xdr_err_class, ptr %call13, i32 0, i32 1
  %32 = ptrtoint ptr %netns_ino to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %netns_ino, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %33 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_xdr_err_class, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %xid, align 4
  %server = getelementptr inbounds %struct.trace_event_raw_nfsd_xdr_err_class, ptr %call13, i32 0, i32 3
  %36 = load ptr, ptr %rq_xprt, align 8
  %xpt_local = getelementptr inbounds %struct.svc_xprt, ptr %36, i32 0, i32 13
  %xpt_locallen = getelementptr inbounds %struct.svc_xprt, ptr %36, i32 0, i32 14
  %37 = ptrtoint ptr %xpt_locallen to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %xpt_locallen, align 4
  %39 = call ptr @memcpy(ptr %server, ptr %xpt_local, i32 %38)
  %client = getelementptr inbounds %struct.trace_event_raw_nfsd_xdr_err_class, ptr %call13, i32 0, i32 4
  %40 = load ptr, ptr %rq_xprt, align 8
  %xpt_remote = getelementptr inbounds %struct.svc_xprt, ptr %40, i32 0, i32 15
  %xpt_remotelen = getelementptr inbounds %struct.svc_xprt, ptr %40, i32 0, i32 16
  %41 = ptrtoint ptr %xpt_remotelen to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %xpt_remotelen, align 4
  %43 = call ptr @memcpy(ptr %client, ptr %xpt_remote, i32 %42)
  %rq_vers = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 29
  %44 = ptrtoint ptr %rq_vers to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %rq_vers, align 4
  %vers = getelementptr inbounds %struct.trace_event_raw_nfsd_xdr_err_class, ptr %call13, i32 0, i32 5
  %46 = ptrtoint ptr %vers to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %vers, align 4
  %rq_proc = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 30
  %47 = ptrtoint ptr %rq_proc to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %rq_proc, align 8
  %proc = getelementptr inbounds %struct.trace_event_raw_nfsd_xdr_err_class, ptr %call13, i32 0, i32 6
  %49 = ptrtoint ptr %proc to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %48, ptr %proc, align 4
  %50 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %rctx, align 4
  %52 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 84, i32 noundef %51, ptr noundef %__data, i64 noundef 1, ptr noundef %53, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_compound(ptr noundef %__data, ptr nocapture noundef readonly %rqst, i32 noundef %args_opcnt) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 27
  %3 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_compound, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %xid, align 4
  %args_opcnt6 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound, ptr %call3, i32 0, i32 2
  %6 = ptrtoint ptr %args_opcnt6 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %args_opcnt, ptr %args_opcnt6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_compound(ptr noundef %__data, ptr nocapture noundef readonly %rqst, i32 noundef %args_opcnt) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqst, i32 0, i32 27
  %27 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_compound, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %xid, align 4
  %args_opcnt17 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound, ptr %call13, i32 0, i32 2
  %30 = ptrtoint ptr %args_opcnt17 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %args_opcnt, ptr %args_opcnt17, align 4
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_compound_status(ptr noundef %__data, i32 noundef %args_opcnt, i32 noundef %resp_opcnt, i32 noundef %status, ptr noundef readonly %name) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i29 = icmp eq ptr %name, null
  %spec.select.i = select i1 %tobool.not.i29, ptr @.str.26, ptr %name
  %call.i30 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #12
  %add = add i32 %call.i30, 25
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %add.i = shl i32 %call.i30, 16
  %or.i = add i32 %add.i, 65560
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_status, ptr %call3, i32 0, i32 4
  %3 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %args_opcnt7 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_status, ptr %call3, i32 0, i32 1
  %4 = ptrtoint ptr %args_opcnt7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %args_opcnt, ptr %args_opcnt7, align 4
  %resp_opcnt8 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_status, ptr %call3, i32 0, i32 2
  %5 = ptrtoint ptr %resp_opcnt8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %resp_opcnt, ptr %resp_opcnt8, align 4
  %status9 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_status, ptr %call3, i32 0, i32 3
  %6 = ptrtoint ptr %status9 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %status, ptr %status9, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 24
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #13
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_compound_status(ptr noundef %__data, i32 noundef %args_opcnt, i32 noundef %resp_opcnt, i32 noundef %status, ptr noundef readonly %name) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %tobool.not.i = icmp eq ptr %name, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.26, ptr %name
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #12
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65560
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i53.not = icmp eq ptr %15, null
  br i1 %tobool.not.i53.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 36
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_status, ptr %call13, i32 0, i32 4
  %27 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %args_opcnt18 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_status, ptr %call13, i32 0, i32 1
  %28 = ptrtoint ptr %args_opcnt18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %args_opcnt, ptr %args_opcnt18, align 4
  %resp_opcnt19 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_status, ptr %call13, i32 0, i32 2
  %29 = ptrtoint ptr %resp_opcnt19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %resp_opcnt, ptr %resp_opcnt19, align 4
  %status20 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_status, ptr %call13, i32 0, i32 3
  %30 = ptrtoint ptr %status20 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %status, ptr %status20, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 24
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #13
  %31 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rctx, align 4
  %33 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %32, ptr noundef %__data, i64 noundef 1, ptr noundef %34, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_compound_decode_err(ptr noundef %__data, ptr nocapture noundef readonly %rqstp, i32 noundef %args_opcnt, i32 noundef %resp_opcnt, i32 noundef %opnum, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 88) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %do.body

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

do.body:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %rq_xprt = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 2
  %3 = ptrtoint ptr %rq_xprt to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_xprt, align 8
  %tobool6.not = icmp eq ptr %4, null
  %xpt_net = getelementptr inbounds %struct.svc_xprt, ptr %4, i32 0, i32 19
  %rq_bc_net = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 48
  %cond.in = select i1 %tobool6.not, ptr %rq_bc_net, ptr %xpt_net
  %5 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %5)
  %cond = load ptr, ptr %cond.in, align 4
  %inum = getelementptr inbounds %struct.net, ptr %cond, i32 0, i32 14, i32 2
  %6 = ptrtoint ptr %inum to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %inum, align 8
  %netns_ino = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %call3, i32 0, i32 1
  %8 = ptrtoint ptr %netns_ino to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %netns_ino, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %9 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %xid, align 4
  %status8 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %status8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %status, ptr %status8, align 4
  %server = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %call3, i32 0, i32 4
  %13 = load ptr, ptr %rq_xprt, align 8
  %xpt_local = getelementptr inbounds %struct.svc_xprt, ptr %13, i32 0, i32 13
  %xpt_locallen = getelementptr inbounds %struct.svc_xprt, ptr %13, i32 0, i32 14
  %14 = ptrtoint ptr %xpt_locallen to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %xpt_locallen, align 4
  %16 = call ptr @memcpy(ptr %server, ptr %xpt_local, i32 %15)
  %client = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %call3, i32 0, i32 5
  %17 = load ptr, ptr %rq_xprt, align 8
  %xpt_remote = getelementptr inbounds %struct.svc_xprt, ptr %17, i32 0, i32 15
  %xpt_remotelen = getelementptr inbounds %struct.svc_xprt, ptr %17, i32 0, i32 16
  %18 = ptrtoint ptr %xpt_remotelen to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %xpt_remotelen, align 4
  %20 = call ptr @memcpy(ptr %client, ptr %xpt_remote, i32 %19)
  %args_opcnt14 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %call3, i32 0, i32 6
  %21 = ptrtoint ptr %args_opcnt14 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %args_opcnt, ptr %args_opcnt14, align 4
  %resp_opcnt15 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %call3, i32 0, i32 7
  %22 = ptrtoint ptr %resp_opcnt15 to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %resp_opcnt, ptr %resp_opcnt15, align 4
  %opnum16 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %call3, i32 0, i32 8
  %23 = ptrtoint ptr %opnum16 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %opnum, ptr %opnum16, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %do.body, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_compound_decode_err(ptr noundef %__data, ptr nocapture noundef readonly %rqstp, i32 noundef %args_opcnt, i32 noundef %resp_opcnt, i32 noundef %opnum, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 92, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_xprt = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 2
  %27 = ptrtoint ptr %rq_xprt to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rq_xprt, align 8
  %tobool18.not = icmp eq ptr %28, null
  %xpt_net = getelementptr inbounds %struct.svc_xprt, ptr %28, i32 0, i32 19
  %rq_bc_net = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 48
  %cond.in = select i1 %tobool18.not, ptr %rq_bc_net, ptr %xpt_net
  %29 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %29)
  %cond = load ptr, ptr %cond.in, align 4
  %inum = getelementptr inbounds %struct.net, ptr %cond, i32 0, i32 14, i32 2
  %30 = ptrtoint ptr %inum to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %inum, align 8
  %netns_ino = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %call13, i32 0, i32 1
  %32 = ptrtoint ptr %netns_ino to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %netns_ino, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %33 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %xid, align 4
  %status20 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %status20 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %status, ptr %status20, align 4
  %server = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %call13, i32 0, i32 4
  %37 = load ptr, ptr %rq_xprt, align 8
  %xpt_local = getelementptr inbounds %struct.svc_xprt, ptr %37, i32 0, i32 13
  %xpt_locallen = getelementptr inbounds %struct.svc_xprt, ptr %37, i32 0, i32 14
  %38 = ptrtoint ptr %xpt_locallen to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %xpt_locallen, align 4
  %40 = call ptr @memcpy(ptr %server, ptr %xpt_local, i32 %39)
  %client = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %call13, i32 0, i32 5
  %41 = load ptr, ptr %rq_xprt, align 8
  %xpt_remote = getelementptr inbounds %struct.svc_xprt, ptr %41, i32 0, i32 15
  %xpt_remotelen = getelementptr inbounds %struct.svc_xprt, ptr %41, i32 0, i32 16
  %42 = ptrtoint ptr %xpt_remotelen to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %xpt_remotelen, align 4
  %44 = call ptr @memcpy(ptr %client, ptr %xpt_remote, i32 %43)
  %args_opcnt28 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %call13, i32 0, i32 6
  %45 = ptrtoint ptr %args_opcnt28 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %args_opcnt, ptr %args_opcnt28, align 4
  %resp_opcnt29 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %call13, i32 0, i32 7
  %46 = ptrtoint ptr %resp_opcnt29 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %resp_opcnt, ptr %resp_opcnt29, align 4
  %opnum30 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %call13, i32 0, i32 8
  %47 = ptrtoint ptr %opnum30 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %opnum, ptr %opnum30, align 4
  %48 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %rctx, align 4
  %50 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 92, i32 noundef %49, ptr noundef %__data, i64 noundef 1, ptr noundef %51, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_compound_encode_err(ptr noundef %__data, ptr nocapture noundef readonly %rqstp, i32 noundef %opnum, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 80) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %do.body

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

do.body:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %rq_xprt = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 2
  %3 = ptrtoint ptr %rq_xprt to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %rq_xprt, align 8
  %tobool6.not = icmp eq ptr %4, null
  %xpt_net = getelementptr inbounds %struct.svc_xprt, ptr %4, i32 0, i32 19
  %rq_bc_net = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 48
  %cond.in = select i1 %tobool6.not, ptr %rq_bc_net, ptr %xpt_net
  %5 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %5)
  %cond = load ptr, ptr %cond.in, align 4
  %inum = getelementptr inbounds %struct.net, ptr %cond, i32 0, i32 14, i32 2
  %6 = ptrtoint ptr %inum to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %inum, align 8
  %netns_ino = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_encode_err, ptr %call3, i32 0, i32 1
  %8 = ptrtoint ptr %netns_ino to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %netns_ino, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %9 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_encode_err, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %xid, align 4
  %status8 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_encode_err, ptr %call3, i32 0, i32 3
  %12 = ptrtoint ptr %status8 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %status, ptr %status8, align 4
  %server = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_encode_err, ptr %call3, i32 0, i32 4
  %13 = load ptr, ptr %rq_xprt, align 8
  %xpt_local = getelementptr inbounds %struct.svc_xprt, ptr %13, i32 0, i32 13
  %xpt_locallen = getelementptr inbounds %struct.svc_xprt, ptr %13, i32 0, i32 14
  %14 = ptrtoint ptr %xpt_locallen to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %xpt_locallen, align 4
  %16 = call ptr @memcpy(ptr %server, ptr %xpt_local, i32 %15)
  %client = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_encode_err, ptr %call3, i32 0, i32 5
  %17 = load ptr, ptr %rq_xprt, align 8
  %xpt_remote = getelementptr inbounds %struct.svc_xprt, ptr %17, i32 0, i32 15
  %xpt_remotelen = getelementptr inbounds %struct.svc_xprt, ptr %17, i32 0, i32 16
  %18 = ptrtoint ptr %xpt_remotelen to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %xpt_remotelen, align 4
  %20 = call ptr @memcpy(ptr %client, ptr %xpt_remote, i32 %19)
  %opnum14 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_encode_err, ptr %call3, i32 0, i32 6
  %21 = ptrtoint ptr %opnum14 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %opnum, ptr %opnum14, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %do.body, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_compound_encode_err(ptr noundef %__data, ptr nocapture noundef readonly %rqstp, i32 noundef %opnum, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 84, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_xprt = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 2
  %27 = ptrtoint ptr %rq_xprt to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %rq_xprt, align 8
  %tobool18.not = icmp eq ptr %28, null
  %xpt_net = getelementptr inbounds %struct.svc_xprt, ptr %28, i32 0, i32 19
  %rq_bc_net = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 48
  %cond.in = select i1 %tobool18.not, ptr %rq_bc_net, ptr %xpt_net
  %29 = ptrtoint ptr %cond.in to i32
  call void @__asan_load4_noabort(i32 %29)
  %cond = load ptr, ptr %cond.in, align 4
  %inum = getelementptr inbounds %struct.net, ptr %cond, i32 0, i32 14, i32 2
  %30 = ptrtoint ptr %inum to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %inum, align 8
  %netns_ino = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_encode_err, ptr %call13, i32 0, i32 1
  %32 = ptrtoint ptr %netns_ino to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %netns_ino, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %33 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_encode_err, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %xid, align 4
  %status20 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_encode_err, ptr %call13, i32 0, i32 3
  %36 = ptrtoint ptr %status20 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %status, ptr %status20, align 4
  %server = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_encode_err, ptr %call13, i32 0, i32 4
  %37 = load ptr, ptr %rq_xprt, align 8
  %xpt_local = getelementptr inbounds %struct.svc_xprt, ptr %37, i32 0, i32 13
  %xpt_locallen = getelementptr inbounds %struct.svc_xprt, ptr %37, i32 0, i32 14
  %38 = ptrtoint ptr %xpt_locallen to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %xpt_locallen, align 4
  %40 = call ptr @memcpy(ptr %server, ptr %xpt_local, i32 %39)
  %client = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_encode_err, ptr %call13, i32 0, i32 5
  %41 = load ptr, ptr %rq_xprt, align 8
  %xpt_remote = getelementptr inbounds %struct.svc_xprt, ptr %41, i32 0, i32 15
  %xpt_remotelen = getelementptr inbounds %struct.svc_xprt, ptr %41, i32 0, i32 16
  %42 = ptrtoint ptr %xpt_remotelen to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %xpt_remotelen, align 4
  %44 = call ptr @memcpy(ptr %client, ptr %xpt_remote, i32 %43)
  %opnum28 = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_encode_err, ptr %call13, i32 0, i32 6
  %45 = ptrtoint ptr %opnum28 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %opnum, ptr %opnum28, align 4
  %46 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %rctx, align 4
  %48 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 84, i32 noundef %47, ptr noundef %__data, i64 noundef 1, ptr noundef %49, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_fh_err_class(ptr noundef %__data, ptr nocapture noundef readonly %rqstp, ptr noundef %fhp, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %3 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_fh_err_class, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %xid, align 4
  %6 = getelementptr inbounds %struct.knfsd_fh, ptr %fhp, i32 0, i32 1
  %7 = ptrtoint ptr %fhp to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %fhp, align 4
  %call.i19 = call i32 @crc32_le(i32 noundef -1, ptr noundef %6, i32 noundef %8) #14
  %neg.i = xor i32 %call.i19, -1
  %fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_fh_err_class, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %fh_hash to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %neg.i, ptr %fh_hash, align 4
  %status7 = getelementptr inbounds %struct.trace_event_raw_nfsd_fh_err_class, ptr %call3, i32 0, i32 3
  %10 = ptrtoint ptr %status7 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %status, ptr %status7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_fh_err_class(ptr noundef %__data, ptr nocapture noundef readonly %rqstp, ptr noundef %fhp, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %27 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_fh_err_class, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %xid, align 4
  %30 = getelementptr inbounds %struct.knfsd_fh, ptr %fhp, i32 0, i32 1
  %31 = ptrtoint ptr %fhp to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %fhp, align 4
  %call.i = call i32 @crc32_le(i32 noundef -1, ptr noundef %30, i32 noundef %32) #14
  %neg.i = xor i32 %call.i, -1
  %fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_fh_err_class, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %fh_hash to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %neg.i, ptr %fh_hash, align 4
  %status18 = getelementptr inbounds %struct.trace_event_raw_nfsd_fh_err_class, ptr %call13, i32 0, i32 3
  %34 = ptrtoint ptr %status18 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %status, ptr %status18, align 4
  %35 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rctx, align 4
  %37 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %36, ptr noundef %__data, i64 noundef 1, ptr noundef %38, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_exp_find_key(ptr noundef %__data, ptr nocapture noundef readonly %key, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %ek_client.i = getelementptr inbounds %struct.svc_expkey, ptr %key, i32 0, i32 1
  %3 = ptrtoint ptr %ek_client.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ek_client.i, align 8
  %name.i = getelementptr inbounds %struct.auth_domain, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %name.i, align 4
  %tobool.not.i29 = icmp eq ptr %6, null
  %spec.select.i = select i1 %tobool.not.i29, ptr @.str.26, ptr %6
  %call.i30 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #12
  %add = add i32 %call.i30, 45
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %add.i = shl i32 %call.i30, 16
  %or.i = add i32 %add.i, 65580
  %__data_loc_auth_domain = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_find_key, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %__data_loc_auth_domain to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_auth_domain, align 4
  %ek_fsidtype = getelementptr inbounds %struct.svc_expkey, ptr %key, i32 0, i32 2
  %8 = ptrtoint ptr %ek_fsidtype to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ek_fsidtype, align 4
  %fsidtype = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_find_key, ptr %call3, i32 0, i32 1
  %10 = ptrtoint ptr %fsidtype to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %fsidtype, align 4
  %fsid = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_find_key, ptr %call3, i32 0, i32 2
  %ek_fsid = getelementptr inbounds %struct.svc_expkey, ptr %key, i32 0, i32 3
  %11 = call ptr @memcpy(ptr %fsid, ptr %ek_fsid, i32 24)
  %add.ptr = getelementptr i8, ptr %call3, i32 44
  %12 = ptrtoint ptr %ek_client.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ek_client.i, align 8
  %name = getelementptr inbounds %struct.auth_domain, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %name, align 4
  %tobool8.not = icmp eq ptr %15, null
  %spec.select = select i1 %tobool8.not, ptr @.str.26, ptr %15
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #13
  %status12 = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_find_key, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %status12 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %status, ptr %status12, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_exp_find_key(ptr noundef %__data, ptr nocapture noundef readonly %key, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %ek_client.i = getelementptr inbounds %struct.svc_expkey, ptr %key, i32 0, i32 1
  %2 = ptrtoint ptr %ek_client.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ek_client.i, align 8
  %name.i = getelementptr inbounds %struct.auth_domain, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %name.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.26, ptr %5
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #12
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65580
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i53.not = icmp eq ptr %19, null
  br i1 %tobool.not.i53.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 56
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #9
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_auth_domain = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_find_key, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %__data_loc_auth_domain to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_auth_domain, align 4
  %ek_fsidtype = getelementptr inbounds %struct.svc_expkey, ptr %key, i32 0, i32 2
  %32 = ptrtoint ptr %ek_fsidtype to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %ek_fsidtype, align 4
  %fsidtype = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_find_key, ptr %call13, i32 0, i32 1
  %34 = ptrtoint ptr %fsidtype to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %fsidtype, align 4
  %fsid = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_find_key, ptr %call13, i32 0, i32 2
  %ek_fsid = getelementptr inbounds %struct.svc_expkey, ptr %key, i32 0, i32 3
  %35 = call ptr @memcpy(ptr %fsid, ptr %ek_fsid, i32 24)
  %add.ptr = getelementptr i8, ptr %call13, i32 44
  %36 = ptrtoint ptr %ek_client.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %ek_client.i, align 8
  %name = getelementptr inbounds %struct.auth_domain, ptr %37, i32 0, i32 2
  %38 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %name, align 4
  %tobool20.not = icmp eq ptr %39, null
  %spec.select = select i1 %tobool20.not, ptr @.str.26, ptr %39
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #13
  %status24 = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_find_key, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %status24 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %status, ptr %status24, align 4
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %15, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_expkey_update(ptr noundef %__data, ptr noundef %key, ptr noundef readonly %exp_path) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %ek_client.i = getelementptr inbounds %struct.svc_expkey, ptr %key, i32 0, i32 1
  %3 = ptrtoint ptr %ek_client.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ek_client.i, align 8
  %name.i = getelementptr inbounds %struct.auth_domain, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %name.i, align 4
  %tobool.not.i44 = icmp eq ptr %6, null
  %spec.select.i = select i1 %tobool.not.i44, ptr @.str.26, ptr %6
  %call.i45 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #12
  %tobool7.not.i = icmp eq ptr %exp_path, null
  %cond11.i = select i1 %tobool7.not.i, ptr @.str.26, ptr %exp_path
  %call12.i = tail call i32 @strlen(ptr noundef nonnull %cond11.i) #12
  %add13.i = add i32 %call12.i, 1
  %add19.i = add i32 %call.i45, 49
  %add = add i32 %add19.i, %add13.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %shl16.i = shl i32 %add13.i, 16
  %add15.i = add i32 %call.i45, 46
  %or18.i = or i32 %shl16.i, %add15.i
  %add.i = shl i32 %call.i45, 16
  %or.i = add i32 %add.i, 65581
  %__data_loc_auth_domain = getelementptr inbounds %struct.trace_event_raw_nfsd_expkey_update, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %__data_loc_auth_domain to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %or.i, ptr %__data_loc_auth_domain, align 4
  %__data_loc_path = getelementptr inbounds %struct.trace_event_raw_nfsd_expkey_update, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %__data_loc_path to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %or18.i, ptr %__data_loc_path, align 4
  %ek_fsidtype = getelementptr inbounds %struct.svc_expkey, ptr %key, i32 0, i32 2
  %9 = ptrtoint ptr %ek_fsidtype to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %ek_fsidtype, align 4
  %fsidtype = getelementptr inbounds %struct.trace_event_raw_nfsd_expkey_update, ptr %call3, i32 0, i32 1
  %11 = ptrtoint ptr %fsidtype to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %fsidtype, align 4
  %fsid = getelementptr inbounds %struct.trace_event_raw_nfsd_expkey_update, ptr %call3, i32 0, i32 2
  %ek_fsid = getelementptr inbounds %struct.svc_expkey, ptr %key, i32 0, i32 3
  %12 = call ptr @memcpy(ptr %fsid, ptr %ek_fsid, i32 24)
  %add.ptr = getelementptr i8, ptr %call3, i32 45
  %13 = ptrtoint ptr %ek_client.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ek_client.i, align 8
  %name = getelementptr inbounds %struct.auth_domain, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %name, align 4
  %tobool8.not = icmp eq ptr %16, null
  %spec.select = select i1 %tobool8.not, ptr @.str.26, ptr %16
  %call11 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #13
  %and13 = and i32 %add15.i, 65535
  %add.ptr14 = getelementptr i8, ptr %call3, i32 %and13
  %call20 = call ptr @strcpy(ptr noundef %add.ptr14, ptr noundef nonnull %cond11.i) #13
  %flags = getelementptr inbounds %struct.cache_head, ptr %key, i32 0, i32 4
  %17 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile i32, ptr %flags, align 4
  %cache = getelementptr inbounds %struct.trace_event_raw_nfsd_expkey_update, ptr %call3, i32 0, i32 5
  %19 = trunc i32 %18 to i8
  %20 = lshr i8 %19, 1
  %21 = and i8 %20, 1
  %22 = xor i8 %21, 1
  %23 = ptrtoint ptr %cache to i32
  call void @__asan_store1_noabort(i32 %23)
  store i8 %22, ptr %cache, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_expkey_update(ptr noundef %__data, ptr noundef %key, ptr noundef readonly %exp_path) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %ek_client.i = getelementptr inbounds %struct.svc_expkey, ptr %key, i32 0, i32 1
  %2 = ptrtoint ptr %ek_client.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ek_client.i, align 8
  %name.i = getelementptr inbounds %struct.auth_domain, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %name.i, align 4
  %tobool.not.i = icmp eq ptr %5, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.26, ptr %5
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #12
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 45
  %tobool7.not.i = icmp eq ptr %exp_path, null
  %cond11.i = select i1 %tobool7.not.i, ptr @.str.26, ptr %exp_path
  %call12.i = tail call i32 @strlen(ptr noundef nonnull %cond11.i) #12
  %add13.i = add i32 %call12.i, 1
  %add15.i = add i32 %call.i, 46
  %shl16.i = shl i32 %add13.i, 16
  %or18.i = or i32 %shl16.i, %add15.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %6 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %perf_events, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %16 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %17, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %18 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %15, align 4
  %tobool.not.i70.not = icmp eq ptr %19, null
  br i1 %tobool.not.i70.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add19.i = add i32 %call.i, 60
  %add12 = add i32 %add19.i, %add13.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %20 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %__regs, align 4
  %22 = call ptr @llvm.returnaddress(i32 0) #9
  %23 = ptrtoint ptr %22 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %21, i32 0, i32 15
  %24 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx.i, align 4
  %25 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %26 = ptrtoint ptr %25 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %21, i32 0, i32 11
  %27 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx2.i, align 4
  %28 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %21, i32 0, i32 13
  %29 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %21, i32 0, i32 16
  %30 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_auth_domain = getelementptr inbounds %struct.trace_event_raw_nfsd_expkey_update, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %__data_loc_auth_domain to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %or.i, ptr %__data_loc_auth_domain, align 4
  %__data_loc_path = getelementptr inbounds %struct.trace_event_raw_nfsd_expkey_update, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %__data_loc_path to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %or18.i, ptr %__data_loc_path, align 4
  %ek_fsidtype = getelementptr inbounds %struct.svc_expkey, ptr %key, i32 0, i32 2
  %33 = ptrtoint ptr %ek_fsidtype to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %ek_fsidtype, align 4
  %fsidtype = getelementptr inbounds %struct.trace_event_raw_nfsd_expkey_update, ptr %call13, i32 0, i32 1
  %35 = ptrtoint ptr %fsidtype to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %fsidtype, align 4
  %fsid = getelementptr inbounds %struct.trace_event_raw_nfsd_expkey_update, ptr %call13, i32 0, i32 2
  %ek_fsid = getelementptr inbounds %struct.svc_expkey, ptr %key, i32 0, i32 3
  %36 = call ptr @memcpy(ptr %fsid, ptr %ek_fsid, i32 24)
  %add.ptr = getelementptr i8, ptr %call13, i32 45
  %37 = ptrtoint ptr %ek_client.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %ek_client.i, align 8
  %name = getelementptr inbounds %struct.auth_domain, ptr %38, i32 0, i32 2
  %39 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %name, align 4
  %tobool20.not = icmp eq ptr %40, null
  %spec.select = select i1 %tobool20.not, ptr @.str.26, ptr %40
  %call23 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #13
  %and25 = and i32 %add15.i, 65535
  %add.ptr26 = getelementptr i8, ptr %call13, i32 %and25
  %call32 = call ptr @strcpy(ptr noundef %add.ptr26, ptr noundef nonnull %cond11.i) #13
  %flags = getelementptr inbounds %struct.cache_head, ptr %key, i32 0, i32 4
  %41 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %flags, align 4
  %cache = getelementptr inbounds %struct.trace_event_raw_nfsd_expkey_update, ptr %call13, i32 0, i32 5
  %43 = trunc i32 %42 to i8
  %44 = lshr i8 %43, 1
  %45 = and i8 %44, 1
  %46 = xor i8 %45, 1
  %47 = ptrtoint ptr %cache to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 %46, ptr %cache, align 4
  %48 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %rctx, align 4
  %50 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %49, ptr noundef %__data, i64 noundef 1, ptr noundef %51, ptr noundef %15, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_exp_get_by_name(ptr noundef %__data, ptr nocapture noundef readonly %key, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %dentry.i = getelementptr inbounds %struct.svc_export, ptr %key, i32 0, i32 3, i32 1
  %3 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dentry.i, align 4
  %name.i = getelementptr inbounds %struct.dentry, ptr %4, i32 0, i32 4, i32 1
  %5 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %name.i, align 8
  %tobool.not.i44 = icmp eq ptr %6, null
  %spec.select.i = select i1 %tobool.not.i44, ptr @.str.26, ptr %6
  %call.i45 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #12
  %ex_client.i = getelementptr inbounds %struct.svc_export, ptr %key, i32 0, i32 1
  %7 = ptrtoint ptr %ex_client.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ex_client.i, align 8
  %name9.i = getelementptr inbounds %struct.auth_domain, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %name9.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %name9.i, align 4
  %tobool10.not.i = icmp eq ptr %10, null
  %cond16.i = select i1 %tobool10.not.i, ptr @.str.26, ptr %10
  %call17.i = tail call i32 @strlen(ptr noundef nonnull %cond16.i) #12
  %add18.i = add i32 %call17.i, 1
  %add24.i = add i32 %call.i45, 21
  %add = add i32 %add24.i, %add18.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %shl21.i = shl i32 %add18.i, 16
  %or23.i = or i32 %shl21.i, %add24.i
  %add.i = shl i32 %call.i45, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_path = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_get_by_name, ptr %call3, i32 0, i32 1
  %11 = ptrtoint ptr %__data_loc_path to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %or.i, ptr %__data_loc_path, align 4
  %__data_loc_auth_domain = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_get_by_name, ptr %call3, i32 0, i32 2
  %12 = ptrtoint ptr %__data_loc_auth_domain to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %or23.i, ptr %__data_loc_auth_domain, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %13 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dentry.i, align 4
  %name = getelementptr inbounds %struct.dentry, ptr %14, i32 0, i32 4, i32 1
  %15 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %name, align 8
  %tobool7.not = icmp eq ptr %16, null
  %spec.select = select i1 %tobool7.not, ptr @.str.26, ptr %16
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #13
  %and14 = and i32 %add24.i, 65535
  %add.ptr15 = getelementptr i8, ptr %call3, i32 %and14
  %17 = ptrtoint ptr %ex_client.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ex_client.i, align 8
  %name16 = getelementptr inbounds %struct.auth_domain, ptr %18, i32 0, i32 2
  %19 = ptrtoint ptr %name16 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %name16, align 4
  %tobool17.not = icmp eq ptr %20, null
  %cond23 = select i1 %tobool17.not, ptr @.str.26, ptr %20
  %call24 = call ptr @strcpy(ptr noundef %add.ptr15, ptr noundef nonnull %cond23) #13
  %status25 = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_get_by_name, ptr %call3, i32 0, i32 3
  %21 = ptrtoint ptr %status25 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %status, ptr %status25, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_exp_get_by_name(ptr noundef %__data, ptr nocapture noundef readonly %key, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %dentry.i = getelementptr inbounds %struct.svc_export, ptr %key, i32 0, i32 3, i32 1
  %2 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dentry.i, align 4
  %name.i = getelementptr inbounds %struct.dentry, ptr %3, i32 0, i32 4, i32 1
  %4 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %name.i, align 8
  %tobool.not.i = icmp eq ptr %5, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.26, ptr %5
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #12
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 20
  %ex_client.i = getelementptr inbounds %struct.svc_export, ptr %key, i32 0, i32 1
  %6 = ptrtoint ptr %ex_client.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ex_client.i, align 8
  %name9.i = getelementptr inbounds %struct.auth_domain, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %name9.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %name9.i, align 4
  %tobool10.not.i = icmp eq ptr %9, null
  %cond16.i = select i1 %tobool10.not.i, ptr @.str.26, ptr %9
  %call17.i = tail call i32 @strlen(ptr noundef nonnull %cond16.i) #12
  %add18.i = add i32 %call17.i, 1
  %add20.i = add i32 %call.i, 21
  %shl21.i = shl i32 %add18.i, 16
  %or23.i = or i32 %shl21.i, %add20.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %10 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %perf_events, align 4
  %12 = ptrtoint ptr %11 to i32
  %13 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %16
  %17 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx, align 4
  %add = add i32 %18, %12
  %19 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %20 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %21, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %22 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %19, align 4
  %tobool.not.i68.not = icmp eq ptr %23, null
  br i1 %tobool.not.i68.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add24.i = add i32 %call.i, 32
  %add12 = add i32 %add24.i, %add18.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %24 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %__regs, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #9
  %27 = ptrtoint ptr %26 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  %28 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %arrayidx.i, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %30 = ptrtoint ptr %29 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  %31 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %arrayidx2.i, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  %33 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  %34 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_path = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_get_by_name, ptr %call13, i32 0, i32 1
  %35 = ptrtoint ptr %__data_loc_path to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %or.i, ptr %__data_loc_path, align 4
  %__data_loc_auth_domain = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_get_by_name, ptr %call13, i32 0, i32 2
  %36 = ptrtoint ptr %__data_loc_auth_domain to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %or23.i, ptr %__data_loc_auth_domain, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %37 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %dentry.i, align 4
  %name = getelementptr inbounds %struct.dentry, ptr %38, i32 0, i32 4, i32 1
  %39 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %name, align 8
  %tobool19.not = icmp eq ptr %40, null
  %spec.select = select i1 %tobool19.not, ptr @.str.26, ptr %40
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #13
  %and26 = and i32 %add20.i, 65535
  %add.ptr27 = getelementptr i8, ptr %call13, i32 %and26
  %41 = ptrtoint ptr %ex_client.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ex_client.i, align 8
  %name28 = getelementptr inbounds %struct.auth_domain, ptr %42, i32 0, i32 2
  %43 = ptrtoint ptr %name28 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %name28, align 4
  %tobool29.not = icmp eq ptr %44, null
  %cond35 = select i1 %tobool29.not, ptr @.str.26, ptr %44
  %call36 = call ptr @strcpy(ptr noundef %add.ptr27, ptr noundef nonnull %cond35) #13
  %status37 = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_get_by_name, ptr %call13, i32 0, i32 3
  %45 = ptrtoint ptr %status37 to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %status, ptr %status37, align 4
  %46 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %rctx, align 4
  %48 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %47, ptr noundef %__data, i64 noundef 1, ptr noundef %49, ptr noundef %19, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_export_update(ptr noundef %__data, ptr noundef %key) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %dentry.i = getelementptr inbounds %struct.svc_export, ptr %key, i32 0, i32 3, i32 1
  %3 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %dentry.i, align 4
  %name.i = getelementptr inbounds %struct.dentry, ptr %4, i32 0, i32 4, i32 1
  %5 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %name.i, align 8
  %tobool.not.i45 = icmp eq ptr %6, null
  %spec.select.i = select i1 %tobool.not.i45, ptr @.str.26, ptr %6
  %call.i46 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #12
  %ex_client.i = getelementptr inbounds %struct.svc_export, ptr %key, i32 0, i32 1
  %7 = ptrtoint ptr %ex_client.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ex_client.i, align 8
  %name9.i = getelementptr inbounds %struct.auth_domain, ptr %8, i32 0, i32 2
  %9 = ptrtoint ptr %name9.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %name9.i, align 4
  %tobool10.not.i = icmp eq ptr %10, null
  %cond16.i = select i1 %tobool10.not.i, ptr @.str.26, ptr %10
  %call17.i = tail call i32 @strlen(ptr noundef nonnull %cond16.i) #12
  %add18.i = add i32 %call17.i, 1
  %add24.i = add i32 %call.i46, 21
  %add = add i32 %add24.i, %add18.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %shl21.i = shl i32 %add18.i, 16
  %add20.i = add i32 %call.i46, 18
  %or23.i = or i32 %shl21.i, %add20.i
  %add.i = shl i32 %call.i46, 16
  %or.i = add i32 %add.i, 65553
  %__data_loc_path = getelementptr inbounds %struct.trace_event_raw_nfsd_export_update, ptr %call3, i32 0, i32 1
  %11 = ptrtoint ptr %__data_loc_path to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %or.i, ptr %__data_loc_path, align 4
  %__data_loc_auth_domain = getelementptr inbounds %struct.trace_event_raw_nfsd_export_update, ptr %call3, i32 0, i32 2
  %12 = ptrtoint ptr %__data_loc_auth_domain to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %or23.i, ptr %__data_loc_auth_domain, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 17
  %13 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dentry.i, align 4
  %name = getelementptr inbounds %struct.dentry, ptr %14, i32 0, i32 4, i32 1
  %15 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %name, align 8
  %tobool7.not = icmp eq ptr %16, null
  %spec.select = select i1 %tobool7.not, ptr @.str.26, ptr %16
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #13
  %and14 = and i32 %add20.i, 65535
  %add.ptr15 = getelementptr i8, ptr %call3, i32 %and14
  %17 = ptrtoint ptr %ex_client.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ex_client.i, align 8
  %name16 = getelementptr inbounds %struct.auth_domain, ptr %18, i32 0, i32 2
  %19 = ptrtoint ptr %name16 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %name16, align 4
  %tobool17.not = icmp eq ptr %20, null
  %cond23 = select i1 %tobool17.not, ptr @.str.26, ptr %20
  %call24 = call ptr @strcpy(ptr noundef %add.ptr15, ptr noundef nonnull %cond23) #13
  %flags = getelementptr inbounds %struct.cache_head, ptr %key, i32 0, i32 4
  %21 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %flags, align 4
  %cache = getelementptr inbounds %struct.trace_event_raw_nfsd_export_update, ptr %call3, i32 0, i32 3
  %23 = trunc i32 %22 to i8
  %24 = lshr i8 %23, 1
  %25 = and i8 %24, 1
  %26 = xor i8 %25, 1
  %27 = ptrtoint ptr %cache to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 %26, ptr %cache, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_export_update(ptr noundef %__data, ptr noundef %key) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %dentry.i = getelementptr inbounds %struct.svc_export, ptr %key, i32 0, i32 3, i32 1
  %2 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dentry.i, align 4
  %name.i = getelementptr inbounds %struct.dentry, ptr %3, i32 0, i32 4, i32 1
  %4 = ptrtoint ptr %name.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %name.i, align 8
  %tobool.not.i = icmp eq ptr %5, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.26, ptr %5
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #12
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 17
  %ex_client.i = getelementptr inbounds %struct.svc_export, ptr %key, i32 0, i32 1
  %6 = ptrtoint ptr %ex_client.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ex_client.i, align 8
  %name9.i = getelementptr inbounds %struct.auth_domain, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %name9.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %name9.i, align 4
  %tobool10.not.i = icmp eq ptr %9, null
  %cond16.i = select i1 %tobool10.not.i, ptr @.str.26, ptr %9
  %call17.i = tail call i32 @strlen(ptr noundef nonnull %cond16.i) #12
  %add18.i = add i32 %call17.i, 1
  %add20.i = add i32 %call.i, 18
  %shl21.i = shl i32 %add18.i, 16
  %or23.i = or i32 %shl21.i, %add20.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %10 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %perf_events, align 4
  %12 = ptrtoint ptr %11 to i32
  %13 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %16
  %17 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx, align 4
  %add = add i32 %18, %12
  %19 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %20 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %21, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %22 = ptrtoint ptr %19 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile ptr, ptr %19, align 4
  %tobool.not.i71.not = icmp eq ptr %23, null
  br i1 %tobool.not.i71.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add24.i = add i32 %call.i, 32
  %add12 = add i32 %add24.i, %add18.i
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %24 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %__regs, align 4
  %26 = call ptr @llvm.returnaddress(i32 0) #9
  %27 = ptrtoint ptr %26 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %25, i32 0, i32 15
  %28 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %27, ptr %arrayidx.i, align 4
  %29 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %30 = ptrtoint ptr %29 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %25, i32 0, i32 11
  %31 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %arrayidx2.i, align 4
  %32 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %25, i32 0, i32 13
  %33 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %25, i32 0, i32 16
  %34 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_path = getelementptr inbounds %struct.trace_event_raw_nfsd_export_update, ptr %call13, i32 0, i32 1
  %35 = ptrtoint ptr %__data_loc_path to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %or.i, ptr %__data_loc_path, align 4
  %__data_loc_auth_domain = getelementptr inbounds %struct.trace_event_raw_nfsd_export_update, ptr %call13, i32 0, i32 2
  %36 = ptrtoint ptr %__data_loc_auth_domain to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %or23.i, ptr %__data_loc_auth_domain, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 17
  %37 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %dentry.i, align 4
  %name = getelementptr inbounds %struct.dentry, ptr %38, i32 0, i32 4, i32 1
  %39 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %name, align 8
  %tobool19.not = icmp eq ptr %40, null
  %spec.select = select i1 %tobool19.not, ptr @.str.26, ptr %40
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #13
  %and26 = and i32 %add20.i, 65535
  %add.ptr27 = getelementptr i8, ptr %call13, i32 %and26
  %41 = ptrtoint ptr %ex_client.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %ex_client.i, align 8
  %name28 = getelementptr inbounds %struct.auth_domain, ptr %42, i32 0, i32 2
  %43 = ptrtoint ptr %name28 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %name28, align 4
  %tobool29.not = icmp eq ptr %44, null
  %cond35 = select i1 %tobool29.not, ptr @.str.26, ptr %44
  %call36 = call ptr @strcpy(ptr noundef %add.ptr27, ptr noundef nonnull %cond35) #13
  %flags = getelementptr inbounds %struct.cache_head, ptr %key, i32 0, i32 4
  %45 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %flags, align 4
  %cache = getelementptr inbounds %struct.trace_event_raw_nfsd_export_update, ptr %call13, i32 0, i32 3
  %47 = trunc i32 %46 to i8
  %48 = lshr i8 %47, 1
  %49 = and i8 %48, 1
  %50 = xor i8 %49, 1
  %51 = ptrtoint ptr %cache to i32
  call void @__asan_store1_noabort(i32 %51)
  store i8 %50, ptr %cache, align 4
  %52 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %rctx, align 4
  %54 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %53, ptr noundef %__data, i64 noundef 1, ptr noundef %55, ptr noundef %19, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_io_class(ptr noundef %__data, ptr nocapture noundef readonly %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %3 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_io_class, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %xid, align 8
  %6 = getelementptr inbounds %struct.knfsd_fh, ptr %fhp, i32 0, i32 1
  %7 = ptrtoint ptr %fhp to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %fhp, align 4
  %call.i22 = call i32 @crc32_le(i32 noundef -1, ptr noundef %6, i32 noundef %8) #14
  %neg.i = xor i32 %call.i22, -1
  %fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_io_class, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %fh_hash to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %neg.i, ptr %fh_hash, align 4
  %offset7 = getelementptr inbounds %struct.trace_event_raw_nfsd_io_class, ptr %call3, i32 0, i32 3
  %10 = ptrtoint ptr %offset7 to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %offset, ptr %offset7, align 8
  %len8 = getelementptr inbounds %struct.trace_event_raw_nfsd_io_class, ptr %call3, i32 0, i32 4
  %11 = ptrtoint ptr %len8 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %len, ptr %len8, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_io_class(ptr noundef %__data, ptr nocapture noundef readonly %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %27 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_io_class, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %xid, align 8
  %30 = getelementptr inbounds %struct.knfsd_fh, ptr %fhp, i32 0, i32 1
  %31 = ptrtoint ptr %fhp to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %fhp, align 4
  %call.i = call i32 @crc32_le(i32 noundef -1, ptr noundef %30, i32 noundef %32) #14
  %neg.i = xor i32 %call.i, -1
  %fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_io_class, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %fh_hash to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %neg.i, ptr %fh_hash, align 4
  %offset18 = getelementptr inbounds %struct.trace_event_raw_nfsd_io_class, ptr %call13, i32 0, i32 3
  %34 = ptrtoint ptr %offset18 to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 %offset, ptr %offset18, align 8
  %len19 = getelementptr inbounds %struct.trace_event_raw_nfsd_io_class, ptr %call13, i32 0, i32 4
  %35 = ptrtoint ptr %len19 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %len, ptr %len19, align 8
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_err_class(ptr noundef %__data, ptr nocapture noundef readonly %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %3 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_err_class, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %xid, align 8
  %6 = getelementptr inbounds %struct.knfsd_fh, ptr %fhp, i32 0, i32 1
  %7 = ptrtoint ptr %fhp to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %fhp, align 4
  %call.i22 = call i32 @crc32_le(i32 noundef -1, ptr noundef %6, i32 noundef %8) #14
  %neg.i = xor i32 %call.i22, -1
  %fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_err_class, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %fh_hash to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %neg.i, ptr %fh_hash, align 4
  %offset7 = getelementptr inbounds %struct.trace_event_raw_nfsd_err_class, ptr %call3, i32 0, i32 3
  %10 = ptrtoint ptr %offset7 to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %offset, ptr %offset7, align 8
  %status8 = getelementptr inbounds %struct.trace_event_raw_nfsd_err_class, ptr %call3, i32 0, i32 4
  %11 = ptrtoint ptr %status8 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %status, ptr %status8, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_err_class(ptr noundef %__data, ptr nocapture noundef readonly %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %27 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_err_class, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %xid, align 8
  %30 = getelementptr inbounds %struct.knfsd_fh, ptr %fhp, i32 0, i32 1
  %31 = ptrtoint ptr %fhp to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %fhp, align 4
  %call.i = call i32 @crc32_le(i32 noundef -1, ptr noundef %30, i32 noundef %32) #14
  %neg.i = xor i32 %call.i, -1
  %fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_err_class, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %fh_hash to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %neg.i, ptr %fh_hash, align 4
  %offset18 = getelementptr inbounds %struct.trace_event_raw_nfsd_err_class, ptr %call13, i32 0, i32 3
  %34 = ptrtoint ptr %offset18 to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 %offset, ptr %offset18, align 8
  %status19 = getelementptr inbounds %struct.trace_event_raw_nfsd_err_class, ptr %call13, i32 0, i32 4
  %35 = ptrtoint ptr %status19 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %status, ptr %status19, align 8
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_dirent(ptr noundef %__data, ptr noundef %fhp, i64 noundef %ino, ptr nocapture noundef readonly %name, i32 noundef %namlen) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %add = add i32 %namlen, 33
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %add.i = shl i32 %namlen, 16
  %or.i = add i32 %add.i, 65564
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_nfsd_dirent, ptr %call3, i32 0, i32 3
  %3 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_name, align 8
  %tobool7.not = icmp eq ptr %fhp, null
  br i1 %tobool7.not, label %if.end5.cond.end_crit_edge, label %cond.true

if.end5.cond.end_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  br label %cond.end

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  %4 = getelementptr inbounds %struct.knfsd_fh, ptr %fhp, i32 0, i32 1
  %5 = ptrtoint ptr %fhp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %fhp, align 4
  %call.i32 = call i32 @crc32_le(i32 noundef -1, ptr noundef %4, i32 noundef %6) #14
  %neg.i = xor i32 %call.i32, -1
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end5.cond.end_crit_edge
  %cond = phi i32 [ %neg.i, %cond.true ], [ 0, %if.end5.cond.end_crit_edge ]
  %fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_dirent, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %fh_hash to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %cond, ptr %fh_hash, align 8
  %ino9 = getelementptr inbounds %struct.trace_event_raw_nfsd_dirent, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %ino9 to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %ino, ptr %ino9, align 8
  %add.ptr = getelementptr i8, ptr %call3, i32 28
  %9 = call ptr @memcpy(ptr %add.ptr, ptr %name, i32 %namlen)
  %10 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %__data_loc_name, align 8
  %and12 = and i32 %11, 65535
  %add.ptr13 = getelementptr i8, ptr %call3, i32 %and12
  %arrayidx = getelementptr i8, ptr %add.ptr13, i32 %namlen
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 0, ptr %arrayidx, align 1
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_dirent(ptr noundef %__data, ptr noundef %fhp, i64 noundef %ino, ptr nocapture noundef readonly %name, i32 noundef %namlen) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %add.i = shl i32 %namlen, 16
  %or.i = add i32 %add.i, 65564
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %namlen, 44
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_nfsd_dirent, ptr %call13, i32 0, i32 3
  %27 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_name, align 8
  %tobool18.not = icmp eq ptr %fhp, null
  br i1 %tobool18.not, label %if.end16.cond.end_crit_edge, label %cond.true

if.end16.cond.end_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  br label %cond.end

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  %28 = getelementptr inbounds %struct.knfsd_fh, ptr %fhp, i32 0, i32 1
  %29 = ptrtoint ptr %fhp to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %fhp, align 4
  %call.i = call i32 @crc32_le(i32 noundef -1, ptr noundef %28, i32 noundef %30) #14
  %neg.i = xor i32 %call.i, -1
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end16.cond.end_crit_edge
  %cond = phi i32 [ %neg.i, %cond.true ], [ 0, %if.end16.cond.end_crit_edge ]
  %fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_dirent, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %fh_hash to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %cond, ptr %fh_hash, align 8
  %ino20 = getelementptr inbounds %struct.trace_event_raw_nfsd_dirent, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %ino20 to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %ino, ptr %ino20, align 8
  %add.ptr = getelementptr i8, ptr %call13, i32 28
  %33 = call ptr @memcpy(ptr %add.ptr, ptr %name, i32 %namlen)
  %34 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %__data_loc_name, align 8
  %and25 = and i32 %35, 65535
  %add.ptr26 = getelementptr i8, ptr %call13, i32 %and25
  %arrayidx27 = getelementptr i8, ptr %add.ptr26, i32 %namlen
  %36 = ptrtoint ptr %arrayidx27 to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 0, ptr %arrayidx27, align 1
  %37 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rctx, align 4
  %39 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %38, ptr noundef %__data, i64 noundef 1, ptr noundef %40, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_copy_err_class(ptr noundef %__data, ptr nocapture noundef readonly %rqstp, ptr noundef %src_fhp, i64 noundef %src_offset, ptr noundef %dst_fhp, i64 noundef %dst_offset, i64 noundef %count, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 56) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %3 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %xid, align 8
  %6 = getelementptr inbounds %struct.knfsd_fh, ptr %src_fhp, i32 0, i32 1
  %7 = ptrtoint ptr %src_fhp to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %src_fhp, align 4
  %call.i32 = call i32 @crc32_le(i32 noundef -1, ptr noundef %6, i32 noundef %8) #14
  %neg.i = xor i32 %call.i32, -1
  %src_fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %src_fh_hash to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %neg.i, ptr %src_fh_hash, align 4
  %src_offset7 = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %call3, i32 0, i32 3
  %10 = ptrtoint ptr %src_offset7 to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %src_offset, ptr %src_offset7, align 8
  %11 = getelementptr inbounds %struct.knfsd_fh, ptr %dst_fhp, i32 0, i32 1
  %12 = ptrtoint ptr %dst_fhp to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %dst_fhp, align 4
  %call.i33 = call i32 @crc32_le(i32 noundef -1, ptr noundef %11, i32 noundef %13) #14
  %neg.i34 = xor i32 %call.i33, -1
  %dst_fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %dst_fh_hash to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %neg.i34, ptr %dst_fh_hash, align 8
  %dst_offset10 = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %call3, i32 0, i32 5
  %15 = ptrtoint ptr %dst_offset10 to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %dst_offset, ptr %dst_offset10, align 8
  %count11 = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %call3, i32 0, i32 6
  %16 = ptrtoint ptr %count11 to i32
  call void @__asan_store8_noabort(i32 %16)
  store i64 %count, ptr %count11, align 8
  %status12 = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %call3, i32 0, i32 7
  %17 = ptrtoint ptr %status12 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %status, ptr %status12, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_copy_err_class(ptr noundef %__data, ptr nocapture noundef readonly %rqstp, ptr noundef %src_fhp, i64 noundef %src_offset, ptr noundef %dst_fhp, i64 noundef %dst_offset, i64 noundef %count, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %27 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %xid, align 8
  %30 = getelementptr inbounds %struct.knfsd_fh, ptr %src_fhp, i32 0, i32 1
  %31 = ptrtoint ptr %src_fhp to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %src_fhp, align 4
  %call.i = call i32 @crc32_le(i32 noundef -1, ptr noundef %30, i32 noundef %32) #14
  %neg.i = xor i32 %call.i, -1
  %src_fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %src_fh_hash to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %neg.i, ptr %src_fh_hash, align 4
  %src_offset18 = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %call13, i32 0, i32 3
  %34 = ptrtoint ptr %src_offset18 to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 %src_offset, ptr %src_offset18, align 8
  %35 = getelementptr inbounds %struct.knfsd_fh, ptr %dst_fhp, i32 0, i32 1
  %36 = ptrtoint ptr %dst_fhp to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %dst_fhp, align 4
  %call.i55 = call i32 @crc32_le(i32 noundef -1, ptr noundef %35, i32 noundef %37) #14
  %neg.i56 = xor i32 %call.i55, -1
  %dst_fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %dst_fh_hash to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %neg.i56, ptr %dst_fh_hash, align 8
  %dst_offset21 = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %call13, i32 0, i32 5
  %39 = ptrtoint ptr %dst_offset21 to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %dst_offset, ptr %dst_offset21, align 8
  %count22 = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %call13, i32 0, i32 6
  %40 = ptrtoint ptr %count22 to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 %count, ptr %count22, align 8
  %status23 = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %call13, i32 0, i32 7
  %41 = ptrtoint ptr %status23 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %status, ptr %status23, align 8
  %42 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %rctx, align 4
  %44 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 60, i32 noundef %43, ptr noundef %__data, i64 noundef 1, ptr noundef %45, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_stateid_class(ptr noundef %__data, ptr nocapture noundef readonly %stp) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %si_opaque = getelementptr inbounds %struct.stateid_t, ptr %stp, i32 0, i32 1
  %3 = ptrtoint ptr %si_opaque to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %si_opaque, align 4
  %cl_boot6 = getelementptr inbounds %struct.trace_event_raw_nfsd_stateid_class, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cl_boot6 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cl_boot6, align 4
  %cl_id = getelementptr inbounds %struct.stateid_t, ptr %stp, i32 0, i32 1, i32 0, i32 1
  %6 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cl_id, align 4
  %cl_id9 = getelementptr inbounds %struct.trace_event_raw_nfsd_stateid_class, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %cl_id9 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %cl_id9, align 4
  %so_id = getelementptr inbounds %struct.stateid_t, ptr %stp, i32 0, i32 1, i32 1
  %9 = ptrtoint ptr %so_id to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %so_id, align 4
  %si_id = getelementptr inbounds %struct.trace_event_raw_nfsd_stateid_class, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %si_id to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %si_id, align 4
  %12 = ptrtoint ptr %stp to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %stp, align 4
  %si_generation11 = getelementptr inbounds %struct.trace_event_raw_nfsd_stateid_class, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %si_generation11 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %si_generation11, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_stateid_class(ptr noundef %__data, ptr nocapture noundef readonly %stp) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %si_opaque = getelementptr inbounds %struct.stateid_t, ptr %stp, i32 0, i32 1
  %27 = ptrtoint ptr %si_opaque to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %si_opaque, align 4
  %cl_boot17 = getelementptr inbounds %struct.trace_event_raw_nfsd_stateid_class, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cl_boot17 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cl_boot17, align 4
  %cl_id = getelementptr inbounds %struct.stateid_t, ptr %stp, i32 0, i32 1, i32 0, i32 1
  %30 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cl_id, align 4
  %cl_id20 = getelementptr inbounds %struct.trace_event_raw_nfsd_stateid_class, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %cl_id20 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %cl_id20, align 4
  %so_id = getelementptr inbounds %struct.stateid_t, ptr %stp, i32 0, i32 1, i32 1
  %33 = ptrtoint ptr %so_id to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %so_id, align 4
  %si_id = getelementptr inbounds %struct.trace_event_raw_nfsd_stateid_class, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %si_id to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %si_id, align 4
  %36 = ptrtoint ptr %stp to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %stp, align 4
  %si_generation22 = getelementptr inbounds %struct.trace_event_raw_nfsd_stateid_class, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %si_generation22 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %si_generation22, align 4
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_stateseqid_class(ptr noundef %__data, i32 noundef %seqid, ptr nocapture noundef readonly %stp) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %seqid6 = getelementptr inbounds %struct.trace_event_raw_nfsd_stateseqid_class, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %seqid6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %seqid, ptr %seqid6, align 4
  %si_opaque = getelementptr inbounds %struct.stateid_t, ptr %stp, i32 0, i32 1
  %4 = ptrtoint ptr %si_opaque to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %si_opaque, align 4
  %cl_boot7 = getelementptr inbounds %struct.trace_event_raw_nfsd_stateseqid_class, ptr %call3, i32 0, i32 2
  %6 = ptrtoint ptr %cl_boot7 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %cl_boot7, align 4
  %cl_id = getelementptr inbounds %struct.stateid_t, ptr %stp, i32 0, i32 1, i32 0, i32 1
  %7 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cl_id, align 4
  %cl_id10 = getelementptr inbounds %struct.trace_event_raw_nfsd_stateseqid_class, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %cl_id10 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %cl_id10, align 4
  %so_id = getelementptr inbounds %struct.stateid_t, ptr %stp, i32 0, i32 1, i32 1
  %10 = ptrtoint ptr %so_id to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %so_id, align 4
  %si_id = getelementptr inbounds %struct.trace_event_raw_nfsd_stateseqid_class, ptr %call3, i32 0, i32 4
  %12 = ptrtoint ptr %si_id to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %11, ptr %si_id, align 4
  %13 = ptrtoint ptr %stp to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %stp, align 4
  %si_generation12 = getelementptr inbounds %struct.trace_event_raw_nfsd_stateseqid_class, ptr %call3, i32 0, i32 5
  %15 = ptrtoint ptr %si_generation12 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %si_generation12, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_stateseqid_class(ptr noundef %__data, i32 noundef %seqid, ptr nocapture noundef readonly %stp) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %seqid17 = getelementptr inbounds %struct.trace_event_raw_nfsd_stateseqid_class, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %seqid17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %seqid, ptr %seqid17, align 4
  %si_opaque = getelementptr inbounds %struct.stateid_t, ptr %stp, i32 0, i32 1
  %28 = ptrtoint ptr %si_opaque to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %si_opaque, align 4
  %cl_boot18 = getelementptr inbounds %struct.trace_event_raw_nfsd_stateseqid_class, ptr %call13, i32 0, i32 2
  %30 = ptrtoint ptr %cl_boot18 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %cl_boot18, align 4
  %cl_id = getelementptr inbounds %struct.stateid_t, ptr %stp, i32 0, i32 1, i32 0, i32 1
  %31 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %cl_id, align 4
  %cl_id21 = getelementptr inbounds %struct.trace_event_raw_nfsd_stateseqid_class, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %cl_id21 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %cl_id21, align 4
  %so_id = getelementptr inbounds %struct.stateid_t, ptr %stp, i32 0, i32 1, i32 1
  %34 = ptrtoint ptr %so_id to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %so_id, align 4
  %si_id = getelementptr inbounds %struct.trace_event_raw_nfsd_stateseqid_class, ptr %call13, i32 0, i32 4
  %36 = ptrtoint ptr %si_id to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %35, ptr %si_id, align 4
  %37 = ptrtoint ptr %stp to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %stp, align 4
  %si_generation23 = getelementptr inbounds %struct.trace_event_raw_nfsd_stateseqid_class, ptr %call13, i32 0, i32 5
  %39 = ptrtoint ptr %si_generation23 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %si_generation23, align 4
  %40 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %rctx, align 4
  %42 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %41, ptr noundef %__data, i64 noundef 1, ptr noundef %43, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_clientid_class(ptr noundef %__data, ptr nocapture noundef readonly %clid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %3 = ptrtoint ptr %clid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %clid, align 4
  %cl_boot6 = getelementptr inbounds %struct.trace_event_raw_nfsd_clientid_class, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cl_boot6 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cl_boot6, align 4
  %cl_id = getelementptr inbounds %struct.clientid_t, ptr %clid, i32 0, i32 1
  %6 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cl_id, align 4
  %cl_id7 = getelementptr inbounds %struct.trace_event_raw_nfsd_clientid_class, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %cl_id7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %cl_id7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_clientid_class(ptr noundef %__data, ptr nocapture noundef readonly %clid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %clid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %clid, align 4
  %cl_boot17 = getelementptr inbounds %struct.trace_event_raw_nfsd_clientid_class, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cl_boot17 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cl_boot17, align 4
  %cl_id = getelementptr inbounds %struct.clientid_t, ptr %clid, i32 0, i32 1
  %30 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cl_id, align 4
  %cl_id18 = getelementptr inbounds %struct.trace_event_raw_nfsd_clientid_class, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %cl_id18 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %cl_id18, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_net_class(ptr noundef %__data, ptr nocapture noundef readonly %nn) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %boot_time = getelementptr inbounds %struct.nfsd_net, ptr %nn, i32 0, i32 7
  %3 = ptrtoint ptr %boot_time to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %boot_time, align 8
  %boot_time6 = getelementptr inbounds %struct.trace_event_raw_nfsd_net_class, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %boot_time6 to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %4, ptr %boot_time6, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_net_class(ptr noundef %__data, ptr nocapture noundef readonly %nn) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %boot_time = getelementptr inbounds %struct.nfsd_net, ptr %nn, i32 0, i32 7
  %27 = ptrtoint ptr %boot_time to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %boot_time, align 8
  %boot_time17 = getelementptr inbounds %struct.trace_event_raw_nfsd_net_class, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %boot_time17 to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %boot_time17, align 8
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_writeverf_reset(ptr noundef %__data, ptr nocapture noundef readonly %nn, ptr nocapture noundef readonly %rqstp, i32 noundef %error) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %boot_time = getelementptr inbounds %struct.nfsd_net, ptr %nn, i32 0, i32 7
  %3 = ptrtoint ptr %boot_time to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %boot_time, align 8
  %boot_time6 = getelementptr inbounds %struct.trace_event_raw_nfsd_writeverf_reset, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %boot_time6 to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %4, ptr %boot_time6, align 8
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %6 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_writeverf_reset, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %xid, align 8
  %error7 = getelementptr inbounds %struct.trace_event_raw_nfsd_writeverf_reset, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %error7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %error, ptr %error7, align 4
  %verifier = getelementptr inbounds %struct.trace_event_raw_nfsd_writeverf_reset, ptr %call3, i32 0, i32 4
  %writeverf = getelementptr inbounds %struct.nfsd_net, ptr %nn, i32 0, i32 34
  %10 = ptrtoint ptr %writeverf to i32
  call void @__asan_loadN_noabort(i32 %10, i32 8)
  %11 = load i64, ptr %writeverf, align 4
  %12 = ptrtoint ptr %verifier to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %verifier, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_writeverf_reset(ptr noundef %__data, ptr nocapture noundef readonly %nn, ptr nocapture noundef readonly %rqstp, i32 noundef %error) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %boot_time = getelementptr inbounds %struct.nfsd_net, ptr %nn, i32 0, i32 7
  %27 = ptrtoint ptr %boot_time to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %boot_time, align 8
  %boot_time17 = getelementptr inbounds %struct.trace_event_raw_nfsd_writeverf_reset, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %boot_time17 to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %boot_time17, align 8
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %30 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_writeverf_reset, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %xid, align 8
  %error18 = getelementptr inbounds %struct.trace_event_raw_nfsd_writeverf_reset, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %error18 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %error, ptr %error18, align 4
  %verifier = getelementptr inbounds %struct.trace_event_raw_nfsd_writeverf_reset, ptr %call13, i32 0, i32 4
  %writeverf = getelementptr inbounds %struct.nfsd_net, ptr %nn, i32 0, i32 34
  %34 = ptrtoint ptr %writeverf to i32
  call void @__asan_loadN_noabort(i32 %34, i32 8)
  %35 = load i64, ptr %writeverf, align 4
  %36 = ptrtoint ptr %verifier to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %verifier, align 8
  %37 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rctx, align 4
  %39 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %38, ptr noundef %__data, i64 noundef 1, ptr noundef %40, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_clid_cred_mismatch(ptr noundef %__data, ptr nocapture noundef readonly %clp, ptr nocapture noundef readonly %rqstp) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 52) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %cl_clientid = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15
  %3 = ptrtoint ptr %cl_clientid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cl_clientid, align 4
  %cl_boot6 = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_cred_mismatch, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cl_boot6 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cl_boot6, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15, i32 1
  %6 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cl_id, align 4
  %cl_id8 = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_cred_mismatch, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %cl_id8 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %cl_id8, align 4
  %cr_flavor = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 14, i32 3
  %9 = ptrtoint ptr %cr_flavor to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cr_flavor, align 4
  %cl_flavor = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_cred_mismatch, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %cl_flavor to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %cl_flavor, align 4
  %cr_flavor9 = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 11, i32 3
  %12 = ptrtoint ptr %cr_flavor9 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %cr_flavor9, align 4
  %new_flavor = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_cred_mismatch, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %new_flavor to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %new_flavor, align 4
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_cred_mismatch, ptr %call3, i32 0, i32 5
  %rq_xprt = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 2
  %15 = ptrtoint ptr %rq_xprt to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %rq_xprt, align 8
  %xpt_remote = getelementptr inbounds %struct.svc_xprt, ptr %16, i32 0, i32 15
  %17 = call ptr @memcpy(ptr %addr, ptr %xpt_remote, i32 28)
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_clid_cred_mismatch(ptr noundef %__data, ptr nocapture noundef readonly %clp, ptr nocapture noundef readonly %rqstp) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %cl_clientid = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15
  %27 = ptrtoint ptr %cl_clientid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cl_clientid, align 4
  %cl_boot17 = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_cred_mismatch, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cl_boot17 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cl_boot17, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15, i32 1
  %30 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cl_id, align 4
  %cl_id19 = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_cred_mismatch, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %cl_id19 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %cl_id19, align 4
  %cr_flavor = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 14, i32 3
  %33 = ptrtoint ptr %cr_flavor to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %cr_flavor, align 4
  %cl_flavor = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_cred_mismatch, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %cl_flavor to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %cl_flavor, align 4
  %cr_flavor20 = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 11, i32 3
  %36 = ptrtoint ptr %cr_flavor20 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %cr_flavor20, align 4
  %new_flavor = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_cred_mismatch, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %new_flavor to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %new_flavor, align 4
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_cred_mismatch, ptr %call13, i32 0, i32 5
  %rq_xprt = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 2
  %39 = ptrtoint ptr %rq_xprt to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %rq_xprt, align 8
  %xpt_remote = getelementptr inbounds %struct.svc_xprt, ptr %40, i32 0, i32 15
  %41 = call ptr @memcpy(ptr %addr, ptr %xpt_remote, i32 28)
  %42 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %rctx, align 4
  %44 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %43, ptr noundef %__data, i64 noundef 1, ptr noundef %45, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_clid_verf_mismatch(ptr noundef %__data, ptr nocapture noundef readonly %clp, ptr nocapture noundef readonly %rqstp, ptr nocapture noundef readonly %verf) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 60) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %cl_clientid = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15
  %3 = ptrtoint ptr %cl_clientid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cl_clientid, align 4
  %cl_boot6 = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_verf_mismatch, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cl_boot6 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cl_boot6, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15, i32 1
  %6 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cl_id, align 4
  %cl_id8 = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_verf_mismatch, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %cl_id8 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %cl_id8, align 4
  %cl_verifier = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_verf_mismatch, ptr %call3, i32 0, i32 3
  %cl_verifier9 = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 10
  %9 = ptrtoint ptr %cl_verifier9 to i32
  call void @__asan_loadN_noabort(i32 %9, i32 8)
  %10 = load i64, ptr %cl_verifier9, align 1
  %11 = ptrtoint ptr %cl_verifier to i32
  call void @__asan_storeN_noabort(i32 %11, i32 8)
  store i64 %10, ptr %cl_verifier, align 4
  %new_verifier = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_verf_mismatch, ptr %call3, i32 0, i32 4
  %12 = ptrtoint ptr %verf to i32
  call void @__asan_loadN_noabort(i32 %12, i32 8)
  %13 = load i64, ptr %verf, align 1
  %14 = ptrtoint ptr %new_verifier to i32
  call void @__asan_storeN_noabort(i32 %14, i32 8)
  store i64 %13, ptr %new_verifier, align 4
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_verf_mismatch, ptr %call3, i32 0, i32 5
  %rq_xprt = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 2
  %15 = ptrtoint ptr %rq_xprt to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %rq_xprt, align 8
  %xpt_remote = getelementptr inbounds %struct.svc_xprt, ptr %16, i32 0, i32 15
  %17 = call ptr @memcpy(ptr %addr, ptr %xpt_remote, i32 28)
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_clid_verf_mismatch(ptr noundef %__data, ptr nocapture noundef readonly %clp, ptr nocapture noundef readonly %rqstp, ptr nocapture noundef readonly %verf) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %cl_clientid = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15
  %27 = ptrtoint ptr %cl_clientid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cl_clientid, align 4
  %cl_boot17 = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_verf_mismatch, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cl_boot17 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cl_boot17, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15, i32 1
  %30 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cl_id, align 4
  %cl_id19 = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_verf_mismatch, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %cl_id19 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %cl_id19, align 4
  %cl_verifier = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_verf_mismatch, ptr %call13, i32 0, i32 3
  %cl_verifier20 = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 10
  %33 = ptrtoint ptr %cl_verifier20 to i32
  call void @__asan_loadN_noabort(i32 %33, i32 8)
  %34 = load i64, ptr %cl_verifier20, align 1
  %35 = ptrtoint ptr %cl_verifier to i32
  call void @__asan_storeN_noabort(i32 %35, i32 8)
  store i64 %34, ptr %cl_verifier, align 4
  %new_verifier = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_verf_mismatch, ptr %call13, i32 0, i32 4
  %36 = ptrtoint ptr %verf to i32
  call void @__asan_loadN_noabort(i32 %36, i32 8)
  %37 = load i64, ptr %verf, align 1
  %38 = ptrtoint ptr %new_verifier to i32
  call void @__asan_storeN_noabort(i32 %38, i32 8)
  store i64 %37, ptr %new_verifier, align 4
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_verf_mismatch, ptr %call13, i32 0, i32 5
  %rq_xprt = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 2
  %39 = ptrtoint ptr %rq_xprt to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %rq_xprt, align 8
  %xpt_remote = getelementptr inbounds %struct.svc_xprt, ptr %40, i32 0, i32 15
  %41 = call ptr @memcpy(ptr %addr, ptr %xpt_remote, i32 28)
  %42 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %rctx, align 4
  %44 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 60, i32 noundef %43, ptr noundef %__data, i64 noundef 1, ptr noundef %45, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_clid_class(ptr noundef %__data, ptr nocapture noundef readonly %clp) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %cl_name.i = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 9
  %3 = ptrtoint ptr %cl_name.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cl_name.i, align 4
  %add = add i32 %4, 61
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %add.i = shl i32 %4, 16
  %or.i = add i32 %add.i, 65596
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_class, ptr %call3, i32 0, i32 6
  %5 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %cl_clientid = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15
  %6 = ptrtoint ptr %cl_clientid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cl_clientid, align 4
  %cl_boot6 = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_class, ptr %call3, i32 0, i32 1
  %8 = ptrtoint ptr %cl_boot6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %cl_boot6, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15, i32 1
  %9 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cl_id, align 4
  %cl_id8 = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_class, ptr %call3, i32 0, i32 2
  %11 = ptrtoint ptr %cl_id8 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %cl_id8, align 4
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_class, ptr %call3, i32 0, i32 3
  %cl_addr = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 12
  %12 = call ptr @memcpy(ptr %addr, ptr %cl_addr, i32 28)
  %cr_flavor = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 14, i32 3
  %13 = ptrtoint ptr %cr_flavor to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cr_flavor, align 4
  %flavor = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_class, ptr %call3, i32 0, i32 4
  %15 = ptrtoint ptr %flavor to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %flavor, align 4
  %verifier = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_class, ptr %call3, i32 0, i32 5
  %cl_verifier = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 10
  %16 = ptrtoint ptr %cl_verifier to i32
  call void @__asan_loadN_noabort(i32 %16, i32 8)
  %17 = load i64, ptr %cl_verifier, align 1
  %18 = ptrtoint ptr %verifier to i32
  call void @__asan_storeN_noabort(i32 %18, i32 8)
  store i64 %17, ptr %verifier, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 60
  %data = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 9, i32 1
  %19 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %data, align 4
  %21 = ptrtoint ptr %cl_name.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %cl_name.i, align 4
  %23 = call ptr @memcpy(ptr %add.ptr, ptr %20, i32 %22)
  %add.ptr14 = getelementptr i8, ptr %call3, i32 60
  %24 = load i32, ptr %cl_name.i, align 4
  %arrayidx = getelementptr i8, ptr %add.ptr14, i32 %24
  %25 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %25)
  store i8 0, ptr %arrayidx, align 1
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_clid_class(ptr noundef %__data, ptr nocapture noundef readonly %clp) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %cl_name.i = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 9
  %2 = ptrtoint ptr %cl_name.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cl_name.i, align 4
  %add.i = shl i32 %3, 16
  %or.i = add i32 %add.i, 65596
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %4 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_events, align 4
  %6 = ptrtoint ptr %5 to i32
  %7 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx, align 4
  %add = add i32 %12, %6
  %13 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %14 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %15, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %16 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %13, align 4
  %tobool.not.i.not = icmp eq ptr %17, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %3, 72
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %18 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %__regs, align 4
  %20 = call ptr @llvm.returnaddress(i32 0) #9
  %21 = ptrtoint ptr %20 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %19, i32 0, i32 15
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %21, ptr %arrayidx.i, align 4
  %23 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %24 = ptrtoint ptr %23 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %19, i32 0, i32 11
  %25 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx2.i, align 4
  %26 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %19, i32 0, i32 13
  %27 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %19, i32 0, i32 16
  %28 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_class, ptr %call13, i32 0, i32 6
  %29 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %cl_clientid = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15
  %30 = ptrtoint ptr %cl_clientid to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cl_clientid, align 4
  %cl_boot17 = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_class, ptr %call13, i32 0, i32 1
  %32 = ptrtoint ptr %cl_boot17 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %cl_boot17, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15, i32 1
  %33 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %cl_id, align 4
  %cl_id19 = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_class, ptr %call13, i32 0, i32 2
  %35 = ptrtoint ptr %cl_id19 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %cl_id19, align 4
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_class, ptr %call13, i32 0, i32 3
  %cl_addr = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 12
  %36 = call ptr @memcpy(ptr %addr, ptr %cl_addr, i32 28)
  %cr_flavor = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 14, i32 3
  %37 = ptrtoint ptr %cr_flavor to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %cr_flavor, align 4
  %flavor = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_class, ptr %call13, i32 0, i32 4
  %39 = ptrtoint ptr %flavor to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %flavor, align 4
  %verifier = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_class, ptr %call13, i32 0, i32 5
  %cl_verifier = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 10
  %40 = ptrtoint ptr %cl_verifier to i32
  call void @__asan_loadN_noabort(i32 %40, i32 8)
  %41 = load i64, ptr %cl_verifier, align 1
  %42 = ptrtoint ptr %verifier to i32
  call void @__asan_storeN_noabort(i32 %42, i32 8)
  store i64 %41, ptr %verifier, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 60
  %data = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 9, i32 1
  %43 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %data, align 4
  %45 = ptrtoint ptr %cl_name.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %cl_name.i, align 4
  %47 = call ptr @memcpy(ptr %add.ptr, ptr %44, i32 %46)
  %add.ptr27 = getelementptr i8, ptr %call13, i32 60
  %48 = load i32, ptr %cl_name.i, align 4
  %arrayidx30 = getelementptr i8, ptr %add.ptr27, i32 %48
  %49 = ptrtoint ptr %arrayidx30 to i32
  call void @__asan_store1_noabort(i32 %49)
  store i8 0, ptr %arrayidx30, align 1
  %50 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %rctx, align 4
  %52 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %51, ptr noundef %__data, i64 noundef 1, ptr noundef %53, ptr noundef %13, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_file_class(ptr noundef %__data, ptr noundef %nf) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %nf_hashval = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 8
  %3 = ptrtoint ptr %nf_hashval to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %nf_hashval, align 4
  %nf_hashval6 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_class, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %nf_hashval6 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %nf_hashval6, align 4
  %nf_inode = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 7
  %6 = ptrtoint ptr %nf_inode to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %nf_inode, align 4
  %nf_inode7 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_class, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %nf_inode7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %7, ptr %nf_inode7, align 4
  %nf_ref = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 9
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %nf_ref, i32 noundef 4) #9
  %9 = ptrtoint ptr %nf_ref to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %nf_ref, align 4
  %nf_ref9 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_class, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %nf_ref9 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %nf_ref9, align 4
  %nf_flags = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 6
  %12 = ptrtoint ptr %nf_flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %nf_flags, align 4
  %nf_flags10 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_class, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %nf_flags10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %nf_flags10, align 4
  %nf_may = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 10
  %15 = ptrtoint ptr %nf_may to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %nf_may, align 4
  %nf_may11 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_class, ptr %call3, i32 0, i32 5
  %17 = ptrtoint ptr %nf_may11 to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %16, ptr %nf_may11, align 4
  %nf_file = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 3
  %18 = ptrtoint ptr %nf_file to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %nf_file, align 4
  %nf_file12 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_class, ptr %call3, i32 0, i32 6
  %20 = ptrtoint ptr %nf_file12 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %19, ptr %nf_file12, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_file_class(ptr noundef %__data, ptr noundef %nf) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %nf_hashval = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 8
  %27 = ptrtoint ptr %nf_hashval to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %nf_hashval, align 4
  %nf_hashval17 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_class, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %nf_hashval17 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %nf_hashval17, align 4
  %nf_inode = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 7
  %30 = ptrtoint ptr %nf_inode to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %nf_inode, align 4
  %nf_inode18 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_class, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %nf_inode18 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %31, ptr %nf_inode18, align 4
  %nf_ref = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 9
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %nf_ref, i32 noundef 4) #9
  %33 = ptrtoint ptr %nf_ref to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %nf_ref, align 4
  %nf_ref20 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_class, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %nf_ref20 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %nf_ref20, align 4
  %nf_flags = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 6
  %36 = ptrtoint ptr %nf_flags to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %nf_flags, align 4
  %nf_flags21 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_class, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %nf_flags21 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %nf_flags21, align 4
  %nf_may = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 10
  %39 = ptrtoint ptr %nf_may to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %nf_may, align 4
  %nf_may22 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_class, ptr %call13, i32 0, i32 5
  %41 = ptrtoint ptr %nf_may22 to i32
  call void @__asan_store1_noabort(i32 %41)
  store i8 %40, ptr %nf_may22, align 4
  %nf_file = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 3
  %42 = ptrtoint ptr %nf_file to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %nf_file, align 4
  %nf_file23 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_class, ptr %call13, i32 0, i32 6
  %44 = ptrtoint ptr %nf_file23 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %43, ptr %nf_file23, align 4
  %45 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rctx, align 4
  %47 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %46, ptr noundef %__data, i64 noundef 1, ptr noundef %48, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_file_acquire(ptr noundef %__data, ptr nocapture noundef readonly %rqstp, i32 noundef %hash, ptr noundef %inode, i32 noundef %may_flags, ptr noundef %nf, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 44) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %3 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %xid, align 4
  %hash6 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call3, i32 0, i32 2
  %6 = ptrtoint ptr %hash6 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %hash, ptr %hash6, align 4
  %inode7 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call3, i32 0, i32 3
  %7 = ptrtoint ptr %inode7 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %inode, ptr %inode7, align 4
  %may_flags8 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call3, i32 0, i32 4
  %8 = ptrtoint ptr %may_flags8 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %may_flags, ptr %may_flags8, align 4
  %tobool9.not = icmp eq ptr %nf, null
  br i1 %tobool9.not, label %cond.end15.critedge, label %cond.true

cond.true:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  %nf_ref = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 9
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %nf_ref, i32 noundef 4) #9
  %9 = ptrtoint ptr %nf_ref to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %nf_ref, align 4
  %nf_ref11.c58 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call3, i32 0, i32 5
  %11 = ptrtoint ptr %nf_ref11.c58 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %nf_ref11.c58, align 4
  %nf_flags = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 6
  %12 = ptrtoint ptr %nf_flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %nf_flags, align 4
  %nf_flags17.c59 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call3, i32 0, i32 6
  %14 = ptrtoint ptr %nf_flags17.c59 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %nf_flags17.c59, align 4
  %nf_may = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 10
  %15 = ptrtoint ptr %nf_may to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %nf_may, align 4
  %conv = zext i8 %16 to i32
  %nf_may23.c60 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call3, i32 0, i32 7
  %17 = ptrtoint ptr %nf_may23.c60 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %conv, ptr %nf_may23.c60, align 4
  %nf_file = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 3
  %18 = ptrtoint ptr %nf_file to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %nf_file, align 4
  br label %cond.end27

cond.end15.critedge:                              ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  %nf_ref11.c = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call3, i32 0, i32 5
  %20 = ptrtoint ptr %nf_ref11.c to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 0, ptr %nf_ref11.c, align 4
  %nf_flags17.c = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call3, i32 0, i32 6
  %21 = ptrtoint ptr %nf_flags17.c to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 0, ptr %nf_flags17.c, align 4
  %nf_may23.c = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call3, i32 0, i32 7
  %22 = ptrtoint ptr %nf_may23.c to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 0, ptr %nf_may23.c, align 4
  br label %cond.end27

cond.end27:                                       ; preds = %cond.end15.critedge, %cond.true
  %cond28 = phi ptr [ %19, %cond.true ], [ null, %cond.end15.critedge ]
  %nf_file29 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call3, i32 0, i32 8
  %23 = ptrtoint ptr %nf_file29 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %cond28, ptr %nf_file29, align 4
  %status30 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call3, i32 0, i32 9
  %24 = ptrtoint ptr %status30 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %status, ptr %status30, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %cond.end27, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_file_acquire(ptr noundef %__data, ptr nocapture noundef readonly %rqstp, i32 noundef %hash, ptr noundef %inode, i32 noundef %may_flags, ptr noundef %nf, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %27 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %xid, align 4
  %hash17 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call13, i32 0, i32 2
  %30 = ptrtoint ptr %hash17 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %hash, ptr %hash17, align 4
  %inode18 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call13, i32 0, i32 3
  %31 = ptrtoint ptr %inode18 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %inode, ptr %inode18, align 4
  %may_flags19 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call13, i32 0, i32 4
  %32 = ptrtoint ptr %may_flags19 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %may_flags, ptr %may_flags19, align 4
  %tobool20.not = icmp eq ptr %nf, null
  br i1 %tobool20.not, label %cond.end26.critedge, label %cond.true

cond.true:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  %nf_ref = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 9
  %call.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %nf_ref, i32 noundef 4) #9
  %33 = ptrtoint ptr %nf_ref to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %nf_ref, align 4
  %nf_ref22.c81 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call13, i32 0, i32 5
  %35 = ptrtoint ptr %nf_ref22.c81 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %nf_ref22.c81, align 4
  %nf_flags = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 6
  %36 = ptrtoint ptr %nf_flags to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %nf_flags, align 4
  %nf_flags28.c82 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call13, i32 0, i32 6
  %38 = ptrtoint ptr %nf_flags28.c82 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %nf_flags28.c82, align 4
  %nf_may = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 10
  %39 = ptrtoint ptr %nf_may to i32
  call void @__asan_load1_noabort(i32 %39)
  %40 = load i8, ptr %nf_may, align 4
  %conv = zext i8 %40 to i32
  %nf_may34.c83 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call13, i32 0, i32 7
  %41 = ptrtoint ptr %nf_may34.c83 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %conv, ptr %nf_may34.c83, align 4
  %nf_file = getelementptr inbounds %struct.nfsd_file, ptr %nf, i32 0, i32 3
  %42 = ptrtoint ptr %nf_file to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %nf_file, align 4
  br label %cond.end38

cond.end26.critedge:                              ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  %nf_ref22.c = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call13, i32 0, i32 5
  %44 = ptrtoint ptr %nf_ref22.c to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 0, ptr %nf_ref22.c, align 4
  %nf_flags28.c = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call13, i32 0, i32 6
  %45 = ptrtoint ptr %nf_flags28.c to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 0, ptr %nf_flags28.c, align 4
  %nf_may34.c = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call13, i32 0, i32 7
  %46 = ptrtoint ptr %nf_may34.c to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 0, ptr %nf_may34.c, align 4
  br label %cond.end38

cond.end38:                                       ; preds = %cond.end26.critedge, %cond.true
  %cond39 = phi ptr [ %43, %cond.true ], [ null, %cond.end26.critedge ]
  %nf_file40 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call13, i32 0, i32 8
  %47 = ptrtoint ptr %nf_file40 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %cond39, ptr %nf_file40, align 4
  %status41 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %call13, i32 0, i32 9
  %48 = ptrtoint ptr %status41 to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %status, ptr %status41, align 4
  %49 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %rctx, align 4
  %51 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %50, ptr noundef %__data, i64 noundef 1, ptr noundef %52, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %cond.end38, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_file_search_class(ptr noundef %__data, ptr noundef %inode, i32 noundef %hash, i32 noundef %found) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %inode6 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_search_class, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %inode6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %inode, ptr %inode6, align 4
  %hash7 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_search_class, ptr %call3, i32 0, i32 2
  %4 = ptrtoint ptr %hash7 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %hash, ptr %hash7, align 4
  %found8 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_search_class, ptr %call3, i32 0, i32 3
  %5 = ptrtoint ptr %found8 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %found, ptr %found8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_file_search_class(ptr noundef %__data, ptr noundef %inode, i32 noundef %hash, i32 noundef %found) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %inode17 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_search_class, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %inode17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %inode, ptr %inode17, align 4
  %hash18 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_search_class, ptr %call13, i32 0, i32 2
  %28 = ptrtoint ptr %hash18 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %hash, ptr %hash18, align 4
  %found19 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_search_class, ptr %call13, i32 0, i32 3
  %29 = ptrtoint ptr %found19 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %found, ptr %found19, align 4
  %30 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %rctx, align 4
  %32 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %31, ptr noundef %__data, i64 noundef 1, ptr noundef %33, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_file_fsnotify_handle_event(ptr noundef %__data, ptr noundef %inode, i32 noundef %mask) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %inode6 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_fsnotify_handle_event, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %inode6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %inode, ptr %inode6, align 4
  %4 = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 12
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %4, align 4
  %nlink = getelementptr inbounds %struct.trace_event_raw_nfsd_file_fsnotify_handle_event, ptr %call3, i32 0, i32 2
  %7 = ptrtoint ptr %nlink to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %nlink, align 4
  %8 = ptrtoint ptr %inode to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %inode, align 8
  %mode = getelementptr inbounds %struct.trace_event_raw_nfsd_file_fsnotify_handle_event, ptr %call3, i32 0, i32 3
  %10 = ptrtoint ptr %mode to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %9, ptr %mode, align 4
  %mask7 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_fsnotify_handle_event, ptr %call3, i32 0, i32 4
  %11 = ptrtoint ptr %mask7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %mask, ptr %mask7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_file_fsnotify_handle_event(ptr noundef %__data, ptr noundef %inode, i32 noundef %mask) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %inode17 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_fsnotify_handle_event, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %inode17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %inode, ptr %inode17, align 4
  %28 = getelementptr inbounds %struct.inode, ptr %inode, i32 0, i32 12
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %28, align 4
  %nlink = getelementptr inbounds %struct.trace_event_raw_nfsd_file_fsnotify_handle_event, ptr %call13, i32 0, i32 2
  %31 = ptrtoint ptr %nlink to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %nlink, align 4
  %32 = ptrtoint ptr %inode to i32
  call void @__asan_load2_noabort(i32 %32)
  %33 = load i16, ptr %inode, align 8
  %mode = getelementptr inbounds %struct.trace_event_raw_nfsd_file_fsnotify_handle_event, ptr %call13, i32 0, i32 3
  %34 = ptrtoint ptr %mode to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %33, ptr %mode, align 4
  %mask18 = getelementptr inbounds %struct.trace_event_raw_nfsd_file_fsnotify_handle_event, ptr %call13, i32 0, i32 4
  %35 = ptrtoint ptr %mask18 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %mask, ptr %mask18, align 4
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_drc_found(ptr noundef %__data, ptr nocapture noundef readonly %nn, ptr nocapture noundef readonly %rqstp, i32 noundef %result) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %boot_time = getelementptr inbounds %struct.nfsd_net, ptr %nn, i32 0, i32 7
  %3 = ptrtoint ptr %boot_time to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %boot_time, align 8
  %boot_time6 = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_found, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %boot_time6 to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %4, ptr %boot_time6, align 8
  %result7 = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_found, ptr %call3, i32 0, i32 2
  %6 = ptrtoint ptr %result7 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %result, ptr %result7, align 8
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %7 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_found, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %xid, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_drc_found(ptr noundef %__data, ptr nocapture noundef readonly %nn, ptr nocapture noundef readonly %rqstp, i32 noundef %result) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %boot_time = getelementptr inbounds %struct.nfsd_net, ptr %nn, i32 0, i32 7
  %27 = ptrtoint ptr %boot_time to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %boot_time, align 8
  %boot_time17 = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_found, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %boot_time17 to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %boot_time17, align 8
  %result18 = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_found, ptr %call13, i32 0, i32 2
  %30 = ptrtoint ptr %result18 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %result, ptr %result18, align 8
  %rq_xid = getelementptr inbounds %struct.svc_rqst, ptr %rqstp, i32 0, i32 27
  %31 = ptrtoint ptr %rq_xid to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %rq_xid, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_found, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %xid, align 4
  %34 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rctx, align 4
  %36 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %35, ptr noundef %__data, i64 noundef 1, ptr noundef %37, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_drc_mismatch(ptr noundef %__data, ptr nocapture noundef readonly %nn, ptr nocapture noundef readonly %key, ptr nocapture noundef readonly %rp) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %boot_time = getelementptr inbounds %struct.nfsd_net, ptr %nn, i32 0, i32 7
  %3 = ptrtoint ptr %boot_time to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %boot_time, align 8
  %boot_time6 = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_mismatch, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %boot_time6 to i32
  call void @__asan_store8_noabort(i32 %5)
  store i64 %4, ptr %boot_time6, align 8
  %6 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %key, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_mismatch, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %xid, align 8
  %k_csum = getelementptr inbounds %struct.anon.136, ptr %key, i32 0, i32 1
  %9 = ptrtoint ptr %k_csum to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %k_csum, align 4
  %cached = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_mismatch, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %cached to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %cached, align 4
  %k_csum9 = getelementptr inbounds %struct.anon.136, ptr %rp, i32 0, i32 1
  %12 = ptrtoint ptr %k_csum9 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %k_csum9, align 4
  %ingress = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_mismatch, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %ingress to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %ingress, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_drc_mismatch(ptr noundef %__data, ptr nocapture noundef readonly %nn, ptr nocapture noundef readonly %key, ptr nocapture noundef readonly %rp) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %boot_time = getelementptr inbounds %struct.nfsd_net, ptr %nn, i32 0, i32 7
  %27 = ptrtoint ptr %boot_time to i32
  call void @__asan_load8_noabort(i32 %27)
  %28 = load i64, ptr %boot_time, align 8
  %boot_time17 = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_mismatch, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %boot_time17 to i32
  call void @__asan_store8_noabort(i32 %29)
  store i64 %28, ptr %boot_time17, align 8
  %30 = ptrtoint ptr %key to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %key, align 4
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_mismatch, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %xid to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %xid, align 8
  %k_csum = getelementptr inbounds %struct.anon.136, ptr %key, i32 0, i32 1
  %33 = ptrtoint ptr %k_csum to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %k_csum, align 4
  %cached = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_mismatch, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %cached to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %cached, align 4
  %k_csum20 = getelementptr inbounds %struct.anon.136, ptr %rp, i32 0, i32 1
  %36 = ptrtoint ptr %k_csum20 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %k_csum20, align 4
  %ingress = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_mismatch, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %ingress to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %ingress, align 8
  %39 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rctx, align 4
  %41 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %40, ptr noundef %__data, i64 noundef 1, ptr noundef %42, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_cb_args(ptr noundef %__data, ptr nocapture noundef readonly %clp, ptr nocapture noundef readonly %conn) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 52) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %cl_clientid = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15
  %3 = ptrtoint ptr %cl_clientid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cl_clientid, align 4
  %cl_boot6 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_args, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cl_boot6 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cl_boot6, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15, i32 1
  %6 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cl_id, align 4
  %cl_id8 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_args, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %cl_id8 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %cl_id8, align 4
  %cb_prog = getelementptr inbounds %struct.nfs4_cb_conn, ptr %conn, i32 0, i32 3
  %9 = ptrtoint ptr %cb_prog to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cb_prog, align 4
  %prog = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_args, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %prog to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %prog, align 4
  %cb_ident = getelementptr inbounds %struct.nfs4_cb_conn, ptr %conn, i32 0, i32 4
  %12 = ptrtoint ptr %cb_ident to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %cb_ident, align 4
  %ident = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_args, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %ident to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %ident, align 4
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_args, ptr %call3, i32 0, i32 5
  %15 = call ptr @memcpy(ptr %addr, ptr %conn, i32 28)
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_cb_args(ptr noundef %__data, ptr nocapture noundef readonly %clp, ptr nocapture noundef readonly %conn) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %cl_clientid = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15
  %27 = ptrtoint ptr %cl_clientid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cl_clientid, align 4
  %cl_boot17 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_args, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cl_boot17 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cl_boot17, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15, i32 1
  %30 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cl_id, align 4
  %cl_id19 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_args, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %cl_id19 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %cl_id19, align 4
  %cb_prog = getelementptr inbounds %struct.nfs4_cb_conn, ptr %conn, i32 0, i32 3
  %33 = ptrtoint ptr %cb_prog to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %cb_prog, align 4
  %prog = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_args, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %prog to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %prog, align 4
  %cb_ident = getelementptr inbounds %struct.nfs4_cb_conn, ptr %conn, i32 0, i32 4
  %36 = ptrtoint ptr %cb_ident to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %cb_ident, align 4
  %ident = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_args, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %ident to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %ident, align 4
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_args, ptr %call13, i32 0, i32 5
  %39 = call ptr @memcpy(ptr %addr, ptr %conn, i32 28)
  %40 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %rctx, align 4
  %42 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %41, ptr noundef %__data, i64 noundef 1, ptr noundef %43, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_cb_nodelegs(ptr noundef %__data, ptr nocapture noundef readonly %clp) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 16) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %cl_clientid = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15
  %3 = ptrtoint ptr %cl_clientid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cl_clientid, align 4
  %cl_boot6 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_nodelegs, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cl_boot6 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cl_boot6, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15, i32 1
  %6 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cl_id, align 4
  %cl_id8 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_nodelegs, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %cl_id8 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %cl_id8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_cb_nodelegs(ptr noundef %__data, ptr nocapture noundef readonly %clp) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %cl_clientid = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15
  %27 = ptrtoint ptr %cl_clientid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cl_clientid, align 4
  %cl_boot17 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_nodelegs, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cl_boot17 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cl_boot17, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15, i32 1
  %30 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cl_id, align 4
  %cl_id19 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_nodelegs, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %cl_id19 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %cl_id19, align 4
  %33 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %rctx, align 4
  %35 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %34, ptr noundef %__data, i64 noundef 1, ptr noundef %36, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_cb_class(ptr noundef %__data, ptr nocapture noundef readonly %clp) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %cl_cb_state = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 26
  %3 = ptrtoint ptr %cl_cb_state to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cl_cb_state, align 8
  %state = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_class, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %state, align 4
  %cl_clientid = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15
  %6 = ptrtoint ptr %cl_clientid to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cl_clientid, align 4
  %cl_boot6 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_class, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %cl_boot6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %cl_boot6, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15, i32 1
  %9 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cl_id, align 4
  %cl_id8 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_class, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %cl_id8 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %cl_id8, align 4
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_class, ptr %call3, i32 0, i32 4
  %cl_cb_conn = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 21
  %12 = call ptr @memcpy(ptr %addr, ptr %cl_cb_conn, i32 28)
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_cb_class(ptr noundef %__data, ptr nocapture noundef readonly %clp) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %cl_cb_state = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 26
  %27 = ptrtoint ptr %cl_cb_state to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cl_cb_state, align 8
  %state = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_class, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %state to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %state, align 4
  %cl_clientid = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15
  %30 = ptrtoint ptr %cl_clientid to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cl_clientid, align 4
  %cl_boot17 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_class, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %cl_boot17 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %cl_boot17, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15, i32 1
  %33 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %cl_id, align 4
  %cl_id19 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_class, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %cl_id19 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %cl_id19, align 4
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_class, ptr %call13, i32 0, i32 4
  %cl_cb_conn = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 21
  %36 = call ptr @memcpy(ptr %addr, ptr %cl_cb_conn, i32 28)
  %37 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rctx, align 4
  %39 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %38, ptr noundef %__data, i64 noundef 1, ptr noundef %40, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_cb_setup(ptr noundef %__data, ptr nocapture noundef readonly %clp, ptr noundef %netid, i32 noundef %authflavor) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 56) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %cl_clientid = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15
  %3 = ptrtoint ptr %cl_clientid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cl_clientid, align 4
  %cl_boot6 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cl_boot6 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cl_boot6, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15, i32 1
  %6 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cl_id, align 4
  %cl_id8 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %cl_id8 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %cl_id8, align 4
  %netid9 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup, ptr %call3, i32 0, i32 5
  %call10 = call i32 @strlcpy(ptr noundef %netid9, ptr noundef %netid, i32 noundef 8) #9
  %authflavor11 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %authflavor11 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %authflavor, ptr %authflavor11, align 4
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup, ptr %call3, i32 0, i32 4
  %cl_cb_conn = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 21
  %10 = call ptr @memcpy(ptr %addr, ptr %cl_cb_conn, i32 28)
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_cb_setup(ptr noundef %__data, ptr nocapture noundef readonly %clp, ptr noundef %netid, i32 noundef %authflavor) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %cl_clientid = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15
  %27 = ptrtoint ptr %cl_clientid to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %cl_clientid, align 4
  %cl_boot17 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cl_boot17 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cl_boot17, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15, i32 1
  %30 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cl_id, align 4
  %cl_id19 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %cl_id19 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %cl_id19, align 4
  %netid20 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup, ptr %call13, i32 0, i32 5
  %call21 = call i32 @strlcpy(ptr noundef %netid20, ptr noundef %netid, i32 noundef 8) #9
  %authflavor22 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %authflavor22 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %authflavor, ptr %authflavor22, align 4
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup, ptr %call13, i32 0, i32 4
  %cl_cb_conn = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 21
  %34 = call ptr @memcpy(ptr %addr, ptr %cl_cb_conn, i32 28)
  %35 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rctx, align 4
  %37 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 60, i32 noundef %36, ptr noundef %__data, i64 noundef 1, ptr noundef %38, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_cb_setup_err(ptr noundef %__data, ptr nocapture noundef readonly %clp, i32 noundef %error) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %error6 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup_err, ptr %call3, i32 0, i32 1
  %3 = ptrtoint ptr %error6 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %error, ptr %error6, align 4
  %cl_clientid = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15
  %4 = ptrtoint ptr %cl_clientid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cl_clientid, align 4
  %cl_boot7 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup_err, ptr %call3, i32 0, i32 2
  %6 = ptrtoint ptr %cl_boot7 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %cl_boot7, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15, i32 1
  %7 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cl_id, align 4
  %cl_id9 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup_err, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %cl_id9 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %cl_id9, align 4
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup_err, ptr %call3, i32 0, i32 4
  %cl_cb_conn = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 21
  %10 = call ptr @memcpy(ptr %addr, ptr %cl_cb_conn, i32 28)
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_cb_setup_err(ptr noundef %__data, ptr nocapture noundef readonly %clp, i32 noundef %error) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %error17 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup_err, ptr %call13, i32 0, i32 1
  %27 = ptrtoint ptr %error17 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %error, ptr %error17, align 4
  %cl_clientid = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15
  %28 = ptrtoint ptr %cl_clientid to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %cl_clientid, align 4
  %cl_boot18 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup_err, ptr %call13, i32 0, i32 2
  %30 = ptrtoint ptr %cl_boot18 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %cl_boot18, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 15, i32 1
  %31 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %cl_id, align 4
  %cl_id20 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup_err, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %cl_id20 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %cl_id20, align 4
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup_err, ptr %call13, i32 0, i32 4
  %cl_cb_conn = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 21
  %34 = call ptr @memcpy(ptr %addr, ptr %cl_cb_conn, i32 28)
  %35 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rctx, align 4
  %37 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %36, ptr noundef %__data, i64 noundef 1, ptr noundef %38, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_cb_recall(ptr noundef %__data, ptr nocapture noundef readonly %stid) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 52) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %sc_stateid = getelementptr inbounds %struct.nfs4_stid, ptr %stid, i32 0, i32 3
  %sc_client = getelementptr inbounds %struct.nfs4_stid, ptr %stid, i32 0, i32 5
  %3 = ptrtoint ptr %sc_client to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sc_client, align 4
  %si_opaque = getelementptr inbounds %struct.nfs4_stid, ptr %stid, i32 0, i32 3, i32 1
  %5 = ptrtoint ptr %si_opaque to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %si_opaque, align 4
  %cl_boot6 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_recall, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %cl_boot6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %cl_boot6, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_stid, ptr %stid, i32 0, i32 3, i32 1, i32 0, i32 1
  %8 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cl_id, align 4
  %cl_id9 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_recall, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %cl_id9 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %cl_id9, align 4
  %so_id = getelementptr inbounds %struct.nfs4_stid, ptr %stid, i32 0, i32 3, i32 1, i32 1
  %11 = ptrtoint ptr %so_id to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %so_id, align 4
  %si_id = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_recall, ptr %call3, i32 0, i32 3
  %13 = ptrtoint ptr %si_id to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %12, ptr %si_id, align 4
  %14 = ptrtoint ptr %sc_stateid to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %sc_stateid, align 4
  %si_generation11 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_recall, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %si_generation11 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %si_generation11, align 4
  %tobool12.not = icmp eq ptr %4, null
  %addr14 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_recall, ptr %call3, i32 0, i32 5
  br i1 %tobool12.not, label %if.else, label %if.then13

if.then13:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  %cl_cb_conn = getelementptr inbounds %struct.nfs4_client, ptr %4, i32 0, i32 21
  %17 = call ptr @memcpy(ptr %addr14, ptr %cl_cb_conn, i32 28)
  br label %if.end16

if.else:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #11
  %18 = call ptr @memset(ptr %addr14, i32 0, i32 28)
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then13
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_cb_recall(ptr noundef %__data, ptr nocapture noundef readonly %stid) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %sc_stateid = getelementptr inbounds %struct.nfs4_stid, ptr %stid, i32 0, i32 3
  %sc_client = getelementptr inbounds %struct.nfs4_stid, ptr %stid, i32 0, i32 5
  %27 = ptrtoint ptr %sc_client to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %sc_client, align 4
  %si_opaque = getelementptr inbounds %struct.nfs4_stid, ptr %stid, i32 0, i32 3, i32 1
  %29 = ptrtoint ptr %si_opaque to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %si_opaque, align 4
  %cl_boot17 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_recall, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %cl_boot17 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %cl_boot17, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_stid, ptr %stid, i32 0, i32 3, i32 1, i32 0, i32 1
  %32 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cl_id, align 4
  %cl_id20 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_recall, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %cl_id20 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %cl_id20, align 4
  %so_id = getelementptr inbounds %struct.nfs4_stid, ptr %stid, i32 0, i32 3, i32 1, i32 1
  %35 = ptrtoint ptr %so_id to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %so_id, align 4
  %si_id = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_recall, ptr %call13, i32 0, i32 3
  %37 = ptrtoint ptr %si_id to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %36, ptr %si_id, align 4
  %38 = ptrtoint ptr %sc_stateid to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %sc_stateid, align 4
  %si_generation22 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_recall, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %si_generation22 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %si_generation22, align 4
  %tobool23.not = icmp eq ptr %28, null
  %addr25 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_recall, ptr %call13, i32 0, i32 5
  br i1 %tobool23.not, label %if.else, label %if.then24

if.then24:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  %cl_cb_conn = getelementptr inbounds %struct.nfs4_client, ptr %28, i32 0, i32 21
  %41 = call ptr @memcpy(ptr %addr25, ptr %cl_cb_conn, i32 28)
  br label %if.end27

if.else:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #11
  %42 = call ptr @memset(ptr %addr25, i32 0, i32 28)
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then24
  %43 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %rctx, align 4
  %45 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %44, ptr noundef %__data, i64 noundef 1, ptr noundef %46, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end27, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_cb_notify_lock(ptr noundef %__data, ptr nocapture noundef readonly %lo, ptr noundef %nbl) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %so_client = getelementptr inbounds %struct.nfs4_stateowner, ptr %lo, i32 0, i32 2
  %3 = ptrtoint ptr %so_client to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %so_client, align 4
  %cl_clientid = getelementptr inbounds %struct.nfs4_client, ptr %4, i32 0, i32 15
  %5 = ptrtoint ptr %cl_clientid to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cl_clientid, align 4
  %cl_boot6 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_notify_lock, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %cl_boot6 to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %cl_boot6, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_client, ptr %4, i32 0, i32 15, i32 1
  %8 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cl_id, align 4
  %cl_id8 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_notify_lock, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %cl_id8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %9, ptr %cl_id8, align 4
  %nbl_fh = getelementptr inbounds %struct.nfsd4_blocked_lock, ptr %nbl, i32 0, i32 4
  %11 = getelementptr inbounds %struct.nfsd4_blocked_lock, ptr %nbl, i32 0, i32 4, i32 1
  %12 = ptrtoint ptr %nbl_fh to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %nbl_fh, align 4
  %call.i23 = call i32 @crc32_le(i32 noundef -1, ptr noundef %11, i32 noundef %13) #14
  %neg.i = xor i32 %call.i23, -1
  %fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_notify_lock, ptr %call3, i32 0, i32 3
  %14 = ptrtoint ptr %fh_hash to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %neg.i, ptr %fh_hash, align 4
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_notify_lock, ptr %call3, i32 0, i32 4
  %cl_cb_conn = getelementptr inbounds %struct.nfs4_client, ptr %4, i32 0, i32 21
  %15 = call ptr @memcpy(ptr %addr, ptr %cl_cb_conn, i32 28)
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_cb_notify_lock(ptr noundef %__data, ptr nocapture noundef readonly %lo, ptr noundef %nbl) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %so_client = getelementptr inbounds %struct.nfs4_stateowner, ptr %lo, i32 0, i32 2
  %27 = ptrtoint ptr %so_client to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %so_client, align 4
  %cl_clientid = getelementptr inbounds %struct.nfs4_client, ptr %28, i32 0, i32 15
  %29 = ptrtoint ptr %cl_clientid to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %cl_clientid, align 4
  %cl_boot17 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_notify_lock, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %cl_boot17 to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %cl_boot17, align 4
  %cl_id = getelementptr inbounds %struct.nfs4_client, ptr %28, i32 0, i32 15, i32 1
  %32 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cl_id, align 4
  %cl_id19 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_notify_lock, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %cl_id19 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %cl_id19, align 4
  %nbl_fh = getelementptr inbounds %struct.nfsd4_blocked_lock, ptr %nbl, i32 0, i32 4
  %35 = getelementptr inbounds %struct.nfsd4_blocked_lock, ptr %nbl, i32 0, i32 4, i32 1
  %36 = ptrtoint ptr %nbl_fh to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %nbl_fh, align 4
  %call.i = call i32 @crc32_le(i32 noundef -1, ptr noundef %35, i32 noundef %37) #14
  %neg.i = xor i32 %call.i, -1
  %fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_notify_lock, ptr %call13, i32 0, i32 3
  %38 = ptrtoint ptr %fh_hash to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %neg.i, ptr %fh_hash, align 4
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_notify_lock, ptr %call13, i32 0, i32 4
  %cl_cb_conn = getelementptr inbounds %struct.nfs4_client, ptr %28, i32 0, i32 21
  %39 = call ptr @memcpy(ptr %addr, ptr %cl_cb_conn, i32 28)
  %40 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %rctx, align 4
  %42 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %41, ptr noundef %__data, i64 noundef 1, ptr noundef %43, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_nfsd_cb_offload(ptr noundef %__data, ptr nocapture noundef readonly %clp, ptr nocapture noundef readonly %stp, ptr noundef %fh, i64 noundef %count, i32 noundef %status) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #9
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !1016

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !1017

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #9
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 72) #9
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %si_opaque = getelementptr inbounds %struct.stateid_t, ptr %stp, i32 0, i32 1
  %3 = ptrtoint ptr %si_opaque to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %si_opaque, align 4
  %cl_boot6 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %call3, i32 0, i32 1
  %5 = ptrtoint ptr %cl_boot6 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %cl_boot6, align 8
  %cl_id = getelementptr inbounds %struct.stateid_t, ptr %stp, i32 0, i32 1, i32 0, i32 1
  %6 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cl_id, align 4
  %cl_id9 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %cl_id9 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %cl_id9, align 4
  %so_id = getelementptr inbounds %struct.stateid_t, ptr %stp, i32 0, i32 1, i32 1
  %9 = ptrtoint ptr %so_id to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %so_id, align 4
  %si_id = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %si_id to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %si_id, align 8
  %12 = ptrtoint ptr %stp to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %stp, align 4
  %si_generation11 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %si_generation11 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %si_generation11, align 4
  %15 = getelementptr inbounds %struct.knfsd_fh, ptr %fh, i32 0, i32 1
  %16 = ptrtoint ptr %fh to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %fh, align 4
  %call.i36 = call i32 @crc32_le(i32 noundef -1, ptr noundef %15, i32 noundef %17) #14
  %neg.i = xor i32 %call.i36, -1
  %fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %call3, i32 0, i32 5
  %18 = ptrtoint ptr %fh_hash to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %neg.i, ptr %fh_hash, align 8
  %status13 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %call3, i32 0, i32 6
  %19 = ptrtoint ptr %status13 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %status, ptr %status13, align 4
  %count14 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %call3, i32 0, i32 7
  %20 = ptrtoint ptr %count14 to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %count, ptr %count14, align 8
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %call3, i32 0, i32 8
  %cl_cb_conn = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 21
  %21 = call ptr @memcpy(ptr %addr, ptr %cl_cb_conn, i32 28)
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_nfsd_cb_offload(ptr noundef %__data, ptr nocapture noundef readonly %clp, ptr nocapture noundef readonly %stp, ptr noundef %fh, i64 noundef %count, i32 noundef %status) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #11
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #9
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !1018
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #9
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !1018
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !1006) #9
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 76, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #9
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #11
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #9
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #9
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !1006) #9
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %si_opaque = getelementptr inbounds %struct.stateid_t, ptr %stp, i32 0, i32 1
  %27 = ptrtoint ptr %si_opaque to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %si_opaque, align 4
  %cl_boot17 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %call13, i32 0, i32 1
  %29 = ptrtoint ptr %cl_boot17 to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %cl_boot17, align 8
  %cl_id = getelementptr inbounds %struct.stateid_t, ptr %stp, i32 0, i32 1, i32 0, i32 1
  %30 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %cl_id, align 4
  %cl_id20 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %cl_id20 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %cl_id20, align 4
  %so_id = getelementptr inbounds %struct.stateid_t, ptr %stp, i32 0, i32 1, i32 1
  %33 = ptrtoint ptr %so_id to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %so_id, align 4
  %si_id = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %si_id to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %si_id, align 8
  %36 = ptrtoint ptr %stp to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %stp, align 4
  %si_generation22 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %si_generation22 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %si_generation22, align 4
  %39 = getelementptr inbounds %struct.knfsd_fh, ptr %fh, i32 0, i32 1
  %40 = ptrtoint ptr %fh to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %fh, align 4
  %call.i = call i32 @crc32_le(i32 noundef -1, ptr noundef %39, i32 noundef %41) #14
  %neg.i = xor i32 %call.i, -1
  %fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %call13, i32 0, i32 5
  %42 = ptrtoint ptr %fh_hash to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %neg.i, ptr %fh_hash, align 8
  %status24 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %call13, i32 0, i32 6
  %43 = ptrtoint ptr %status24 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %status, ptr %status24, align 4
  %count25 = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %call13, i32 0, i32 7
  %44 = ptrtoint ptr %count25 to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %count, ptr %count25, align 8
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %call13, i32 0, i32 8
  %cl_cb_conn = getelementptr inbounds %struct.nfs4_client, ptr %clp, i32 0, i32 21
  %45 = call ptr @memcpy(ptr %addr, ptr %cl_cb_conn, i32 28)
  %46 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %rctx, align 4
  %48 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 76, i32 noundef %47, ptr noundef %__data, i64 noundef 1, ptr noundef %49, ptr noundef %11, ptr noundef null) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #9
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_xdr_err_class(ptr noundef %__data, ptr noundef %rqstp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %rqstp to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_compound(ptr noundef %__data, ptr noundef %rqst, i32 noundef %args_opcnt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %rqst to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %args_opcnt to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_compound_status(ptr noundef %__data, i32 noundef %args_opcnt, i32 noundef %resp_opcnt, i32 noundef %status, ptr noundef %name) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %conv = zext i32 %args_opcnt to i64
  %conv4 = zext i32 %resp_opcnt to i64
  %conv8 = zext i32 %status to i64
  %0 = ptrtoint ptr %name to i32
  %conv12 = zext i32 %0 to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_compound_decode_err(ptr noundef %__data, ptr noundef %rqstp, i32 noundef %args_opcnt, i32 noundef %resp_opcnt, i32 noundef %opnum, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %rqstp to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %args_opcnt to i64
  %conv8 = zext i32 %resp_opcnt to i64
  %conv12 = zext i32 %opnum to i64
  %conv16 = zext i32 %status to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_compound_encode_err(ptr noundef %__data, ptr noundef %rqstp, i32 noundef %opnum, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %rqstp to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %opnum to i64
  %conv8 = zext i32 %status to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_fh_err_class(ptr noundef %__data, ptr noundef %rqstp, ptr noundef %fhp, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %rqstp to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %fhp to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %status to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_exp_find_key(ptr noundef %__data, ptr noundef %key, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %key to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %status to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_expkey_update(ptr noundef %__data, ptr noundef %key, ptr noundef %exp_path) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %key to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %exp_path to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_exp_get_by_name(ptr noundef %__data, ptr noundef %key, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %key to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %status to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_export_update(ptr noundef %__data, ptr noundef %key) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %key to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_io_class(ptr noundef %__data, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %rqstp to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %fhp to i32
  %conv4 = zext i32 %1 to i64
  %conv11 = zext i32 %len to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %offset, i64 noundef %conv11) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_err_class(ptr noundef %__data, ptr noundef %rqstp, ptr noundef %fhp, i64 noundef %offset, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %rqstp to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %fhp to i32
  %conv4 = zext i32 %1 to i64
  %conv11 = zext i32 %status to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %offset, i64 noundef %conv11) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_dirent(ptr noundef %__data, ptr noundef %fhp, i64 noundef %ino, ptr noundef %name, i32 noundef %namlen) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %fhp to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %name to i32
  %conv7 = zext i32 %1 to i64
  %conv11 = zext i32 %namlen to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %ino, i64 noundef %conv7, i64 noundef %conv11) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_copy_err_class(ptr noundef %__data, ptr noundef %rqstp, ptr noundef %src_fhp, i64 noundef %src_offset, ptr noundef %dst_fhp, i64 noundef %dst_offset, i64 noundef %count, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %rqstp to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %src_fhp to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %dst_fhp to i32
  %conv11 = zext i32 %2 to i64
  %conv21 = zext i32 %status to i64
  tail call void @bpf_trace_run7(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %src_offset, i64 noundef %conv11, i64 noundef %dst_offset, i64 noundef %count, i64 noundef %conv21) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_stateid_class(ptr noundef %__data, ptr noundef %stp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %stp to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_stateseqid_class(ptr noundef %__data, i32 noundef %seqid, ptr noundef %stp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %conv = zext i32 %seqid to i64
  %0 = ptrtoint ptr %stp to i32
  %conv4 = zext i32 %0 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_clientid_class(ptr noundef %__data, ptr noundef %clid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %clid to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_net_class(ptr noundef %__data, ptr noundef %nn) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %nn to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_writeverf_reset(ptr noundef %__data, ptr noundef %nn, ptr noundef %rqstp, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %nn to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %rqstp to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %error to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_clid_cred_mismatch(ptr noundef %__data, ptr noundef %clp, ptr noundef %rqstp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %clp to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %rqstp to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_clid_verf_mismatch(ptr noundef %__data, ptr noundef %clp, ptr noundef %rqstp, ptr noundef %verf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %clp to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %rqstp to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %verf to i32
  %conv8 = zext i32 %2 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_clid_class(ptr noundef %__data, ptr noundef %clp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %clp to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_file_class(ptr noundef %__data, ptr noundef %nf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %nf to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_file_acquire(ptr noundef %__data, ptr noundef %rqstp, i32 noundef %hash, ptr noundef %inode, i32 noundef %may_flags, ptr noundef %nf, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %rqstp to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %hash to i64
  %1 = ptrtoint ptr %inode to i32
  %conv8 = zext i32 %1 to i64
  %conv12 = zext i32 %may_flags to i64
  %2 = ptrtoint ptr %nf to i32
  %conv16 = zext i32 %2 to i64
  %conv20 = zext i32 %status to i64
  tail call void @bpf_trace_run6(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_file_search_class(ptr noundef %__data, ptr noundef %inode, i32 noundef %hash, i32 noundef %found) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %inode to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %hash to i64
  %conv8 = zext i32 %found to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_file_fsnotify_handle_event(ptr noundef %__data, ptr noundef %inode, i32 noundef %mask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %inode to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %mask to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_drc_found(ptr noundef %__data, ptr noundef %nn, ptr noundef %rqstp, i32 noundef %result) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %nn to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %rqstp to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %result to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_drc_mismatch(ptr noundef %__data, ptr noundef %nn, ptr noundef %key, ptr noundef %rp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %nn to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %key to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %rp to i32
  %conv8 = zext i32 %2 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_cb_args(ptr noundef %__data, ptr noundef %clp, ptr noundef %conn) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %clp to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %conn to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_cb_nodelegs(ptr noundef %__data, ptr noundef %clp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %clp to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_cb_class(ptr noundef %__data, ptr noundef %clp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %clp to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_cb_setup(ptr noundef %__data, ptr noundef %clp, ptr noundef %netid, i32 noundef %authflavor) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %clp to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %netid to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %authflavor to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_cb_setup_err(ptr noundef %__data, ptr noundef %clp, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %clp to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %error to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_cb_recall(ptr noundef %__data, ptr noundef %stid) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %stid to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_cb_notify_lock(ptr noundef %__data, ptr noundef %lo, ptr noundef %nbl) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %lo to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %nbl to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #9
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_nfsd_cb_offload(ptr noundef %__data, ptr noundef %clp, ptr noundef %stp, ptr noundef %fh, i64 noundef %count, i32 noundef %status) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %0 = ptrtoint ptr %clp to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %stp to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %fh to i32
  %conv8 = zext i32 %2 to i64
  %conv15 = zext i32 %status to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %count, i64 noundef %conv15) #9
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_xdr_err_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_xdr_err_class, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %xid, align 4
  %vers = getelementptr inbounds %struct.trace_event_raw_nfsd_xdr_err_class, ptr %1, i32 0, i32 5
  %4 = ptrtoint ptr %vers to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %vers, align 4
  %proc = getelementptr inbounds %struct.trace_event_raw_nfsd_xdr_err_class, ptr %1, i32 0, i32 6
  %6 = ptrtoint ptr %proc to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %proc, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.23, i32 noundef %3, i32 noundef %5, i32 noundef %7) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_compound(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_compound, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %xid, align 4
  %args_opcnt = getelementptr inbounds %struct.trace_event_raw_nfsd_compound, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %args_opcnt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %args_opcnt, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.25, i32 noundef %3, i32 noundef %5) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #3

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #4

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_compound_status(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %resp_opcnt = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_status, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %resp_opcnt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %resp_opcnt, align 4
  %args_opcnt = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_status, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %args_opcnt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %args_opcnt, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_status, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %7, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %status = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_status, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.32, i32 noundef %3, i32 noundef %5, ptr noundef %add.ptr, i32 noundef %9) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_compound_decode_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %resp_opcnt = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %resp_opcnt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %resp_opcnt, align 4
  %args_opcnt = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %1, i32 0, i32 6
  %4 = ptrtoint ptr %args_opcnt to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %args_opcnt, align 4
  %opnum = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %1, i32 0, i32 8
  %6 = ptrtoint ptr %opnum to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %opnum, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_decode_err, ptr %1, i32 0, i32 3
  %8 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.35, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_compound_encode_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %opnum = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_encode_err, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %opnum to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %opnum, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_nfsd_compound_encode_err, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.36, i32 noundef %3, i32 noundef %5) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @crc32_le(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_fh_err_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_fh_err_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %xid, align 4
  %fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_fh_err_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %fh_hash to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %fh_hash, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_nfsd_fh_err_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.38, i32 noundef %3, i32 noundef %5, i32 noundef %7) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_exp_find_key(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsidtype = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_find_key, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %fsidtype to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %fsidtype, align 4
  %fsid = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_find_key, ptr %1, i32 0, i32 2
  %call1 = tail call ptr @trace_print_array_seq(ptr noundef %tmp_seq, ptr noundef %fsid, i32 noundef 6, i32 noundef 4) #9
  %__data_loc_auth_domain = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_find_key, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %__data_loc_auth_domain to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_auth_domain, align 4
  %and = and i32 %5, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %status = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_find_key, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.43, i32 noundef %3, ptr noundef %call1, ptr noundef %add.ptr, i32 noundef %7) #9
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_array_seq(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_expkey_update(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fsidtype = getelementptr inbounds %struct.trace_event_raw_nfsd_expkey_update, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %fsidtype to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %fsidtype, align 4
  %fsid = getelementptr inbounds %struct.trace_event_raw_nfsd_expkey_update, ptr %1, i32 0, i32 2
  %call1 = tail call ptr @trace_print_array_seq(ptr noundef %tmp_seq, ptr noundef %fsid, i32 noundef 6, i32 noundef 4) #9
  %__data_loc_auth_domain = getelementptr inbounds %struct.trace_event_raw_nfsd_expkey_update, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %__data_loc_auth_domain to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_auth_domain, align 4
  %and = and i32 %5, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_path = getelementptr inbounds %struct.trace_event_raw_nfsd_expkey_update, ptr %1, i32 0, i32 4
  %6 = ptrtoint ptr %__data_loc_path to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %__data_loc_path, align 4
  %and2 = and i32 %7, 65535
  %add.ptr3 = getelementptr i8, ptr %1, i32 %and2
  %cache = getelementptr inbounds %struct.trace_event_raw_nfsd_expkey_update, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %cache to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %cache, align 4, !range !1019
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not = icmp eq i8 %9, 0
  %cond = select i1 %tobool.not, ptr @.str.49, ptr @.str.48
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.47, i32 noundef %3, ptr noundef %call1, ptr noundef %add.ptr, ptr noundef %add.ptr3, ptr noundef nonnull %cond) #9
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_exp_get_by_name(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_path = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_get_by_name, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_path to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_path, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_auth_domain = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_get_by_name, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_auth_domain to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_auth_domain, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %status = getelementptr inbounds %struct.trace_event_raw_nfsd_exp_get_by_name, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.50, ptr noundef %add.ptr, ptr noundef %add.ptr2, i32 noundef %7) #9
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_export_update(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %__data_loc_path = getelementptr inbounds %struct.trace_event_raw_nfsd_export_update, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %__data_loc_path to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_path, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %__data_loc_auth_domain = getelementptr inbounds %struct.trace_event_raw_nfsd_export_update, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %__data_loc_auth_domain to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %__data_loc_auth_domain, align 4
  %and1 = and i32 %5, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  %cache = getelementptr inbounds %struct.trace_event_raw_nfsd_export_update, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %cache to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %cache, align 4, !range !1019
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not = icmp eq i8 %7, 0
  %cond = select i1 %tobool.not, ptr @.str.49, ptr @.str.48
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.51, ptr noundef %add.ptr, ptr noundef %add.ptr2, ptr noundef nonnull %cond) #9
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_io_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_io_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %xid, align 8
  %fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_io_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %fh_hash to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %fh_hash, align 4
  %offset = getelementptr inbounds %struct.trace_event_raw_nfsd_io_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %offset, align 8
  %len = getelementptr inbounds %struct.trace_event_raw_nfsd_io_class, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.55, i32 noundef %3, i32 noundef %5, i64 noundef %7, i32 noundef %9) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_err_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_err_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %xid, align 8
  %fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_err_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %fh_hash to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %fh_hash, align 4
  %offset = getelementptr inbounds %struct.trace_event_raw_nfsd_err_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %offset, align 8
  %status = getelementptr inbounds %struct.trace_event_raw_nfsd_err_class, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %status, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.57, i32 noundef %3, i32 noundef %5, i64 noundef %7, i32 noundef %9) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_dirent(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_dirent, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %fh_hash to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %fh_hash, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_nfsd_dirent, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %ino, align 8
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_nfsd_dirent, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %__data_loc_name, align 8
  %and = and i32 %7, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.59, i32 noundef %3, i64 noundef %5, ptr noundef %add.ptr) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_copy_err_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %xid, align 8
  %src_fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %src_fh_hash to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %src_fh_hash, align 4
  %src_offset = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %src_offset to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %src_offset, align 8
  %dst_fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %dst_fh_hash to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %dst_fh_hash, align 8
  %dst_offset = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %dst_offset to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %dst_offset, align 8
  %count = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %count to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %count, align 8
  %status = getelementptr inbounds %struct.trace_event_raw_nfsd_copy_err_class, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %status, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.65, i32 noundef %3, i32 noundef %5, i64 noundef %7, i32 noundef %9, i64 noundef %11, i64 noundef %13, i32 noundef %15) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_stateid_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cl_boot = getelementptr inbounds %struct.trace_event_raw_nfsd_stateid_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cl_boot to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cl_boot, align 4
  %cl_id = getelementptr inbounds %struct.trace_event_raw_nfsd_stateid_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cl_id, align 4
  %si_id = getelementptr inbounds %struct.trace_event_raw_nfsd_stateid_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %si_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %si_id, align 4
  %si_generation = getelementptr inbounds %struct.trace_event_raw_nfsd_stateid_class, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %si_generation to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %si_generation, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.70, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_stateseqid_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %seqid = getelementptr inbounds %struct.trace_event_raw_nfsd_stateseqid_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %seqid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %seqid, align 4
  %cl_boot = getelementptr inbounds %struct.trace_event_raw_nfsd_stateseqid_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %cl_boot to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cl_boot, align 4
  %cl_id = getelementptr inbounds %struct.trace_event_raw_nfsd_stateseqid_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cl_id, align 4
  %si_id = getelementptr inbounds %struct.trace_event_raw_nfsd_stateseqid_class, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %si_id to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %si_id, align 4
  %si_generation = getelementptr inbounds %struct.trace_event_raw_nfsd_stateseqid_class, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %si_generation to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %si_generation, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.72, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_clientid_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cl_boot = getelementptr inbounds %struct.trace_event_raw_nfsd_clientid_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cl_boot to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cl_boot, align 4
  %cl_id = getelementptr inbounds %struct.trace_event_raw_nfsd_clientid_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cl_id, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.73, i32 noundef %3, i32 noundef %5) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_net_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %boot_time = getelementptr inbounds %struct.trace_event_raw_nfsd_net_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %boot_time to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %boot_time, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.76, i64 noundef %3) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_writeverf_reset(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %boot_time = getelementptr inbounds %struct.trace_event_raw_nfsd_writeverf_reset, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %boot_time to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %boot_time, align 8
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_writeverf_reset, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %xid, align 8
  %error = getelementptr inbounds %struct.trace_event_raw_nfsd_writeverf_reset, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %error, align 4
  %verifier = getelementptr inbounds %struct.trace_event_raw_nfsd_writeverf_reset, ptr %1, i32 0, i32 4
  %call1 = tail call ptr @trace_print_hex_seq(ptr noundef %tmp_seq, ptr noundef %verifier, i32 noundef 8, i1 noundef zeroext true) #9
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.80, i64 noundef %3, i32 noundef %5, i32 noundef %7, ptr noundef %call1) #9
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_hex_seq(ptr noundef, ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_clid_cred_mismatch(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cl_boot = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_cred_mismatch, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cl_boot to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cl_boot, align 4
  %cl_id = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_cred_mismatch, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cl_id, align 4
  %cl_flavor = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_cred_mismatch, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %cl_flavor to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cl_flavor, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_nfsd_clid_cred_mismatch.symbols) #9
  %new_flavor = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_cred_mismatch, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %new_flavor to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %new_flavor, align 4
  %call3 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %9, ptr noundef nonnull @trace_raw_output_nfsd_clid_cred_mismatch.symbols.91) #9
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_cred_mismatch, ptr %1, i32 0, i32 5
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.84, i32 noundef %3, i32 noundef %5, ptr noundef %call1, ptr noundef %call3, ptr noundef %addr) #9
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_symbols_seq(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_clid_verf_mismatch(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cl_boot = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_verf_mismatch, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cl_boot to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cl_boot, align 4
  %cl_id = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_verf_mismatch, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cl_id, align 4
  %cl_verifier = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_verf_mismatch, ptr %1, i32 0, i32 3
  %call1 = tail call ptr @trace_print_hex_seq(ptr noundef %tmp_seq, ptr noundef %cl_verifier, i32 noundef 8, i1 noundef zeroext true) #9
  %new_verifier = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_verf_mismatch, ptr %1, i32 0, i32 4
  %call3 = tail call ptr @trace_print_hex_seq(ptr noundef %tmp_seq, ptr noundef %new_verifier, i32 noundef 8, i1 noundef zeroext true) #9
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_verf_mismatch, ptr %1, i32 0, i32 5
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.94, i32 noundef %3, i32 noundef %5, ptr noundef %call1, ptr noundef %call3, ptr noundef %addr) #9
  %call5 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_clid_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_class, ptr %1, i32 0, i32 3
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_class, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %3, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %verifier = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_class, ptr %1, i32 0, i32 5
  %call2 = tail call ptr @trace_print_hex_seq(ptr noundef %tmp_seq, ptr noundef %verifier, i32 noundef 8, i1 noundef zeroext true) #9
  %flavor = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_class, ptr %1, i32 0, i32 4
  %4 = ptrtoint ptr %flavor to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flavor, align 4
  %call3 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_nfsd_clid_class.symbols) #9
  %cl_boot = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_class, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %cl_boot to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cl_boot, align 4
  %cl_id = getelementptr inbounds %struct.trace_event_raw_nfsd_clid_class, ptr %1, i32 0, i32 2
  %8 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %cl_id, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.96, ptr noundef %addr, ptr noundef %add.ptr, ptr noundef %call2, ptr noundef %call3, i32 noundef %7, i32 noundef %9) #9
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_file_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %nf_hashval = getelementptr inbounds %struct.trace_event_raw_nfsd_file_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %nf_hashval to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nf_hashval, align 4
  %nf_inode = getelementptr inbounds %struct.trace_event_raw_nfsd_file_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %nf_inode to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nf_inode, align 4
  %nf_ref = getelementptr inbounds %struct.trace_event_raw_nfsd_file_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %nf_ref to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %nf_ref, align 4
  %nf_flags = getelementptr inbounds %struct.trace_event_raw_nfsd_file_class, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %nf_flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %nf_flags, align 4
  %call1 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.112, i32 noundef %9, ptr noundef nonnull @trace_raw_output_nfsd_file_class.__flags) #9
  %nf_may = getelementptr inbounds %struct.trace_event_raw_nfsd_file_class, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %nf_may to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %nf_may, align 4
  %conv = zext i8 %11 to i32
  %call3 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.112, i32 noundef %conv, ptr noundef nonnull @trace_raw_output_nfsd_file_class.__flags.113) #9
  %nf_file = getelementptr inbounds %struct.trace_event_raw_nfsd_file_class, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %nf_file to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %nf_file, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.106, i32 noundef %3, ptr noundef %5, i32 noundef %7, ptr noundef %call1, ptr noundef %call3, ptr noundef %13) #9
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_flags_seq(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_file_acquire(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %xid, align 4
  %hash = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %hash to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %hash, align 4
  %inode = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %inode, align 4
  %may_flags = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %may_flags to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %may_flags, align 4
  %call1 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.112, i32 noundef %9, ptr noundef nonnull @trace_raw_output_nfsd_file_acquire.__flags) #9
  %nf_ref = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %nf_ref to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %nf_ref, align 4
  %nf_flags = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %nf_flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %nf_flags, align 4
  %call3 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.112, i32 noundef %13, ptr noundef nonnull @trace_raw_output_nfsd_file_acquire.__flags.131) #9
  %nf_may = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %nf_may to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %nf_may, align 4
  %call5 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.112, i32 noundef %15, ptr noundef nonnull @trace_raw_output_nfsd_file_acquire.__flags.132) #9
  %nf_file = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %nf_file to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %nf_file, align 4
  %status = getelementptr inbounds %struct.trace_event_raw_nfsd_file_acquire, ptr %1, i32 0, i32 9
  %18 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.130, i32 noundef %3, i32 noundef %5, ptr noundef %7, ptr noundef %call1, i32 noundef %11, ptr noundef %call3, ptr noundef %call5, ptr noundef %17, i32 noundef %19) #9
  %call6 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_file_search_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %hash = getelementptr inbounds %struct.trace_event_raw_nfsd_file_search_class, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %hash to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %hash, align 4
  %inode = getelementptr inbounds %struct.trace_event_raw_nfsd_file_search_class, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %inode, align 4
  %found = getelementptr inbounds %struct.trace_event_raw_nfsd_file_search_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %found to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %found, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.135, i32 noundef %3, ptr noundef %5, i32 noundef %7) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_file_fsnotify_handle_event(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %inode = getelementptr inbounds %struct.trace_event_raw_nfsd_file_fsnotify_handle_event, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %inode to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %inode, align 4
  %nlink = getelementptr inbounds %struct.trace_event_raw_nfsd_file_fsnotify_handle_event, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %nlink to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nlink, align 4
  %mode = getelementptr inbounds %struct.trace_event_raw_nfsd_file_fsnotify_handle_event, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %mode to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %mode, align 4
  %conv = zext i16 %7 to i32
  %mask = getelementptr inbounds %struct.trace_event_raw_nfsd_file_fsnotify_handle_event, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %mask to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %mask, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.140, ptr noundef %3, i32 noundef %5, i32 noundef %conv, i32 noundef %9) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_drc_found(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %boot_time = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_found, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %boot_time to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %boot_time, align 8
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_found, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %xid, align 4
  %result = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_found, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %result to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %result, align 8
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_nfsd_drc_found.symbols) #9
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.142, i64 noundef %3, i32 noundef %5, ptr noundef %call1) #9
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_drc_mismatch(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %boot_time = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_mismatch, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %boot_time to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %boot_time, align 8
  %xid = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_mismatch, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %xid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %xid, align 8
  %cached = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_mismatch, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %cached to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cached, align 4
  %ingress = getelementptr inbounds %struct.trace_event_raw_nfsd_drc_mismatch, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %ingress to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ingress, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.148, i64 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_cb_args(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_args, ptr %1, i32 0, i32 5
  %cl_boot = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_args, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cl_boot to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cl_boot, align 4
  %cl_id = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_args, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cl_id, align 4
  %prog = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_args, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %prog, align 4
  %ident = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_args, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %ident to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %ident, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.151, ptr noundef %addr, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_cb_nodelegs(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %cl_boot = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_nodelegs, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cl_boot to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cl_boot, align 4
  %cl_id = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_nodelegs, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cl_id, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.73, i32 noundef %3, i32 noundef %5) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_cb_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_class, ptr %1, i32 0, i32 4
  %cl_boot = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_class, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %cl_boot to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cl_boot, align 4
  %cl_id = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_class, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cl_id, align 4
  %state = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_class, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %state to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %state, align 4
  %call1 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_nfsd_cb_class.symbols) #9
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.153, ptr noundef %addr, i32 noundef %3, i32 noundef %5, ptr noundef %call1) #9
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nofree null_pointer_is_valid
declare dso_local i32 @strlcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_cb_setup(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup, ptr %1, i32 0, i32 4
  %cl_boot = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cl_boot to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cl_boot, align 4
  %cl_id = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cl_id, align 4
  %netid = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup, ptr %1, i32 0, i32 5
  %authflavor = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %authflavor to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %authflavor, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_nfsd_cb_setup.symbols) #9
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.160, ptr noundef %addr, i32 noundef %3, i32 noundef %5, ptr noundef %netid, ptr noundef %call2) #9
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_cb_setup_err(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup_err, ptr %1, i32 0, i32 4
  %cl_boot = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup_err, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %cl_boot to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cl_boot, align 4
  %cl_id = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup_err, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cl_id, align 4
  %error = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_setup_err, ptr %1, i32 0, i32 1
  %6 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %error, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.162, ptr noundef %addr, i32 noundef %3, i32 noundef %5, i32 noundef %7) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_cb_recall(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_recall, ptr %1, i32 0, i32 5
  %cl_boot = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_recall, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cl_boot to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cl_boot, align 4
  %cl_id = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_recall, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cl_id, align 4
  %si_id = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_recall, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %si_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %si_id, align 4
  %si_generation = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_recall, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %si_generation to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %si_generation, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.163, ptr noundef %addr, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_cb_notify_lock(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_notify_lock, ptr %1, i32 0, i32 4
  %cl_boot = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_notify_lock, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cl_boot to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cl_boot, align 4
  %cl_id = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_notify_lock, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cl_id, align 4
  %fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_notify_lock, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %fh_hash to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %fh_hash, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.164, ptr noundef %addr, i32 noundef %3, i32 noundef %5, i32 noundef %7) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_nfsd_cb_offload(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #11
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #9
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #11
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %addr = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %1, i32 0, i32 8
  %cl_boot = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %cl_boot to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cl_boot, align 8
  %cl_id = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %cl_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %cl_id, align 4
  %si_id = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %si_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %si_id, align 8
  %si_generation = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %si_generation to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %si_generation, align 4
  %fh_hash = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %fh_hash to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %fh_hash, align 8
  %count = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %1, i32 0, i32 7
  %12 = ptrtoint ptr %count to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %count, align 8
  %status = getelementptr inbounds %struct.trace_event_raw_nfsd_cb_offload, ptr %1, i32 0, i32 6
  %14 = ptrtoint ptr %status to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %status, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.165, ptr noundef %addr, i32 noundef %3, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i64 noundef %13, i32 noundef %15) #9
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #7

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #8

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #8

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run4(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run5(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run3(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run7(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run6(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #9

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #10 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 361)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #10 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 361)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #4 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #5 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #7 = { nounwind readonly }
attributes #8 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #9 = { nounwind }
attributes #10 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #11 = { nomerge }
attributes #12 = { nobuiltin nounwind }
attributes #13 = { nobuiltin }
attributes #14 = { nounwind readonly willreturn }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !10, !11, !12, !14, !15, !16, !18, !19, !20, !22, !23, !24, !26, !27, !28, !30, !31, !32, !34, !35, !36, !38, !39, !40, !42, !43, !44, !46, !47, !48, !50, !51, !52, !54, !55, !56, !58, !59, !60, !62, !63, !64, !66, !67, !68, !70, !71, !72, !74, !75, !76, !78, !79, !80, !82, !83, !84, !86, !87, !88, !90, !91, !92, !94, !95, !96, !98, !99, !100, !102, !103, !104, !106, !107, !108, !110, !111, !112, !114, !115, !116, !118, !119, !120, !122, !123, !124, !126, !127, !128, !130, !131, !132, !134, !135, !136, !138, !139, !140, !142, !143, !144, !146, !147, !148, !150, !151, !152, !154, !155, !156, !158, !159, !160, !162, !163, !164, !166, !167, !168, !170, !171, !172, !174, !175, !176, !178, !179, !180, !182, !183, !184, !186, !187, !188, !190, !191, !192, !194, !195, !196, !198, !199, !200, !202, !203, !204, !206, !207, !208, !210, !211, !212, !214, !215, !216, !218, !219, !220, !222, !223, !224, !226, !227, !228, !230, !231, !232, !234, !235, !236, !238, !239, !240, !242, !243, !244, !246, !247, !248, !250, !251, !252, !254, !255, !256, !258, !259, !260, !262, !263, !264, !266, !267, !268, !270, !271, !272, !274, !275, !276, !278, !279, !280, !282, !283, !284, !286, !287, !288, !290, !291, !292, !294, !295, !296, !298, !299, !300, !302, !303, !304, !306, !307, !308, !310, !311, !312, !314, !315, !316, !318, !319, !320, !322, !323, !324, !326, !327, !328, !330, !331, !332, !334, !335, !336, !338, !339, !340, !342, !343, !344, !346, !347, !348, !350, !351, !352, !354, !355, !356, !358, !359, !360, !362, !363, !364, !366, !367, !368, !370, !371, !372, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !430, !431, !432, !433, !434, !435, !436, !437, !439, !440, !441, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !471, !472, !473, !474, !475, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !512, !513, !514, !515, !516, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005}
!llvm.named.register.sp = !{!1006}
!llvm.module.flags = !{!1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014}
!llvm.ident = !{!1015}

!0 = !{ptr @__tracepoint_nfsd_garbage_args_err, !1, !"__tracepoint_nfsd_garbage_args_err", i1 false, i1 false}
!1 = !{!"../fs/nfsd/./trace.h", i32 77, i32 1}
!2 = !{ptr @__tracepoint_ptr_nfsd_garbage_args_err, !1, !"__tracepoint_ptr_nfsd_garbage_args_err", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_nfsd_garbage_args_err, !1, !"__SCK__tp_func_nfsd_garbage_args_err", i1 false, i1 false}
!4 = !{ptr @__tracepoint_nfsd_cant_encode_err, !5, !"__tracepoint_nfsd_cant_encode_err", i1 false, i1 false}
!5 = !{!"../fs/nfsd/./trace.h", i32 78, i32 1}
!6 = !{ptr @__tracepoint_ptr_nfsd_cant_encode_err, !5, !"__tracepoint_ptr_nfsd_cant_encode_err", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_nfsd_cant_encode_err, !5, !"__SCK__tp_func_nfsd_cant_encode_err", i1 false, i1 false}
!8 = !{ptr @__tracepoint_nfsd_compound, !9, !"__tracepoint_nfsd_compound", i1 false, i1 false}
!9 = !{!"../fs/nfsd/./trace.h", i32 96, i32 1}
!10 = !{ptr @__tracepoint_ptr_nfsd_compound, !9, !"__tracepoint_ptr_nfsd_compound", i1 false, i1 false}
!11 = !{ptr @__SCK__tp_func_nfsd_compound, !9, !"__SCK__tp_func_nfsd_compound", i1 false, i1 false}
!12 = !{ptr @__tracepoint_nfsd_compound_status, !13, !"__tracepoint_nfsd_compound_status", i1 false, i1 false}
!13 = !{!"../fs/nfsd/./trace.h", i32 112, i32 1}
!14 = !{ptr @__tracepoint_ptr_nfsd_compound_status, !13, !"__tracepoint_ptr_nfsd_compound_status", i1 false, i1 false}
!15 = !{ptr @__SCK__tp_func_nfsd_compound_status, !13, !"__SCK__tp_func_nfsd_compound_status", i1 false, i1 false}
!16 = !{ptr @__tracepoint_nfsd_compound_decode_err, !17, !"__tracepoint_nfsd_compound_decode_err", i1 false, i1 false}
!17 = !{!"../fs/nfsd/./trace.h", i32 135, i32 1}
!18 = !{ptr @__tracepoint_ptr_nfsd_compound_decode_err, !17, !"__tracepoint_ptr_nfsd_compound_decode_err", i1 false, i1 false}
!19 = !{ptr @__SCK__tp_func_nfsd_compound_decode_err, !17, !"__SCK__tp_func_nfsd_compound_decode_err", i1 false, i1 false}
!20 = !{ptr @__tracepoint_nfsd_compound_encode_err, !21, !"__tracepoint_nfsd_compound_encode_err", i1 false, i1 false}
!21 = !{!"../fs/nfsd/./trace.h", i32 163, i32 1}
!22 = !{ptr @__tracepoint_ptr_nfsd_compound_encode_err, !21, !"__tracepoint_ptr_nfsd_compound_encode_err", i1 false, i1 false}
!23 = !{ptr @__SCK__tp_func_nfsd_compound_encode_err, !21, !"__SCK__tp_func_nfsd_compound_encode_err", i1 false, i1 false}
!24 = !{ptr @__tracepoint_nfsd_set_fh_dentry_badexport, !25, !"__tracepoint_nfsd_set_fh_dentry_badexport", i1 false, i1 false}
!25 = !{!"../fs/nfsd/./trace.h", i32 212, i32 1}
!26 = !{ptr @__tracepoint_ptr_nfsd_set_fh_dentry_badexport, !25, !"__tracepoint_ptr_nfsd_set_fh_dentry_badexport", i1 false, i1 false}
!27 = !{ptr @__SCK__tp_func_nfsd_set_fh_dentry_badexport, !25, !"__SCK__tp_func_nfsd_set_fh_dentry_badexport", i1 false, i1 false}
!28 = !{ptr @__tracepoint_nfsd_set_fh_dentry_badhandle, !29, !"__tracepoint_nfsd_set_fh_dentry_badhandle", i1 false, i1 false}
!29 = !{!"../fs/nfsd/./trace.h", i32 213, i32 1}
!30 = !{ptr @__tracepoint_ptr_nfsd_set_fh_dentry_badhandle, !29, !"__tracepoint_ptr_nfsd_set_fh_dentry_badhandle", i1 false, i1 false}
!31 = !{ptr @__SCK__tp_func_nfsd_set_fh_dentry_badhandle, !29, !"__SCK__tp_func_nfsd_set_fh_dentry_badhandle", i1 false, i1 false}
!32 = !{ptr @__tracepoint_nfsd_exp_find_key, !33, !"__tracepoint_nfsd_exp_find_key", i1 false, i1 false}
!33 = !{!"../fs/nfsd/./trace.h", i32 215, i32 1}
!34 = !{ptr @__tracepoint_ptr_nfsd_exp_find_key, !33, !"__tracepoint_ptr_nfsd_exp_find_key", i1 false, i1 false}
!35 = !{ptr @__SCK__tp_func_nfsd_exp_find_key, !33, !"__SCK__tp_func_nfsd_exp_find_key", i1 false, i1 false}
!36 = !{ptr @__tracepoint_nfsd_expkey_update, !37, !"__tracepoint_nfsd_expkey_update", i1 false, i1 false}
!37 = !{!"../fs/nfsd/./trace.h", i32 239, i32 1}
!38 = !{ptr @__tracepoint_ptr_nfsd_expkey_update, !37, !"__tracepoint_ptr_nfsd_expkey_update", i1 false, i1 false}
!39 = !{ptr @__SCK__tp_func_nfsd_expkey_update, !37, !"__SCK__tp_func_nfsd_expkey_update", i1 false, i1 false}
!40 = !{ptr @__tracepoint_nfsd_exp_get_by_name, !41, !"__tracepoint_nfsd_exp_get_by_name", i1 false, i1 false}
!41 = !{!"../fs/nfsd/./trace.h", i32 265, i32 1}
!42 = !{ptr @__tracepoint_ptr_nfsd_exp_get_by_name, !41, !"__tracepoint_ptr_nfsd_exp_get_by_name", i1 false, i1 false}
!43 = !{ptr @__SCK__tp_func_nfsd_exp_get_by_name, !41, !"__SCK__tp_func_nfsd_exp_get_by_name", i1 false, i1 false}
!44 = !{ptr @__tracepoint_nfsd_export_update, !45, !"__tracepoint_nfsd_export_update", i1 false, i1 false}
!45 = !{!"../fs/nfsd/./trace.h", i32 286, i32 1}
!46 = !{ptr @__tracepoint_ptr_nfsd_export_update, !45, !"__tracepoint_ptr_nfsd_export_update", i1 false, i1 false}
!47 = !{ptr @__SCK__tp_func_nfsd_export_update, !45, !"__SCK__tp_func_nfsd_export_update", i1 false, i1 false}
!48 = !{ptr @__tracepoint_nfsd_read_start, !49, !"__tracepoint_nfsd_read_start", i1 false, i1 false}
!49 = !{!"../fs/nfsd/./trace.h", i32 337, i32 1}
!50 = !{ptr @__tracepoint_ptr_nfsd_read_start, !49, !"__tracepoint_ptr_nfsd_read_start", i1 false, i1 false}
!51 = !{ptr @__SCK__tp_func_nfsd_read_start, !49, !"__SCK__tp_func_nfsd_read_start", i1 false, i1 false}
!52 = !{ptr @__tracepoint_nfsd_read_splice, !53, !"__tracepoint_nfsd_read_splice", i1 false, i1 false}
!53 = !{!"../fs/nfsd/./trace.h", i32 338, i32 1}
!54 = !{ptr @__tracepoint_ptr_nfsd_read_splice, !53, !"__tracepoint_ptr_nfsd_read_splice", i1 false, i1 false}
!55 = !{ptr @__SCK__tp_func_nfsd_read_splice, !53, !"__SCK__tp_func_nfsd_read_splice", i1 false, i1 false}
!56 = !{ptr @__tracepoint_nfsd_read_vector, !57, !"__tracepoint_nfsd_read_vector", i1 false, i1 false}
!57 = !{!"../fs/nfsd/./trace.h", i32 339, i32 1}
!58 = !{ptr @__tracepoint_ptr_nfsd_read_vector, !57, !"__tracepoint_ptr_nfsd_read_vector", i1 false, i1 false}
!59 = !{ptr @__SCK__tp_func_nfsd_read_vector, !57, !"__SCK__tp_func_nfsd_read_vector", i1 false, i1 false}
!60 = !{ptr @__tracepoint_nfsd_read_io_done, !61, !"__tracepoint_nfsd_read_io_done", i1 false, i1 false}
!61 = !{!"../fs/nfsd/./trace.h", i32 340, i32 1}
!62 = !{ptr @__tracepoint_ptr_nfsd_read_io_done, !61, !"__tracepoint_ptr_nfsd_read_io_done", i1 false, i1 false}
!63 = !{ptr @__SCK__tp_func_nfsd_read_io_done, !61, !"__SCK__tp_func_nfsd_read_io_done", i1 false, i1 false}
!64 = !{ptr @__tracepoint_nfsd_read_done, !65, !"__tracepoint_nfsd_read_done", i1 false, i1 false}
!65 = !{!"../fs/nfsd/./trace.h", i32 341, i32 1}
!66 = !{ptr @__tracepoint_ptr_nfsd_read_done, !65, !"__tracepoint_ptr_nfsd_read_done", i1 false, i1 false}
!67 = !{ptr @__SCK__tp_func_nfsd_read_done, !65, !"__SCK__tp_func_nfsd_read_done", i1 false, i1 false}
!68 = !{ptr @__tracepoint_nfsd_write_start, !69, !"__tracepoint_nfsd_write_start", i1 false, i1 false}
!69 = !{!"../fs/nfsd/./trace.h", i32 342, i32 1}
!70 = !{ptr @__tracepoint_ptr_nfsd_write_start, !69, !"__tracepoint_ptr_nfsd_write_start", i1 false, i1 false}
!71 = !{ptr @__SCK__tp_func_nfsd_write_start, !69, !"__SCK__tp_func_nfsd_write_start", i1 false, i1 false}
!72 = !{ptr @__tracepoint_nfsd_write_opened, !73, !"__tracepoint_nfsd_write_opened", i1 false, i1 false}
!73 = !{!"../fs/nfsd/./trace.h", i32 343, i32 1}
!74 = !{ptr @__tracepoint_ptr_nfsd_write_opened, !73, !"__tracepoint_ptr_nfsd_write_opened", i1 false, i1 false}
!75 = !{ptr @__SCK__tp_func_nfsd_write_opened, !73, !"__SCK__tp_func_nfsd_write_opened", i1 false, i1 false}
!76 = !{ptr @__tracepoint_nfsd_write_io_done, !77, !"__tracepoint_nfsd_write_io_done", i1 false, i1 false}
!77 = !{!"../fs/nfsd/./trace.h", i32 344, i32 1}
!78 = !{ptr @__tracepoint_ptr_nfsd_write_io_done, !77, !"__tracepoint_ptr_nfsd_write_io_done", i1 false, i1 false}
!79 = !{ptr @__SCK__tp_func_nfsd_write_io_done, !77, !"__SCK__tp_func_nfsd_write_io_done", i1 false, i1 false}
!80 = !{ptr @__tracepoint_nfsd_write_done, !81, !"__tracepoint_nfsd_write_done", i1 false, i1 false}
!81 = !{!"../fs/nfsd/./trace.h", i32 345, i32 1}
!82 = !{ptr @__tracepoint_ptr_nfsd_write_done, !81, !"__tracepoint_ptr_nfsd_write_done", i1 false, i1 false}
!83 = !{ptr @__SCK__tp_func_nfsd_write_done, !81, !"__SCK__tp_func_nfsd_write_done", i1 false, i1 false}
!84 = !{ptr @__tracepoint_nfsd_read_err, !85, !"__tracepoint_nfsd_read_err", i1 false, i1 false}
!85 = !{!"../fs/nfsd/./trace.h", i32 378, i32 1}
!86 = !{ptr @__tracepoint_ptr_nfsd_read_err, !85, !"__tracepoint_ptr_nfsd_read_err", i1 false, i1 false}
!87 = !{ptr @__SCK__tp_func_nfsd_read_err, !85, !"__SCK__tp_func_nfsd_read_err", i1 false, i1 false}
!88 = !{ptr @__tracepoint_nfsd_write_err, !89, !"__tracepoint_nfsd_write_err", i1 false, i1 false}
!89 = !{!"../fs/nfsd/./trace.h", i32 379, i32 1}
!90 = !{ptr @__tracepoint_ptr_nfsd_write_err, !89, !"__tracepoint_ptr_nfsd_write_err", i1 false, i1 false}
!91 = !{ptr @__SCK__tp_func_nfsd_write_err, !89, !"__SCK__tp_func_nfsd_write_err", i1 false, i1 false}
!92 = !{ptr @__tracepoint_nfsd_dirent, !93, !"__tracepoint_nfsd_dirent", i1 false, i1 false}
!93 = !{!"../fs/nfsd/./trace.h", i32 381, i32 1}
!94 = !{ptr @__tracepoint_ptr_nfsd_dirent, !93, !"__tracepoint_ptr_nfsd_dirent", i1 false, i1 false}
!95 = !{ptr @__SCK__tp_func_nfsd_dirent, !93, !"__SCK__tp_func_nfsd_dirent", i1 false, i1 false}
!96 = !{ptr @__tracepoint_nfsd_clone_file_range_err, !97, !"__tracepoint_nfsd_clone_file_range_err", i1 false, i1 false}
!97 = !{!"../fs/nfsd/./trace.h", i32 450, i32 1}
!98 = !{ptr @__tracepoint_ptr_nfsd_clone_file_range_err, !97, !"__tracepoint_ptr_nfsd_clone_file_range_err", i1 false, i1 false}
!99 = !{ptr @__SCK__tp_func_nfsd_clone_file_range_err, !97, !"__SCK__tp_func_nfsd_clone_file_range_err", i1 false, i1 false}
!100 = !{ptr @__tracepoint_nfsd_layoutstate_alloc, !101, !"__tracepoint_nfsd_layoutstate_alloc", i1 false, i1 false}
!101 = !{!"../fs/nfsd/./trace.h", i32 483, i32 1}
!102 = !{ptr @__tracepoint_ptr_nfsd_layoutstate_alloc, !101, !"__tracepoint_ptr_nfsd_layoutstate_alloc", i1 false, i1 false}
!103 = !{ptr @__SCK__tp_func_nfsd_layoutstate_alloc, !101, !"__SCK__tp_func_nfsd_layoutstate_alloc", i1 false, i1 false}
!104 = !{ptr @__tracepoint_nfsd_layoutstate_unhash, !105, !"__tracepoint_nfsd_layoutstate_unhash", i1 false, i1 false}
!105 = !{!"../fs/nfsd/./trace.h", i32 484, i32 1}
!106 = !{ptr @__tracepoint_ptr_nfsd_layoutstate_unhash, !105, !"__tracepoint_ptr_nfsd_layoutstate_unhash", i1 false, i1 false}
!107 = !{ptr @__SCK__tp_func_nfsd_layoutstate_unhash, !105, !"__SCK__tp_func_nfsd_layoutstate_unhash", i1 false, i1 false}
!108 = !{ptr @__tracepoint_nfsd_layoutstate_free, !109, !"__tracepoint_nfsd_layoutstate_free", i1 false, i1 false}
!109 = !{!"../fs/nfsd/./trace.h", i32 485, i32 1}
!110 = !{ptr @__tracepoint_ptr_nfsd_layoutstate_free, !109, !"__tracepoint_ptr_nfsd_layoutstate_free", i1 false, i1 false}
!111 = !{ptr @__SCK__tp_func_nfsd_layoutstate_free, !109, !"__SCK__tp_func_nfsd_layoutstate_free", i1 false, i1 false}
!112 = !{ptr @__tracepoint_nfsd_layout_get_lookup_fail, !113, !"__tracepoint_nfsd_layout_get_lookup_fail", i1 false, i1 false}
!113 = !{!"../fs/nfsd/./trace.h", i32 486, i32 1}
!114 = !{ptr @__tracepoint_ptr_nfsd_layout_get_lookup_fail, !113, !"__tracepoint_ptr_nfsd_layout_get_lookup_fail", i1 false, i1 false}
!115 = !{ptr @__SCK__tp_func_nfsd_layout_get_lookup_fail, !113, !"__SCK__tp_func_nfsd_layout_get_lookup_fail", i1 false, i1 false}
!116 = !{ptr @__tracepoint_nfsd_layout_commit_lookup_fail, !117, !"__tracepoint_nfsd_layout_commit_lookup_fail", i1 false, i1 false}
!117 = !{!"../fs/nfsd/./trace.h", i32 487, i32 1}
!118 = !{ptr @__tracepoint_ptr_nfsd_layout_commit_lookup_fail, !117, !"__tracepoint_ptr_nfsd_layout_commit_lookup_fail", i1 false, i1 false}
!119 = !{ptr @__SCK__tp_func_nfsd_layout_commit_lookup_fail, !117, !"__SCK__tp_func_nfsd_layout_commit_lookup_fail", i1 false, i1 false}
!120 = !{ptr @__tracepoint_nfsd_layout_return_lookup_fail, !121, !"__tracepoint_nfsd_layout_return_lookup_fail", i1 false, i1 false}
!121 = !{!"../fs/nfsd/./trace.h", i32 488, i32 1}
!122 = !{ptr @__tracepoint_ptr_nfsd_layout_return_lookup_fail, !121, !"__tracepoint_ptr_nfsd_layout_return_lookup_fail", i1 false, i1 false}
!123 = !{ptr @__SCK__tp_func_nfsd_layout_return_lookup_fail, !121, !"__SCK__tp_func_nfsd_layout_return_lookup_fail", i1 false, i1 false}
!124 = !{ptr @__tracepoint_nfsd_layout_recall, !125, !"__tracepoint_nfsd_layout_recall", i1 false, i1 false}
!125 = !{!"../fs/nfsd/./trace.h", i32 489, i32 1}
!126 = !{ptr @__tracepoint_ptr_nfsd_layout_recall, !125, !"__tracepoint_ptr_nfsd_layout_recall", i1 false, i1 false}
!127 = !{ptr @__SCK__tp_func_nfsd_layout_recall, !125, !"__SCK__tp_func_nfsd_layout_recall", i1 false, i1 false}
!128 = !{ptr @__tracepoint_nfsd_layout_recall_done, !129, !"__tracepoint_nfsd_layout_recall_done", i1 false, i1 false}
!129 = !{!"../fs/nfsd/./trace.h", i32 490, i32 1}
!130 = !{ptr @__tracepoint_ptr_nfsd_layout_recall_done, !129, !"__tracepoint_ptr_nfsd_layout_recall_done", i1 false, i1 false}
!131 = !{ptr @__SCK__tp_func_nfsd_layout_recall_done, !129, !"__SCK__tp_func_nfsd_layout_recall_done", i1 false, i1 false}
!132 = !{ptr @__tracepoint_nfsd_layout_recall_fail, !133, !"__tracepoint_nfsd_layout_recall_fail", i1 false, i1 false}
!133 = !{!"../fs/nfsd/./trace.h", i32 491, i32 1}
!134 = !{ptr @__tracepoint_ptr_nfsd_layout_recall_fail, !133, !"__tracepoint_ptr_nfsd_layout_recall_fail", i1 false, i1 false}
!135 = !{ptr @__SCK__tp_func_nfsd_layout_recall_fail, !133, !"__SCK__tp_func_nfsd_layout_recall_fail", i1 false, i1 false}
!136 = !{ptr @__tracepoint_nfsd_layout_recall_release, !137, !"__tracepoint_nfsd_layout_recall_release", i1 false, i1 false}
!137 = !{!"../fs/nfsd/./trace.h", i32 492, i32 1}
!138 = !{ptr @__tracepoint_ptr_nfsd_layout_recall_release, !137, !"__tracepoint_ptr_nfsd_layout_recall_release", i1 false, i1 false}
!139 = !{ptr @__SCK__tp_func_nfsd_layout_recall_release, !137, !"__SCK__tp_func_nfsd_layout_recall_release", i1 false, i1 false}
!140 = !{ptr @__tracepoint_nfsd_open, !141, !"__tracepoint_nfsd_open", i1 false, i1 false}
!141 = !{!"../fs/nfsd/./trace.h", i32 494, i32 1}
!142 = !{ptr @__tracepoint_ptr_nfsd_open, !141, !"__tracepoint_ptr_nfsd_open", i1 false, i1 false}
!143 = !{ptr @__SCK__tp_func_nfsd_open, !141, !"__SCK__tp_func_nfsd_open", i1 false, i1 false}
!144 = !{ptr @__tracepoint_nfsd_deleg_read, !145, !"__tracepoint_nfsd_deleg_read", i1 false, i1 false}
!145 = !{!"../fs/nfsd/./trace.h", i32 495, i32 1}
!146 = !{ptr @__tracepoint_ptr_nfsd_deleg_read, !145, !"__tracepoint_ptr_nfsd_deleg_read", i1 false, i1 false}
!147 = !{ptr @__SCK__tp_func_nfsd_deleg_read, !145, !"__SCK__tp_func_nfsd_deleg_read", i1 false, i1 false}
!148 = !{ptr @__tracepoint_nfsd_deleg_recall, !149, !"__tracepoint_nfsd_deleg_recall", i1 false, i1 false}
!149 = !{!"../fs/nfsd/./trace.h", i32 496, i32 1}
!150 = !{ptr @__tracepoint_ptr_nfsd_deleg_recall, !149, !"__tracepoint_ptr_nfsd_deleg_recall", i1 false, i1 false}
!151 = !{ptr @__SCK__tp_func_nfsd_deleg_recall, !149, !"__SCK__tp_func_nfsd_deleg_recall", i1 false, i1 false}
!152 = !{ptr @__tracepoint_nfsd_preprocess, !153, !"__tracepoint_nfsd_preprocess", i1 false, i1 false}
!153 = !{!"../fs/nfsd/./trace.h", i32 525, i32 1}
!154 = !{ptr @__tracepoint_ptr_nfsd_preprocess, !153, !"__tracepoint_ptr_nfsd_preprocess", i1 false, i1 false}
!155 = !{ptr @__SCK__tp_func_nfsd_preprocess, !153, !"__SCK__tp_func_nfsd_preprocess", i1 false, i1 false}
!156 = !{ptr @__tracepoint_nfsd_open_confirm, !157, !"__tracepoint_nfsd_open_confirm", i1 false, i1 false}
!157 = !{!"../fs/nfsd/./trace.h", i32 526, i32 1}
!158 = !{ptr @__tracepoint_ptr_nfsd_open_confirm, !157, !"__tracepoint_ptr_nfsd_open_confirm", i1 false, i1 false}
!159 = !{ptr @__SCK__tp_func_nfsd_open_confirm, !157, !"__SCK__tp_func_nfsd_open_confirm", i1 false, i1 false}
!160 = !{ptr @__tracepoint_nfsd_clid_expire_unconf, !161, !"__tracepoint_nfsd_clid_expire_unconf", i1 false, i1 false}
!161 = !{!"../fs/nfsd/./trace.h", i32 547, i32 1}
!162 = !{ptr @__tracepoint_ptr_nfsd_clid_expire_unconf, !161, !"__tracepoint_ptr_nfsd_clid_expire_unconf", i1 false, i1 false}
!163 = !{ptr @__SCK__tp_func_nfsd_clid_expire_unconf, !161, !"__SCK__tp_func_nfsd_clid_expire_unconf", i1 false, i1 false}
!164 = !{ptr @__tracepoint_nfsd_clid_reclaim_complete, !165, !"__tracepoint_nfsd_clid_reclaim_complete", i1 false, i1 false}
!165 = !{!"../fs/nfsd/./trace.h", i32 548, i32 1}
!166 = !{ptr @__tracepoint_ptr_nfsd_clid_reclaim_complete, !165, !"__tracepoint_ptr_nfsd_clid_reclaim_complete", i1 false, i1 false}
!167 = !{ptr @__SCK__tp_func_nfsd_clid_reclaim_complete, !165, !"__SCK__tp_func_nfsd_clid_reclaim_complete", i1 false, i1 false}
!168 = !{ptr @__tracepoint_nfsd_clid_confirmed, !169, !"__tracepoint_nfsd_clid_confirmed", i1 false, i1 false}
!169 = !{!"../fs/nfsd/./trace.h", i32 549, i32 1}
!170 = !{ptr @__tracepoint_ptr_nfsd_clid_confirmed, !169, !"__tracepoint_ptr_nfsd_clid_confirmed", i1 false, i1 false}
!171 = !{ptr @__SCK__tp_func_nfsd_clid_confirmed, !169, !"__SCK__tp_func_nfsd_clid_confirmed", i1 false, i1 false}
!172 = !{ptr @__tracepoint_nfsd_clid_destroyed, !173, !"__tracepoint_nfsd_clid_destroyed", i1 false, i1 false}
!173 = !{!"../fs/nfsd/./trace.h", i32 550, i32 1}
!174 = !{ptr @__tracepoint_ptr_nfsd_clid_destroyed, !173, !"__tracepoint_ptr_nfsd_clid_destroyed", i1 false, i1 false}
!175 = !{ptr @__SCK__tp_func_nfsd_clid_destroyed, !173, !"__SCK__tp_func_nfsd_clid_destroyed", i1 false, i1 false}
!176 = !{ptr @__tracepoint_nfsd_clid_admin_expired, !177, !"__tracepoint_nfsd_clid_admin_expired", i1 false, i1 false}
!177 = !{!"../fs/nfsd/./trace.h", i32 551, i32 1}
!178 = !{ptr @__tracepoint_ptr_nfsd_clid_admin_expired, !177, !"__tracepoint_ptr_nfsd_clid_admin_expired", i1 false, i1 false}
!179 = !{ptr @__SCK__tp_func_nfsd_clid_admin_expired, !177, !"__SCK__tp_func_nfsd_clid_admin_expired", i1 false, i1 false}
!180 = !{ptr @__tracepoint_nfsd_clid_replaced, !181, !"__tracepoint_nfsd_clid_replaced", i1 false, i1 false}
!181 = !{!"../fs/nfsd/./trace.h", i32 552, i32 1}
!182 = !{ptr @__tracepoint_ptr_nfsd_clid_replaced, !181, !"__tracepoint_ptr_nfsd_clid_replaced", i1 false, i1 false}
!183 = !{ptr @__SCK__tp_func_nfsd_clid_replaced, !181, !"__SCK__tp_func_nfsd_clid_replaced", i1 false, i1 false}
!184 = !{ptr @__tracepoint_nfsd_clid_purged, !185, !"__tracepoint_nfsd_clid_purged", i1 false, i1 false}
!185 = !{!"../fs/nfsd/./trace.h", i32 553, i32 1}
!186 = !{ptr @__tracepoint_ptr_nfsd_clid_purged, !185, !"__tracepoint_ptr_nfsd_clid_purged", i1 false, i1 false}
!187 = !{ptr @__SCK__tp_func_nfsd_clid_purged, !185, !"__SCK__tp_func_nfsd_clid_purged", i1 false, i1 false}
!188 = !{ptr @__tracepoint_nfsd_clid_renew, !189, !"__tracepoint_nfsd_clid_renew", i1 false, i1 false}
!189 = !{!"../fs/nfsd/./trace.h", i32 554, i32 1}
!190 = !{ptr @__tracepoint_ptr_nfsd_clid_renew, !189, !"__tracepoint_ptr_nfsd_clid_renew", i1 false, i1 false}
!191 = !{ptr @__SCK__tp_func_nfsd_clid_renew, !189, !"__SCK__tp_func_nfsd_clid_renew", i1 false, i1 false}
!192 = !{ptr @__tracepoint_nfsd_clid_stale, !193, !"__tracepoint_nfsd_clid_stale", i1 false, i1 false}
!193 = !{!"../fs/nfsd/./trace.h", i32 555, i32 1}
!194 = !{ptr @__tracepoint_ptr_nfsd_clid_stale, !193, !"__tracepoint_ptr_nfsd_clid_stale", i1 false, i1 false}
!195 = !{ptr @__SCK__tp_func_nfsd_clid_stale, !193, !"__SCK__tp_func_nfsd_clid_stale", i1 false, i1 false}
!196 = !{ptr @__tracepoint_nfsd_grace_start, !197, !"__tracepoint_nfsd_grace_start", i1 false, i1 false}
!197 = !{!"../fs/nfsd/./trace.h", i32 574, i32 1}
!198 = !{ptr @__tracepoint_ptr_nfsd_grace_start, !197, !"__tracepoint_ptr_nfsd_grace_start", i1 false, i1 false}
!199 = !{ptr @__SCK__tp_func_nfsd_grace_start, !197, !"__SCK__tp_func_nfsd_grace_start", i1 false, i1 false}
!200 = !{ptr @__tracepoint_nfsd_grace_complete, !201, !"__tracepoint_nfsd_grace_complete", i1 false, i1 false}
!201 = !{!"../fs/nfsd/./trace.h", i32 575, i32 1}
!202 = !{ptr @__tracepoint_ptr_nfsd_grace_complete, !201, !"__tracepoint_ptr_nfsd_grace_complete", i1 false, i1 false}
!203 = !{ptr @__SCK__tp_func_nfsd_grace_complete, !201, !"__SCK__tp_func_nfsd_grace_complete", i1 false, i1 false}
!204 = !{ptr @__tracepoint_nfsd_writeverf_reset, !205, !"__tracepoint_nfsd_writeverf_reset", i1 false, i1 false}
!205 = !{!"../fs/nfsd/./trace.h", i32 577, i32 1}
!206 = !{ptr @__tracepoint_ptr_nfsd_writeverf_reset, !205, !"__tracepoint_ptr_nfsd_writeverf_reset", i1 false, i1 false}
!207 = !{ptr @__SCK__tp_func_nfsd_writeverf_reset, !205, !"__SCK__tp_func_nfsd_writeverf_reset", i1 false, i1 false}
!208 = !{ptr @__tracepoint_nfsd_clid_cred_mismatch, !209, !"__tracepoint_nfsd_clid_cred_mismatch", i1 false, i1 false}
!209 = !{!"../fs/nfsd/./trace.h", i32 605, i32 1}
!210 = !{ptr @__tracepoint_ptr_nfsd_clid_cred_mismatch, !209, !"__tracepoint_ptr_nfsd_clid_cred_mismatch", i1 false, i1 false}
!211 = !{ptr @__SCK__tp_func_nfsd_clid_cred_mismatch, !209, !"__SCK__tp_func_nfsd_clid_cred_mismatch", i1 false, i1 false}
!212 = !{ptr @__tracepoint_nfsd_clid_verf_mismatch, !213, !"__tracepoint_nfsd_clid_verf_mismatch", i1 false, i1 false}
!213 = !{!"../fs/nfsd/./trace.h", i32 633, i32 1}
!214 = !{ptr @__tracepoint_ptr_nfsd_clid_verf_mismatch, !213, !"__tracepoint_ptr_nfsd_clid_verf_mismatch", i1 false, i1 false}
!215 = !{ptr @__SCK__tp_func_nfsd_clid_verf_mismatch, !213, !"__SCK__tp_func_nfsd_clid_verf_mismatch", i1 false, i1 false}
!216 = !{ptr @__tracepoint_nfsd_clid_fresh, !217, !"__tracepoint_nfsd_clid_fresh", i1 false, i1 false}
!217 = !{!"../fs/nfsd/./trace.h", i32 698, i32 1}
!218 = !{ptr @__tracepoint_ptr_nfsd_clid_fresh, !217, !"__tracepoint_ptr_nfsd_clid_fresh", i1 false, i1 false}
!219 = !{ptr @__SCK__tp_func_nfsd_clid_fresh, !217, !"__SCK__tp_func_nfsd_clid_fresh", i1 false, i1 false}
!220 = !{ptr @__tracepoint_nfsd_clid_confirmed_r, !221, !"__tracepoint_nfsd_clid_confirmed_r", i1 false, i1 false}
!221 = !{!"../fs/nfsd/./trace.h", i32 699, i32 1}
!222 = !{ptr @__tracepoint_ptr_nfsd_clid_confirmed_r, !221, !"__tracepoint_ptr_nfsd_clid_confirmed_r", i1 false, i1 false}
!223 = !{ptr @__SCK__tp_func_nfsd_clid_confirmed_r, !221, !"__SCK__tp_func_nfsd_clid_confirmed_r", i1 false, i1 false}
!224 = !{ptr @__tracepoint_nfsd_file_alloc, !225, !"__tracepoint_nfsd_file_alloc", i1 false, i1 false}
!225 = !{!"../fs/nfsd/./trace.h", i32 751, i32 1}
!226 = !{ptr @__tracepoint_ptr_nfsd_file_alloc, !225, !"__tracepoint_ptr_nfsd_file_alloc", i1 false, i1 false}
!227 = !{ptr @__SCK__tp_func_nfsd_file_alloc, !225, !"__SCK__tp_func_nfsd_file_alloc", i1 false, i1 false}
!228 = !{ptr @__tracepoint_nfsd_file_put_final, !229, !"__tracepoint_nfsd_file_put_final", i1 false, i1 false}
!229 = !{!"../fs/nfsd/./trace.h", i32 752, i32 1}
!230 = !{ptr @__tracepoint_ptr_nfsd_file_put_final, !229, !"__tracepoint_ptr_nfsd_file_put_final", i1 false, i1 false}
!231 = !{ptr @__SCK__tp_func_nfsd_file_put_final, !229, !"__SCK__tp_func_nfsd_file_put_final", i1 false, i1 false}
!232 = !{ptr @__tracepoint_nfsd_file_unhash, !233, !"__tracepoint_nfsd_file_unhash", i1 false, i1 false}
!233 = !{!"../fs/nfsd/./trace.h", i32 753, i32 1}
!234 = !{ptr @__tracepoint_ptr_nfsd_file_unhash, !233, !"__tracepoint_ptr_nfsd_file_unhash", i1 false, i1 false}
!235 = !{ptr @__SCK__tp_func_nfsd_file_unhash, !233, !"__SCK__tp_func_nfsd_file_unhash", i1 false, i1 false}
!236 = !{ptr @__tracepoint_nfsd_file_put, !237, !"__tracepoint_nfsd_file_put", i1 false, i1 false}
!237 = !{!"../fs/nfsd/./trace.h", i32 754, i32 1}
!238 = !{ptr @__tracepoint_ptr_nfsd_file_put, !237, !"__tracepoint_ptr_nfsd_file_put", i1 false, i1 false}
!239 = !{ptr @__SCK__tp_func_nfsd_file_put, !237, !"__SCK__tp_func_nfsd_file_put", i1 false, i1 false}
!240 = !{ptr @__tracepoint_nfsd_file_unhash_and_release_locked, !241, !"__tracepoint_nfsd_file_unhash_and_release_locked", i1 false, i1 false}
!241 = !{!"../fs/nfsd/./trace.h", i32 755, i32 1}
!242 = !{ptr @__tracepoint_ptr_nfsd_file_unhash_and_release_locked, !241, !"__tracepoint_ptr_nfsd_file_unhash_and_release_locked", i1 false, i1 false}
!243 = !{ptr @__SCK__tp_func_nfsd_file_unhash_and_release_locked, !241, !"__SCK__tp_func_nfsd_file_unhash_and_release_locked", i1 false, i1 false}
!244 = !{ptr @__tracepoint_nfsd_file_acquire, !245, !"__tracepoint_nfsd_file_acquire", i1 false, i1 false}
!245 = !{!"../fs/nfsd/./trace.h", i32 757, i32 1}
!246 = !{ptr @__tracepoint_ptr_nfsd_file_acquire, !245, !"__tracepoint_ptr_nfsd_file_acquire", i1 false, i1 false}
!247 = !{ptr @__SCK__tp_func_nfsd_file_acquire, !245, !"__SCK__tp_func_nfsd_file_acquire", i1 false, i1 false}
!248 = !{ptr @__tracepoint_nfsd_file_close_inode_sync, !249, !"__tracepoint_nfsd_file_close_inode_sync", i1 false, i1 false}
!249 = !{!"../fs/nfsd/./trace.h", i32 818, i32 1}
!250 = !{ptr @__tracepoint_ptr_nfsd_file_close_inode_sync, !249, !"__tracepoint_ptr_nfsd_file_close_inode_sync", i1 false, i1 false}
!251 = !{ptr @__SCK__tp_func_nfsd_file_close_inode_sync, !249, !"__SCK__tp_func_nfsd_file_close_inode_sync", i1 false, i1 false}
!252 = !{ptr @__tracepoint_nfsd_file_close_inode, !253, !"__tracepoint_nfsd_file_close_inode", i1 false, i1 false}
!253 = !{!"../fs/nfsd/./trace.h", i32 819, i32 1}
!254 = !{ptr @__tracepoint_ptr_nfsd_file_close_inode, !253, !"__tracepoint_ptr_nfsd_file_close_inode", i1 false, i1 false}
!255 = !{ptr @__SCK__tp_func_nfsd_file_close_inode, !253, !"__SCK__tp_func_nfsd_file_close_inode", i1 false, i1 false}
!256 = !{ptr @__tracepoint_nfsd_file_is_cached, !257, !"__tracepoint_nfsd_file_is_cached", i1 false, i1 false}
!257 = !{!"../fs/nfsd/./trace.h", i32 820, i32 1}
!258 = !{ptr @__tracepoint_ptr_nfsd_file_is_cached, !257, !"__tracepoint_ptr_nfsd_file_is_cached", i1 false, i1 false}
!259 = !{ptr @__SCK__tp_func_nfsd_file_is_cached, !257, !"__SCK__tp_func_nfsd_file_is_cached", i1 false, i1 false}
!260 = !{ptr @__tracepoint_nfsd_file_fsnotify_handle_event, !261, !"__tracepoint_nfsd_file_fsnotify_handle_event", i1 false, i1 false}
!261 = !{!"../fs/nfsd/./trace.h", i32 822, i32 1}
!262 = !{ptr @__tracepoint_ptr_nfsd_file_fsnotify_handle_event, !261, !"__tracepoint_ptr_nfsd_file_fsnotify_handle_event", i1 false, i1 false}
!263 = !{ptr @__SCK__tp_func_nfsd_file_fsnotify_handle_event, !261, !"__SCK__tp_func_nfsd_file_fsnotify_handle_event", i1 false, i1 false}
!264 = !{ptr @__tracepoint_nfsd_drc_found, !265, !"__tracepoint_nfsd_drc_found", i1 false, i1 false}
!265 = !{!"../fs/nfsd/./trace.h", i32 853, i32 1}
!266 = !{ptr @__tracepoint_ptr_nfsd_drc_found, !265, !"__tracepoint_ptr_nfsd_drc_found", i1 false, i1 false}
!267 = !{ptr @__SCK__tp_func_nfsd_drc_found, !265, !"__SCK__tp_func_nfsd_drc_found", i1 false, i1 false}
!268 = !{ptr @__tracepoint_nfsd_drc_mismatch, !269, !"__tracepoint_nfsd_drc_mismatch", i1 false, i1 false}
!269 = !{!"../fs/nfsd/./trace.h", i32 876, i32 1}
!270 = !{ptr @__tracepoint_ptr_nfsd_drc_mismatch, !269, !"__tracepoint_ptr_nfsd_drc_mismatch", i1 false, i1 false}
!271 = !{ptr @__SCK__tp_func_nfsd_drc_mismatch, !269, !"__SCK__tp_func_nfsd_drc_mismatch", i1 false, i1 false}
!272 = !{ptr @__tracepoint_nfsd_cb_args, !273, !"__tracepoint_nfsd_cb_args", i1 false, i1 false}
!273 = !{!"../fs/nfsd/./trace.h", i32 900, i32 1}
!274 = !{ptr @__tracepoint_ptr_nfsd_cb_args, !273, !"__tracepoint_ptr_nfsd_cb_args", i1 false, i1 false}
!275 = !{ptr @__SCK__tp_func_nfsd_cb_args, !273, !"__SCK__tp_func_nfsd_cb_args", i1 false, i1 false}
!276 = !{ptr @__tracepoint_nfsd_cb_nodelegs, !277, !"__tracepoint_nfsd_cb_nodelegs", i1 false, i1 false}
!277 = !{!"../fs/nfsd/./trace.h", i32 926, i32 1}
!278 = !{ptr @__tracepoint_ptr_nfsd_cb_nodelegs, !277, !"__tracepoint_ptr_nfsd_cb_nodelegs", i1 false, i1 false}
!279 = !{ptr @__SCK__tp_func_nfsd_cb_nodelegs, !277, !"__SCK__tp_func_nfsd_cb_nodelegs", i1 false, i1 false}
!280 = !{ptr @__tracepoint_nfsd_cb_state, !281, !"__tracepoint_nfsd_cb_state", i1 false, i1 false}
!281 = !{!"../fs/nfsd/./trace.h", i32 973, i32 1}
!282 = !{ptr @__tracepoint_ptr_nfsd_cb_state, !281, !"__tracepoint_ptr_nfsd_cb_state", i1 false, i1 false}
!283 = !{ptr @__SCK__tp_func_nfsd_cb_state, !281, !"__SCK__tp_func_nfsd_cb_state", i1 false, i1 false}
!284 = !{ptr @__tracepoint_nfsd_cb_probe, !285, !"__tracepoint_nfsd_cb_probe", i1 false, i1 false}
!285 = !{!"../fs/nfsd/./trace.h", i32 974, i32 1}
!286 = !{ptr @__tracepoint_ptr_nfsd_cb_probe, !285, !"__tracepoint_ptr_nfsd_cb_probe", i1 false, i1 false}
!287 = !{ptr @__SCK__tp_func_nfsd_cb_probe, !285, !"__SCK__tp_func_nfsd_cb_probe", i1 false, i1 false}
!288 = !{ptr @__tracepoint_nfsd_cb_lost, !289, !"__tracepoint_nfsd_cb_lost", i1 false, i1 false}
!289 = !{!"../fs/nfsd/./trace.h", i32 975, i32 1}
!290 = !{ptr @__tracepoint_ptr_nfsd_cb_lost, !289, !"__tracepoint_ptr_nfsd_cb_lost", i1 false, i1 false}
!291 = !{ptr @__SCK__tp_func_nfsd_cb_lost, !289, !"__SCK__tp_func_nfsd_cb_lost", i1 false, i1 false}
!292 = !{ptr @__tracepoint_nfsd_cb_shutdown, !293, !"__tracepoint_nfsd_cb_shutdown", i1 false, i1 false}
!293 = !{!"../fs/nfsd/./trace.h", i32 976, i32 1}
!294 = !{ptr @__tracepoint_ptr_nfsd_cb_shutdown, !293, !"__tracepoint_ptr_nfsd_cb_shutdown", i1 false, i1 false}
!295 = !{ptr @__SCK__tp_func_nfsd_cb_shutdown, !293, !"__SCK__tp_func_nfsd_cb_shutdown", i1 false, i1 false}
!296 = !{ptr @__tracepoint_nfsd_cb_setup, !297, !"__tracepoint_nfsd_cb_setup", i1 false, i1 false}
!297 = !{!"../fs/nfsd/./trace.h", i32 994, i32 1}
!298 = !{ptr @__tracepoint_ptr_nfsd_cb_setup, !297, !"__tracepoint_ptr_nfsd_cb_setup", i1 false, i1 false}
!299 = !{ptr @__SCK__tp_func_nfsd_cb_setup, !297, !"__SCK__tp_func_nfsd_cb_setup", i1 false, i1 false}
!300 = !{ptr @__tracepoint_nfsd_cb_setup_err, !301, !"__tracepoint_nfsd_cb_setup_err", i1 false, i1 false}
!301 = !{!"../fs/nfsd/./trace.h", i32 1020, i32 1}
!302 = !{ptr @__tracepoint_ptr_nfsd_cb_setup_err, !301, !"__tracepoint_ptr_nfsd_cb_setup_err", i1 false, i1 false}
!303 = !{ptr @__SCK__tp_func_nfsd_cb_setup_err, !301, !"__SCK__tp_func_nfsd_cb_setup_err", i1 false, i1 false}
!304 = !{ptr @__tracepoint_nfsd_cb_recall, !305, !"__tracepoint_nfsd_cb_recall", i1 false, i1 false}
!305 = !{!"../fs/nfsd/./trace.h", i32 1043, i32 1}
!306 = !{ptr @__tracepoint_ptr_nfsd_cb_recall, !305, !"__tracepoint_ptr_nfsd_cb_recall", i1 false, i1 false}
!307 = !{ptr @__SCK__tp_func_nfsd_cb_recall, !305, !"__SCK__tp_func_nfsd_cb_recall", i1 false, i1 false}
!308 = !{ptr @__tracepoint_nfsd_cb_notify_lock, !309, !"__tracepoint_nfsd_cb_notify_lock", i1 false, i1 false}
!309 = !{!"../fs/nfsd/./trace.h", i32 1074, i32 1}
!310 = !{ptr @__tracepoint_ptr_nfsd_cb_notify_lock, !309, !"__tracepoint_ptr_nfsd_cb_notify_lock", i1 false, i1 false}
!311 = !{ptr @__SCK__tp_func_nfsd_cb_notify_lock, !309, !"__SCK__tp_func_nfsd_cb_notify_lock", i1 false, i1 false}
!312 = !{ptr @__tracepoint_nfsd_cb_offload, !313, !"__tracepoint_nfsd_cb_offload", i1 false, i1 false}
!313 = !{!"../fs/nfsd/./trace.h", i32 1100, i32 1}
!314 = !{ptr @__tracepoint_ptr_nfsd_cb_offload, !313, !"__tracepoint_ptr_nfsd_cb_offload", i1 false, i1 false}
!315 = !{ptr @__SCK__tp_func_nfsd_cb_offload, !313, !"__SCK__tp_func_nfsd_cb_offload", i1 false, i1 false}
!316 = !{ptr @.str, !317, !"<string literal>", i1 false, i1 false}
!317 = !{!"../fs/nfsd/./trace.h", i32 704, i32 1}
!318 = !{ptr @__TRACE_SYSTEM_NFSD_FILE_HASHED, !317, !"__TRACE_SYSTEM_NFSD_FILE_HASHED", i1 false, i1 false}
!319 = !{ptr @TRACE_SYSTEM_NFSD_FILE_HASHED, !317, !"TRACE_SYSTEM_NFSD_FILE_HASHED", i1 false, i1 false}
!320 = !{ptr @.str.1, !321, !"<string literal>", i1 false, i1 false}
!321 = !{!"../fs/nfsd/./trace.h", i32 705, i32 1}
!322 = !{ptr @__TRACE_SYSTEM_NFSD_FILE_PENDING, !321, !"__TRACE_SYSTEM_NFSD_FILE_PENDING", i1 false, i1 false}
!323 = !{ptr @TRACE_SYSTEM_NFSD_FILE_PENDING, !321, !"TRACE_SYSTEM_NFSD_FILE_PENDING", i1 false, i1 false}
!324 = !{ptr @.str.2, !325, !"<string literal>", i1 false, i1 false}
!325 = !{!"../fs/nfsd/./trace.h", i32 706, i32 1}
!326 = !{ptr @__TRACE_SYSTEM_NFSD_FILE_BREAK_READ, !325, !"__TRACE_SYSTEM_NFSD_FILE_BREAK_READ", i1 false, i1 false}
!327 = !{ptr @TRACE_SYSTEM_NFSD_FILE_BREAK_READ, !325, !"TRACE_SYSTEM_NFSD_FILE_BREAK_READ", i1 false, i1 false}
!328 = !{ptr @.str.3, !329, !"<string literal>", i1 false, i1 false}
!329 = !{!"../fs/nfsd/./trace.h", i32 707, i32 1}
!330 = !{ptr @__TRACE_SYSTEM_NFSD_FILE_BREAK_WRITE, !329, !"__TRACE_SYSTEM_NFSD_FILE_BREAK_WRITE", i1 false, i1 false}
!331 = !{ptr @TRACE_SYSTEM_NFSD_FILE_BREAK_WRITE, !329, !"TRACE_SYSTEM_NFSD_FILE_BREAK_WRITE", i1 false, i1 false}
!332 = !{ptr @.str.4, !333, !"<string literal>", i1 false, i1 false}
!333 = !{!"../fs/nfsd/./trace.h", i32 708, i32 1}
!334 = !{ptr @__TRACE_SYSTEM_NFSD_FILE_REFERENCED, !333, !"__TRACE_SYSTEM_NFSD_FILE_REFERENCED", i1 false, i1 false}
!335 = !{ptr @TRACE_SYSTEM_NFSD_FILE_REFERENCED, !333, !"TRACE_SYSTEM_NFSD_FILE_REFERENCED", i1 false, i1 false}
!336 = !{ptr @.str.5, !337, !"<string literal>", i1 false, i1 false}
!337 = !{!"../fs/nfsd/./trace.h", i32 843, i32 1}
!338 = !{ptr @__TRACE_SYSTEM_RC_DROPIT, !337, !"__TRACE_SYSTEM_RC_DROPIT", i1 false, i1 false}
!339 = !{ptr @TRACE_SYSTEM_RC_DROPIT, !337, !"TRACE_SYSTEM_RC_DROPIT", i1 false, i1 false}
!340 = !{ptr @.str.6, !341, !"<string literal>", i1 false, i1 false}
!341 = !{!"../fs/nfsd/./trace.h", i32 844, i32 1}
!342 = !{ptr @__TRACE_SYSTEM_RC_REPLY, !341, !"__TRACE_SYSTEM_RC_REPLY", i1 false, i1 false}
!343 = !{ptr @TRACE_SYSTEM_RC_REPLY, !341, !"TRACE_SYSTEM_RC_REPLY", i1 false, i1 false}
!344 = !{ptr @.str.7, !345, !"<string literal>", i1 false, i1 false}
!345 = !{!"../fs/nfsd/./trace.h", i32 845, i32 1}
!346 = !{ptr @__TRACE_SYSTEM_RC_DOIT, !345, !"__TRACE_SYSTEM_RC_DOIT", i1 false, i1 false}
!347 = !{ptr @TRACE_SYSTEM_RC_DOIT, !345, !"TRACE_SYSTEM_RC_DOIT", i1 false, i1 false}
!348 = !{ptr @.str.8, !349, !"<string literal>", i1 false, i1 false}
!349 = !{!"../fs/nfsd/./trace.h", i32 978, i32 1}
!350 = !{ptr @__TRACE_SYSTEM_RPC_AUTH_NULL, !349, !"__TRACE_SYSTEM_RPC_AUTH_NULL", i1 false, i1 false}
!351 = !{ptr @TRACE_SYSTEM_RPC_AUTH_NULL, !349, !"TRACE_SYSTEM_RPC_AUTH_NULL", i1 false, i1 false}
!352 = !{ptr @.str.9, !353, !"<string literal>", i1 false, i1 false}
!353 = !{!"../fs/nfsd/./trace.h", i32 979, i32 1}
!354 = !{ptr @__TRACE_SYSTEM_RPC_AUTH_UNIX, !353, !"__TRACE_SYSTEM_RPC_AUTH_UNIX", i1 false, i1 false}
!355 = !{ptr @TRACE_SYSTEM_RPC_AUTH_UNIX, !353, !"TRACE_SYSTEM_RPC_AUTH_UNIX", i1 false, i1 false}
!356 = !{ptr @.str.10, !357, !"<string literal>", i1 false, i1 false}
!357 = !{!"../fs/nfsd/./trace.h", i32 980, i32 1}
!358 = !{ptr @__TRACE_SYSTEM_RPC_AUTH_GSS, !357, !"__TRACE_SYSTEM_RPC_AUTH_GSS", i1 false, i1 false}
!359 = !{ptr @TRACE_SYSTEM_RPC_AUTH_GSS, !357, !"TRACE_SYSTEM_RPC_AUTH_GSS", i1 false, i1 false}
!360 = !{ptr @.str.11, !361, !"<string literal>", i1 false, i1 false}
!361 = !{!"../fs/nfsd/./trace.h", i32 981, i32 1}
!362 = !{ptr @__TRACE_SYSTEM_RPC_AUTH_GSS_KRB5, !361, !"__TRACE_SYSTEM_RPC_AUTH_GSS_KRB5", i1 false, i1 false}
!363 = !{ptr @TRACE_SYSTEM_RPC_AUTH_GSS_KRB5, !361, !"TRACE_SYSTEM_RPC_AUTH_GSS_KRB5", i1 false, i1 false}
!364 = !{ptr @.str.12, !365, !"<string literal>", i1 false, i1 false}
!365 = !{!"../fs/nfsd/./trace.h", i32 982, i32 1}
!366 = !{ptr @__TRACE_SYSTEM_RPC_AUTH_GSS_KRB5I, !365, !"__TRACE_SYSTEM_RPC_AUTH_GSS_KRB5I", i1 false, i1 false}
!367 = !{ptr @TRACE_SYSTEM_RPC_AUTH_GSS_KRB5I, !365, !"TRACE_SYSTEM_RPC_AUTH_GSS_KRB5I", i1 false, i1 false}
!368 = !{ptr @.str.13, !369, !"<string literal>", i1 false, i1 false}
!369 = !{!"../fs/nfsd/./trace.h", i32 983, i32 1}
!370 = !{ptr @__TRACE_SYSTEM_RPC_AUTH_GSS_KRB5P, !369, !"__TRACE_SYSTEM_RPC_AUTH_GSS_KRB5P", i1 false, i1 false}
!371 = !{ptr @TRACE_SYSTEM_RPC_AUTH_GSS_KRB5P, !369, !"TRACE_SYSTEM_RPC_AUTH_GSS_KRB5P", i1 false, i1 false}
!372 = !{ptr @event_class_nfsd_xdr_err_class, !373, !"event_class_nfsd_xdr_err_class", i1 false, i1 false}
!373 = !{!"../fs/nfsd/./trace.h", i32 50, i32 1}
!374 = !{ptr @event_nfsd_garbage_args_err, !1, !"event_nfsd_garbage_args_err", i1 false, i1 false}
!375 = !{ptr @__event_nfsd_garbage_args_err, !1, !"__event_nfsd_garbage_args_err", i1 false, i1 false}
!376 = !{ptr @event_nfsd_cant_encode_err, !5, !"event_nfsd_cant_encode_err", i1 false, i1 false}
!377 = !{ptr @__event_nfsd_cant_encode_err, !5, !"__event_nfsd_cant_encode_err", i1 false, i1 false}
!378 = !{ptr @event_class_nfsd_compound, !9, !"event_class_nfsd_compound", i1 false, i1 false}
!379 = !{ptr @event_nfsd_compound, !9, !"event_nfsd_compound", i1 false, i1 false}
!380 = !{ptr @__event_nfsd_compound, !9, !"__event_nfsd_compound", i1 false, i1 false}
!381 = !{ptr @event_class_nfsd_compound_status, !13, !"event_class_nfsd_compound_status", i1 false, i1 false}
!382 = !{ptr @event_nfsd_compound_status, !13, !"event_nfsd_compound_status", i1 false, i1 false}
!383 = !{ptr @__event_nfsd_compound_status, !13, !"__event_nfsd_compound_status", i1 false, i1 false}
!384 = !{ptr @event_class_nfsd_compound_decode_err, !17, !"event_class_nfsd_compound_decode_err", i1 false, i1 false}
!385 = !{ptr @event_nfsd_compound_decode_err, !17, !"event_nfsd_compound_decode_err", i1 false, i1 false}
!386 = !{ptr @__event_nfsd_compound_decode_err, !17, !"__event_nfsd_compound_decode_err", i1 false, i1 false}
!387 = !{ptr @event_class_nfsd_compound_encode_err, !21, !"event_class_nfsd_compound_encode_err", i1 false, i1 false}
!388 = !{ptr @event_nfsd_compound_encode_err, !21, !"event_nfsd_compound_encode_err", i1 false, i1 false}
!389 = !{ptr @__event_nfsd_compound_encode_err, !21, !"__event_nfsd_compound_encode_err", i1 false, i1 false}
!390 = !{ptr @event_class_nfsd_fh_err_class, !391, !"event_class_nfsd_fh_err_class", i1 false, i1 false}
!391 = !{!"../fs/nfsd/./trace.h", i32 185, i32 1}
!392 = !{ptr @event_nfsd_set_fh_dentry_badexport, !25, !"event_nfsd_set_fh_dentry_badexport", i1 false, i1 false}
!393 = !{ptr @__event_nfsd_set_fh_dentry_badexport, !25, !"__event_nfsd_set_fh_dentry_badexport", i1 false, i1 false}
!394 = !{ptr @event_nfsd_set_fh_dentry_badhandle, !29, !"event_nfsd_set_fh_dentry_badhandle", i1 false, i1 false}
!395 = !{ptr @__event_nfsd_set_fh_dentry_badhandle, !29, !"__event_nfsd_set_fh_dentry_badhandle", i1 false, i1 false}
!396 = !{ptr @event_class_nfsd_exp_find_key, !33, !"event_class_nfsd_exp_find_key", i1 false, i1 false}
!397 = !{ptr @event_nfsd_exp_find_key, !33, !"event_nfsd_exp_find_key", i1 false, i1 false}
!398 = !{ptr @__event_nfsd_exp_find_key, !33, !"__event_nfsd_exp_find_key", i1 false, i1 false}
!399 = !{ptr @event_class_nfsd_expkey_update, !37, !"event_class_nfsd_expkey_update", i1 false, i1 false}
!400 = !{ptr @event_nfsd_expkey_update, !37, !"event_nfsd_expkey_update", i1 false, i1 false}
!401 = !{ptr @__event_nfsd_expkey_update, !37, !"__event_nfsd_expkey_update", i1 false, i1 false}
!402 = !{ptr @event_class_nfsd_exp_get_by_name, !41, !"event_class_nfsd_exp_get_by_name", i1 false, i1 false}
!403 = !{ptr @event_nfsd_exp_get_by_name, !41, !"event_nfsd_exp_get_by_name", i1 false, i1 false}
!404 = !{ptr @__event_nfsd_exp_get_by_name, !41, !"__event_nfsd_exp_get_by_name", i1 false, i1 false}
!405 = !{ptr @event_class_nfsd_export_update, !45, !"event_class_nfsd_export_update", i1 false, i1 false}
!406 = !{ptr @event_nfsd_export_update, !45, !"event_nfsd_export_update", i1 false, i1 false}
!407 = !{ptr @__event_nfsd_export_update, !45, !"__event_nfsd_export_update", i1 false, i1 false}
!408 = !{ptr @event_class_nfsd_io_class, !409, !"event_class_nfsd_io_class", i1 false, i1 false}
!409 = !{!"../fs/nfsd/./trace.h", i32 306, i32 1}
!410 = !{ptr @event_nfsd_read_start, !49, !"event_nfsd_read_start", i1 false, i1 false}
!411 = !{ptr @__event_nfsd_read_start, !49, !"__event_nfsd_read_start", i1 false, i1 false}
!412 = !{ptr @event_nfsd_read_splice, !53, !"event_nfsd_read_splice", i1 false, i1 false}
!413 = !{ptr @__event_nfsd_read_splice, !53, !"__event_nfsd_read_splice", i1 false, i1 false}
!414 = !{ptr @event_nfsd_read_vector, !57, !"event_nfsd_read_vector", i1 false, i1 false}
!415 = !{ptr @__event_nfsd_read_vector, !57, !"__event_nfsd_read_vector", i1 false, i1 false}
!416 = !{ptr @event_nfsd_read_io_done, !61, !"event_nfsd_read_io_done", i1 false, i1 false}
!417 = !{ptr @__event_nfsd_read_io_done, !61, !"__event_nfsd_read_io_done", i1 false, i1 false}
!418 = !{ptr @event_nfsd_read_done, !65, !"event_nfsd_read_done", i1 false, i1 false}
!419 = !{ptr @__event_nfsd_read_done, !65, !"__event_nfsd_read_done", i1 false, i1 false}
!420 = !{ptr @event_nfsd_write_start, !69, !"event_nfsd_write_start", i1 false, i1 false}
!421 = !{ptr @__event_nfsd_write_start, !69, !"__event_nfsd_write_start", i1 false, i1 false}
!422 = !{ptr @event_nfsd_write_opened, !73, !"event_nfsd_write_opened", i1 false, i1 false}
!423 = !{ptr @__event_nfsd_write_opened, !73, !"__event_nfsd_write_opened", i1 false, i1 false}
!424 = !{ptr @event_nfsd_write_io_done, !77, !"event_nfsd_write_io_done", i1 false, i1 false}
!425 = !{ptr @__event_nfsd_write_io_done, !77, !"__event_nfsd_write_io_done", i1 false, i1 false}
!426 = !{ptr @event_nfsd_write_done, !81, !"event_nfsd_write_done", i1 false, i1 false}
!427 = !{ptr @__event_nfsd_write_done, !81, !"__event_nfsd_write_done", i1 false, i1 false}
!428 = !{ptr @event_class_nfsd_err_class, !429, !"event_class_nfsd_err_class", i1 false, i1 false}
!429 = !{!"../fs/nfsd/./trace.h", i32 347, i32 1}
!430 = !{ptr @event_nfsd_read_err, !85, !"event_nfsd_read_err", i1 false, i1 false}
!431 = !{ptr @__event_nfsd_read_err, !85, !"__event_nfsd_read_err", i1 false, i1 false}
!432 = !{ptr @event_nfsd_write_err, !89, !"event_nfsd_write_err", i1 false, i1 false}
!433 = !{ptr @__event_nfsd_write_err, !89, !"__event_nfsd_write_err", i1 false, i1 false}
!434 = !{ptr @event_class_nfsd_dirent, !93, !"event_class_nfsd_dirent", i1 false, i1 false}
!435 = !{ptr @event_nfsd_dirent, !93, !"event_nfsd_dirent", i1 false, i1 false}
!436 = !{ptr @__event_nfsd_dirent, !93, !"__event_nfsd_dirent", i1 false, i1 false}
!437 = !{ptr @event_class_nfsd_copy_err_class, !438, !"event_class_nfsd_copy_err_class", i1 false, i1 false}
!438 = !{!"../fs/nfsd/./trace.h", i32 402, i32 1}
!439 = !{ptr @event_nfsd_clone_file_range_err, !97, !"event_nfsd_clone_file_range_err", i1 false, i1 false}
!440 = !{ptr @__event_nfsd_clone_file_range_err, !97, !"__event_nfsd_clone_file_range_err", i1 false, i1 false}
!441 = !{ptr @event_class_nfsd_stateid_class, !442, !"event_class_nfsd_stateid_class", i1 false, i1 false}
!442 = !{!"../fs/nfsd/./trace.h", i32 456, i32 1}
!443 = !{ptr @event_nfsd_layoutstate_alloc, !101, !"event_nfsd_layoutstate_alloc", i1 false, i1 false}
!444 = !{ptr @__event_nfsd_layoutstate_alloc, !101, !"__event_nfsd_layoutstate_alloc", i1 false, i1 false}
!445 = !{ptr @event_nfsd_layoutstate_unhash, !105, !"event_nfsd_layoutstate_unhash", i1 false, i1 false}
!446 = !{ptr @__event_nfsd_layoutstate_unhash, !105, !"__event_nfsd_layoutstate_unhash", i1 false, i1 false}
!447 = !{ptr @event_nfsd_layoutstate_free, !109, !"event_nfsd_layoutstate_free", i1 false, i1 false}
!448 = !{ptr @__event_nfsd_layoutstate_free, !109, !"__event_nfsd_layoutstate_free", i1 false, i1 false}
!449 = !{ptr @event_nfsd_layout_get_lookup_fail, !113, !"event_nfsd_layout_get_lookup_fail", i1 false, i1 false}
!450 = !{ptr @__event_nfsd_layout_get_lookup_fail, !113, !"__event_nfsd_layout_get_lookup_fail", i1 false, i1 false}
!451 = !{ptr @event_nfsd_layout_commit_lookup_fail, !117, !"event_nfsd_layout_commit_lookup_fail", i1 false, i1 false}
!452 = !{ptr @__event_nfsd_layout_commit_lookup_fail, !117, !"__event_nfsd_layout_commit_lookup_fail", i1 false, i1 false}
!453 = !{ptr @event_nfsd_layout_return_lookup_fail, !121, !"event_nfsd_layout_return_lookup_fail", i1 false, i1 false}
!454 = !{ptr @__event_nfsd_layout_return_lookup_fail, !121, !"__event_nfsd_layout_return_lookup_fail", i1 false, i1 false}
!455 = !{ptr @event_nfsd_layout_recall, !125, !"event_nfsd_layout_recall", i1 false, i1 false}
!456 = !{ptr @__event_nfsd_layout_recall, !125, !"__event_nfsd_layout_recall", i1 false, i1 false}
!457 = !{ptr @event_nfsd_layout_recall_done, !129, !"event_nfsd_layout_recall_done", i1 false, i1 false}
!458 = !{ptr @__event_nfsd_layout_recall_done, !129, !"__event_nfsd_layout_recall_done", i1 false, i1 false}
!459 = !{ptr @event_nfsd_layout_recall_fail, !133, !"event_nfsd_layout_recall_fail", i1 false, i1 false}
!460 = !{ptr @__event_nfsd_layout_recall_fail, !133, !"__event_nfsd_layout_recall_fail", i1 false, i1 false}
!461 = !{ptr @event_nfsd_layout_recall_release, !137, !"event_nfsd_layout_recall_release", i1 false, i1 false}
!462 = !{ptr @__event_nfsd_layout_recall_release, !137, !"__event_nfsd_layout_recall_release", i1 false, i1 false}
!463 = !{ptr @event_nfsd_open, !141, !"event_nfsd_open", i1 false, i1 false}
!464 = !{ptr @__event_nfsd_open, !141, !"__event_nfsd_open", i1 false, i1 false}
!465 = !{ptr @event_nfsd_deleg_read, !145, !"event_nfsd_deleg_read", i1 false, i1 false}
!466 = !{ptr @__event_nfsd_deleg_read, !145, !"__event_nfsd_deleg_read", i1 false, i1 false}
!467 = !{ptr @event_nfsd_deleg_recall, !149, !"event_nfsd_deleg_recall", i1 false, i1 false}
!468 = !{ptr @__event_nfsd_deleg_recall, !149, !"__event_nfsd_deleg_recall", i1 false, i1 false}
!469 = !{ptr @event_class_nfsd_stateseqid_class, !470, !"event_class_nfsd_stateseqid_class", i1 false, i1 false}
!470 = !{!"../fs/nfsd/./trace.h", i32 498, i32 1}
!471 = !{ptr @event_nfsd_preprocess, !153, !"event_nfsd_preprocess", i1 false, i1 false}
!472 = !{ptr @__event_nfsd_preprocess, !153, !"__event_nfsd_preprocess", i1 false, i1 false}
!473 = !{ptr @event_nfsd_open_confirm, !157, !"event_nfsd_open_confirm", i1 false, i1 false}
!474 = !{ptr @__event_nfsd_open_confirm, !157, !"__event_nfsd_open_confirm", i1 false, i1 false}
!475 = !{ptr @event_class_nfsd_clientid_class, !476, !"event_class_nfsd_clientid_class", i1 false, i1 false}
!476 = !{!"../fs/nfsd/./trace.h", i32 528, i32 1}
!477 = !{ptr @event_nfsd_clid_expire_unconf, !161, !"event_nfsd_clid_expire_unconf", i1 false, i1 false}
!478 = !{ptr @__event_nfsd_clid_expire_unconf, !161, !"__event_nfsd_clid_expire_unconf", i1 false, i1 false}
!479 = !{ptr @event_nfsd_clid_reclaim_complete, !165, !"event_nfsd_clid_reclaim_complete", i1 false, i1 false}
!480 = !{ptr @__event_nfsd_clid_reclaim_complete, !165, !"__event_nfsd_clid_reclaim_complete", i1 false, i1 false}
!481 = !{ptr @event_nfsd_clid_confirmed, !169, !"event_nfsd_clid_confirmed", i1 false, i1 false}
!482 = !{ptr @__event_nfsd_clid_confirmed, !169, !"__event_nfsd_clid_confirmed", i1 false, i1 false}
!483 = !{ptr @event_nfsd_clid_destroyed, !173, !"event_nfsd_clid_destroyed", i1 false, i1 false}
!484 = !{ptr @__event_nfsd_clid_destroyed, !173, !"__event_nfsd_clid_destroyed", i1 false, i1 false}
!485 = !{ptr @event_nfsd_clid_admin_expired, !177, !"event_nfsd_clid_admin_expired", i1 false, i1 false}
!486 = !{ptr @__event_nfsd_clid_admin_expired, !177, !"__event_nfsd_clid_admin_expired", i1 false, i1 false}
!487 = !{ptr @event_nfsd_clid_replaced, !181, !"event_nfsd_clid_replaced", i1 false, i1 false}
!488 = !{ptr @__event_nfsd_clid_replaced, !181, !"__event_nfsd_clid_replaced", i1 false, i1 false}
!489 = !{ptr @event_nfsd_clid_purged, !185, !"event_nfsd_clid_purged", i1 false, i1 false}
!490 = !{ptr @__event_nfsd_clid_purged, !185, !"__event_nfsd_clid_purged", i1 false, i1 false}
!491 = !{ptr @event_nfsd_clid_renew, !189, !"event_nfsd_clid_renew", i1 false, i1 false}
!492 = !{ptr @__event_nfsd_clid_renew, !189, !"__event_nfsd_clid_renew", i1 false, i1 false}
!493 = !{ptr @event_nfsd_clid_stale, !193, !"event_nfsd_clid_stale", i1 false, i1 false}
!494 = !{ptr @__event_nfsd_clid_stale, !193, !"__event_nfsd_clid_stale", i1 false, i1 false}
!495 = !{ptr @event_class_nfsd_net_class, !496, !"event_class_nfsd_net_class", i1 false, i1 false}
!496 = !{!"../fs/nfsd/./trace.h", i32 557, i32 1}
!497 = !{ptr @event_nfsd_grace_start, !197, !"event_nfsd_grace_start", i1 false, i1 false}
!498 = !{ptr @__event_nfsd_grace_start, !197, !"__event_nfsd_grace_start", i1 false, i1 false}
!499 = !{ptr @event_nfsd_grace_complete, !201, !"event_nfsd_grace_complete", i1 false, i1 false}
!500 = !{ptr @__event_nfsd_grace_complete, !201, !"__event_nfsd_grace_complete", i1 false, i1 false}
!501 = !{ptr @event_class_nfsd_writeverf_reset, !205, !"event_class_nfsd_writeverf_reset", i1 false, i1 false}
!502 = !{ptr @event_nfsd_writeverf_reset, !205, !"event_nfsd_writeverf_reset", i1 false, i1 false}
!503 = !{ptr @__event_nfsd_writeverf_reset, !205, !"__event_nfsd_writeverf_reset", i1 false, i1 false}
!504 = !{ptr @event_class_nfsd_clid_cred_mismatch, !209, !"event_class_nfsd_clid_cred_mismatch", i1 false, i1 false}
!505 = !{ptr @event_nfsd_clid_cred_mismatch, !209, !"event_nfsd_clid_cred_mismatch", i1 false, i1 false}
!506 = !{ptr @__event_nfsd_clid_cred_mismatch, !209, !"__event_nfsd_clid_cred_mismatch", i1 false, i1 false}
!507 = !{ptr @event_class_nfsd_clid_verf_mismatch, !213, !"event_class_nfsd_clid_verf_mismatch", i1 false, i1 false}
!508 = !{ptr @event_nfsd_clid_verf_mismatch, !213, !"event_nfsd_clid_verf_mismatch", i1 false, i1 false}
!509 = !{ptr @__event_nfsd_clid_verf_mismatch, !213, !"__event_nfsd_clid_verf_mismatch", i1 false, i1 false}
!510 = !{ptr @event_class_nfsd_clid_class, !511, !"event_class_nfsd_clid_class", i1 false, i1 false}
!511 = !{!"../fs/nfsd/./trace.h", i32 665, i32 1}
!512 = !{ptr @event_nfsd_clid_fresh, !217, !"event_nfsd_clid_fresh", i1 false, i1 false}
!513 = !{ptr @__event_nfsd_clid_fresh, !217, !"__event_nfsd_clid_fresh", i1 false, i1 false}
!514 = !{ptr @event_nfsd_clid_confirmed_r, !221, !"event_nfsd_clid_confirmed_r", i1 false, i1 false}
!515 = !{ptr @__event_nfsd_clid_confirmed_r, !221, !"__event_nfsd_clid_confirmed_r", i1 false, i1 false}
!516 = !{ptr @event_class_nfsd_file_class, !517, !"event_class_nfsd_file_class", i1 false, i1 false}
!517 = !{!"../fs/nfsd/./trace.h", i32 718, i32 1}
!518 = !{ptr @event_nfsd_file_alloc, !225, !"event_nfsd_file_alloc", i1 false, i1 false}
!519 = !{ptr @__event_nfsd_file_alloc, !225, !"__event_nfsd_file_alloc", i1 false, i1 false}
!520 = !{ptr @event_nfsd_file_put_final, !229, !"event_nfsd_file_put_final", i1 false, i1 false}
!521 = !{ptr @__event_nfsd_file_put_final, !229, !"__event_nfsd_file_put_final", i1 false, i1 false}
!522 = !{ptr @event_nfsd_file_unhash, !233, !"event_nfsd_file_unhash", i1 false, i1 false}
!523 = !{ptr @__event_nfsd_file_unhash, !233, !"__event_nfsd_file_unhash", i1 false, i1 false}
!524 = !{ptr @event_nfsd_file_put, !237, !"event_nfsd_file_put", i1 false, i1 false}
!525 = !{ptr @__event_nfsd_file_put, !237, !"__event_nfsd_file_put", i1 false, i1 false}
!526 = !{ptr @event_nfsd_file_unhash_and_release_locked, !241, !"event_nfsd_file_unhash_and_release_locked", i1 false, i1 false}
!527 = !{ptr @__event_nfsd_file_unhash_and_release_locked, !241, !"__event_nfsd_file_unhash_and_release_locked", i1 false, i1 false}
!528 = !{ptr @event_class_nfsd_file_acquire, !245, !"event_class_nfsd_file_acquire", i1 false, i1 false}
!529 = !{ptr @event_nfsd_file_acquire, !245, !"event_nfsd_file_acquire", i1 false, i1 false}
!530 = !{ptr @__event_nfsd_file_acquire, !245, !"__event_nfsd_file_acquire", i1 false, i1 false}
!531 = !{ptr @event_class_nfsd_file_search_class, !532, !"event_class_nfsd_file_search_class", i1 false, i1 false}
!532 = !{!"../fs/nfsd/./trace.h", i32 796, i32 1}
!533 = !{ptr @event_nfsd_file_close_inode_sync, !249, !"event_nfsd_file_close_inode_sync", i1 false, i1 false}
!534 = !{ptr @__event_nfsd_file_close_inode_sync, !249, !"__event_nfsd_file_close_inode_sync", i1 false, i1 false}
!535 = !{ptr @event_nfsd_file_close_inode, !253, !"event_nfsd_file_close_inode", i1 false, i1 false}
!536 = !{ptr @__event_nfsd_file_close_inode, !253, !"__event_nfsd_file_close_inode", i1 false, i1 false}
!537 = !{ptr @event_nfsd_file_is_cached, !257, !"event_nfsd_file_is_cached", i1 false, i1 false}
!538 = !{ptr @__event_nfsd_file_is_cached, !257, !"__event_nfsd_file_is_cached", i1 false, i1 false}
!539 = !{ptr @event_class_nfsd_file_fsnotify_handle_event, !261, !"event_class_nfsd_file_fsnotify_handle_event", i1 false, i1 false}
!540 = !{ptr @event_nfsd_file_fsnotify_handle_event, !261, !"event_nfsd_file_fsnotify_handle_event", i1 false, i1 false}
!541 = !{ptr @__event_nfsd_file_fsnotify_handle_event, !261, !"__event_nfsd_file_fsnotify_handle_event", i1 false, i1 false}
!542 = !{ptr @event_class_nfsd_drc_found, !265, !"event_class_nfsd_drc_found", i1 false, i1 false}
!543 = !{ptr @event_nfsd_drc_found, !265, !"event_nfsd_drc_found", i1 false, i1 false}
!544 = !{ptr @__event_nfsd_drc_found, !265, !"__event_nfsd_drc_found", i1 false, i1 false}
!545 = !{ptr @event_class_nfsd_drc_mismatch, !269, !"event_class_nfsd_drc_mismatch", i1 false, i1 false}
!546 = !{ptr @event_nfsd_drc_mismatch, !269, !"event_nfsd_drc_mismatch", i1 false, i1 false}
!547 = !{ptr @__event_nfsd_drc_mismatch, !269, !"__event_nfsd_drc_mismatch", i1 false, i1 false}
!548 = !{ptr @event_class_nfsd_cb_args, !273, !"event_class_nfsd_cb_args", i1 false, i1 false}
!549 = !{ptr @event_nfsd_cb_args, !273, !"event_nfsd_cb_args", i1 false, i1 false}
!550 = !{ptr @__event_nfsd_cb_args, !273, !"__event_nfsd_cb_args", i1 false, i1 false}
!551 = !{ptr @event_class_nfsd_cb_nodelegs, !277, !"event_class_nfsd_cb_nodelegs", i1 false, i1 false}
!552 = !{ptr @event_nfsd_cb_nodelegs, !277, !"event_nfsd_cb_nodelegs", i1 false, i1 false}
!553 = !{ptr @__event_nfsd_cb_nodelegs, !277, !"__event_nfsd_cb_nodelegs", i1 false, i1 false}
!554 = !{ptr @event_class_nfsd_cb_class, !555, !"event_class_nfsd_cb_class", i1 false, i1 false}
!555 = !{!"../fs/nfsd/./trace.h", i32 947, i32 1}
!556 = !{ptr @event_nfsd_cb_state, !281, !"event_nfsd_cb_state", i1 false, i1 false}
!557 = !{ptr @__event_nfsd_cb_state, !281, !"__event_nfsd_cb_state", i1 false, i1 false}
!558 = !{ptr @event_nfsd_cb_probe, !285, !"event_nfsd_cb_probe", i1 false, i1 false}
!559 = !{ptr @__event_nfsd_cb_probe, !285, !"__event_nfsd_cb_probe", i1 false, i1 false}
!560 = !{ptr @event_nfsd_cb_lost, !289, !"event_nfsd_cb_lost", i1 false, i1 false}
!561 = !{ptr @__event_nfsd_cb_lost, !289, !"__event_nfsd_cb_lost", i1 false, i1 false}
!562 = !{ptr @event_nfsd_cb_shutdown, !293, !"event_nfsd_cb_shutdown", i1 false, i1 false}
!563 = !{ptr @__event_nfsd_cb_shutdown, !293, !"__event_nfsd_cb_shutdown", i1 false, i1 false}
!564 = !{ptr @event_class_nfsd_cb_setup, !297, !"event_class_nfsd_cb_setup", i1 false, i1 false}
!565 = !{ptr @event_nfsd_cb_setup, !297, !"event_nfsd_cb_setup", i1 false, i1 false}
!566 = !{ptr @__event_nfsd_cb_setup, !297, !"__event_nfsd_cb_setup", i1 false, i1 false}
!567 = !{ptr @event_class_nfsd_cb_setup_err, !301, !"event_class_nfsd_cb_setup_err", i1 false, i1 false}
!568 = !{ptr @event_nfsd_cb_setup_err, !301, !"event_nfsd_cb_setup_err", i1 false, i1 false}
!569 = !{ptr @__event_nfsd_cb_setup_err, !301, !"__event_nfsd_cb_setup_err", i1 false, i1 false}
!570 = !{ptr @event_class_nfsd_cb_recall, !305, !"event_class_nfsd_cb_recall", i1 false, i1 false}
!571 = !{ptr @event_nfsd_cb_recall, !305, !"event_nfsd_cb_recall", i1 false, i1 false}
!572 = !{ptr @__event_nfsd_cb_recall, !305, !"__event_nfsd_cb_recall", i1 false, i1 false}
!573 = !{ptr @event_class_nfsd_cb_notify_lock, !309, !"event_class_nfsd_cb_notify_lock", i1 false, i1 false}
!574 = !{ptr @event_nfsd_cb_notify_lock, !309, !"event_nfsd_cb_notify_lock", i1 false, i1 false}
!575 = !{ptr @__event_nfsd_cb_notify_lock, !309, !"__event_nfsd_cb_notify_lock", i1 false, i1 false}
!576 = !{ptr @event_class_nfsd_cb_offload, !313, !"event_class_nfsd_cb_offload", i1 false, i1 false}
!577 = !{ptr @event_nfsd_cb_offload, !313, !"event_nfsd_cb_offload", i1 false, i1 false}
!578 = !{ptr @__event_nfsd_cb_offload, !313, !"__event_nfsd_cb_offload", i1 false, i1 false}
!579 = !{ptr @__bpf_trace_tp_map_nfsd_garbage_args_err, !1, !"__bpf_trace_tp_map_nfsd_garbage_args_err", i1 false, i1 false}
!580 = !{ptr @__bpf_trace_tp_map_nfsd_cant_encode_err, !5, !"__bpf_trace_tp_map_nfsd_cant_encode_err", i1 false, i1 false}
!581 = !{ptr @__bpf_trace_tp_map_nfsd_compound, !9, !"__bpf_trace_tp_map_nfsd_compound", i1 false, i1 false}
!582 = !{ptr @__bpf_trace_tp_map_nfsd_compound_status, !13, !"__bpf_trace_tp_map_nfsd_compound_status", i1 false, i1 false}
!583 = !{ptr @__bpf_trace_tp_map_nfsd_compound_decode_err, !17, !"__bpf_trace_tp_map_nfsd_compound_decode_err", i1 false, i1 false}
!584 = !{ptr @__bpf_trace_tp_map_nfsd_compound_encode_err, !21, !"__bpf_trace_tp_map_nfsd_compound_encode_err", i1 false, i1 false}
!585 = !{ptr @__bpf_trace_tp_map_nfsd_set_fh_dentry_badexport, !25, !"__bpf_trace_tp_map_nfsd_set_fh_dentry_badexport", i1 false, i1 false}
!586 = !{ptr @__bpf_trace_tp_map_nfsd_set_fh_dentry_badhandle, !29, !"__bpf_trace_tp_map_nfsd_set_fh_dentry_badhandle", i1 false, i1 false}
!587 = !{ptr @__bpf_trace_tp_map_nfsd_exp_find_key, !33, !"__bpf_trace_tp_map_nfsd_exp_find_key", i1 false, i1 false}
!588 = !{ptr @__bpf_trace_tp_map_nfsd_expkey_update, !37, !"__bpf_trace_tp_map_nfsd_expkey_update", i1 false, i1 false}
!589 = !{ptr @__bpf_trace_tp_map_nfsd_exp_get_by_name, !41, !"__bpf_trace_tp_map_nfsd_exp_get_by_name", i1 false, i1 false}
!590 = !{ptr @__bpf_trace_tp_map_nfsd_export_update, !45, !"__bpf_trace_tp_map_nfsd_export_update", i1 false, i1 false}
!591 = !{ptr @__bpf_trace_tp_map_nfsd_read_start, !49, !"__bpf_trace_tp_map_nfsd_read_start", i1 false, i1 false}
!592 = !{ptr @__bpf_trace_tp_map_nfsd_read_splice, !53, !"__bpf_trace_tp_map_nfsd_read_splice", i1 false, i1 false}
!593 = !{ptr @__bpf_trace_tp_map_nfsd_read_vector, !57, !"__bpf_trace_tp_map_nfsd_read_vector", i1 false, i1 false}
!594 = !{ptr @__bpf_trace_tp_map_nfsd_read_io_done, !61, !"__bpf_trace_tp_map_nfsd_read_io_done", i1 false, i1 false}
!595 = !{ptr @__bpf_trace_tp_map_nfsd_read_done, !65, !"__bpf_trace_tp_map_nfsd_read_done", i1 false, i1 false}
!596 = !{ptr @__bpf_trace_tp_map_nfsd_write_start, !69, !"__bpf_trace_tp_map_nfsd_write_start", i1 false, i1 false}
!597 = !{ptr @__bpf_trace_tp_map_nfsd_write_opened, !73, !"__bpf_trace_tp_map_nfsd_write_opened", i1 false, i1 false}
!598 = !{ptr @__bpf_trace_tp_map_nfsd_write_io_done, !77, !"__bpf_trace_tp_map_nfsd_write_io_done", i1 false, i1 false}
!599 = !{ptr @__bpf_trace_tp_map_nfsd_write_done, !81, !"__bpf_trace_tp_map_nfsd_write_done", i1 false, i1 false}
!600 = !{ptr @__bpf_trace_tp_map_nfsd_read_err, !85, !"__bpf_trace_tp_map_nfsd_read_err", i1 false, i1 false}
!601 = !{ptr @__bpf_trace_tp_map_nfsd_write_err, !89, !"__bpf_trace_tp_map_nfsd_write_err", i1 false, i1 false}
!602 = !{ptr @__bpf_trace_tp_map_nfsd_dirent, !93, !"__bpf_trace_tp_map_nfsd_dirent", i1 false, i1 false}
!603 = !{ptr @__bpf_trace_tp_map_nfsd_clone_file_range_err, !97, !"__bpf_trace_tp_map_nfsd_clone_file_range_err", i1 false, i1 false}
!604 = !{ptr @__bpf_trace_tp_map_nfsd_layoutstate_alloc, !101, !"__bpf_trace_tp_map_nfsd_layoutstate_alloc", i1 false, i1 false}
!605 = !{ptr @__bpf_trace_tp_map_nfsd_layoutstate_unhash, !105, !"__bpf_trace_tp_map_nfsd_layoutstate_unhash", i1 false, i1 false}
!606 = !{ptr @__bpf_trace_tp_map_nfsd_layoutstate_free, !109, !"__bpf_trace_tp_map_nfsd_layoutstate_free", i1 false, i1 false}
!607 = !{ptr @__bpf_trace_tp_map_nfsd_layout_get_lookup_fail, !113, !"__bpf_trace_tp_map_nfsd_layout_get_lookup_fail", i1 false, i1 false}
!608 = !{ptr @__bpf_trace_tp_map_nfsd_layout_commit_lookup_fail, !117, !"__bpf_trace_tp_map_nfsd_layout_commit_lookup_fail", i1 false, i1 false}
!609 = !{ptr @__bpf_trace_tp_map_nfsd_layout_return_lookup_fail, !121, !"__bpf_trace_tp_map_nfsd_layout_return_lookup_fail", i1 false, i1 false}
!610 = !{ptr @__bpf_trace_tp_map_nfsd_layout_recall, !125, !"__bpf_trace_tp_map_nfsd_layout_recall", i1 false, i1 false}
!611 = !{ptr @__bpf_trace_tp_map_nfsd_layout_recall_done, !129, !"__bpf_trace_tp_map_nfsd_layout_recall_done", i1 false, i1 false}
!612 = !{ptr @__bpf_trace_tp_map_nfsd_layout_recall_fail, !133, !"__bpf_trace_tp_map_nfsd_layout_recall_fail", i1 false, i1 false}
!613 = !{ptr @__bpf_trace_tp_map_nfsd_layout_recall_release, !137, !"__bpf_trace_tp_map_nfsd_layout_recall_release", i1 false, i1 false}
!614 = !{ptr @__bpf_trace_tp_map_nfsd_open, !141, !"__bpf_trace_tp_map_nfsd_open", i1 false, i1 false}
!615 = !{ptr @__bpf_trace_tp_map_nfsd_deleg_read, !145, !"__bpf_trace_tp_map_nfsd_deleg_read", i1 false, i1 false}
!616 = !{ptr @__bpf_trace_tp_map_nfsd_deleg_recall, !149, !"__bpf_trace_tp_map_nfsd_deleg_recall", i1 false, i1 false}
!617 = !{ptr @__bpf_trace_tp_map_nfsd_preprocess, !153, !"__bpf_trace_tp_map_nfsd_preprocess", i1 false, i1 false}
!618 = !{ptr @__bpf_trace_tp_map_nfsd_open_confirm, !157, !"__bpf_trace_tp_map_nfsd_open_confirm", i1 false, i1 false}
!619 = !{ptr @__bpf_trace_tp_map_nfsd_clid_expire_unconf, !161, !"__bpf_trace_tp_map_nfsd_clid_expire_unconf", i1 false, i1 false}
!620 = !{ptr @__bpf_trace_tp_map_nfsd_clid_reclaim_complete, !165, !"__bpf_trace_tp_map_nfsd_clid_reclaim_complete", i1 false, i1 false}
!621 = !{ptr @__bpf_trace_tp_map_nfsd_clid_confirmed, !169, !"__bpf_trace_tp_map_nfsd_clid_confirmed", i1 false, i1 false}
!622 = !{ptr @__bpf_trace_tp_map_nfsd_clid_destroyed, !173, !"__bpf_trace_tp_map_nfsd_clid_destroyed", i1 false, i1 false}
!623 = !{ptr @__bpf_trace_tp_map_nfsd_clid_admin_expired, !177, !"__bpf_trace_tp_map_nfsd_clid_admin_expired", i1 false, i1 false}
!624 = !{ptr @__bpf_trace_tp_map_nfsd_clid_replaced, !181, !"__bpf_trace_tp_map_nfsd_clid_replaced", i1 false, i1 false}
!625 = !{ptr @__bpf_trace_tp_map_nfsd_clid_purged, !185, !"__bpf_trace_tp_map_nfsd_clid_purged", i1 false, i1 false}
!626 = !{ptr @__bpf_trace_tp_map_nfsd_clid_renew, !189, !"__bpf_trace_tp_map_nfsd_clid_renew", i1 false, i1 false}
!627 = !{ptr @__bpf_trace_tp_map_nfsd_clid_stale, !193, !"__bpf_trace_tp_map_nfsd_clid_stale", i1 false, i1 false}
!628 = !{ptr @__bpf_trace_tp_map_nfsd_grace_start, !197, !"__bpf_trace_tp_map_nfsd_grace_start", i1 false, i1 false}
!629 = !{ptr @__bpf_trace_tp_map_nfsd_grace_complete, !201, !"__bpf_trace_tp_map_nfsd_grace_complete", i1 false, i1 false}
!630 = !{ptr @__bpf_trace_tp_map_nfsd_writeverf_reset, !205, !"__bpf_trace_tp_map_nfsd_writeverf_reset", i1 false, i1 false}
!631 = !{ptr @__bpf_trace_tp_map_nfsd_clid_cred_mismatch, !209, !"__bpf_trace_tp_map_nfsd_clid_cred_mismatch", i1 false, i1 false}
!632 = !{ptr @__bpf_trace_tp_map_nfsd_clid_verf_mismatch, !213, !"__bpf_trace_tp_map_nfsd_clid_verf_mismatch", i1 false, i1 false}
!633 = !{ptr @__bpf_trace_tp_map_nfsd_clid_fresh, !217, !"__bpf_trace_tp_map_nfsd_clid_fresh", i1 false, i1 false}
!634 = !{ptr @__bpf_trace_tp_map_nfsd_clid_confirmed_r, !221, !"__bpf_trace_tp_map_nfsd_clid_confirmed_r", i1 false, i1 false}
!635 = !{ptr @__bpf_trace_tp_map_nfsd_file_alloc, !225, !"__bpf_trace_tp_map_nfsd_file_alloc", i1 false, i1 false}
!636 = !{ptr @__bpf_trace_tp_map_nfsd_file_put_final, !229, !"__bpf_trace_tp_map_nfsd_file_put_final", i1 false, i1 false}
!637 = !{ptr @__bpf_trace_tp_map_nfsd_file_unhash, !233, !"__bpf_trace_tp_map_nfsd_file_unhash", i1 false, i1 false}
!638 = !{ptr @__bpf_trace_tp_map_nfsd_file_put, !237, !"__bpf_trace_tp_map_nfsd_file_put", i1 false, i1 false}
!639 = !{ptr @__bpf_trace_tp_map_nfsd_file_unhash_and_release_locked, !241, !"__bpf_trace_tp_map_nfsd_file_unhash_and_release_locked", i1 false, i1 false}
!640 = !{ptr @__bpf_trace_tp_map_nfsd_file_acquire, !245, !"__bpf_trace_tp_map_nfsd_file_acquire", i1 false, i1 false}
!641 = !{ptr @__bpf_trace_tp_map_nfsd_file_close_inode_sync, !249, !"__bpf_trace_tp_map_nfsd_file_close_inode_sync", i1 false, i1 false}
!642 = !{ptr @__bpf_trace_tp_map_nfsd_file_close_inode, !253, !"__bpf_trace_tp_map_nfsd_file_close_inode", i1 false, i1 false}
!643 = !{ptr @__bpf_trace_tp_map_nfsd_file_is_cached, !257, !"__bpf_trace_tp_map_nfsd_file_is_cached", i1 false, i1 false}
!644 = !{ptr @__bpf_trace_tp_map_nfsd_file_fsnotify_handle_event, !261, !"__bpf_trace_tp_map_nfsd_file_fsnotify_handle_event", i1 false, i1 false}
!645 = !{ptr @__bpf_trace_tp_map_nfsd_drc_found, !265, !"__bpf_trace_tp_map_nfsd_drc_found", i1 false, i1 false}
!646 = !{ptr @__bpf_trace_tp_map_nfsd_drc_mismatch, !269, !"__bpf_trace_tp_map_nfsd_drc_mismatch", i1 false, i1 false}
!647 = !{ptr @__bpf_trace_tp_map_nfsd_cb_args, !273, !"__bpf_trace_tp_map_nfsd_cb_args", i1 false, i1 false}
!648 = !{ptr @__bpf_trace_tp_map_nfsd_cb_nodelegs, !277, !"__bpf_trace_tp_map_nfsd_cb_nodelegs", i1 false, i1 false}
!649 = !{ptr @__bpf_trace_tp_map_nfsd_cb_state, !281, !"__bpf_trace_tp_map_nfsd_cb_state", i1 false, i1 false}
!650 = !{ptr @__bpf_trace_tp_map_nfsd_cb_probe, !285, !"__bpf_trace_tp_map_nfsd_cb_probe", i1 false, i1 false}
!651 = !{ptr @__bpf_trace_tp_map_nfsd_cb_lost, !289, !"__bpf_trace_tp_map_nfsd_cb_lost", i1 false, i1 false}
!652 = !{ptr @__bpf_trace_tp_map_nfsd_cb_shutdown, !293, !"__bpf_trace_tp_map_nfsd_cb_shutdown", i1 false, i1 false}
!653 = !{ptr @__bpf_trace_tp_map_nfsd_cb_setup, !297, !"__bpf_trace_tp_map_nfsd_cb_setup", i1 false, i1 false}
!654 = !{ptr @__bpf_trace_tp_map_nfsd_cb_setup_err, !301, !"__bpf_trace_tp_map_nfsd_cb_setup_err", i1 false, i1 false}
!655 = !{ptr @__bpf_trace_tp_map_nfsd_cb_recall, !305, !"__bpf_trace_tp_map_nfsd_cb_recall", i1 false, i1 false}
!656 = !{ptr @__bpf_trace_tp_map_nfsd_cb_notify_lock, !309, !"__bpf_trace_tp_map_nfsd_cb_notify_lock", i1 false, i1 false}
!657 = !{ptr @__bpf_trace_tp_map_nfsd_cb_offload, !313, !"__bpf_trace_tp_map_nfsd_cb_offload", i1 false, i1 false}
!658 = !{ptr @__tpstrtab_nfsd_garbage_args_err, !1, !"__tpstrtab_nfsd_garbage_args_err", i1 false, i1 false}
!659 = !{ptr @__tpstrtab_nfsd_cant_encode_err, !5, !"__tpstrtab_nfsd_cant_encode_err", i1 false, i1 false}
!660 = !{ptr @__tpstrtab_nfsd_compound, !9, !"__tpstrtab_nfsd_compound", i1 false, i1 false}
!661 = !{ptr @__tpstrtab_nfsd_compound_status, !13, !"__tpstrtab_nfsd_compound_status", i1 false, i1 false}
!662 = !{ptr @__tpstrtab_nfsd_compound_decode_err, !17, !"__tpstrtab_nfsd_compound_decode_err", i1 false, i1 false}
!663 = !{ptr @__tpstrtab_nfsd_compound_encode_err, !21, !"__tpstrtab_nfsd_compound_encode_err", i1 false, i1 false}
!664 = !{ptr @__tpstrtab_nfsd_set_fh_dentry_badexport, !25, !"__tpstrtab_nfsd_set_fh_dentry_badexport", i1 false, i1 false}
!665 = !{ptr @__tpstrtab_nfsd_set_fh_dentry_badhandle, !29, !"__tpstrtab_nfsd_set_fh_dentry_badhandle", i1 false, i1 false}
!666 = !{ptr @__tpstrtab_nfsd_exp_find_key, !33, !"__tpstrtab_nfsd_exp_find_key", i1 false, i1 false}
!667 = !{ptr @__tpstrtab_nfsd_expkey_update, !37, !"__tpstrtab_nfsd_expkey_update", i1 false, i1 false}
!668 = !{ptr @__tpstrtab_nfsd_exp_get_by_name, !41, !"__tpstrtab_nfsd_exp_get_by_name", i1 false, i1 false}
!669 = !{ptr @__tpstrtab_nfsd_export_update, !45, !"__tpstrtab_nfsd_export_update", i1 false, i1 false}
!670 = !{ptr @__tpstrtab_nfsd_read_start, !49, !"__tpstrtab_nfsd_read_start", i1 false, i1 false}
!671 = !{ptr @__tpstrtab_nfsd_read_splice, !53, !"__tpstrtab_nfsd_read_splice", i1 false, i1 false}
!672 = !{ptr @__tpstrtab_nfsd_read_vector, !57, !"__tpstrtab_nfsd_read_vector", i1 false, i1 false}
!673 = !{ptr @__tpstrtab_nfsd_read_io_done, !61, !"__tpstrtab_nfsd_read_io_done", i1 false, i1 false}
!674 = !{ptr @__tpstrtab_nfsd_read_done, !65, !"__tpstrtab_nfsd_read_done", i1 false, i1 false}
!675 = !{ptr @__tpstrtab_nfsd_write_start, !69, !"__tpstrtab_nfsd_write_start", i1 false, i1 false}
!676 = !{ptr @__tpstrtab_nfsd_write_opened, !73, !"__tpstrtab_nfsd_write_opened", i1 false, i1 false}
!677 = !{ptr @__tpstrtab_nfsd_write_io_done, !77, !"__tpstrtab_nfsd_write_io_done", i1 false, i1 false}
!678 = !{ptr @__tpstrtab_nfsd_write_done, !81, !"__tpstrtab_nfsd_write_done", i1 false, i1 false}
!679 = !{ptr @__tpstrtab_nfsd_read_err, !85, !"__tpstrtab_nfsd_read_err", i1 false, i1 false}
!680 = !{ptr @__tpstrtab_nfsd_write_err, !89, !"__tpstrtab_nfsd_write_err", i1 false, i1 false}
!681 = !{ptr @__tpstrtab_nfsd_dirent, !93, !"__tpstrtab_nfsd_dirent", i1 false, i1 false}
!682 = !{ptr @__tpstrtab_nfsd_clone_file_range_err, !97, !"__tpstrtab_nfsd_clone_file_range_err", i1 false, i1 false}
!683 = !{ptr @__tpstrtab_nfsd_layoutstate_alloc, !101, !"__tpstrtab_nfsd_layoutstate_alloc", i1 false, i1 false}
!684 = !{ptr @__tpstrtab_nfsd_layoutstate_unhash, !105, !"__tpstrtab_nfsd_layoutstate_unhash", i1 false, i1 false}
!685 = !{ptr @__tpstrtab_nfsd_layoutstate_free, !109, !"__tpstrtab_nfsd_layoutstate_free", i1 false, i1 false}
!686 = !{ptr @__tpstrtab_nfsd_layout_get_lookup_fail, !113, !"__tpstrtab_nfsd_layout_get_lookup_fail", i1 false, i1 false}
!687 = !{ptr @__tpstrtab_nfsd_layout_commit_lookup_fail, !117, !"__tpstrtab_nfsd_layout_commit_lookup_fail", i1 false, i1 false}
!688 = !{ptr @__tpstrtab_nfsd_layout_return_lookup_fail, !121, !"__tpstrtab_nfsd_layout_return_lookup_fail", i1 false, i1 false}
!689 = !{ptr @__tpstrtab_nfsd_layout_recall, !125, !"__tpstrtab_nfsd_layout_recall", i1 false, i1 false}
!690 = !{ptr @__tpstrtab_nfsd_layout_recall_done, !129, !"__tpstrtab_nfsd_layout_recall_done", i1 false, i1 false}
!691 = !{ptr @__tpstrtab_nfsd_layout_recall_fail, !133, !"__tpstrtab_nfsd_layout_recall_fail", i1 false, i1 false}
!692 = !{ptr @__tpstrtab_nfsd_layout_recall_release, !137, !"__tpstrtab_nfsd_layout_recall_release", i1 false, i1 false}
!693 = !{ptr @__tpstrtab_nfsd_open, !141, !"__tpstrtab_nfsd_open", i1 false, i1 false}
!694 = !{ptr @__tpstrtab_nfsd_deleg_read, !145, !"__tpstrtab_nfsd_deleg_read", i1 false, i1 false}
!695 = !{ptr @__tpstrtab_nfsd_deleg_recall, !149, !"__tpstrtab_nfsd_deleg_recall", i1 false, i1 false}
!696 = !{ptr @__tpstrtab_nfsd_preprocess, !153, !"__tpstrtab_nfsd_preprocess", i1 false, i1 false}
!697 = !{ptr @__tpstrtab_nfsd_open_confirm, !157, !"__tpstrtab_nfsd_open_confirm", i1 false, i1 false}
!698 = !{ptr @__tpstrtab_nfsd_clid_expire_unconf, !161, !"__tpstrtab_nfsd_clid_expire_unconf", i1 false, i1 false}
!699 = !{ptr @__tpstrtab_nfsd_clid_reclaim_complete, !165, !"__tpstrtab_nfsd_clid_reclaim_complete", i1 false, i1 false}
!700 = !{ptr @__tpstrtab_nfsd_clid_confirmed, !169, !"__tpstrtab_nfsd_clid_confirmed", i1 false, i1 false}
!701 = !{ptr @__tpstrtab_nfsd_clid_destroyed, !173, !"__tpstrtab_nfsd_clid_destroyed", i1 false, i1 false}
!702 = !{ptr @__tpstrtab_nfsd_clid_admin_expired, !177, !"__tpstrtab_nfsd_clid_admin_expired", i1 false, i1 false}
!703 = !{ptr @__tpstrtab_nfsd_clid_replaced, !181, !"__tpstrtab_nfsd_clid_replaced", i1 false, i1 false}
!704 = !{ptr @__tpstrtab_nfsd_clid_purged, !185, !"__tpstrtab_nfsd_clid_purged", i1 false, i1 false}
!705 = !{ptr @__tpstrtab_nfsd_clid_renew, !189, !"__tpstrtab_nfsd_clid_renew", i1 false, i1 false}
!706 = !{ptr @__tpstrtab_nfsd_clid_stale, !193, !"__tpstrtab_nfsd_clid_stale", i1 false, i1 false}
!707 = !{ptr @__tpstrtab_nfsd_grace_start, !197, !"__tpstrtab_nfsd_grace_start", i1 false, i1 false}
!708 = !{ptr @__tpstrtab_nfsd_grace_complete, !201, !"__tpstrtab_nfsd_grace_complete", i1 false, i1 false}
!709 = !{ptr @__tpstrtab_nfsd_writeverf_reset, !205, !"__tpstrtab_nfsd_writeverf_reset", i1 false, i1 false}
!710 = !{ptr @__tpstrtab_nfsd_clid_cred_mismatch, !209, !"__tpstrtab_nfsd_clid_cred_mismatch", i1 false, i1 false}
!711 = !{ptr @__tpstrtab_nfsd_clid_verf_mismatch, !213, !"__tpstrtab_nfsd_clid_verf_mismatch", i1 false, i1 false}
!712 = !{ptr @__tpstrtab_nfsd_clid_fresh, !217, !"__tpstrtab_nfsd_clid_fresh", i1 false, i1 false}
!713 = !{ptr @__tpstrtab_nfsd_clid_confirmed_r, !221, !"__tpstrtab_nfsd_clid_confirmed_r", i1 false, i1 false}
!714 = !{ptr @__tpstrtab_nfsd_file_alloc, !225, !"__tpstrtab_nfsd_file_alloc", i1 false, i1 false}
!715 = !{ptr @__tpstrtab_nfsd_file_put_final, !229, !"__tpstrtab_nfsd_file_put_final", i1 false, i1 false}
!716 = !{ptr @__tpstrtab_nfsd_file_unhash, !233, !"__tpstrtab_nfsd_file_unhash", i1 false, i1 false}
!717 = !{ptr @__tpstrtab_nfsd_file_put, !237, !"__tpstrtab_nfsd_file_put", i1 false, i1 false}
!718 = !{ptr @__tpstrtab_nfsd_file_unhash_and_release_locked, !241, !"__tpstrtab_nfsd_file_unhash_and_release_locked", i1 false, i1 false}
!719 = !{ptr @__tpstrtab_nfsd_file_acquire, !245, !"__tpstrtab_nfsd_file_acquire", i1 false, i1 false}
!720 = !{ptr @__tpstrtab_nfsd_file_close_inode_sync, !249, !"__tpstrtab_nfsd_file_close_inode_sync", i1 false, i1 false}
!721 = !{ptr @__tpstrtab_nfsd_file_close_inode, !253, !"__tpstrtab_nfsd_file_close_inode", i1 false, i1 false}
!722 = !{ptr @__tpstrtab_nfsd_file_is_cached, !257, !"__tpstrtab_nfsd_file_is_cached", i1 false, i1 false}
!723 = !{ptr @__tpstrtab_nfsd_file_fsnotify_handle_event, !261, !"__tpstrtab_nfsd_file_fsnotify_handle_event", i1 false, i1 false}
!724 = !{ptr @__tpstrtab_nfsd_drc_found, !265, !"__tpstrtab_nfsd_drc_found", i1 false, i1 false}
!725 = !{ptr @__tpstrtab_nfsd_drc_mismatch, !269, !"__tpstrtab_nfsd_drc_mismatch", i1 false, i1 false}
!726 = !{ptr @__tpstrtab_nfsd_cb_args, !273, !"__tpstrtab_nfsd_cb_args", i1 false, i1 false}
!727 = !{ptr @__tpstrtab_nfsd_cb_nodelegs, !277, !"__tpstrtab_nfsd_cb_nodelegs", i1 false, i1 false}
!728 = !{ptr @__tpstrtab_nfsd_cb_state, !281, !"__tpstrtab_nfsd_cb_state", i1 false, i1 false}
!729 = !{ptr @__tpstrtab_nfsd_cb_probe, !285, !"__tpstrtab_nfsd_cb_probe", i1 false, i1 false}
!730 = !{ptr @__tpstrtab_nfsd_cb_lost, !289, !"__tpstrtab_nfsd_cb_lost", i1 false, i1 false}
!731 = !{ptr @__tpstrtab_nfsd_cb_shutdown, !293, !"__tpstrtab_nfsd_cb_shutdown", i1 false, i1 false}
!732 = !{ptr @__tpstrtab_nfsd_cb_setup, !297, !"__tpstrtab_nfsd_cb_setup", i1 false, i1 false}
!733 = !{ptr @__tpstrtab_nfsd_cb_setup_err, !301, !"__tpstrtab_nfsd_cb_setup_err", i1 false, i1 false}
!734 = !{ptr @__tpstrtab_nfsd_cb_recall, !305, !"__tpstrtab_nfsd_cb_recall", i1 false, i1 false}
!735 = !{ptr @__tpstrtab_nfsd_cb_notify_lock, !309, !"__tpstrtab_nfsd_cb_notify_lock", i1 false, i1 false}
!736 = !{ptr @__tpstrtab_nfsd_cb_offload, !313, !"__tpstrtab_nfsd_cb_offload", i1 false, i1 false}
!737 = !{ptr @str__nfsd__trace_system_name, !738, !"str__nfsd__trace_system_name", i1 false, i1 false}
!738 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!739 = !{ptr @.str.14, !373, !"<string literal>", i1 false, i1 false}
!740 = !{ptr @.str.15, !373, !"<string literal>", i1 false, i1 false}
!741 = !{ptr @.str.16, !373, !"<string literal>", i1 false, i1 false}
!742 = !{ptr @.str.17, !373, !"<string literal>", i1 false, i1 false}
!743 = !{ptr @.str.18, !373, !"<string literal>", i1 false, i1 false}
!744 = !{ptr @.str.19, !373, !"<string literal>", i1 false, i1 false}
!745 = !{ptr @.str.20, !373, !"<string literal>", i1 false, i1 false}
!746 = !{ptr @.str.21, !373, !"<string literal>", i1 false, i1 false}
!747 = !{ptr @.str.22, !373, !"<string literal>", i1 false, i1 false}
!748 = !{ptr @trace_event_fields_nfsd_xdr_err_class, !373, !"trace_event_fields_nfsd_xdr_err_class", i1 false, i1 false}
!749 = !{ptr @trace_event_type_funcs_nfsd_xdr_err_class, !373, !"trace_event_type_funcs_nfsd_xdr_err_class", i1 false, i1 false}
!750 = !{ptr @.str.23, !373, !"<string literal>", i1 false, i1 false}
!751 = !{ptr @print_fmt_nfsd_xdr_err_class, !373, !"print_fmt_nfsd_xdr_err_class", i1 false, i1 false}
!752 = !{ptr @.str.24, !9, !"<string literal>", i1 false, i1 false}
!753 = !{ptr @trace_event_fields_nfsd_compound, !9, !"trace_event_fields_nfsd_compound", i1 false, i1 false}
!754 = !{ptr @trace_event_type_funcs_nfsd_compound, !9, !"trace_event_type_funcs_nfsd_compound", i1 false, i1 false}
!755 = !{ptr @.str.25, !9, !"<string literal>", i1 false, i1 false}
!756 = !{ptr @print_fmt_nfsd_compound, !9, !"print_fmt_nfsd_compound", i1 false, i1 false}
!757 = !{ptr @.str.26, !13, !"<string literal>", i1 false, i1 false}
!758 = !{ptr @.str.27, !13, !"<string literal>", i1 false, i1 false}
!759 = !{ptr @.str.28, !13, !"<string literal>", i1 false, i1 false}
!760 = !{ptr @.str.29, !13, !"<string literal>", i1 false, i1 false}
!761 = !{ptr @.str.30, !13, !"<string literal>", i1 false, i1 false}
!762 = !{ptr @.str.31, !13, !"<string literal>", i1 false, i1 false}
!763 = !{ptr @trace_event_fields_nfsd_compound_status, !13, !"trace_event_fields_nfsd_compound_status", i1 false, i1 false}
!764 = !{ptr @trace_event_type_funcs_nfsd_compound_status, !13, !"trace_event_type_funcs_nfsd_compound_status", i1 false, i1 false}
!765 = !{ptr @.str.32, !13, !"<string literal>", i1 false, i1 false}
!766 = !{ptr @print_fmt_nfsd_compound_status, !13, !"print_fmt_nfsd_compound_status", i1 false, i1 false}
!767 = !{ptr @.str.33, !17, !"<string literal>", i1 false, i1 false}
!768 = !{ptr @.str.34, !17, !"<string literal>", i1 false, i1 false}
!769 = !{ptr @trace_event_fields_nfsd_compound_decode_err, !17, !"trace_event_fields_nfsd_compound_decode_err", i1 false, i1 false}
!770 = !{ptr @trace_event_type_funcs_nfsd_compound_decode_err, !17, !"trace_event_type_funcs_nfsd_compound_decode_err", i1 false, i1 false}
!771 = !{ptr @.str.35, !17, !"<string literal>", i1 false, i1 false}
!772 = !{ptr @print_fmt_nfsd_compound_decode_err, !17, !"print_fmt_nfsd_compound_decode_err", i1 false, i1 false}
!773 = !{ptr @trace_event_fields_nfsd_compound_encode_err, !21, !"trace_event_fields_nfsd_compound_encode_err", i1 false, i1 false}
!774 = !{ptr @trace_event_type_funcs_nfsd_compound_encode_err, !21, !"trace_event_type_funcs_nfsd_compound_encode_err", i1 false, i1 false}
!775 = !{ptr @.str.36, !21, !"<string literal>", i1 false, i1 false}
!776 = !{ptr @print_fmt_nfsd_compound_encode_err, !21, !"print_fmt_nfsd_compound_encode_err", i1 false, i1 false}
!777 = !{ptr @.str.37, !391, !"<string literal>", i1 false, i1 false}
!778 = !{ptr @trace_event_fields_nfsd_fh_err_class, !391, !"trace_event_fields_nfsd_fh_err_class", i1 false, i1 false}
!779 = !{ptr @trace_event_type_funcs_nfsd_fh_err_class, !391, !"trace_event_type_funcs_nfsd_fh_err_class", i1 false, i1 false}
!780 = !{ptr @.str.38, !391, !"<string literal>", i1 false, i1 false}
!781 = !{ptr @print_fmt_nfsd_fh_err_class, !391, !"print_fmt_nfsd_fh_err_class", i1 false, i1 false}
!782 = !{ptr @.str.39, !33, !"<string literal>", i1 false, i1 false}
!783 = !{ptr @.str.40, !33, !"<string literal>", i1 false, i1 false}
!784 = !{ptr @.str.41, !33, !"<string literal>", i1 false, i1 false}
!785 = !{ptr @.str.42, !33, !"<string literal>", i1 false, i1 false}
!786 = !{ptr @trace_event_fields_nfsd_exp_find_key, !33, !"trace_event_fields_nfsd_exp_find_key", i1 false, i1 false}
!787 = !{ptr @trace_event_type_funcs_nfsd_exp_find_key, !33, !"trace_event_type_funcs_nfsd_exp_find_key", i1 false, i1 false}
!788 = !{ptr @.str.43, !33, !"<string literal>", i1 false, i1 false}
!789 = !{ptr @print_fmt_nfsd_exp_find_key, !33, !"print_fmt_nfsd_exp_find_key", i1 false, i1 false}
!790 = !{ptr @.str.44, !37, !"<string literal>", i1 false, i1 false}
!791 = !{ptr @.str.45, !37, !"<string literal>", i1 false, i1 false}
!792 = !{ptr @.str.46, !37, !"<string literal>", i1 false, i1 false}
!793 = !{ptr @trace_event_fields_nfsd_expkey_update, !37, !"trace_event_fields_nfsd_expkey_update", i1 false, i1 false}
!794 = !{ptr @trace_event_type_funcs_nfsd_expkey_update, !37, !"trace_event_type_funcs_nfsd_expkey_update", i1 false, i1 false}
!795 = !{ptr @.str.47, !37, !"<string literal>", i1 false, i1 false}
!796 = !{ptr @.str.48, !37, !"<string literal>", i1 false, i1 false}
!797 = !{ptr @.str.49, !37, !"<string literal>", i1 false, i1 false}
!798 = !{ptr @print_fmt_nfsd_expkey_update, !37, !"print_fmt_nfsd_expkey_update", i1 false, i1 false}
!799 = !{ptr @trace_event_fields_nfsd_exp_get_by_name, !41, !"trace_event_fields_nfsd_exp_get_by_name", i1 false, i1 false}
!800 = !{ptr @trace_event_type_funcs_nfsd_exp_get_by_name, !41, !"trace_event_type_funcs_nfsd_exp_get_by_name", i1 false, i1 false}
!801 = !{ptr @.str.50, !41, !"<string literal>", i1 false, i1 false}
!802 = !{ptr @print_fmt_nfsd_exp_get_by_name, !41, !"print_fmt_nfsd_exp_get_by_name", i1 false, i1 false}
!803 = !{ptr @trace_event_fields_nfsd_export_update, !45, !"trace_event_fields_nfsd_export_update", i1 false, i1 false}
!804 = !{ptr @trace_event_type_funcs_nfsd_export_update, !45, !"trace_event_type_funcs_nfsd_export_update", i1 false, i1 false}
!805 = !{ptr @.str.51, !45, !"<string literal>", i1 false, i1 false}
!806 = !{ptr @print_fmt_nfsd_export_update, !45, !"print_fmt_nfsd_export_update", i1 false, i1 false}
!807 = !{ptr @.str.52, !409, !"<string literal>", i1 false, i1 false}
!808 = !{ptr @.str.53, !409, !"<string literal>", i1 false, i1 false}
!809 = !{ptr @.str.54, !409, !"<string literal>", i1 false, i1 false}
!810 = !{ptr @trace_event_fields_nfsd_io_class, !409, !"trace_event_fields_nfsd_io_class", i1 false, i1 false}
!811 = !{ptr @trace_event_type_funcs_nfsd_io_class, !409, !"trace_event_type_funcs_nfsd_io_class", i1 false, i1 false}
!812 = !{ptr @.str.55, !409, !"<string literal>", i1 false, i1 false}
!813 = !{ptr @print_fmt_nfsd_io_class, !409, !"print_fmt_nfsd_io_class", i1 false, i1 false}
!814 = !{ptr @.str.56, !429, !"<string literal>", i1 false, i1 false}
!815 = !{ptr @trace_event_fields_nfsd_err_class, !429, !"trace_event_fields_nfsd_err_class", i1 false, i1 false}
!816 = !{ptr @trace_event_type_funcs_nfsd_err_class, !429, !"trace_event_type_funcs_nfsd_err_class", i1 false, i1 false}
!817 = !{ptr @.str.57, !429, !"<string literal>", i1 false, i1 false}
!818 = !{ptr @print_fmt_nfsd_err_class, !429, !"print_fmt_nfsd_err_class", i1 false, i1 false}
!819 = !{ptr @.str.58, !93, !"<string literal>", i1 false, i1 false}
!820 = !{ptr @trace_event_fields_nfsd_dirent, !93, !"trace_event_fields_nfsd_dirent", i1 false, i1 false}
!821 = !{ptr @trace_event_type_funcs_nfsd_dirent, !93, !"trace_event_type_funcs_nfsd_dirent", i1 false, i1 false}
!822 = !{ptr @.str.59, !93, !"<string literal>", i1 false, i1 false}
!823 = !{ptr @print_fmt_nfsd_dirent, !93, !"print_fmt_nfsd_dirent", i1 false, i1 false}
!824 = !{ptr @.str.60, !438, !"<string literal>", i1 false, i1 false}
!825 = !{ptr @.str.61, !438, !"<string literal>", i1 false, i1 false}
!826 = !{ptr @.str.62, !438, !"<string literal>", i1 false, i1 false}
!827 = !{ptr @.str.63, !438, !"<string literal>", i1 false, i1 false}
!828 = !{ptr @.str.64, !438, !"<string literal>", i1 false, i1 false}
!829 = !{ptr @trace_event_fields_nfsd_copy_err_class, !438, !"trace_event_fields_nfsd_copy_err_class", i1 false, i1 false}
!830 = !{ptr @trace_event_type_funcs_nfsd_copy_err_class, !438, !"trace_event_type_funcs_nfsd_copy_err_class", i1 false, i1 false}
!831 = !{ptr @.str.65, !438, !"<string literal>", i1 false, i1 false}
!832 = !{ptr @print_fmt_nfsd_copy_err_class, !438, !"print_fmt_nfsd_copy_err_class", i1 false, i1 false}
!833 = !{ptr @.str.66, !442, !"<string literal>", i1 false, i1 false}
!834 = !{ptr @.str.67, !442, !"<string literal>", i1 false, i1 false}
!835 = !{ptr @.str.68, !442, !"<string literal>", i1 false, i1 false}
!836 = !{ptr @.str.69, !442, !"<string literal>", i1 false, i1 false}
!837 = !{ptr @trace_event_fields_nfsd_stateid_class, !442, !"trace_event_fields_nfsd_stateid_class", i1 false, i1 false}
!838 = !{ptr @trace_event_type_funcs_nfsd_stateid_class, !442, !"trace_event_type_funcs_nfsd_stateid_class", i1 false, i1 false}
!839 = !{ptr @.str.70, !442, !"<string literal>", i1 false, i1 false}
!840 = !{ptr @print_fmt_nfsd_stateid_class, !442, !"print_fmt_nfsd_stateid_class", i1 false, i1 false}
!841 = !{ptr @.str.71, !470, !"<string literal>", i1 false, i1 false}
!842 = !{ptr @trace_event_fields_nfsd_stateseqid_class, !470, !"trace_event_fields_nfsd_stateseqid_class", i1 false, i1 false}
!843 = !{ptr @trace_event_type_funcs_nfsd_stateseqid_class, !470, !"trace_event_type_funcs_nfsd_stateseqid_class", i1 false, i1 false}
!844 = !{ptr @.str.72, !470, !"<string literal>", i1 false, i1 false}
!845 = !{ptr @print_fmt_nfsd_stateseqid_class, !470, !"print_fmt_nfsd_stateseqid_class", i1 false, i1 false}
!846 = !{ptr @trace_event_fields_nfsd_clientid_class, !476, !"trace_event_fields_nfsd_clientid_class", i1 false, i1 false}
!847 = !{ptr @trace_event_type_funcs_nfsd_clientid_class, !476, !"trace_event_type_funcs_nfsd_clientid_class", i1 false, i1 false}
!848 = !{ptr @.str.73, !476, !"<string literal>", i1 false, i1 false}
!849 = !{ptr @print_fmt_nfsd_clientid_class, !476, !"print_fmt_nfsd_clientid_class", i1 false, i1 false}
!850 = !{ptr @.str.74, !496, !"<string literal>", i1 false, i1 false}
!851 = !{ptr @.str.75, !496, !"<string literal>", i1 false, i1 false}
!852 = !{ptr @trace_event_fields_nfsd_net_class, !496, !"trace_event_fields_nfsd_net_class", i1 false, i1 false}
!853 = !{ptr @trace_event_type_funcs_nfsd_net_class, !496, !"trace_event_type_funcs_nfsd_net_class", i1 false, i1 false}
!854 = !{ptr @.str.76, !496, !"<string literal>", i1 false, i1 false}
!855 = !{ptr @print_fmt_nfsd_net_class, !496, !"print_fmt_nfsd_net_class", i1 false, i1 false}
!856 = !{ptr @.str.77, !205, !"<string literal>", i1 false, i1 false}
!857 = !{ptr @.str.78, !205, !"<string literal>", i1 false, i1 false}
!858 = !{ptr @.str.79, !205, !"<string literal>", i1 false, i1 false}
!859 = !{ptr @trace_event_fields_nfsd_writeverf_reset, !205, !"trace_event_fields_nfsd_writeverf_reset", i1 false, i1 false}
!860 = !{ptr @trace_event_type_funcs_nfsd_writeverf_reset, !205, !"trace_event_type_funcs_nfsd_writeverf_reset", i1 false, i1 false}
!861 = !{ptr @.str.80, !205, !"<string literal>", i1 false, i1 false}
!862 = !{ptr @print_fmt_nfsd_writeverf_reset, !205, !"print_fmt_nfsd_writeverf_reset", i1 false, i1 false}
!863 = !{ptr @.str.81, !209, !"<string literal>", i1 false, i1 false}
!864 = !{ptr @.str.82, !209, !"<string literal>", i1 false, i1 false}
!865 = !{ptr @.str.83, !209, !"<string literal>", i1 false, i1 false}
!866 = !{ptr @trace_event_fields_nfsd_clid_cred_mismatch, !209, !"trace_event_fields_nfsd_clid_cred_mismatch", i1 false, i1 false}
!867 = !{ptr @trace_event_type_funcs_nfsd_clid_cred_mismatch, !209, !"trace_event_type_funcs_nfsd_clid_cred_mismatch", i1 false, i1 false}
!868 = !{ptr @.str.84, !209, !"<string literal>", i1 false, i1 false}
!869 = !{ptr @.str.85, !209, !"<string literal>", i1 false, i1 false}
!870 = !{ptr @.str.86, !209, !"<string literal>", i1 false, i1 false}
!871 = !{ptr @.str.87, !209, !"<string literal>", i1 false, i1 false}
!872 = !{ptr @.str.88, !209, !"<string literal>", i1 false, i1 false}
!873 = !{ptr @.str.89, !209, !"<string literal>", i1 false, i1 false}
!874 = !{ptr @.str.90, !209, !"<string literal>", i1 false, i1 false}
!875 = !{ptr @trace_raw_output_nfsd_clid_cred_mismatch.symbols, !209, !"symbols", i1 false, i1 false}
!876 = !{ptr @trace_raw_output_nfsd_clid_cred_mismatch.symbols.91, !209, !"symbols", i1 false, i1 false}
!877 = !{ptr @print_fmt_nfsd_clid_cred_mismatch, !209, !"print_fmt_nfsd_clid_cred_mismatch", i1 false, i1 false}
!878 = !{ptr @.str.92, !213, !"<string literal>", i1 false, i1 false}
!879 = !{ptr @.str.93, !213, !"<string literal>", i1 false, i1 false}
!880 = !{ptr @trace_event_fields_nfsd_clid_verf_mismatch, !213, !"trace_event_fields_nfsd_clid_verf_mismatch", i1 false, i1 false}
!881 = !{ptr @trace_event_type_funcs_nfsd_clid_verf_mismatch, !213, !"trace_event_type_funcs_nfsd_clid_verf_mismatch", i1 false, i1 false}
!882 = !{ptr @.str.94, !213, !"<string literal>", i1 false, i1 false}
!883 = !{ptr @print_fmt_nfsd_clid_verf_mismatch, !213, !"print_fmt_nfsd_clid_verf_mismatch", i1 false, i1 false}
!884 = !{ptr @.str.95, !511, !"<string literal>", i1 false, i1 false}
!885 = !{ptr @trace_event_fields_nfsd_clid_class, !511, !"trace_event_fields_nfsd_clid_class", i1 false, i1 false}
!886 = !{ptr @trace_event_type_funcs_nfsd_clid_class, !511, !"trace_event_type_funcs_nfsd_clid_class", i1 false, i1 false}
!887 = !{ptr @.str.96, !511, !"<string literal>", i1 false, i1 false}
!888 = !{ptr @trace_raw_output_nfsd_clid_class.symbols, !511, !"symbols", i1 false, i1 false}
!889 = !{ptr @print_fmt_nfsd_clid_class, !511, !"print_fmt_nfsd_clid_class", i1 false, i1 false}
!890 = !{ptr @.str.97, !517, !"<string literal>", i1 false, i1 false}
!891 = !{ptr @.str.98, !517, !"<string literal>", i1 false, i1 false}
!892 = !{ptr @.str.99, !517, !"<string literal>", i1 false, i1 false}
!893 = !{ptr @.str.100, !517, !"<string literal>", i1 false, i1 false}
!894 = !{ptr @.str.101, !517, !"<string literal>", i1 false, i1 false}
!895 = !{ptr @.str.102, !517, !"<string literal>", i1 false, i1 false}
!896 = !{ptr @.str.103, !517, !"<string literal>", i1 false, i1 false}
!897 = !{ptr @.str.104, !517, !"<string literal>", i1 false, i1 false}
!898 = !{ptr @.str.105, !517, !"<string literal>", i1 false, i1 false}
!899 = !{ptr @trace_event_fields_nfsd_file_class, !517, !"trace_event_fields_nfsd_file_class", i1 false, i1 false}
!900 = !{ptr @trace_event_type_funcs_nfsd_file_class, !517, !"trace_event_type_funcs_nfsd_file_class", i1 false, i1 false}
!901 = !{ptr @.str.106, !517, !"<string literal>", i1 false, i1 false}
!902 = !{ptr @.str.107, !517, !"<string literal>", i1 false, i1 false}
!903 = !{ptr @.str.108, !517, !"<string literal>", i1 false, i1 false}
!904 = !{ptr @.str.109, !517, !"<string literal>", i1 false, i1 false}
!905 = !{ptr @.str.110, !517, !"<string literal>", i1 false, i1 false}
!906 = !{ptr @.str.111, !517, !"<string literal>", i1 false, i1 false}
!907 = !{ptr @trace_raw_output_nfsd_file_class.__flags, !517, !"__flags", i1 false, i1 false}
!908 = !{ptr @.str.112, !517, !"<string literal>", i1 false, i1 false}
!909 = !{ptr @.str.114, !517, !"<string literal>", i1 false, i1 false}
!910 = !{ptr @.str.115, !517, !"<string literal>", i1 false, i1 false}
!911 = !{ptr @.str.116, !517, !"<string literal>", i1 false, i1 false}
!912 = !{ptr @.str.117, !517, !"<string literal>", i1 false, i1 false}
!913 = !{ptr @.str.118, !517, !"<string literal>", i1 false, i1 false}
!914 = !{ptr @.str.119, !517, !"<string literal>", i1 false, i1 false}
!915 = !{ptr @.str.120, !517, !"<string literal>", i1 false, i1 false}
!916 = !{ptr @.str.121, !517, !"<string literal>", i1 false, i1 false}
!917 = !{ptr @.str.122, !517, !"<string literal>", i1 false, i1 false}
!918 = !{ptr @.str.123, !517, !"<string literal>", i1 false, i1 false}
!919 = !{ptr @.str.124, !517, !"<string literal>", i1 false, i1 false}
!920 = !{ptr @.str.125, !517, !"<string literal>", i1 false, i1 false}
!921 = !{ptr @.str.126, !517, !"<string literal>", i1 false, i1 false}
!922 = !{ptr @trace_raw_output_nfsd_file_class.__flags.113, !517, !"__flags", i1 false, i1 false}
!923 = !{ptr @print_fmt_nfsd_file_class, !517, !"print_fmt_nfsd_file_class", i1 false, i1 false}
!924 = !{ptr @.str.127, !245, !"<string literal>", i1 false, i1 false}
!925 = !{ptr @.str.128, !245, !"<string literal>", i1 false, i1 false}
!926 = !{ptr @.str.129, !245, !"<string literal>", i1 false, i1 false}
!927 = !{ptr @trace_event_fields_nfsd_file_acquire, !245, !"trace_event_fields_nfsd_file_acquire", i1 false, i1 false}
!928 = !{ptr @trace_event_type_funcs_nfsd_file_acquire, !245, !"trace_event_type_funcs_nfsd_file_acquire", i1 false, i1 false}
!929 = !{ptr @.str.130, !245, !"<string literal>", i1 false, i1 false}
!930 = !{ptr @trace_raw_output_nfsd_file_acquire.__flags, !245, !"__flags", i1 false, i1 false}
!931 = !{ptr @trace_raw_output_nfsd_file_acquire.__flags.131, !245, !"__flags", i1 false, i1 false}
!932 = !{ptr @trace_raw_output_nfsd_file_acquire.__flags.132, !245, !"__flags", i1 false, i1 false}
!933 = !{ptr @print_fmt_nfsd_file_acquire, !245, !"print_fmt_nfsd_file_acquire", i1 false, i1 false}
!934 = !{ptr @.str.133, !532, !"<string literal>", i1 false, i1 false}
!935 = !{ptr @.str.134, !532, !"<string literal>", i1 false, i1 false}
!936 = !{ptr @trace_event_fields_nfsd_file_search_class, !532, !"trace_event_fields_nfsd_file_search_class", i1 false, i1 false}
!937 = !{ptr @trace_event_type_funcs_nfsd_file_search_class, !532, !"trace_event_type_funcs_nfsd_file_search_class", i1 false, i1 false}
!938 = !{ptr @.str.135, !532, !"<string literal>", i1 false, i1 false}
!939 = !{ptr @print_fmt_nfsd_file_search_class, !532, !"print_fmt_nfsd_file_search_class", i1 false, i1 false}
!940 = !{ptr @.str.136, !261, !"<string literal>", i1 false, i1 false}
!941 = !{ptr @.str.137, !261, !"<string literal>", i1 false, i1 false}
!942 = !{ptr @.str.138, !261, !"<string literal>", i1 false, i1 false}
!943 = !{ptr @.str.139, !261, !"<string literal>", i1 false, i1 false}
!944 = !{ptr @trace_event_fields_nfsd_file_fsnotify_handle_event, !261, !"trace_event_fields_nfsd_file_fsnotify_handle_event", i1 false, i1 false}
!945 = !{ptr @trace_event_type_funcs_nfsd_file_fsnotify_handle_event, !261, !"trace_event_type_funcs_nfsd_file_fsnotify_handle_event", i1 false, i1 false}
!946 = !{ptr @.str.140, !261, !"<string literal>", i1 false, i1 false}
!947 = !{ptr @print_fmt_nfsd_file_fsnotify_handle_event, !261, !"print_fmt_nfsd_file_fsnotify_handle_event", i1 false, i1 false}
!948 = !{ptr @.str.141, !265, !"<string literal>", i1 false, i1 false}
!949 = !{ptr @trace_event_fields_nfsd_drc_found, !265, !"trace_event_fields_nfsd_drc_found", i1 false, i1 false}
!950 = !{ptr @trace_event_type_funcs_nfsd_drc_found, !265, !"trace_event_type_funcs_nfsd_drc_found", i1 false, i1 false}
!951 = !{ptr @.str.142, !265, !"<string literal>", i1 false, i1 false}
!952 = !{ptr @.str.143, !265, !"<string literal>", i1 false, i1 false}
!953 = !{ptr @.str.144, !265, !"<string literal>", i1 false, i1 false}
!954 = !{ptr @.str.145, !265, !"<string literal>", i1 false, i1 false}
!955 = !{ptr @trace_raw_output_nfsd_drc_found.symbols, !265, !"symbols", i1 false, i1 false}
!956 = !{ptr @print_fmt_nfsd_drc_found, !265, !"print_fmt_nfsd_drc_found", i1 false, i1 false}
!957 = !{ptr @.str.146, !269, !"<string literal>", i1 false, i1 false}
!958 = !{ptr @.str.147, !269, !"<string literal>", i1 false, i1 false}
!959 = !{ptr @trace_event_fields_nfsd_drc_mismatch, !269, !"trace_event_fields_nfsd_drc_mismatch", i1 false, i1 false}
!960 = !{ptr @trace_event_type_funcs_nfsd_drc_mismatch, !269, !"trace_event_type_funcs_nfsd_drc_mismatch", i1 false, i1 false}
!961 = !{ptr @.str.148, !269, !"<string literal>", i1 false, i1 false}
!962 = !{ptr @print_fmt_nfsd_drc_mismatch, !269, !"print_fmt_nfsd_drc_mismatch", i1 false, i1 false}
!963 = !{ptr @.str.149, !273, !"<string literal>", i1 false, i1 false}
!964 = !{ptr @.str.150, !273, !"<string literal>", i1 false, i1 false}
!965 = !{ptr @trace_event_fields_nfsd_cb_args, !273, !"trace_event_fields_nfsd_cb_args", i1 false, i1 false}
!966 = !{ptr @trace_event_type_funcs_nfsd_cb_args, !273, !"trace_event_type_funcs_nfsd_cb_args", i1 false, i1 false}
!967 = !{ptr @.str.151, !273, !"<string literal>", i1 false, i1 false}
!968 = !{ptr @print_fmt_nfsd_cb_args, !273, !"print_fmt_nfsd_cb_args", i1 false, i1 false}
!969 = !{ptr @trace_event_fields_nfsd_cb_nodelegs, !277, !"trace_event_fields_nfsd_cb_nodelegs", i1 false, i1 false}
!970 = !{ptr @trace_event_type_funcs_nfsd_cb_nodelegs, !277, !"trace_event_type_funcs_nfsd_cb_nodelegs", i1 false, i1 false}
!971 = !{ptr @print_fmt_nfsd_cb_nodelegs, !277, !"print_fmt_nfsd_cb_nodelegs", i1 false, i1 false}
!972 = !{ptr @.str.152, !555, !"<string literal>", i1 false, i1 false}
!973 = !{ptr @trace_event_fields_nfsd_cb_class, !555, !"trace_event_fields_nfsd_cb_class", i1 false, i1 false}
!974 = !{ptr @trace_event_type_funcs_nfsd_cb_class, !555, !"trace_event_type_funcs_nfsd_cb_class", i1 false, i1 false}
!975 = !{ptr @.str.153, !555, !"<string literal>", i1 false, i1 false}
!976 = !{ptr @.str.154, !555, !"<string literal>", i1 false, i1 false}
!977 = !{ptr @.str.155, !555, !"<string literal>", i1 false, i1 false}
!978 = !{ptr @.str.156, !555, !"<string literal>", i1 false, i1 false}
!979 = !{ptr @.str.157, !555, !"<string literal>", i1 false, i1 false}
!980 = !{ptr @trace_raw_output_nfsd_cb_class.symbols, !555, !"symbols", i1 false, i1 false}
!981 = !{ptr @print_fmt_nfsd_cb_class, !555, !"print_fmt_nfsd_cb_class", i1 false, i1 false}
!982 = !{ptr @.str.158, !297, !"<string literal>", i1 false, i1 false}
!983 = !{ptr @.str.159, !297, !"<string literal>", i1 false, i1 false}
!984 = !{ptr @trace_event_fields_nfsd_cb_setup, !297, !"trace_event_fields_nfsd_cb_setup", i1 false, i1 false}
!985 = !{ptr @trace_event_type_funcs_nfsd_cb_setup, !297, !"trace_event_type_funcs_nfsd_cb_setup", i1 false, i1 false}
!986 = !{ptr @.str.160, !297, !"<string literal>", i1 false, i1 false}
!987 = !{ptr @trace_raw_output_nfsd_cb_setup.symbols, !297, !"symbols", i1 false, i1 false}
!988 = !{ptr @print_fmt_nfsd_cb_setup, !297, !"print_fmt_nfsd_cb_setup", i1 false, i1 false}
!989 = !{ptr @.str.161, !301, !"<string literal>", i1 false, i1 false}
!990 = !{ptr @trace_event_fields_nfsd_cb_setup_err, !301, !"trace_event_fields_nfsd_cb_setup_err", i1 false, i1 false}
!991 = !{ptr @trace_event_type_funcs_nfsd_cb_setup_err, !301, !"trace_event_type_funcs_nfsd_cb_setup_err", i1 false, i1 false}
!992 = !{ptr @.str.162, !301, !"<string literal>", i1 false, i1 false}
!993 = !{ptr @print_fmt_nfsd_cb_setup_err, !301, !"print_fmt_nfsd_cb_setup_err", i1 false, i1 false}
!994 = !{ptr @trace_event_fields_nfsd_cb_recall, !305, !"trace_event_fields_nfsd_cb_recall", i1 false, i1 false}
!995 = !{ptr @trace_event_type_funcs_nfsd_cb_recall, !305, !"trace_event_type_funcs_nfsd_cb_recall", i1 false, i1 false}
!996 = !{ptr @.str.163, !305, !"<string literal>", i1 false, i1 false}
!997 = !{ptr @print_fmt_nfsd_cb_recall, !305, !"print_fmt_nfsd_cb_recall", i1 false, i1 false}
!998 = !{ptr @trace_event_fields_nfsd_cb_notify_lock, !309, !"trace_event_fields_nfsd_cb_notify_lock", i1 false, i1 false}
!999 = !{ptr @trace_event_type_funcs_nfsd_cb_notify_lock, !309, !"trace_event_type_funcs_nfsd_cb_notify_lock", i1 false, i1 false}
!1000 = !{ptr @.str.164, !309, !"<string literal>", i1 false, i1 false}
!1001 = !{ptr @print_fmt_nfsd_cb_notify_lock, !309, !"print_fmt_nfsd_cb_notify_lock", i1 false, i1 false}
!1002 = !{ptr @trace_event_fields_nfsd_cb_offload, !313, !"trace_event_fields_nfsd_cb_offload", i1 false, i1 false}
!1003 = !{ptr @trace_event_type_funcs_nfsd_cb_offload, !313, !"trace_event_type_funcs_nfsd_cb_offload", i1 false, i1 false}
!1004 = !{ptr @.str.165, !313, !"<string literal>", i1 false, i1 false}
!1005 = !{ptr @print_fmt_nfsd_cb_offload, !313, !"print_fmt_nfsd_cb_offload", i1 false, i1 false}
!1006 = !{!"sp"}
!1007 = !{i32 1, !"wchar_size", i32 2}
!1008 = !{i32 1, !"min_enum_size", i32 4}
!1009 = !{i32 8, !"branch-target-enforcement", i32 0}
!1010 = !{i32 8, !"sign-return-address", i32 0}
!1011 = !{i32 8, !"sign-return-address-all", i32 0}
!1012 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!1013 = !{i32 7, !"uwtable", i32 1}
!1014 = !{i32 7, !"frame-pointer", i32 2}
!1015 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!1016 = !{!"branch_weights", i32 2000, i32 1}
!1017 = !{!"branch_weights", i32 1, i32 2000}
!1018 = !{!"auto-init"}
!1019 = !{i8 0, i8 2}
