; ModuleID = '/llk/IR_all_yes/fs/xfs/scrub/trace.c_pt.bc'
source_filename = "../fs/xfs/scrub/trace.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_eval_map = type { ptr, ptr, i32 }
%struct.trace_event_fields = type { ptr, %union.anon.120 }
%union.anon.120 = type { %struct.anon.121 }
%struct.anon.121 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.122, %struct.trace_event, ptr, ptr, %union.anon.123, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.122 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.123 = type { ptr }
%union.anon.124 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.125 = type { %struct.bpf_raw_event_map }
%union.anon.126 = type { %struct.bpf_raw_event_map }
%union.anon.127 = type { %struct.bpf_raw_event_map }
%union.anon.128 = type { %struct.bpf_raw_event_map }
%union.anon.129 = type { %struct.bpf_raw_event_map }
%union.anon.130 = type { %struct.bpf_raw_event_map }
%union.anon.131 = type { %struct.bpf_raw_event_map }
%union.anon.132 = type { %struct.bpf_raw_event_map }
%union.anon.133 = type { %struct.bpf_raw_event_map }
%union.anon.134 = type { %struct.bpf_raw_event_map }
%union.anon.135 = type { %struct.bpf_raw_event_map }
%union.anon.136 = type { %struct.bpf_raw_event_map }
%union.anon.137 = type { %struct.bpf_raw_event_map }
%union.anon.138 = type { %struct.bpf_raw_event_map }
%union.anon.139 = type { %struct.bpf_raw_event_map }
%union.anon.140 = type { %struct.bpf_raw_event_map }
%union.anon.141 = type { %struct.bpf_raw_event_map }
%union.anon.142 = type { %struct.bpf_raw_event_map }
%union.anon.143 = type { %struct.bpf_raw_event_map }
%union.anon.144 = type { %struct.bpf_raw_event_map }
%union.anon.145 = type { %struct.bpf_raw_event_map }
%union.anon.146 = type { %struct.bpf_raw_event_map }
%union.anon.147 = type { %struct.bpf_raw_event_map }
%union.anon.148 = type { %struct.bpf_raw_event_map }
%union.anon.149 = type { %struct.bpf_raw_event_map }
%union.anon.150 = type { %struct.bpf_raw_event_map }
%union.anon.151 = type { %struct.bpf_raw_event_map }
%union.anon.152 = type { %struct.bpf_raw_event_map }
%union.anon.153 = type { %struct.bpf_raw_event_map }
%union.anon.154 = type { %struct.bpf_raw_event_map }
%union.anon.155 = type { %struct.bpf_raw_event_map }
%union.anon.156 = type { %struct.bpf_raw_event_map }
%union.anon.157 = type { %struct.bpf_raw_event_map }
%union.anon.158 = type { %struct.bpf_raw_event_map }
%union.anon.159 = type { %struct.bpf_raw_event_map }
%union.anon.160 = type { %struct.bpf_raw_event_map }
%union.anon.161 = type { %struct.bpf_raw_event_map }
%union.anon.162 = type { %struct.bpf_raw_event_map }
%struct.trace_print_flags = type { i32, ptr }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.xfs_mount = type { %struct.xfs_sb, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i8, i8, i8, i8, i32, i32, i32, [2 x i32], [2 x i32], [2 x i32], [2 x i32], [2 x i32], [2 x i32], [2 x i32], [2 x i32], i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i64, [5 x i64], [5 x i64], %struct.xfs_ino_geometry, %struct.xfs_trans_resv, i32, i8, i8, i8, i8, i8, i8, i8, i8, [116 x i8], %struct.spinlock, %struct.percpu_counter, %struct.percpu_counter, %struct.percpu_counter, %struct.percpu_counter, %struct.atomic64_t, %struct.xarray, %struct.spinlock, i64, i64, i64, %struct.delayed_work, %struct.xfs_kobj, %struct.xfs_kobj, %struct.xfs_kobj, [1 x [4 x %struct.xfs_error_cfg]], %struct.xstats, i32, i32, %struct.spinlock, %struct.shrinker, %struct.work_struct, i32, %struct.mutex, ptr, %struct.xfs_kobj }
%struct.xfs_sb = type { i32, i32, i64, i64, i64, %struct.uuid_t, i64, i64, i64, i64, i32, i32, i32, i32, i32, i16, i16, i16, i16, [12 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i64, i64, i64, i64, i64, i64, i16, i8, i8, i32, i32, i32, i8, i8, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, %struct.uuid_t }
%struct.uuid_t = type { [16 x i8] }
%struct.xfs_ino_geometry = type { i64, i32, i32, i32, i32, i32, i32, i32, [2 x i32], [2 x i32], i32, i32, i32, i32, i32, i32, i32, i64 }
%struct.xfs_trans_resv = type { %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res }
%struct.xfs_trans_res = type { i32, i32, i32 }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.2 }
%union.anon.2 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.atomic64_t = type { i64 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.xfs_error_cfg = type { %struct.xfs_kobj, i32, i32 }
%struct.xstats = type { ptr, %struct.xfs_kobj }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.xfs_kobj = type { %struct.kobject, %struct.completion }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, i16, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [24 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [24 x i8] }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t, %struct.lockdep_map }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { ptr }
%struct.hlist_head = type { ptr }
%struct.list_lru = type { ptr, %struct.list_head, i32, i8 }
%struct.callback_head = type { ptr, ptr }
%struct.trace_event_raw_xchk_class = type { %struct.trace_entry, i32, i64, i32, i32, i64, i32, i32, i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.xfs_inode = type { ptr, ptr, ptr, ptr, i64, %struct.xfs_imap, ptr, ptr, %struct.xfs_ifork, ptr, %struct.mrlock_t, %struct.atomic_t, %struct.llist_node, i16, i16, %struct.spinlock, i32, i64, i64, i64, i32, i32, %union.anon.91, i8, i16, i64, %struct.timespec64, %struct.inode, %struct.spinlock, %struct.work_struct, %struct.list_head }
%struct.xfs_imap = type { i64, i16, i16 }
%struct.xfs_ifork = type { i64, ptr, i32, i32, %union.anon.90, i16, i8, i32 }
%union.anon.90 = type { ptr }
%struct.mrlock_t = type { %struct.rw_semaphore, i32 }
%struct.llist_node = type { ptr }
%union.anon.91 = type { i32 }
%struct.timespec64 = type { i64, i32 }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, ptr, ptr, ptr, ptr, ptr, ptr, i32, %union.anon.75, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, %struct.seqcount, i32, %struct.rw_semaphore, i32, i32, %struct.hlist_node, %struct.list_head, ptr, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.76, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.77, ptr, %struct.address_space, %struct.list_head, %union.anon.78, i32, i32, ptr, ptr, ptr, ptr }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%union.anon.75 = type { i32 }
%struct.seqcount = type { i32, %struct.lockdep_map }
%union.anon.76 = type { %struct.callback_head }
%union.anon.77 = type { ptr }
%struct.address_space = type { ptr, %struct.xarray, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i32, i32, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%union.anon.78 = type { ptr }
%struct.xfs_scrub_metadata = type { i32, i32, i64, i32, i32, [5 x i64] }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_xchk_op_error = type { %struct.trace_entry, i32, i32, i32, i32, i32, ptr, [0 x i8] }
%struct.xfs_scrub = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, %struct.xchk_ag }
%struct.xchk_ag = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.trace_event_raw_xchk_file_op_error = type { %struct.trace_entry, i32, i64, i32, i32, i64, i32, ptr, [0 x i8] }
%struct.trace_event_raw_xchk_block_error_class = type { %struct.trace_entry, i32, i32, i32, i32, ptr, [0 x i8] }
%struct.trace_event_raw_xchk_ino_error_class = type { %struct.trace_entry, i32, i64, i32, ptr, [0 x i8] }
%struct.trace_event_raw_xchk_fblock_error_class = type { %struct.trace_entry, i32, i64, i32, i32, i64, ptr, [0 x i8] }
%struct.trace_event_raw_xchk_incomplete = type { %struct.trace_entry, i32, i32, ptr, [0 x i8] }
%struct.xfs_btree_cur = type { ptr, ptr, ptr, ptr, i32, i32, %union.xfs_btree_irec, i8, i8, i32, %union.anon.95, [0 x %struct.xfs_btree_level] }
%union.xfs_btree_irec = type { %struct.xfs_bmbt_irec }
%struct.xfs_bmbt_irec = type { i64, i64, i64, i32 }
%union.anon.95 = type { %struct.xfs_btree_cur_ag }
%struct.xfs_btree_cur_ag = type { ptr, %union.anon.96, %union.anon.97 }
%union.anon.96 = type { ptr }
%union.anon.97 = type { %struct.anon.98 }
%struct.anon.98 = type { i32, i32 }
%struct.xfs_btree_level = type { ptr, i16, i16 }
%struct.xfs_buf = type { %struct.rhash_head, i64, i32, %struct.atomic_t, %struct.atomic_t, i32, %struct.semaphore, %struct.list_head, %struct.spinlock, i32, i32, %struct.wait_queue_head, %struct.list_head, ptr, ptr, ptr, ptr, %struct.work_struct, %struct.completion, ptr, %struct.list_head, ptr, ptr, [2 x ptr], ptr, %struct.xfs_buf_map, i32, %struct.atomic_t, %struct.atomic_t, i32, i32, i32, i32, i32, i32, ptr }
%struct.rhash_head = type { ptr }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%struct.xfs_buf_map = type { i64, i32 }
%struct.trace_event_raw_xchk_btree_op_error = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, i32, ptr, [0 x i8] }
%struct.trace_event_raw_xchk_ifork_btree_op_error = type { %struct.trace_entry, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, ptr, [0 x i8] }
%struct.xfs_btree_cur_ino = type { ptr, ptr, i32, i16, i8, i8 }
%struct.trace_event_raw_xchk_btree_error = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, ptr, [0 x i8] }
%struct.trace_event_raw_xchk_ifork_btree_error = type { %struct.trace_entry, i32, i64, i32, i32, i32, i32, i32, i32, i32, ptr, [0 x i8] }
%struct.trace_event_raw_xchk_sbtree_class = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xchk_xref_error = type { %struct.trace_entry, i32, i32, i32, ptr, [0 x i8] }
%struct.trace_event_raw_xchk_iallocbt_check_cluster = type { %struct.trace_entry, i32, i32, i32, i64, i16, i32, i32, i32, i16, i16, [0 x i8] }
%struct.trace_event_raw_xchk_fscounters_calc = type { %struct.trace_entry, i32, i64, i64, i64, i64, i64, i64, i64, [0 x i8] }
%struct.trace_event_raw_xchk_fscounters_within_range = type { %struct.trace_entry, i32, i64, i64, i64, [0 x i8] }
%struct.trace_event_raw_xrep_extent_class = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xrep_rmap_class = type { %struct.trace_entry, i32, i32, i32, i32, i64, i64, i32, [0 x i8] }
%struct.trace_event_raw_xrep_refcount_extent_fn = type { %struct.trace_entry, i32, i32, i32, i32, i32, [0 x i8] }
%struct.xfs_refcount_irec = type { i32, i32, i32 }
%struct.trace_event_raw_xrep_init_btblock = type { %struct.trace_entry, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xrep_findroot_block = type { %struct.trace_entry, i32, i32, i32, i32, i16, [0 x i8] }
%struct.trace_event_raw_xrep_calc_ag_resblks = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xrep_calc_ag_resblks_btsize = type { %struct.trace_entry, i32, i32, i32, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_xrep_reset_counters = type { %struct.trace_entry, i32, [0 x i8] }
%struct.trace_event_raw_xrep_ialloc_insert = type { %struct.trace_entry, i32, i32, i32, i16, i8, i8, i64, [0 x i8] }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }

@__tpstrtab_xchk_start = internal constant [11 x i8] c"xchk_start\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_start = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_start }, align 4
@__tracepoint_xchk_start = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_start, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_start, ptr null, ptr @__traceiter_xchk_start, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_start = internal constant ptr @__tracepoint_xchk_start, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_done = internal constant [10 x i8] c"xchk_done\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_done = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_done }, align 4
@__tracepoint_xchk_done = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_done, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_done, ptr null, ptr @__traceiter_xchk_done, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_done = internal constant ptr @__tracepoint_xchk_done, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_deadlock_retry = internal constant [20 x i8] c"xchk_deadlock_retry\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_deadlock_retry = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_deadlock_retry }, align 4
@__tracepoint_xchk_deadlock_retry = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_deadlock_retry, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_deadlock_retry, ptr null, ptr @__traceiter_xchk_deadlock_retry, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_deadlock_retry = internal constant ptr @__tracepoint_xchk_deadlock_retry, section "__tracepoints_ptrs", align 4
@__tpstrtab_xrep_attempt = internal constant [13 x i8] c"xrep_attempt\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xrep_attempt = dso_local global %struct.static_call_key { ptr @__traceiter_xrep_attempt }, align 4
@__tracepoint_xrep_attempt = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xrep_attempt, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xrep_attempt, ptr null, ptr @__traceiter_xrep_attempt, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xrep_attempt = internal constant ptr @__tracepoint_xrep_attempt, section "__tracepoints_ptrs", align 4
@__tpstrtab_xrep_done = internal constant [10 x i8] c"xrep_done\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xrep_done = dso_local global %struct.static_call_key { ptr @__traceiter_xrep_done }, align 4
@__tracepoint_xrep_done = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xrep_done, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xrep_done, ptr null, ptr @__traceiter_xrep_done, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xrep_done = internal constant ptr @__tracepoint_xrep_done, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_op_error = internal constant [14 x i8] c"xchk_op_error\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_op_error = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_op_error }, align 4
@__tracepoint_xchk_op_error = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_op_error, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_op_error, ptr null, ptr @__traceiter_xchk_op_error, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_op_error = internal constant ptr @__tracepoint_xchk_op_error, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_file_op_error = internal constant [19 x i8] c"xchk_file_op_error\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_file_op_error = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_file_op_error }, align 4
@__tracepoint_xchk_file_op_error = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_file_op_error, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_file_op_error, ptr null, ptr @__traceiter_xchk_file_op_error, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_file_op_error = internal constant ptr @__tracepoint_xchk_file_op_error, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_fs_error = internal constant [14 x i8] c"xchk_fs_error\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_fs_error = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_fs_error }, align 4
@__tracepoint_xchk_fs_error = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_fs_error, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_fs_error, ptr null, ptr @__traceiter_xchk_fs_error, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_fs_error = internal constant ptr @__tracepoint_xchk_fs_error, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_block_error = internal constant [17 x i8] c"xchk_block_error\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_block_error = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_block_error }, align 4
@__tracepoint_xchk_block_error = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_block_error, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_block_error, ptr null, ptr @__traceiter_xchk_block_error, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_block_error = internal constant ptr @__tracepoint_xchk_block_error, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_block_preen = internal constant [17 x i8] c"xchk_block_preen\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_block_preen = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_block_preen }, align 4
@__tracepoint_xchk_block_preen = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_block_preen, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_block_preen, ptr null, ptr @__traceiter_xchk_block_preen, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_block_preen = internal constant ptr @__tracepoint_xchk_block_preen, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_ino_error = internal constant [15 x i8] c"xchk_ino_error\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_ino_error = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_ino_error }, align 4
@__tracepoint_xchk_ino_error = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_ino_error, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_ino_error, ptr null, ptr @__traceiter_xchk_ino_error, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_ino_error = internal constant ptr @__tracepoint_xchk_ino_error, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_ino_preen = internal constant [15 x i8] c"xchk_ino_preen\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_ino_preen = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_ino_preen }, align 4
@__tracepoint_xchk_ino_preen = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_ino_preen, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_ino_preen, ptr null, ptr @__traceiter_xchk_ino_preen, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_ino_preen = internal constant ptr @__tracepoint_xchk_ino_preen, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_ino_warning = internal constant [17 x i8] c"xchk_ino_warning\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_ino_warning = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_ino_warning }, align 4
@__tracepoint_xchk_ino_warning = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_ino_warning, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_ino_warning, ptr null, ptr @__traceiter_xchk_ino_warning, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_ino_warning = internal constant ptr @__tracepoint_xchk_ino_warning, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_fblock_error = internal constant [18 x i8] c"xchk_fblock_error\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_fblock_error = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_fblock_error }, align 4
@__tracepoint_xchk_fblock_error = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_fblock_error, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_fblock_error, ptr null, ptr @__traceiter_xchk_fblock_error, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_fblock_error = internal constant ptr @__tracepoint_xchk_fblock_error, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_fblock_warning = internal constant [20 x i8] c"xchk_fblock_warning\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_fblock_warning = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_fblock_warning }, align 4
@__tracepoint_xchk_fblock_warning = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_fblock_warning, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_fblock_warning, ptr null, ptr @__traceiter_xchk_fblock_warning, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_fblock_warning = internal constant ptr @__tracepoint_xchk_fblock_warning, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_incomplete = internal constant [16 x i8] c"xchk_incomplete\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_incomplete = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_incomplete }, align 4
@__tracepoint_xchk_incomplete = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_incomplete, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_incomplete, ptr null, ptr @__traceiter_xchk_incomplete, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_incomplete = internal constant ptr @__tracepoint_xchk_incomplete, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_btree_op_error = internal constant [20 x i8] c"xchk_btree_op_error\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_btree_op_error = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_btree_op_error }, align 4
@__tracepoint_xchk_btree_op_error = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_btree_op_error, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_btree_op_error, ptr null, ptr @__traceiter_xchk_btree_op_error, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_btree_op_error = internal constant ptr @__tracepoint_xchk_btree_op_error, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_ifork_btree_op_error = internal constant [26 x i8] c"xchk_ifork_btree_op_error\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_ifork_btree_op_error = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_ifork_btree_op_error }, align 4
@__tracepoint_xchk_ifork_btree_op_error = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_ifork_btree_op_error, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_ifork_btree_op_error, ptr null, ptr @__traceiter_xchk_ifork_btree_op_error, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_ifork_btree_op_error = internal constant ptr @__tracepoint_xchk_ifork_btree_op_error, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_btree_error = internal constant [17 x i8] c"xchk_btree_error\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_btree_error = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_btree_error }, align 4
@__tracepoint_xchk_btree_error = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_btree_error, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_btree_error, ptr null, ptr @__traceiter_xchk_btree_error, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_btree_error = internal constant ptr @__tracepoint_xchk_btree_error, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_ifork_btree_error = internal constant [23 x i8] c"xchk_ifork_btree_error\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_ifork_btree_error = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_ifork_btree_error }, align 4
@__tracepoint_xchk_ifork_btree_error = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_ifork_btree_error, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_ifork_btree_error, ptr null, ptr @__traceiter_xchk_ifork_btree_error, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_ifork_btree_error = internal constant ptr @__tracepoint_xchk_ifork_btree_error, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_btree_rec = internal constant [15 x i8] c"xchk_btree_rec\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_btree_rec = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_btree_rec }, align 4
@__tracepoint_xchk_btree_rec = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_btree_rec, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_btree_rec, ptr null, ptr @__traceiter_xchk_btree_rec, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_btree_rec = internal constant ptr @__tracepoint_xchk_btree_rec, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_btree_key = internal constant [15 x i8] c"xchk_btree_key\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_btree_key = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_btree_key }, align 4
@__tracepoint_xchk_btree_key = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_btree_key, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_btree_key, ptr null, ptr @__traceiter_xchk_btree_key, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_btree_key = internal constant ptr @__tracepoint_xchk_btree_key, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_xref_error = internal constant [16 x i8] c"xchk_xref_error\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_xref_error = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_xref_error }, align 4
@__tracepoint_xchk_xref_error = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_xref_error, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_xref_error, ptr null, ptr @__traceiter_xchk_xref_error, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_xref_error = internal constant ptr @__tracepoint_xchk_xref_error, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_iallocbt_check_cluster = internal constant [28 x i8] c"xchk_iallocbt_check_cluster\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_iallocbt_check_cluster = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_iallocbt_check_cluster }, align 4
@__tracepoint_xchk_iallocbt_check_cluster = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_iallocbt_check_cluster, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_iallocbt_check_cluster, ptr null, ptr @__traceiter_xchk_iallocbt_check_cluster, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_iallocbt_check_cluster = internal constant ptr @__tracepoint_xchk_iallocbt_check_cluster, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_fscounters_calc = internal constant [21 x i8] c"xchk_fscounters_calc\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_fscounters_calc = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_fscounters_calc }, align 4
@__tracepoint_xchk_fscounters_calc = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_fscounters_calc, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_fscounters_calc, ptr null, ptr @__traceiter_xchk_fscounters_calc, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_fscounters_calc = internal constant ptr @__tracepoint_xchk_fscounters_calc, section "__tracepoints_ptrs", align 4
@__tpstrtab_xchk_fscounters_within_range = internal constant [29 x i8] c"xchk_fscounters_within_range\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xchk_fscounters_within_range = dso_local global %struct.static_call_key { ptr @__traceiter_xchk_fscounters_within_range }, align 4
@__tracepoint_xchk_fscounters_within_range = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xchk_fscounters_within_range, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xchk_fscounters_within_range, ptr null, ptr @__traceiter_xchk_fscounters_within_range, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xchk_fscounters_within_range = internal constant ptr @__tracepoint_xchk_fscounters_within_range, section "__tracepoints_ptrs", align 4
@__tpstrtab_xrep_dispose_btree_extent = internal constant [26 x i8] c"xrep_dispose_btree_extent\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xrep_dispose_btree_extent = dso_local global %struct.static_call_key { ptr @__traceiter_xrep_dispose_btree_extent }, align 4
@__tracepoint_xrep_dispose_btree_extent = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xrep_dispose_btree_extent, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xrep_dispose_btree_extent, ptr null, ptr @__traceiter_xrep_dispose_btree_extent, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xrep_dispose_btree_extent = internal constant ptr @__tracepoint_xrep_dispose_btree_extent, section "__tracepoints_ptrs", align 4
@__tpstrtab_xrep_agfl_insert = internal constant [17 x i8] c"xrep_agfl_insert\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xrep_agfl_insert = dso_local global %struct.static_call_key { ptr @__traceiter_xrep_agfl_insert }, align 4
@__tracepoint_xrep_agfl_insert = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xrep_agfl_insert, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xrep_agfl_insert, ptr null, ptr @__traceiter_xrep_agfl_insert, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xrep_agfl_insert = internal constant ptr @__tracepoint_xrep_agfl_insert, section "__tracepoints_ptrs", align 4
@__tpstrtab_xrep_alloc_extent_fn = internal constant [21 x i8] c"xrep_alloc_extent_fn\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xrep_alloc_extent_fn = dso_local global %struct.static_call_key { ptr @__traceiter_xrep_alloc_extent_fn }, align 4
@__tracepoint_xrep_alloc_extent_fn = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xrep_alloc_extent_fn, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xrep_alloc_extent_fn, ptr null, ptr @__traceiter_xrep_alloc_extent_fn, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xrep_alloc_extent_fn = internal constant ptr @__tracepoint_xrep_alloc_extent_fn, section "__tracepoints_ptrs", align 4
@__tpstrtab_xrep_ialloc_extent_fn = internal constant [22 x i8] c"xrep_ialloc_extent_fn\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xrep_ialloc_extent_fn = dso_local global %struct.static_call_key { ptr @__traceiter_xrep_ialloc_extent_fn }, align 4
@__tracepoint_xrep_ialloc_extent_fn = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xrep_ialloc_extent_fn, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xrep_ialloc_extent_fn, ptr null, ptr @__traceiter_xrep_ialloc_extent_fn, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xrep_ialloc_extent_fn = internal constant ptr @__tracepoint_xrep_ialloc_extent_fn, section "__tracepoints_ptrs", align 4
@__tpstrtab_xrep_rmap_extent_fn = internal constant [20 x i8] c"xrep_rmap_extent_fn\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xrep_rmap_extent_fn = dso_local global %struct.static_call_key { ptr @__traceiter_xrep_rmap_extent_fn }, align 4
@__tracepoint_xrep_rmap_extent_fn = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xrep_rmap_extent_fn, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xrep_rmap_extent_fn, ptr null, ptr @__traceiter_xrep_rmap_extent_fn, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xrep_rmap_extent_fn = internal constant ptr @__tracepoint_xrep_rmap_extent_fn, section "__tracepoints_ptrs", align 4
@__tpstrtab_xrep_bmap_extent_fn = internal constant [20 x i8] c"xrep_bmap_extent_fn\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xrep_bmap_extent_fn = dso_local global %struct.static_call_key { ptr @__traceiter_xrep_bmap_extent_fn }, align 4
@__tracepoint_xrep_bmap_extent_fn = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xrep_bmap_extent_fn, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xrep_bmap_extent_fn, ptr null, ptr @__traceiter_xrep_bmap_extent_fn, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xrep_bmap_extent_fn = internal constant ptr @__tracepoint_xrep_bmap_extent_fn, section "__tracepoints_ptrs", align 4
@__tpstrtab_xrep_refcount_extent_fn = internal constant [24 x i8] c"xrep_refcount_extent_fn\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xrep_refcount_extent_fn = dso_local global %struct.static_call_key { ptr @__traceiter_xrep_refcount_extent_fn }, align 4
@__tracepoint_xrep_refcount_extent_fn = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xrep_refcount_extent_fn, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xrep_refcount_extent_fn, ptr null, ptr @__traceiter_xrep_refcount_extent_fn, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xrep_refcount_extent_fn = internal constant ptr @__tracepoint_xrep_refcount_extent_fn, section "__tracepoints_ptrs", align 4
@__tpstrtab_xrep_init_btblock = internal constant [18 x i8] c"xrep_init_btblock\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xrep_init_btblock = dso_local global %struct.static_call_key { ptr @__traceiter_xrep_init_btblock }, align 4
@__tracepoint_xrep_init_btblock = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xrep_init_btblock, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xrep_init_btblock, ptr null, ptr @__traceiter_xrep_init_btblock, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xrep_init_btblock = internal constant ptr @__tracepoint_xrep_init_btblock, section "__tracepoints_ptrs", align 4
@__tpstrtab_xrep_findroot_block = internal constant [20 x i8] c"xrep_findroot_block\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xrep_findroot_block = dso_local global %struct.static_call_key { ptr @__traceiter_xrep_findroot_block }, align 4
@__tracepoint_xrep_findroot_block = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xrep_findroot_block, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xrep_findroot_block, ptr null, ptr @__traceiter_xrep_findroot_block, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xrep_findroot_block = internal constant ptr @__tracepoint_xrep_findroot_block, section "__tracepoints_ptrs", align 4
@__tpstrtab_xrep_calc_ag_resblks = internal constant [21 x i8] c"xrep_calc_ag_resblks\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xrep_calc_ag_resblks = dso_local global %struct.static_call_key { ptr @__traceiter_xrep_calc_ag_resblks }, align 4
@__tracepoint_xrep_calc_ag_resblks = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xrep_calc_ag_resblks, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xrep_calc_ag_resblks, ptr null, ptr @__traceiter_xrep_calc_ag_resblks, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xrep_calc_ag_resblks = internal constant ptr @__tracepoint_xrep_calc_ag_resblks, section "__tracepoints_ptrs", align 4
@__tpstrtab_xrep_calc_ag_resblks_btsize = internal constant [28 x i8] c"xrep_calc_ag_resblks_btsize\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xrep_calc_ag_resblks_btsize = dso_local global %struct.static_call_key { ptr @__traceiter_xrep_calc_ag_resblks_btsize }, align 4
@__tracepoint_xrep_calc_ag_resblks_btsize = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xrep_calc_ag_resblks_btsize, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xrep_calc_ag_resblks_btsize, ptr null, ptr @__traceiter_xrep_calc_ag_resblks_btsize, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xrep_calc_ag_resblks_btsize = internal constant ptr @__tracepoint_xrep_calc_ag_resblks_btsize, section "__tracepoints_ptrs", align 4
@__tpstrtab_xrep_reset_counters = internal constant [20 x i8] c"xrep_reset_counters\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xrep_reset_counters = dso_local global %struct.static_call_key { ptr @__traceiter_xrep_reset_counters }, align 4
@__tracepoint_xrep_reset_counters = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xrep_reset_counters, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xrep_reset_counters, ptr null, ptr @__traceiter_xrep_reset_counters, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xrep_reset_counters = internal constant ptr @__tracepoint_xrep_reset_counters, section "__tracepoints_ptrs", align 4
@__tpstrtab_xrep_ialloc_insert = internal constant [19 x i8] c"xrep_ialloc_insert\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_xrep_ialloc_insert = dso_local global %struct.static_call_key { ptr @__traceiter_xrep_ialloc_insert }, align 4
@__tracepoint_xrep_ialloc_insert = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_xrep_ialloc_insert, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_xrep_ialloc_insert, ptr null, ptr @__traceiter_xrep_ialloc_insert, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_xrep_ialloc_insert = internal constant ptr @__tracepoint_xrep_ialloc_insert, section "__tracepoints_ptrs", align 4
@str__xfs_scrub__trace_system_name = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"xfs_scrub\00", [22 x i8] zeroinitializer }, align 32
@.str = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"XFS_BTNUM_BNOi\00", [17 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_BTNUM_BNOi = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_BTNUM_BNOi = internal global ptr @__TRACE_SYSTEM_XFS_BTNUM_BNOi, section "_ftrace_eval_map", align 4
@.str.1 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"XFS_BTNUM_CNTi\00", [17 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_BTNUM_CNTi = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.1, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_BTNUM_CNTi = internal global ptr @__TRACE_SYSTEM_XFS_BTNUM_CNTi, section "_ftrace_eval_map", align 4
@.str.2 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"XFS_BTNUM_BMAPi\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_BTNUM_BMAPi = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.2, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_BTNUM_BMAPi = internal global ptr @__TRACE_SYSTEM_XFS_BTNUM_BMAPi, section "_ftrace_eval_map", align 4
@.str.3 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"XFS_BTNUM_INOi\00", [17 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_BTNUM_INOi = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.3, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_BTNUM_INOi = internal global ptr @__TRACE_SYSTEM_XFS_BTNUM_INOi, section "_ftrace_eval_map", align 4
@.str.4 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"XFS_BTNUM_FINOi\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_BTNUM_FINOi = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.4, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_BTNUM_FINOi = internal global ptr @__TRACE_SYSTEM_XFS_BTNUM_FINOi, section "_ftrace_eval_map", align 4
@.str.5 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"XFS_BTNUM_RMAPi\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_BTNUM_RMAPi = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.5, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_BTNUM_RMAPi = internal global ptr @__TRACE_SYSTEM_XFS_BTNUM_RMAPi, section "_ftrace_eval_map", align 4
@.str.6 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"XFS_BTNUM_REFCi\00", [16 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_BTNUM_REFCi = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.6, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_BTNUM_REFCi = internal global ptr @__TRACE_SYSTEM_XFS_BTNUM_REFCi, section "_ftrace_eval_map", align 4
@.str.7 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"XFS_SCRUB_TYPE_PROBE\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_PROBE = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.7, i32 0 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_PROBE = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_PROBE, section "_ftrace_eval_map", align 4
@.str.8 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"XFS_SCRUB_TYPE_SB\00", [46 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_SB = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.8, i32 1 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_SB = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_SB, section "_ftrace_eval_map", align 4
@.str.9 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"XFS_SCRUB_TYPE_AGF\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_AGF = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.9, i32 2 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_AGF = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_AGF, section "_ftrace_eval_map", align 4
@.str.10 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"XFS_SCRUB_TYPE_AGFL\00", [44 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_AGFL = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.10, i32 3 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_AGFL = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_AGFL, section "_ftrace_eval_map", align 4
@.str.11 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"XFS_SCRUB_TYPE_AGI\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_AGI = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.11, i32 4 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_AGI = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_AGI, section "_ftrace_eval_map", align 4
@.str.12 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"XFS_SCRUB_TYPE_BNOBT\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_BNOBT = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.12, i32 5 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_BNOBT = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_BNOBT, section "_ftrace_eval_map", align 4
@.str.13 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"XFS_SCRUB_TYPE_CNTBT\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_CNTBT = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.13, i32 6 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_CNTBT = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_CNTBT, section "_ftrace_eval_map", align 4
@.str.14 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"XFS_SCRUB_TYPE_INOBT\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_INOBT = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.14, i32 7 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_INOBT = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_INOBT, section "_ftrace_eval_map", align 4
@.str.15 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"XFS_SCRUB_TYPE_FINOBT\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_FINOBT = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.15, i32 8 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_FINOBT = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_FINOBT, section "_ftrace_eval_map", align 4
@.str.16 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"XFS_SCRUB_TYPE_RMAPBT\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_RMAPBT = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.16, i32 9 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_RMAPBT = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_RMAPBT, section "_ftrace_eval_map", align 4
@.str.17 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"XFS_SCRUB_TYPE_REFCNTBT\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_REFCNTBT = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.17, i32 10 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_REFCNTBT = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_REFCNTBT, section "_ftrace_eval_map", align 4
@.str.18 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"XFS_SCRUB_TYPE_INODE\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_INODE = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.18, i32 11 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_INODE = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_INODE, section "_ftrace_eval_map", align 4
@.str.19 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"XFS_SCRUB_TYPE_BMBTD\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTD = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.19, i32 12 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTD = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTD, section "_ftrace_eval_map", align 4
@.str.20 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"XFS_SCRUB_TYPE_BMBTA\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTA = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.20, i32 13 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTA = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTA, section "_ftrace_eval_map", align 4
@.str.21 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"XFS_SCRUB_TYPE_BMBTC\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTC = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.21, i32 14 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTC = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTC, section "_ftrace_eval_map", align 4
@.str.22 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"XFS_SCRUB_TYPE_DIR\00", [45 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_DIR = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.22, i32 15 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_DIR = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_DIR, section "_ftrace_eval_map", align 4
@.str.23 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"XFS_SCRUB_TYPE_XATTR\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_XATTR = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.23, i32 16 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_XATTR = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_XATTR, section "_ftrace_eval_map", align 4
@.str.24 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"XFS_SCRUB_TYPE_SYMLINK\00", [41 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_SYMLINK = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.24, i32 17 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_SYMLINK = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_SYMLINK, section "_ftrace_eval_map", align 4
@.str.25 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"XFS_SCRUB_TYPE_PARENT\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_PARENT = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.25, i32 18 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_PARENT = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_PARENT, section "_ftrace_eval_map", align 4
@.str.26 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"XFS_SCRUB_TYPE_RTBITMAP\00", [40 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_RTBITMAP = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.26, i32 19 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_RTBITMAP = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_RTBITMAP, section "_ftrace_eval_map", align 4
@.str.27 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"XFS_SCRUB_TYPE_RTSUM\00", [43 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_RTSUM = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.27, i32 20 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_RTSUM = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_RTSUM, section "_ftrace_eval_map", align 4
@.str.28 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"XFS_SCRUB_TYPE_UQUOTA\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_UQUOTA = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.28, i32 21 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_UQUOTA = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_UQUOTA, section "_ftrace_eval_map", align 4
@.str.29 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"XFS_SCRUB_TYPE_GQUOTA\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_GQUOTA = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.29, i32 22 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_GQUOTA = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_GQUOTA, section "_ftrace_eval_map", align 4
@.str.30 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"XFS_SCRUB_TYPE_PQUOTA\00", [42 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_PQUOTA = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.30, i32 23 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_PQUOTA = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_PQUOTA, section "_ftrace_eval_map", align 4
@.str.31 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"XFS_SCRUB_TYPE_FSCOUNTERS\00", [38 x i8] zeroinitializer }, align 32
@__TRACE_SYSTEM_XFS_SCRUB_TYPE_FSCOUNTERS = internal global %struct.trace_eval_map { ptr @str__xfs_scrub__trace_system_name, ptr @.str.31, i32 24 }, section ".init.data", align 4
@TRACE_SYSTEM_XFS_SCRUB_TYPE_FSCOUNTERS = internal global ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_FSCOUNTERS, section "_ftrace_eval_map", align 4
@trace_event_fields_xchk_class = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.34, %union.anon.120 { %struct.anon.121 { ptr @.str.35, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.36, %union.anon.120 { %struct.anon.121 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.120 { %struct.anon.121 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.34, %union.anon.120 { %struct.anon.121 { ptr @.str.40, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.36, %union.anon.120 { %struct.anon.121 { ptr @.str.41, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.36, %union.anon.120 { %struct.anon.121 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.44, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xchk_class = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xchk_class, ptr @perf_trace_xchk_class, ptr @trace_event_reg, ptr @trace_event_fields_xchk_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xchk_class, i64 24), ptr getelementptr (i8, ptr @event_class_xchk_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xchk_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xchk_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xchk_class = internal global { [932 x i8], [252 x i8] } { [932 x i8] c"\22dev %d:%d ino 0x%llx type %s agno 0x%x inum 0x%llx gen 0x%x flags (%s) error %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->ino, __print_symbolic(REC->type, { 0, \22probe\22 }, { 1, \22sb\22 }, { 2, \22agf\22 }, { 3, \22agfl\22 }, { 4, \22agi\22 }, { 5, \22bnobt\22 }, { 6, \22cntbt\22 }, { 7, \22inobt\22 }, { 8, \22finobt\22 }, { 9, \22rmapbt\22 }, { 10, \22refcountbt\22 }, { 11, \22inode\22 }, { 12, \22bmapbtd\22 }, { 13, \22bmapbta\22 }, { 14, \22bmapbtc\22 }, { 15, \22directory\22 }, { 16, \22xattr\22 }, { 17, \22symlink\22 }, { 18, \22parent\22 }, { 19, \22rtbitmap\22 }, { 20, \22rtsummary\22 }, { 21, \22usrquota\22 }, { 22, \22grpquota\22 }, { 23, \22prjquota\22 }, { 24, \22fscounters\22 }), REC->agno, REC->inum, REC->gen, __print_flags(REC->flags, \22|\22, { (1 << 0), \22repair\22 }, { (1 << 1), \22corrupt\22 }, { (1 << 2), \22preen\22 }, { (1 << 3), \22xfail\22 }, { (1 << 4), \22xcorrupt\22 }, { (1 << 5), \22incomplete\22 }, { (1 << 6), \22warning\22 }, { (1 << 7), \22norepair\22 }), REC->error\00", [252 x i8] zeroinitializer }, align 32
@event_xchk_start = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_class, %union.anon.122 { ptr @__tracepoint_xchk_start }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_class }, ptr @print_fmt_xchk_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_start = internal global ptr @event_xchk_start, section "_ftrace_events", align 4
@event_xchk_done = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_class, %union.anon.122 { ptr @__tracepoint_xchk_done }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_class }, ptr @print_fmt_xchk_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_done = internal global ptr @event_xchk_done, section "_ftrace_events", align 4
@event_xchk_deadlock_retry = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_class, %union.anon.122 { ptr @__tracepoint_xchk_deadlock_retry }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_class }, ptr @print_fmt_xchk_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_deadlock_retry = internal global ptr @event_xchk_deadlock_retry, section "_ftrace_events", align 4
@event_xrep_attempt = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_class, %union.anon.122 { ptr @__tracepoint_xrep_attempt }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_class }, ptr @print_fmt_xchk_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xrep_attempt = internal global ptr @event_xrep_attempt, section "_ftrace_events", align 4
@event_xrep_done = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_class, %union.anon.122 { ptr @__tracepoint_xrep_done }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_class }, ptr @print_fmt_xchk_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xrep_done = internal global ptr @event_xrep_done, section "_ftrace_events", align 4
@trace_event_fields_xchk_op_error = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.36, %union.anon.120 { %struct.anon.121 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.120 { %struct.anon.121 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.120 { %struct.anon.121 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.44, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.82, %union.anon.120 { %struct.anon.121 { ptr @.str.83, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_xchk_op_error = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xchk_op_error, ptr @perf_trace_xchk_op_error, ptr @trace_event_reg, ptr @trace_event_fields_xchk_op_error, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xchk_op_error, i64 24), ptr getelementptr (i8, ptr @event_class_xchk_op_error, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xchk_op_error = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xchk_op_error, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xchk_op_error = internal global { [671 x i8], [161 x i8] } { [671 x i8] c"\22dev %d:%d type %s agno 0x%x agbno 0x%x error %d ret_ip %pS\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), __print_symbolic(REC->type, { 0, \22probe\22 }, { 1, \22sb\22 }, { 2, \22agf\22 }, { 3, \22agfl\22 }, { 4, \22agi\22 }, { 5, \22bnobt\22 }, { 6, \22cntbt\22 }, { 7, \22inobt\22 }, { 8, \22finobt\22 }, { 9, \22rmapbt\22 }, { 10, \22refcountbt\22 }, { 11, \22inode\22 }, { 12, \22bmapbtd\22 }, { 13, \22bmapbta\22 }, { 14, \22bmapbtc\22 }, { 15, \22directory\22 }, { 16, \22xattr\22 }, { 17, \22symlink\22 }, { 18, \22parent\22 }, { 19, \22rtbitmap\22 }, { 20, \22rtsummary\22 }, { 21, \22usrquota\22 }, { 22, \22grpquota\22 }, { 23, \22prjquota\22 }, { 24, \22fscounters\22 }), REC->agno, REC->bno, REC->error, REC->ret_ip\00", [161 x i8] zeroinitializer }, align 32
@event_xchk_op_error = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_op_error, %union.anon.122 { ptr @__tracepoint_xchk_op_error }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_op_error }, ptr @print_fmt_xchk_op_error, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_op_error = internal global ptr @event_xchk_op_error, section "_ftrace_events", align 4
@trace_event_fields_xchk_file_op_error = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.34, %union.anon.120 { %struct.anon.121 { ptr @.str.35, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.85, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.36, %union.anon.120 { %struct.anon.121 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.86, %union.anon.120 { %struct.anon.121 { ptr @.str.87, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.44, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.82, %union.anon.120 { %struct.anon.121 { ptr @.str.83, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_xchk_file_op_error = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xchk_file_op_error, ptr @perf_trace_xchk_file_op_error, ptr @trace_event_reg, ptr @trace_event_fields_xchk_file_op_error, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xchk_file_op_error, i64 24), ptr getelementptr (i8, ptr @event_class_xchk_file_op_error, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xchk_file_op_error = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xchk_file_op_error, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xchk_file_op_error = internal global { [764 x i8], [164 x i8] } { [764 x i8] c"\22dev %d:%d ino 0x%llx fork %s type %s fileoff 0x%llx error %d ret_ip %pS\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->ino, __print_symbolic(REC->whichfork, { 0, \22data\22 }, { 1, \22attr\22 }, { 2, \22cow\22 }), __print_symbolic(REC->type, { 0, \22probe\22 }, { 1, \22sb\22 }, { 2, \22agf\22 }, { 3, \22agfl\22 }, { 4, \22agi\22 }, { 5, \22bnobt\22 }, { 6, \22cntbt\22 }, { 7, \22inobt\22 }, { 8, \22finobt\22 }, { 9, \22rmapbt\22 }, { 10, \22refcountbt\22 }, { 11, \22inode\22 }, { 12, \22bmapbtd\22 }, { 13, \22bmapbta\22 }, { 14, \22bmapbtc\22 }, { 15, \22directory\22 }, { 16, \22xattr\22 }, { 17, \22symlink\22 }, { 18, \22parent\22 }, { 19, \22rtbitmap\22 }, { 20, \22rtsummary\22 }, { 21, \22usrquota\22 }, { 22, \22grpquota\22 }, { 23, \22prjquota\22 }, { 24, \22fscounters\22 }), REC->offset, REC->error, REC->ret_ip\00", [164 x i8] zeroinitializer }, align 32
@event_xchk_file_op_error = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_file_op_error, %union.anon.122 { ptr @__tracepoint_xchk_file_op_error }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_file_op_error }, ptr @print_fmt_xchk_file_op_error, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_file_op_error = internal global ptr @event_xchk_file_op_error, section "_ftrace_events", align 4
@trace_event_fields_xchk_block_error_class = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.36, %union.anon.120 { %struct.anon.121 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.120 { %struct.anon.121 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.120 { %struct.anon.121 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.82, %union.anon.120 { %struct.anon.121 { ptr @.str.83, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_xchk_block_error_class = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xchk_block_error_class, ptr @perf_trace_xchk_block_error_class, ptr @trace_event_reg, ptr @trace_event_fields_xchk_block_error_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xchk_block_error_class, i64 24), ptr getelementptr (i8, ptr @event_class_xchk_block_error_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xchk_block_error_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xchk_block_error_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xchk_block_error_class = internal global { [652 x i8], [180 x i8] } { [652 x i8] c"\22dev %d:%d type %s agno 0x%x agbno 0x%x ret_ip %pS\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), __print_symbolic(REC->type, { 0, \22probe\22 }, { 1, \22sb\22 }, { 2, \22agf\22 }, { 3, \22agfl\22 }, { 4, \22agi\22 }, { 5, \22bnobt\22 }, { 6, \22cntbt\22 }, { 7, \22inobt\22 }, { 8, \22finobt\22 }, { 9, \22rmapbt\22 }, { 10, \22refcountbt\22 }, { 11, \22inode\22 }, { 12, \22bmapbtd\22 }, { 13, \22bmapbta\22 }, { 14, \22bmapbtc\22 }, { 15, \22directory\22 }, { 16, \22xattr\22 }, { 17, \22symlink\22 }, { 18, \22parent\22 }, { 19, \22rtbitmap\22 }, { 20, \22rtsummary\22 }, { 21, \22usrquota\22 }, { 22, \22grpquota\22 }, { 23, \22prjquota\22 }, { 24, \22fscounters\22 }), REC->agno, REC->agbno, REC->ret_ip\00", [180 x i8] zeroinitializer }, align 32
@event_xchk_fs_error = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_block_error_class, %union.anon.122 { ptr @__tracepoint_xchk_fs_error }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_block_error_class }, ptr @print_fmt_xchk_block_error_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_fs_error = internal global ptr @event_xchk_fs_error, section "_ftrace_events", align 4
@event_xchk_block_error = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_block_error_class, %union.anon.122 { ptr @__tracepoint_xchk_block_error }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_block_error_class }, ptr @print_fmt_xchk_block_error_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_block_error = internal global ptr @event_xchk_block_error, section "_ftrace_events", align 4
@event_xchk_block_preen = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_block_error_class, %union.anon.122 { ptr @__tracepoint_xchk_block_preen }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_block_error_class }, ptr @print_fmt_xchk_block_error_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_block_preen = internal global ptr @event_xchk_block_preen, section "_ftrace_events", align 4
@trace_event_fields_xchk_ino_error_class = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.34, %union.anon.120 { %struct.anon.121 { ptr @.str.35, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.36, %union.anon.120 { %struct.anon.121 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.82, %union.anon.120 { %struct.anon.121 { ptr @.str.83, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xchk_ino_error_class = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xchk_ino_error_class, ptr @perf_trace_xchk_ino_error_class, ptr @trace_event_reg, ptr @trace_event_fields_xchk_ino_error_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xchk_ino_error_class, i64 24), ptr getelementptr (i8, ptr @event_class_xchk_ino_error_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xchk_ino_error_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xchk_ino_error_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xchk_ino_error_class = internal global { [629 x i8], [139 x i8] } { [629 x i8] c"\22dev %d:%d ino 0x%llx type %s ret_ip %pS\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->ino, __print_symbolic(REC->type, { 0, \22probe\22 }, { 1, \22sb\22 }, { 2, \22agf\22 }, { 3, \22agfl\22 }, { 4, \22agi\22 }, { 5, \22bnobt\22 }, { 6, \22cntbt\22 }, { 7, \22inobt\22 }, { 8, \22finobt\22 }, { 9, \22rmapbt\22 }, { 10, \22refcountbt\22 }, { 11, \22inode\22 }, { 12, \22bmapbtd\22 }, { 13, \22bmapbta\22 }, { 14, \22bmapbtc\22 }, { 15, \22directory\22 }, { 16, \22xattr\22 }, { 17, \22symlink\22 }, { 18, \22parent\22 }, { 19, \22rtbitmap\22 }, { 20, \22rtsummary\22 }, { 21, \22usrquota\22 }, { 22, \22grpquota\22 }, { 23, \22prjquota\22 }, { 24, \22fscounters\22 }), REC->ret_ip\00", [139 x i8] zeroinitializer }, align 32
@event_xchk_ino_error = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_ino_error_class, %union.anon.122 { ptr @__tracepoint_xchk_ino_error }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_ino_error_class }, ptr @print_fmt_xchk_ino_error_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_ino_error = internal global ptr @event_xchk_ino_error, section "_ftrace_events", align 4
@event_xchk_ino_preen = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_ino_error_class, %union.anon.122 { ptr @__tracepoint_xchk_ino_preen }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_ino_error_class }, ptr @print_fmt_xchk_ino_error_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_ino_preen = internal global ptr @event_xchk_ino_preen, section "_ftrace_events", align 4
@event_xchk_ino_warning = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_ino_error_class, %union.anon.122 { ptr @__tracepoint_xchk_ino_warning }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_ino_error_class }, ptr @print_fmt_xchk_ino_error_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_ino_warning = internal global ptr @event_xchk_ino_warning, section "_ftrace_events", align 4
@trace_event_fields_xchk_fblock_error_class = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.34, %union.anon.120 { %struct.anon.121 { ptr @.str.35, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.85, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.36, %union.anon.120 { %struct.anon.121 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.86, %union.anon.120 { %struct.anon.121 { ptr @.str.87, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.82, %union.anon.120 { %struct.anon.121 { ptr @.str.83, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_xchk_fblock_error_class = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xchk_fblock_error_class, ptr @perf_trace_xchk_fblock_error_class, ptr @trace_event_reg, ptr @trace_event_fields_xchk_fblock_error_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xchk_fblock_error_class, i64 24), ptr getelementptr (i8, ptr @event_class_xchk_fblock_error_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xchk_fblock_error_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xchk_fblock_error_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xchk_fblock_error_class = internal global { [743 x i8], [185 x i8] } { [743 x i8] c"\22dev %d:%d ino 0x%llx fork %s type %s fileoff 0x%llx ret_ip %pS\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->ino, __print_symbolic(REC->whichfork, { 0, \22data\22 }, { 1, \22attr\22 }, { 2, \22cow\22 }), __print_symbolic(REC->type, { 0, \22probe\22 }, { 1, \22sb\22 }, { 2, \22agf\22 }, { 3, \22agfl\22 }, { 4, \22agi\22 }, { 5, \22bnobt\22 }, { 6, \22cntbt\22 }, { 7, \22inobt\22 }, { 8, \22finobt\22 }, { 9, \22rmapbt\22 }, { 10, \22refcountbt\22 }, { 11, \22inode\22 }, { 12, \22bmapbtd\22 }, { 13, \22bmapbta\22 }, { 14, \22bmapbtc\22 }, { 15, \22directory\22 }, { 16, \22xattr\22 }, { 17, \22symlink\22 }, { 18, \22parent\22 }, { 19, \22rtbitmap\22 }, { 20, \22rtsummary\22 }, { 21, \22usrquota\22 }, { 22, \22grpquota\22 }, { 23, \22prjquota\22 }, { 24, \22fscounters\22 }), REC->offset, REC->ret_ip\00", [185 x i8] zeroinitializer }, align 32
@event_xchk_fblock_error = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_fblock_error_class, %union.anon.122 { ptr @__tracepoint_xchk_fblock_error }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_fblock_error_class }, ptr @print_fmt_xchk_fblock_error_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_fblock_error = internal global ptr @event_xchk_fblock_error, section "_ftrace_events", align 4
@event_xchk_fblock_warning = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_fblock_error_class, %union.anon.122 { ptr @__tracepoint_xchk_fblock_warning }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_fblock_error_class }, ptr @print_fmt_xchk_fblock_error_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_fblock_warning = internal global ptr @event_xchk_fblock_warning, section "_ftrace_events", align 4
@trace_event_fields_xchk_incomplete = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.36, %union.anon.120 { %struct.anon.121 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.82, %union.anon.120 { %struct.anon.121 { ptr @.str.83, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_xchk_incomplete = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xchk_incomplete, ptr @perf_trace_xchk_incomplete, ptr @trace_event_reg, ptr @trace_event_fields_xchk_incomplete, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xchk_incomplete, i64 24), ptr getelementptr (i8, ptr @event_class_xchk_incomplete, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xchk_incomplete = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xchk_incomplete, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xchk_incomplete = internal global { [608 x i8], [128 x i8] } { [608 x i8] c"\22dev %d:%d type %s ret_ip %pS\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), __print_symbolic(REC->type, { 0, \22probe\22 }, { 1, \22sb\22 }, { 2, \22agf\22 }, { 3, \22agfl\22 }, { 4, \22agi\22 }, { 5, \22bnobt\22 }, { 6, \22cntbt\22 }, { 7, \22inobt\22 }, { 8, \22finobt\22 }, { 9, \22rmapbt\22 }, { 10, \22refcountbt\22 }, { 11, \22inode\22 }, { 12, \22bmapbtd\22 }, { 13, \22bmapbta\22 }, { 14, \22bmapbtc\22 }, { 15, \22directory\22 }, { 16, \22xattr\22 }, { 17, \22symlink\22 }, { 18, \22parent\22 }, { 19, \22rtbitmap\22 }, { 20, \22rtsummary\22 }, { 21, \22usrquota\22 }, { 22, \22grpquota\22 }, { 23, \22prjquota\22 }, { 24, \22fscounters\22 }), REC->ret_ip\00", [128 x i8] zeroinitializer }, align 32
@event_xchk_incomplete = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_incomplete, %union.anon.122 { ptr @__tracepoint_xchk_incomplete }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_incomplete }, ptr @print_fmt_xchk_incomplete, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_incomplete = internal global ptr @event_xchk_incomplete, section "_ftrace_events", align 4
@trace_event_fields_xchk_btree_op_error = internal global { [10 x %struct.trace_event_fields], [48 x i8] } { [10 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.36, %union.anon.120 { %struct.anon.121 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.99, %union.anon.120 { %struct.anon.121 { ptr @.str.100, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.101, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.120 { %struct.anon.121 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.120 { %struct.anon.121 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.102, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.44, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.82, %union.anon.120 { %struct.anon.121 { ptr @.str.83, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_xchk_btree_op_error = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xchk_btree_op_error, ptr @perf_trace_xchk_btree_op_error, ptr @trace_event_reg, ptr @trace_event_fields_xchk_btree_op_error, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xchk_btree_op_error, i64 24), ptr getelementptr (i8, ptr @event_class_xchk_btree_op_error, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xchk_btree_op_error = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xchk_btree_op_error, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xchk_btree_op_error = internal global { [957 x i8], [227 x i8] } { [957 x i8] c"\22dev %d:%d type %s btree %s level %d ptr %d agno 0x%x agbno 0x%x error %d ret_ip %pS\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), __print_symbolic(REC->type, { 0, \22probe\22 }, { 1, \22sb\22 }, { 2, \22agf\22 }, { 3, \22agfl\22 }, { 4, \22agi\22 }, { 5, \22bnobt\22 }, { 6, \22cntbt\22 }, { 7, \22inobt\22 }, { 8, \22finobt\22 }, { 9, \22rmapbt\22 }, { 10, \22refcountbt\22 }, { 11, \22inode\22 }, { 12, \22bmapbtd\22 }, { 13, \22bmapbta\22 }, { 14, \22bmapbtc\22 }, { 15, \22directory\22 }, { 16, \22xattr\22 }, { 17, \22symlink\22 }, { 18, \22parent\22 }, { 19, \22rtbitmap\22 }, { 20, \22rtsummary\22 }, { 21, \22usrquota\22 }, { 22, \22grpquota\22 }, { 23, \22prjquota\22 }, { 24, \22fscounters\22 }), __print_symbolic(REC->btnum, { XFS_BTNUM_BNOi, \22bnobt\22 }, { XFS_BTNUM_CNTi, \22cntbt\22 }, { XFS_BTNUM_RMAPi, \22rmapbt\22 }, { XFS_BTNUM_BMAPi, \22bmbt\22 }, { XFS_BTNUM_INOi, \22inobt\22 }, { XFS_BTNUM_FINOi, \22finobt\22 }, { XFS_BTNUM_REFCi, \22refcbt\22 }), REC->level, REC->ptr, REC->agno, REC->bno, REC->error, REC->ret_ip\00", [227 x i8] zeroinitializer }, align 32
@event_xchk_btree_op_error = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_btree_op_error, %union.anon.122 { ptr @__tracepoint_xchk_btree_op_error }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_btree_op_error }, ptr @print_fmt_xchk_btree_op_error, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_btree_op_error = internal global ptr @event_xchk_btree_op_error, section "_ftrace_events", align 4
@trace_event_fields_xchk_ifork_btree_op_error = internal global { [12 x %struct.trace_event_fields], [64 x i8] } { [12 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.34, %union.anon.120 { %struct.anon.121 { ptr @.str.35, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.85, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.36, %union.anon.120 { %struct.anon.121 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.99, %union.anon.120 { %struct.anon.121 { ptr @.str.100, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.101, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.102, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.120 { %struct.anon.121 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.120 { %struct.anon.121 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.44, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.82, %union.anon.120 { %struct.anon.121 { ptr @.str.83, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [64 x i8] zeroinitializer }, align 32
@event_class_xchk_ifork_btree_op_error = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xchk_ifork_btree_op_error, ptr @perf_trace_xchk_ifork_btree_op_error, ptr @trace_event_reg, ptr @trace_event_fields_xchk_ifork_btree_op_error, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xchk_ifork_btree_op_error, i64 24), ptr getelementptr (i8, ptr @event_class_xchk_ifork_btree_op_error, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xchk_ifork_btree_op_error = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xchk_ifork_btree_op_error, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xchk_ifork_btree_op_error = internal global { [1064 x i8], [280 x i8] } { [1064 x i8] c"\22dev %d:%d ino 0x%llx fork %s type %s btree %s level %d ptr %d agno 0x%x agbno 0x%x error %d ret_ip %pS\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->ino, __print_symbolic(REC->whichfork, { 0, \22data\22 }, { 1, \22attr\22 }, { 2, \22cow\22 }), __print_symbolic(REC->type, { 0, \22probe\22 }, { 1, \22sb\22 }, { 2, \22agf\22 }, { 3, \22agfl\22 }, { 4, \22agi\22 }, { 5, \22bnobt\22 }, { 6, \22cntbt\22 }, { 7, \22inobt\22 }, { 8, \22finobt\22 }, { 9, \22rmapbt\22 }, { 10, \22refcountbt\22 }, { 11, \22inode\22 }, { 12, \22bmapbtd\22 }, { 13, \22bmapbta\22 }, { 14, \22bmapbtc\22 }, { 15, \22directory\22 }, { 16, \22xattr\22 }, { 17, \22symlink\22 }, { 18, \22parent\22 }, { 19, \22rtbitmap\22 }, { 20, \22rtsummary\22 }, { 21, \22usrquota\22 }, { 22, \22grpquota\22 }, { 23, \22prjquota\22 }, { 24, \22fscounters\22 }), __print_symbolic(REC->btnum, { XFS_BTNUM_BNOi, \22bnobt\22 }, { XFS_BTNUM_CNTi, \22cntbt\22 }, { XFS_BTNUM_RMAPi, \22rmapbt\22 }, { XFS_BTNUM_BMAPi, \22bmbt\22 }, { XFS_BTNUM_INOi, \22inobt\22 }, { XFS_BTNUM_FINOi, \22finobt\22 }, { XFS_BTNUM_REFCi, \22refcbt\22 }), REC->level, REC->ptr, REC->agno, REC->bno, REC->error, REC->ret_ip\00", [280 x i8] zeroinitializer }, align 32
@event_xchk_ifork_btree_op_error = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_ifork_btree_op_error, %union.anon.122 { ptr @__tracepoint_xchk_ifork_btree_op_error }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_ifork_btree_op_error }, ptr @print_fmt_xchk_ifork_btree_op_error, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_ifork_btree_op_error = internal global ptr @event_xchk_ifork_btree_op_error, section "_ftrace_events", align 4
@trace_event_fields_xchk_btree_error = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.36, %union.anon.120 { %struct.anon.121 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.99, %union.anon.120 { %struct.anon.121 { ptr @.str.100, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.101, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.120 { %struct.anon.121 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.120 { %struct.anon.121 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.102, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.82, %union.anon.120 { %struct.anon.121 { ptr @.str.83, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xchk_btree_error = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xchk_btree_error, ptr @perf_trace_xchk_btree_error, ptr @trace_event_reg, ptr @trace_event_fields_xchk_btree_error, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xchk_btree_error, i64 24), ptr getelementptr (i8, ptr @event_class_xchk_btree_error, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xchk_btree_error = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xchk_btree_error, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xchk_btree_error = internal global { [936 x i8], [248 x i8] } { [936 x i8] c"\22dev %d:%d type %s btree %s level %d ptr %d agno 0x%x agbno 0x%x ret_ip %pS\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), __print_symbolic(REC->type, { 0, \22probe\22 }, { 1, \22sb\22 }, { 2, \22agf\22 }, { 3, \22agfl\22 }, { 4, \22agi\22 }, { 5, \22bnobt\22 }, { 6, \22cntbt\22 }, { 7, \22inobt\22 }, { 8, \22finobt\22 }, { 9, \22rmapbt\22 }, { 10, \22refcountbt\22 }, { 11, \22inode\22 }, { 12, \22bmapbtd\22 }, { 13, \22bmapbta\22 }, { 14, \22bmapbtc\22 }, { 15, \22directory\22 }, { 16, \22xattr\22 }, { 17, \22symlink\22 }, { 18, \22parent\22 }, { 19, \22rtbitmap\22 }, { 20, \22rtsummary\22 }, { 21, \22usrquota\22 }, { 22, \22grpquota\22 }, { 23, \22prjquota\22 }, { 24, \22fscounters\22 }), __print_symbolic(REC->btnum, { XFS_BTNUM_BNOi, \22bnobt\22 }, { XFS_BTNUM_CNTi, \22cntbt\22 }, { XFS_BTNUM_RMAPi, \22rmapbt\22 }, { XFS_BTNUM_BMAPi, \22bmbt\22 }, { XFS_BTNUM_INOi, \22inobt\22 }, { XFS_BTNUM_FINOi, \22finobt\22 }, { XFS_BTNUM_REFCi, \22refcbt\22 }), REC->level, REC->ptr, REC->agno, REC->bno, REC->ret_ip\00", [248 x i8] zeroinitializer }, align 32
@event_xchk_btree_error = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_btree_error, %union.anon.122 { ptr @__tracepoint_xchk_btree_error }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_btree_error }, ptr @print_fmt_xchk_btree_error, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_btree_error = internal global ptr @event_xchk_btree_error, section "_ftrace_events", align 4
@trace_event_fields_xchk_ifork_btree_error = internal global { [11 x %struct.trace_event_fields], [88 x i8] } { [11 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.34, %union.anon.120 { %struct.anon.121 { ptr @.str.35, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.85, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.36, %union.anon.120 { %struct.anon.121 { ptr @.str.37, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.99, %union.anon.120 { %struct.anon.121 { ptr @.str.100, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.101, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.120 { %struct.anon.121 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.120 { %struct.anon.121 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.102, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.82, %union.anon.120 { %struct.anon.121 { ptr @.str.83, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [88 x i8] zeroinitializer }, align 32
@event_class_xchk_ifork_btree_error = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xchk_ifork_btree_error, ptr @perf_trace_xchk_ifork_btree_error, ptr @trace_event_reg, ptr @trace_event_fields_xchk_ifork_btree_error, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xchk_ifork_btree_error, i64 24), ptr getelementptr (i8, ptr @event_class_xchk_ifork_btree_error, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xchk_ifork_btree_error = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xchk_ifork_btree_error, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xchk_ifork_btree_error = internal global { [1043 x i8], [269 x i8] } { [1043 x i8] c"\22dev %d:%d ino 0x%llx fork %s type %s btree %s level %d ptr %d agno 0x%x agbno 0x%x ret_ip %pS\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->ino, __print_symbolic(REC->whichfork, { 0, \22data\22 }, { 1, \22attr\22 }, { 2, \22cow\22 }), __print_symbolic(REC->type, { 0, \22probe\22 }, { 1, \22sb\22 }, { 2, \22agf\22 }, { 3, \22agfl\22 }, { 4, \22agi\22 }, { 5, \22bnobt\22 }, { 6, \22cntbt\22 }, { 7, \22inobt\22 }, { 8, \22finobt\22 }, { 9, \22rmapbt\22 }, { 10, \22refcountbt\22 }, { 11, \22inode\22 }, { 12, \22bmapbtd\22 }, { 13, \22bmapbta\22 }, { 14, \22bmapbtc\22 }, { 15, \22directory\22 }, { 16, \22xattr\22 }, { 17, \22symlink\22 }, { 18, \22parent\22 }, { 19, \22rtbitmap\22 }, { 20, \22rtsummary\22 }, { 21, \22usrquota\22 }, { 22, \22grpquota\22 }, { 23, \22prjquota\22 }, { 24, \22fscounters\22 }), __print_symbolic(REC->btnum, { XFS_BTNUM_BNOi, \22bnobt\22 }, { XFS_BTNUM_CNTi, \22cntbt\22 }, { XFS_BTNUM_RMAPi, \22rmapbt\22 }, { XFS_BTNUM_BMAPi, \22bmbt\22 }, { XFS_BTNUM_INOi, \22inobt\22 }, { XFS_BTNUM_FINOi, \22finobt\22 }, { XFS_BTNUM_REFCi, \22refcbt\22 }), REC->level, REC->ptr, REC->agno, REC->bno, REC->ret_ip\00", [269 x i8] zeroinitializer }, align 32
@event_xchk_ifork_btree_error = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_ifork_btree_error, %union.anon.122 { ptr @__tracepoint_xchk_ifork_btree_error }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_ifork_btree_error }, ptr @print_fmt_xchk_ifork_btree_error, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_ifork_btree_error = internal global ptr @event_xchk_ifork_btree_error, section "_ftrace_events", align 4
@trace_event_fields_xchk_sbtree_class = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.37, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.99, %union.anon.120 { %struct.anon.121 { ptr @.str.100, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.120 { %struct.anon.121 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.120 { %struct.anon.121 { ptr @.str.81, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.101, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.115, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.102, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xchk_sbtree_class = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xchk_sbtree_class, ptr @perf_trace_xchk_sbtree_class, ptr @trace_event_reg, ptr @trace_event_fields_xchk_sbtree_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xchk_sbtree_class, i64 24), ptr getelementptr (i8, ptr @event_class_xchk_sbtree_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xchk_sbtree_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xchk_sbtree_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xchk_sbtree_class = internal global { [937 x i8], [247 x i8] } { [937 x i8] c"\22dev %d:%d type %s btree %s agno 0x%x agbno 0x%x level %d nlevels %d ptr %d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), __print_symbolic(REC->type, { 0, \22probe\22 }, { 1, \22sb\22 }, { 2, \22agf\22 }, { 3, \22agfl\22 }, { 4, \22agi\22 }, { 5, \22bnobt\22 }, { 6, \22cntbt\22 }, { 7, \22inobt\22 }, { 8, \22finobt\22 }, { 9, \22rmapbt\22 }, { 10, \22refcountbt\22 }, { 11, \22inode\22 }, { 12, \22bmapbtd\22 }, { 13, \22bmapbta\22 }, { 14, \22bmapbtc\22 }, { 15, \22directory\22 }, { 16, \22xattr\22 }, { 17, \22symlink\22 }, { 18, \22parent\22 }, { 19, \22rtbitmap\22 }, { 20, \22rtsummary\22 }, { 21, \22usrquota\22 }, { 22, \22grpquota\22 }, { 23, \22prjquota\22 }, { 24, \22fscounters\22 }), __print_symbolic(REC->btnum, { XFS_BTNUM_BNOi, \22bnobt\22 }, { XFS_BTNUM_CNTi, \22cntbt\22 }, { XFS_BTNUM_RMAPi, \22rmapbt\22 }, { XFS_BTNUM_BMAPi, \22bmbt\22 }, { XFS_BTNUM_INOi, \22inobt\22 }, { XFS_BTNUM_FINOi, \22finobt\22 }, { XFS_BTNUM_REFCi, \22refcbt\22 }), REC->agno, REC->bno, REC->level, REC->nlevels, REC->ptr\00", [247 x i8] zeroinitializer }, align 32
@event_xchk_btree_rec = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_sbtree_class, %union.anon.122 { ptr @__tracepoint_xchk_btree_rec }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_sbtree_class }, ptr @print_fmt_xchk_sbtree_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_btree_rec = internal global ptr @event_xchk_btree_rec, section "_ftrace_events", align 4
@event_xchk_btree_key = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_sbtree_class, %union.anon.122 { ptr @__tracepoint_xchk_btree_key }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_sbtree_class }, ptr @print_fmt_xchk_sbtree_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_btree_key = internal global ptr @event_xchk_btree_key, section "_ftrace_events", align 4
@trace_event_fields_xchk_xref_error = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.37, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.43, %union.anon.120 { %struct.anon.121 { ptr @.str.44, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.82, %union.anon.120 { %struct.anon.121 { ptr @.str.83, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xchk_xref_error = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xchk_xref_error, ptr @perf_trace_xchk_xref_error, ptr @trace_event_reg, ptr @trace_event_fields_xchk_xref_error, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xchk_xref_error, i64 24), ptr getelementptr (i8, ptr @event_class_xchk_xref_error, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xchk_xref_error = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xchk_xref_error, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xchk_xref_error = internal global { [634 x i8], [134 x i8] } { [634 x i8] c"\22dev %d:%d type %s xref error %d ret_ip %pS\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), __print_symbolic(REC->type, { 0, \22probe\22 }, { 1, \22sb\22 }, { 2, \22agf\22 }, { 3, \22agfl\22 }, { 4, \22agi\22 }, { 5, \22bnobt\22 }, { 6, \22cntbt\22 }, { 7, \22inobt\22 }, { 8, \22finobt\22 }, { 9, \22rmapbt\22 }, { 10, \22refcountbt\22 }, { 11, \22inode\22 }, { 12, \22bmapbtd\22 }, { 13, \22bmapbta\22 }, { 14, \22bmapbtc\22 }, { 15, \22directory\22 }, { 16, \22xattr\22 }, { 17, \22symlink\22 }, { 18, \22parent\22 }, { 19, \22rtbitmap\22 }, { 20, \22rtsummary\22 }, { 21, \22usrquota\22 }, { 22, \22grpquota\22 }, { 23, \22prjquota\22 }, { 24, \22fscounters\22 }), REC->error, REC->ret_ip\00", [134 x i8] zeroinitializer }, align 32
@event_xchk_xref_error = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_xref_error, %union.anon.122 { ptr @__tracepoint_xchk_xref_error }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_xref_error }, ptr @print_fmt_xchk_xref_error, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_xref_error = internal global ptr @event_xchk_xref_error, section "_ftrace_events", align 4
@trace_event_fields_xchk_iallocbt_check_cluster = internal global { [11 x %struct.trace_event_fields], [88 x i8] } { [11 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.120 { %struct.anon.121 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.119, %union.anon.120 { %struct.anon.121 { ptr @.str.120, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.121, %union.anon.120 { %struct.anon.121 { ptr @.str.122, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.123, %union.anon.120 { %struct.anon.121 { ptr @.str.124, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.36, %union.anon.120 { %struct.anon.121 { ptr @.str.125, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.36, %union.anon.120 { %struct.anon.121 { ptr @.str.126, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.36, %union.anon.120 { %struct.anon.121 { ptr @.str.127, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.128, %union.anon.120 { %struct.anon.121 { ptr @.str.129, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.128, %union.anon.120 { %struct.anon.121 { ptr @.str.130, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [88 x i8] zeroinitializer }, align 32
@event_class_xchk_iallocbt_check_cluster = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xchk_iallocbt_check_cluster, ptr @perf_trace_xchk_iallocbt_check_cluster, ptr @trace_event_reg, ptr @trace_event_fields_xchk_iallocbt_check_cluster, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xchk_iallocbt_check_cluster, i64 24), ptr getelementptr (i8, ptr @event_class_xchk_iallocbt_check_cluster, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xchk_iallocbt_check_cluster = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xchk_iallocbt_check_cluster, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xchk_iallocbt_check_cluster = internal global { [365 x i8], [83 x i8] } { [365 x i8] c"\22dev %d:%d agno 0x%x startino 0x%x daddr 0x%llx bbcount 0x%x chunkino 0x%x nr_inodes %u cluster_mask 0x%x holemask 0x%x cluster_ino 0x%x\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->agno, REC->startino, REC->map_daddr, REC->map_len, REC->chunk_ino, REC->nr_inodes, REC->cluster_mask, REC->holemask, REC->cluster_ino\00", [83 x i8] zeroinitializer }, align 32
@event_xchk_iallocbt_check_cluster = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_iallocbt_check_cluster, %union.anon.122 { ptr @__tracepoint_xchk_iallocbt_check_cluster }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_iallocbt_check_cluster }, ptr @print_fmt_xchk_iallocbt_check_cluster, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_iallocbt_check_cluster = internal global ptr @event_xchk_iallocbt_check_cluster, section "_ftrace_events", align 4
@trace_event_fields_xchk_fscounters_calc = internal global { [9 x %struct.trace_event_fields], [40 x i8] } { [9 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.132, %union.anon.120 { %struct.anon.121 { ptr @.str.133, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.134, %union.anon.120 { %struct.anon.121 { ptr @.str.135, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.132, %union.anon.120 { %struct.anon.121 { ptr @.str.136, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.134, %union.anon.120 { %struct.anon.121 { ptr @.str.137, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.132, %union.anon.120 { %struct.anon.121 { ptr @.str.138, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.134, %union.anon.120 { %struct.anon.121 { ptr @.str.139, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.134, %union.anon.120 { %struct.anon.121 { ptr @.str.140, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xchk_fscounters_calc = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xchk_fscounters_calc, ptr @perf_trace_xchk_fscounters_calc, ptr @trace_event_reg, ptr @trace_event_fields_xchk_fscounters_calc, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xchk_fscounters_calc, i64 24), ptr getelementptr (i8, ptr @event_class_xchk_fscounters_calc, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xchk_fscounters_calc = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xchk_fscounters_calc, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xchk_fscounters_calc = internal global { [304 x i8], [80 x i8] } { [304 x i8] c"\22dev %d:%d icount %lld:%llu ifree %lld::%llu fdblocks %lld::%llu delalloc %llu\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->icount_sb, REC->icount_calculated, REC->ifree_sb, REC->ifree_calculated, REC->fdblocks_sb, REC->fdblocks_calculated, REC->delalloc\00", [80 x i8] zeroinitializer }, align 32
@event_xchk_fscounters_calc = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_fscounters_calc, %union.anon.122 { ptr @__tracepoint_xchk_fscounters_calc }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_fscounters_calc }, ptr @print_fmt_xchk_fscounters_calc, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_fscounters_calc = internal global ptr @event_xchk_fscounters_calc, section "_ftrace_events", align 4
@trace_event_fields_xchk_fscounters_within_range = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.134, %union.anon.120 { %struct.anon.121 { ptr @.str.142, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.132, %union.anon.120 { %struct.anon.121 { ptr @.str.143, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.132, %union.anon.120 { %struct.anon.121 { ptr @.str.144, i32 8, i32 8, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xchk_fscounters_within_range = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xchk_fscounters_within_range, ptr @perf_trace_xchk_fscounters_within_range, ptr @trace_event_reg, ptr @trace_event_fields_xchk_fscounters_within_range, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xchk_fscounters_within_range, i64 24), ptr getelementptr (i8, ptr @event_class_xchk_fscounters_within_range, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xchk_fscounters_within_range = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xchk_fscounters_within_range, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xchk_fscounters_within_range = internal global { [192 x i8], [32 x i8] } { [192 x i8] c"\22dev %d:%d expected %llu curr_value %lld old_value %lld\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->expected, REC->curr_value, REC->old_value\00", [32 x i8] zeroinitializer }, align 32
@event_xchk_fscounters_within_range = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xchk_fscounters_within_range, %union.anon.122 { ptr @__tracepoint_xchk_fscounters_within_range }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xchk_fscounters_within_range }, ptr @print_fmt_xchk_fscounters_within_range, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xchk_fscounters_within_range = internal global ptr @event_xchk_fscounters_within_range, section "_ftrace_events", align 4
@trace_event_fields_xrep_extent_class = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.120 { %struct.anon.121 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.120 { %struct.anon.121 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.146, %union.anon.120 { %struct.anon.121 { ptr @.str.147, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xrep_extent_class = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xrep_extent_class, ptr @perf_trace_xrep_extent_class, ptr @trace_event_reg, ptr @trace_event_fields_xrep_extent_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xrep_extent_class, i64 24), ptr getelementptr (i8, ptr @event_class_xrep_extent_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xrep_extent_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xrep_extent_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xrep_extent_class = internal global { [167 x i8], [57 x i8] } { [167 x i8] c"\22dev %d:%d agno 0x%x agbno 0x%x fsbcount 0x%x\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->agno, REC->agbno, REC->len\00", [57 x i8] zeroinitializer }, align 32
@event_xrep_dispose_btree_extent = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xrep_extent_class, %union.anon.122 { ptr @__tracepoint_xrep_dispose_btree_extent }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xrep_extent_class }, ptr @print_fmt_xrep_extent_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xrep_dispose_btree_extent = internal global ptr @event_xrep_dispose_btree_extent, section "_ftrace_events", align 4
@event_xrep_agfl_insert = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xrep_extent_class, %union.anon.122 { ptr @__tracepoint_xrep_agfl_insert }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xrep_extent_class }, ptr @print_fmt_xrep_extent_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xrep_agfl_insert = internal global ptr @event_xrep_agfl_insert, section "_ftrace_events", align 4
@trace_event_fields_xrep_rmap_class = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.120 { %struct.anon.121 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.120 { %struct.anon.121 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.146, %union.anon.120 { %struct.anon.121 { ptr @.str.147, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.134, %union.anon.120 { %struct.anon.121 { ptr @.str.149, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.134, %union.anon.120 { %struct.anon.121 { ptr @.str.87, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.36, %union.anon.120 { %struct.anon.121 { ptr @.str.42, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_xrep_rmap_class = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xrep_rmap_class, ptr @perf_trace_xrep_rmap_class, ptr @trace_event_reg, ptr @trace_event_fields_xrep_rmap_class, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xrep_rmap_class, i64 24), ptr getelementptr (i8, ptr @event_class_xrep_rmap_class, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xrep_rmap_class = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xrep_rmap_class, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xrep_rmap_class = internal global { [243 x i8], [45 x i8] } { [243 x i8] c"\22dev %d:%d agno 0x%x agbno 0x%x fsbcount 0x%x owner 0x%llx fileoff 0x%llx flags 0x%x\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->agno, REC->agbno, REC->len, REC->owner, REC->offset, REC->flags\00", [45 x i8] zeroinitializer }, align 32
@event_xrep_alloc_extent_fn = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xrep_rmap_class, %union.anon.122 { ptr @__tracepoint_xrep_alloc_extent_fn }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xrep_rmap_class }, ptr @print_fmt_xrep_rmap_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xrep_alloc_extent_fn = internal global ptr @event_xrep_alloc_extent_fn, section "_ftrace_events", align 4
@event_xrep_ialloc_extent_fn = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xrep_rmap_class, %union.anon.122 { ptr @__tracepoint_xrep_ialloc_extent_fn }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xrep_rmap_class }, ptr @print_fmt_xrep_rmap_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xrep_ialloc_extent_fn = internal global ptr @event_xrep_ialloc_extent_fn, section "_ftrace_events", align 4
@event_xrep_rmap_extent_fn = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xrep_rmap_class, %union.anon.122 { ptr @__tracepoint_xrep_rmap_extent_fn }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xrep_rmap_class }, ptr @print_fmt_xrep_rmap_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xrep_rmap_extent_fn = internal global ptr @event_xrep_rmap_extent_fn, section "_ftrace_events", align 4
@event_xrep_bmap_extent_fn = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xrep_rmap_class, %union.anon.122 { ptr @__tracepoint_xrep_bmap_extent_fn }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xrep_rmap_class }, ptr @print_fmt_xrep_rmap_class, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xrep_bmap_extent_fn = internal global ptr @event_xrep_bmap_extent_fn, section "_ftrace_events", align 4
@trace_event_fields_xrep_refcount_extent_fn = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.120 { %struct.anon.121 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.120 { %struct.anon.121 { ptr @.str.151, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.146, %union.anon.120 { %struct.anon.121 { ptr @.str.152, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.153, %union.anon.120 { %struct.anon.121 { ptr @.str.154, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_xrep_refcount_extent_fn = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xrep_refcount_extent_fn, ptr @perf_trace_xrep_refcount_extent_fn, ptr @trace_event_reg, ptr @trace_event_fields_xrep_refcount_extent_fn, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xrep_refcount_extent_fn, i64 24), ptr getelementptr (i8, ptr @event_class_xrep_refcount_extent_fn, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xrep_refcount_extent_fn = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xrep_refcount_extent_fn, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xrep_refcount_extent_fn = internal global { [206 x i8], [50 x i8] } { [206 x i8] c"\22dev %d:%d agno 0x%x agbno 0x%x fsbcount 0x%x refcount %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->agno, REC->startblock, REC->blockcount, REC->refcount\00", [50 x i8] zeroinitializer }, align 32
@event_xrep_refcount_extent_fn = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xrep_refcount_extent_fn, %union.anon.122 { ptr @__tracepoint_xrep_refcount_extent_fn }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xrep_refcount_extent_fn }, ptr @print_fmt_xrep_refcount_extent_fn, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xrep_refcount_extent_fn = internal global ptr @event_xrep_refcount_extent_fn, section "_ftrace_events", align 4
@trace_event_fields_xrep_init_btblock = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.120 { %struct.anon.121 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.120 { %struct.anon.121 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.120 { %struct.anon.121 { ptr @.str.100, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_xrep_init_btblock = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xrep_init_btblock, ptr @perf_trace_xrep_init_btblock, ptr @trace_event_reg, ptr @trace_event_fields_xrep_init_btblock, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xrep_init_btblock, i64 24), ptr getelementptr (i8, ptr @event_class_xrep_init_btblock, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xrep_init_btblock = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xrep_init_btblock, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xrep_init_btblock = internal global { [391 x i8], [121 x i8] } { [391 x i8] c"\22dev %d:%d agno 0x%x agbno 0x%x btree %s\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->agno, REC->agbno, __print_symbolic(REC->btnum, { XFS_BTNUM_BNOi, \22bnobt\22 }, { XFS_BTNUM_CNTi, \22cntbt\22 }, { XFS_BTNUM_RMAPi, \22rmapbt\22 }, { XFS_BTNUM_BMAPi, \22bmbt\22 }, { XFS_BTNUM_INOi, \22inobt\22 }, { XFS_BTNUM_FINOi, \22finobt\22 }, { XFS_BTNUM_REFCi, \22refcbt\22 })\00", [121 x i8] zeroinitializer }, align 32
@event_xrep_init_btblock = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xrep_init_btblock, %union.anon.122 { ptr @__tracepoint_xrep_init_btblock }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xrep_init_btblock }, ptr @print_fmt_xrep_init_btblock, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xrep_init_btblock = internal global ptr @event_xrep_init_btblock, section "_ftrace_events", align 4
@trace_event_fields_xrep_findroot_block = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.120 { %struct.anon.121 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.120 { %struct.anon.121 { ptr @.str.93, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.156, %union.anon.120 { %struct.anon.121 { ptr @.str.158, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.128, %union.anon.120 { %struct.anon.121 { ptr @.str.101, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_xrep_findroot_block = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xrep_findroot_block, ptr @perf_trace_xrep_findroot_block, ptr @trace_event_reg, ptr @trace_event_fields_xrep_findroot_block, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xrep_findroot_block, i64 24), ptr getelementptr (i8, ptr @event_class_xrep_findroot_block, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xrep_findroot_block = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xrep_findroot_block, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xrep_findroot_block = internal global { [187 x i8], [37 x i8] } { [187 x i8] c"\22dev %d:%d agno 0x%x agbno 0x%x magic 0x%x level %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->agno, REC->agbno, REC->magic, REC->level\00", [37 x i8] zeroinitializer }, align 32
@event_xrep_findroot_block = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xrep_findroot_block, %union.anon.122 { ptr @__tracepoint_xrep_findroot_block }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xrep_findroot_block }, ptr @print_fmt_xrep_findroot_block, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xrep_findroot_block = internal global ptr @event_xrep_findroot_block, section "_ftrace_events", align 4
@trace_event_fields_xrep_calc_ag_resblks = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.120 { %struct.anon.121 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.119, %union.anon.120 { %struct.anon.121 { ptr @.str.160, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.120 { %struct.anon.121 { ptr @.str.161, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.120 { %struct.anon.121 { ptr @.str.162, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.120 { %struct.anon.121 { ptr @.str.163, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_xrep_calc_ag_resblks = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xrep_calc_ag_resblks, ptr @perf_trace_xrep_calc_ag_resblks, ptr @trace_event_reg, ptr @trace_event_fields_xrep_calc_ag_resblks, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xrep_calc_ag_resblks, i64 24), ptr getelementptr (i8, ptr @event_class_xrep_calc_ag_resblks, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xrep_calc_ag_resblks = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xrep_calc_ag_resblks, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xrep_calc_ag_resblks = internal global { [214 x i8], [42 x i8] } { [214 x i8] c"\22dev %d:%d agno 0x%x icount %u aglen %u freelen %u usedlen %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->agno, REC->icount, REC->aglen, REC->freelen, REC->usedlen\00", [42 x i8] zeroinitializer }, align 32
@event_xrep_calc_ag_resblks = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xrep_calc_ag_resblks, %union.anon.122 { ptr @__tracepoint_xrep_calc_ag_resblks }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xrep_calc_ag_resblks }, ptr @print_fmt_xrep_calc_ag_resblks, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xrep_calc_ag_resblks = internal global ptr @event_xrep_calc_ag_resblks, section "_ftrace_events", align 4
@trace_event_fields_xrep_calc_ag_resblks_btsize = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.120 { %struct.anon.121 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.120 { %struct.anon.121 { ptr @.str.165, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.120 { %struct.anon.121 { ptr @.str.166, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.120 { %struct.anon.121 { ptr @.str.167, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.80, %union.anon.120 { %struct.anon.121 { ptr @.str.168, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_xrep_calc_ag_resblks_btsize = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xrep_calc_ag_resblks_btsize, ptr @perf_trace_xrep_calc_ag_resblks_btsize, ptr @trace_event_reg, ptr @trace_event_fields_xrep_calc_ag_resblks_btsize, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xrep_calc_ag_resblks_btsize, i64 24), ptr getelementptr (i8, ptr @event_class_xrep_calc_ag_resblks_btsize, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xrep_calc_ag_resblks_btsize = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xrep_calc_ag_resblks_btsize, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xrep_calc_ag_resblks_btsize = internal global { [224 x i8], [32 x i8] } { [224 x i8] c"\22dev %d:%d agno 0x%x bnobt %u inobt %u rmapbt %u refcountbt %u\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->agno, REC->bnobt_sz, REC->inobt_sz, REC->rmapbt_sz, REC->refcbt_sz\00", [32 x i8] zeroinitializer }, align 32
@event_xrep_calc_ag_resblks_btsize = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xrep_calc_ag_resblks_btsize, %union.anon.122 { ptr @__tracepoint_xrep_calc_ag_resblks_btsize }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xrep_calc_ag_resblks_btsize }, ptr @print_fmt_xrep_calc_ag_resblks_btsize, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xrep_calc_ag_resblks_btsize = internal global ptr @event_xrep_calc_ag_resblks_btsize, section "_ftrace_events", align 4
@trace_event_fields_xrep_reset_counters = internal global { [2 x %struct.trace_event_fields], [48 x i8] } { [2 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_xrep_reset_counters = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xrep_reset_counters, ptr @perf_trace_xrep_reset_counters, ptr @trace_event_reg, ptr @trace_event_fields_xrep_reset_counters, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xrep_reset_counters, i64 24), ptr getelementptr (i8, ptr @event_class_xrep_reset_counters, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xrep_reset_counters = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xrep_reset_counters, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xrep_reset_counters = internal global { [99 x i8], [61 x i8] } { [99 x i8] c"\22dev %d:%d\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1)))\00", [61 x i8] zeroinitializer }, align 32
@event_xrep_reset_counters = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xrep_reset_counters, %union.anon.122 { ptr @__tracepoint_xrep_reset_counters }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xrep_reset_counters }, ptr @print_fmt_xrep_reset_counters, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xrep_reset_counters = internal global ptr @event_xrep_reset_counters, section "_ftrace_events", align 4
@trace_event_fields_xrep_ialloc_insert = internal global { [8 x %struct.trace_event_fields], [32 x i8] } { [8 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.32, %union.anon.120 { %struct.anon.121 { ptr @.str.33, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.38, %union.anon.120 { %struct.anon.121 { ptr @.str.39, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.119, %union.anon.120 { %struct.anon.121 { ptr @.str.120, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.128, %union.anon.120 { %struct.anon.121 { ptr @.str.130, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.171, %union.anon.120 { %struct.anon.121 { ptr @.str.172, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.171, %union.anon.120 { %struct.anon.121 { ptr @.str.173, i32 1, i32 1, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.134, %union.anon.120 { %struct.anon.121 { ptr @.str.174, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_xrep_ialloc_insert = internal global %struct.trace_event_class { ptr @str__xfs_scrub__trace_system_name, ptr @trace_event_raw_event_xrep_ialloc_insert, ptr @perf_trace_xrep_ialloc_insert, ptr @trace_event_reg, ptr @trace_event_fields_xrep_ialloc_insert, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_xrep_ialloc_insert, i64 24), ptr getelementptr (i8, ptr @event_class_xrep_ialloc_insert, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_xrep_ialloc_insert = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_xrep_ialloc_insert, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_xrep_ialloc_insert = internal global { [259 x i8], [93 x i8] } { [259 x i8] c"\22dev %d:%d agno 0x%x startino 0x%x holemask 0x%x count %u freecount %u freemask 0x%llx\22, ((unsigned int) ((REC->dev) >> 20)), ((unsigned int) ((REC->dev) & ((1U << 20) - 1))), REC->agno, REC->startino, REC->holemask, REC->count, REC->freecount, REC->freemask\00", [93 x i8] zeroinitializer }, align 32
@event_xrep_ialloc_insert = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_xrep_ialloc_insert, %union.anon.122 { ptr @__tracepoint_xrep_ialloc_insert }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_xrep_ialloc_insert }, ptr @print_fmt_xrep_ialloc_insert, ptr null, %union.anon.123 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_xrep_ialloc_insert = internal global ptr @event_xrep_ialloc_insert, section "_ftrace_events", align 4
@__bpf_trace_tp_map_xchk_start = internal global %union.anon.124 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_start, ptr @__bpf_trace_xchk_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_done = internal global %union.anon.125 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_done, ptr @__bpf_trace_xchk_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_deadlock_retry = internal global %union.anon.126 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_deadlock_retry, ptr @__bpf_trace_xchk_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xrep_attempt = internal global %union.anon.127 { %struct.bpf_raw_event_map { ptr @__tracepoint_xrep_attempt, ptr @__bpf_trace_xchk_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xrep_done = internal global %union.anon.128 { %struct.bpf_raw_event_map { ptr @__tracepoint_xrep_done, ptr @__bpf_trace_xchk_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_op_error = internal global %union.anon.129 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_op_error, ptr @__bpf_trace_xchk_op_error, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_file_op_error = internal global %union.anon.130 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_file_op_error, ptr @__bpf_trace_xchk_file_op_error, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_fs_error = internal global %union.anon.131 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_fs_error, ptr @__bpf_trace_xchk_block_error_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_block_error = internal global %union.anon.132 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_block_error, ptr @__bpf_trace_xchk_block_error_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_block_preen = internal global %union.anon.133 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_block_preen, ptr @__bpf_trace_xchk_block_error_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_ino_error = internal global %union.anon.134 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_ino_error, ptr @__bpf_trace_xchk_ino_error_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_ino_preen = internal global %union.anon.135 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_ino_preen, ptr @__bpf_trace_xchk_ino_error_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_ino_warning = internal global %union.anon.136 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_ino_warning, ptr @__bpf_trace_xchk_ino_error_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_fblock_error = internal global %union.anon.137 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_fblock_error, ptr @__bpf_trace_xchk_fblock_error_class, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_fblock_warning = internal global %union.anon.138 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_fblock_warning, ptr @__bpf_trace_xchk_fblock_error_class, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_incomplete = internal global %union.anon.139 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_incomplete, ptr @__bpf_trace_xchk_incomplete, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_btree_op_error = internal global %union.anon.140 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_btree_op_error, ptr @__bpf_trace_xchk_btree_op_error, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_ifork_btree_op_error = internal global %union.anon.141 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_ifork_btree_op_error, ptr @__bpf_trace_xchk_ifork_btree_op_error, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_btree_error = internal global %union.anon.142 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_btree_error, ptr @__bpf_trace_xchk_btree_error, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_ifork_btree_error = internal global %union.anon.143 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_ifork_btree_error, ptr @__bpf_trace_xchk_ifork_btree_error, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_btree_rec = internal global %union.anon.144 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_btree_rec, ptr @__bpf_trace_xchk_sbtree_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_btree_key = internal global %union.anon.145 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_btree_key, ptr @__bpf_trace_xchk_sbtree_class, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_xref_error = internal global %union.anon.146 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_xref_error, ptr @__bpf_trace_xchk_xref_error, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_iallocbt_check_cluster = internal global %union.anon.147 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_iallocbt_check_cluster, ptr @__bpf_trace_xchk_iallocbt_check_cluster, i32 10, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_fscounters_calc = internal global %union.anon.148 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_fscounters_calc, ptr @__bpf_trace_xchk_fscounters_calc, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xchk_fscounters_within_range = internal global %union.anon.149 { %struct.bpf_raw_event_map { ptr @__tracepoint_xchk_fscounters_within_range, ptr @__bpf_trace_xchk_fscounters_within_range, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xrep_dispose_btree_extent = internal global %union.anon.150 { %struct.bpf_raw_event_map { ptr @__tracepoint_xrep_dispose_btree_extent, ptr @__bpf_trace_xrep_extent_class, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xrep_agfl_insert = internal global %union.anon.151 { %struct.bpf_raw_event_map { ptr @__tracepoint_xrep_agfl_insert, ptr @__bpf_trace_xrep_extent_class, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xrep_alloc_extent_fn = internal global %union.anon.152 { %struct.bpf_raw_event_map { ptr @__tracepoint_xrep_alloc_extent_fn, ptr @__bpf_trace_xrep_rmap_class, i32 7, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xrep_ialloc_extent_fn = internal global %union.anon.153 { %struct.bpf_raw_event_map { ptr @__tracepoint_xrep_ialloc_extent_fn, ptr @__bpf_trace_xrep_rmap_class, i32 7, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xrep_rmap_extent_fn = internal global %union.anon.154 { %struct.bpf_raw_event_map { ptr @__tracepoint_xrep_rmap_extent_fn, ptr @__bpf_trace_xrep_rmap_class, i32 7, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xrep_bmap_extent_fn = internal global %union.anon.155 { %struct.bpf_raw_event_map { ptr @__tracepoint_xrep_bmap_extent_fn, ptr @__bpf_trace_xrep_rmap_class, i32 7, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xrep_refcount_extent_fn = internal global %union.anon.156 { %struct.bpf_raw_event_map { ptr @__tracepoint_xrep_refcount_extent_fn, ptr @__bpf_trace_xrep_refcount_extent_fn, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xrep_init_btblock = internal global %union.anon.157 { %struct.bpf_raw_event_map { ptr @__tracepoint_xrep_init_btblock, ptr @__bpf_trace_xrep_init_btblock, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xrep_findroot_block = internal global %union.anon.158 { %struct.bpf_raw_event_map { ptr @__tracepoint_xrep_findroot_block, ptr @__bpf_trace_xrep_findroot_block, i32 5, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xrep_calc_ag_resblks = internal global %union.anon.159 { %struct.bpf_raw_event_map { ptr @__tracepoint_xrep_calc_ag_resblks, ptr @__bpf_trace_xrep_calc_ag_resblks, i32 6, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xrep_calc_ag_resblks_btsize = internal global %union.anon.160 { %struct.bpf_raw_event_map { ptr @__tracepoint_xrep_calc_ag_resblks_btsize, ptr @__bpf_trace_xrep_calc_ag_resblks_btsize, i32 6, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xrep_reset_counters = internal global %union.anon.161 { %struct.bpf_raw_event_map { ptr @__tracepoint_xrep_reset_counters, ptr @__bpf_trace_xrep_reset_counters, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_xrep_ialloc_insert = internal global %union.anon.162 { %struct.bpf_raw_event_map { ptr @__tracepoint_xrep_ialloc_insert, ptr @__bpf_trace_xrep_ialloc_insert, i32 7, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@.str.32 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"dev_t\00", [26 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"dev\00", [28 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"xfs_ino_t\00", [22 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ino\00", [28 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"type\00", [27 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"xfs_agnumber_t\00", [17 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"agno\00", [27 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"inum\00", [27 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"gen\00", [28 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"flags\00", [26 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"error\00", [26 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [81 x i8], [47 x i8] } { [81 x i8] c"dev %d:%d ino 0x%llx type %s agno 0x%x inum 0x%llx gen 0x%x flags (%s) error %d\0A\00", [47 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_class.symbols = internal constant { [26 x %struct.trace_print_flags], [48 x i8] } { [26 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.46 }, %struct.trace_print_flags { i32 1, ptr @.str.47 }, %struct.trace_print_flags { i32 2, ptr @.str.48 }, %struct.trace_print_flags { i32 3, ptr @.str.49 }, %struct.trace_print_flags { i32 4, ptr @.str.50 }, %struct.trace_print_flags { i32 5, ptr @.str.51 }, %struct.trace_print_flags { i32 6, ptr @.str.52 }, %struct.trace_print_flags { i32 7, ptr @.str.53 }, %struct.trace_print_flags { i32 8, ptr @.str.54 }, %struct.trace_print_flags { i32 9, ptr @.str.55 }, %struct.trace_print_flags { i32 10, ptr @.str.56 }, %struct.trace_print_flags { i32 11, ptr @.str.57 }, %struct.trace_print_flags { i32 12, ptr @.str.58 }, %struct.trace_print_flags { i32 13, ptr @.str.59 }, %struct.trace_print_flags { i32 14, ptr @.str.60 }, %struct.trace_print_flags { i32 15, ptr @.str.61 }, %struct.trace_print_flags { i32 16, ptr @.str.62 }, %struct.trace_print_flags { i32 17, ptr @.str.63 }, %struct.trace_print_flags { i32 18, ptr @.str.64 }, %struct.trace_print_flags { i32 19, ptr @.str.65 }, %struct.trace_print_flags { i32 20, ptr @.str.66 }, %struct.trace_print_flags { i32 21, ptr @.str.67 }, %struct.trace_print_flags { i32 22, ptr @.str.68 }, %struct.trace_print_flags { i32 23, ptr @.str.69 }, %struct.trace_print_flags { i32 24, ptr @.str.70 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"probe\00", [26 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"sb\00", [29 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"agf\00", [28 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"agfl\00", [27 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"agi\00", [28 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"bnobt\00", [26 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"cntbt\00", [26 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"inobt\00", [26 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"finobt\00", [25 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"rmapbt\00", [25 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"refcountbt\00", [21 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"inode\00", [26 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"bmapbtd\00", [24 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"bmapbta\00", [24 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"bmapbtc\00", [24 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"directory\00", [22 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"xattr\00", [26 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"symlink\00", [24 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"parent\00", [25 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"rtbitmap\00", [23 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"rtsummary\00", [22 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"usrquota\00", [23 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"grpquota\00", [23 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"prjquota\00", [23 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"fscounters\00", [21 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_class.__flags = internal constant { [9 x %struct.trace_print_flags], [56 x i8] } { [9 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 1, ptr @.str.71 }, %struct.trace_print_flags { i32 2, ptr @.str.72 }, %struct.trace_print_flags { i32 4, ptr @.str.73 }, %struct.trace_print_flags { i32 8, ptr @.str.74 }, %struct.trace_print_flags { i32 16, ptr @.str.75 }, %struct.trace_print_flags { i32 32, ptr @.str.76 }, %struct.trace_print_flags { i32 64, ptr @.str.77 }, %struct.trace_print_flags { i32 128, ptr @.str.78 }, %struct.trace_print_flags { i32 -1, ptr null }], [56 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"repair\00", [25 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"corrupt\00", [24 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"preen\00", [26 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"xfail\00", [26 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"xcorrupt\00", [23 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"incomplete\00", [21 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"warning\00", [24 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"norepair\00", [23 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"|\00", [30 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"xfs_agblock_t\00", [18 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"bno\00", [28 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"void *\00", [25 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ret_ip\00", [25 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"dev %d:%d type %s agno 0x%x agbno 0x%x error %d ret_ip %pS\0A\00", [36 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_op_error.symbols = internal constant { [26 x %struct.trace_print_flags], [48 x i8] } { [26 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.46 }, %struct.trace_print_flags { i32 1, ptr @.str.47 }, %struct.trace_print_flags { i32 2, ptr @.str.48 }, %struct.trace_print_flags { i32 3, ptr @.str.49 }, %struct.trace_print_flags { i32 4, ptr @.str.50 }, %struct.trace_print_flags { i32 5, ptr @.str.51 }, %struct.trace_print_flags { i32 6, ptr @.str.52 }, %struct.trace_print_flags { i32 7, ptr @.str.53 }, %struct.trace_print_flags { i32 8, ptr @.str.54 }, %struct.trace_print_flags { i32 9, ptr @.str.55 }, %struct.trace_print_flags { i32 10, ptr @.str.56 }, %struct.trace_print_flags { i32 11, ptr @.str.57 }, %struct.trace_print_flags { i32 12, ptr @.str.58 }, %struct.trace_print_flags { i32 13, ptr @.str.59 }, %struct.trace_print_flags { i32 14, ptr @.str.60 }, %struct.trace_print_flags { i32 15, ptr @.str.61 }, %struct.trace_print_flags { i32 16, ptr @.str.62 }, %struct.trace_print_flags { i32 17, ptr @.str.63 }, %struct.trace_print_flags { i32 18, ptr @.str.64 }, %struct.trace_print_flags { i32 19, ptr @.str.65 }, %struct.trace_print_flags { i32 20, ptr @.str.66 }, %struct.trace_print_flags { i32 21, ptr @.str.67 }, %struct.trace_print_flags { i32 22, ptr @.str.68 }, %struct.trace_print_flags { i32 23, ptr @.str.69 }, %struct.trace_print_flags { i32 24, ptr @.str.70 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"whichfork\00", [22 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"xfs_fileoff_t\00", [18 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"offset\00", [25 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [73 x i8], [55 x i8] } { [73 x i8] c"dev %d:%d ino 0x%llx fork %s type %s fileoff 0x%llx error %d ret_ip %pS\0A\00", [55 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_file_op_error.symbols = internal constant { [4 x %struct.trace_print_flags], [32 x i8] } { [4 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.89 }, %struct.trace_print_flags { i32 1, ptr @.str.90 }, %struct.trace_print_flags { i32 2, ptr @.str.91 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"data\00", [27 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"attr\00", [27 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"cow\00", [28 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_file_op_error.symbols.92 = internal constant { [26 x %struct.trace_print_flags], [48 x i8] } { [26 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.46 }, %struct.trace_print_flags { i32 1, ptr @.str.47 }, %struct.trace_print_flags { i32 2, ptr @.str.48 }, %struct.trace_print_flags { i32 3, ptr @.str.49 }, %struct.trace_print_flags { i32 4, ptr @.str.50 }, %struct.trace_print_flags { i32 5, ptr @.str.51 }, %struct.trace_print_flags { i32 6, ptr @.str.52 }, %struct.trace_print_flags { i32 7, ptr @.str.53 }, %struct.trace_print_flags { i32 8, ptr @.str.54 }, %struct.trace_print_flags { i32 9, ptr @.str.55 }, %struct.trace_print_flags { i32 10, ptr @.str.56 }, %struct.trace_print_flags { i32 11, ptr @.str.57 }, %struct.trace_print_flags { i32 12, ptr @.str.58 }, %struct.trace_print_flags { i32 13, ptr @.str.59 }, %struct.trace_print_flags { i32 14, ptr @.str.60 }, %struct.trace_print_flags { i32 15, ptr @.str.61 }, %struct.trace_print_flags { i32 16, ptr @.str.62 }, %struct.trace_print_flags { i32 17, ptr @.str.63 }, %struct.trace_print_flags { i32 18, ptr @.str.64 }, %struct.trace_print_flags { i32 19, ptr @.str.65 }, %struct.trace_print_flags { i32 20, ptr @.str.66 }, %struct.trace_print_flags { i32 21, ptr @.str.67 }, %struct.trace_print_flags { i32 22, ptr @.str.68 }, %struct.trace_print_flags { i32 23, ptr @.str.69 }, %struct.trace_print_flags { i32 24, ptr @.str.70 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"agbno\00", [26 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [51 x i8], [45 x i8] } { [51 x i8] c"dev %d:%d type %s agno 0x%x agbno 0x%x ret_ip %pS\0A\00", [45 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_block_error_class.symbols = internal constant { [26 x %struct.trace_print_flags], [48 x i8] } { [26 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.46 }, %struct.trace_print_flags { i32 1, ptr @.str.47 }, %struct.trace_print_flags { i32 2, ptr @.str.48 }, %struct.trace_print_flags { i32 3, ptr @.str.49 }, %struct.trace_print_flags { i32 4, ptr @.str.50 }, %struct.trace_print_flags { i32 5, ptr @.str.51 }, %struct.trace_print_flags { i32 6, ptr @.str.52 }, %struct.trace_print_flags { i32 7, ptr @.str.53 }, %struct.trace_print_flags { i32 8, ptr @.str.54 }, %struct.trace_print_flags { i32 9, ptr @.str.55 }, %struct.trace_print_flags { i32 10, ptr @.str.56 }, %struct.trace_print_flags { i32 11, ptr @.str.57 }, %struct.trace_print_flags { i32 12, ptr @.str.58 }, %struct.trace_print_flags { i32 13, ptr @.str.59 }, %struct.trace_print_flags { i32 14, ptr @.str.60 }, %struct.trace_print_flags { i32 15, ptr @.str.61 }, %struct.trace_print_flags { i32 16, ptr @.str.62 }, %struct.trace_print_flags { i32 17, ptr @.str.63 }, %struct.trace_print_flags { i32 18, ptr @.str.64 }, %struct.trace_print_flags { i32 19, ptr @.str.65 }, %struct.trace_print_flags { i32 20, ptr @.str.66 }, %struct.trace_print_flags { i32 21, ptr @.str.67 }, %struct.trace_print_flags { i32 22, ptr @.str.68 }, %struct.trace_print_flags { i32 23, ptr @.str.69 }, %struct.trace_print_flags { i32 24, ptr @.str.70 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"dev %d:%d ino 0x%llx type %s ret_ip %pS\0A\00", [55 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_ino_error_class.symbols = internal constant { [26 x %struct.trace_print_flags], [48 x i8] } { [26 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.46 }, %struct.trace_print_flags { i32 1, ptr @.str.47 }, %struct.trace_print_flags { i32 2, ptr @.str.48 }, %struct.trace_print_flags { i32 3, ptr @.str.49 }, %struct.trace_print_flags { i32 4, ptr @.str.50 }, %struct.trace_print_flags { i32 5, ptr @.str.51 }, %struct.trace_print_flags { i32 6, ptr @.str.52 }, %struct.trace_print_flags { i32 7, ptr @.str.53 }, %struct.trace_print_flags { i32 8, ptr @.str.54 }, %struct.trace_print_flags { i32 9, ptr @.str.55 }, %struct.trace_print_flags { i32 10, ptr @.str.56 }, %struct.trace_print_flags { i32 11, ptr @.str.57 }, %struct.trace_print_flags { i32 12, ptr @.str.58 }, %struct.trace_print_flags { i32 13, ptr @.str.59 }, %struct.trace_print_flags { i32 14, ptr @.str.60 }, %struct.trace_print_flags { i32 15, ptr @.str.61 }, %struct.trace_print_flags { i32 16, ptr @.str.62 }, %struct.trace_print_flags { i32 17, ptr @.str.63 }, %struct.trace_print_flags { i32 18, ptr @.str.64 }, %struct.trace_print_flags { i32 19, ptr @.str.65 }, %struct.trace_print_flags { i32 20, ptr @.str.66 }, %struct.trace_print_flags { i32 21, ptr @.str.67 }, %struct.trace_print_flags { i32 22, ptr @.str.68 }, %struct.trace_print_flags { i32 23, ptr @.str.69 }, %struct.trace_print_flags { i32 24, ptr @.str.70 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [64 x i8], [32 x i8] } { [64 x i8] c"dev %d:%d ino 0x%llx fork %s type %s fileoff 0x%llx ret_ip %pS\0A\00", [32 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_fblock_error_class.symbols = internal constant { [4 x %struct.trace_print_flags], [32 x i8] } { [4 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.89 }, %struct.trace_print_flags { i32 1, ptr @.str.90 }, %struct.trace_print_flags { i32 2, ptr @.str.91 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_fblock_error_class.symbols.97 = internal constant { [26 x %struct.trace_print_flags], [48 x i8] } { [26 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.46 }, %struct.trace_print_flags { i32 1, ptr @.str.47 }, %struct.trace_print_flags { i32 2, ptr @.str.48 }, %struct.trace_print_flags { i32 3, ptr @.str.49 }, %struct.trace_print_flags { i32 4, ptr @.str.50 }, %struct.trace_print_flags { i32 5, ptr @.str.51 }, %struct.trace_print_flags { i32 6, ptr @.str.52 }, %struct.trace_print_flags { i32 7, ptr @.str.53 }, %struct.trace_print_flags { i32 8, ptr @.str.54 }, %struct.trace_print_flags { i32 9, ptr @.str.55 }, %struct.trace_print_flags { i32 10, ptr @.str.56 }, %struct.trace_print_flags { i32 11, ptr @.str.57 }, %struct.trace_print_flags { i32 12, ptr @.str.58 }, %struct.trace_print_flags { i32 13, ptr @.str.59 }, %struct.trace_print_flags { i32 14, ptr @.str.60 }, %struct.trace_print_flags { i32 15, ptr @.str.61 }, %struct.trace_print_flags { i32 16, ptr @.str.62 }, %struct.trace_print_flags { i32 17, ptr @.str.63 }, %struct.trace_print_flags { i32 18, ptr @.str.64 }, %struct.trace_print_flags { i32 19, ptr @.str.65 }, %struct.trace_print_flags { i32 20, ptr @.str.66 }, %struct.trace_print_flags { i32 21, ptr @.str.67 }, %struct.trace_print_flags { i32 22, ptr @.str.68 }, %struct.trace_print_flags { i32 23, ptr @.str.69 }, %struct.trace_print_flags { i32 24, ptr @.str.70 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"dev %d:%d type %s ret_ip %pS\0A\00", [34 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_incomplete.symbols = internal constant { [26 x %struct.trace_print_flags], [48 x i8] } { [26 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.46 }, %struct.trace_print_flags { i32 1, ptr @.str.47 }, %struct.trace_print_flags { i32 2, ptr @.str.48 }, %struct.trace_print_flags { i32 3, ptr @.str.49 }, %struct.trace_print_flags { i32 4, ptr @.str.50 }, %struct.trace_print_flags { i32 5, ptr @.str.51 }, %struct.trace_print_flags { i32 6, ptr @.str.52 }, %struct.trace_print_flags { i32 7, ptr @.str.53 }, %struct.trace_print_flags { i32 8, ptr @.str.54 }, %struct.trace_print_flags { i32 9, ptr @.str.55 }, %struct.trace_print_flags { i32 10, ptr @.str.56 }, %struct.trace_print_flags { i32 11, ptr @.str.57 }, %struct.trace_print_flags { i32 12, ptr @.str.58 }, %struct.trace_print_flags { i32 13, ptr @.str.59 }, %struct.trace_print_flags { i32 14, ptr @.str.60 }, %struct.trace_print_flags { i32 15, ptr @.str.61 }, %struct.trace_print_flags { i32 16, ptr @.str.62 }, %struct.trace_print_flags { i32 17, ptr @.str.63 }, %struct.trace_print_flags { i32 18, ptr @.str.64 }, %struct.trace_print_flags { i32 19, ptr @.str.65 }, %struct.trace_print_flags { i32 20, ptr @.str.66 }, %struct.trace_print_flags { i32 21, ptr @.str.67 }, %struct.trace_print_flags { i32 22, ptr @.str.68 }, %struct.trace_print_flags { i32 23, ptr @.str.69 }, %struct.trace_print_flags { i32 24, ptr @.str.70 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"xfs_btnum_t\00", [20 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"btnum\00", [26 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"level\00", [26 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"ptr\00", [28 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [85 x i8], [43 x i8] } { [85 x i8] c"dev %d:%d type %s btree %s level %d ptr %d agno 0x%x agbno 0x%x error %d ret_ip %pS\0A\00", [43 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_btree_op_error.symbols = internal constant { [26 x %struct.trace_print_flags], [48 x i8] } { [26 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.46 }, %struct.trace_print_flags { i32 1, ptr @.str.47 }, %struct.trace_print_flags { i32 2, ptr @.str.48 }, %struct.trace_print_flags { i32 3, ptr @.str.49 }, %struct.trace_print_flags { i32 4, ptr @.str.50 }, %struct.trace_print_flags { i32 5, ptr @.str.51 }, %struct.trace_print_flags { i32 6, ptr @.str.52 }, %struct.trace_print_flags { i32 7, ptr @.str.53 }, %struct.trace_print_flags { i32 8, ptr @.str.54 }, %struct.trace_print_flags { i32 9, ptr @.str.55 }, %struct.trace_print_flags { i32 10, ptr @.str.56 }, %struct.trace_print_flags { i32 11, ptr @.str.57 }, %struct.trace_print_flags { i32 12, ptr @.str.58 }, %struct.trace_print_flags { i32 13, ptr @.str.59 }, %struct.trace_print_flags { i32 14, ptr @.str.60 }, %struct.trace_print_flags { i32 15, ptr @.str.61 }, %struct.trace_print_flags { i32 16, ptr @.str.62 }, %struct.trace_print_flags { i32 17, ptr @.str.63 }, %struct.trace_print_flags { i32 18, ptr @.str.64 }, %struct.trace_print_flags { i32 19, ptr @.str.65 }, %struct.trace_print_flags { i32 20, ptr @.str.66 }, %struct.trace_print_flags { i32 21, ptr @.str.67 }, %struct.trace_print_flags { i32 22, ptr @.str.68 }, %struct.trace_print_flags { i32 23, ptr @.str.69 }, %struct.trace_print_flags { i32 24, ptr @.str.70 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_btree_op_error.symbols.104 = internal constant { [8 x %struct.trace_print_flags], [32 x i8] } { [8 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.51 }, %struct.trace_print_flags { i32 1, ptr @.str.52 }, %struct.trace_print_flags { i32 2, ptr @.str.55 }, %struct.trace_print_flags { i32 3, ptr @.str.105 }, %struct.trace_print_flags { i32 4, ptr @.str.53 }, %struct.trace_print_flags { i32 5, ptr @.str.54 }, %struct.trace_print_flags { i32 6, ptr @.str.106 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"bmbt\00", [27 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"refcbt\00", [25 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [104 x i8], [56 x i8] } { [104 x i8] c"dev %d:%d ino 0x%llx fork %s type %s btree %s level %d ptr %d agno 0x%x agbno 0x%x error %d ret_ip %pS\0A\00", [56 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_ifork_btree_op_error.symbols = internal constant { [4 x %struct.trace_print_flags], [32 x i8] } { [4 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.89 }, %struct.trace_print_flags { i32 1, ptr @.str.90 }, %struct.trace_print_flags { i32 2, ptr @.str.91 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_ifork_btree_op_error.symbols.108 = internal constant { [26 x %struct.trace_print_flags], [48 x i8] } { [26 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.46 }, %struct.trace_print_flags { i32 1, ptr @.str.47 }, %struct.trace_print_flags { i32 2, ptr @.str.48 }, %struct.trace_print_flags { i32 3, ptr @.str.49 }, %struct.trace_print_flags { i32 4, ptr @.str.50 }, %struct.trace_print_flags { i32 5, ptr @.str.51 }, %struct.trace_print_flags { i32 6, ptr @.str.52 }, %struct.trace_print_flags { i32 7, ptr @.str.53 }, %struct.trace_print_flags { i32 8, ptr @.str.54 }, %struct.trace_print_flags { i32 9, ptr @.str.55 }, %struct.trace_print_flags { i32 10, ptr @.str.56 }, %struct.trace_print_flags { i32 11, ptr @.str.57 }, %struct.trace_print_flags { i32 12, ptr @.str.58 }, %struct.trace_print_flags { i32 13, ptr @.str.59 }, %struct.trace_print_flags { i32 14, ptr @.str.60 }, %struct.trace_print_flags { i32 15, ptr @.str.61 }, %struct.trace_print_flags { i32 16, ptr @.str.62 }, %struct.trace_print_flags { i32 17, ptr @.str.63 }, %struct.trace_print_flags { i32 18, ptr @.str.64 }, %struct.trace_print_flags { i32 19, ptr @.str.65 }, %struct.trace_print_flags { i32 20, ptr @.str.66 }, %struct.trace_print_flags { i32 21, ptr @.str.67 }, %struct.trace_print_flags { i32 22, ptr @.str.68 }, %struct.trace_print_flags { i32 23, ptr @.str.69 }, %struct.trace_print_flags { i32 24, ptr @.str.70 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_ifork_btree_op_error.symbols.109 = internal constant { [8 x %struct.trace_print_flags], [32 x i8] } { [8 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.51 }, %struct.trace_print_flags { i32 1, ptr @.str.52 }, %struct.trace_print_flags { i32 2, ptr @.str.55 }, %struct.trace_print_flags { i32 3, ptr @.str.105 }, %struct.trace_print_flags { i32 4, ptr @.str.53 }, %struct.trace_print_flags { i32 5, ptr @.str.54 }, %struct.trace_print_flags { i32 6, ptr @.str.106 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [76 x i8], [52 x i8] } { [76 x i8] c"dev %d:%d type %s btree %s level %d ptr %d agno 0x%x agbno 0x%x ret_ip %pS\0A\00", [52 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_btree_error.symbols = internal constant { [26 x %struct.trace_print_flags], [48 x i8] } { [26 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.46 }, %struct.trace_print_flags { i32 1, ptr @.str.47 }, %struct.trace_print_flags { i32 2, ptr @.str.48 }, %struct.trace_print_flags { i32 3, ptr @.str.49 }, %struct.trace_print_flags { i32 4, ptr @.str.50 }, %struct.trace_print_flags { i32 5, ptr @.str.51 }, %struct.trace_print_flags { i32 6, ptr @.str.52 }, %struct.trace_print_flags { i32 7, ptr @.str.53 }, %struct.trace_print_flags { i32 8, ptr @.str.54 }, %struct.trace_print_flags { i32 9, ptr @.str.55 }, %struct.trace_print_flags { i32 10, ptr @.str.56 }, %struct.trace_print_flags { i32 11, ptr @.str.57 }, %struct.trace_print_flags { i32 12, ptr @.str.58 }, %struct.trace_print_flags { i32 13, ptr @.str.59 }, %struct.trace_print_flags { i32 14, ptr @.str.60 }, %struct.trace_print_flags { i32 15, ptr @.str.61 }, %struct.trace_print_flags { i32 16, ptr @.str.62 }, %struct.trace_print_flags { i32 17, ptr @.str.63 }, %struct.trace_print_flags { i32 18, ptr @.str.64 }, %struct.trace_print_flags { i32 19, ptr @.str.65 }, %struct.trace_print_flags { i32 20, ptr @.str.66 }, %struct.trace_print_flags { i32 21, ptr @.str.67 }, %struct.trace_print_flags { i32 22, ptr @.str.68 }, %struct.trace_print_flags { i32 23, ptr @.str.69 }, %struct.trace_print_flags { i32 24, ptr @.str.70 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_btree_error.symbols.111 = internal constant { [8 x %struct.trace_print_flags], [32 x i8] } { [8 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.51 }, %struct.trace_print_flags { i32 1, ptr @.str.52 }, %struct.trace_print_flags { i32 2, ptr @.str.55 }, %struct.trace_print_flags { i32 3, ptr @.str.105 }, %struct.trace_print_flags { i32 4, ptr @.str.53 }, %struct.trace_print_flags { i32 5, ptr @.str.54 }, %struct.trace_print_flags { i32 6, ptr @.str.106 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [95 x i8], [33 x i8] } { [95 x i8] c"dev %d:%d ino 0x%llx fork %s type %s btree %s level %d ptr %d agno 0x%x agbno 0x%x ret_ip %pS\0A\00", [33 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_ifork_btree_error.symbols = internal constant { [4 x %struct.trace_print_flags], [32 x i8] } { [4 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.89 }, %struct.trace_print_flags { i32 1, ptr @.str.90 }, %struct.trace_print_flags { i32 2, ptr @.str.91 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_ifork_btree_error.symbols.113 = internal constant { [26 x %struct.trace_print_flags], [48 x i8] } { [26 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.46 }, %struct.trace_print_flags { i32 1, ptr @.str.47 }, %struct.trace_print_flags { i32 2, ptr @.str.48 }, %struct.trace_print_flags { i32 3, ptr @.str.49 }, %struct.trace_print_flags { i32 4, ptr @.str.50 }, %struct.trace_print_flags { i32 5, ptr @.str.51 }, %struct.trace_print_flags { i32 6, ptr @.str.52 }, %struct.trace_print_flags { i32 7, ptr @.str.53 }, %struct.trace_print_flags { i32 8, ptr @.str.54 }, %struct.trace_print_flags { i32 9, ptr @.str.55 }, %struct.trace_print_flags { i32 10, ptr @.str.56 }, %struct.trace_print_flags { i32 11, ptr @.str.57 }, %struct.trace_print_flags { i32 12, ptr @.str.58 }, %struct.trace_print_flags { i32 13, ptr @.str.59 }, %struct.trace_print_flags { i32 14, ptr @.str.60 }, %struct.trace_print_flags { i32 15, ptr @.str.61 }, %struct.trace_print_flags { i32 16, ptr @.str.62 }, %struct.trace_print_flags { i32 17, ptr @.str.63 }, %struct.trace_print_flags { i32 18, ptr @.str.64 }, %struct.trace_print_flags { i32 19, ptr @.str.65 }, %struct.trace_print_flags { i32 20, ptr @.str.66 }, %struct.trace_print_flags { i32 21, ptr @.str.67 }, %struct.trace_print_flags { i32 22, ptr @.str.68 }, %struct.trace_print_flags { i32 23, ptr @.str.69 }, %struct.trace_print_flags { i32 24, ptr @.str.70 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_ifork_btree_error.symbols.114 = internal constant { [8 x %struct.trace_print_flags], [32 x i8] } { [8 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.51 }, %struct.trace_print_flags { i32 1, ptr @.str.52 }, %struct.trace_print_flags { i32 2, ptr @.str.55 }, %struct.trace_print_flags { i32 3, ptr @.str.105 }, %struct.trace_print_flags { i32 4, ptr @.str.53 }, %struct.trace_print_flags { i32 5, ptr @.str.54 }, %struct.trace_print_flags { i32 6, ptr @.str.106 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"nlevels\00", [24 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [76 x i8], [52 x i8] } { [76 x i8] c"dev %d:%d type %s btree %s agno 0x%x agbno 0x%x level %d nlevels %d ptr %d\0A\00", [52 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_sbtree_class.symbols = internal constant { [26 x %struct.trace_print_flags], [48 x i8] } { [26 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.46 }, %struct.trace_print_flags { i32 1, ptr @.str.47 }, %struct.trace_print_flags { i32 2, ptr @.str.48 }, %struct.trace_print_flags { i32 3, ptr @.str.49 }, %struct.trace_print_flags { i32 4, ptr @.str.50 }, %struct.trace_print_flags { i32 5, ptr @.str.51 }, %struct.trace_print_flags { i32 6, ptr @.str.52 }, %struct.trace_print_flags { i32 7, ptr @.str.53 }, %struct.trace_print_flags { i32 8, ptr @.str.54 }, %struct.trace_print_flags { i32 9, ptr @.str.55 }, %struct.trace_print_flags { i32 10, ptr @.str.56 }, %struct.trace_print_flags { i32 11, ptr @.str.57 }, %struct.trace_print_flags { i32 12, ptr @.str.58 }, %struct.trace_print_flags { i32 13, ptr @.str.59 }, %struct.trace_print_flags { i32 14, ptr @.str.60 }, %struct.trace_print_flags { i32 15, ptr @.str.61 }, %struct.trace_print_flags { i32 16, ptr @.str.62 }, %struct.trace_print_flags { i32 17, ptr @.str.63 }, %struct.trace_print_flags { i32 18, ptr @.str.64 }, %struct.trace_print_flags { i32 19, ptr @.str.65 }, %struct.trace_print_flags { i32 20, ptr @.str.66 }, %struct.trace_print_flags { i32 21, ptr @.str.67 }, %struct.trace_print_flags { i32 22, ptr @.str.68 }, %struct.trace_print_flags { i32 23, ptr @.str.69 }, %struct.trace_print_flags { i32 24, ptr @.str.70 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_sbtree_class.symbols.117 = internal constant { [8 x %struct.trace_print_flags], [32 x i8] } { [8 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.51 }, %struct.trace_print_flags { i32 1, ptr @.str.52 }, %struct.trace_print_flags { i32 2, ptr @.str.55 }, %struct.trace_print_flags { i32 3, ptr @.str.105 }, %struct.trace_print_flags { i32 4, ptr @.str.53 }, %struct.trace_print_flags { i32 5, ptr @.str.54 }, %struct.trace_print_flags { i32 6, ptr @.str.106 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"dev %d:%d type %s xref error %d ret_ip %pS\0A\00", [52 x i8] zeroinitializer }, align 32
@trace_raw_output_xchk_xref_error.symbols = internal constant { [26 x %struct.trace_print_flags], [48 x i8] } { [26 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.46 }, %struct.trace_print_flags { i32 1, ptr @.str.47 }, %struct.trace_print_flags { i32 2, ptr @.str.48 }, %struct.trace_print_flags { i32 3, ptr @.str.49 }, %struct.trace_print_flags { i32 4, ptr @.str.50 }, %struct.trace_print_flags { i32 5, ptr @.str.51 }, %struct.trace_print_flags { i32 6, ptr @.str.52 }, %struct.trace_print_flags { i32 7, ptr @.str.53 }, %struct.trace_print_flags { i32 8, ptr @.str.54 }, %struct.trace_print_flags { i32 9, ptr @.str.55 }, %struct.trace_print_flags { i32 10, ptr @.str.56 }, %struct.trace_print_flags { i32 11, ptr @.str.57 }, %struct.trace_print_flags { i32 12, ptr @.str.58 }, %struct.trace_print_flags { i32 13, ptr @.str.59 }, %struct.trace_print_flags { i32 14, ptr @.str.60 }, %struct.trace_print_flags { i32 15, ptr @.str.61 }, %struct.trace_print_flags { i32 16, ptr @.str.62 }, %struct.trace_print_flags { i32 17, ptr @.str.63 }, %struct.trace_print_flags { i32 18, ptr @.str.64 }, %struct.trace_print_flags { i32 19, ptr @.str.65 }, %struct.trace_print_flags { i32 20, ptr @.str.66 }, %struct.trace_print_flags { i32 21, ptr @.str.67 }, %struct.trace_print_flags { i32 22, ptr @.str.68 }, %struct.trace_print_flags { i32 23, ptr @.str.69 }, %struct.trace_print_flags { i32 24, ptr @.str.70 }, %struct.trace_print_flags { i32 -1, ptr null }], [48 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"xfs_agino_t\00", [20 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"startino\00", [23 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"xfs_daddr_t\00", [20 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"map_daddr\00", [22 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"unsigned short\00", [17 x i8] zeroinitializer }, align 32
@.str.124 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"map_len\00", [24 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"chunk_ino\00", [22 x i8] zeroinitializer }, align 32
@.str.126 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"nr_inodes\00", [22 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"cluster_ino\00", [20 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"uint16_t\00", [23 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"cluster_mask\00", [19 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"holemask\00", [23 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [137 x i8], [55 x i8] } { [137 x i8] c"dev %d:%d agno 0x%x startino 0x%x daddr 0x%llx bbcount 0x%x chunkino 0x%x nr_inodes %u cluster_mask 0x%x holemask 0x%x cluster_ino 0x%x\0A\00", [55 x i8] zeroinitializer }, align 32
@.str.132 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"int64_t\00", [24 x i8] zeroinitializer }, align 32
@.str.133 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"icount_sb\00", [22 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"uint64_t\00", [23 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"icount_calculated\00", [46 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"ifree_sb\00", [23 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"ifree_calculated\00", [47 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"fdblocks_sb\00", [20 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"fdblocks_calculated\00", [44 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"delalloc\00", [23 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [79 x i8], [49 x i8] } { [79 x i8] c"dev %d:%d icount %lld:%llu ifree %lld::%llu fdblocks %lld::%llu delalloc %llu\0A\00", [49 x i8] zeroinitializer }, align 32
@.str.142 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"expected\00", [23 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"curr_value\00", [21 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"old_value\00", [22 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"dev %d:%d expected %llu curr_value %lld old_value %lld\0A\00", [40 x i8] zeroinitializer }, align 32
@.str.146 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"xfs_extlen_t\00", [19 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"len\00", [28 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"dev %d:%d agno 0x%x agbno 0x%x fsbcount 0x%x\0A\00", [50 x i8] zeroinitializer }, align 32
@.str.149 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"owner\00", [26 x i8] zeroinitializer }, align 32
@.str.150 = internal constant { [85 x i8], [43 x i8] } { [85 x i8] c"dev %d:%d agno 0x%x agbno 0x%x fsbcount 0x%x owner 0x%llx fileoff 0x%llx flags 0x%x\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.151 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"startblock\00", [21 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"blockcount\00", [21 x i8] zeroinitializer }, align 32
@.str.153 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"xfs_nlink_t\00", [20 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"refcount\00", [23 x i8] zeroinitializer }, align 32
@.str.155 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"dev %d:%d agno 0x%x agbno 0x%x fsbcount 0x%x refcount %u\0A\00", [38 x i8] zeroinitializer }, align 32
@.str.156 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"uint32_t\00", [23 x i8] zeroinitializer }, align 32
@.str.157 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"dev %d:%d agno 0x%x agbno 0x%x btree %s\0A\00", [55 x i8] zeroinitializer }, align 32
@trace_raw_output_xrep_init_btblock.symbols = internal constant { [8 x %struct.trace_print_flags], [32 x i8] } { [8 x %struct.trace_print_flags] [%struct.trace_print_flags { i32 0, ptr @.str.51 }, %struct.trace_print_flags { i32 1, ptr @.str.52 }, %struct.trace_print_flags { i32 2, ptr @.str.55 }, %struct.trace_print_flags { i32 3, ptr @.str.105 }, %struct.trace_print_flags { i32 4, ptr @.str.53 }, %struct.trace_print_flags { i32 5, ptr @.str.54 }, %struct.trace_print_flags { i32 6, ptr @.str.106 }, %struct.trace_print_flags { i32 -1, ptr null }], [32 x i8] zeroinitializer }, align 32
@.str.158 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"magic\00", [26 x i8] zeroinitializer }, align 32
@.str.159 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"dev %d:%d agno 0x%x agbno 0x%x magic 0x%x level %u\0A\00", [44 x i8] zeroinitializer }, align 32
@.str.160 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"icount\00", [25 x i8] zeroinitializer }, align 32
@.str.161 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"aglen\00", [26 x i8] zeroinitializer }, align 32
@.str.162 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"freelen\00", [24 x i8] zeroinitializer }, align 32
@.str.163 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"usedlen\00", [24 x i8] zeroinitializer }, align 32
@.str.164 = internal constant { [62 x i8], [34 x i8] } { [62 x i8] c"dev %d:%d agno 0x%x icount %u aglen %u freelen %u usedlen %u\0A\00", [34 x i8] zeroinitializer }, align 32
@.str.165 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"bnobt_sz\00", [23 x i8] zeroinitializer }, align 32
@.str.166 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"inobt_sz\00", [23 x i8] zeroinitializer }, align 32
@.str.167 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"rmapbt_sz\00", [22 x i8] zeroinitializer }, align 32
@.str.168 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"refcbt_sz\00", [22 x i8] zeroinitializer }, align 32
@.str.169 = internal constant { [63 x i8], [33 x i8] } { [63 x i8] c"dev %d:%d agno 0x%x bnobt %u inobt %u rmapbt %u refcountbt %u\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.170 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"dev %d:%d\0A\00", [21 x i8] zeroinitializer }, align 32
@.str.171 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"uint8_t\00", [24 x i8] zeroinitializer }, align 32
@.str.172 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"count\00", [26 x i8] zeroinitializer }, align 32
@.str.173 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"freecount\00", [22 x i8] zeroinitializer }, align 32
@.str.174 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"freemask\00", [23 x i8] zeroinitializer }, align 32
@.str.175 = internal constant { [87 x i8], [41 x i8] } { [87 x i8] c"dev %d:%d agno 0x%x startino 0x%x holemask 0x%x count %u freecount %u freemask 0x%llx\0A\00", [41 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@___asan_gen_ = private constant [24 x i8] c"../fs/xfs/scrub/trace.c\00", align 1
@___asan_gen_.176 = private unnamed_addr constant [34 x i8] c"str__xfs_scrub__trace_system_name\00", align 1
@___asan_gen_.177 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.178 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.177, i32 36, i32 1 }
@___asan_gen_.181 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 25, i32 1 }
@___asan_gen_.184 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 26, i32 1 }
@___asan_gen_.187 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 27, i32 1 }
@___asan_gen_.190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 28, i32 1 }
@___asan_gen_.193 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 29, i32 1 }
@___asan_gen_.196 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 30, i32 1 }
@___asan_gen_.199 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 31, i32 1 }
@___asan_gen_.202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 33, i32 1 }
@___asan_gen_.205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 34, i32 1 }
@___asan_gen_.208 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 35, i32 1 }
@___asan_gen_.211 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 36, i32 1 }
@___asan_gen_.214 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 37, i32 1 }
@___asan_gen_.217 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 38, i32 1 }
@___asan_gen_.220 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 39, i32 1 }
@___asan_gen_.223 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 40, i32 1 }
@___asan_gen_.226 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 41, i32 1 }
@___asan_gen_.229 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 42, i32 1 }
@___asan_gen_.232 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 43, i32 1 }
@___asan_gen_.235 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 44, i32 1 }
@___asan_gen_.238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 45, i32 1 }
@___asan_gen_.241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 46, i32 1 }
@___asan_gen_.244 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 47, i32 1 }
@___asan_gen_.247 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 48, i32 1 }
@___asan_gen_.250 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 49, i32 1 }
@___asan_gen_.253 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 50, i32 1 }
@___asan_gen_.256 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 51, i32 1 }
@___asan_gen_.259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 52, i32 1 }
@___asan_gen_.262 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 53, i32 1 }
@___asan_gen_.265 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 54, i32 1 }
@___asan_gen_.268 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 55, i32 1 }
@___asan_gen_.271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 56, i32 1 }
@___asan_gen_.274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 57, i32 1 }
@___asan_gen_.275 = private unnamed_addr constant [30 x i8] c"trace_event_fields_xchk_class\00", align 1
@___asan_gen_.278 = private unnamed_addr constant [34 x i8] c"trace_event_type_funcs_xchk_class\00", align 1
@___asan_gen_.281 = private unnamed_addr constant [21 x i8] c"print_fmt_xchk_class\00", align 1
@___asan_gen_.284 = private unnamed_addr constant [17 x i8] c"event_xchk_start\00", align 1
@___asan_gen_.286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 136, i32 1 }
@___asan_gen_.287 = private unnamed_addr constant [16 x i8] c"event_xchk_done\00", align 1
@___asan_gen_.289 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 137, i32 1 }
@___asan_gen_.290 = private unnamed_addr constant [26 x i8] c"event_xchk_deadlock_retry\00", align 1
@___asan_gen_.292 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 138, i32 1 }
@___asan_gen_.293 = private unnamed_addr constant [19 x i8] c"event_xrep_attempt\00", align 1
@___asan_gen_.295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 139, i32 1 }
@___asan_gen_.296 = private unnamed_addr constant [16 x i8] c"event_xrep_done\00", align 1
@___asan_gen_.298 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 140, i32 1 }
@___asan_gen_.299 = private unnamed_addr constant [33 x i8] c"trace_event_fields_xchk_op_error\00", align 1
@___asan_gen_.302 = private unnamed_addr constant [37 x i8] c"trace_event_type_funcs_xchk_op_error\00", align 1
@___asan_gen_.305 = private unnamed_addr constant [24 x i8] c"print_fmt_xchk_op_error\00", align 1
@___asan_gen_.308 = private unnamed_addr constant [20 x i8] c"event_xchk_op_error\00", align 1
@___asan_gen_.311 = private unnamed_addr constant [38 x i8] c"trace_event_fields_xchk_file_op_error\00", align 1
@___asan_gen_.314 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_xchk_file_op_error\00", align 1
@___asan_gen_.317 = private unnamed_addr constant [29 x i8] c"print_fmt_xchk_file_op_error\00", align 1
@___asan_gen_.320 = private unnamed_addr constant [25 x i8] c"event_xchk_file_op_error\00", align 1
@___asan_gen_.323 = private unnamed_addr constant [42 x i8] c"trace_event_fields_xchk_block_error_class\00", align 1
@___asan_gen_.326 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_xchk_block_error_class\00", align 1
@___asan_gen_.329 = private unnamed_addr constant [33 x i8] c"print_fmt_xchk_block_error_class\00", align 1
@___asan_gen_.332 = private unnamed_addr constant [20 x i8] c"event_xchk_fs_error\00", align 1
@___asan_gen_.334 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 234, i32 1 }
@___asan_gen_.335 = private unnamed_addr constant [23 x i8] c"event_xchk_block_error\00", align 1
@___asan_gen_.337 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 235, i32 1 }
@___asan_gen_.338 = private unnamed_addr constant [23 x i8] c"event_xchk_block_preen\00", align 1
@___asan_gen_.340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 236, i32 1 }
@___asan_gen_.341 = private unnamed_addr constant [40 x i8] c"trace_event_fields_xchk_ino_error_class\00", align 1
@___asan_gen_.344 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_xchk_ino_error_class\00", align 1
@___asan_gen_.347 = private unnamed_addr constant [31 x i8] c"print_fmt_xchk_ino_error_class\00", align 1
@___asan_gen_.350 = private unnamed_addr constant [21 x i8] c"event_xchk_ino_error\00", align 1
@___asan_gen_.352 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 266, i32 1 }
@___asan_gen_.353 = private unnamed_addr constant [21 x i8] c"event_xchk_ino_preen\00", align 1
@___asan_gen_.355 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 267, i32 1 }
@___asan_gen_.356 = private unnamed_addr constant [23 x i8] c"event_xchk_ino_warning\00", align 1
@___asan_gen_.358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 268, i32 1 }
@___asan_gen_.359 = private unnamed_addr constant [43 x i8] c"trace_event_fields_xchk_fblock_error_class\00", align 1
@___asan_gen_.362 = private unnamed_addr constant [47 x i8] c"trace_event_type_funcs_xchk_fblock_error_class\00", align 1
@___asan_gen_.365 = private unnamed_addr constant [34 x i8] c"print_fmt_xchk_fblock_error_class\00", align 1
@___asan_gen_.368 = private unnamed_addr constant [24 x i8] c"event_xchk_fblock_error\00", align 1
@___asan_gen_.370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 305, i32 1 }
@___asan_gen_.371 = private unnamed_addr constant [26 x i8] c"event_xchk_fblock_warning\00", align 1
@___asan_gen_.373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 306, i32 1 }
@___asan_gen_.374 = private unnamed_addr constant [35 x i8] c"trace_event_fields_xchk_incomplete\00", align 1
@___asan_gen_.377 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_xchk_incomplete\00", align 1
@___asan_gen_.380 = private unnamed_addr constant [26 x i8] c"print_fmt_xchk_incomplete\00", align 1
@___asan_gen_.383 = private unnamed_addr constant [22 x i8] c"event_xchk_incomplete\00", align 1
@___asan_gen_.386 = private unnamed_addr constant [39 x i8] c"trace_event_fields_xchk_btree_op_error\00", align 1
@___asan_gen_.389 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_xchk_btree_op_error\00", align 1
@___asan_gen_.392 = private unnamed_addr constant [30 x i8] c"print_fmt_xchk_btree_op_error\00", align 1
@___asan_gen_.395 = private unnamed_addr constant [26 x i8] c"event_xchk_btree_op_error\00", align 1
@___asan_gen_.398 = private unnamed_addr constant [45 x i8] c"trace_event_fields_xchk_ifork_btree_op_error\00", align 1
@___asan_gen_.401 = private unnamed_addr constant [49 x i8] c"trace_event_type_funcs_xchk_ifork_btree_op_error\00", align 1
@___asan_gen_.404 = private unnamed_addr constant [36 x i8] c"print_fmt_xchk_ifork_btree_op_error\00", align 1
@___asan_gen_.407 = private unnamed_addr constant [32 x i8] c"event_xchk_ifork_btree_op_error\00", align 1
@___asan_gen_.410 = private unnamed_addr constant [36 x i8] c"trace_event_fields_xchk_btree_error\00", align 1
@___asan_gen_.413 = private unnamed_addr constant [40 x i8] c"trace_event_type_funcs_xchk_btree_error\00", align 1
@___asan_gen_.416 = private unnamed_addr constant [27 x i8] c"print_fmt_xchk_btree_error\00", align 1
@___asan_gen_.419 = private unnamed_addr constant [23 x i8] c"event_xchk_btree_error\00", align 1
@___asan_gen_.422 = private unnamed_addr constant [42 x i8] c"trace_event_fields_xchk_ifork_btree_error\00", align 1
@___asan_gen_.425 = private unnamed_addr constant [46 x i8] c"trace_event_type_funcs_xchk_ifork_btree_error\00", align 1
@___asan_gen_.428 = private unnamed_addr constant [33 x i8] c"print_fmt_xchk_ifork_btree_error\00", align 1
@___asan_gen_.431 = private unnamed_addr constant [29 x i8] c"event_xchk_ifork_btree_error\00", align 1
@___asan_gen_.434 = private unnamed_addr constant [37 x i8] c"trace_event_fields_xchk_sbtree_class\00", align 1
@___asan_gen_.437 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_xchk_sbtree_class\00", align 1
@___asan_gen_.440 = private unnamed_addr constant [28 x i8] c"print_fmt_xchk_sbtree_class\00", align 1
@___asan_gen_.443 = private unnamed_addr constant [21 x i8] c"event_xchk_btree_rec\00", align 1
@___asan_gen_.445 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 532, i32 1 }
@___asan_gen_.446 = private unnamed_addr constant [21 x i8] c"event_xchk_btree_key\00", align 1
@___asan_gen_.448 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 533, i32 1 }
@___asan_gen_.449 = private unnamed_addr constant [35 x i8] c"trace_event_fields_xchk_xref_error\00", align 1
@___asan_gen_.452 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_xchk_xref_error\00", align 1
@___asan_gen_.455 = private unnamed_addr constant [26 x i8] c"print_fmt_xchk_xref_error\00", align 1
@___asan_gen_.458 = private unnamed_addr constant [22 x i8] c"event_xchk_xref_error\00", align 1
@___asan_gen_.461 = private unnamed_addr constant [47 x i8] c"trace_event_fields_xchk_iallocbt_check_cluster\00", align 1
@___asan_gen_.464 = private unnamed_addr constant [51 x i8] c"trace_event_type_funcs_xchk_iallocbt_check_cluster\00", align 1
@___asan_gen_.467 = private unnamed_addr constant [38 x i8] c"print_fmt_xchk_iallocbt_check_cluster\00", align 1
@___asan_gen_.470 = private unnamed_addr constant [34 x i8] c"event_xchk_iallocbt_check_cluster\00", align 1
@___asan_gen_.473 = private unnamed_addr constant [40 x i8] c"trace_event_fields_xchk_fscounters_calc\00", align 1
@___asan_gen_.476 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_xchk_fscounters_calc\00", align 1
@___asan_gen_.479 = private unnamed_addr constant [31 x i8] c"print_fmt_xchk_fscounters_calc\00", align 1
@___asan_gen_.482 = private unnamed_addr constant [27 x i8] c"event_xchk_fscounters_calc\00", align 1
@___asan_gen_.485 = private unnamed_addr constant [48 x i8] c"trace_event_fields_xchk_fscounters_within_range\00", align 1
@___asan_gen_.488 = private unnamed_addr constant [52 x i8] c"trace_event_type_funcs_xchk_fscounters_within_range\00", align 1
@___asan_gen_.491 = private unnamed_addr constant [39 x i8] c"print_fmt_xchk_fscounters_within_range\00", align 1
@___asan_gen_.494 = private unnamed_addr constant [35 x i8] c"event_xchk_fscounters_within_range\00", align 1
@___asan_gen_.497 = private unnamed_addr constant [37 x i8] c"trace_event_fields_xrep_extent_class\00", align 1
@___asan_gen_.500 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_xrep_extent_class\00", align 1
@___asan_gen_.503 = private unnamed_addr constant [28 x i8] c"print_fmt_xrep_extent_class\00", align 1
@___asan_gen_.506 = private unnamed_addr constant [32 x i8] c"event_xrep_dispose_btree_extent\00", align 1
@___asan_gen_.508 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 690, i32 1 }
@___asan_gen_.509 = private unnamed_addr constant [23 x i8] c"event_xrep_agfl_insert\00", align 1
@___asan_gen_.511 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 691, i32 1 }
@___asan_gen_.512 = private unnamed_addr constant [35 x i8] c"trace_event_fields_xrep_rmap_class\00", align 1
@___asan_gen_.515 = private unnamed_addr constant [39 x i8] c"trace_event_type_funcs_xrep_rmap_class\00", align 1
@___asan_gen_.518 = private unnamed_addr constant [26 x i8] c"print_fmt_xrep_rmap_class\00", align 1
@___asan_gen_.521 = private unnamed_addr constant [27 x i8] c"event_xrep_alloc_extent_fn\00", align 1
@___asan_gen_.523 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 731, i32 1 }
@___asan_gen_.524 = private unnamed_addr constant [28 x i8] c"event_xrep_ialloc_extent_fn\00", align 1
@___asan_gen_.526 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 732, i32 1 }
@___asan_gen_.527 = private unnamed_addr constant [26 x i8] c"event_xrep_rmap_extent_fn\00", align 1
@___asan_gen_.529 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 733, i32 1 }
@___asan_gen_.530 = private unnamed_addr constant [26 x i8] c"event_xrep_bmap_extent_fn\00", align 1
@___asan_gen_.532 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 734, i32 1 }
@___asan_gen_.533 = private unnamed_addr constant [43 x i8] c"trace_event_fields_xrep_refcount_extent_fn\00", align 1
@___asan_gen_.536 = private unnamed_addr constant [47 x i8] c"trace_event_type_funcs_xrep_refcount_extent_fn\00", align 1
@___asan_gen_.539 = private unnamed_addr constant [34 x i8] c"print_fmt_xrep_refcount_extent_fn\00", align 1
@___asan_gen_.542 = private unnamed_addr constant [30 x i8] c"event_xrep_refcount_extent_fn\00", align 1
@___asan_gen_.545 = private unnamed_addr constant [37 x i8] c"trace_event_fields_xrep_init_btblock\00", align 1
@___asan_gen_.548 = private unnamed_addr constant [41 x i8] c"trace_event_type_funcs_xrep_init_btblock\00", align 1
@___asan_gen_.551 = private unnamed_addr constant [28 x i8] c"print_fmt_xrep_init_btblock\00", align 1
@___asan_gen_.554 = private unnamed_addr constant [24 x i8] c"event_xrep_init_btblock\00", align 1
@___asan_gen_.557 = private unnamed_addr constant [39 x i8] c"trace_event_fields_xrep_findroot_block\00", align 1
@___asan_gen_.560 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_xrep_findroot_block\00", align 1
@___asan_gen_.563 = private unnamed_addr constant [30 x i8] c"print_fmt_xrep_findroot_block\00", align 1
@___asan_gen_.566 = private unnamed_addr constant [26 x i8] c"event_xrep_findroot_block\00", align 1
@___asan_gen_.569 = private unnamed_addr constant [40 x i8] c"trace_event_fields_xrep_calc_ag_resblks\00", align 1
@___asan_gen_.572 = private unnamed_addr constant [44 x i8] c"trace_event_type_funcs_xrep_calc_ag_resblks\00", align 1
@___asan_gen_.575 = private unnamed_addr constant [31 x i8] c"print_fmt_xrep_calc_ag_resblks\00", align 1
@___asan_gen_.578 = private unnamed_addr constant [27 x i8] c"event_xrep_calc_ag_resblks\00", align 1
@___asan_gen_.581 = private unnamed_addr constant [47 x i8] c"trace_event_fields_xrep_calc_ag_resblks_btsize\00", align 1
@___asan_gen_.584 = private unnamed_addr constant [51 x i8] c"trace_event_type_funcs_xrep_calc_ag_resblks_btsize\00", align 1
@___asan_gen_.587 = private unnamed_addr constant [38 x i8] c"print_fmt_xrep_calc_ag_resblks_btsize\00", align 1
@___asan_gen_.590 = private unnamed_addr constant [34 x i8] c"event_xrep_calc_ag_resblks_btsize\00", align 1
@___asan_gen_.593 = private unnamed_addr constant [39 x i8] c"trace_event_fields_xrep_reset_counters\00", align 1
@___asan_gen_.596 = private unnamed_addr constant [43 x i8] c"trace_event_type_funcs_xrep_reset_counters\00", align 1
@___asan_gen_.599 = private unnamed_addr constant [30 x i8] c"print_fmt_xrep_reset_counters\00", align 1
@___asan_gen_.602 = private unnamed_addr constant [26 x i8] c"event_xrep_reset_counters\00", align 1
@___asan_gen_.605 = private unnamed_addr constant [38 x i8] c"trace_event_fields_xrep_ialloc_insert\00", align 1
@___asan_gen_.608 = private unnamed_addr constant [42 x i8] c"trace_event_type_funcs_xrep_ialloc_insert\00", align 1
@___asan_gen_.611 = private unnamed_addr constant [29 x i8] c"print_fmt_xrep_ialloc_insert\00", align 1
@___asan_gen_.614 = private unnamed_addr constant [25 x i8] c"event_xrep_ialloc_insert\00", align 1
@___asan_gen_.737 = private unnamed_addr constant [8 x i8] c"__flags\00", align 1
@___asan_gen_.766 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 96, i32 1 }
@___asan_gen_.784 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 142, i32 1 }
@___asan_gen_.811 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 171, i32 1 }
@___asan_gen_.820 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 203, i32 1 }
@___asan_gen_.826 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 238, i32 1 }
@___asan_gen_.835 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 270, i32 1 }
@___asan_gen_.841 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 308, i32 1 }
@___asan_gen_.868 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 327, i32 1 }
@___asan_gen_.880 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 367, i32 1 }
@___asan_gen_.889 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 412, i32 1 }
@___asan_gen_.901 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 448, i32 1 }
@___asan_gen_.913 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 490, i32 1 }
@___asan_gen_.919 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 535, i32 1 }
@___asan_gen_.958 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 557, i32 1 }
@___asan_gen_.988 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 602, i32 1 }
@___asan_gen_.1000 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 637, i32 1 }
@___asan_gen_.1009 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 663, i32 1 }
@___asan_gen_.1015 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 693, i32 1 }
@___asan_gen_.1030 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 736, i32 1 }
@___asan_gen_.1037 = private unnamed_addr constant [8 x i8] c"symbols\00", align 1
@___asan_gen_.1039 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 762, i32 1 }
@___asan_gen_.1045 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 784, i32 1 }
@___asan_gen_.1060 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 809, i32 1 }
@___asan_gen_.1075 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 838, i32 1 }
@___asan_gen_.1078 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 867, i32 1 }
@___asan_gen_.1091 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.1092 = private unnamed_addr constant [26 x i8] c"../fs/xfs/./scrub/trace.h\00", align 1
@___asan_gen_.1093 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.1092, i32 880, i32 1 }
@llvm.compiler.used = appending global [551 x ptr] [ptr @TRACE_SYSTEM_XFS_BTNUM_BMAPi, ptr @TRACE_SYSTEM_XFS_BTNUM_BNOi, ptr @TRACE_SYSTEM_XFS_BTNUM_CNTi, ptr @TRACE_SYSTEM_XFS_BTNUM_FINOi, ptr @TRACE_SYSTEM_XFS_BTNUM_INOi, ptr @TRACE_SYSTEM_XFS_BTNUM_REFCi, ptr @TRACE_SYSTEM_XFS_BTNUM_RMAPi, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_AGF, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_AGFL, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_AGI, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTA, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTC, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTD, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_BNOBT, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_CNTBT, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_DIR, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_FINOBT, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_FSCOUNTERS, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_GQUOTA, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_INOBT, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_INODE, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_PARENT, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_PQUOTA, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_PROBE, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_REFCNTBT, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_RMAPBT, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_RTBITMAP, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_RTSUM, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_SB, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_SYMLINK, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_UQUOTA, ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_XATTR, ptr @__TRACE_SYSTEM_XFS_BTNUM_BMAPi, ptr @__TRACE_SYSTEM_XFS_BTNUM_BNOi, ptr @__TRACE_SYSTEM_XFS_BTNUM_CNTi, ptr @__TRACE_SYSTEM_XFS_BTNUM_FINOi, ptr @__TRACE_SYSTEM_XFS_BTNUM_INOi, ptr @__TRACE_SYSTEM_XFS_BTNUM_REFCi, ptr @__TRACE_SYSTEM_XFS_BTNUM_RMAPi, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_AGF, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_AGFL, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_AGI, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTA, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTC, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTD, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_BNOBT, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_CNTBT, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_DIR, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_FINOBT, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_FSCOUNTERS, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_GQUOTA, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_INOBT, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_INODE, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_PARENT, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_PQUOTA, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_PROBE, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_REFCNTBT, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_RMAPBT, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_RTBITMAP, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_RTSUM, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_SB, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_SYMLINK, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_UQUOTA, ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_XATTR, ptr @__bpf_trace_tp_map_xchk_block_error, ptr @__bpf_trace_tp_map_xchk_block_preen, ptr @__bpf_trace_tp_map_xchk_btree_error, ptr @__bpf_trace_tp_map_xchk_btree_key, ptr @__bpf_trace_tp_map_xchk_btree_op_error, ptr @__bpf_trace_tp_map_xchk_btree_rec, ptr @__bpf_trace_tp_map_xchk_deadlock_retry, ptr @__bpf_trace_tp_map_xchk_done, ptr @__bpf_trace_tp_map_xchk_fblock_error, ptr @__bpf_trace_tp_map_xchk_fblock_warning, ptr @__bpf_trace_tp_map_xchk_file_op_error, ptr @__bpf_trace_tp_map_xchk_fs_error, ptr @__bpf_trace_tp_map_xchk_fscounters_calc, ptr @__bpf_trace_tp_map_xchk_fscounters_within_range, ptr @__bpf_trace_tp_map_xchk_iallocbt_check_cluster, ptr @__bpf_trace_tp_map_xchk_ifork_btree_error, ptr @__bpf_trace_tp_map_xchk_ifork_btree_op_error, ptr @__bpf_trace_tp_map_xchk_incomplete, ptr @__bpf_trace_tp_map_xchk_ino_error, ptr @__bpf_trace_tp_map_xchk_ino_preen, ptr @__bpf_trace_tp_map_xchk_ino_warning, ptr @__bpf_trace_tp_map_xchk_op_error, ptr @__bpf_trace_tp_map_xchk_start, ptr @__bpf_trace_tp_map_xchk_xref_error, ptr @__bpf_trace_tp_map_xrep_agfl_insert, ptr @__bpf_trace_tp_map_xrep_alloc_extent_fn, ptr @__bpf_trace_tp_map_xrep_attempt, ptr @__bpf_trace_tp_map_xrep_bmap_extent_fn, ptr @__bpf_trace_tp_map_xrep_calc_ag_resblks, ptr @__bpf_trace_tp_map_xrep_calc_ag_resblks_btsize, ptr @__bpf_trace_tp_map_xrep_dispose_btree_extent, ptr @__bpf_trace_tp_map_xrep_done, ptr @__bpf_trace_tp_map_xrep_findroot_block, ptr @__bpf_trace_tp_map_xrep_ialloc_extent_fn, ptr @__bpf_trace_tp_map_xrep_ialloc_insert, ptr @__bpf_trace_tp_map_xrep_init_btblock, ptr @__bpf_trace_tp_map_xrep_refcount_extent_fn, ptr @__bpf_trace_tp_map_xrep_reset_counters, ptr @__bpf_trace_tp_map_xrep_rmap_extent_fn, ptr @__event_xchk_block_error, ptr @__event_xchk_block_preen, ptr @__event_xchk_btree_error, ptr @__event_xchk_btree_key, ptr @__event_xchk_btree_op_error, ptr @__event_xchk_btree_rec, ptr @__event_xchk_deadlock_retry, ptr @__event_xchk_done, ptr @__event_xchk_fblock_error, ptr @__event_xchk_fblock_warning, ptr @__event_xchk_file_op_error, ptr @__event_xchk_fs_error, ptr @__event_xchk_fscounters_calc, ptr @__event_xchk_fscounters_within_range, ptr @__event_xchk_iallocbt_check_cluster, ptr @__event_xchk_ifork_btree_error, ptr @__event_xchk_ifork_btree_op_error, ptr @__event_xchk_incomplete, ptr @__event_xchk_ino_error, ptr @__event_xchk_ino_preen, ptr @__event_xchk_ino_warning, ptr @__event_xchk_op_error, ptr @__event_xchk_start, ptr @__event_xchk_xref_error, ptr @__event_xrep_agfl_insert, ptr @__event_xrep_alloc_extent_fn, ptr @__event_xrep_attempt, ptr @__event_xrep_bmap_extent_fn, ptr @__event_xrep_calc_ag_resblks, ptr @__event_xrep_calc_ag_resblks_btsize, ptr @__event_xrep_dispose_btree_extent, ptr @__event_xrep_done, ptr @__event_xrep_findroot_block, ptr @__event_xrep_ialloc_extent_fn, ptr @__event_xrep_ialloc_insert, ptr @__event_xrep_init_btblock, ptr @__event_xrep_refcount_extent_fn, ptr @__event_xrep_reset_counters, ptr @__event_xrep_rmap_extent_fn, ptr @__tracepoint_ptr_xchk_block_error, ptr @__tracepoint_ptr_xchk_block_preen, ptr @__tracepoint_ptr_xchk_btree_error, ptr @__tracepoint_ptr_xchk_btree_key, ptr @__tracepoint_ptr_xchk_btree_op_error, ptr @__tracepoint_ptr_xchk_btree_rec, ptr @__tracepoint_ptr_xchk_deadlock_retry, ptr @__tracepoint_ptr_xchk_done, ptr @__tracepoint_ptr_xchk_fblock_error, ptr @__tracepoint_ptr_xchk_fblock_warning, ptr @__tracepoint_ptr_xchk_file_op_error, ptr @__tracepoint_ptr_xchk_fs_error, ptr @__tracepoint_ptr_xchk_fscounters_calc, ptr @__tracepoint_ptr_xchk_fscounters_within_range, ptr @__tracepoint_ptr_xchk_iallocbt_check_cluster, ptr @__tracepoint_ptr_xchk_ifork_btree_error, ptr @__tracepoint_ptr_xchk_ifork_btree_op_error, ptr @__tracepoint_ptr_xchk_incomplete, ptr @__tracepoint_ptr_xchk_ino_error, ptr @__tracepoint_ptr_xchk_ino_preen, ptr @__tracepoint_ptr_xchk_ino_warning, ptr @__tracepoint_ptr_xchk_op_error, ptr @__tracepoint_ptr_xchk_start, ptr @__tracepoint_ptr_xchk_xref_error, ptr @__tracepoint_ptr_xrep_agfl_insert, ptr @__tracepoint_ptr_xrep_alloc_extent_fn, ptr @__tracepoint_ptr_xrep_attempt, ptr @__tracepoint_ptr_xrep_bmap_extent_fn, ptr @__tracepoint_ptr_xrep_calc_ag_resblks, ptr @__tracepoint_ptr_xrep_calc_ag_resblks_btsize, ptr @__tracepoint_ptr_xrep_dispose_btree_extent, ptr @__tracepoint_ptr_xrep_done, ptr @__tracepoint_ptr_xrep_findroot_block, ptr @__tracepoint_ptr_xrep_ialloc_extent_fn, ptr @__tracepoint_ptr_xrep_ialloc_insert, ptr @__tracepoint_ptr_xrep_init_btblock, ptr @__tracepoint_ptr_xrep_refcount_extent_fn, ptr @__tracepoint_ptr_xrep_reset_counters, ptr @__tracepoint_ptr_xrep_rmap_extent_fn, ptr @__tracepoint_xchk_block_error, ptr @__tracepoint_xchk_block_preen, ptr @__tracepoint_xchk_btree_error, ptr @__tracepoint_xchk_btree_key, ptr @__tracepoint_xchk_btree_op_error, ptr @__tracepoint_xchk_btree_rec, ptr @__tracepoint_xchk_deadlock_retry, ptr @__tracepoint_xchk_done, ptr @__tracepoint_xchk_fblock_error, ptr @__tracepoint_xchk_fblock_warning, ptr @__tracepoint_xchk_file_op_error, ptr @__tracepoint_xchk_fs_error, ptr @__tracepoint_xchk_fscounters_calc, ptr @__tracepoint_xchk_fscounters_within_range, ptr @__tracepoint_xchk_iallocbt_check_cluster, ptr @__tracepoint_xchk_ifork_btree_error, ptr @__tracepoint_xchk_ifork_btree_op_error, ptr @__tracepoint_xchk_incomplete, ptr @__tracepoint_xchk_ino_error, ptr @__tracepoint_xchk_ino_preen, ptr @__tracepoint_xchk_ino_warning, ptr @__tracepoint_xchk_op_error, ptr @__tracepoint_xchk_start, ptr @__tracepoint_xchk_xref_error, ptr @__tracepoint_xrep_agfl_insert, ptr @__tracepoint_xrep_alloc_extent_fn, ptr @__tracepoint_xrep_attempt, ptr @__tracepoint_xrep_bmap_extent_fn, ptr @__tracepoint_xrep_calc_ag_resblks, ptr @__tracepoint_xrep_calc_ag_resblks_btsize, ptr @__tracepoint_xrep_dispose_btree_extent, ptr @__tracepoint_xrep_done, ptr @__tracepoint_xrep_findroot_block, ptr @__tracepoint_xrep_ialloc_extent_fn, ptr @__tracepoint_xrep_ialloc_insert, ptr @__tracepoint_xrep_init_btblock, ptr @__tracepoint_xrep_refcount_extent_fn, ptr @__tracepoint_xrep_reset_counters, ptr @__tracepoint_xrep_rmap_extent_fn, ptr @event_class_xchk_block_error_class, ptr @event_class_xchk_btree_error, ptr @event_class_xchk_btree_op_error, ptr @event_class_xchk_class, ptr @event_class_xchk_fblock_error_class, ptr @event_class_xchk_file_op_error, ptr @event_class_xchk_fscounters_calc, ptr @event_class_xchk_fscounters_within_range, ptr @event_class_xchk_iallocbt_check_cluster, ptr @event_class_xchk_ifork_btree_error, ptr @event_class_xchk_ifork_btree_op_error, ptr @event_class_xchk_incomplete, ptr @event_class_xchk_ino_error_class, ptr @event_class_xchk_op_error, ptr @event_class_xchk_sbtree_class, ptr @event_class_xchk_xref_error, ptr @event_class_xrep_calc_ag_resblks, ptr @event_class_xrep_calc_ag_resblks_btsize, ptr @event_class_xrep_extent_class, ptr @event_class_xrep_findroot_block, ptr @event_class_xrep_ialloc_insert, ptr @event_class_xrep_init_btblock, ptr @event_class_xrep_refcount_extent_fn, ptr @event_class_xrep_reset_counters, ptr @event_class_xrep_rmap_class, ptr @event_xchk_block_error, ptr @event_xchk_block_preen, ptr @event_xchk_btree_error, ptr @event_xchk_btree_key, ptr @event_xchk_btree_op_error, ptr @event_xchk_btree_rec, ptr @event_xchk_deadlock_retry, ptr @event_xchk_done, ptr @event_xchk_fblock_error, ptr @event_xchk_fblock_warning, ptr @event_xchk_file_op_error, ptr @event_xchk_fs_error, ptr @event_xchk_fscounters_calc, ptr @event_xchk_fscounters_within_range, ptr @event_xchk_iallocbt_check_cluster, ptr @event_xchk_ifork_btree_error, ptr @event_xchk_ifork_btree_op_error, ptr @event_xchk_incomplete, ptr @event_xchk_ino_error, ptr @event_xchk_ino_preen, ptr @event_xchk_ino_warning, ptr @event_xchk_op_error, ptr @event_xchk_start, ptr @event_xchk_xref_error, ptr @event_xrep_agfl_insert, ptr @event_xrep_alloc_extent_fn, ptr @event_xrep_attempt, ptr @event_xrep_bmap_extent_fn, ptr @event_xrep_calc_ag_resblks, ptr @event_xrep_calc_ag_resblks_btsize, ptr @event_xrep_dispose_btree_extent, ptr @event_xrep_done, ptr @event_xrep_findroot_block, ptr @event_xrep_ialloc_extent_fn, ptr @event_xrep_ialloc_insert, ptr @event_xrep_init_btblock, ptr @event_xrep_refcount_extent_fn, ptr @event_xrep_reset_counters, ptr @event_xrep_rmap_extent_fn, ptr @str__xfs_scrub__trace_system_name, ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @trace_event_fields_xchk_class, ptr @trace_event_type_funcs_xchk_class, ptr @print_fmt_xchk_class, ptr @trace_event_fields_xchk_op_error, ptr @trace_event_type_funcs_xchk_op_error, ptr @print_fmt_xchk_op_error, ptr @trace_event_fields_xchk_file_op_error, ptr @trace_event_type_funcs_xchk_file_op_error, ptr @print_fmt_xchk_file_op_error, ptr @trace_event_fields_xchk_block_error_class, ptr @trace_event_type_funcs_xchk_block_error_class, ptr @print_fmt_xchk_block_error_class, ptr @trace_event_fields_xchk_ino_error_class, ptr @trace_event_type_funcs_xchk_ino_error_class, ptr @print_fmt_xchk_ino_error_class, ptr @trace_event_fields_xchk_fblock_error_class, ptr @trace_event_type_funcs_xchk_fblock_error_class, ptr @print_fmt_xchk_fblock_error_class, ptr @trace_event_fields_xchk_incomplete, ptr @trace_event_type_funcs_xchk_incomplete, ptr @print_fmt_xchk_incomplete, ptr @trace_event_fields_xchk_btree_op_error, ptr @trace_event_type_funcs_xchk_btree_op_error, ptr @print_fmt_xchk_btree_op_error, ptr @trace_event_fields_xchk_ifork_btree_op_error, ptr @trace_event_type_funcs_xchk_ifork_btree_op_error, ptr @print_fmt_xchk_ifork_btree_op_error, ptr @trace_event_fields_xchk_btree_error, ptr @trace_event_type_funcs_xchk_btree_error, ptr @print_fmt_xchk_btree_error, ptr @trace_event_fields_xchk_ifork_btree_error, ptr @trace_event_type_funcs_xchk_ifork_btree_error, ptr @print_fmt_xchk_ifork_btree_error, ptr @trace_event_fields_xchk_sbtree_class, ptr @trace_event_type_funcs_xchk_sbtree_class, ptr @print_fmt_xchk_sbtree_class, ptr @trace_event_fields_xchk_xref_error, ptr @trace_event_type_funcs_xchk_xref_error, ptr @print_fmt_xchk_xref_error, ptr @trace_event_fields_xchk_iallocbt_check_cluster, ptr @trace_event_type_funcs_xchk_iallocbt_check_cluster, ptr @print_fmt_xchk_iallocbt_check_cluster, ptr @trace_event_fields_xchk_fscounters_calc, ptr @trace_event_type_funcs_xchk_fscounters_calc, ptr @print_fmt_xchk_fscounters_calc, ptr @trace_event_fields_xchk_fscounters_within_range, ptr @trace_event_type_funcs_xchk_fscounters_within_range, ptr @print_fmt_xchk_fscounters_within_range, ptr @trace_event_fields_xrep_extent_class, ptr @trace_event_type_funcs_xrep_extent_class, ptr @print_fmt_xrep_extent_class, ptr @trace_event_fields_xrep_rmap_class, ptr @trace_event_type_funcs_xrep_rmap_class, ptr @print_fmt_xrep_rmap_class, ptr @trace_event_fields_xrep_refcount_extent_fn, ptr @trace_event_type_funcs_xrep_refcount_extent_fn, ptr @print_fmt_xrep_refcount_extent_fn, ptr @trace_event_fields_xrep_init_btblock, ptr @trace_event_type_funcs_xrep_init_btblock, ptr @print_fmt_xrep_init_btblock, ptr @trace_event_fields_xrep_findroot_block, ptr @trace_event_type_funcs_xrep_findroot_block, ptr @print_fmt_xrep_findroot_block, ptr @trace_event_fields_xrep_calc_ag_resblks, ptr @trace_event_type_funcs_xrep_calc_ag_resblks, ptr @print_fmt_xrep_calc_ag_resblks, ptr @trace_event_fields_xrep_calc_ag_resblks_btsize, ptr @trace_event_type_funcs_xrep_calc_ag_resblks_btsize, ptr @print_fmt_xrep_calc_ag_resblks_btsize, ptr @trace_event_fields_xrep_reset_counters, ptr @trace_event_type_funcs_xrep_reset_counters, ptr @print_fmt_xrep_reset_counters, ptr @trace_event_fields_xrep_ialloc_insert, ptr @trace_event_type_funcs_xrep_ialloc_insert, ptr @print_fmt_xrep_ialloc_insert, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @trace_raw_output_xchk_class.symbols, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @trace_raw_output_xchk_class.__flags, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @trace_raw_output_xchk_op_error.symbols, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @trace_raw_output_xchk_file_op_error.symbols, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @trace_raw_output_xchk_file_op_error.symbols.92, ptr @.str.93, ptr @.str.94, ptr @trace_raw_output_xchk_block_error_class.symbols, ptr @.str.95, ptr @trace_raw_output_xchk_ino_error_class.symbols, ptr @.str.96, ptr @trace_raw_output_xchk_fblock_error_class.symbols, ptr @trace_raw_output_xchk_fblock_error_class.symbols.97, ptr @.str.98, ptr @trace_raw_output_xchk_incomplete.symbols, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @trace_raw_output_xchk_btree_op_error.symbols, ptr @trace_raw_output_xchk_btree_op_error.symbols.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @trace_raw_output_xchk_ifork_btree_op_error.symbols, ptr @trace_raw_output_xchk_ifork_btree_op_error.symbols.108, ptr @trace_raw_output_xchk_ifork_btree_op_error.symbols.109, ptr @.str.110, ptr @trace_raw_output_xchk_btree_error.symbols, ptr @trace_raw_output_xchk_btree_error.symbols.111, ptr @.str.112, ptr @trace_raw_output_xchk_ifork_btree_error.symbols, ptr @trace_raw_output_xchk_ifork_btree_error.symbols.113, ptr @trace_raw_output_xchk_ifork_btree_error.symbols.114, ptr @.str.115, ptr @.str.116, ptr @trace_raw_output_xchk_sbtree_class.symbols, ptr @trace_raw_output_xchk_sbtree_class.symbols.117, ptr @.str.118, ptr @trace_raw_output_xchk_xref_error.symbols, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154, ptr @.str.155, ptr @.str.156, ptr @.str.157, ptr @trace_raw_output_xrep_init_btblock.symbols, ptr @.str.158, ptr @.str.159, ptr @.str.160, ptr @.str.161, ptr @.str.162, ptr @.str.163, ptr @.str.164, ptr @.str.165, ptr @.str.166, ptr @.str.167, ptr @.str.168, ptr @.str.169, ptr @.str.170, ptr @.str.171, ptr @.str.172, ptr @.str.173, ptr @.str.174, ptr @.str.175], section "llvm.metadata"
@0 = internal global [306 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__xfs_scrub__trace_system_name to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.176 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.178 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.181 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.184 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.187 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.220 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.262 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xchk_class to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.275 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xchk_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.278 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xchk_class to i32), i32 932, i32 1184, i32 ptrtoint (ptr @___asan_gen_.281 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_start to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.284 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_done to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.287 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_deadlock_retry to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.290 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xrep_attempt to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.293 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xrep_done to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.296 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xchk_op_error to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.299 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xchk_op_error to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.302 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xchk_op_error to i32), i32 671, i32 832, i32 ptrtoint (ptr @___asan_gen_.305 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_op_error to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.308 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xchk_file_op_error to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.311 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xchk_file_op_error to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xchk_file_op_error to i32), i32 764, i32 928, i32 ptrtoint (ptr @___asan_gen_.317 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_file_op_error to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xchk_block_error_class to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.323 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xchk_block_error_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.326 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xchk_block_error_class to i32), i32 652, i32 832, i32 ptrtoint (ptr @___asan_gen_.329 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_fs_error to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.332 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_block_error to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.335 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_block_preen to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.338 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xchk_ino_error_class to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.341 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xchk_ino_error_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xchk_ino_error_class to i32), i32 629, i32 768, i32 ptrtoint (ptr @___asan_gen_.347 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_ino_error to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.350 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_ino_preen to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.353 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_ino_warning to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.356 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xchk_fblock_error_class to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.359 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xchk_fblock_error_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xchk_fblock_error_class to i32), i32 743, i32 928, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_fblock_error to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_fblock_warning to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xchk_incomplete to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xchk_incomplete to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.377 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xchk_incomplete to i32), i32 608, i32 736, i32 ptrtoint (ptr @___asan_gen_.380 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_incomplete to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.383 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xchk_btree_op_error to i32), i32 240, i32 288, i32 ptrtoint (ptr @___asan_gen_.386 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xchk_btree_op_error to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.389 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xchk_btree_op_error to i32), i32 957, i32 1184, i32 ptrtoint (ptr @___asan_gen_.392 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_btree_op_error to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.395 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xchk_ifork_btree_op_error to i32), i32 288, i32 352, i32 ptrtoint (ptr @___asan_gen_.398 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.880 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xchk_ifork_btree_op_error to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.401 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.880 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xchk_ifork_btree_op_error to i32), i32 1064, i32 1344, i32 ptrtoint (ptr @___asan_gen_.404 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.880 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_ifork_btree_op_error to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.407 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.880 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xchk_btree_error to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.410 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.889 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xchk_btree_error to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.413 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.889 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xchk_btree_error to i32), i32 936, i32 1184, i32 ptrtoint (ptr @___asan_gen_.416 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.889 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_btree_error to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.419 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.889 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xchk_ifork_btree_error to i32), i32 264, i32 352, i32 ptrtoint (ptr @___asan_gen_.422 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xchk_ifork_btree_error to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.425 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xchk_ifork_btree_error to i32), i32 1043, i32 1312, i32 ptrtoint (ptr @___asan_gen_.428 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_ifork_btree_error to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.431 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xchk_sbtree_class to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.434 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.913 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xchk_sbtree_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.437 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.913 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xchk_sbtree_class to i32), i32 937, i32 1184, i32 ptrtoint (ptr @___asan_gen_.440 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.913 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_btree_rec to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.443 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_btree_key to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.446 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.448 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xchk_xref_error to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.449 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xchk_xref_error to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.452 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xchk_xref_error to i32), i32 634, i32 768, i32 ptrtoint (ptr @___asan_gen_.455 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_xref_error to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.458 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xchk_iallocbt_check_cluster to i32), i32 264, i32 352, i32 ptrtoint (ptr @___asan_gen_.461 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xchk_iallocbt_check_cluster to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.464 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xchk_iallocbt_check_cluster to i32), i32 365, i32 448, i32 ptrtoint (ptr @___asan_gen_.467 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_iallocbt_check_cluster to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.470 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xchk_fscounters_calc to i32), i32 216, i32 256, i32 ptrtoint (ptr @___asan_gen_.473 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xchk_fscounters_calc to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.476 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xchk_fscounters_calc to i32), i32 304, i32 384, i32 ptrtoint (ptr @___asan_gen_.479 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_fscounters_calc to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.482 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xchk_fscounters_within_range to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.485 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1000 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xchk_fscounters_within_range to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.488 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1000 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xchk_fscounters_within_range to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.491 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1000 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xchk_fscounters_within_range to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.494 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1000 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xrep_extent_class to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.497 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xrep_extent_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.500 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xrep_extent_class to i32), i32 167, i32 224, i32 ptrtoint (ptr @___asan_gen_.503 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xrep_dispose_btree_extent to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.506 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.508 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xrep_agfl_insert to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.509 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xrep_rmap_class to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.512 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1015 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xrep_rmap_class to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.515 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1015 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xrep_rmap_class to i32), i32 243, i32 288, i32 ptrtoint (ptr @___asan_gen_.518 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1015 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xrep_alloc_extent_fn to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.521 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.523 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xrep_ialloc_extent_fn to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.524 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.526 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xrep_rmap_extent_fn to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.527 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.529 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xrep_bmap_extent_fn to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.530 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xrep_refcount_extent_fn to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.533 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1030 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xrep_refcount_extent_fn to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.536 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1030 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xrep_refcount_extent_fn to i32), i32 206, i32 256, i32 ptrtoint (ptr @___asan_gen_.539 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1030 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xrep_refcount_extent_fn to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.542 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1030 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xrep_init_btblock to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.545 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1039 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xrep_init_btblock to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.548 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1039 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xrep_init_btblock to i32), i32 391, i32 512, i32 ptrtoint (ptr @___asan_gen_.551 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1039 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xrep_init_btblock to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.554 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1039 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xrep_findroot_block to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.557 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1045 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xrep_findroot_block to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.560 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1045 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xrep_findroot_block to i32), i32 187, i32 224, i32 ptrtoint (ptr @___asan_gen_.563 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1045 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xrep_findroot_block to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.566 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1045 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xrep_calc_ag_resblks to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.569 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1060 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xrep_calc_ag_resblks to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.572 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1060 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xrep_calc_ag_resblks to i32), i32 214, i32 256, i32 ptrtoint (ptr @___asan_gen_.575 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1060 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xrep_calc_ag_resblks to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.578 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1060 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xrep_calc_ag_resblks_btsize to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.581 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1075 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xrep_calc_ag_resblks_btsize to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.584 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1075 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xrep_calc_ag_resblks_btsize to i32), i32 224, i32 256, i32 ptrtoint (ptr @___asan_gen_.587 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1075 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xrep_calc_ag_resblks_btsize to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.590 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1075 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xrep_reset_counters to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.593 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xrep_reset_counters to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.596 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xrep_reset_counters to i32), i32 99, i32 160, i32 ptrtoint (ptr @___asan_gen_.599 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xrep_reset_counters to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.602 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_xrep_ialloc_insert to i32), i32 192, i32 224, i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1093 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_xrep_ialloc_insert to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1093 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_xrep_ialloc_insert to i32), i32 259, i32 352, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1093 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_xrep_ialloc_insert to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.614 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1093 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 81, i32 128, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_class.symbols to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_class.__flags to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.737 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_op_error.symbols to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.784 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 73, i32 128, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_file_op_error.symbols to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_file_op_error.symbols.92 to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.811 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 51, i32 96, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_block_error_class.symbols to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_ino_error_class.symbols to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_fblock_error_class.symbols to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_fblock_error_class.symbols.97 to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_incomplete.symbols to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 85, i32 128, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_btree_op_error.symbols to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_btree_op_error.symbols.104 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.868 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 104, i32 160, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.880 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_ifork_btree_op_error.symbols to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.880 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_ifork_btree_op_error.symbols.108 to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.880 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_ifork_btree_op_error.symbols.109 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.880 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.889 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_btree_error.symbols to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.889 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_btree_error.symbols.111 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.889 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 95, i32 128, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_ifork_btree_error.symbols to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_ifork_btree_error.symbols.113 to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_ifork_btree_error.symbols.114 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.901 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.913 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.913 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_sbtree_class.symbols to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.913 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_sbtree_class.symbols.117 to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.913 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xchk_xref_error.symbols to i32), i32 208, i32 256, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.919 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 137, i32 192, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.958 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 79, i32 128, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.988 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1000 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1000 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1000 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1000 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1009 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1015 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 85, i32 128, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1015 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1030 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1030 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1030 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1030 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.155 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1030 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.156 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1039 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.157 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1039 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_raw_output_xrep_init_btblock.symbols to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.1037 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1039 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.158 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1045 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.159 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1045 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.160 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1060 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.161 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1060 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.162 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1060 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.163 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1060 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.164 to i32), i32 62, i32 96, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1060 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.165 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1075 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.166 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1075 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.167 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1075 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.168 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1075 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.169 to i32), i32 63, i32 96, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1075 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.170 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1078 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.171 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1093 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.172 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1093 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.173 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1093 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.174 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1093 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.175 to i32), i32 87, i32 128, i32 ptrtoint (ptr @___asan_gen_.1091 to i32), i32 ptrtoint (ptr @___asan_gen_ to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.1093 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_start(ptr nocapture readnone %__data, ptr noundef %ip, ptr noundef %sm, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_start, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %ip, ptr noundef %sm, i32 noundef %error) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_done(ptr nocapture readnone %__data, ptr noundef %ip, ptr noundef %sm, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_done, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %ip, ptr noundef %sm, i32 noundef %error) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_deadlock_retry(ptr nocapture readnone %__data, ptr noundef %ip, ptr noundef %sm, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_deadlock_retry, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %ip, ptr noundef %sm, i32 noundef %error) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xrep_attempt(ptr nocapture readnone %__data, ptr noundef %ip, ptr noundef %sm, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xrep_attempt, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %ip, ptr noundef %sm, i32 noundef %error) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xrep_done(ptr nocapture readnone %__data, ptr noundef %ip, ptr noundef %sm, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xrep_done, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %ip, ptr noundef %sm, i32 noundef %error) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_op_error(ptr nocapture readnone %__data, ptr noundef %sc, i32 noundef %agno, i32 noundef %bno, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_op_error, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sc, i32 noundef %agno, i32 noundef %bno, i32 noundef %error, ptr noundef %ret_ip) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_file_op_error(ptr nocapture readnone %__data, ptr noundef %sc, i32 noundef %whichfork, i64 noundef %offset, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_file_op_error, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sc, i32 noundef %whichfork, i64 noundef %offset, i32 noundef %error, ptr noundef %ret_ip) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_fs_error(ptr nocapture readnone %__data, ptr noundef %sc, i64 noundef %daddr, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_fs_error, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sc, i64 noundef %daddr, ptr noundef %ret_ip) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_block_error(ptr nocapture readnone %__data, ptr noundef %sc, i64 noundef %daddr, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_block_error, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sc, i64 noundef %daddr, ptr noundef %ret_ip) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_block_preen(ptr nocapture readnone %__data, ptr noundef %sc, i64 noundef %daddr, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_block_preen, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sc, i64 noundef %daddr, ptr noundef %ret_ip) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_ino_error(ptr nocapture readnone %__data, ptr noundef %sc, i64 noundef %ino, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_ino_error, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sc, i64 noundef %ino, ptr noundef %ret_ip) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_ino_preen(ptr nocapture readnone %__data, ptr noundef %sc, i64 noundef %ino, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_ino_preen, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sc, i64 noundef %ino, ptr noundef %ret_ip) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_ino_warning(ptr nocapture readnone %__data, ptr noundef %sc, i64 noundef %ino, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_ino_warning, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sc, i64 noundef %ino, ptr noundef %ret_ip) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_fblock_error(ptr nocapture readnone %__data, ptr noundef %sc, i32 noundef %whichfork, i64 noundef %offset, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_fblock_error, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sc, i32 noundef %whichfork, i64 noundef %offset, ptr noundef %ret_ip) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_fblock_warning(ptr nocapture readnone %__data, ptr noundef %sc, i32 noundef %whichfork, i64 noundef %offset, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_fblock_warning, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sc, i32 noundef %whichfork, i64 noundef %offset, ptr noundef %ret_ip) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_incomplete(ptr nocapture readnone %__data, ptr noundef %sc, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_incomplete, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sc, ptr noundef %ret_ip) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_btree_op_error(ptr nocapture readnone %__data, ptr noundef %sc, ptr noundef %cur, i32 noundef %level, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_btree_op_error, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sc, ptr noundef %cur, i32 noundef %level, i32 noundef %error, ptr noundef %ret_ip) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_ifork_btree_op_error(ptr nocapture readnone %__data, ptr noundef %sc, ptr noundef %cur, i32 noundef %level, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_ifork_btree_op_error, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sc, ptr noundef %cur, i32 noundef %level, i32 noundef %error, ptr noundef %ret_ip) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_btree_error(ptr nocapture readnone %__data, ptr noundef %sc, ptr noundef %cur, i32 noundef %level, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_btree_error, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sc, ptr noundef %cur, i32 noundef %level, ptr noundef %ret_ip) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_ifork_btree_error(ptr nocapture readnone %__data, ptr noundef %sc, ptr noundef %cur, i32 noundef %level, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_ifork_btree_error, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sc, ptr noundef %cur, i32 noundef %level, ptr noundef %ret_ip) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_btree_rec(ptr nocapture readnone %__data, ptr noundef %sc, ptr noundef %cur, i32 noundef %level) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_btree_rec, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sc, ptr noundef %cur, i32 noundef %level) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_btree_key(ptr nocapture readnone %__data, ptr noundef %sc, ptr noundef %cur, i32 noundef %level) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_btree_key, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sc, ptr noundef %cur, i32 noundef %level) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_xref_error(ptr nocapture readnone %__data, ptr noundef %sc, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_xref_error, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %sc, i32 noundef %error, ptr noundef %ret_ip) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_iallocbt_check_cluster(ptr nocapture readnone %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %startino, i64 noundef %map_daddr, i16 noundef zeroext %map_len, i32 noundef %chunk_ino, i32 noundef %nr_inodes, i16 noundef zeroext %cluster_mask, i16 noundef zeroext %holemask, i32 noundef %cluster_ino) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_iallocbt_check_cluster, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mp, i32 noundef %agno, i32 noundef %startino, i64 noundef %map_daddr, i16 noundef zeroext %map_len, i32 noundef %chunk_ino, i32 noundef %nr_inodes, i16 noundef zeroext %cluster_mask, i16 noundef zeroext %holemask, i32 noundef %cluster_ino) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_fscounters_calc(ptr nocapture readnone %__data, ptr noundef %mp, i64 noundef %icount, i64 noundef %ifree, i64 noundef %fdblocks, i64 noundef %delalloc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_fscounters_calc, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mp, i64 noundef %icount, i64 noundef %ifree, i64 noundef %fdblocks, i64 noundef %delalloc) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xchk_fscounters_within_range(ptr nocapture readnone %__data, ptr noundef %mp, i64 noundef %expected, i64 noundef %curr_value, i64 noundef %old_value) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xchk_fscounters_within_range, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mp, i64 noundef %expected, i64 noundef %curr_value, i64 noundef %old_value) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xrep_dispose_btree_extent(ptr nocapture readnone %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xrep_dispose_btree_extent, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %len) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xrep_agfl_insert(ptr nocapture readnone %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xrep_agfl_insert, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %len) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xrep_alloc_extent_fn(ptr nocapture readnone %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %len, i64 noundef %owner, i64 noundef %offset, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xrep_alloc_extent_fn, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %len, i64 noundef %owner, i64 noundef %offset, i32 noundef %flags) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xrep_ialloc_extent_fn(ptr nocapture readnone %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %len, i64 noundef %owner, i64 noundef %offset, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xrep_ialloc_extent_fn, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %len, i64 noundef %owner, i64 noundef %offset, i32 noundef %flags) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xrep_rmap_extent_fn(ptr nocapture readnone %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %len, i64 noundef %owner, i64 noundef %offset, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xrep_rmap_extent_fn, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %len, i64 noundef %owner, i64 noundef %offset, i32 noundef %flags) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xrep_bmap_extent_fn(ptr nocapture readnone %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %len, i64 noundef %owner, i64 noundef %offset, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xrep_bmap_extent_fn, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %len, i64 noundef %owner, i64 noundef %offset, i32 noundef %flags) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xrep_refcount_extent_fn(ptr nocapture readnone %__data, ptr noundef %mp, i32 noundef %agno, ptr noundef %irec) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xrep_refcount_extent_fn, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mp, i32 noundef %agno, ptr noundef %irec) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xrep_init_btblock(ptr nocapture readnone %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %btnum) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xrep_init_btblock, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %btnum) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xrep_findroot_block(ptr nocapture readnone %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %magic, i16 noundef zeroext %level) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xrep_findroot_block, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %magic, i16 noundef zeroext %level) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xrep_calc_ag_resblks(ptr nocapture readnone %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %icount, i32 noundef %aglen, i32 noundef %freelen, i32 noundef %usedlen) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xrep_calc_ag_resblks, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mp, i32 noundef %agno, i32 noundef %icount, i32 noundef %aglen, i32 noundef %freelen, i32 noundef %usedlen) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xrep_calc_ag_resblks_btsize(ptr nocapture readnone %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %bnobt_sz, i32 noundef %inobt_sz, i32 noundef %rmapbt_sz, i32 noundef %refcbt_sz) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xrep_calc_ag_resblks_btsize, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mp, i32 noundef %agno, i32 noundef %bnobt_sz, i32 noundef %inobt_sz, i32 noundef %rmapbt_sz, i32 noundef %refcbt_sz) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xrep_reset_counters(ptr nocapture readnone %__data, ptr noundef %mp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xrep_reset_counters, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mp) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_xrep_ialloc_insert(ptr nocapture readnone %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %startino, i16 noundef zeroext %holemask, i8 noundef zeroext %count, i8 noundef zeroext %freecount, i64 noundef %freemask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_xrep_ialloc_insert, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %mp, i32 noundef %agno, i32 noundef %startino, i16 noundef zeroext %holemask, i8 noundef zeroext %count, i8 noundef zeroext %freecount, i64 noundef %freemask) #5
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xchk_class(ptr noundef %__data, ptr nocapture noundef readonly %ip, ptr nocapture noundef readonly %sm, i32 noundef %error) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 56) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %3 = ptrtoint ptr %ip to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ip, align 8
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %dev, align 8
  %i_ino = getelementptr inbounds %struct.xfs_inode, ptr %ip, i32 0, i32 4
  %10 = ptrtoint ptr %i_ino to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %call3, i32 0, i32 2
  %12 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %11, ptr %ino, align 8
  %13 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %sm, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %call3, i32 0, i32 3
  %15 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %type, align 8
  %sm_agno = getelementptr inbounds %struct.xfs_scrub_metadata, ptr %sm, i32 0, i32 4
  %16 = ptrtoint ptr %sm_agno to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %sm_agno, align 4
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %call3, i32 0, i32 4
  %18 = ptrtoint ptr %agno to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %agno, align 4
  %sm_ino = getelementptr inbounds %struct.xfs_scrub_metadata, ptr %sm, i32 0, i32 2
  %19 = ptrtoint ptr %sm_ino to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %sm_ino, align 8
  %inum = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %call3, i32 0, i32 5
  %21 = ptrtoint ptr %inum to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %inum, align 8
  %sm_gen = getelementptr inbounds %struct.xfs_scrub_metadata, ptr %sm, i32 0, i32 3
  %22 = ptrtoint ptr %sm_gen to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %sm_gen, align 8
  %gen = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %call3, i32 0, i32 6
  %24 = ptrtoint ptr %gen to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %gen, align 8
  %sm_flags = getelementptr inbounds %struct.xfs_scrub_metadata, ptr %sm, i32 0, i32 1
  %25 = ptrtoint ptr %sm_flags to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %sm_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %call3, i32 0, i32 7
  %27 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %26, ptr %flags, align 4
  %error6 = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %call3, i32 0, i32 8
  %28 = ptrtoint ptr %error6 to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %error, ptr %error6, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xchk_class(ptr noundef %__data, ptr nocapture noundef readonly %ip, ptr nocapture noundef readonly %sm, i32 noundef %error) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %ip to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ip, align 8
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %dev, align 8
  %i_ino = getelementptr inbounds %struct.xfs_inode, ptr %ip, i32 0, i32 4
  %34 = ptrtoint ptr %i_ino to i32
  call void @__asan_load8_noabort(i32 %34)
  %35 = load i64, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %call13, i32 0, i32 2
  %36 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %35, ptr %ino, align 8
  %37 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %sm, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %call13, i32 0, i32 3
  %39 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %type, align 8
  %sm_agno = getelementptr inbounds %struct.xfs_scrub_metadata, ptr %sm, i32 0, i32 4
  %40 = ptrtoint ptr %sm_agno to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %sm_agno, align 4
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %call13, i32 0, i32 4
  %42 = ptrtoint ptr %agno to i32
  call void @__asan_store4_noabort(i32 %42)
  store i32 %41, ptr %agno, align 4
  %sm_ino = getelementptr inbounds %struct.xfs_scrub_metadata, ptr %sm, i32 0, i32 2
  %43 = ptrtoint ptr %sm_ino to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %sm_ino, align 8
  %inum = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %call13, i32 0, i32 5
  %45 = ptrtoint ptr %inum to i32
  call void @__asan_store8_noabort(i32 %45)
  store i64 %44, ptr %inum, align 8
  %sm_gen = getelementptr inbounds %struct.xfs_scrub_metadata, ptr %sm, i32 0, i32 3
  %46 = ptrtoint ptr %sm_gen to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %sm_gen, align 8
  %gen = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %call13, i32 0, i32 6
  %48 = ptrtoint ptr %gen to i32
  call void @__asan_store4_noabort(i32 %48)
  store i32 %47, ptr %gen, align 8
  %sm_flags = getelementptr inbounds %struct.xfs_scrub_metadata, ptr %sm, i32 0, i32 1
  %49 = ptrtoint ptr %sm_flags to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %sm_flags, align 4
  %flags = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %call13, i32 0, i32 7
  %51 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %51)
  store i32 %50, ptr %flags, align 4
  %error17 = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %call13, i32 0, i32 8
  %52 = ptrtoint ptr %error17 to i32
  call void @__asan_store4_noabort(i32 %52)
  store i32 %error, ptr %error17, align 8
  %53 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %rctx, align 4
  %55 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 60, i32 noundef %54, ptr noundef %__data, i64 noundef 1, ptr noundef %56, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xchk_op_error(ptr noundef %__data, ptr nocapture noundef readonly %sc, i32 noundef %agno, i32 noundef %bno, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %3 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_op_error, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %dev, align 4
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %10 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sm, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_op_error, ptr %call3, i32 0, i32 2
  %14 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %type, align 4
  %agno6 = getelementptr inbounds %struct.trace_event_raw_xchk_op_error, ptr %call3, i32 0, i32 3
  %15 = ptrtoint ptr %agno6 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %agno, ptr %agno6, align 4
  %bno7 = getelementptr inbounds %struct.trace_event_raw_xchk_op_error, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %bno7 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %bno, ptr %bno7, align 4
  %error8 = getelementptr inbounds %struct.trace_event_raw_xchk_op_error, ptr %call3, i32 0, i32 5
  %17 = ptrtoint ptr %error8 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %error, ptr %error8, align 4
  %ret_ip9 = getelementptr inbounds %struct.trace_event_raw_xchk_op_error, ptr %call3, i32 0, i32 6
  %18 = ptrtoint ptr %ret_ip9 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %ret_ip, ptr %ret_ip9, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xchk_op_error(ptr noundef %__data, ptr nocapture noundef readonly %sc, i32 noundef %agno, i32 noundef %bno, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_op_error, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %dev, align 4
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %34 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sm, align 4
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %35, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_op_error, ptr %call13, i32 0, i32 2
  %38 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %type, align 4
  %agno17 = getelementptr inbounds %struct.trace_event_raw_xchk_op_error, ptr %call13, i32 0, i32 3
  %39 = ptrtoint ptr %agno17 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %agno, ptr %agno17, align 4
  %bno18 = getelementptr inbounds %struct.trace_event_raw_xchk_op_error, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %bno18 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %bno, ptr %bno18, align 4
  %error19 = getelementptr inbounds %struct.trace_event_raw_xchk_op_error, ptr %call13, i32 0, i32 5
  %41 = ptrtoint ptr %error19 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %error, ptr %error19, align 4
  %ret_ip20 = getelementptr inbounds %struct.trace_event_raw_xchk_op_error, ptr %call13, i32 0, i32 6
  %42 = ptrtoint ptr %ret_ip20 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %ret_ip, ptr %ret_ip20, align 4
  %43 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %rctx, align 4
  %45 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %44, ptr noundef %__data, i64 noundef 1, ptr noundef %46, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xchk_file_op_error(ptr noundef %__data, ptr nocapture noundef readonly %sc, i32 noundef %whichfork, i64 noundef %offset, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %ip = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 5
  %3 = ptrtoint ptr %ip to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ip, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 8
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %call3, i32 0, i32 1
  %11 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %dev, align 8
  %12 = load ptr, ptr %ip, align 4
  %i_ino = getelementptr inbounds %struct.xfs_inode, ptr %12, i32 0, i32 4
  %13 = ptrtoint ptr %i_ino to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %call3, i32 0, i32 2
  %15 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %14, ptr %ino, align 8
  %whichfork7 = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %call3, i32 0, i32 3
  %16 = ptrtoint ptr %whichfork7 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %whichfork, ptr %whichfork7, align 8
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %17 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sm, align 4
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %18, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %call3, i32 0, i32 4
  %21 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %type, align 4
  %offset8 = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %call3, i32 0, i32 5
  %22 = ptrtoint ptr %offset8 to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %offset, ptr %offset8, align 8
  %error9 = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %call3, i32 0, i32 6
  %23 = ptrtoint ptr %error9 to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %error, ptr %error9, align 8
  %ret_ip10 = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %call3, i32 0, i32 7
  %24 = ptrtoint ptr %ret_ip10 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %ret_ip, ptr %ret_ip10, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xchk_file_op_error(ptr noundef %__data, ptr nocapture noundef readonly %sc, i32 noundef %whichfork, i64 noundef %offset, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %ip = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 5
  %27 = ptrtoint ptr %ip to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ip, align 4
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %28, align 8
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %call13, i32 0, i32 1
  %35 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %dev, align 8
  %36 = load ptr, ptr %ip, align 4
  %i_ino = getelementptr inbounds %struct.xfs_inode, ptr %36, i32 0, i32 4
  %37 = ptrtoint ptr %i_ino to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %call13, i32 0, i32 2
  %39 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %38, ptr %ino, align 8
  %whichfork18 = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %call13, i32 0, i32 3
  %40 = ptrtoint ptr %whichfork18 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %whichfork, ptr %whichfork18, align 8
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %41 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %sm, align 4
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %42, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %call13, i32 0, i32 4
  %45 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %type, align 4
  %offset19 = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %call13, i32 0, i32 5
  %46 = ptrtoint ptr %offset19 to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %offset, ptr %offset19, align 8
  %error20 = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %call13, i32 0, i32 6
  %47 = ptrtoint ptr %error20 to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 %error, ptr %error20, align 8
  %ret_ip21 = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %call13, i32 0, i32 7
  %48 = ptrtoint ptr %ret_ip21 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %ret_ip, ptr %ret_ip21, align 4
  %49 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %rctx, align 4
  %51 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %50, ptr noundef %__data, i64 noundef 1, ptr noundef %52, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xchk_block_error_class(ptr noundef %__data, ptr nocapture noundef readonly %sc, i64 noundef %daddr, ptr noundef %ret_ip) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %3 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_block_error_class, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %dev, align 4
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %10 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sm, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_block_error_class, ptr %call3, i32 0, i32 2
  %14 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %type, align 4
  %15 = load ptr, ptr %sc, align 4
  %m_blkbb_log.i = getelementptr inbounds %struct.xfs_mount, ptr %15, i32 0, i32 28
  %16 = ptrtoint ptr %m_blkbb_log.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %m_blkbb_log.i, align 1
  %sh_prom.i = zext i8 %17 to i64
  %shr.i = ashr i64 %daddr, %sh_prom.i
  %sb_agblocks.i = getelementptr inbounds %struct.xfs_sb, ptr %15, i32 0, i32 11
  %18 = ptrtoint ptr %sb_agblocks.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %sb_agblocks.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %shr.i)
  %cmp168.i = icmp ult i64 %shr.i, 4294967296
  br i1 %cmp168.i, label %if.then172.i, label %if.else178.i, !prof !718

if.then172.i:                                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #7
  %conv173.i = trunc i64 %shr.i to i32
  %div176.i = udiv i32 %conv173.i, %19
  br label %xfs_daddr_to_agno.exit

if.else178.i:                                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #7
  %20 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %19, i64 %shr.i) #8, !srcloc !721
  %asmresult1.i.i = extractvalue { i64, i64 } %20, 1
  %extract.t291.i = trunc i64 %asmresult1.i.i to i32
  br label %xfs_daddr_to_agno.exit

xfs_daddr_to_agno.exit:                           ; preds = %if.else178.i, %if.then172.i
  %ld.0.off0.i = phi i32 [ %div176.i, %if.then172.i ], [ %extract.t291.i, %if.else178.i ]
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_block_error_class, ptr %call3, i32 0, i32 3
  %21 = ptrtoint ptr %agno to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %ld.0.off0.i, ptr %agno, align 4
  %22 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %sc, align 4
  %m_blkbb_log.i29 = getelementptr inbounds %struct.xfs_mount, ptr %23, i32 0, i32 28
  %24 = ptrtoint ptr %m_blkbb_log.i29 to i32
  call void @__asan_load1_noabort(i32 %24)
  %25 = load i8, ptr %m_blkbb_log.i29, align 1
  %sh_prom.i30 = zext i8 %25 to i64
  %shr.i31 = ashr i64 %daddr, %sh_prom.i30
  %sb_agblocks.i32 = getelementptr inbounds %struct.xfs_sb, ptr %23, i32 0, i32 11
  %26 = ptrtoint ptr %sb_agblocks.i32 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %sb_agblocks.i32, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %shr.i31)
  %cmp168.i127 = icmp ult i64 %shr.i31, 4294967296
  br i1 %cmp168.i127, label %if.then172.i130, label %if.else178.i131, !prof !718

if.then172.i130:                                  ; preds = %xfs_daddr_to_agno.exit
  call void @__sanitizer_cov_trace_pc() #7
  %conv173.i129 = trunc i64 %shr.i31 to i32
  %rem174.i = urem i32 %conv173.i129, %27
  br label %xfs_daddr_to_agbno.exit

if.else178.i131:                                  ; preds = %xfs_daddr_to_agno.exit
  call void @__sanitizer_cov_trace_pc() #7
  %28 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %27, i64 %shr.i31) #8, !srcloc !721
  %asmresult.i266.i = extractvalue { i64, i64 } %28, 0
  %shr.i.i = lshr i64 %asmresult.i266.i, 32
  %conv.i.i = trunc i64 %shr.i.i to i32
  br label %xfs_daddr_to_agbno.exit

xfs_daddr_to_agbno.exit:                          ; preds = %if.else178.i131, %if.then172.i130
  %__rem.0.i = phi i32 [ %rem174.i, %if.then172.i130 ], [ %conv.i.i, %if.else178.i131 ]
  %agbno = getelementptr inbounds %struct.trace_event_raw_xchk_block_error_class, ptr %call3, i32 0, i32 4
  %29 = ptrtoint ptr %agbno to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %__rem.0.i, ptr %agbno, align 4
  %ret_ip10 = getelementptr inbounds %struct.trace_event_raw_xchk_block_error_class, ptr %call3, i32 0, i32 5
  %30 = ptrtoint ptr %ret_ip10 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %ret_ip, ptr %ret_ip10, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %xfs_daddr_to_agbno.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xchk_block_error_class(ptr noundef %__data, ptr nocapture noundef readonly %sc, i64 noundef %daddr, ptr noundef %ret_ip) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_block_error_class, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %dev, align 4
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %34 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sm, align 4
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %35, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_block_error_class, ptr %call13, i32 0, i32 2
  %38 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %type, align 4
  %39 = load ptr, ptr %sc, align 4
  %m_blkbb_log.i = getelementptr inbounds %struct.xfs_mount, ptr %39, i32 0, i32 28
  %40 = ptrtoint ptr %m_blkbb_log.i to i32
  call void @__asan_load1_noabort(i32 %40)
  %41 = load i8, ptr %m_blkbb_log.i, align 1
  %sh_prom.i = zext i8 %41 to i64
  %shr.i = ashr i64 %daddr, %sh_prom.i
  %sb_agblocks.i = getelementptr inbounds %struct.xfs_sb, ptr %39, i32 0, i32 11
  %42 = ptrtoint ptr %sb_agblocks.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %sb_agblocks.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %shr.i)
  %cmp168.i = icmp ult i64 %shr.i, 4294967296
  br i1 %cmp168.i, label %if.then172.i, label %if.else178.i, !prof !718

if.then172.i:                                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #7
  %conv173.i = trunc i64 %shr.i to i32
  %div176.i = udiv i32 %conv173.i, %43
  br label %xfs_daddr_to_agno.exit

if.else178.i:                                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #7
  %44 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %43, i64 %shr.i) #8, !srcloc !721
  %asmresult1.i.i = extractvalue { i64, i64 } %44, 1
  %extract.t291.i = trunc i64 %asmresult1.i.i to i32
  br label %xfs_daddr_to_agno.exit

xfs_daddr_to_agno.exit:                           ; preds = %if.else178.i, %if.then172.i
  %ld.0.off0.i = phi i32 [ %div176.i, %if.then172.i ], [ %extract.t291.i, %if.else178.i ]
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_block_error_class, ptr %call13, i32 0, i32 3
  %45 = ptrtoint ptr %agno to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %ld.0.off0.i, ptr %agno, align 4
  %46 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %sc, align 4
  %m_blkbb_log.i52 = getelementptr inbounds %struct.xfs_mount, ptr %47, i32 0, i32 28
  %48 = ptrtoint ptr %m_blkbb_log.i52 to i32
  call void @__asan_load1_noabort(i32 %48)
  %49 = load i8, ptr %m_blkbb_log.i52, align 1
  %sh_prom.i53 = zext i8 %49 to i64
  %shr.i54 = ashr i64 %daddr, %sh_prom.i53
  %sb_agblocks.i55 = getelementptr inbounds %struct.xfs_sb, ptr %47, i32 0, i32 11
  %50 = ptrtoint ptr %sb_agblocks.i55 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %sb_agblocks.i55, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %shr.i54)
  %cmp168.i150 = icmp ult i64 %shr.i54, 4294967296
  br i1 %cmp168.i150, label %if.then172.i153, label %if.else178.i154, !prof !718

if.then172.i153:                                  ; preds = %xfs_daddr_to_agno.exit
  call void @__sanitizer_cov_trace_pc() #7
  %conv173.i152 = trunc i64 %shr.i54 to i32
  %rem174.i = urem i32 %conv173.i152, %51
  br label %xfs_daddr_to_agbno.exit

if.else178.i154:                                  ; preds = %xfs_daddr_to_agno.exit
  call void @__sanitizer_cov_trace_pc() #7
  %52 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %51, i64 %shr.i54) #8, !srcloc !721
  %asmresult.i266.i = extractvalue { i64, i64 } %52, 0
  %shr.i.i = lshr i64 %asmresult.i266.i, 32
  %conv.i.i = trunc i64 %shr.i.i to i32
  br label %xfs_daddr_to_agbno.exit

xfs_daddr_to_agbno.exit:                          ; preds = %if.else178.i154, %if.then172.i153
  %__rem.0.i = phi i32 [ %rem174.i, %if.then172.i153 ], [ %conv.i.i, %if.else178.i154 ]
  %agbno = getelementptr inbounds %struct.trace_event_raw_xchk_block_error_class, ptr %call13, i32 0, i32 4
  %53 = ptrtoint ptr %agbno to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %__rem.0.i, ptr %agbno, align 4
  %ret_ip21 = getelementptr inbounds %struct.trace_event_raw_xchk_block_error_class, ptr %call13, i32 0, i32 5
  %54 = ptrtoint ptr %ret_ip21 to i32
  call void @__asan_store4_noabort(i32 %54)
  store ptr %ret_ip, ptr %ret_ip21, align 4
  %55 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %rctx, align 4
  %57 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %56, ptr noundef %__data, i64 noundef 1, ptr noundef %58, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %xfs_daddr_to_agbno.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xchk_ino_error_class(ptr noundef %__data, ptr nocapture noundef readonly %sc, i64 noundef %ino, ptr noundef %ret_ip) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %3 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_ino_error_class, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %dev, align 8
  %ino6 = getelementptr inbounds %struct.trace_event_raw_xchk_ino_error_class, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %ino6 to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %ino, ptr %ino6, align 8
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %11 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %sm, align 4
  %13 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %12, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_ino_error_class, ptr %call3, i32 0, i32 3
  %15 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %type, align 8
  %ret_ip7 = getelementptr inbounds %struct.trace_event_raw_xchk_ino_error_class, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %ret_ip7 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %ret_ip, ptr %ret_ip7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xchk_ino_error_class(ptr noundef %__data, ptr nocapture noundef readonly %sc, i64 noundef %ino, ptr noundef %ret_ip) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_ino_error_class, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %dev, align 8
  %ino17 = getelementptr inbounds %struct.trace_event_raw_xchk_ino_error_class, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %ino17 to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 %ino, ptr %ino17, align 8
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %35 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %sm, align 4
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %36, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_ino_error_class, ptr %call13, i32 0, i32 3
  %39 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %38, ptr %type, align 8
  %ret_ip18 = getelementptr inbounds %struct.trace_event_raw_xchk_ino_error_class, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %ret_ip18 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %ret_ip, ptr %ret_ip18, align 4
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xchk_fblock_error_class(ptr noundef %__data, ptr nocapture noundef readonly %sc, i32 noundef %whichfork, i64 noundef %offset, ptr noundef %ret_ip) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %ip = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 5
  %3 = ptrtoint ptr %ip to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %ip, align 4
  %5 = ptrtoint ptr %4 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %4, align 8
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_fblock_error_class, ptr %call3, i32 0, i32 1
  %11 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %dev, align 8
  %12 = load ptr, ptr %ip, align 4
  %i_ino = getelementptr inbounds %struct.xfs_inode, ptr %12, i32 0, i32 4
  %13 = ptrtoint ptr %i_ino to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_xchk_fblock_error_class, ptr %call3, i32 0, i32 2
  %15 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %14, ptr %ino, align 8
  %whichfork7 = getelementptr inbounds %struct.trace_event_raw_xchk_fblock_error_class, ptr %call3, i32 0, i32 3
  %16 = ptrtoint ptr %whichfork7 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %whichfork, ptr %whichfork7, align 8
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %17 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %sm, align 4
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %18, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_fblock_error_class, ptr %call3, i32 0, i32 4
  %21 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %20, ptr %type, align 4
  %offset8 = getelementptr inbounds %struct.trace_event_raw_xchk_fblock_error_class, ptr %call3, i32 0, i32 5
  %22 = ptrtoint ptr %offset8 to i32
  call void @__asan_store8_noabort(i32 %22)
  store i64 %offset, ptr %offset8, align 8
  %ret_ip9 = getelementptr inbounds %struct.trace_event_raw_xchk_fblock_error_class, ptr %call3, i32 0, i32 6
  %23 = ptrtoint ptr %ret_ip9 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %ret_ip, ptr %ret_ip9, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xchk_fblock_error_class(ptr noundef %__data, ptr nocapture noundef readonly %sc, i32 noundef %whichfork, i64 noundef %offset, ptr noundef %ret_ip) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %ip = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 5
  %27 = ptrtoint ptr %ip to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ip, align 4
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %28, align 8
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_fblock_error_class, ptr %call13, i32 0, i32 1
  %35 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %dev, align 8
  %36 = load ptr, ptr %ip, align 4
  %i_ino = getelementptr inbounds %struct.xfs_inode, ptr %36, i32 0, i32 4
  %37 = ptrtoint ptr %i_ino to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_xchk_fblock_error_class, ptr %call13, i32 0, i32 2
  %39 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %38, ptr %ino, align 8
  %whichfork18 = getelementptr inbounds %struct.trace_event_raw_xchk_fblock_error_class, ptr %call13, i32 0, i32 3
  %40 = ptrtoint ptr %whichfork18 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %whichfork, ptr %whichfork18, align 8
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %41 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %sm, align 4
  %43 = ptrtoint ptr %42 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %42, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_fblock_error_class, ptr %call13, i32 0, i32 4
  %45 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %type, align 4
  %offset19 = getelementptr inbounds %struct.trace_event_raw_xchk_fblock_error_class, ptr %call13, i32 0, i32 5
  %46 = ptrtoint ptr %offset19 to i32
  call void @__asan_store8_noabort(i32 %46)
  store i64 %offset, ptr %offset19, align 8
  %ret_ip20 = getelementptr inbounds %struct.trace_event_raw_xchk_fblock_error_class, ptr %call13, i32 0, i32 6
  %47 = ptrtoint ptr %ret_ip20 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %ret_ip, ptr %ret_ip20, align 8
  %48 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %rctx, align 4
  %50 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %49, ptr noundef %__data, i64 noundef 1, ptr noundef %51, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xchk_incomplete(ptr noundef %__data, ptr nocapture noundef readonly %sc, ptr noundef %ret_ip) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 20) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %3 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_incomplete, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %dev, align 4
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %10 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sm, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_incomplete, ptr %call3, i32 0, i32 2
  %14 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %type, align 4
  %ret_ip6 = getelementptr inbounds %struct.trace_event_raw_xchk_incomplete, ptr %call3, i32 0, i32 3
  %15 = ptrtoint ptr %ret_ip6 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %ret_ip, ptr %ret_ip6, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xchk_incomplete(ptr noundef %__data, ptr nocapture noundef readonly %sc, ptr noundef %ret_ip) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 20, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_incomplete, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %dev, align 4
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %34 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sm, align 4
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %35, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_incomplete, ptr %call13, i32 0, i32 2
  %38 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %type, align 4
  %ret_ip17 = getelementptr inbounds %struct.trace_event_raw_xchk_incomplete, ptr %call13, i32 0, i32 3
  %39 = ptrtoint ptr %ret_ip17 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %ret_ip, ptr %ret_ip17, align 4
  %40 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %rctx, align 4
  %42 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 20, i32 noundef %41, ptr noundef %__data, i64 noundef 1, ptr noundef %43, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xchk_btree_op_error(ptr noundef %__data, ptr nocapture noundef readonly %sc, ptr nocapture noundef readonly %cur, i32 noundef %level, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 44) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %bc_nlevels.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 7
  %3 = ptrtoint ptr %bc_nlevels.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %bc_nlevels.i, align 8
  %conv.i = zext i8 %4 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %level)
  %cmp.i = icmp sgt i32 %conv.i, %level
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end5.if.end.i48_crit_edge

if.end5.if.end.i48_crit_edge:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i48

land.lhs.true.i:                                  ; preds = %if.end5
  %arrayidx.i = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i, align 8
  %tobool.not.i47 = icmp eq ptr %6, null
  br i1 %tobool.not.i47, label %land.lhs.true.i.if.end.i48_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i48_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i48

if.then.i:                                        ; preds = %land.lhs.true.i
  %bc_mp.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %7 = ptrtoint ptr %bc_mp.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %bc_mp.i, align 4
  %b_maps.i.i = getelementptr inbounds %struct.xfs_buf, ptr %6, i32 0, i32 24
  %9 = ptrtoint ptr %b_maps.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %b_maps.i.i, align 8
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %10, align 8
  %m_blkbb_log.i.i = getelementptr inbounds %struct.xfs_mount, ptr %8, i32 0, i32 28
  %13 = ptrtoint ptr %m_blkbb_log.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %m_blkbb_log.i.i, align 1
  %sh_prom.i.i = zext i8 %14 to i64
  %shr.i.i = ashr i64 %12, %sh_prom.i.i
  %sb_agblocks.i.i = getelementptr inbounds %struct.xfs_sb, ptr %8, i32 0, i32 11
  %15 = ptrtoint ptr %sb_agblocks.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %sb_agblocks.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %shr.i.i)
  %cmp168.i.i = icmp ult i64 %shr.i.i, 4294967296
  br i1 %cmp168.i.i, label %if.then172.i172.i, label %if.else178.i173.i, !prof !718

if.then172.i172.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %conv173.i.i = trunc i64 %shr.i.i to i32
  %conv173.i.i.frozen = freeze i32 %conv173.i.i
  %.frozen = freeze i32 %16
  %div176.i.i = udiv i32 %conv173.i.i.frozen, %.frozen
  %conv6175182.i = zext i32 %div176.i.i to i64
  %sb_agblklog176183.i = getelementptr inbounds %struct.xfs_sb, ptr %8, i32 0, i32 24
  %17 = ptrtoint ptr %sb_agblklog176183.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %sb_agblklog176183.i, align 4
  %sh_prom177184.i = zext i8 %18 to i64
  %shl178185.i = shl i64 %conv6175182.i, %sh_prom177184.i
  %19 = mul i32 %div176.i.i, %.frozen
  %rem174.i.i.decomposed = sub i32 %conv173.i.i.frozen, %19
  br label %xfs_daddr_to_agbno.exit.i

if.else178.i173.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %20 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %16, i64 %shr.i.i) #8
  %asmresult1.i.i.i = extractvalue { i64, i64 } %20, 1
  %conv6175.i = and i64 %asmresult1.i.i.i, 4294967295
  %sb_agblklog176.i = getelementptr inbounds %struct.xfs_sb, ptr %8, i32 0, i32 24
  %21 = ptrtoint ptr %sb_agblklog176.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %sb_agblklog176.i, align 4
  %sh_prom177.i = zext i8 %22 to i64
  %shl178.i = shl i64 %conv6175.i, %sh_prom177.i
  %asmresult.i266.i.i = extractvalue { i64, i64 } %20, 0
  %shr.i.i.i = lshr i64 %asmresult.i266.i.i, 32
  %conv.i.i.i = trunc i64 %shr.i.i.i to i32
  br label %xfs_daddr_to_agbno.exit.i

xfs_daddr_to_agbno.exit.i:                        ; preds = %if.else178.i173.i, %if.then172.i172.i
  %shl179.i = phi i64 [ %shl178185.i, %if.then172.i172.i ], [ %shl178.i, %if.else178.i173.i ]
  %__rem.0.i.i = phi i32 [ %rem174.i.i.decomposed, %if.then172.i172.i ], [ %conv.i.i.i, %if.else178.i173.i ]
  %conv15.i = zext i32 %__rem.0.i.i to i64
  %or.i = or i64 %shl179.i, %conv15.i
  br label %xchk_btree_cur_fsbno.exit

if.end.i48:                                       ; preds = %land.lhs.true.i.if.end.i48_crit_edge, %if.end5.if.end.i48_crit_edge
  %sub.i = add nsw i32 %conv.i, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %level)
  %cmp18.i = icmp eq i32 %sub.i, %level
  br i1 %cmp18.i, label %land.lhs.true20.i, label %if.end.i48.xchk_btree_cur_fsbno.exit_crit_edge

if.end.i48.xchk_btree_cur_fsbno.exit_crit_edge:   ; preds = %if.end.i48
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

land.lhs.true20.i:                                ; preds = %if.end.i48
  %bc_flags.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 4
  %23 = ptrtoint ptr %bc_flags.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %bc_flags.i, align 8
  %and.i49 = and i32 %24, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i49)
  %tobool21.not.i = icmp eq i32 %and.i49, 0
  br i1 %tobool21.not.i, label %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, label %if.then22.i

land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge: ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

if.then22.i:                                      ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  %25 = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 10
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %25, align 8
  %i_ino.i = getelementptr inbounds %struct.xfs_inode, ptr %27, i32 0, i32 4
  %28 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %i_ino.i, align 8
  %bc_mp23.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %30 = ptrtoint ptr %bc_mp23.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %bc_mp23.i, align 4
  %agino_log.i = getelementptr inbounds %struct.xfs_mount, ptr %31, i32 0, i32 64, i32 15
  %32 = ptrtoint ptr %agino_log.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %agino_log.i, align 8
  %sh_prom24.i = zext i32 %33 to i64
  %shr.i = lshr i64 %29, %sh_prom24.i
  %conv26.i = and i64 %shr.i, 4294967295
  %sb_agblklog29.i = getelementptr inbounds %struct.xfs_sb, ptr %31, i32 0, i32 24
  %34 = ptrtoint ptr %sb_agblklog29.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %sb_agblklog29.i, align 4
  %sh_prom31.i = zext i8 %35 to i64
  %shl32.i = shl i64 %conv26.i, %sh_prom31.i
  %conv35.i = trunc i64 %29 to i32
  %sb_inopblog.i = getelementptr inbounds %struct.xfs_sb, ptr %31, i32 0, i32 23
  %36 = ptrtoint ptr %sb_inopblog.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %sb_inopblog.i, align 1
  %conv38.i = zext i8 %37 to i32
  %shr39.i = lshr i32 %conv35.i, %conv38.i
  %notmask.i = shl nsw i64 -1, %sh_prom31.i
  %38 = trunc i64 %notmask.i to i32
  %conv47.i = xor i32 %38, -1
  %and48.i = and i32 %shr39.i, %conv47.i
  %conv49.i = zext i32 %and48.i to i64
  %or50.i = or i64 %shl32.i, %conv49.i
  br label %xchk_btree_cur_fsbno.exit

xchk_btree_cur_fsbno.exit:                        ; preds = %if.then22.i, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, %if.end.i48.xchk_btree_cur_fsbno.exit_crit_edge, %xfs_daddr_to_agbno.exit.i
  %retval.0.i50 = phi i64 [ %or.i, %xfs_daddr_to_agbno.exit.i ], [ %or50.i, %if.then22.i ], [ -1, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge ], [ -1, %if.end.i48.xchk_btree_cur_fsbno.exit_crit_edge ]
  %39 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %call3, i32 0, i32 1
  %45 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %dev, align 4
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %46 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %sm, align 4
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %47, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %call3, i32 0, i32 2
  %50 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %type, align 4
  %bc_btnum = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 5
  %51 = ptrtoint ptr %bc_btnum to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %bc_btnum, align 4
  %btnum = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %call3, i32 0, i32 3
  %53 = ptrtoint ptr %btnum to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %btnum, align 4
  %level7 = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %call3, i32 0, i32 4
  %54 = ptrtoint ptr %level7 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %level, ptr %level7, align 4
  %bc_mp = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %55 = ptrtoint ptr %bc_mp to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog = getelementptr inbounds %struct.xfs_sb, ptr %56, i32 0, i32 24
  %57 = ptrtoint ptr %sb_agblklog to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %sb_agblklog, align 4
  %sh_prom = zext i8 %58 to i64
  %shr = lshr i64 %retval.0.i50, %sh_prom
  %conv8 = trunc i64 %shr to i32
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %call3, i32 0, i32 5
  %59 = ptrtoint ptr %agno to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %conv8, ptr %agno, align 4
  %60 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog11 = getelementptr inbounds %struct.xfs_sb, ptr %60, i32 0, i32 24
  %61 = ptrtoint ptr %sb_agblklog11 to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %sb_agblklog11, align 4
  %conv12 = zext i8 %62 to i32
  %notmask.i51 = shl nsw i32 -1, %conv12
  %sub.i52 = xor i32 %notmask.i51, -1
  %63 = trunc i64 %retval.0.i50 to i32
  %conv15 = and i32 %sub.i52, %63
  %bno = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %call3, i32 0, i32 6
  %64 = ptrtoint ptr %bno to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %conv15, ptr %bno, align 4
  %ptr = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level, i32 1
  %65 = ptrtoint ptr %ptr to i32
  call void @__asan_load2_noabort(i32 %65)
  %66 = load i16, ptr %ptr, align 4
  %conv16 = zext i16 %66 to i32
  %ptr17 = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %call3, i32 0, i32 7
  %67 = ptrtoint ptr %ptr17 to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %conv16, ptr %ptr17, align 4
  %error18 = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %call3, i32 0, i32 8
  %68 = ptrtoint ptr %error18 to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %error, ptr %error18, align 4
  %ret_ip19 = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %call3, i32 0, i32 9
  %69 = ptrtoint ptr %ret_ip19 to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %ret_ip, ptr %ret_ip19, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %xchk_btree_cur_fsbno.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xchk_btree_op_error(ptr noundef %__data, ptr nocapture noundef readonly %sc, ptr nocapture noundef readonly %cur, i32 noundef %level, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %bc_nlevels.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 7
  %27 = ptrtoint ptr %bc_nlevels.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %bc_nlevels.i, align 8
  %conv.i = zext i8 %28 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %level)
  %cmp.i = icmp sgt i32 %conv.i, %level
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end16.if.end.i_crit_edge

if.end16.if.end.i_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %if.end16
  %arrayidx.i72 = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level
  %29 = ptrtoint ptr %arrayidx.i72 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx.i72, align 8
  %tobool.not.i73 = icmp eq ptr %30, null
  br i1 %tobool.not.i73, label %land.lhs.true.i.if.end.i_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %bc_mp.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %31 = ptrtoint ptr %bc_mp.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %bc_mp.i, align 4
  %b_maps.i.i = getelementptr inbounds %struct.xfs_buf, ptr %30, i32 0, i32 24
  %33 = ptrtoint ptr %b_maps.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %b_maps.i.i, align 8
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %34, align 8
  %m_blkbb_log.i.i = getelementptr inbounds %struct.xfs_mount, ptr %32, i32 0, i32 28
  %37 = ptrtoint ptr %m_blkbb_log.i.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %m_blkbb_log.i.i, align 1
  %sh_prom.i.i = zext i8 %38 to i64
  %shr.i.i = ashr i64 %36, %sh_prom.i.i
  %sb_agblocks.i.i = getelementptr inbounds %struct.xfs_sb, ptr %32, i32 0, i32 11
  %39 = ptrtoint ptr %sb_agblocks.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %sb_agblocks.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %shr.i.i)
  %cmp168.i.i = icmp ult i64 %shr.i.i, 4294967296
  br i1 %cmp168.i.i, label %if.then172.i172.i, label %if.else178.i173.i, !prof !718

if.then172.i172.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %conv173.i.i = trunc i64 %shr.i.i to i32
  %conv173.i.i.frozen = freeze i32 %conv173.i.i
  %.frozen = freeze i32 %40
  %div176.i.i = udiv i32 %conv173.i.i.frozen, %.frozen
  %conv6175182.i = zext i32 %div176.i.i to i64
  %sb_agblklog176183.i = getelementptr inbounds %struct.xfs_sb, ptr %32, i32 0, i32 24
  %41 = ptrtoint ptr %sb_agblklog176183.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %sb_agblklog176183.i, align 4
  %sh_prom177184.i = zext i8 %42 to i64
  %shl178185.i = shl i64 %conv6175182.i, %sh_prom177184.i
  %43 = mul i32 %div176.i.i, %.frozen
  %rem174.i.i.decomposed = sub i32 %conv173.i.i.frozen, %43
  br label %xfs_daddr_to_agbno.exit.i

if.else178.i173.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %44 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %40, i64 %shr.i.i) #8
  %asmresult1.i.i.i = extractvalue { i64, i64 } %44, 1
  %conv6175.i = and i64 %asmresult1.i.i.i, 4294967295
  %sb_agblklog176.i = getelementptr inbounds %struct.xfs_sb, ptr %32, i32 0, i32 24
  %45 = ptrtoint ptr %sb_agblklog176.i to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %sb_agblklog176.i, align 4
  %sh_prom177.i = zext i8 %46 to i64
  %shl178.i = shl i64 %conv6175.i, %sh_prom177.i
  %asmresult.i266.i.i = extractvalue { i64, i64 } %44, 0
  %shr.i.i.i = lshr i64 %asmresult.i266.i.i, 32
  %conv.i.i.i = trunc i64 %shr.i.i.i to i32
  br label %xfs_daddr_to_agbno.exit.i

xfs_daddr_to_agbno.exit.i:                        ; preds = %if.else178.i173.i, %if.then172.i172.i
  %shl179.i = phi i64 [ %shl178185.i, %if.then172.i172.i ], [ %shl178.i, %if.else178.i173.i ]
  %__rem.0.i.i = phi i32 [ %rem174.i.i.decomposed, %if.then172.i172.i ], [ %conv.i.i.i, %if.else178.i173.i ]
  %conv15.i = zext i32 %__rem.0.i.i to i64
  %or.i = or i64 %shl179.i, %conv15.i
  br label %xchk_btree_cur_fsbno.exit

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %if.end16.if.end.i_crit_edge
  %sub.i = add nsw i32 %conv.i, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %level)
  %cmp18.i = icmp eq i32 %sub.i, %level
  br i1 %cmp18.i, label %land.lhs.true20.i, label %if.end.i.xchk_btree_cur_fsbno.exit_crit_edge

if.end.i.xchk_btree_cur_fsbno.exit_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

land.lhs.true20.i:                                ; preds = %if.end.i
  %bc_flags.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 4
  %47 = ptrtoint ptr %bc_flags.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %bc_flags.i, align 8
  %and.i74 = and i32 %48, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i74)
  %tobool21.not.i = icmp eq i32 %and.i74, 0
  br i1 %tobool21.not.i, label %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, label %if.then22.i

land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge: ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

if.then22.i:                                      ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  %49 = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 10
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %49, align 8
  %i_ino.i = getelementptr inbounds %struct.xfs_inode, ptr %51, i32 0, i32 4
  %52 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %i_ino.i, align 8
  %bc_mp23.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %54 = ptrtoint ptr %bc_mp23.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %bc_mp23.i, align 4
  %agino_log.i = getelementptr inbounds %struct.xfs_mount, ptr %55, i32 0, i32 64, i32 15
  %56 = ptrtoint ptr %agino_log.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %agino_log.i, align 8
  %sh_prom24.i = zext i32 %57 to i64
  %shr.i = lshr i64 %53, %sh_prom24.i
  %conv26.i = and i64 %shr.i, 4294967295
  %sb_agblklog29.i = getelementptr inbounds %struct.xfs_sb, ptr %55, i32 0, i32 24
  %58 = ptrtoint ptr %sb_agblklog29.i to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %sb_agblklog29.i, align 4
  %sh_prom31.i = zext i8 %59 to i64
  %shl32.i = shl i64 %conv26.i, %sh_prom31.i
  %conv35.i = trunc i64 %53 to i32
  %sb_inopblog.i = getelementptr inbounds %struct.xfs_sb, ptr %55, i32 0, i32 23
  %60 = ptrtoint ptr %sb_inopblog.i to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %sb_inopblog.i, align 1
  %conv38.i = zext i8 %61 to i32
  %shr39.i = lshr i32 %conv35.i, %conv38.i
  %notmask.i = shl nsw i64 -1, %sh_prom31.i
  %62 = trunc i64 %notmask.i to i32
  %conv47.i = xor i32 %62, -1
  %and48.i = and i32 %shr39.i, %conv47.i
  %conv49.i = zext i32 %and48.i to i64
  %or50.i = or i64 %shl32.i, %conv49.i
  br label %xchk_btree_cur_fsbno.exit

xchk_btree_cur_fsbno.exit:                        ; preds = %if.then22.i, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, %if.end.i.xchk_btree_cur_fsbno.exit_crit_edge, %xfs_daddr_to_agbno.exit.i
  %retval.0.i = phi i64 [ %or.i, %xfs_daddr_to_agbno.exit.i ], [ %or50.i, %if.then22.i ], [ -1, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge ], [ -1, %if.end.i.xchk_btree_cur_fsbno.exit_crit_edge ]
  %63 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %64, i32 0, i32 1
  %65 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %66, i32 0, i32 1
  %67 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %call13, i32 0, i32 1
  %69 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %68, ptr %dev, align 4
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %70 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %sm, align 4
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %71, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %call13, i32 0, i32 2
  %74 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %73, ptr %type, align 4
  %bc_btnum = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 5
  %75 = ptrtoint ptr %bc_btnum to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %bc_btnum, align 4
  %btnum = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %call13, i32 0, i32 3
  %77 = ptrtoint ptr %btnum to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 %76, ptr %btnum, align 4
  %level18 = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %call13, i32 0, i32 4
  %78 = ptrtoint ptr %level18 to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 %level, ptr %level18, align 4
  %bc_mp = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %79 = ptrtoint ptr %bc_mp to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog = getelementptr inbounds %struct.xfs_sb, ptr %80, i32 0, i32 24
  %81 = ptrtoint ptr %sb_agblklog to i32
  call void @__asan_load1_noabort(i32 %81)
  %82 = load i8, ptr %sb_agblklog, align 4
  %sh_prom = zext i8 %82 to i64
  %shr = lshr i64 %retval.0.i, %sh_prom
  %conv19 = trunc i64 %shr to i32
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %call13, i32 0, i32 5
  %83 = ptrtoint ptr %agno to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %conv19, ptr %agno, align 4
  %84 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog22 = getelementptr inbounds %struct.xfs_sb, ptr %84, i32 0, i32 24
  %85 = ptrtoint ptr %sb_agblklog22 to i32
  call void @__asan_load1_noabort(i32 %85)
  %86 = load i8, ptr %sb_agblklog22, align 4
  %conv23 = zext i8 %86 to i32
  %notmask.i75 = shl nsw i32 -1, %conv23
  %sub.i76 = xor i32 %notmask.i75, -1
  %87 = trunc i64 %retval.0.i to i32
  %conv27 = and i32 %sub.i76, %87
  %bno = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %call13, i32 0, i32 6
  %88 = ptrtoint ptr %bno to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 %conv27, ptr %bno, align 4
  %ptr = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level, i32 1
  %89 = ptrtoint ptr %ptr to i32
  call void @__asan_load2_noabort(i32 %89)
  %90 = load i16, ptr %ptr, align 4
  %conv29 = zext i16 %90 to i32
  %ptr30 = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %call13, i32 0, i32 7
  %91 = ptrtoint ptr %ptr30 to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %conv29, ptr %ptr30, align 4
  %error31 = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %call13, i32 0, i32 8
  %92 = ptrtoint ptr %error31 to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 %error, ptr %error31, align 4
  %ret_ip32 = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %call13, i32 0, i32 9
  %93 = ptrtoint ptr %ret_ip32 to i32
  call void @__asan_store4_noabort(i32 %93)
  store ptr %ret_ip, ptr %ret_ip32, align 4
  %94 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %rctx, align 4
  %96 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %95, ptr noundef %__data, i64 noundef 1, ptr noundef %97, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %xchk_btree_cur_fsbno.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xchk_ifork_btree_op_error(ptr noundef %__data, ptr nocapture noundef readonly %sc, ptr nocapture noundef readonly %cur, i32 noundef %level, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 64) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %bc_nlevels.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 7
  %3 = ptrtoint ptr %bc_nlevels.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %bc_nlevels.i, align 8
  %conv.i = zext i8 %4 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %level)
  %cmp.i = icmp sgt i32 %conv.i, %level
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end5.if.end.i54_crit_edge

if.end5.if.end.i54_crit_edge:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i54

land.lhs.true.i:                                  ; preds = %if.end5
  %arrayidx.i = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i, align 8
  %tobool.not.i53 = icmp eq ptr %6, null
  br i1 %tobool.not.i53, label %land.lhs.true.i.if.end.i54_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i54_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i54

if.then.i:                                        ; preds = %land.lhs.true.i
  %bc_mp.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %7 = ptrtoint ptr %bc_mp.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %bc_mp.i, align 4
  %b_maps.i.i = getelementptr inbounds %struct.xfs_buf, ptr %6, i32 0, i32 24
  %9 = ptrtoint ptr %b_maps.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %b_maps.i.i, align 8
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %10, align 8
  %m_blkbb_log.i.i = getelementptr inbounds %struct.xfs_mount, ptr %8, i32 0, i32 28
  %13 = ptrtoint ptr %m_blkbb_log.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %m_blkbb_log.i.i, align 1
  %sh_prom.i.i = zext i8 %14 to i64
  %shr.i.i = ashr i64 %12, %sh_prom.i.i
  %sb_agblocks.i.i = getelementptr inbounds %struct.xfs_sb, ptr %8, i32 0, i32 11
  %15 = ptrtoint ptr %sb_agblocks.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %sb_agblocks.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %shr.i.i)
  %cmp168.i.i = icmp ult i64 %shr.i.i, 4294967296
  br i1 %cmp168.i.i, label %if.then172.i172.i, label %if.else178.i173.i, !prof !718

if.then172.i172.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %conv173.i.i = trunc i64 %shr.i.i to i32
  %conv173.i.i.frozen = freeze i32 %conv173.i.i
  %.frozen = freeze i32 %16
  %div176.i.i = udiv i32 %conv173.i.i.frozen, %.frozen
  %conv6175182.i = zext i32 %div176.i.i to i64
  %sb_agblklog176183.i = getelementptr inbounds %struct.xfs_sb, ptr %8, i32 0, i32 24
  %17 = ptrtoint ptr %sb_agblklog176183.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %sb_agblklog176183.i, align 4
  %sh_prom177184.i = zext i8 %18 to i64
  %shl178185.i = shl i64 %conv6175182.i, %sh_prom177184.i
  %19 = mul i32 %div176.i.i, %.frozen
  %rem174.i.i.decomposed = sub i32 %conv173.i.i.frozen, %19
  br label %xfs_daddr_to_agbno.exit.i

if.else178.i173.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %20 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %16, i64 %shr.i.i) #8
  %asmresult1.i.i.i = extractvalue { i64, i64 } %20, 1
  %conv6175.i = and i64 %asmresult1.i.i.i, 4294967295
  %sb_agblklog176.i = getelementptr inbounds %struct.xfs_sb, ptr %8, i32 0, i32 24
  %21 = ptrtoint ptr %sb_agblklog176.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %sb_agblklog176.i, align 4
  %sh_prom177.i = zext i8 %22 to i64
  %shl178.i = shl i64 %conv6175.i, %sh_prom177.i
  %asmresult.i266.i.i = extractvalue { i64, i64 } %20, 0
  %shr.i.i.i = lshr i64 %asmresult.i266.i.i, 32
  %conv.i.i.i = trunc i64 %shr.i.i.i to i32
  br label %xfs_daddr_to_agbno.exit.i

xfs_daddr_to_agbno.exit.i:                        ; preds = %if.else178.i173.i, %if.then172.i172.i
  %shl179.i = phi i64 [ %shl178185.i, %if.then172.i172.i ], [ %shl178.i, %if.else178.i173.i ]
  %__rem.0.i.i = phi i32 [ %rem174.i.i.decomposed, %if.then172.i172.i ], [ %conv.i.i.i, %if.else178.i173.i ]
  %conv15.i = zext i32 %__rem.0.i.i to i64
  %or.i = or i64 %shl179.i, %conv15.i
  br label %xchk_btree_cur_fsbno.exit

if.end.i54:                                       ; preds = %land.lhs.true.i.if.end.i54_crit_edge, %if.end5.if.end.i54_crit_edge
  %sub.i = add nsw i32 %conv.i, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %level)
  %cmp18.i = icmp eq i32 %sub.i, %level
  br i1 %cmp18.i, label %land.lhs.true20.i, label %if.end.i54.xchk_btree_cur_fsbno.exit_crit_edge

if.end.i54.xchk_btree_cur_fsbno.exit_crit_edge:   ; preds = %if.end.i54
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

land.lhs.true20.i:                                ; preds = %if.end.i54
  %bc_flags.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 4
  %23 = ptrtoint ptr %bc_flags.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %bc_flags.i, align 8
  %and.i55 = and i32 %24, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i55)
  %tobool21.not.i = icmp eq i32 %and.i55, 0
  br i1 %tobool21.not.i, label %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, label %if.then22.i

land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge: ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

if.then22.i:                                      ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  %25 = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 10
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %25, align 8
  %i_ino.i = getelementptr inbounds %struct.xfs_inode, ptr %27, i32 0, i32 4
  %28 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %i_ino.i, align 8
  %bc_mp23.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %30 = ptrtoint ptr %bc_mp23.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %bc_mp23.i, align 4
  %agino_log.i = getelementptr inbounds %struct.xfs_mount, ptr %31, i32 0, i32 64, i32 15
  %32 = ptrtoint ptr %agino_log.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %agino_log.i, align 8
  %sh_prom24.i = zext i32 %33 to i64
  %shr.i = lshr i64 %29, %sh_prom24.i
  %conv26.i = and i64 %shr.i, 4294967295
  %sb_agblklog29.i = getelementptr inbounds %struct.xfs_sb, ptr %31, i32 0, i32 24
  %34 = ptrtoint ptr %sb_agblklog29.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %sb_agblklog29.i, align 4
  %sh_prom31.i = zext i8 %35 to i64
  %shl32.i = shl i64 %conv26.i, %sh_prom31.i
  %conv35.i = trunc i64 %29 to i32
  %sb_inopblog.i = getelementptr inbounds %struct.xfs_sb, ptr %31, i32 0, i32 23
  %36 = ptrtoint ptr %sb_inopblog.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %sb_inopblog.i, align 1
  %conv38.i = zext i8 %37 to i32
  %shr39.i = lshr i32 %conv35.i, %conv38.i
  %notmask.i = shl nsw i64 -1, %sh_prom31.i
  %38 = trunc i64 %notmask.i to i32
  %conv47.i = xor i32 %38, -1
  %and48.i = and i32 %shr39.i, %conv47.i
  %conv49.i = zext i32 %and48.i to i64
  %or50.i = or i64 %shl32.i, %conv49.i
  br label %xchk_btree_cur_fsbno.exit

xchk_btree_cur_fsbno.exit:                        ; preds = %if.then22.i, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, %if.end.i54.xchk_btree_cur_fsbno.exit_crit_edge, %xfs_daddr_to_agbno.exit.i
  %retval.0.i56 = phi i64 [ %or.i, %xfs_daddr_to_agbno.exit.i ], [ %or50.i, %if.then22.i ], [ -1, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge ], [ -1, %if.end.i54.xchk_btree_cur_fsbno.exit_crit_edge ]
  %39 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call3, i32 0, i32 1
  %45 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %dev, align 8
  %ip = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 5
  %46 = ptrtoint ptr %ip to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %ip, align 4
  %i_ino = getelementptr inbounds %struct.xfs_inode, ptr %47, i32 0, i32 4
  %48 = ptrtoint ptr %i_ino to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call3, i32 0, i32 2
  %50 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %50)
  store i64 %49, ptr %ino, align 8
  %51 = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 10
  %whichfork = getelementptr inbounds %struct.xfs_btree_cur_ino, ptr %51, i32 0, i32 4
  %52 = ptrtoint ptr %whichfork to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %whichfork, align 2
  %conv = zext i8 %53 to i32
  %whichfork7 = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call3, i32 0, i32 3
  %54 = ptrtoint ptr %whichfork7 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %conv, ptr %whichfork7, align 8
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %55 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %sm, align 4
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %56, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call3, i32 0, i32 4
  %59 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %58, ptr %type, align 4
  %bc_btnum = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 5
  %60 = ptrtoint ptr %bc_btnum to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %bc_btnum, align 4
  %btnum = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call3, i32 0, i32 5
  %62 = ptrtoint ptr %btnum to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %61, ptr %btnum, align 8
  %level8 = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call3, i32 0, i32 6
  %63 = ptrtoint ptr %level8 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %level, ptr %level8, align 4
  %ptr = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level, i32 1
  %64 = ptrtoint ptr %ptr to i32
  call void @__asan_load2_noabort(i32 %64)
  %65 = load i16, ptr %ptr, align 4
  %conv9 = zext i16 %65 to i32
  %ptr10 = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call3, i32 0, i32 7
  %66 = ptrtoint ptr %ptr10 to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 %conv9, ptr %ptr10, align 8
  %bc_mp = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %67 = ptrtoint ptr %bc_mp to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog = getelementptr inbounds %struct.xfs_sb, ptr %68, i32 0, i32 24
  %69 = ptrtoint ptr %sb_agblklog to i32
  call void @__asan_load1_noabort(i32 %69)
  %70 = load i8, ptr %sb_agblklog, align 4
  %sh_prom = zext i8 %70 to i64
  %shr = lshr i64 %retval.0.i56, %sh_prom
  %conv12 = trunc i64 %shr to i32
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call3, i32 0, i32 8
  %71 = ptrtoint ptr %agno to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 %conv12, ptr %agno, align 4
  %72 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog15 = getelementptr inbounds %struct.xfs_sb, ptr %72, i32 0, i32 24
  %73 = ptrtoint ptr %sb_agblklog15 to i32
  call void @__asan_load1_noabort(i32 %73)
  %74 = load i8, ptr %sb_agblklog15, align 4
  %conv16 = zext i8 %74 to i32
  %notmask.i57 = shl nsw i32 -1, %conv16
  %sub.i58 = xor i32 %notmask.i57, -1
  %75 = trunc i64 %retval.0.i56 to i32
  %conv19 = and i32 %sub.i58, %75
  %bno = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call3, i32 0, i32 9
  %76 = ptrtoint ptr %bno to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %conv19, ptr %bno, align 8
  %error20 = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call3, i32 0, i32 10
  %77 = ptrtoint ptr %error20 to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 %error, ptr %error20, align 4
  %ret_ip21 = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call3, i32 0, i32 11
  %78 = ptrtoint ptr %ret_ip21 to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr %ret_ip, ptr %ret_ip21, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %xchk_btree_cur_fsbno.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xchk_ifork_btree_op_error(ptr noundef %__data, ptr nocapture noundef readonly %sc, ptr nocapture noundef readonly %cur, i32 noundef %level, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 68, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %bc_nlevels.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 7
  %27 = ptrtoint ptr %bc_nlevels.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %bc_nlevels.i, align 8
  %conv.i = zext i8 %28 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %level)
  %cmp.i = icmp sgt i32 %conv.i, %level
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end16.if.end.i_crit_edge

if.end16.if.end.i_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %if.end16
  %arrayidx.i78 = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level
  %29 = ptrtoint ptr %arrayidx.i78 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx.i78, align 8
  %tobool.not.i79 = icmp eq ptr %30, null
  br i1 %tobool.not.i79, label %land.lhs.true.i.if.end.i_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %bc_mp.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %31 = ptrtoint ptr %bc_mp.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %bc_mp.i, align 4
  %b_maps.i.i = getelementptr inbounds %struct.xfs_buf, ptr %30, i32 0, i32 24
  %33 = ptrtoint ptr %b_maps.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %b_maps.i.i, align 8
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %34, align 8
  %m_blkbb_log.i.i = getelementptr inbounds %struct.xfs_mount, ptr %32, i32 0, i32 28
  %37 = ptrtoint ptr %m_blkbb_log.i.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %m_blkbb_log.i.i, align 1
  %sh_prom.i.i = zext i8 %38 to i64
  %shr.i.i = ashr i64 %36, %sh_prom.i.i
  %sb_agblocks.i.i = getelementptr inbounds %struct.xfs_sb, ptr %32, i32 0, i32 11
  %39 = ptrtoint ptr %sb_agblocks.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %sb_agblocks.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %shr.i.i)
  %cmp168.i.i = icmp ult i64 %shr.i.i, 4294967296
  br i1 %cmp168.i.i, label %if.then172.i172.i, label %if.else178.i173.i, !prof !718

if.then172.i172.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %conv173.i.i = trunc i64 %shr.i.i to i32
  %conv173.i.i.frozen = freeze i32 %conv173.i.i
  %.frozen = freeze i32 %40
  %div176.i.i = udiv i32 %conv173.i.i.frozen, %.frozen
  %conv6175182.i = zext i32 %div176.i.i to i64
  %sb_agblklog176183.i = getelementptr inbounds %struct.xfs_sb, ptr %32, i32 0, i32 24
  %41 = ptrtoint ptr %sb_agblklog176183.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %sb_agblklog176183.i, align 4
  %sh_prom177184.i = zext i8 %42 to i64
  %shl178185.i = shl i64 %conv6175182.i, %sh_prom177184.i
  %43 = mul i32 %div176.i.i, %.frozen
  %rem174.i.i.decomposed = sub i32 %conv173.i.i.frozen, %43
  br label %xfs_daddr_to_agbno.exit.i

if.else178.i173.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %44 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %40, i64 %shr.i.i) #8
  %asmresult1.i.i.i = extractvalue { i64, i64 } %44, 1
  %conv6175.i = and i64 %asmresult1.i.i.i, 4294967295
  %sb_agblklog176.i = getelementptr inbounds %struct.xfs_sb, ptr %32, i32 0, i32 24
  %45 = ptrtoint ptr %sb_agblklog176.i to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %sb_agblklog176.i, align 4
  %sh_prom177.i = zext i8 %46 to i64
  %shl178.i = shl i64 %conv6175.i, %sh_prom177.i
  %asmresult.i266.i.i = extractvalue { i64, i64 } %44, 0
  %shr.i.i.i = lshr i64 %asmresult.i266.i.i, 32
  %conv.i.i.i = trunc i64 %shr.i.i.i to i32
  br label %xfs_daddr_to_agbno.exit.i

xfs_daddr_to_agbno.exit.i:                        ; preds = %if.else178.i173.i, %if.then172.i172.i
  %shl179.i = phi i64 [ %shl178185.i, %if.then172.i172.i ], [ %shl178.i, %if.else178.i173.i ]
  %__rem.0.i.i = phi i32 [ %rem174.i.i.decomposed, %if.then172.i172.i ], [ %conv.i.i.i, %if.else178.i173.i ]
  %conv15.i = zext i32 %__rem.0.i.i to i64
  %or.i = or i64 %shl179.i, %conv15.i
  br label %xchk_btree_cur_fsbno.exit

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %if.end16.if.end.i_crit_edge
  %sub.i = add nsw i32 %conv.i, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %level)
  %cmp18.i = icmp eq i32 %sub.i, %level
  br i1 %cmp18.i, label %land.lhs.true20.i, label %if.end.i.xchk_btree_cur_fsbno.exit_crit_edge

if.end.i.xchk_btree_cur_fsbno.exit_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

land.lhs.true20.i:                                ; preds = %if.end.i
  %bc_flags.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 4
  %47 = ptrtoint ptr %bc_flags.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %bc_flags.i, align 8
  %and.i80 = and i32 %48, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i80)
  %tobool21.not.i = icmp eq i32 %and.i80, 0
  br i1 %tobool21.not.i, label %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, label %if.then22.i

land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge: ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

if.then22.i:                                      ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  %49 = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 10
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %49, align 8
  %i_ino.i = getelementptr inbounds %struct.xfs_inode, ptr %51, i32 0, i32 4
  %52 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %i_ino.i, align 8
  %bc_mp23.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %54 = ptrtoint ptr %bc_mp23.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %bc_mp23.i, align 4
  %agino_log.i = getelementptr inbounds %struct.xfs_mount, ptr %55, i32 0, i32 64, i32 15
  %56 = ptrtoint ptr %agino_log.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %agino_log.i, align 8
  %sh_prom24.i = zext i32 %57 to i64
  %shr.i = lshr i64 %53, %sh_prom24.i
  %conv26.i = and i64 %shr.i, 4294967295
  %sb_agblklog29.i = getelementptr inbounds %struct.xfs_sb, ptr %55, i32 0, i32 24
  %58 = ptrtoint ptr %sb_agblklog29.i to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %sb_agblklog29.i, align 4
  %sh_prom31.i = zext i8 %59 to i64
  %shl32.i = shl i64 %conv26.i, %sh_prom31.i
  %conv35.i = trunc i64 %53 to i32
  %sb_inopblog.i = getelementptr inbounds %struct.xfs_sb, ptr %55, i32 0, i32 23
  %60 = ptrtoint ptr %sb_inopblog.i to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %sb_inopblog.i, align 1
  %conv38.i = zext i8 %61 to i32
  %shr39.i = lshr i32 %conv35.i, %conv38.i
  %notmask.i = shl nsw i64 -1, %sh_prom31.i
  %62 = trunc i64 %notmask.i to i32
  %conv47.i = xor i32 %62, -1
  %and48.i = and i32 %shr39.i, %conv47.i
  %conv49.i = zext i32 %and48.i to i64
  %or50.i = or i64 %shl32.i, %conv49.i
  br label %xchk_btree_cur_fsbno.exit

xchk_btree_cur_fsbno.exit:                        ; preds = %if.then22.i, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, %if.end.i.xchk_btree_cur_fsbno.exit_crit_edge, %xfs_daddr_to_agbno.exit.i
  %retval.0.i = phi i64 [ %or.i, %xfs_daddr_to_agbno.exit.i ], [ %or50.i, %if.then22.i ], [ -1, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge ], [ -1, %if.end.i.xchk_btree_cur_fsbno.exit_crit_edge ]
  %63 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %64, i32 0, i32 1
  %65 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %66, i32 0, i32 1
  %67 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call13, i32 0, i32 1
  %69 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %68, ptr %dev, align 8
  %ip = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 5
  %70 = ptrtoint ptr %ip to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %ip, align 4
  %i_ino = getelementptr inbounds %struct.xfs_inode, ptr %71, i32 0, i32 4
  %72 = ptrtoint ptr %i_ino to i32
  call void @__asan_load8_noabort(i32 %72)
  %73 = load i64, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call13, i32 0, i32 2
  %74 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %74)
  store i64 %73, ptr %ino, align 8
  %75 = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 10
  %whichfork = getelementptr inbounds %struct.xfs_btree_cur_ino, ptr %75, i32 0, i32 4
  %76 = ptrtoint ptr %whichfork to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %whichfork, align 2
  %conv = zext i8 %77 to i32
  %whichfork18 = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call13, i32 0, i32 3
  %78 = ptrtoint ptr %whichfork18 to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 %conv, ptr %whichfork18, align 8
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %79 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %sm, align 4
  %81 = ptrtoint ptr %80 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %80, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call13, i32 0, i32 4
  %83 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %82, ptr %type, align 4
  %bc_btnum = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 5
  %84 = ptrtoint ptr %bc_btnum to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %bc_btnum, align 4
  %btnum = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call13, i32 0, i32 5
  %86 = ptrtoint ptr %btnum to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 %85, ptr %btnum, align 8
  %level19 = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call13, i32 0, i32 6
  %87 = ptrtoint ptr %level19 to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 %level, ptr %level19, align 4
  %ptr = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level, i32 1
  %88 = ptrtoint ptr %ptr to i32
  call void @__asan_load2_noabort(i32 %88)
  %89 = load i16, ptr %ptr, align 4
  %conv21 = zext i16 %89 to i32
  %ptr22 = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call13, i32 0, i32 7
  %90 = ptrtoint ptr %ptr22 to i32
  call void @__asan_store4_noabort(i32 %90)
  store i32 %conv21, ptr %ptr22, align 8
  %bc_mp = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %91 = ptrtoint ptr %bc_mp to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog = getelementptr inbounds %struct.xfs_sb, ptr %92, i32 0, i32 24
  %93 = ptrtoint ptr %sb_agblklog to i32
  call void @__asan_load1_noabort(i32 %93)
  %94 = load i8, ptr %sb_agblklog, align 4
  %sh_prom = zext i8 %94 to i64
  %shr = lshr i64 %retval.0.i, %sh_prom
  %conv24 = trunc i64 %shr to i32
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call13, i32 0, i32 8
  %95 = ptrtoint ptr %agno to i32
  call void @__asan_store4_noabort(i32 %95)
  store i32 %conv24, ptr %agno, align 4
  %96 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog27 = getelementptr inbounds %struct.xfs_sb, ptr %96, i32 0, i32 24
  %97 = ptrtoint ptr %sb_agblklog27 to i32
  call void @__asan_load1_noabort(i32 %97)
  %98 = load i8, ptr %sb_agblklog27, align 4
  %conv28 = zext i8 %98 to i32
  %notmask.i81 = shl nsw i32 -1, %conv28
  %sub.i82 = xor i32 %notmask.i81, -1
  %99 = trunc i64 %retval.0.i to i32
  %conv32 = and i32 %sub.i82, %99
  %bno = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call13, i32 0, i32 9
  %100 = ptrtoint ptr %bno to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 %conv32, ptr %bno, align 8
  %error33 = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call13, i32 0, i32 10
  %101 = ptrtoint ptr %error33 to i32
  call void @__asan_store4_noabort(i32 %101)
  store i32 %error, ptr %error33, align 4
  %ret_ip34 = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %call13, i32 0, i32 11
  %102 = ptrtoint ptr %ret_ip34 to i32
  call void @__asan_store4_noabort(i32 %102)
  store ptr %ret_ip, ptr %ret_ip34, align 8
  %103 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %rctx, align 4
  %105 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 68, i32 noundef %104, ptr noundef %__data, i64 noundef 1, ptr noundef %106, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %xchk_btree_cur_fsbno.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xchk_btree_error(ptr noundef %__data, ptr nocapture noundef readonly %sc, ptr nocapture noundef readonly %cur, i32 noundef %level, ptr noundef %ret_ip) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %bc_nlevels.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 7
  %3 = ptrtoint ptr %bc_nlevels.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %bc_nlevels.i, align 8
  %conv.i = zext i8 %4 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %level)
  %cmp.i = icmp sgt i32 %conv.i, %level
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end5.if.end.i45_crit_edge

if.end5.if.end.i45_crit_edge:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i45

land.lhs.true.i:                                  ; preds = %if.end5
  %arrayidx.i = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i, align 8
  %tobool.not.i44 = icmp eq ptr %6, null
  br i1 %tobool.not.i44, label %land.lhs.true.i.if.end.i45_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i45_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i45

if.then.i:                                        ; preds = %land.lhs.true.i
  %bc_mp.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %7 = ptrtoint ptr %bc_mp.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %bc_mp.i, align 4
  %b_maps.i.i = getelementptr inbounds %struct.xfs_buf, ptr %6, i32 0, i32 24
  %9 = ptrtoint ptr %b_maps.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %b_maps.i.i, align 8
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %10, align 8
  %m_blkbb_log.i.i = getelementptr inbounds %struct.xfs_mount, ptr %8, i32 0, i32 28
  %13 = ptrtoint ptr %m_blkbb_log.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %m_blkbb_log.i.i, align 1
  %sh_prom.i.i = zext i8 %14 to i64
  %shr.i.i = ashr i64 %12, %sh_prom.i.i
  %sb_agblocks.i.i = getelementptr inbounds %struct.xfs_sb, ptr %8, i32 0, i32 11
  %15 = ptrtoint ptr %sb_agblocks.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %sb_agblocks.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %shr.i.i)
  %cmp168.i.i = icmp ult i64 %shr.i.i, 4294967296
  br i1 %cmp168.i.i, label %if.then172.i172.i, label %if.else178.i173.i, !prof !718

if.then172.i172.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %conv173.i.i = trunc i64 %shr.i.i to i32
  %conv173.i.i.frozen = freeze i32 %conv173.i.i
  %.frozen = freeze i32 %16
  %div176.i.i = udiv i32 %conv173.i.i.frozen, %.frozen
  %conv6175182.i = zext i32 %div176.i.i to i64
  %sb_agblklog176183.i = getelementptr inbounds %struct.xfs_sb, ptr %8, i32 0, i32 24
  %17 = ptrtoint ptr %sb_agblklog176183.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %sb_agblklog176183.i, align 4
  %sh_prom177184.i = zext i8 %18 to i64
  %shl178185.i = shl i64 %conv6175182.i, %sh_prom177184.i
  %19 = mul i32 %div176.i.i, %.frozen
  %rem174.i.i.decomposed = sub i32 %conv173.i.i.frozen, %19
  br label %xfs_daddr_to_agbno.exit.i

if.else178.i173.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %20 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %16, i64 %shr.i.i) #8
  %asmresult1.i.i.i = extractvalue { i64, i64 } %20, 1
  %conv6175.i = and i64 %asmresult1.i.i.i, 4294967295
  %sb_agblklog176.i = getelementptr inbounds %struct.xfs_sb, ptr %8, i32 0, i32 24
  %21 = ptrtoint ptr %sb_agblklog176.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %sb_agblklog176.i, align 4
  %sh_prom177.i = zext i8 %22 to i64
  %shl178.i = shl i64 %conv6175.i, %sh_prom177.i
  %asmresult.i266.i.i = extractvalue { i64, i64 } %20, 0
  %shr.i.i.i = lshr i64 %asmresult.i266.i.i, 32
  %conv.i.i.i = trunc i64 %shr.i.i.i to i32
  br label %xfs_daddr_to_agbno.exit.i

xfs_daddr_to_agbno.exit.i:                        ; preds = %if.else178.i173.i, %if.then172.i172.i
  %shl179.i = phi i64 [ %shl178185.i, %if.then172.i172.i ], [ %shl178.i, %if.else178.i173.i ]
  %__rem.0.i.i = phi i32 [ %rem174.i.i.decomposed, %if.then172.i172.i ], [ %conv.i.i.i, %if.else178.i173.i ]
  %conv15.i = zext i32 %__rem.0.i.i to i64
  %or.i = or i64 %shl179.i, %conv15.i
  br label %xchk_btree_cur_fsbno.exit

if.end.i45:                                       ; preds = %land.lhs.true.i.if.end.i45_crit_edge, %if.end5.if.end.i45_crit_edge
  %sub.i = add nsw i32 %conv.i, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %level)
  %cmp18.i = icmp eq i32 %sub.i, %level
  br i1 %cmp18.i, label %land.lhs.true20.i, label %if.end.i45.xchk_btree_cur_fsbno.exit_crit_edge

if.end.i45.xchk_btree_cur_fsbno.exit_crit_edge:   ; preds = %if.end.i45
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

land.lhs.true20.i:                                ; preds = %if.end.i45
  %bc_flags.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 4
  %23 = ptrtoint ptr %bc_flags.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %bc_flags.i, align 8
  %and.i46 = and i32 %24, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i46)
  %tobool21.not.i = icmp eq i32 %and.i46, 0
  br i1 %tobool21.not.i, label %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, label %if.then22.i

land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge: ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

if.then22.i:                                      ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  %25 = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 10
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %25, align 8
  %i_ino.i = getelementptr inbounds %struct.xfs_inode, ptr %27, i32 0, i32 4
  %28 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %i_ino.i, align 8
  %bc_mp23.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %30 = ptrtoint ptr %bc_mp23.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %bc_mp23.i, align 4
  %agino_log.i = getelementptr inbounds %struct.xfs_mount, ptr %31, i32 0, i32 64, i32 15
  %32 = ptrtoint ptr %agino_log.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %agino_log.i, align 8
  %sh_prom24.i = zext i32 %33 to i64
  %shr.i = lshr i64 %29, %sh_prom24.i
  %conv26.i = and i64 %shr.i, 4294967295
  %sb_agblklog29.i = getelementptr inbounds %struct.xfs_sb, ptr %31, i32 0, i32 24
  %34 = ptrtoint ptr %sb_agblklog29.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %sb_agblklog29.i, align 4
  %sh_prom31.i = zext i8 %35 to i64
  %shl32.i = shl i64 %conv26.i, %sh_prom31.i
  %conv35.i = trunc i64 %29 to i32
  %sb_inopblog.i = getelementptr inbounds %struct.xfs_sb, ptr %31, i32 0, i32 23
  %36 = ptrtoint ptr %sb_inopblog.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %sb_inopblog.i, align 1
  %conv38.i = zext i8 %37 to i32
  %shr39.i = lshr i32 %conv35.i, %conv38.i
  %notmask.i = shl nsw i64 -1, %sh_prom31.i
  %38 = trunc i64 %notmask.i to i32
  %conv47.i = xor i32 %38, -1
  %and48.i = and i32 %shr39.i, %conv47.i
  %conv49.i = zext i32 %and48.i to i64
  %or50.i = or i64 %shl32.i, %conv49.i
  br label %xchk_btree_cur_fsbno.exit

xchk_btree_cur_fsbno.exit:                        ; preds = %if.then22.i, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, %if.end.i45.xchk_btree_cur_fsbno.exit_crit_edge, %xfs_daddr_to_agbno.exit.i
  %retval.0.i47 = phi i64 [ %or.i, %xfs_daddr_to_agbno.exit.i ], [ %or50.i, %if.then22.i ], [ -1, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge ], [ -1, %if.end.i45.xchk_btree_cur_fsbno.exit_crit_edge ]
  %39 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %call3, i32 0, i32 1
  %45 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %dev, align 4
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %46 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %sm, align 4
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %47, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %call3, i32 0, i32 2
  %50 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %type, align 4
  %bc_btnum = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 5
  %51 = ptrtoint ptr %bc_btnum to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %bc_btnum, align 4
  %btnum = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %call3, i32 0, i32 3
  %53 = ptrtoint ptr %btnum to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %btnum, align 4
  %level7 = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %call3, i32 0, i32 4
  %54 = ptrtoint ptr %level7 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %level, ptr %level7, align 4
  %bc_mp = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %55 = ptrtoint ptr %bc_mp to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog = getelementptr inbounds %struct.xfs_sb, ptr %56, i32 0, i32 24
  %57 = ptrtoint ptr %sb_agblklog to i32
  call void @__asan_load1_noabort(i32 %57)
  %58 = load i8, ptr %sb_agblklog, align 4
  %sh_prom = zext i8 %58 to i64
  %shr = lshr i64 %retval.0.i47, %sh_prom
  %conv8 = trunc i64 %shr to i32
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %call3, i32 0, i32 5
  %59 = ptrtoint ptr %agno to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %conv8, ptr %agno, align 4
  %60 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog11 = getelementptr inbounds %struct.xfs_sb, ptr %60, i32 0, i32 24
  %61 = ptrtoint ptr %sb_agblklog11 to i32
  call void @__asan_load1_noabort(i32 %61)
  %62 = load i8, ptr %sb_agblklog11, align 4
  %conv12 = zext i8 %62 to i32
  %notmask.i48 = shl nsw i32 -1, %conv12
  %sub.i49 = xor i32 %notmask.i48, -1
  %63 = trunc i64 %retval.0.i47 to i32
  %conv15 = and i32 %sub.i49, %63
  %bno = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %call3, i32 0, i32 6
  %64 = ptrtoint ptr %bno to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %conv15, ptr %bno, align 4
  %ptr = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level, i32 1
  %65 = ptrtoint ptr %ptr to i32
  call void @__asan_load2_noabort(i32 %65)
  %66 = load i16, ptr %ptr, align 4
  %conv16 = zext i16 %66 to i32
  %ptr17 = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %call3, i32 0, i32 7
  %67 = ptrtoint ptr %ptr17 to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %conv16, ptr %ptr17, align 4
  %ret_ip18 = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %call3, i32 0, i32 8
  %68 = ptrtoint ptr %ret_ip18 to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %ret_ip, ptr %ret_ip18, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %xchk_btree_cur_fsbno.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xchk_btree_error(ptr noundef %__data, ptr nocapture noundef readonly %sc, ptr nocapture noundef readonly %cur, i32 noundef %level, ptr noundef %ret_ip) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %bc_nlevels.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 7
  %27 = ptrtoint ptr %bc_nlevels.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %bc_nlevels.i, align 8
  %conv.i = zext i8 %28 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %level)
  %cmp.i = icmp sgt i32 %conv.i, %level
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end16.if.end.i_crit_edge

if.end16.if.end.i_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %if.end16
  %arrayidx.i69 = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level
  %29 = ptrtoint ptr %arrayidx.i69 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx.i69, align 8
  %tobool.not.i70 = icmp eq ptr %30, null
  br i1 %tobool.not.i70, label %land.lhs.true.i.if.end.i_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %bc_mp.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %31 = ptrtoint ptr %bc_mp.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %bc_mp.i, align 4
  %b_maps.i.i = getelementptr inbounds %struct.xfs_buf, ptr %30, i32 0, i32 24
  %33 = ptrtoint ptr %b_maps.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %b_maps.i.i, align 8
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %34, align 8
  %m_blkbb_log.i.i = getelementptr inbounds %struct.xfs_mount, ptr %32, i32 0, i32 28
  %37 = ptrtoint ptr %m_blkbb_log.i.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %m_blkbb_log.i.i, align 1
  %sh_prom.i.i = zext i8 %38 to i64
  %shr.i.i = ashr i64 %36, %sh_prom.i.i
  %sb_agblocks.i.i = getelementptr inbounds %struct.xfs_sb, ptr %32, i32 0, i32 11
  %39 = ptrtoint ptr %sb_agblocks.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %sb_agblocks.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %shr.i.i)
  %cmp168.i.i = icmp ult i64 %shr.i.i, 4294967296
  br i1 %cmp168.i.i, label %if.then172.i172.i, label %if.else178.i173.i, !prof !718

if.then172.i172.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %conv173.i.i = trunc i64 %shr.i.i to i32
  %conv173.i.i.frozen = freeze i32 %conv173.i.i
  %.frozen = freeze i32 %40
  %div176.i.i = udiv i32 %conv173.i.i.frozen, %.frozen
  %conv6175182.i = zext i32 %div176.i.i to i64
  %sb_agblklog176183.i = getelementptr inbounds %struct.xfs_sb, ptr %32, i32 0, i32 24
  %41 = ptrtoint ptr %sb_agblklog176183.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %sb_agblklog176183.i, align 4
  %sh_prom177184.i = zext i8 %42 to i64
  %shl178185.i = shl i64 %conv6175182.i, %sh_prom177184.i
  %43 = mul i32 %div176.i.i, %.frozen
  %rem174.i.i.decomposed = sub i32 %conv173.i.i.frozen, %43
  br label %xfs_daddr_to_agbno.exit.i

if.else178.i173.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %44 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %40, i64 %shr.i.i) #8
  %asmresult1.i.i.i = extractvalue { i64, i64 } %44, 1
  %conv6175.i = and i64 %asmresult1.i.i.i, 4294967295
  %sb_agblklog176.i = getelementptr inbounds %struct.xfs_sb, ptr %32, i32 0, i32 24
  %45 = ptrtoint ptr %sb_agblklog176.i to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %sb_agblklog176.i, align 4
  %sh_prom177.i = zext i8 %46 to i64
  %shl178.i = shl i64 %conv6175.i, %sh_prom177.i
  %asmresult.i266.i.i = extractvalue { i64, i64 } %44, 0
  %shr.i.i.i = lshr i64 %asmresult.i266.i.i, 32
  %conv.i.i.i = trunc i64 %shr.i.i.i to i32
  br label %xfs_daddr_to_agbno.exit.i

xfs_daddr_to_agbno.exit.i:                        ; preds = %if.else178.i173.i, %if.then172.i172.i
  %shl179.i = phi i64 [ %shl178185.i, %if.then172.i172.i ], [ %shl178.i, %if.else178.i173.i ]
  %__rem.0.i.i = phi i32 [ %rem174.i.i.decomposed, %if.then172.i172.i ], [ %conv.i.i.i, %if.else178.i173.i ]
  %conv15.i = zext i32 %__rem.0.i.i to i64
  %or.i = or i64 %shl179.i, %conv15.i
  br label %xchk_btree_cur_fsbno.exit

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %if.end16.if.end.i_crit_edge
  %sub.i = add nsw i32 %conv.i, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %level)
  %cmp18.i = icmp eq i32 %sub.i, %level
  br i1 %cmp18.i, label %land.lhs.true20.i, label %if.end.i.xchk_btree_cur_fsbno.exit_crit_edge

if.end.i.xchk_btree_cur_fsbno.exit_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

land.lhs.true20.i:                                ; preds = %if.end.i
  %bc_flags.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 4
  %47 = ptrtoint ptr %bc_flags.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %bc_flags.i, align 8
  %and.i71 = and i32 %48, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i71)
  %tobool21.not.i = icmp eq i32 %and.i71, 0
  br i1 %tobool21.not.i, label %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, label %if.then22.i

land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge: ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

if.then22.i:                                      ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  %49 = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 10
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %49, align 8
  %i_ino.i = getelementptr inbounds %struct.xfs_inode, ptr %51, i32 0, i32 4
  %52 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %i_ino.i, align 8
  %bc_mp23.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %54 = ptrtoint ptr %bc_mp23.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %bc_mp23.i, align 4
  %agino_log.i = getelementptr inbounds %struct.xfs_mount, ptr %55, i32 0, i32 64, i32 15
  %56 = ptrtoint ptr %agino_log.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %agino_log.i, align 8
  %sh_prom24.i = zext i32 %57 to i64
  %shr.i = lshr i64 %53, %sh_prom24.i
  %conv26.i = and i64 %shr.i, 4294967295
  %sb_agblklog29.i = getelementptr inbounds %struct.xfs_sb, ptr %55, i32 0, i32 24
  %58 = ptrtoint ptr %sb_agblklog29.i to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %sb_agblklog29.i, align 4
  %sh_prom31.i = zext i8 %59 to i64
  %shl32.i = shl i64 %conv26.i, %sh_prom31.i
  %conv35.i = trunc i64 %53 to i32
  %sb_inopblog.i = getelementptr inbounds %struct.xfs_sb, ptr %55, i32 0, i32 23
  %60 = ptrtoint ptr %sb_inopblog.i to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %sb_inopblog.i, align 1
  %conv38.i = zext i8 %61 to i32
  %shr39.i = lshr i32 %conv35.i, %conv38.i
  %notmask.i = shl nsw i64 -1, %sh_prom31.i
  %62 = trunc i64 %notmask.i to i32
  %conv47.i = xor i32 %62, -1
  %and48.i = and i32 %shr39.i, %conv47.i
  %conv49.i = zext i32 %and48.i to i64
  %or50.i = or i64 %shl32.i, %conv49.i
  br label %xchk_btree_cur_fsbno.exit

xchk_btree_cur_fsbno.exit:                        ; preds = %if.then22.i, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, %if.end.i.xchk_btree_cur_fsbno.exit_crit_edge, %xfs_daddr_to_agbno.exit.i
  %retval.0.i = phi i64 [ %or.i, %xfs_daddr_to_agbno.exit.i ], [ %or50.i, %if.then22.i ], [ -1, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge ], [ -1, %if.end.i.xchk_btree_cur_fsbno.exit_crit_edge ]
  %63 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %64, i32 0, i32 1
  %65 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %66, i32 0, i32 1
  %67 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %call13, i32 0, i32 1
  %69 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %68, ptr %dev, align 4
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %70 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %sm, align 4
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %71, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %call13, i32 0, i32 2
  %74 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %73, ptr %type, align 4
  %bc_btnum = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 5
  %75 = ptrtoint ptr %bc_btnum to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %bc_btnum, align 4
  %btnum = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %call13, i32 0, i32 3
  %77 = ptrtoint ptr %btnum to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 %76, ptr %btnum, align 4
  %level18 = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %call13, i32 0, i32 4
  %78 = ptrtoint ptr %level18 to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 %level, ptr %level18, align 4
  %bc_mp = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %79 = ptrtoint ptr %bc_mp to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog = getelementptr inbounds %struct.xfs_sb, ptr %80, i32 0, i32 24
  %81 = ptrtoint ptr %sb_agblklog to i32
  call void @__asan_load1_noabort(i32 %81)
  %82 = load i8, ptr %sb_agblklog, align 4
  %sh_prom = zext i8 %82 to i64
  %shr = lshr i64 %retval.0.i, %sh_prom
  %conv19 = trunc i64 %shr to i32
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %call13, i32 0, i32 5
  %83 = ptrtoint ptr %agno to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %conv19, ptr %agno, align 4
  %84 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog22 = getelementptr inbounds %struct.xfs_sb, ptr %84, i32 0, i32 24
  %85 = ptrtoint ptr %sb_agblklog22 to i32
  call void @__asan_load1_noabort(i32 %85)
  %86 = load i8, ptr %sb_agblklog22, align 4
  %conv23 = zext i8 %86 to i32
  %notmask.i72 = shl nsw i32 -1, %conv23
  %sub.i73 = xor i32 %notmask.i72, -1
  %87 = trunc i64 %retval.0.i to i32
  %conv27 = and i32 %sub.i73, %87
  %bno = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %call13, i32 0, i32 6
  %88 = ptrtoint ptr %bno to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 %conv27, ptr %bno, align 4
  %ptr = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level, i32 1
  %89 = ptrtoint ptr %ptr to i32
  call void @__asan_load2_noabort(i32 %89)
  %90 = load i16, ptr %ptr, align 4
  %conv29 = zext i16 %90 to i32
  %ptr30 = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %call13, i32 0, i32 7
  %91 = ptrtoint ptr %ptr30 to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %conv29, ptr %ptr30, align 4
  %ret_ip31 = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %call13, i32 0, i32 8
  %92 = ptrtoint ptr %ret_ip31 to i32
  call void @__asan_store4_noabort(i32 %92)
  store ptr %ret_ip, ptr %ret_ip31, align 4
  %93 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %rctx, align 4
  %95 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %94, ptr noundef %__data, i64 noundef 1, ptr noundef %96, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %xchk_btree_cur_fsbno.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xchk_ifork_btree_error(ptr noundef %__data, ptr nocapture noundef readonly %sc, ptr nocapture noundef readonly %cur, i32 noundef %level, ptr noundef %ret_ip) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 56) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %bc_nlevels.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 7
  %3 = ptrtoint ptr %bc_nlevels.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %bc_nlevels.i, align 8
  %conv.i = zext i8 %4 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %level)
  %cmp.i = icmp sgt i32 %conv.i, %level
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end5.if.end.i51_crit_edge

if.end5.if.end.i51_crit_edge:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i51

land.lhs.true.i:                                  ; preds = %if.end5
  %arrayidx.i = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i, align 8
  %tobool.not.i50 = icmp eq ptr %6, null
  br i1 %tobool.not.i50, label %land.lhs.true.i.if.end.i51_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i51_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i51

if.then.i:                                        ; preds = %land.lhs.true.i
  %bc_mp.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %7 = ptrtoint ptr %bc_mp.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %bc_mp.i, align 4
  %b_maps.i.i = getelementptr inbounds %struct.xfs_buf, ptr %6, i32 0, i32 24
  %9 = ptrtoint ptr %b_maps.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %b_maps.i.i, align 8
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %10, align 8
  %m_blkbb_log.i.i = getelementptr inbounds %struct.xfs_mount, ptr %8, i32 0, i32 28
  %13 = ptrtoint ptr %m_blkbb_log.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %m_blkbb_log.i.i, align 1
  %sh_prom.i.i = zext i8 %14 to i64
  %shr.i.i = ashr i64 %12, %sh_prom.i.i
  %sb_agblocks.i.i = getelementptr inbounds %struct.xfs_sb, ptr %8, i32 0, i32 11
  %15 = ptrtoint ptr %sb_agblocks.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %sb_agblocks.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %shr.i.i)
  %cmp168.i.i = icmp ult i64 %shr.i.i, 4294967296
  br i1 %cmp168.i.i, label %if.then172.i172.i, label %if.else178.i173.i, !prof !718

if.then172.i172.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %conv173.i.i = trunc i64 %shr.i.i to i32
  %conv173.i.i.frozen = freeze i32 %conv173.i.i
  %.frozen = freeze i32 %16
  %div176.i.i = udiv i32 %conv173.i.i.frozen, %.frozen
  %conv6175182.i = zext i32 %div176.i.i to i64
  %sb_agblklog176183.i = getelementptr inbounds %struct.xfs_sb, ptr %8, i32 0, i32 24
  %17 = ptrtoint ptr %sb_agblklog176183.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %sb_agblklog176183.i, align 4
  %sh_prom177184.i = zext i8 %18 to i64
  %shl178185.i = shl i64 %conv6175182.i, %sh_prom177184.i
  %19 = mul i32 %div176.i.i, %.frozen
  %rem174.i.i.decomposed = sub i32 %conv173.i.i.frozen, %19
  br label %xfs_daddr_to_agbno.exit.i

if.else178.i173.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %20 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %16, i64 %shr.i.i) #8
  %asmresult1.i.i.i = extractvalue { i64, i64 } %20, 1
  %conv6175.i = and i64 %asmresult1.i.i.i, 4294967295
  %sb_agblklog176.i = getelementptr inbounds %struct.xfs_sb, ptr %8, i32 0, i32 24
  %21 = ptrtoint ptr %sb_agblklog176.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %sb_agblklog176.i, align 4
  %sh_prom177.i = zext i8 %22 to i64
  %shl178.i = shl i64 %conv6175.i, %sh_prom177.i
  %asmresult.i266.i.i = extractvalue { i64, i64 } %20, 0
  %shr.i.i.i = lshr i64 %asmresult.i266.i.i, 32
  %conv.i.i.i = trunc i64 %shr.i.i.i to i32
  br label %xfs_daddr_to_agbno.exit.i

xfs_daddr_to_agbno.exit.i:                        ; preds = %if.else178.i173.i, %if.then172.i172.i
  %shl179.i = phi i64 [ %shl178185.i, %if.then172.i172.i ], [ %shl178.i, %if.else178.i173.i ]
  %__rem.0.i.i = phi i32 [ %rem174.i.i.decomposed, %if.then172.i172.i ], [ %conv.i.i.i, %if.else178.i173.i ]
  %conv15.i = zext i32 %__rem.0.i.i to i64
  %or.i = or i64 %shl179.i, %conv15.i
  br label %xchk_btree_cur_fsbno.exit

if.end.i51:                                       ; preds = %land.lhs.true.i.if.end.i51_crit_edge, %if.end5.if.end.i51_crit_edge
  %sub.i = add nsw i32 %conv.i, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %level)
  %cmp18.i = icmp eq i32 %sub.i, %level
  br i1 %cmp18.i, label %land.lhs.true20.i, label %if.end.i51.xchk_btree_cur_fsbno.exit_crit_edge

if.end.i51.xchk_btree_cur_fsbno.exit_crit_edge:   ; preds = %if.end.i51
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

land.lhs.true20.i:                                ; preds = %if.end.i51
  %bc_flags.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 4
  %23 = ptrtoint ptr %bc_flags.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %bc_flags.i, align 8
  %and.i52 = and i32 %24, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i52)
  %tobool21.not.i = icmp eq i32 %and.i52, 0
  br i1 %tobool21.not.i, label %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, label %if.then22.i

land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge: ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

if.then22.i:                                      ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  %25 = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 10
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %25, align 8
  %i_ino.i = getelementptr inbounds %struct.xfs_inode, ptr %27, i32 0, i32 4
  %28 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %i_ino.i, align 8
  %bc_mp23.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %30 = ptrtoint ptr %bc_mp23.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %bc_mp23.i, align 4
  %agino_log.i = getelementptr inbounds %struct.xfs_mount, ptr %31, i32 0, i32 64, i32 15
  %32 = ptrtoint ptr %agino_log.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %agino_log.i, align 8
  %sh_prom24.i = zext i32 %33 to i64
  %shr.i = lshr i64 %29, %sh_prom24.i
  %conv26.i = and i64 %shr.i, 4294967295
  %sb_agblklog29.i = getelementptr inbounds %struct.xfs_sb, ptr %31, i32 0, i32 24
  %34 = ptrtoint ptr %sb_agblklog29.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %sb_agblklog29.i, align 4
  %sh_prom31.i = zext i8 %35 to i64
  %shl32.i = shl i64 %conv26.i, %sh_prom31.i
  %conv35.i = trunc i64 %29 to i32
  %sb_inopblog.i = getelementptr inbounds %struct.xfs_sb, ptr %31, i32 0, i32 23
  %36 = ptrtoint ptr %sb_inopblog.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %sb_inopblog.i, align 1
  %conv38.i = zext i8 %37 to i32
  %shr39.i = lshr i32 %conv35.i, %conv38.i
  %notmask.i = shl nsw i64 -1, %sh_prom31.i
  %38 = trunc i64 %notmask.i to i32
  %conv47.i = xor i32 %38, -1
  %and48.i = and i32 %shr39.i, %conv47.i
  %conv49.i = zext i32 %and48.i to i64
  %or50.i = or i64 %shl32.i, %conv49.i
  br label %xchk_btree_cur_fsbno.exit

xchk_btree_cur_fsbno.exit:                        ; preds = %if.then22.i, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, %if.end.i51.xchk_btree_cur_fsbno.exit_crit_edge, %xfs_daddr_to_agbno.exit.i
  %retval.0.i53 = phi i64 [ %or.i, %xfs_daddr_to_agbno.exit.i ], [ %or50.i, %if.then22.i ], [ -1, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge ], [ -1, %if.end.i51.xchk_btree_cur_fsbno.exit_crit_edge ]
  %39 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call3, i32 0, i32 1
  %45 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %dev, align 8
  %ip = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 5
  %46 = ptrtoint ptr %ip to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %ip, align 4
  %i_ino = getelementptr inbounds %struct.xfs_inode, ptr %47, i32 0, i32 4
  %48 = ptrtoint ptr %i_ino to i32
  call void @__asan_load8_noabort(i32 %48)
  %49 = load i64, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call3, i32 0, i32 2
  %50 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %50)
  store i64 %49, ptr %ino, align 8
  %51 = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 10
  %whichfork = getelementptr inbounds %struct.xfs_btree_cur_ino, ptr %51, i32 0, i32 4
  %52 = ptrtoint ptr %whichfork to i32
  call void @__asan_load1_noabort(i32 %52)
  %53 = load i8, ptr %whichfork, align 2
  %conv = zext i8 %53 to i32
  %whichfork7 = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call3, i32 0, i32 3
  %54 = ptrtoint ptr %whichfork7 to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %conv, ptr %whichfork7, align 8
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %55 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %sm, align 4
  %57 = ptrtoint ptr %56 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %56, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call3, i32 0, i32 4
  %59 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %59)
  store i32 %58, ptr %type, align 4
  %bc_btnum = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 5
  %60 = ptrtoint ptr %bc_btnum to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %bc_btnum, align 4
  %btnum = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call3, i32 0, i32 5
  %62 = ptrtoint ptr %btnum to i32
  call void @__asan_store4_noabort(i32 %62)
  store i32 %61, ptr %btnum, align 8
  %level8 = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call3, i32 0, i32 6
  %63 = ptrtoint ptr %level8 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %level, ptr %level8, align 4
  %bc_mp = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %64 = ptrtoint ptr %bc_mp to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog = getelementptr inbounds %struct.xfs_sb, ptr %65, i32 0, i32 24
  %66 = ptrtoint ptr %sb_agblklog to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %sb_agblklog, align 4
  %sh_prom = zext i8 %67 to i64
  %shr = lshr i64 %retval.0.i53, %sh_prom
  %conv10 = trunc i64 %shr to i32
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call3, i32 0, i32 7
  %68 = ptrtoint ptr %agno to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %conv10, ptr %agno, align 8
  %69 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog13 = getelementptr inbounds %struct.xfs_sb, ptr %69, i32 0, i32 24
  %70 = ptrtoint ptr %sb_agblklog13 to i32
  call void @__asan_load1_noabort(i32 %70)
  %71 = load i8, ptr %sb_agblklog13, align 4
  %conv14 = zext i8 %71 to i32
  %notmask.i54 = shl nsw i32 -1, %conv14
  %sub.i55 = xor i32 %notmask.i54, -1
  %72 = trunc i64 %retval.0.i53 to i32
  %conv17 = and i32 %sub.i55, %72
  %bno = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call3, i32 0, i32 8
  %73 = ptrtoint ptr %bno to i32
  call void @__asan_store4_noabort(i32 %73)
  store i32 %conv17, ptr %bno, align 4
  %ptr = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level, i32 1
  %74 = ptrtoint ptr %ptr to i32
  call void @__asan_load2_noabort(i32 %74)
  %75 = load i16, ptr %ptr, align 4
  %conv18 = zext i16 %75 to i32
  %ptr19 = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call3, i32 0, i32 9
  %76 = ptrtoint ptr %ptr19 to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %conv18, ptr %ptr19, align 8
  %ret_ip20 = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call3, i32 0, i32 10
  %77 = ptrtoint ptr %ret_ip20 to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr %ret_ip, ptr %ret_ip20, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %xchk_btree_cur_fsbno.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xchk_ifork_btree_error(ptr noundef %__data, ptr nocapture noundef readonly %sc, ptr nocapture noundef readonly %cur, i32 noundef %level, ptr noundef %ret_ip) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %bc_nlevels.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 7
  %27 = ptrtoint ptr %bc_nlevels.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %bc_nlevels.i, align 8
  %conv.i = zext i8 %28 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %level)
  %cmp.i = icmp sgt i32 %conv.i, %level
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end16.if.end.i_crit_edge

if.end16.if.end.i_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %if.end16
  %arrayidx.i75 = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level
  %29 = ptrtoint ptr %arrayidx.i75 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx.i75, align 8
  %tobool.not.i76 = icmp eq ptr %30, null
  br i1 %tobool.not.i76, label %land.lhs.true.i.if.end.i_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %bc_mp.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %31 = ptrtoint ptr %bc_mp.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %bc_mp.i, align 4
  %b_maps.i.i = getelementptr inbounds %struct.xfs_buf, ptr %30, i32 0, i32 24
  %33 = ptrtoint ptr %b_maps.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %b_maps.i.i, align 8
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %34, align 8
  %m_blkbb_log.i.i = getelementptr inbounds %struct.xfs_mount, ptr %32, i32 0, i32 28
  %37 = ptrtoint ptr %m_blkbb_log.i.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %m_blkbb_log.i.i, align 1
  %sh_prom.i.i = zext i8 %38 to i64
  %shr.i.i = ashr i64 %36, %sh_prom.i.i
  %sb_agblocks.i.i = getelementptr inbounds %struct.xfs_sb, ptr %32, i32 0, i32 11
  %39 = ptrtoint ptr %sb_agblocks.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %sb_agblocks.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %shr.i.i)
  %cmp168.i.i = icmp ult i64 %shr.i.i, 4294967296
  br i1 %cmp168.i.i, label %if.then172.i172.i, label %if.else178.i173.i, !prof !718

if.then172.i172.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %conv173.i.i = trunc i64 %shr.i.i to i32
  %conv173.i.i.frozen = freeze i32 %conv173.i.i
  %.frozen = freeze i32 %40
  %div176.i.i = udiv i32 %conv173.i.i.frozen, %.frozen
  %conv6175182.i = zext i32 %div176.i.i to i64
  %sb_agblklog176183.i = getelementptr inbounds %struct.xfs_sb, ptr %32, i32 0, i32 24
  %41 = ptrtoint ptr %sb_agblklog176183.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %sb_agblklog176183.i, align 4
  %sh_prom177184.i = zext i8 %42 to i64
  %shl178185.i = shl i64 %conv6175182.i, %sh_prom177184.i
  %43 = mul i32 %div176.i.i, %.frozen
  %rem174.i.i.decomposed = sub i32 %conv173.i.i.frozen, %43
  br label %xfs_daddr_to_agbno.exit.i

if.else178.i173.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %44 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %40, i64 %shr.i.i) #8
  %asmresult1.i.i.i = extractvalue { i64, i64 } %44, 1
  %conv6175.i = and i64 %asmresult1.i.i.i, 4294967295
  %sb_agblklog176.i = getelementptr inbounds %struct.xfs_sb, ptr %32, i32 0, i32 24
  %45 = ptrtoint ptr %sb_agblklog176.i to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %sb_agblklog176.i, align 4
  %sh_prom177.i = zext i8 %46 to i64
  %shl178.i = shl i64 %conv6175.i, %sh_prom177.i
  %asmresult.i266.i.i = extractvalue { i64, i64 } %44, 0
  %shr.i.i.i = lshr i64 %asmresult.i266.i.i, 32
  %conv.i.i.i = trunc i64 %shr.i.i.i to i32
  br label %xfs_daddr_to_agbno.exit.i

xfs_daddr_to_agbno.exit.i:                        ; preds = %if.else178.i173.i, %if.then172.i172.i
  %shl179.i = phi i64 [ %shl178185.i, %if.then172.i172.i ], [ %shl178.i, %if.else178.i173.i ]
  %__rem.0.i.i = phi i32 [ %rem174.i.i.decomposed, %if.then172.i172.i ], [ %conv.i.i.i, %if.else178.i173.i ]
  %conv15.i = zext i32 %__rem.0.i.i to i64
  %or.i = or i64 %shl179.i, %conv15.i
  br label %xchk_btree_cur_fsbno.exit

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %if.end16.if.end.i_crit_edge
  %sub.i = add nsw i32 %conv.i, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %level)
  %cmp18.i = icmp eq i32 %sub.i, %level
  br i1 %cmp18.i, label %land.lhs.true20.i, label %if.end.i.xchk_btree_cur_fsbno.exit_crit_edge

if.end.i.xchk_btree_cur_fsbno.exit_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

land.lhs.true20.i:                                ; preds = %if.end.i
  %bc_flags.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 4
  %47 = ptrtoint ptr %bc_flags.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %bc_flags.i, align 8
  %and.i77 = and i32 %48, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i77)
  %tobool21.not.i = icmp eq i32 %and.i77, 0
  br i1 %tobool21.not.i, label %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, label %if.then22.i

land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge: ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

if.then22.i:                                      ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  %49 = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 10
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %49, align 8
  %i_ino.i = getelementptr inbounds %struct.xfs_inode, ptr %51, i32 0, i32 4
  %52 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %i_ino.i, align 8
  %bc_mp23.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %54 = ptrtoint ptr %bc_mp23.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %bc_mp23.i, align 4
  %agino_log.i = getelementptr inbounds %struct.xfs_mount, ptr %55, i32 0, i32 64, i32 15
  %56 = ptrtoint ptr %agino_log.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %agino_log.i, align 8
  %sh_prom24.i = zext i32 %57 to i64
  %shr.i = lshr i64 %53, %sh_prom24.i
  %conv26.i = and i64 %shr.i, 4294967295
  %sb_agblklog29.i = getelementptr inbounds %struct.xfs_sb, ptr %55, i32 0, i32 24
  %58 = ptrtoint ptr %sb_agblklog29.i to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %sb_agblklog29.i, align 4
  %sh_prom31.i = zext i8 %59 to i64
  %shl32.i = shl i64 %conv26.i, %sh_prom31.i
  %conv35.i = trunc i64 %53 to i32
  %sb_inopblog.i = getelementptr inbounds %struct.xfs_sb, ptr %55, i32 0, i32 23
  %60 = ptrtoint ptr %sb_inopblog.i to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %sb_inopblog.i, align 1
  %conv38.i = zext i8 %61 to i32
  %shr39.i = lshr i32 %conv35.i, %conv38.i
  %notmask.i = shl nsw i64 -1, %sh_prom31.i
  %62 = trunc i64 %notmask.i to i32
  %conv47.i = xor i32 %62, -1
  %and48.i = and i32 %shr39.i, %conv47.i
  %conv49.i = zext i32 %and48.i to i64
  %or50.i = or i64 %shl32.i, %conv49.i
  br label %xchk_btree_cur_fsbno.exit

xchk_btree_cur_fsbno.exit:                        ; preds = %if.then22.i, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, %if.end.i.xchk_btree_cur_fsbno.exit_crit_edge, %xfs_daddr_to_agbno.exit.i
  %retval.0.i = phi i64 [ %or.i, %xfs_daddr_to_agbno.exit.i ], [ %or50.i, %if.then22.i ], [ -1, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge ], [ -1, %if.end.i.xchk_btree_cur_fsbno.exit_crit_edge ]
  %63 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %64, i32 0, i32 1
  %65 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %66, i32 0, i32 1
  %67 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call13, i32 0, i32 1
  %69 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %68, ptr %dev, align 8
  %ip = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 5
  %70 = ptrtoint ptr %ip to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %ip, align 4
  %i_ino = getelementptr inbounds %struct.xfs_inode, ptr %71, i32 0, i32 4
  %72 = ptrtoint ptr %i_ino to i32
  call void @__asan_load8_noabort(i32 %72)
  %73 = load i64, ptr %i_ino, align 8
  %ino = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call13, i32 0, i32 2
  %74 = ptrtoint ptr %ino to i32
  call void @__asan_store8_noabort(i32 %74)
  store i64 %73, ptr %ino, align 8
  %75 = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 10
  %whichfork = getelementptr inbounds %struct.xfs_btree_cur_ino, ptr %75, i32 0, i32 4
  %76 = ptrtoint ptr %whichfork to i32
  call void @__asan_load1_noabort(i32 %76)
  %77 = load i8, ptr %whichfork, align 2
  %conv = zext i8 %77 to i32
  %whichfork18 = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call13, i32 0, i32 3
  %78 = ptrtoint ptr %whichfork18 to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 %conv, ptr %whichfork18, align 8
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %79 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %sm, align 4
  %81 = ptrtoint ptr %80 to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load i32, ptr %80, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call13, i32 0, i32 4
  %83 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 %82, ptr %type, align 4
  %bc_btnum = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 5
  %84 = ptrtoint ptr %bc_btnum to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %bc_btnum, align 4
  %btnum = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call13, i32 0, i32 5
  %86 = ptrtoint ptr %btnum to i32
  call void @__asan_store4_noabort(i32 %86)
  store i32 %85, ptr %btnum, align 8
  %level19 = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call13, i32 0, i32 6
  %87 = ptrtoint ptr %level19 to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 %level, ptr %level19, align 4
  %bc_mp = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %88 = ptrtoint ptr %bc_mp to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog = getelementptr inbounds %struct.xfs_sb, ptr %89, i32 0, i32 24
  %90 = ptrtoint ptr %sb_agblklog to i32
  call void @__asan_load1_noabort(i32 %90)
  %91 = load i8, ptr %sb_agblklog, align 4
  %sh_prom = zext i8 %91 to i64
  %shr = lshr i64 %retval.0.i, %sh_prom
  %conv21 = trunc i64 %shr to i32
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call13, i32 0, i32 7
  %92 = ptrtoint ptr %agno to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 %conv21, ptr %agno, align 8
  %93 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog24 = getelementptr inbounds %struct.xfs_sb, ptr %93, i32 0, i32 24
  %94 = ptrtoint ptr %sb_agblklog24 to i32
  call void @__asan_load1_noabort(i32 %94)
  %95 = load i8, ptr %sb_agblklog24, align 4
  %conv25 = zext i8 %95 to i32
  %notmask.i78 = shl nsw i32 -1, %conv25
  %sub.i79 = xor i32 %notmask.i78, -1
  %96 = trunc i64 %retval.0.i to i32
  %conv29 = and i32 %sub.i79, %96
  %bno = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call13, i32 0, i32 8
  %97 = ptrtoint ptr %bno to i32
  call void @__asan_store4_noabort(i32 %97)
  store i32 %conv29, ptr %bno, align 4
  %ptr = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level, i32 1
  %98 = ptrtoint ptr %ptr to i32
  call void @__asan_load2_noabort(i32 %98)
  %99 = load i16, ptr %ptr, align 4
  %conv31 = zext i16 %99 to i32
  %ptr32 = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call13, i32 0, i32 9
  %100 = ptrtoint ptr %ptr32 to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 %conv31, ptr %ptr32, align 8
  %ret_ip33 = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %call13, i32 0, i32 10
  %101 = ptrtoint ptr %ret_ip33 to i32
  call void @__asan_store4_noabort(i32 %101)
  store ptr %ret_ip, ptr %ret_ip33, align 4
  %102 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %102)
  %103 = load i32, ptr %rctx, align 4
  %104 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %104)
  %105 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 60, i32 noundef %103, ptr noundef %__data, i64 noundef 1, ptr noundef %105, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %xchk_btree_cur_fsbno.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xchk_sbtree_class(ptr noundef %__data, ptr nocapture noundef readonly %sc, ptr nocapture noundef readonly %cur, i32 noundef %level) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %bc_nlevels.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 7
  %3 = ptrtoint ptr %bc_nlevels.i to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %bc_nlevels.i, align 8
  %conv.i = zext i8 %4 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %level)
  %cmp.i = icmp sgt i32 %conv.i, %level
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end5.if.end.i45_crit_edge

if.end5.if.end.i45_crit_edge:                     ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i45

land.lhs.true.i:                                  ; preds = %if.end5
  %arrayidx.i = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx.i, align 8
  %tobool.not.i44 = icmp eq ptr %6, null
  br i1 %tobool.not.i44, label %land.lhs.true.i.if.end.i45_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i45_crit_edge:             ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i45

if.then.i:                                        ; preds = %land.lhs.true.i
  %bc_mp.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %7 = ptrtoint ptr %bc_mp.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %bc_mp.i, align 4
  %b_maps.i.i = getelementptr inbounds %struct.xfs_buf, ptr %6, i32 0, i32 24
  %9 = ptrtoint ptr %b_maps.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %b_maps.i.i, align 8
  %11 = ptrtoint ptr %10 to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %10, align 8
  %m_blkbb_log.i.i = getelementptr inbounds %struct.xfs_mount, ptr %8, i32 0, i32 28
  %13 = ptrtoint ptr %m_blkbb_log.i.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %m_blkbb_log.i.i, align 1
  %sh_prom.i.i = zext i8 %14 to i64
  %shr.i.i = ashr i64 %12, %sh_prom.i.i
  %sb_agblocks.i.i = getelementptr inbounds %struct.xfs_sb, ptr %8, i32 0, i32 11
  %15 = ptrtoint ptr %sb_agblocks.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %sb_agblocks.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %shr.i.i)
  %cmp168.i.i = icmp ult i64 %shr.i.i, 4294967296
  br i1 %cmp168.i.i, label %if.then172.i172.i, label %if.else178.i173.i, !prof !718

if.then172.i172.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %conv173.i.i = trunc i64 %shr.i.i to i32
  %conv173.i.i.frozen = freeze i32 %conv173.i.i
  %.frozen = freeze i32 %16
  %div176.i.i = udiv i32 %conv173.i.i.frozen, %.frozen
  %conv6175182.i = zext i32 %div176.i.i to i64
  %sb_agblklog176183.i = getelementptr inbounds %struct.xfs_sb, ptr %8, i32 0, i32 24
  %17 = ptrtoint ptr %sb_agblklog176183.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load i8, ptr %sb_agblklog176183.i, align 4
  %sh_prom177184.i = zext i8 %18 to i64
  %shl178185.i = shl i64 %conv6175182.i, %sh_prom177184.i
  %19 = mul i32 %div176.i.i, %.frozen
  %rem174.i.i.decomposed = sub i32 %conv173.i.i.frozen, %19
  br label %xfs_daddr_to_agbno.exit.i

if.else178.i173.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %20 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %16, i64 %shr.i.i) #8
  %asmresult1.i.i.i = extractvalue { i64, i64 } %20, 1
  %conv6175.i = and i64 %asmresult1.i.i.i, 4294967295
  %sb_agblklog176.i = getelementptr inbounds %struct.xfs_sb, ptr %8, i32 0, i32 24
  %21 = ptrtoint ptr %sb_agblklog176.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %sb_agblklog176.i, align 4
  %sh_prom177.i = zext i8 %22 to i64
  %shl178.i = shl i64 %conv6175.i, %sh_prom177.i
  %asmresult.i266.i.i = extractvalue { i64, i64 } %20, 0
  %shr.i.i.i = lshr i64 %asmresult.i266.i.i, 32
  %conv.i.i.i = trunc i64 %shr.i.i.i to i32
  br label %xfs_daddr_to_agbno.exit.i

xfs_daddr_to_agbno.exit.i:                        ; preds = %if.else178.i173.i, %if.then172.i172.i
  %shl179.i = phi i64 [ %shl178185.i, %if.then172.i172.i ], [ %shl178.i, %if.else178.i173.i ]
  %__rem.0.i.i = phi i32 [ %rem174.i.i.decomposed, %if.then172.i172.i ], [ %conv.i.i.i, %if.else178.i173.i ]
  %conv15.i = zext i32 %__rem.0.i.i to i64
  %or.i = or i64 %shl179.i, %conv15.i
  br label %xchk_btree_cur_fsbno.exit

if.end.i45:                                       ; preds = %land.lhs.true.i.if.end.i45_crit_edge, %if.end5.if.end.i45_crit_edge
  %sub.i = add nsw i32 %conv.i, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %level)
  %cmp18.i = icmp eq i32 %sub.i, %level
  br i1 %cmp18.i, label %land.lhs.true20.i, label %if.end.i45.xchk_btree_cur_fsbno.exit_crit_edge

if.end.i45.xchk_btree_cur_fsbno.exit_crit_edge:   ; preds = %if.end.i45
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

land.lhs.true20.i:                                ; preds = %if.end.i45
  %bc_flags.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 4
  %23 = ptrtoint ptr %bc_flags.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %bc_flags.i, align 8
  %and.i46 = and i32 %24, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i46)
  %tobool21.not.i = icmp eq i32 %and.i46, 0
  br i1 %tobool21.not.i, label %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, label %if.then22.i

land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge: ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

if.then22.i:                                      ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  %25 = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 10
  %26 = ptrtoint ptr %25 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %25, align 8
  %i_ino.i = getelementptr inbounds %struct.xfs_inode, ptr %27, i32 0, i32 4
  %28 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %i_ino.i, align 8
  %bc_mp23.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %30 = ptrtoint ptr %bc_mp23.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %bc_mp23.i, align 4
  %agino_log.i = getelementptr inbounds %struct.xfs_mount, ptr %31, i32 0, i32 64, i32 15
  %32 = ptrtoint ptr %agino_log.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %agino_log.i, align 8
  %sh_prom24.i = zext i32 %33 to i64
  %shr.i = lshr i64 %29, %sh_prom24.i
  %conv26.i = and i64 %shr.i, 4294967295
  %sb_agblklog29.i = getelementptr inbounds %struct.xfs_sb, ptr %31, i32 0, i32 24
  %34 = ptrtoint ptr %sb_agblklog29.i to i32
  call void @__asan_load1_noabort(i32 %34)
  %35 = load i8, ptr %sb_agblklog29.i, align 4
  %sh_prom31.i = zext i8 %35 to i64
  %shl32.i = shl i64 %conv26.i, %sh_prom31.i
  %conv35.i = trunc i64 %29 to i32
  %sb_inopblog.i = getelementptr inbounds %struct.xfs_sb, ptr %31, i32 0, i32 23
  %36 = ptrtoint ptr %sb_inopblog.i to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %sb_inopblog.i, align 1
  %conv38.i = zext i8 %37 to i32
  %shr39.i = lshr i32 %conv35.i, %conv38.i
  %notmask.i = shl nsw i64 -1, %sh_prom31.i
  %38 = trunc i64 %notmask.i to i32
  %conv47.i = xor i32 %38, -1
  %and48.i = and i32 %shr39.i, %conv47.i
  %conv49.i = zext i32 %and48.i to i64
  %or50.i = or i64 %shl32.i, %conv49.i
  br label %xchk_btree_cur_fsbno.exit

xchk_btree_cur_fsbno.exit:                        ; preds = %if.then22.i, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, %if.end.i45.xchk_btree_cur_fsbno.exit_crit_edge, %xfs_daddr_to_agbno.exit.i
  %retval.0.i47 = phi i64 [ %or.i, %xfs_daddr_to_agbno.exit.i ], [ %or50.i, %if.then22.i ], [ -1, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge ], [ -1, %if.end.i45.xchk_btree_cur_fsbno.exit_crit_edge ]
  %39 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %40, i32 0, i32 1
  %41 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %call3, i32 0, i32 1
  %45 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %44, ptr %dev, align 4
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %46 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %sm, align 4
  %48 = ptrtoint ptr %47 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %47, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %call3, i32 0, i32 2
  %50 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %49, ptr %type, align 4
  %bc_btnum = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 5
  %51 = ptrtoint ptr %bc_btnum to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %bc_btnum, align 4
  %btnum = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %call3, i32 0, i32 3
  %53 = ptrtoint ptr %btnum to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %52, ptr %btnum, align 4
  %bc_mp = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %54 = ptrtoint ptr %bc_mp to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog = getelementptr inbounds %struct.xfs_sb, ptr %55, i32 0, i32 24
  %56 = ptrtoint ptr %sb_agblklog to i32
  call void @__asan_load1_noabort(i32 %56)
  %57 = load i8, ptr %sb_agblklog, align 4
  %sh_prom = zext i8 %57 to i64
  %shr = lshr i64 %retval.0.i47, %sh_prom
  %conv7 = trunc i64 %shr to i32
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %call3, i32 0, i32 4
  %58 = ptrtoint ptr %agno to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %conv7, ptr %agno, align 4
  %59 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog10 = getelementptr inbounds %struct.xfs_sb, ptr %59, i32 0, i32 24
  %60 = ptrtoint ptr %sb_agblklog10 to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %sb_agblklog10, align 4
  %conv11 = zext i8 %61 to i32
  %notmask.i48 = shl nsw i32 -1, %conv11
  %sub.i49 = xor i32 %notmask.i48, -1
  %62 = trunc i64 %retval.0.i47 to i32
  %conv14 = and i32 %sub.i49, %62
  %bno = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %call3, i32 0, i32 5
  %63 = ptrtoint ptr %bno to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %conv14, ptr %bno, align 4
  %level15 = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %call3, i32 0, i32 6
  %64 = ptrtoint ptr %level15 to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 %level, ptr %level15, align 4
  %65 = ptrtoint ptr %bc_nlevels.i to i32
  call void @__asan_load1_noabort(i32 %65)
  %66 = load i8, ptr %bc_nlevels.i, align 8
  %conv16 = zext i8 %66 to i32
  %nlevels = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %call3, i32 0, i32 7
  %67 = ptrtoint ptr %nlevels to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %conv16, ptr %nlevels, align 4
  %ptr = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level, i32 1
  %68 = ptrtoint ptr %ptr to i32
  call void @__asan_load2_noabort(i32 %68)
  %69 = load i16, ptr %ptr, align 4
  %conv17 = zext i16 %69 to i32
  %ptr18 = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %call3, i32 0, i32 8
  %70 = ptrtoint ptr %ptr18 to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %conv17, ptr %ptr18, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %xchk_btree_cur_fsbno.exit, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xchk_sbtree_class(ptr noundef %__data, ptr nocapture noundef readonly %sc, ptr nocapture noundef readonly %cur, i32 noundef %level) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %bc_nlevels.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 7
  %27 = ptrtoint ptr %bc_nlevels.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %bc_nlevels.i, align 8
  %conv.i = zext i8 %28 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %level)
  %cmp.i = icmp sgt i32 %conv.i, %level
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end16.if.end.i_crit_edge

if.end16.if.end.i_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i

land.lhs.true.i:                                  ; preds = %if.end16
  %arrayidx.i69 = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level
  %29 = ptrtoint ptr %arrayidx.i69 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx.i69, align 8
  %tobool.not.i70 = icmp eq ptr %30, null
  br i1 %tobool.not.i70, label %land.lhs.true.i.if.end.i_crit_edge, label %if.then.i

land.lhs.true.i.if.end.i_crit_edge:               ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end.i

if.then.i:                                        ; preds = %land.lhs.true.i
  %bc_mp.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %31 = ptrtoint ptr %bc_mp.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %bc_mp.i, align 4
  %b_maps.i.i = getelementptr inbounds %struct.xfs_buf, ptr %30, i32 0, i32 24
  %33 = ptrtoint ptr %b_maps.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %b_maps.i.i, align 8
  %35 = ptrtoint ptr %34 to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %34, align 8
  %m_blkbb_log.i.i = getelementptr inbounds %struct.xfs_mount, ptr %32, i32 0, i32 28
  %37 = ptrtoint ptr %m_blkbb_log.i.i to i32
  call void @__asan_load1_noabort(i32 %37)
  %38 = load i8, ptr %m_blkbb_log.i.i, align 1
  %sh_prom.i.i = zext i8 %38 to i64
  %shr.i.i = ashr i64 %36, %sh_prom.i.i
  %sb_agblocks.i.i = getelementptr inbounds %struct.xfs_sb, ptr %32, i32 0, i32 11
  %39 = ptrtoint ptr %sb_agblocks.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %sb_agblocks.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %shr.i.i)
  %cmp168.i.i = icmp ult i64 %shr.i.i, 4294967296
  br i1 %cmp168.i.i, label %if.then172.i172.i, label %if.else178.i173.i, !prof !718

if.then172.i172.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %conv173.i.i = trunc i64 %shr.i.i to i32
  %conv173.i.i.frozen = freeze i32 %conv173.i.i
  %.frozen = freeze i32 %40
  %div176.i.i = udiv i32 %conv173.i.i.frozen, %.frozen
  %conv6175182.i = zext i32 %div176.i.i to i64
  %sb_agblklog176183.i = getelementptr inbounds %struct.xfs_sb, ptr %32, i32 0, i32 24
  %41 = ptrtoint ptr %sb_agblklog176183.i to i32
  call void @__asan_load1_noabort(i32 %41)
  %42 = load i8, ptr %sb_agblklog176183.i, align 4
  %sh_prom177184.i = zext i8 %42 to i64
  %shl178185.i = shl i64 %conv6175182.i, %sh_prom177184.i
  %43 = mul i32 %div176.i.i, %.frozen
  %rem174.i.i.decomposed = sub i32 %conv173.i.i.frozen, %43
  br label %xfs_daddr_to_agbno.exit.i

if.else178.i173.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #7
  %44 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %40, i64 %shr.i.i) #8
  %asmresult1.i.i.i = extractvalue { i64, i64 } %44, 1
  %conv6175.i = and i64 %asmresult1.i.i.i, 4294967295
  %sb_agblklog176.i = getelementptr inbounds %struct.xfs_sb, ptr %32, i32 0, i32 24
  %45 = ptrtoint ptr %sb_agblklog176.i to i32
  call void @__asan_load1_noabort(i32 %45)
  %46 = load i8, ptr %sb_agblklog176.i, align 4
  %sh_prom177.i = zext i8 %46 to i64
  %shl178.i = shl i64 %conv6175.i, %sh_prom177.i
  %asmresult.i266.i.i = extractvalue { i64, i64 } %44, 0
  %shr.i.i.i = lshr i64 %asmresult.i266.i.i, 32
  %conv.i.i.i = trunc i64 %shr.i.i.i to i32
  br label %xfs_daddr_to_agbno.exit.i

xfs_daddr_to_agbno.exit.i:                        ; preds = %if.else178.i173.i, %if.then172.i172.i
  %shl179.i = phi i64 [ %shl178185.i, %if.then172.i172.i ], [ %shl178.i, %if.else178.i173.i ]
  %__rem.0.i.i = phi i32 [ %rem174.i.i.decomposed, %if.then172.i172.i ], [ %conv.i.i.i, %if.else178.i173.i ]
  %conv15.i = zext i32 %__rem.0.i.i to i64
  %or.i = or i64 %shl179.i, %conv15.i
  br label %xchk_btree_cur_fsbno.exit

if.end.i:                                         ; preds = %land.lhs.true.i.if.end.i_crit_edge, %if.end16.if.end.i_crit_edge
  %sub.i = add nsw i32 %conv.i, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %level)
  %cmp18.i = icmp eq i32 %sub.i, %level
  br i1 %cmp18.i, label %land.lhs.true20.i, label %if.end.i.xchk_btree_cur_fsbno.exit_crit_edge

if.end.i.xchk_btree_cur_fsbno.exit_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

land.lhs.true20.i:                                ; preds = %if.end.i
  %bc_flags.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 4
  %47 = ptrtoint ptr %bc_flags.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %bc_flags.i, align 8
  %and.i71 = and i32 %48, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i71)
  %tobool21.not.i = icmp eq i32 %and.i71, 0
  br i1 %tobool21.not.i, label %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, label %if.then22.i

land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge: ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %xchk_btree_cur_fsbno.exit

if.then22.i:                                      ; preds = %land.lhs.true20.i
  call void @__sanitizer_cov_trace_pc() #7
  %49 = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 10
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %49, align 8
  %i_ino.i = getelementptr inbounds %struct.xfs_inode, ptr %51, i32 0, i32 4
  %52 = ptrtoint ptr %i_ino.i to i32
  call void @__asan_load8_noabort(i32 %52)
  %53 = load i64, ptr %i_ino.i, align 8
  %bc_mp23.i = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %54 = ptrtoint ptr %bc_mp23.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %bc_mp23.i, align 4
  %agino_log.i = getelementptr inbounds %struct.xfs_mount, ptr %55, i32 0, i32 64, i32 15
  %56 = ptrtoint ptr %agino_log.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %agino_log.i, align 8
  %sh_prom24.i = zext i32 %57 to i64
  %shr.i = lshr i64 %53, %sh_prom24.i
  %conv26.i = and i64 %shr.i, 4294967295
  %sb_agblklog29.i = getelementptr inbounds %struct.xfs_sb, ptr %55, i32 0, i32 24
  %58 = ptrtoint ptr %sb_agblklog29.i to i32
  call void @__asan_load1_noabort(i32 %58)
  %59 = load i8, ptr %sb_agblklog29.i, align 4
  %sh_prom31.i = zext i8 %59 to i64
  %shl32.i = shl i64 %conv26.i, %sh_prom31.i
  %conv35.i = trunc i64 %53 to i32
  %sb_inopblog.i = getelementptr inbounds %struct.xfs_sb, ptr %55, i32 0, i32 23
  %60 = ptrtoint ptr %sb_inopblog.i to i32
  call void @__asan_load1_noabort(i32 %60)
  %61 = load i8, ptr %sb_inopblog.i, align 1
  %conv38.i = zext i8 %61 to i32
  %shr39.i = lshr i32 %conv35.i, %conv38.i
  %notmask.i = shl nsw i64 -1, %sh_prom31.i
  %62 = trunc i64 %notmask.i to i32
  %conv47.i = xor i32 %62, -1
  %and48.i = and i32 %shr39.i, %conv47.i
  %conv49.i = zext i32 %and48.i to i64
  %or50.i = or i64 %shl32.i, %conv49.i
  br label %xchk_btree_cur_fsbno.exit

xchk_btree_cur_fsbno.exit:                        ; preds = %if.then22.i, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge, %if.end.i.xchk_btree_cur_fsbno.exit_crit_edge, %xfs_daddr_to_agbno.exit.i
  %retval.0.i = phi i64 [ %or.i, %xfs_daddr_to_agbno.exit.i ], [ %or50.i, %if.then22.i ], [ -1, %land.lhs.true20.i.xchk_btree_cur_fsbno.exit_crit_edge ], [ -1, %if.end.i.xchk_btree_cur_fsbno.exit_crit_edge ]
  %63 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %64, i32 0, i32 1
  %65 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %66, i32 0, i32 1
  %67 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %call13, i32 0, i32 1
  %69 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 %68, ptr %dev, align 4
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %70 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %sm, align 4
  %72 = ptrtoint ptr %71 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %71, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %call13, i32 0, i32 2
  %74 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %73, ptr %type, align 4
  %bc_btnum = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 5
  %75 = ptrtoint ptr %bc_btnum to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %bc_btnum, align 4
  %btnum = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %call13, i32 0, i32 3
  %77 = ptrtoint ptr %btnum to i32
  call void @__asan_store4_noabort(i32 %77)
  store i32 %76, ptr %btnum, align 4
  %bc_mp = getelementptr inbounds %struct.xfs_btree_cur, ptr %cur, i32 0, i32 1
  %78 = ptrtoint ptr %bc_mp to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog = getelementptr inbounds %struct.xfs_sb, ptr %79, i32 0, i32 24
  %80 = ptrtoint ptr %sb_agblklog to i32
  call void @__asan_load1_noabort(i32 %80)
  %81 = load i8, ptr %sb_agblklog, align 4
  %sh_prom = zext i8 %81 to i64
  %shr = lshr i64 %retval.0.i, %sh_prom
  %conv18 = trunc i64 %shr to i32
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %call13, i32 0, i32 4
  %82 = ptrtoint ptr %agno to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 %conv18, ptr %agno, align 4
  %83 = load ptr, ptr %bc_mp, align 4
  %sb_agblklog21 = getelementptr inbounds %struct.xfs_sb, ptr %83, i32 0, i32 24
  %84 = ptrtoint ptr %sb_agblklog21 to i32
  call void @__asan_load1_noabort(i32 %84)
  %85 = load i8, ptr %sb_agblklog21, align 4
  %conv22 = zext i8 %85 to i32
  %notmask.i72 = shl nsw i32 -1, %conv22
  %sub.i73 = xor i32 %notmask.i72, -1
  %86 = trunc i64 %retval.0.i to i32
  %conv26 = and i32 %sub.i73, %86
  %bno = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %call13, i32 0, i32 5
  %87 = ptrtoint ptr %bno to i32
  call void @__asan_store4_noabort(i32 %87)
  store i32 %conv26, ptr %bno, align 4
  %level27 = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %call13, i32 0, i32 6
  %88 = ptrtoint ptr %level27 to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 %level, ptr %level27, align 4
  %89 = ptrtoint ptr %bc_nlevels.i to i32
  call void @__asan_load1_noabort(i32 %89)
  %90 = load i8, ptr %bc_nlevels.i, align 8
  %conv28 = zext i8 %90 to i32
  %nlevels = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %call13, i32 0, i32 7
  %91 = ptrtoint ptr %nlevels to i32
  call void @__asan_store4_noabort(i32 %91)
  store i32 %conv28, ptr %nlevels, align 4
  %ptr = getelementptr %struct.xfs_btree_cur, ptr %cur, i32 0, i32 11, i32 %level, i32 1
  %92 = ptrtoint ptr %ptr to i32
  call void @__asan_load2_noabort(i32 %92)
  %93 = load i16, ptr %ptr, align 4
  %conv30 = zext i16 %93 to i32
  %ptr31 = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %call13, i32 0, i32 8
  %94 = ptrtoint ptr %ptr31 to i32
  call void @__asan_store4_noabort(i32 %94)
  store i32 %conv30, ptr %ptr31, align 4
  %95 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load i32, ptr %rctx, align 4
  %97 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %96, ptr noundef %__data, i64 noundef 1, ptr noundef %98, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %xchk_btree_cur_fsbno.exit, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xchk_xref_error(ptr noundef %__data, ptr nocapture noundef readonly %sc, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %3 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_xref_error, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %dev, align 4
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %10 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %sm, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_xref_error, ptr %call3, i32 0, i32 2
  %14 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %type, align 4
  %error6 = getelementptr inbounds %struct.trace_event_raw_xchk_xref_error, ptr %call3, i32 0, i32 3
  %15 = ptrtoint ptr %error6 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %error, ptr %error6, align 4
  %ret_ip7 = getelementptr inbounds %struct.trace_event_raw_xchk_xref_error, ptr %call3, i32 0, i32 4
  %16 = ptrtoint ptr %ret_ip7 to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %ret_ip, ptr %ret_ip7, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xchk_xref_error(ptr noundef %__data, ptr nocapture noundef readonly %sc, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %27 = ptrtoint ptr %sc to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %sc, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_xref_error, ptr %call13, i32 0, i32 1
  %33 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %dev, align 4
  %sm = getelementptr inbounds %struct.xfs_scrub, ptr %sc, i32 0, i32 1
  %34 = ptrtoint ptr %sm to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %sm, align 4
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %35, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_xref_error, ptr %call13, i32 0, i32 2
  %38 = ptrtoint ptr %type to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %type, align 4
  %error17 = getelementptr inbounds %struct.trace_event_raw_xchk_xref_error, ptr %call13, i32 0, i32 3
  %39 = ptrtoint ptr %error17 to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %error, ptr %error17, align 4
  %ret_ip18 = getelementptr inbounds %struct.trace_event_raw_xchk_xref_error, ptr %call13, i32 0, i32 4
  %40 = ptrtoint ptr %ret_ip18 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %ret_ip, ptr %ret_ip18, align 4
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xchk_iallocbt_check_cluster(ptr noundef %__data, ptr nocapture noundef readonly %mp, i32 noundef %agno, i32 noundef %startino, i64 noundef %map_daddr, i16 noundef zeroext %map_len, i32 noundef %chunk_ino, i32 noundef %nr_inodes, i16 noundef zeroext %cluster_mask, i16 noundef zeroext %holemask, i32 noundef %cluster_ino) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 56) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %3 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 8
  %agno6 = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %agno6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %agno, ptr %agno6, align 4
  %startino7 = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %startino7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %startino, ptr %startino7, align 8
  %map_daddr8 = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %map_daddr8 to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %map_daddr, ptr %map_daddr8, align 8
  %map_len9 = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call3, i32 0, i32 5
  %11 = ptrtoint ptr %map_len9 to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %map_len, ptr %map_len9, align 8
  %chunk_ino10 = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call3, i32 0, i32 6
  %12 = ptrtoint ptr %chunk_ino10 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %chunk_ino, ptr %chunk_ino10, align 4
  %nr_inodes11 = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call3, i32 0, i32 7
  %13 = ptrtoint ptr %nr_inodes11 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %nr_inodes, ptr %nr_inodes11, align 8
  %cluster_mask12 = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call3, i32 0, i32 9
  %14 = ptrtoint ptr %cluster_mask12 to i32
  call void @__asan_store2_noabort(i32 %14)
  store i16 %cluster_mask, ptr %cluster_mask12, align 8
  %holemask13 = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call3, i32 0, i32 10
  %15 = ptrtoint ptr %holemask13 to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 %holemask, ptr %holemask13, align 2
  %cluster_ino14 = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call3, i32 0, i32 8
  %16 = ptrtoint ptr %cluster_ino14 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %cluster_ino, ptr %cluster_ino14, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xchk_iallocbt_check_cluster(ptr noundef %__data, ptr nocapture noundef readonly %mp, i32 noundef %agno, i32 noundef %startino, i64 noundef %map_daddr, i16 noundef zeroext %map_len, i32 noundef %chunk_ino, i32 noundef %nr_inodes, i16 noundef zeroext %cluster_mask, i16 noundef zeroext %holemask, i32 noundef %cluster_ino) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 60, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %27 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 8
  %agno17 = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %agno17 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %agno, ptr %agno17, align 4
  %startino18 = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %startino18 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %startino, ptr %startino18, align 8
  %map_daddr19 = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %map_daddr19 to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 %map_daddr, ptr %map_daddr19, align 8
  %map_len20 = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call13, i32 0, i32 5
  %35 = ptrtoint ptr %map_len20 to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 %map_len, ptr %map_len20, align 8
  %chunk_ino21 = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call13, i32 0, i32 6
  %36 = ptrtoint ptr %chunk_ino21 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %chunk_ino, ptr %chunk_ino21, align 4
  %nr_inodes22 = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call13, i32 0, i32 7
  %37 = ptrtoint ptr %nr_inodes22 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %nr_inodes, ptr %nr_inodes22, align 8
  %cluster_mask23 = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call13, i32 0, i32 9
  %38 = ptrtoint ptr %cluster_mask23 to i32
  call void @__asan_store2_noabort(i32 %38)
  store i16 %cluster_mask, ptr %cluster_mask23, align 8
  %holemask24 = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call13, i32 0, i32 10
  %39 = ptrtoint ptr %holemask24 to i32
  call void @__asan_store2_noabort(i32 %39)
  store i16 %holemask, ptr %holemask24, align 2
  %cluster_ino25 = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %call13, i32 0, i32 8
  %40 = ptrtoint ptr %cluster_ino25 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %cluster_ino, ptr %cluster_ino25, align 4
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 60, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xchk_fscounters_calc(ptr noundef %__data, ptr nocapture noundef readonly %mp, i64 noundef %icount, i64 noundef %ifree, i64 noundef %fdblocks, i64 noundef %delalloc) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 72) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %3 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 8
  %sb_icount = getelementptr inbounds %struct.xfs_sb, ptr %mp, i32 0, i32 28
  %8 = ptrtoint ptr %sb_icount to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %sb_icount, align 128
  %icount_sb = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %call3, i32 0, i32 2
  %10 = ptrtoint ptr %icount_sb to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %9, ptr %icount_sb, align 8
  %icount_calculated = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %icount_calculated to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %icount, ptr %icount_calculated, align 8
  %sb_ifree = getelementptr inbounds %struct.xfs_sb, ptr %mp, i32 0, i32 29
  %12 = ptrtoint ptr %sb_ifree to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %sb_ifree, align 8
  %ifree_sb = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %ifree_sb to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %13, ptr %ifree_sb, align 8
  %ifree_calculated = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %call3, i32 0, i32 5
  %15 = ptrtoint ptr %ifree_calculated to i32
  call void @__asan_store8_noabort(i32 %15)
  store i64 %ifree, ptr %ifree_calculated, align 8
  %sb_fdblocks = getelementptr inbounds %struct.xfs_sb, ptr %mp, i32 0, i32 30
  %16 = ptrtoint ptr %sb_fdblocks to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %sb_fdblocks, align 16
  %fdblocks_sb = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %call3, i32 0, i32 6
  %18 = ptrtoint ptr %fdblocks_sb to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %17, ptr %fdblocks_sb, align 8
  %fdblocks_calculated = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %call3, i32 0, i32 7
  %19 = ptrtoint ptr %fdblocks_calculated to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %fdblocks, ptr %fdblocks_calculated, align 8
  %delalloc8 = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %call3, i32 0, i32 8
  %20 = ptrtoint ptr %delalloc8 to i32
  call void @__asan_store8_noabort(i32 %20)
  store i64 %delalloc, ptr %delalloc8, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xchk_fscounters_calc(ptr noundef %__data, ptr nocapture noundef readonly %mp, i64 noundef %icount, i64 noundef %ifree, i64 noundef %fdblocks, i64 noundef %delalloc) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 76, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %27 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 8
  %sb_icount = getelementptr inbounds %struct.xfs_sb, ptr %mp, i32 0, i32 28
  %32 = ptrtoint ptr %sb_icount to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %sb_icount, align 128
  %icount_sb = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %call13, i32 0, i32 2
  %34 = ptrtoint ptr %icount_sb to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 %33, ptr %icount_sb, align 8
  %icount_calculated = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %icount_calculated to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %icount, ptr %icount_calculated, align 8
  %sb_ifree = getelementptr inbounds %struct.xfs_sb, ptr %mp, i32 0, i32 29
  %36 = ptrtoint ptr %sb_ifree to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %sb_ifree, align 8
  %ifree_sb = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %ifree_sb to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %37, ptr %ifree_sb, align 8
  %ifree_calculated = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %call13, i32 0, i32 5
  %39 = ptrtoint ptr %ifree_calculated to i32
  call void @__asan_store8_noabort(i32 %39)
  store i64 %ifree, ptr %ifree_calculated, align 8
  %sb_fdblocks = getelementptr inbounds %struct.xfs_sb, ptr %mp, i32 0, i32 30
  %40 = ptrtoint ptr %sb_fdblocks to i32
  call void @__asan_load8_noabort(i32 %40)
  %41 = load i64, ptr %sb_fdblocks, align 16
  %fdblocks_sb = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %call13, i32 0, i32 6
  %42 = ptrtoint ptr %fdblocks_sb to i32
  call void @__asan_store8_noabort(i32 %42)
  store i64 %41, ptr %fdblocks_sb, align 8
  %fdblocks_calculated = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %call13, i32 0, i32 7
  %43 = ptrtoint ptr %fdblocks_calculated to i32
  call void @__asan_store8_noabort(i32 %43)
  store i64 %fdblocks, ptr %fdblocks_calculated, align 8
  %delalloc19 = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %call13, i32 0, i32 8
  %44 = ptrtoint ptr %delalloc19 to i32
  call void @__asan_store8_noabort(i32 %44)
  store i64 %delalloc, ptr %delalloc19, align 8
  %45 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rctx, align 4
  %47 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 76, i32 noundef %46, ptr noundef %__data, i64 noundef 1, ptr noundef %48, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xchk_fscounters_within_range(ptr noundef %__data, ptr nocapture noundef readonly %mp, i64 noundef %expected, i64 noundef %curr_value, i64 noundef %old_value) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 40) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %3 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_within_range, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 8
  %expected6 = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_within_range, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %expected6 to i32
  call void @__asan_store8_noabort(i32 %8)
  store i64 %expected, ptr %expected6, align 8
  %curr_value7 = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_within_range, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %curr_value7 to i32
  call void @__asan_store8_noabort(i32 %9)
  store i64 %curr_value, ptr %curr_value7, align 8
  %old_value8 = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_within_range, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %old_value8 to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %old_value, ptr %old_value8, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xchk_fscounters_within_range(ptr noundef %__data, ptr nocapture noundef readonly %mp, i64 noundef %expected, i64 noundef %curr_value, i64 noundef %old_value) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 44, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %27 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_within_range, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 8
  %expected17 = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_within_range, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %expected17 to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %expected, ptr %expected17, align 8
  %curr_value18 = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_within_range, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %curr_value18 to i32
  call void @__asan_store8_noabort(i32 %33)
  store i64 %curr_value, ptr %curr_value18, align 8
  %old_value19 = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_within_range, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %old_value19 to i32
  call void @__asan_store8_noabort(i32 %34)
  store i64 %old_value, ptr %old_value19, align 8
  %35 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rctx, align 4
  %37 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 44, i32 noundef %36, ptr noundef %__data, i64 noundef 1, ptr noundef %38, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xrep_extent_class(ptr noundef %__data, ptr nocapture noundef readonly %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %len) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %3 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_extent_class, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 4
  %agno6 = getelementptr inbounds %struct.trace_event_raw_xrep_extent_class, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %agno6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %agno, ptr %agno6, align 4
  %agbno7 = getelementptr inbounds %struct.trace_event_raw_xrep_extent_class, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %agbno7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %agbno, ptr %agbno7, align 4
  %len8 = getelementptr inbounds %struct.trace_event_raw_xrep_extent_class, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %len8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %len, ptr %len8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xrep_extent_class(ptr noundef %__data, ptr nocapture noundef readonly %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %len) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %27 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_extent_class, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 4
  %agno17 = getelementptr inbounds %struct.trace_event_raw_xrep_extent_class, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %agno17 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %agno, ptr %agno17, align 4
  %agbno18 = getelementptr inbounds %struct.trace_event_raw_xrep_extent_class, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %agbno18 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %agbno, ptr %agbno18, align 4
  %len19 = getelementptr inbounds %struct.trace_event_raw_xrep_extent_class, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %len19 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %len, ptr %len19, align 4
  %35 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rctx, align 4
  %37 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %36, ptr noundef %__data, i64 noundef 1, ptr noundef %38, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xrep_rmap_class(ptr noundef %__data, ptr nocapture noundef readonly %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %len, i64 noundef %owner, i64 noundef %offset, i32 noundef %flags) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 48) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %3 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 8
  %agno6 = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %agno6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %agno, ptr %agno6, align 4
  %agbno7 = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %agbno7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %agbno, ptr %agbno7, align 8
  %len8 = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %len8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %len, ptr %len8, align 4
  %owner9 = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %call3, i32 0, i32 5
  %11 = ptrtoint ptr %owner9 to i32
  call void @__asan_store8_noabort(i32 %11)
  store i64 %owner, ptr %owner9, align 8
  %offset10 = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %call3, i32 0, i32 6
  %12 = ptrtoint ptr %offset10 to i32
  call void @__asan_store8_noabort(i32 %12)
  store i64 %offset, ptr %offset10, align 8
  %flags11 = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %call3, i32 0, i32 7
  %13 = ptrtoint ptr %flags11 to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %flags, ptr %flags11, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xrep_rmap_class(ptr noundef %__data, ptr nocapture noundef readonly %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %len, i64 noundef %owner, i64 noundef %offset, i32 noundef %flags) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 52, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %27 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 8
  %agno17 = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %agno17 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %agno, ptr %agno17, align 4
  %agbno18 = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %agbno18 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %agbno, ptr %agbno18, align 8
  %len19 = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %len19 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %len, ptr %len19, align 4
  %owner20 = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %call13, i32 0, i32 5
  %35 = ptrtoint ptr %owner20 to i32
  call void @__asan_store8_noabort(i32 %35)
  store i64 %owner, ptr %owner20, align 8
  %offset21 = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %call13, i32 0, i32 6
  %36 = ptrtoint ptr %offset21 to i32
  call void @__asan_store8_noabort(i32 %36)
  store i64 %offset, ptr %offset21, align 8
  %flags22 = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %call13, i32 0, i32 7
  %37 = ptrtoint ptr %flags22 to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 %flags, ptr %flags22, align 8
  %38 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rctx, align 4
  %40 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 52, i32 noundef %39, ptr noundef %__data, i64 noundef 1, ptr noundef %41, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xrep_refcount_extent_fn(ptr noundef %__data, ptr nocapture noundef readonly %mp, i32 noundef %agno, ptr nocapture noundef readonly %irec) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %3 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_refcount_extent_fn, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 4
  %agno6 = getelementptr inbounds %struct.trace_event_raw_xrep_refcount_extent_fn, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %agno6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %agno, ptr %agno6, align 4
  %9 = ptrtoint ptr %irec to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %irec, align 4
  %startblock = getelementptr inbounds %struct.trace_event_raw_xrep_refcount_extent_fn, ptr %call3, i32 0, i32 3
  %11 = ptrtoint ptr %startblock to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %startblock, align 4
  %rc_blockcount = getelementptr inbounds %struct.xfs_refcount_irec, ptr %irec, i32 0, i32 1
  %12 = ptrtoint ptr %rc_blockcount to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %rc_blockcount, align 4
  %blockcount = getelementptr inbounds %struct.trace_event_raw_xrep_refcount_extent_fn, ptr %call3, i32 0, i32 4
  %14 = ptrtoint ptr %blockcount to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %13, ptr %blockcount, align 4
  %rc_refcount = getelementptr inbounds %struct.xfs_refcount_irec, ptr %irec, i32 0, i32 2
  %15 = ptrtoint ptr %rc_refcount to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %rc_refcount, align 4
  %refcount = getelementptr inbounds %struct.trace_event_raw_xrep_refcount_extent_fn, ptr %call3, i32 0, i32 5
  %17 = ptrtoint ptr %refcount to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %refcount, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xrep_refcount_extent_fn(ptr noundef %__data, ptr nocapture noundef readonly %mp, i32 noundef %agno, ptr nocapture noundef readonly %irec) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %27 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_refcount_extent_fn, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 4
  %agno17 = getelementptr inbounds %struct.trace_event_raw_xrep_refcount_extent_fn, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %agno17 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %agno, ptr %agno17, align 4
  %33 = ptrtoint ptr %irec to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %irec, align 4
  %startblock = getelementptr inbounds %struct.trace_event_raw_xrep_refcount_extent_fn, ptr %call13, i32 0, i32 3
  %35 = ptrtoint ptr %startblock to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %34, ptr %startblock, align 4
  %rc_blockcount = getelementptr inbounds %struct.xfs_refcount_irec, ptr %irec, i32 0, i32 1
  %36 = ptrtoint ptr %rc_blockcount to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rc_blockcount, align 4
  %blockcount = getelementptr inbounds %struct.trace_event_raw_xrep_refcount_extent_fn, ptr %call13, i32 0, i32 4
  %38 = ptrtoint ptr %blockcount to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %37, ptr %blockcount, align 4
  %rc_refcount = getelementptr inbounds %struct.xfs_refcount_irec, ptr %irec, i32 0, i32 2
  %39 = ptrtoint ptr %rc_refcount to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %rc_refcount, align 4
  %refcount = getelementptr inbounds %struct.trace_event_raw_xrep_refcount_extent_fn, ptr %call13, i32 0, i32 5
  %41 = ptrtoint ptr %refcount to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %refcount, align 4
  %42 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %rctx, align 4
  %44 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %43, ptr noundef %__data, i64 noundef 1, ptr noundef %45, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xrep_init_btblock(ptr noundef %__data, ptr nocapture noundef readonly %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %btnum) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 24) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %3 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_init_btblock, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 4
  %agno6 = getelementptr inbounds %struct.trace_event_raw_xrep_init_btblock, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %agno6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %agno, ptr %agno6, align 4
  %agbno7 = getelementptr inbounds %struct.trace_event_raw_xrep_init_btblock, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %agbno7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %agbno, ptr %agbno7, align 4
  %btnum8 = getelementptr inbounds %struct.trace_event_raw_xrep_init_btblock, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %btnum8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %btnum, ptr %btnum8, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xrep_init_btblock(ptr noundef %__data, ptr nocapture noundef readonly %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %btnum) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %27 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_init_btblock, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 4
  %agno17 = getelementptr inbounds %struct.trace_event_raw_xrep_init_btblock, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %agno17 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %agno, ptr %agno17, align 4
  %agbno18 = getelementptr inbounds %struct.trace_event_raw_xrep_init_btblock, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %agbno18 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %agbno, ptr %agbno18, align 4
  %btnum19 = getelementptr inbounds %struct.trace_event_raw_xrep_init_btblock, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %btnum19 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %btnum, ptr %btnum19, align 4
  %35 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %rctx, align 4
  %37 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %36, ptr noundef %__data, i64 noundef 1, ptr noundef %38, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xrep_findroot_block(ptr noundef %__data, ptr nocapture noundef readonly %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %magic, i16 noundef zeroext %level) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 28) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %3 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_findroot_block, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 4
  %agno6 = getelementptr inbounds %struct.trace_event_raw_xrep_findroot_block, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %agno6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %agno, ptr %agno6, align 4
  %agbno7 = getelementptr inbounds %struct.trace_event_raw_xrep_findroot_block, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %agbno7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %agbno, ptr %agbno7, align 4
  %magic8 = getelementptr inbounds %struct.trace_event_raw_xrep_findroot_block, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %magic8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %magic, ptr %magic8, align 4
  %level9 = getelementptr inbounds %struct.trace_event_raw_xrep_findroot_block, ptr %call3, i32 0, i32 5
  %11 = ptrtoint ptr %level9 to i32
  call void @__asan_store2_noabort(i32 %11)
  store i16 %level, ptr %level9, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xrep_findroot_block(ptr noundef %__data, ptr nocapture noundef readonly %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %magic, i16 noundef zeroext %level) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 28, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %27 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_findroot_block, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 4
  %agno17 = getelementptr inbounds %struct.trace_event_raw_xrep_findroot_block, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %agno17 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %agno, ptr %agno17, align 4
  %agbno18 = getelementptr inbounds %struct.trace_event_raw_xrep_findroot_block, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %agbno18 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %agbno, ptr %agbno18, align 4
  %magic19 = getelementptr inbounds %struct.trace_event_raw_xrep_findroot_block, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %magic19 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %magic, ptr %magic19, align 4
  %level20 = getelementptr inbounds %struct.trace_event_raw_xrep_findroot_block, ptr %call13, i32 0, i32 5
  %35 = ptrtoint ptr %level20 to i32
  call void @__asan_store2_noabort(i32 %35)
  store i16 %level, ptr %level20, align 4
  %36 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %rctx, align 4
  %38 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 28, i32 noundef %37, ptr noundef %__data, i64 noundef 1, ptr noundef %39, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xrep_calc_ag_resblks(ptr noundef %__data, ptr nocapture noundef readonly %mp, i32 noundef %agno, i32 noundef %icount, i32 noundef %aglen, i32 noundef %freelen, i32 noundef %usedlen) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %3 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 4
  %agno6 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %agno6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %agno, ptr %agno6, align 4
  %icount7 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %icount7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %icount, ptr %icount7, align 4
  %aglen8 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %aglen8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %aglen, ptr %aglen8, align 4
  %freelen9 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks, ptr %call3, i32 0, i32 5
  %11 = ptrtoint ptr %freelen9 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %freelen, ptr %freelen9, align 4
  %usedlen10 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks, ptr %call3, i32 0, i32 6
  %12 = ptrtoint ptr %usedlen10 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %usedlen, ptr %usedlen10, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xrep_calc_ag_resblks(ptr noundef %__data, ptr nocapture noundef readonly %mp, i32 noundef %agno, i32 noundef %icount, i32 noundef %aglen, i32 noundef %freelen, i32 noundef %usedlen) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %27 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 4
  %agno17 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %agno17 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %agno, ptr %agno17, align 4
  %icount18 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %icount18 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %icount, ptr %icount18, align 4
  %aglen19 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %aglen19 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %aglen, ptr %aglen19, align 4
  %freelen20 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks, ptr %call13, i32 0, i32 5
  %35 = ptrtoint ptr %freelen20 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %freelen, ptr %freelen20, align 4
  %usedlen21 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks, ptr %call13, i32 0, i32 6
  %36 = ptrtoint ptr %usedlen21 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %usedlen, ptr %usedlen21, align 4
  %37 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rctx, align 4
  %39 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %38, ptr noundef %__data, i64 noundef 1, ptr noundef %40, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xrep_calc_ag_resblks_btsize(ptr noundef %__data, ptr nocapture noundef readonly %mp, i32 noundef %agno, i32 noundef %bnobt_sz, i32 noundef %inobt_sz, i32 noundef %rmapbt_sz, i32 noundef %refcbt_sz) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %3 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks_btsize, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 4
  %agno6 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks_btsize, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %agno6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %agno, ptr %agno6, align 4
  %bnobt_sz7 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks_btsize, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %bnobt_sz7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %bnobt_sz, ptr %bnobt_sz7, align 4
  %inobt_sz8 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks_btsize, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %inobt_sz8 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %inobt_sz, ptr %inobt_sz8, align 4
  %rmapbt_sz9 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks_btsize, ptr %call3, i32 0, i32 5
  %11 = ptrtoint ptr %rmapbt_sz9 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %rmapbt_sz, ptr %rmapbt_sz9, align 4
  %refcbt_sz10 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks_btsize, ptr %call3, i32 0, i32 6
  %12 = ptrtoint ptr %refcbt_sz10 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %refcbt_sz, ptr %refcbt_sz10, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xrep_calc_ag_resblks_btsize(ptr noundef %__data, ptr nocapture noundef readonly %mp, i32 noundef %agno, i32 noundef %bnobt_sz, i32 noundef %inobt_sz, i32 noundef %rmapbt_sz, i32 noundef %refcbt_sz) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %27 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks_btsize, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 4
  %agno17 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks_btsize, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %agno17 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %agno, ptr %agno17, align 4
  %bnobt_sz18 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks_btsize, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %bnobt_sz18 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %bnobt_sz, ptr %bnobt_sz18, align 4
  %inobt_sz19 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks_btsize, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %inobt_sz19 to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %inobt_sz, ptr %inobt_sz19, align 4
  %rmapbt_sz20 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks_btsize, ptr %call13, i32 0, i32 5
  %35 = ptrtoint ptr %rmapbt_sz20 to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %rmapbt_sz, ptr %rmapbt_sz20, align 4
  %refcbt_sz21 = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks_btsize, ptr %call13, i32 0, i32 6
  %36 = ptrtoint ptr %refcbt_sz21 to i32
  call void @__asan_store4_noabort(i32 %36)
  store i32 %refcbt_sz, ptr %refcbt_sz21, align 4
  %37 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %rctx, align 4
  %39 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %38, ptr noundef %__data, i64 noundef 1, ptr noundef %40, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xrep_reset_counters(ptr noundef %__data, ptr nocapture noundef readonly %mp) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 12) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %3 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_reset_counters, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xrep_reset_counters(ptr noundef %__data, ptr nocapture noundef readonly %mp) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 12, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %27 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_reset_counters, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 4
  %32 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %rctx, align 4
  %34 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 12, i32 noundef %33, ptr noundef %__data, i64 noundef 1, ptr noundef %35, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_xrep_ialloc_insert(ptr noundef %__data, ptr nocapture noundef readonly %mp, i32 noundef %agno, i32 noundef %startino, i16 noundef zeroext %holemask, i8 noundef zeroext %count, i8 noundef zeroext %freecount, i64 noundef %freemask) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #5
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !718

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !719

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #5
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef 32) #5
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %3 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %call3, i32 0, i32 1
  %7 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %dev, align 8
  %agno6 = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %call3, i32 0, i32 2
  %8 = ptrtoint ptr %agno6 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %agno, ptr %agno6, align 4
  %startino7 = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %call3, i32 0, i32 3
  %9 = ptrtoint ptr %startino7 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %startino, ptr %startino7, align 8
  %holemask8 = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %call3, i32 0, i32 4
  %10 = ptrtoint ptr %holemask8 to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %holemask, ptr %holemask8, align 4
  %count9 = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %call3, i32 0, i32 5
  %11 = ptrtoint ptr %count9 to i32
  call void @__asan_store1_noabort(i32 %11)
  store i8 %count, ptr %count9, align 2
  %freecount10 = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %call3, i32 0, i32 6
  %12 = ptrtoint ptr %freecount10 to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 %freecount, ptr %freecount10, align 1
  %freemask11 = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %call3, i32 0, i32 7
  %13 = ptrtoint ptr %freemask11 to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %freemask, ptr %freemask11, align 8
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_xrep_ialloc_insert(ptr noundef %__data, ptr nocapture noundef readonly %mp, i32 noundef %agno, i32 noundef %startino, i16 noundef zeroext %holemask, i8 noundef zeroext %count, i8 noundef zeroext %freecount, i64 noundef %freemask) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #7
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #5
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !720
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #5
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !720
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !708) #5
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef 36, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #5
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #7
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #5
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #5
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !708) #5
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %27 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %m_super, align 8
  %s_dev = getelementptr inbounds %struct.super_block, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %s_dev to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %s_dev, align 8
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %call13, i32 0, i32 1
  %31 = ptrtoint ptr %dev to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %30, ptr %dev, align 8
  %agno17 = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %call13, i32 0, i32 2
  %32 = ptrtoint ptr %agno17 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %agno, ptr %agno17, align 4
  %startino18 = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %call13, i32 0, i32 3
  %33 = ptrtoint ptr %startino18 to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %startino, ptr %startino18, align 8
  %holemask19 = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %call13, i32 0, i32 4
  %34 = ptrtoint ptr %holemask19 to i32
  call void @__asan_store2_noabort(i32 %34)
  store i16 %holemask, ptr %holemask19, align 4
  %count20 = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %call13, i32 0, i32 5
  %35 = ptrtoint ptr %count20 to i32
  call void @__asan_store1_noabort(i32 %35)
  store i8 %count, ptr %count20, align 2
  %freecount21 = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %call13, i32 0, i32 6
  %36 = ptrtoint ptr %freecount21 to i32
  call void @__asan_store1_noabort(i32 %36)
  store i8 %freecount, ptr %freecount21, align 1
  %freemask22 = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %call13, i32 0, i32 7
  %37 = ptrtoint ptr %freemask22 to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %freemask, ptr %freemask22, align 8
  %38 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %rctx, align 4
  %40 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef 36, i32 noundef %39, ptr noundef %__data, i64 noundef 1, ptr noundef %41, ptr noundef %11, ptr noundef null) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #5
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xchk_class(ptr noundef %__data, ptr noundef %ip, ptr noundef %sm, i32 noundef %error) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %ip to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %sm to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %error to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xchk_op_error(ptr noundef %__data, ptr noundef %sc, i32 noundef %agno, i32 noundef %bno, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %sc to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %agno to i64
  %conv8 = zext i32 %bno to i64
  %conv12 = zext i32 %error to i64
  %1 = ptrtoint ptr %ret_ip to i32
  %conv16 = zext i32 %1 to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xchk_file_op_error(ptr noundef %__data, ptr noundef %sc, i32 noundef %whichfork, i64 noundef %offset, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %sc to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %whichfork to i64
  %conv11 = zext i32 %error to i64
  %1 = ptrtoint ptr %ret_ip to i32
  %conv15 = zext i32 %1 to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %offset, i64 noundef %conv11, i64 noundef %conv15) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xchk_block_error_class(ptr noundef %__data, ptr noundef %sc, i64 noundef %daddr, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %sc to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %ret_ip to i32
  %conv7 = zext i32 %1 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %daddr, i64 noundef %conv7) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xchk_ino_error_class(ptr noundef %__data, ptr noundef %sc, i64 noundef %ino, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %sc to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %ret_ip to i32
  %conv7 = zext i32 %1 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %ino, i64 noundef %conv7) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xchk_fblock_error_class(ptr noundef %__data, ptr noundef %sc, i32 noundef %whichfork, i64 noundef %offset, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %sc to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %whichfork to i64
  %1 = ptrtoint ptr %ret_ip to i32
  %conv11 = zext i32 %1 to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %offset, i64 noundef %conv11) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xchk_incomplete(ptr noundef %__data, ptr noundef %sc, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %sc to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %ret_ip to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xchk_btree_op_error(ptr noundef %__data, ptr noundef %sc, ptr noundef %cur, i32 noundef %level, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %sc to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %cur to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %level to i64
  %conv12 = zext i32 %error to i64
  %2 = ptrtoint ptr %ret_ip to i32
  %conv16 = zext i32 %2 to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xchk_ifork_btree_op_error(ptr noundef %__data, ptr noundef %sc, ptr noundef %cur, i32 noundef %level, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %sc to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %cur to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %level to i64
  %conv12 = zext i32 %error to i64
  %2 = ptrtoint ptr %ret_ip to i32
  %conv16 = zext i32 %2 to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xchk_btree_error(ptr noundef %__data, ptr noundef %sc, ptr noundef %cur, i32 noundef %level, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %sc to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %cur to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %level to i64
  %2 = ptrtoint ptr %ret_ip to i32
  %conv12 = zext i32 %2 to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xchk_ifork_btree_error(ptr noundef %__data, ptr noundef %sc, ptr noundef %cur, i32 noundef %level, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %sc to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %cur to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %level to i64
  %2 = ptrtoint ptr %ret_ip to i32
  %conv12 = zext i32 %2 to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xchk_sbtree_class(ptr noundef %__data, ptr noundef %sc, ptr noundef %cur, i32 noundef %level) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %sc to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %cur to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %level to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xchk_xref_error(ptr noundef %__data, ptr noundef %sc, i32 noundef %error, ptr noundef %ret_ip) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %sc to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %error to i64
  %1 = ptrtoint ptr %ret_ip to i32
  %conv8 = zext i32 %1 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xchk_iallocbt_check_cluster(ptr noundef %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %startino, i64 noundef %map_daddr, i16 noundef zeroext %map_len, i32 noundef %chunk_ino, i32 noundef %nr_inodes, i16 noundef zeroext %cluster_mask, i16 noundef zeroext %holemask, i32 noundef %cluster_ino) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %mp to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %agno to i64
  %conv8 = zext i32 %startino to i64
  %conv15 = zext i16 %map_len to i64
  %conv19 = zext i32 %chunk_ino to i64
  %conv23 = zext i32 %nr_inodes to i64
  %conv27 = zext i16 %cluster_mask to i64
  %conv31 = zext i16 %holemask to i64
  %conv35 = zext i32 %cluster_ino to i64
  tail call void @bpf_trace_run10(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %map_daddr, i64 noundef %conv15, i64 noundef %conv19, i64 noundef %conv23, i64 noundef %conv27, i64 noundef %conv31, i64 noundef %conv35) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xchk_fscounters_calc(ptr noundef %__data, ptr noundef %mp, i64 noundef %icount, i64 noundef %ifree, i64 noundef %fdblocks, i64 noundef %delalloc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %mp to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %icount, i64 noundef %ifree, i64 noundef %fdblocks, i64 noundef %delalloc) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xchk_fscounters_within_range(ptr noundef %__data, ptr noundef %mp, i64 noundef %expected, i64 noundef %curr_value, i64 noundef %old_value) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %mp to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %expected, i64 noundef %curr_value, i64 noundef %old_value) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xrep_extent_class(ptr noundef %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %len) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %mp to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %agno to i64
  %conv8 = zext i32 %agbno to i64
  %conv12 = zext i32 %len to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xrep_rmap_class(ptr noundef %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %len, i64 noundef %owner, i64 noundef %offset, i32 noundef %flags) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %mp to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %agno to i64
  %conv8 = zext i32 %agbno to i64
  %conv12 = zext i32 %len to i64
  %conv22 = zext i32 %flags to i64
  tail call void @bpf_trace_run7(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %owner, i64 noundef %offset, i64 noundef %conv22) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xrep_refcount_extent_fn(ptr noundef %__data, ptr noundef %mp, i32 noundef %agno, ptr noundef %irec) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %mp to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %agno to i64
  %1 = ptrtoint ptr %irec to i32
  %conv8 = zext i32 %1 to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xrep_init_btblock(ptr noundef %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %btnum) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %mp to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %agno to i64
  %conv8 = zext i32 %agbno to i64
  %conv12 = zext i32 %btnum to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xrep_findroot_block(ptr noundef %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %agbno, i32 noundef %magic, i16 noundef zeroext %level) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %mp to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %agno to i64
  %conv8 = zext i32 %agbno to i64
  %conv12 = zext i32 %magic to i64
  %conv16 = zext i16 %level to i64
  tail call void @bpf_trace_run5(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xrep_calc_ag_resblks(ptr noundef %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %icount, i32 noundef %aglen, i32 noundef %freelen, i32 noundef %usedlen) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %mp to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %agno to i64
  %conv8 = zext i32 %icount to i64
  %conv12 = zext i32 %aglen to i64
  %conv16 = zext i32 %freelen to i64
  %conv20 = zext i32 %usedlen to i64
  tail call void @bpf_trace_run6(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xrep_calc_ag_resblks_btsize(ptr noundef %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %bnobt_sz, i32 noundef %inobt_sz, i32 noundef %rmapbt_sz, i32 noundef %refcbt_sz) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %mp to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %agno to i64
  %conv8 = zext i32 %bnobt_sz to i64
  %conv12 = zext i32 %inobt_sz to i64
  %conv16 = zext i32 %rmapbt_sz to i64
  %conv20 = zext i32 %refcbt_sz to i64
  tail call void @bpf_trace_run6(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xrep_reset_counters(ptr noundef %__data, ptr noundef %mp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %mp to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #5
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_xrep_ialloc_insert(ptr noundef %__data, ptr noundef %mp, i32 noundef %agno, i32 noundef %startino, i16 noundef zeroext %holemask, i8 noundef zeroext %count, i8 noundef zeroext %freecount, i64 noundef %freemask) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %0 = ptrtoint ptr %mp to i32
  %conv = zext i32 %0 to i64
  %conv4 = zext i32 %agno to i64
  %conv8 = zext i32 %startino to i64
  %conv12 = zext i16 %holemask to i64
  %conv16 = zext i8 %count to i64
  %conv20 = zext i8 %freecount to i64
  tail call void @bpf_trace_run7(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv12, i64 noundef %conv16, i64 noundef %conv20, i64 noundef %freemask) #5
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xchk_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 8
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %ino = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %ino, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type, align 8
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_xchk_class.symbols) #5
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %agno to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %agno, align 4
  %inum = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %inum to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %inum, align 8
  %gen = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %gen to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %gen, align 8
  %flags4 = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %flags4 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags4, align 4
  %call5 = tail call ptr @trace_print_flags_seq(ptr noundef %tmp_seq, ptr noundef nonnull @.str.79, i32 noundef %15, ptr noundef nonnull @trace_raw_output_xchk_class.__flags) #5
  %error = getelementptr inbounds %struct.trace_event_raw_xchk_class, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %error, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.45, i32 noundef %shr, i32 noundef %and, i64 noundef %5, ptr noundef %call2, i32 noundef %9, i64 noundef %11, i32 noundef %13, ptr noundef %call5, i32 noundef %17) #5
  %call6 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call6, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_symbols_seq(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_print_flags_seq(ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xchk_op_error(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_op_error, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_op_error, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %type, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_xchk_op_error.symbols) #5
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_op_error, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %agno to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %agno, align 4
  %bno = getelementptr inbounds %struct.trace_event_raw_xchk_op_error, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %bno to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %bno, align 4
  %error = getelementptr inbounds %struct.trace_event_raw_xchk_op_error, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %error, align 4
  %ret_ip = getelementptr inbounds %struct.trace_event_raw_xchk_op_error, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %ret_ip to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ret_ip, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.84, i32 noundef %shr, i32 noundef %and, ptr noundef %call2, i32 noundef %7, i32 noundef %9, i32 noundef %11, ptr noundef %13) #5
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xchk_file_op_error(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 8
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %ino = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %ino, align 8
  %whichfork = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %whichfork to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %whichfork, align 8
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_xchk_file_op_error.symbols) #5
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %type, align 4
  %call4 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %9, ptr noundef nonnull @trace_raw_output_xchk_file_op_error.symbols.92) #5
  %offset = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %offset, align 8
  %error = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %error, align 8
  %ret_ip = getelementptr inbounds %struct.trace_event_raw_xchk_file_op_error, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %ret_ip to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %ret_ip, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.88, i32 noundef %shr, i32 noundef %and, i64 noundef %5, ptr noundef %call2, ptr noundef %call4, i64 noundef %11, i32 noundef %13, ptr noundef %15) #5
  %call5 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xchk_block_error_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_block_error_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_block_error_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %type, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_xchk_block_error_class.symbols) #5
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_block_error_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %agno to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %agno, align 4
  %agbno = getelementptr inbounds %struct.trace_event_raw_xchk_block_error_class, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %agbno to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %agbno, align 4
  %ret_ip = getelementptr inbounds %struct.trace_event_raw_xchk_block_error_class, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %ret_ip to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ret_ip, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.94, i32 noundef %shr, i32 noundef %and, ptr noundef %call2, i32 noundef %7, i32 noundef %9, ptr noundef %11) #5
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xchk_ino_error_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_ino_error_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 8
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %ino = getelementptr inbounds %struct.trace_event_raw_xchk_ino_error_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %ino, align 8
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_ino_error_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type, align 8
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_xchk_ino_error_class.symbols) #5
  %ret_ip = getelementptr inbounds %struct.trace_event_raw_xchk_ino_error_class, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %ret_ip to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ret_ip, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.95, i32 noundef %shr, i32 noundef %and, i64 noundef %5, ptr noundef %call2, ptr noundef %9) #5
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xchk_fblock_error_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_fblock_error_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 8
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %ino = getelementptr inbounds %struct.trace_event_raw_xchk_fblock_error_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %ino, align 8
  %whichfork = getelementptr inbounds %struct.trace_event_raw_xchk_fblock_error_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %whichfork to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %whichfork, align 8
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_xchk_fblock_error_class.symbols) #5
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_fblock_error_class, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %type, align 4
  %call4 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %9, ptr noundef nonnull @trace_raw_output_xchk_fblock_error_class.symbols.97) #5
  %offset = getelementptr inbounds %struct.trace_event_raw_xchk_fblock_error_class, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %offset, align 8
  %ret_ip = getelementptr inbounds %struct.trace_event_raw_xchk_fblock_error_class, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %ret_ip to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ret_ip, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.96, i32 noundef %shr, i32 noundef %and, i64 noundef %5, ptr noundef %call2, ptr noundef %call4, i64 noundef %11, ptr noundef %13) #5
  %call5 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xchk_incomplete(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_incomplete, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_incomplete, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %type, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_xchk_incomplete.symbols) #5
  %ret_ip = getelementptr inbounds %struct.trace_event_raw_xchk_incomplete, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %ret_ip to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ret_ip, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.98, i32 noundef %shr, i32 noundef %and, ptr noundef %call2, ptr noundef %7) #5
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xchk_btree_op_error(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %type, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_xchk_btree_op_error.symbols) #5
  %btnum = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %btnum to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %btnum, align 4
  %call4 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_xchk_btree_op_error.symbols.104) #5
  %level = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %level, align 4
  %ptr = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %1, i32 0, i32 7
  %10 = ptrtoint ptr %ptr to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %ptr, align 4
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %agno to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %agno, align 4
  %bno = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %1, i32 0, i32 6
  %14 = ptrtoint ptr %bno to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %bno, align 4
  %error = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %error, align 4
  %ret_ip = getelementptr inbounds %struct.trace_event_raw_xchk_btree_op_error, ptr %1, i32 0, i32 9
  %18 = ptrtoint ptr %ret_ip to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %ret_ip, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.103, i32 noundef %shr, i32 noundef %and, ptr noundef %call2, ptr noundef %call4, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17, ptr noundef %19) #5
  %call5 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xchk_ifork_btree_op_error(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 8
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %ino = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %ino, align 8
  %whichfork = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %whichfork to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %whichfork, align 8
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_xchk_ifork_btree_op_error.symbols) #5
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %type, align 4
  %call4 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %9, ptr noundef nonnull @trace_raw_output_xchk_ifork_btree_op_error.symbols.108) #5
  %btnum = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %btnum to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %btnum, align 8
  %call6 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %11, ptr noundef nonnull @trace_raw_output_xchk_ifork_btree_op_error.symbols.109) #5
  %level = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %level, align 4
  %ptr = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %ptr to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %ptr, align 8
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %agno to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %agno, align 4
  %bno = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %1, i32 0, i32 9
  %18 = ptrtoint ptr %bno to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %bno, align 8
  %error = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %1, i32 0, i32 10
  %20 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %error, align 4
  %ret_ip = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_op_error, ptr %1, i32 0, i32 11
  %22 = ptrtoint ptr %ret_ip to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ret_ip, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.107, i32 noundef %shr, i32 noundef %and, i64 noundef %5, ptr noundef %call2, ptr noundef %call4, ptr noundef %call6, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i32 noundef %21, ptr noundef %23) #5
  %call7 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call7, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xchk_btree_error(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %type, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_xchk_btree_error.symbols) #5
  %btnum = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %btnum to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %btnum, align 4
  %call4 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_xchk_btree_error.symbols.111) #5
  %level = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %level, align 4
  %ptr = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %1, i32 0, i32 7
  %10 = ptrtoint ptr %ptr to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %ptr, align 4
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %1, i32 0, i32 5
  %12 = ptrtoint ptr %agno to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %agno, align 4
  %bno = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %1, i32 0, i32 6
  %14 = ptrtoint ptr %bno to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %bno, align 4
  %ret_ip = getelementptr inbounds %struct.trace_event_raw_xchk_btree_error, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %ret_ip to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %ret_ip, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.110, i32 noundef %shr, i32 noundef %and, ptr noundef %call2, ptr noundef %call4, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15, ptr noundef %17) #5
  %call5 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xchk_ifork_btree_error(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 8
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %ino = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %ino to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %ino, align 8
  %whichfork = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %whichfork to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %whichfork, align 8
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_xchk_ifork_btree_error.symbols) #5
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %type, align 4
  %call4 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %9, ptr noundef nonnull @trace_raw_output_xchk_ifork_btree_error.symbols.113) #5
  %btnum = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %btnum to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %btnum, align 8
  %call6 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %11, ptr noundef nonnull @trace_raw_output_xchk_ifork_btree_error.symbols.114) #5
  %level = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %level, align 4
  %ptr = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %1, i32 0, i32 9
  %14 = ptrtoint ptr %ptr to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %ptr, align 8
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %1, i32 0, i32 7
  %16 = ptrtoint ptr %agno to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %agno, align 8
  %bno = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %1, i32 0, i32 8
  %18 = ptrtoint ptr %bno to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %bno, align 4
  %ret_ip = getelementptr inbounds %struct.trace_event_raw_xchk_ifork_btree_error, ptr %1, i32 0, i32 10
  %20 = ptrtoint ptr %ret_ip to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %ret_ip, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.112, i32 noundef %shr, i32 noundef %and, i64 noundef %5, ptr noundef %call2, ptr noundef %call4, ptr noundef %call6, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, ptr noundef %21) #5
  %call7 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call7, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xchk_sbtree_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %type, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_xchk_sbtree_class.symbols) #5
  %btnum = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %btnum to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %btnum, align 4
  %call4 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %7, ptr noundef nonnull @trace_raw_output_xchk_sbtree_class.symbols.117) #5
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %agno to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %agno, align 4
  %bno = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %bno to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %bno, align 4
  %level = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %level, align 4
  %nlevels = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %nlevels to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %nlevels, align 4
  %ptr = getelementptr inbounds %struct.trace_event_raw_xchk_sbtree_class, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %ptr to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %ptr, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.116, i32 noundef %shr, i32 noundef %and, ptr noundef %call2, ptr noundef %call4, i32 noundef %9, i32 noundef %11, i32 noundef %13, i32 noundef %15, i32 noundef %17) #5
  %call5 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call5, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xchk_xref_error(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_xref_error, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %type = getelementptr inbounds %struct.trace_event_raw_xchk_xref_error, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %type, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %5, ptr noundef nonnull @trace_raw_output_xchk_xref_error.symbols) #5
  %error = getelementptr inbounds %struct.trace_event_raw_xchk_xref_error, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %error to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %error, align 4
  %ret_ip = getelementptr inbounds %struct.trace_event_raw_xchk_xref_error, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %ret_ip to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ret_ip, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.118, i32 noundef %shr, i32 noundef %and, ptr noundef %call2, i32 noundef %7, ptr noundef %9) #5
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xchk_iallocbt_check_cluster(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 8
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %agno = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %agno to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %agno, align 4
  %startino = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %startino to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %startino, align 8
  %map_daddr = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %map_daddr to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %map_daddr, align 8
  %map_len = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %map_len to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %map_len, align 8
  %conv = zext i16 %11 to i32
  %chunk_ino = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %chunk_ino to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %chunk_ino, align 4
  %nr_inodes = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %nr_inodes to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %nr_inodes, align 8
  %cluster_mask = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %1, i32 0, i32 9
  %16 = ptrtoint ptr %cluster_mask to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %cluster_mask, align 8
  %conv2 = zext i16 %17 to i32
  %holemask = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %1, i32 0, i32 10
  %18 = ptrtoint ptr %holemask to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %holemask, align 2
  %conv3 = zext i16 %19 to i32
  %cluster_ino = getelementptr inbounds %struct.trace_event_raw_xchk_iallocbt_check_cluster, ptr %1, i32 0, i32 8
  %20 = ptrtoint ptr %cluster_ino to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %cluster_ino, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.131, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7, i64 noundef %9, i32 noundef %conv, i32 noundef %13, i32 noundef %15, i32 noundef %conv2, i32 noundef %conv3, i32 noundef %21) #5
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xchk_fscounters_calc(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 8
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %icount_sb = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %icount_sb to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %icount_sb, align 8
  %icount_calculated = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %icount_calculated to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %icount_calculated, align 8
  %ifree_sb = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %ifree_sb to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %ifree_sb, align 8
  %ifree_calculated = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %ifree_calculated to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %ifree_calculated, align 8
  %fdblocks_sb = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %fdblocks_sb to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %fdblocks_sb, align 8
  %fdblocks_calculated = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %fdblocks_calculated to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %fdblocks_calculated, align 8
  %delalloc = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_calc, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %delalloc to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %delalloc, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.141, i32 noundef %shr, i32 noundef %and, i64 noundef %5, i64 noundef %7, i64 noundef %9, i64 noundef %11, i64 noundef %13, i64 noundef %15, i64 noundef %17) #5
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xchk_fscounters_within_range(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_within_range, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 8
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %expected = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_within_range, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %expected to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %expected, align 8
  %curr_value = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_within_range, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %curr_value to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %curr_value, align 8
  %old_value = getelementptr inbounds %struct.trace_event_raw_xchk_fscounters_within_range, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %old_value to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %old_value, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.145, i32 noundef %shr, i32 noundef %and, i64 noundef %5, i64 noundef %7, i64 noundef %9) #5
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xrep_extent_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_extent_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %agno = getelementptr inbounds %struct.trace_event_raw_xrep_extent_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %agno to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %agno, align 4
  %agbno = getelementptr inbounds %struct.trace_event_raw_xrep_extent_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %agbno to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %agbno, align 4
  %len = getelementptr inbounds %struct.trace_event_raw_xrep_extent_class, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.148, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7, i32 noundef %9) #5
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xrep_rmap_class(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 8
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %agno = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %agno to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %agno, align 4
  %agbno = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %agbno to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %agbno, align 8
  %len = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %len to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %len, align 4
  %owner = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %owner to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %owner, align 8
  %offset = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %offset to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %offset, align 8
  %flags2 = getelementptr inbounds %struct.trace_event_raw_xrep_rmap_class, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %flags2 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags2, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.150, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7, i32 noundef %9, i64 noundef %11, i64 noundef %13, i32 noundef %15) #5
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xrep_refcount_extent_fn(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_refcount_extent_fn, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %agno = getelementptr inbounds %struct.trace_event_raw_xrep_refcount_extent_fn, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %agno to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %agno, align 4
  %startblock = getelementptr inbounds %struct.trace_event_raw_xrep_refcount_extent_fn, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %startblock to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %startblock, align 4
  %blockcount = getelementptr inbounds %struct.trace_event_raw_xrep_refcount_extent_fn, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %blockcount to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %blockcount, align 4
  %refcount = getelementptr inbounds %struct.trace_event_raw_xrep_refcount_extent_fn, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %refcount to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %refcount, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.155, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11) #5
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xrep_init_btblock(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %tmp_seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 12
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_init_btblock, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %agno = getelementptr inbounds %struct.trace_event_raw_xrep_init_btblock, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %agno to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %agno, align 4
  %agbno = getelementptr inbounds %struct.trace_event_raw_xrep_init_btblock, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %agbno to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %agbno, align 4
  %btnum = getelementptr inbounds %struct.trace_event_raw_xrep_init_btblock, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %btnum to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %btnum, align 4
  %call2 = tail call ptr @trace_print_symbols_seq(ptr noundef %tmp_seq, i32 noundef %9, ptr noundef nonnull @trace_raw_output_xrep_init_btblock.symbols) #5
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.157, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7, ptr noundef %call2) #5
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xrep_findroot_block(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_findroot_block, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %agno = getelementptr inbounds %struct.trace_event_raw_xrep_findroot_block, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %agno to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %agno, align 4
  %agbno = getelementptr inbounds %struct.trace_event_raw_xrep_findroot_block, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %agbno to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %agbno, align 4
  %magic = getelementptr inbounds %struct.trace_event_raw_xrep_findroot_block, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %magic to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %magic, align 4
  %level = getelementptr inbounds %struct.trace_event_raw_xrep_findroot_block, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %level to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %level, align 4
  %conv = zext i16 %11 to i32
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.159, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %conv) #5
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xrep_calc_ag_resblks(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %agno = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %agno to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %agno, align 4
  %icount = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %icount to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %icount, align 4
  %aglen = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %aglen to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %aglen, align 4
  %freelen = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %freelen to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %freelen, align 4
  %usedlen = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %usedlen to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %usedlen, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.164, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13) #5
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xrep_calc_ag_resblks_btsize(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks_btsize, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %agno = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks_btsize, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %agno to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %agno, align 4
  %bnobt_sz = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks_btsize, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %bnobt_sz to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %bnobt_sz, align 4
  %inobt_sz = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks_btsize, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %inobt_sz to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %inobt_sz, align 4
  %rmapbt_sz = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks_btsize, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %rmapbt_sz to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %rmapbt_sz, align 4
  %refcbt_sz = getelementptr inbounds %struct.trace_event_raw_xrep_calc_ag_resblks_btsize, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %refcbt_sz to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %refcbt_sz, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.169, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7, i32 noundef %9, i32 noundef %11, i32 noundef %13) #5
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xrep_reset_counters(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_reset_counters, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 4
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.170, i32 noundef %shr, i32 noundef %and) #5
  %call2 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_xrep_ialloc_insert(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #7
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #5
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #7
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dev = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dev to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dev, align 8
  %shr = lshr i32 %3, 20
  %and = and i32 %3, 1048575
  %agno = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %agno to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %agno, align 4
  %startino = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %startino to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %startino, align 8
  %holemask = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %holemask to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %holemask, align 4
  %conv = zext i16 %9 to i32
  %count = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %count to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %count, align 2
  %conv2 = zext i8 %11 to i32
  %freecount = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %freecount to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %freecount, align 1
  %conv3 = zext i8 %13 to i32
  %freemask = getelementptr inbounds %struct.trace_event_raw_xrep_ialloc_insert, ptr %1, i32 0, i32 7
  %14 = ptrtoint ptr %freemask to i32
  call void @__asan_load8_noabort(i32 %14)
  %15 = load i64, ptr %freemask, align 8
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.175, i32 noundef %shr, i32 noundef %and, i32 noundef %5, i32 noundef %7, i32 noundef %conv, i32 noundef %conv2, i32 noundef %conv3, i64 noundef %15) #5
  %call4 = tail call i32 @trace_handle_return(ptr noundef %seq) #5
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #3

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #4

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #4

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run3(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run5(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run4(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run10(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run7(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run6(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #5

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #6 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 306)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #6 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 306)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { nounwind readonly }
attributes #4 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #5 = { nounwind }
attributes #6 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #7 = { nomerge }
attributes #8 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !10, !11, !12, !14, !15, !16, !18, !19, !20, !22, !23, !24, !26, !27, !28, !30, !31, !32, !34, !35, !36, !38, !39, !40, !42, !43, !44, !46, !47, !48, !50, !51, !52, !54, !55, !56, !58, !59, !60, !62, !63, !64, !66, !67, !68, !70, !71, !72, !74, !75, !76, !78, !79, !80, !82, !83, !84, !86, !87, !88, !90, !91, !92, !94, !95, !96, !98, !99, !100, !102, !103, !104, !106, !107, !108, !110, !111, !112, !114, !115, !116, !118, !119, !120, !122, !123, !124, !126, !127, !128, !130, !131, !132, !134, !135, !136, !138, !139, !140, !142, !143, !144, !146, !147, !148, !150, !151, !152, !154, !155, !156, !158, !159, !160, !162, !163, !164, !166, !167, !168, !170, !171, !172, !174, !175, !176, !178, !179, !180, !182, !183, !184, !186, !187, !188, !190, !191, !192, !194, !195, !196, !198, !199, !200, !202, !203, !204, !206, !207, !208, !210, !211, !212, !214, !215, !216, !218, !219, !220, !222, !223, !224, !226, !227, !228, !230, !231, !232, !234, !235, !236, !238, !239, !240, !242, !243, !244, !246, !247, !248, !250, !251, !252, !254, !255, !256, !258, !259, !260, !262, !263, !264, !266, !267, !268, !270, !271, !272, !274, !275, !276, !278, !279, !280, !282, !283, !284, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !304, !305, !306, !307, !308, !309, !310, !312, !313, !314, !315, !316, !317, !318, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !359, !360, !361, !362, !363, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707}
!llvm.named.register.sp = !{!708}
!llvm.module.flags = !{!709, !710, !711, !712, !713, !714, !715, !716}
!llvm.ident = !{!717}

!0 = !{ptr @__tracepoint_xchk_start, !1, !"__tracepoint_xchk_start", i1 false, i1 false}
!1 = !{!"../fs/xfs/./scrub/trace.h", i32 136, i32 1}
!2 = !{ptr @__tracepoint_ptr_xchk_start, !1, !"__tracepoint_ptr_xchk_start", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_xchk_start, !1, !"__SCK__tp_func_xchk_start", i1 false, i1 false}
!4 = !{ptr @__tracepoint_xchk_done, !5, !"__tracepoint_xchk_done", i1 false, i1 false}
!5 = !{!"../fs/xfs/./scrub/trace.h", i32 137, i32 1}
!6 = !{ptr @__tracepoint_ptr_xchk_done, !5, !"__tracepoint_ptr_xchk_done", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_xchk_done, !5, !"__SCK__tp_func_xchk_done", i1 false, i1 false}
!8 = !{ptr @__tracepoint_xchk_deadlock_retry, !9, !"__tracepoint_xchk_deadlock_retry", i1 false, i1 false}
!9 = !{!"../fs/xfs/./scrub/trace.h", i32 138, i32 1}
!10 = !{ptr @__tracepoint_ptr_xchk_deadlock_retry, !9, !"__tracepoint_ptr_xchk_deadlock_retry", i1 false, i1 false}
!11 = !{ptr @__SCK__tp_func_xchk_deadlock_retry, !9, !"__SCK__tp_func_xchk_deadlock_retry", i1 false, i1 false}
!12 = !{ptr @__tracepoint_xrep_attempt, !13, !"__tracepoint_xrep_attempt", i1 false, i1 false}
!13 = !{!"../fs/xfs/./scrub/trace.h", i32 139, i32 1}
!14 = !{ptr @__tracepoint_ptr_xrep_attempt, !13, !"__tracepoint_ptr_xrep_attempt", i1 false, i1 false}
!15 = !{ptr @__SCK__tp_func_xrep_attempt, !13, !"__SCK__tp_func_xrep_attempt", i1 false, i1 false}
!16 = !{ptr @__tracepoint_xrep_done, !17, !"__tracepoint_xrep_done", i1 false, i1 false}
!17 = !{!"../fs/xfs/./scrub/trace.h", i32 140, i32 1}
!18 = !{ptr @__tracepoint_ptr_xrep_done, !17, !"__tracepoint_ptr_xrep_done", i1 false, i1 false}
!19 = !{ptr @__SCK__tp_func_xrep_done, !17, !"__SCK__tp_func_xrep_done", i1 false, i1 false}
!20 = !{ptr @__tracepoint_xchk_op_error, !21, !"__tracepoint_xchk_op_error", i1 false, i1 false}
!21 = !{!"../fs/xfs/./scrub/trace.h", i32 142, i32 1}
!22 = !{ptr @__tracepoint_ptr_xchk_op_error, !21, !"__tracepoint_ptr_xchk_op_error", i1 false, i1 false}
!23 = !{ptr @__SCK__tp_func_xchk_op_error, !21, !"__SCK__tp_func_xchk_op_error", i1 false, i1 false}
!24 = !{ptr @__tracepoint_xchk_file_op_error, !25, !"__tracepoint_xchk_file_op_error", i1 false, i1 false}
!25 = !{!"../fs/xfs/./scrub/trace.h", i32 171, i32 1}
!26 = !{ptr @__tracepoint_ptr_xchk_file_op_error, !25, !"__tracepoint_ptr_xchk_file_op_error", i1 false, i1 false}
!27 = !{ptr @__SCK__tp_func_xchk_file_op_error, !25, !"__SCK__tp_func_xchk_file_op_error", i1 false, i1 false}
!28 = !{ptr @__tracepoint_xchk_fs_error, !29, !"__tracepoint_xchk_fs_error", i1 false, i1 false}
!29 = !{!"../fs/xfs/./scrub/trace.h", i32 234, i32 1}
!30 = !{ptr @__tracepoint_ptr_xchk_fs_error, !29, !"__tracepoint_ptr_xchk_fs_error", i1 false, i1 false}
!31 = !{ptr @__SCK__tp_func_xchk_fs_error, !29, !"__SCK__tp_func_xchk_fs_error", i1 false, i1 false}
!32 = !{ptr @__tracepoint_xchk_block_error, !33, !"__tracepoint_xchk_block_error", i1 false, i1 false}
!33 = !{!"../fs/xfs/./scrub/trace.h", i32 235, i32 1}
!34 = !{ptr @__tracepoint_ptr_xchk_block_error, !33, !"__tracepoint_ptr_xchk_block_error", i1 false, i1 false}
!35 = !{ptr @__SCK__tp_func_xchk_block_error, !33, !"__SCK__tp_func_xchk_block_error", i1 false, i1 false}
!36 = !{ptr @__tracepoint_xchk_block_preen, !37, !"__tracepoint_xchk_block_preen", i1 false, i1 false}
!37 = !{!"../fs/xfs/./scrub/trace.h", i32 236, i32 1}
!38 = !{ptr @__tracepoint_ptr_xchk_block_preen, !37, !"__tracepoint_ptr_xchk_block_preen", i1 false, i1 false}
!39 = !{ptr @__SCK__tp_func_xchk_block_preen, !37, !"__SCK__tp_func_xchk_block_preen", i1 false, i1 false}
!40 = !{ptr @__tracepoint_xchk_ino_error, !41, !"__tracepoint_xchk_ino_error", i1 false, i1 false}
!41 = !{!"../fs/xfs/./scrub/trace.h", i32 266, i32 1}
!42 = !{ptr @__tracepoint_ptr_xchk_ino_error, !41, !"__tracepoint_ptr_xchk_ino_error", i1 false, i1 false}
!43 = !{ptr @__SCK__tp_func_xchk_ino_error, !41, !"__SCK__tp_func_xchk_ino_error", i1 false, i1 false}
!44 = !{ptr @__tracepoint_xchk_ino_preen, !45, !"__tracepoint_xchk_ino_preen", i1 false, i1 false}
!45 = !{!"../fs/xfs/./scrub/trace.h", i32 267, i32 1}
!46 = !{ptr @__tracepoint_ptr_xchk_ino_preen, !45, !"__tracepoint_ptr_xchk_ino_preen", i1 false, i1 false}
!47 = !{ptr @__SCK__tp_func_xchk_ino_preen, !45, !"__SCK__tp_func_xchk_ino_preen", i1 false, i1 false}
!48 = !{ptr @__tracepoint_xchk_ino_warning, !49, !"__tracepoint_xchk_ino_warning", i1 false, i1 false}
!49 = !{!"../fs/xfs/./scrub/trace.h", i32 268, i32 1}
!50 = !{ptr @__tracepoint_ptr_xchk_ino_warning, !49, !"__tracepoint_ptr_xchk_ino_warning", i1 false, i1 false}
!51 = !{ptr @__SCK__tp_func_xchk_ino_warning, !49, !"__SCK__tp_func_xchk_ino_warning", i1 false, i1 false}
!52 = !{ptr @__tracepoint_xchk_fblock_error, !53, !"__tracepoint_xchk_fblock_error", i1 false, i1 false}
!53 = !{!"../fs/xfs/./scrub/trace.h", i32 305, i32 1}
!54 = !{ptr @__tracepoint_ptr_xchk_fblock_error, !53, !"__tracepoint_ptr_xchk_fblock_error", i1 false, i1 false}
!55 = !{ptr @__SCK__tp_func_xchk_fblock_error, !53, !"__SCK__tp_func_xchk_fblock_error", i1 false, i1 false}
!56 = !{ptr @__tracepoint_xchk_fblock_warning, !57, !"__tracepoint_xchk_fblock_warning", i1 false, i1 false}
!57 = !{!"../fs/xfs/./scrub/trace.h", i32 306, i32 1}
!58 = !{ptr @__tracepoint_ptr_xchk_fblock_warning, !57, !"__tracepoint_ptr_xchk_fblock_warning", i1 false, i1 false}
!59 = !{ptr @__SCK__tp_func_xchk_fblock_warning, !57, !"__SCK__tp_func_xchk_fblock_warning", i1 false, i1 false}
!60 = !{ptr @__tracepoint_xchk_incomplete, !61, !"__tracepoint_xchk_incomplete", i1 false, i1 false}
!61 = !{!"../fs/xfs/./scrub/trace.h", i32 308, i32 1}
!62 = !{ptr @__tracepoint_ptr_xchk_incomplete, !61, !"__tracepoint_ptr_xchk_incomplete", i1 false, i1 false}
!63 = !{ptr @__SCK__tp_func_xchk_incomplete, !61, !"__SCK__tp_func_xchk_incomplete", i1 false, i1 false}
!64 = !{ptr @__tracepoint_xchk_btree_op_error, !65, !"__tracepoint_xchk_btree_op_error", i1 false, i1 false}
!65 = !{!"../fs/xfs/./scrub/trace.h", i32 327, i32 1}
!66 = !{ptr @__tracepoint_ptr_xchk_btree_op_error, !65, !"__tracepoint_ptr_xchk_btree_op_error", i1 false, i1 false}
!67 = !{ptr @__SCK__tp_func_xchk_btree_op_error, !65, !"__SCK__tp_func_xchk_btree_op_error", i1 false, i1 false}
!68 = !{ptr @__tracepoint_xchk_ifork_btree_op_error, !69, !"__tracepoint_xchk_ifork_btree_op_error", i1 false, i1 false}
!69 = !{!"../fs/xfs/./scrub/trace.h", i32 367, i32 1}
!70 = !{ptr @__tracepoint_ptr_xchk_ifork_btree_op_error, !69, !"__tracepoint_ptr_xchk_ifork_btree_op_error", i1 false, i1 false}
!71 = !{ptr @__SCK__tp_func_xchk_ifork_btree_op_error, !69, !"__SCK__tp_func_xchk_ifork_btree_op_error", i1 false, i1 false}
!72 = !{ptr @__tracepoint_xchk_btree_error, !73, !"__tracepoint_xchk_btree_error", i1 false, i1 false}
!73 = !{!"../fs/xfs/./scrub/trace.h", i32 412, i32 1}
!74 = !{ptr @__tracepoint_ptr_xchk_btree_error, !73, !"__tracepoint_ptr_xchk_btree_error", i1 false, i1 false}
!75 = !{ptr @__SCK__tp_func_xchk_btree_error, !73, !"__SCK__tp_func_xchk_btree_error", i1 false, i1 false}
!76 = !{ptr @__tracepoint_xchk_ifork_btree_error, !77, !"__tracepoint_xchk_ifork_btree_error", i1 false, i1 false}
!77 = !{!"../fs/xfs/./scrub/trace.h", i32 448, i32 1}
!78 = !{ptr @__tracepoint_ptr_xchk_ifork_btree_error, !77, !"__tracepoint_ptr_xchk_ifork_btree_error", i1 false, i1 false}
!79 = !{ptr @__SCK__tp_func_xchk_ifork_btree_error, !77, !"__SCK__tp_func_xchk_ifork_btree_error", i1 false, i1 false}
!80 = !{ptr @__tracepoint_xchk_btree_rec, !81, !"__tracepoint_xchk_btree_rec", i1 false, i1 false}
!81 = !{!"../fs/xfs/./scrub/trace.h", i32 532, i32 1}
!82 = !{ptr @__tracepoint_ptr_xchk_btree_rec, !81, !"__tracepoint_ptr_xchk_btree_rec", i1 false, i1 false}
!83 = !{ptr @__SCK__tp_func_xchk_btree_rec, !81, !"__SCK__tp_func_xchk_btree_rec", i1 false, i1 false}
!84 = !{ptr @__tracepoint_xchk_btree_key, !85, !"__tracepoint_xchk_btree_key", i1 false, i1 false}
!85 = !{!"../fs/xfs/./scrub/trace.h", i32 533, i32 1}
!86 = !{ptr @__tracepoint_ptr_xchk_btree_key, !85, !"__tracepoint_ptr_xchk_btree_key", i1 false, i1 false}
!87 = !{ptr @__SCK__tp_func_xchk_btree_key, !85, !"__SCK__tp_func_xchk_btree_key", i1 false, i1 false}
!88 = !{ptr @__tracepoint_xchk_xref_error, !89, !"__tracepoint_xchk_xref_error", i1 false, i1 false}
!89 = !{!"../fs/xfs/./scrub/trace.h", i32 535, i32 1}
!90 = !{ptr @__tracepoint_ptr_xchk_xref_error, !89, !"__tracepoint_ptr_xchk_xref_error", i1 false, i1 false}
!91 = !{ptr @__SCK__tp_func_xchk_xref_error, !89, !"__SCK__tp_func_xchk_xref_error", i1 false, i1 false}
!92 = !{ptr @__tracepoint_xchk_iallocbt_check_cluster, !93, !"__tracepoint_xchk_iallocbt_check_cluster", i1 false, i1 false}
!93 = !{!"../fs/xfs/./scrub/trace.h", i32 557, i32 1}
!94 = !{ptr @__tracepoint_ptr_xchk_iallocbt_check_cluster, !93, !"__tracepoint_ptr_xchk_iallocbt_check_cluster", i1 false, i1 false}
!95 = !{ptr @__SCK__tp_func_xchk_iallocbt_check_cluster, !93, !"__SCK__tp_func_xchk_iallocbt_check_cluster", i1 false, i1 false}
!96 = !{ptr @__tracepoint_xchk_fscounters_calc, !97, !"__tracepoint_xchk_fscounters_calc", i1 false, i1 false}
!97 = !{!"../fs/xfs/./scrub/trace.h", i32 602, i32 1}
!98 = !{ptr @__tracepoint_ptr_xchk_fscounters_calc, !97, !"__tracepoint_ptr_xchk_fscounters_calc", i1 false, i1 false}
!99 = !{ptr @__SCK__tp_func_xchk_fscounters_calc, !97, !"__SCK__tp_func_xchk_fscounters_calc", i1 false, i1 false}
!100 = !{ptr @__tracepoint_xchk_fscounters_within_range, !101, !"__tracepoint_xchk_fscounters_within_range", i1 false, i1 false}
!101 = !{!"../fs/xfs/./scrub/trace.h", i32 637, i32 1}
!102 = !{ptr @__tracepoint_ptr_xchk_fscounters_within_range, !101, !"__tracepoint_ptr_xchk_fscounters_within_range", i1 false, i1 false}
!103 = !{ptr @__SCK__tp_func_xchk_fscounters_within_range, !101, !"__SCK__tp_func_xchk_fscounters_within_range", i1 false, i1 false}
!104 = !{ptr @__tracepoint_xrep_dispose_btree_extent, !105, !"__tracepoint_xrep_dispose_btree_extent", i1 false, i1 false}
!105 = !{!"../fs/xfs/./scrub/trace.h", i32 690, i32 1}
!106 = !{ptr @__tracepoint_ptr_xrep_dispose_btree_extent, !105, !"__tracepoint_ptr_xrep_dispose_btree_extent", i1 false, i1 false}
!107 = !{ptr @__SCK__tp_func_xrep_dispose_btree_extent, !105, !"__SCK__tp_func_xrep_dispose_btree_extent", i1 false, i1 false}
!108 = !{ptr @__tracepoint_xrep_agfl_insert, !109, !"__tracepoint_xrep_agfl_insert", i1 false, i1 false}
!109 = !{!"../fs/xfs/./scrub/trace.h", i32 691, i32 1}
!110 = !{ptr @__tracepoint_ptr_xrep_agfl_insert, !109, !"__tracepoint_ptr_xrep_agfl_insert", i1 false, i1 false}
!111 = !{ptr @__SCK__tp_func_xrep_agfl_insert, !109, !"__SCK__tp_func_xrep_agfl_insert", i1 false, i1 false}
!112 = !{ptr @__tracepoint_xrep_alloc_extent_fn, !113, !"__tracepoint_xrep_alloc_extent_fn", i1 false, i1 false}
!113 = !{!"../fs/xfs/./scrub/trace.h", i32 731, i32 1}
!114 = !{ptr @__tracepoint_ptr_xrep_alloc_extent_fn, !113, !"__tracepoint_ptr_xrep_alloc_extent_fn", i1 false, i1 false}
!115 = !{ptr @__SCK__tp_func_xrep_alloc_extent_fn, !113, !"__SCK__tp_func_xrep_alloc_extent_fn", i1 false, i1 false}
!116 = !{ptr @__tracepoint_xrep_ialloc_extent_fn, !117, !"__tracepoint_xrep_ialloc_extent_fn", i1 false, i1 false}
!117 = !{!"../fs/xfs/./scrub/trace.h", i32 732, i32 1}
!118 = !{ptr @__tracepoint_ptr_xrep_ialloc_extent_fn, !117, !"__tracepoint_ptr_xrep_ialloc_extent_fn", i1 false, i1 false}
!119 = !{ptr @__SCK__tp_func_xrep_ialloc_extent_fn, !117, !"__SCK__tp_func_xrep_ialloc_extent_fn", i1 false, i1 false}
!120 = !{ptr @__tracepoint_xrep_rmap_extent_fn, !121, !"__tracepoint_xrep_rmap_extent_fn", i1 false, i1 false}
!121 = !{!"../fs/xfs/./scrub/trace.h", i32 733, i32 1}
!122 = !{ptr @__tracepoint_ptr_xrep_rmap_extent_fn, !121, !"__tracepoint_ptr_xrep_rmap_extent_fn", i1 false, i1 false}
!123 = !{ptr @__SCK__tp_func_xrep_rmap_extent_fn, !121, !"__SCK__tp_func_xrep_rmap_extent_fn", i1 false, i1 false}
!124 = !{ptr @__tracepoint_xrep_bmap_extent_fn, !125, !"__tracepoint_xrep_bmap_extent_fn", i1 false, i1 false}
!125 = !{!"../fs/xfs/./scrub/trace.h", i32 734, i32 1}
!126 = !{ptr @__tracepoint_ptr_xrep_bmap_extent_fn, !125, !"__tracepoint_ptr_xrep_bmap_extent_fn", i1 false, i1 false}
!127 = !{ptr @__SCK__tp_func_xrep_bmap_extent_fn, !125, !"__SCK__tp_func_xrep_bmap_extent_fn", i1 false, i1 false}
!128 = !{ptr @__tracepoint_xrep_refcount_extent_fn, !129, !"__tracepoint_xrep_refcount_extent_fn", i1 false, i1 false}
!129 = !{!"../fs/xfs/./scrub/trace.h", i32 736, i32 1}
!130 = !{ptr @__tracepoint_ptr_xrep_refcount_extent_fn, !129, !"__tracepoint_ptr_xrep_refcount_extent_fn", i1 false, i1 false}
!131 = !{ptr @__SCK__tp_func_xrep_refcount_extent_fn, !129, !"__SCK__tp_func_xrep_refcount_extent_fn", i1 false, i1 false}
!132 = !{ptr @__tracepoint_xrep_init_btblock, !133, !"__tracepoint_xrep_init_btblock", i1 false, i1 false}
!133 = !{!"../fs/xfs/./scrub/trace.h", i32 762, i32 1}
!134 = !{ptr @__tracepoint_ptr_xrep_init_btblock, !133, !"__tracepoint_ptr_xrep_init_btblock", i1 false, i1 false}
!135 = !{ptr @__SCK__tp_func_xrep_init_btblock, !133, !"__SCK__tp_func_xrep_init_btblock", i1 false, i1 false}
!136 = !{ptr @__tracepoint_xrep_findroot_block, !137, !"__tracepoint_xrep_findroot_block", i1 false, i1 false}
!137 = !{!"../fs/xfs/./scrub/trace.h", i32 784, i32 1}
!138 = !{ptr @__tracepoint_ptr_xrep_findroot_block, !137, !"__tracepoint_ptr_xrep_findroot_block", i1 false, i1 false}
!139 = !{ptr @__SCK__tp_func_xrep_findroot_block, !137, !"__SCK__tp_func_xrep_findroot_block", i1 false, i1 false}
!140 = !{ptr @__tracepoint_xrep_calc_ag_resblks, !141, !"__tracepoint_xrep_calc_ag_resblks", i1 false, i1 false}
!141 = !{!"../fs/xfs/./scrub/trace.h", i32 809, i32 1}
!142 = !{ptr @__tracepoint_ptr_xrep_calc_ag_resblks, !141, !"__tracepoint_ptr_xrep_calc_ag_resblks", i1 false, i1 false}
!143 = !{ptr @__SCK__tp_func_xrep_calc_ag_resblks, !141, !"__SCK__tp_func_xrep_calc_ag_resblks", i1 false, i1 false}
!144 = !{ptr @__tracepoint_xrep_calc_ag_resblks_btsize, !145, !"__tracepoint_xrep_calc_ag_resblks_btsize", i1 false, i1 false}
!145 = !{!"../fs/xfs/./scrub/trace.h", i32 838, i32 1}
!146 = !{ptr @__tracepoint_ptr_xrep_calc_ag_resblks_btsize, !145, !"__tracepoint_ptr_xrep_calc_ag_resblks_btsize", i1 false, i1 false}
!147 = !{ptr @__SCK__tp_func_xrep_calc_ag_resblks_btsize, !145, !"__SCK__tp_func_xrep_calc_ag_resblks_btsize", i1 false, i1 false}
!148 = !{ptr @__tracepoint_xrep_reset_counters, !149, !"__tracepoint_xrep_reset_counters", i1 false, i1 false}
!149 = !{!"../fs/xfs/./scrub/trace.h", i32 867, i32 1}
!150 = !{ptr @__tracepoint_ptr_xrep_reset_counters, !149, !"__tracepoint_ptr_xrep_reset_counters", i1 false, i1 false}
!151 = !{ptr @__SCK__tp_func_xrep_reset_counters, !149, !"__SCK__tp_func_xrep_reset_counters", i1 false, i1 false}
!152 = !{ptr @__tracepoint_xrep_ialloc_insert, !153, !"__tracepoint_xrep_ialloc_insert", i1 false, i1 false}
!153 = !{!"../fs/xfs/./scrub/trace.h", i32 880, i32 1}
!154 = !{ptr @__tracepoint_ptr_xrep_ialloc_insert, !153, !"__tracepoint_ptr_xrep_ialloc_insert", i1 false, i1 false}
!155 = !{ptr @__SCK__tp_func_xrep_ialloc_insert, !153, !"__SCK__tp_func_xrep_ialloc_insert", i1 false, i1 false}
!156 = !{ptr @.str, !157, !"<string literal>", i1 false, i1 false}
!157 = !{!"../fs/xfs/./scrub/trace.h", i32 25, i32 1}
!158 = !{ptr @__TRACE_SYSTEM_XFS_BTNUM_BNOi, !157, !"__TRACE_SYSTEM_XFS_BTNUM_BNOi", i1 false, i1 false}
!159 = !{ptr @TRACE_SYSTEM_XFS_BTNUM_BNOi, !157, !"TRACE_SYSTEM_XFS_BTNUM_BNOi", i1 false, i1 false}
!160 = !{ptr @.str.1, !161, !"<string literal>", i1 false, i1 false}
!161 = !{!"../fs/xfs/./scrub/trace.h", i32 26, i32 1}
!162 = !{ptr @__TRACE_SYSTEM_XFS_BTNUM_CNTi, !161, !"__TRACE_SYSTEM_XFS_BTNUM_CNTi", i1 false, i1 false}
!163 = !{ptr @TRACE_SYSTEM_XFS_BTNUM_CNTi, !161, !"TRACE_SYSTEM_XFS_BTNUM_CNTi", i1 false, i1 false}
!164 = !{ptr @.str.2, !165, !"<string literal>", i1 false, i1 false}
!165 = !{!"../fs/xfs/./scrub/trace.h", i32 27, i32 1}
!166 = !{ptr @__TRACE_SYSTEM_XFS_BTNUM_BMAPi, !165, !"__TRACE_SYSTEM_XFS_BTNUM_BMAPi", i1 false, i1 false}
!167 = !{ptr @TRACE_SYSTEM_XFS_BTNUM_BMAPi, !165, !"TRACE_SYSTEM_XFS_BTNUM_BMAPi", i1 false, i1 false}
!168 = !{ptr @.str.3, !169, !"<string literal>", i1 false, i1 false}
!169 = !{!"../fs/xfs/./scrub/trace.h", i32 28, i32 1}
!170 = !{ptr @__TRACE_SYSTEM_XFS_BTNUM_INOi, !169, !"__TRACE_SYSTEM_XFS_BTNUM_INOi", i1 false, i1 false}
!171 = !{ptr @TRACE_SYSTEM_XFS_BTNUM_INOi, !169, !"TRACE_SYSTEM_XFS_BTNUM_INOi", i1 false, i1 false}
!172 = !{ptr @.str.4, !173, !"<string literal>", i1 false, i1 false}
!173 = !{!"../fs/xfs/./scrub/trace.h", i32 29, i32 1}
!174 = !{ptr @__TRACE_SYSTEM_XFS_BTNUM_FINOi, !173, !"__TRACE_SYSTEM_XFS_BTNUM_FINOi", i1 false, i1 false}
!175 = !{ptr @TRACE_SYSTEM_XFS_BTNUM_FINOi, !173, !"TRACE_SYSTEM_XFS_BTNUM_FINOi", i1 false, i1 false}
!176 = !{ptr @.str.5, !177, !"<string literal>", i1 false, i1 false}
!177 = !{!"../fs/xfs/./scrub/trace.h", i32 30, i32 1}
!178 = !{ptr @__TRACE_SYSTEM_XFS_BTNUM_RMAPi, !177, !"__TRACE_SYSTEM_XFS_BTNUM_RMAPi", i1 false, i1 false}
!179 = !{ptr @TRACE_SYSTEM_XFS_BTNUM_RMAPi, !177, !"TRACE_SYSTEM_XFS_BTNUM_RMAPi", i1 false, i1 false}
!180 = !{ptr @.str.6, !181, !"<string literal>", i1 false, i1 false}
!181 = !{!"../fs/xfs/./scrub/trace.h", i32 31, i32 1}
!182 = !{ptr @__TRACE_SYSTEM_XFS_BTNUM_REFCi, !181, !"__TRACE_SYSTEM_XFS_BTNUM_REFCi", i1 false, i1 false}
!183 = !{ptr @TRACE_SYSTEM_XFS_BTNUM_REFCi, !181, !"TRACE_SYSTEM_XFS_BTNUM_REFCi", i1 false, i1 false}
!184 = !{ptr @.str.7, !185, !"<string literal>", i1 false, i1 false}
!185 = !{!"../fs/xfs/./scrub/trace.h", i32 33, i32 1}
!186 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_PROBE, !185, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_PROBE", i1 false, i1 false}
!187 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_PROBE, !185, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_PROBE", i1 false, i1 false}
!188 = !{ptr @.str.8, !189, !"<string literal>", i1 false, i1 false}
!189 = !{!"../fs/xfs/./scrub/trace.h", i32 34, i32 1}
!190 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_SB, !189, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_SB", i1 false, i1 false}
!191 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_SB, !189, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_SB", i1 false, i1 false}
!192 = !{ptr @.str.9, !193, !"<string literal>", i1 false, i1 false}
!193 = !{!"../fs/xfs/./scrub/trace.h", i32 35, i32 1}
!194 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_AGF, !193, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_AGF", i1 false, i1 false}
!195 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_AGF, !193, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_AGF", i1 false, i1 false}
!196 = !{ptr @.str.10, !197, !"<string literal>", i1 false, i1 false}
!197 = !{!"../fs/xfs/./scrub/trace.h", i32 36, i32 1}
!198 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_AGFL, !197, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_AGFL", i1 false, i1 false}
!199 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_AGFL, !197, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_AGFL", i1 false, i1 false}
!200 = !{ptr @.str.11, !201, !"<string literal>", i1 false, i1 false}
!201 = !{!"../fs/xfs/./scrub/trace.h", i32 37, i32 1}
!202 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_AGI, !201, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_AGI", i1 false, i1 false}
!203 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_AGI, !201, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_AGI", i1 false, i1 false}
!204 = !{ptr @.str.12, !205, !"<string literal>", i1 false, i1 false}
!205 = !{!"../fs/xfs/./scrub/trace.h", i32 38, i32 1}
!206 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_BNOBT, !205, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_BNOBT", i1 false, i1 false}
!207 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_BNOBT, !205, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_BNOBT", i1 false, i1 false}
!208 = !{ptr @.str.13, !209, !"<string literal>", i1 false, i1 false}
!209 = !{!"../fs/xfs/./scrub/trace.h", i32 39, i32 1}
!210 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_CNTBT, !209, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_CNTBT", i1 false, i1 false}
!211 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_CNTBT, !209, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_CNTBT", i1 false, i1 false}
!212 = !{ptr @.str.14, !213, !"<string literal>", i1 false, i1 false}
!213 = !{!"../fs/xfs/./scrub/trace.h", i32 40, i32 1}
!214 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_INOBT, !213, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_INOBT", i1 false, i1 false}
!215 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_INOBT, !213, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_INOBT", i1 false, i1 false}
!216 = !{ptr @.str.15, !217, !"<string literal>", i1 false, i1 false}
!217 = !{!"../fs/xfs/./scrub/trace.h", i32 41, i32 1}
!218 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_FINOBT, !217, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_FINOBT", i1 false, i1 false}
!219 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_FINOBT, !217, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_FINOBT", i1 false, i1 false}
!220 = !{ptr @.str.16, !221, !"<string literal>", i1 false, i1 false}
!221 = !{!"../fs/xfs/./scrub/trace.h", i32 42, i32 1}
!222 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_RMAPBT, !221, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_RMAPBT", i1 false, i1 false}
!223 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_RMAPBT, !221, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_RMAPBT", i1 false, i1 false}
!224 = !{ptr @.str.17, !225, !"<string literal>", i1 false, i1 false}
!225 = !{!"../fs/xfs/./scrub/trace.h", i32 43, i32 1}
!226 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_REFCNTBT, !225, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_REFCNTBT", i1 false, i1 false}
!227 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_REFCNTBT, !225, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_REFCNTBT", i1 false, i1 false}
!228 = !{ptr @.str.18, !229, !"<string literal>", i1 false, i1 false}
!229 = !{!"../fs/xfs/./scrub/trace.h", i32 44, i32 1}
!230 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_INODE, !229, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_INODE", i1 false, i1 false}
!231 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_INODE, !229, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_INODE", i1 false, i1 false}
!232 = !{ptr @.str.19, !233, !"<string literal>", i1 false, i1 false}
!233 = !{!"../fs/xfs/./scrub/trace.h", i32 45, i32 1}
!234 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTD, !233, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTD", i1 false, i1 false}
!235 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTD, !233, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTD", i1 false, i1 false}
!236 = !{ptr @.str.20, !237, !"<string literal>", i1 false, i1 false}
!237 = !{!"../fs/xfs/./scrub/trace.h", i32 46, i32 1}
!238 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTA, !237, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTA", i1 false, i1 false}
!239 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTA, !237, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTA", i1 false, i1 false}
!240 = !{ptr @.str.21, !241, !"<string literal>", i1 false, i1 false}
!241 = !{!"../fs/xfs/./scrub/trace.h", i32 47, i32 1}
!242 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTC, !241, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTC", i1 false, i1 false}
!243 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTC, !241, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_BMBTC", i1 false, i1 false}
!244 = !{ptr @.str.22, !245, !"<string literal>", i1 false, i1 false}
!245 = !{!"../fs/xfs/./scrub/trace.h", i32 48, i32 1}
!246 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_DIR, !245, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_DIR", i1 false, i1 false}
!247 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_DIR, !245, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_DIR", i1 false, i1 false}
!248 = !{ptr @.str.23, !249, !"<string literal>", i1 false, i1 false}
!249 = !{!"../fs/xfs/./scrub/trace.h", i32 49, i32 1}
!250 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_XATTR, !249, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_XATTR", i1 false, i1 false}
!251 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_XATTR, !249, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_XATTR", i1 false, i1 false}
!252 = !{ptr @.str.24, !253, !"<string literal>", i1 false, i1 false}
!253 = !{!"../fs/xfs/./scrub/trace.h", i32 50, i32 1}
!254 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_SYMLINK, !253, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_SYMLINK", i1 false, i1 false}
!255 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_SYMLINK, !253, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_SYMLINK", i1 false, i1 false}
!256 = !{ptr @.str.25, !257, !"<string literal>", i1 false, i1 false}
!257 = !{!"../fs/xfs/./scrub/trace.h", i32 51, i32 1}
!258 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_PARENT, !257, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_PARENT", i1 false, i1 false}
!259 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_PARENT, !257, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_PARENT", i1 false, i1 false}
!260 = !{ptr @.str.26, !261, !"<string literal>", i1 false, i1 false}
!261 = !{!"../fs/xfs/./scrub/trace.h", i32 52, i32 1}
!262 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_RTBITMAP, !261, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_RTBITMAP", i1 false, i1 false}
!263 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_RTBITMAP, !261, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_RTBITMAP", i1 false, i1 false}
!264 = !{ptr @.str.27, !265, !"<string literal>", i1 false, i1 false}
!265 = !{!"../fs/xfs/./scrub/trace.h", i32 53, i32 1}
!266 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_RTSUM, !265, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_RTSUM", i1 false, i1 false}
!267 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_RTSUM, !265, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_RTSUM", i1 false, i1 false}
!268 = !{ptr @.str.28, !269, !"<string literal>", i1 false, i1 false}
!269 = !{!"../fs/xfs/./scrub/trace.h", i32 54, i32 1}
!270 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_UQUOTA, !269, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_UQUOTA", i1 false, i1 false}
!271 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_UQUOTA, !269, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_UQUOTA", i1 false, i1 false}
!272 = !{ptr @.str.29, !273, !"<string literal>", i1 false, i1 false}
!273 = !{!"../fs/xfs/./scrub/trace.h", i32 55, i32 1}
!274 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_GQUOTA, !273, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_GQUOTA", i1 false, i1 false}
!275 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_GQUOTA, !273, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_GQUOTA", i1 false, i1 false}
!276 = !{ptr @.str.30, !277, !"<string literal>", i1 false, i1 false}
!277 = !{!"../fs/xfs/./scrub/trace.h", i32 56, i32 1}
!278 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_PQUOTA, !277, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_PQUOTA", i1 false, i1 false}
!279 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_PQUOTA, !277, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_PQUOTA", i1 false, i1 false}
!280 = !{ptr @.str.31, !281, !"<string literal>", i1 false, i1 false}
!281 = !{!"../fs/xfs/./scrub/trace.h", i32 57, i32 1}
!282 = !{ptr @__TRACE_SYSTEM_XFS_SCRUB_TYPE_FSCOUNTERS, !281, !"__TRACE_SYSTEM_XFS_SCRUB_TYPE_FSCOUNTERS", i1 false, i1 false}
!283 = !{ptr @TRACE_SYSTEM_XFS_SCRUB_TYPE_FSCOUNTERS, !281, !"TRACE_SYSTEM_XFS_SCRUB_TYPE_FSCOUNTERS", i1 false, i1 false}
!284 = !{ptr @event_class_xchk_class, !285, !"event_class_xchk_class", i1 false, i1 false}
!285 = !{!"../fs/xfs/./scrub/trace.h", i32 96, i32 1}
!286 = !{ptr @event_xchk_start, !1, !"event_xchk_start", i1 false, i1 false}
!287 = !{ptr @__event_xchk_start, !1, !"__event_xchk_start", i1 false, i1 false}
!288 = !{ptr @event_xchk_done, !5, !"event_xchk_done", i1 false, i1 false}
!289 = !{ptr @__event_xchk_done, !5, !"__event_xchk_done", i1 false, i1 false}
!290 = !{ptr @event_xchk_deadlock_retry, !9, !"event_xchk_deadlock_retry", i1 false, i1 false}
!291 = !{ptr @__event_xchk_deadlock_retry, !9, !"__event_xchk_deadlock_retry", i1 false, i1 false}
!292 = !{ptr @event_xrep_attempt, !13, !"event_xrep_attempt", i1 false, i1 false}
!293 = !{ptr @__event_xrep_attempt, !13, !"__event_xrep_attempt", i1 false, i1 false}
!294 = !{ptr @event_xrep_done, !17, !"event_xrep_done", i1 false, i1 false}
!295 = !{ptr @__event_xrep_done, !17, !"__event_xrep_done", i1 false, i1 false}
!296 = !{ptr @event_class_xchk_op_error, !21, !"event_class_xchk_op_error", i1 false, i1 false}
!297 = !{ptr @event_xchk_op_error, !21, !"event_xchk_op_error", i1 false, i1 false}
!298 = !{ptr @__event_xchk_op_error, !21, !"__event_xchk_op_error", i1 false, i1 false}
!299 = !{ptr @event_class_xchk_file_op_error, !25, !"event_class_xchk_file_op_error", i1 false, i1 false}
!300 = !{ptr @event_xchk_file_op_error, !25, !"event_xchk_file_op_error", i1 false, i1 false}
!301 = !{ptr @__event_xchk_file_op_error, !25, !"__event_xchk_file_op_error", i1 false, i1 false}
!302 = !{ptr @event_class_xchk_block_error_class, !303, !"event_class_xchk_block_error_class", i1 false, i1 false}
!303 = !{!"../fs/xfs/./scrub/trace.h", i32 203, i32 1}
!304 = !{ptr @event_xchk_fs_error, !29, !"event_xchk_fs_error", i1 false, i1 false}
!305 = !{ptr @__event_xchk_fs_error, !29, !"__event_xchk_fs_error", i1 false, i1 false}
!306 = !{ptr @event_xchk_block_error, !33, !"event_xchk_block_error", i1 false, i1 false}
!307 = !{ptr @__event_xchk_block_error, !33, !"__event_xchk_block_error", i1 false, i1 false}
!308 = !{ptr @event_xchk_block_preen, !37, !"event_xchk_block_preen", i1 false, i1 false}
!309 = !{ptr @__event_xchk_block_preen, !37, !"__event_xchk_block_preen", i1 false, i1 false}
!310 = !{ptr @event_class_xchk_ino_error_class, !311, !"event_class_xchk_ino_error_class", i1 false, i1 false}
!311 = !{!"../fs/xfs/./scrub/trace.h", i32 238, i32 1}
!312 = !{ptr @event_xchk_ino_error, !41, !"event_xchk_ino_error", i1 false, i1 false}
!313 = !{ptr @__event_xchk_ino_error, !41, !"__event_xchk_ino_error", i1 false, i1 false}
!314 = !{ptr @event_xchk_ino_preen, !45, !"event_xchk_ino_preen", i1 false, i1 false}
!315 = !{ptr @__event_xchk_ino_preen, !45, !"__event_xchk_ino_preen", i1 false, i1 false}
!316 = !{ptr @event_xchk_ino_warning, !49, !"event_xchk_ino_warning", i1 false, i1 false}
!317 = !{ptr @__event_xchk_ino_warning, !49, !"__event_xchk_ino_warning", i1 false, i1 false}
!318 = !{ptr @event_class_xchk_fblock_error_class, !319, !"event_class_xchk_fblock_error_class", i1 false, i1 false}
!319 = !{!"../fs/xfs/./scrub/trace.h", i32 270, i32 1}
!320 = !{ptr @event_xchk_fblock_error, !53, !"event_xchk_fblock_error", i1 false, i1 false}
!321 = !{ptr @__event_xchk_fblock_error, !53, !"__event_xchk_fblock_error", i1 false, i1 false}
!322 = !{ptr @event_xchk_fblock_warning, !57, !"event_xchk_fblock_warning", i1 false, i1 false}
!323 = !{ptr @__event_xchk_fblock_warning, !57, !"__event_xchk_fblock_warning", i1 false, i1 false}
!324 = !{ptr @event_class_xchk_incomplete, !61, !"event_class_xchk_incomplete", i1 false, i1 false}
!325 = !{ptr @event_xchk_incomplete, !61, !"event_xchk_incomplete", i1 false, i1 false}
!326 = !{ptr @__event_xchk_incomplete, !61, !"__event_xchk_incomplete", i1 false, i1 false}
!327 = !{ptr @event_class_xchk_btree_op_error, !65, !"event_class_xchk_btree_op_error", i1 false, i1 false}
!328 = !{ptr @event_xchk_btree_op_error, !65, !"event_xchk_btree_op_error", i1 false, i1 false}
!329 = !{ptr @__event_xchk_btree_op_error, !65, !"__event_xchk_btree_op_error", i1 false, i1 false}
!330 = !{ptr @event_class_xchk_ifork_btree_op_error, !69, !"event_class_xchk_ifork_btree_op_error", i1 false, i1 false}
!331 = !{ptr @event_xchk_ifork_btree_op_error, !69, !"event_xchk_ifork_btree_op_error", i1 false, i1 false}
!332 = !{ptr @__event_xchk_ifork_btree_op_error, !69, !"__event_xchk_ifork_btree_op_error", i1 false, i1 false}
!333 = !{ptr @event_class_xchk_btree_error, !73, !"event_class_xchk_btree_error", i1 false, i1 false}
!334 = !{ptr @event_xchk_btree_error, !73, !"event_xchk_btree_error", i1 false, i1 false}
!335 = !{ptr @__event_xchk_btree_error, !73, !"__event_xchk_btree_error", i1 false, i1 false}
!336 = !{ptr @event_class_xchk_ifork_btree_error, !77, !"event_class_xchk_ifork_btree_error", i1 false, i1 false}
!337 = !{ptr @event_xchk_ifork_btree_error, !77, !"event_xchk_ifork_btree_error", i1 false, i1 false}
!338 = !{ptr @__event_xchk_ifork_btree_error, !77, !"__event_xchk_ifork_btree_error", i1 false, i1 false}
!339 = !{ptr @event_class_xchk_sbtree_class, !340, !"event_class_xchk_sbtree_class", i1 false, i1 false}
!340 = !{!"../fs/xfs/./scrub/trace.h", i32 490, i32 1}
!341 = !{ptr @event_xchk_btree_rec, !81, !"event_xchk_btree_rec", i1 false, i1 false}
!342 = !{ptr @__event_xchk_btree_rec, !81, !"__event_xchk_btree_rec", i1 false, i1 false}
!343 = !{ptr @event_xchk_btree_key, !85, !"event_xchk_btree_key", i1 false, i1 false}
!344 = !{ptr @__event_xchk_btree_key, !85, !"__event_xchk_btree_key", i1 false, i1 false}
!345 = !{ptr @event_class_xchk_xref_error, !89, !"event_class_xchk_xref_error", i1 false, i1 false}
!346 = !{ptr @event_xchk_xref_error, !89, !"event_xchk_xref_error", i1 false, i1 false}
!347 = !{ptr @__event_xchk_xref_error, !89, !"__event_xchk_xref_error", i1 false, i1 false}
!348 = !{ptr @event_class_xchk_iallocbt_check_cluster, !93, !"event_class_xchk_iallocbt_check_cluster", i1 false, i1 false}
!349 = !{ptr @event_xchk_iallocbt_check_cluster, !93, !"event_xchk_iallocbt_check_cluster", i1 false, i1 false}
!350 = !{ptr @__event_xchk_iallocbt_check_cluster, !93, !"__event_xchk_iallocbt_check_cluster", i1 false, i1 false}
!351 = !{ptr @event_class_xchk_fscounters_calc, !97, !"event_class_xchk_fscounters_calc", i1 false, i1 false}
!352 = !{ptr @event_xchk_fscounters_calc, !97, !"event_xchk_fscounters_calc", i1 false, i1 false}
!353 = !{ptr @__event_xchk_fscounters_calc, !97, !"__event_xchk_fscounters_calc", i1 false, i1 false}
!354 = !{ptr @event_class_xchk_fscounters_within_range, !101, !"event_class_xchk_fscounters_within_range", i1 false, i1 false}
!355 = !{ptr @event_xchk_fscounters_within_range, !101, !"event_xchk_fscounters_within_range", i1 false, i1 false}
!356 = !{ptr @__event_xchk_fscounters_within_range, !101, !"__event_xchk_fscounters_within_range", i1 false, i1 false}
!357 = !{ptr @event_class_xrep_extent_class, !358, !"event_class_xrep_extent_class", i1 false, i1 false}
!358 = !{!"../fs/xfs/./scrub/trace.h", i32 663, i32 1}
!359 = !{ptr @event_xrep_dispose_btree_extent, !105, !"event_xrep_dispose_btree_extent", i1 false, i1 false}
!360 = !{ptr @__event_xrep_dispose_btree_extent, !105, !"__event_xrep_dispose_btree_extent", i1 false, i1 false}
!361 = !{ptr @event_xrep_agfl_insert, !109, !"event_xrep_agfl_insert", i1 false, i1 false}
!362 = !{ptr @__event_xrep_agfl_insert, !109, !"__event_xrep_agfl_insert", i1 false, i1 false}
!363 = !{ptr @event_class_xrep_rmap_class, !364, !"event_class_xrep_rmap_class", i1 false, i1 false}
!364 = !{!"../fs/xfs/./scrub/trace.h", i32 693, i32 1}
!365 = !{ptr @event_xrep_alloc_extent_fn, !113, !"event_xrep_alloc_extent_fn", i1 false, i1 false}
!366 = !{ptr @__event_xrep_alloc_extent_fn, !113, !"__event_xrep_alloc_extent_fn", i1 false, i1 false}
!367 = !{ptr @event_xrep_ialloc_extent_fn, !117, !"event_xrep_ialloc_extent_fn", i1 false, i1 false}
!368 = !{ptr @__event_xrep_ialloc_extent_fn, !117, !"__event_xrep_ialloc_extent_fn", i1 false, i1 false}
!369 = !{ptr @event_xrep_rmap_extent_fn, !121, !"event_xrep_rmap_extent_fn", i1 false, i1 false}
!370 = !{ptr @__event_xrep_rmap_extent_fn, !121, !"__event_xrep_rmap_extent_fn", i1 false, i1 false}
!371 = !{ptr @event_xrep_bmap_extent_fn, !125, !"event_xrep_bmap_extent_fn", i1 false, i1 false}
!372 = !{ptr @__event_xrep_bmap_extent_fn, !125, !"__event_xrep_bmap_extent_fn", i1 false, i1 false}
!373 = !{ptr @event_class_xrep_refcount_extent_fn, !129, !"event_class_xrep_refcount_extent_fn", i1 false, i1 false}
!374 = !{ptr @event_xrep_refcount_extent_fn, !129, !"event_xrep_refcount_extent_fn", i1 false, i1 false}
!375 = !{ptr @__event_xrep_refcount_extent_fn, !129, !"__event_xrep_refcount_extent_fn", i1 false, i1 false}
!376 = !{ptr @event_class_xrep_init_btblock, !133, !"event_class_xrep_init_btblock", i1 false, i1 false}
!377 = !{ptr @event_xrep_init_btblock, !133, !"event_xrep_init_btblock", i1 false, i1 false}
!378 = !{ptr @__event_xrep_init_btblock, !133, !"__event_xrep_init_btblock", i1 false, i1 false}
!379 = !{ptr @event_class_xrep_findroot_block, !137, !"event_class_xrep_findroot_block", i1 false, i1 false}
!380 = !{ptr @event_xrep_findroot_block, !137, !"event_xrep_findroot_block", i1 false, i1 false}
!381 = !{ptr @__event_xrep_findroot_block, !137, !"__event_xrep_findroot_block", i1 false, i1 false}
!382 = !{ptr @event_class_xrep_calc_ag_resblks, !141, !"event_class_xrep_calc_ag_resblks", i1 false, i1 false}
!383 = !{ptr @event_xrep_calc_ag_resblks, !141, !"event_xrep_calc_ag_resblks", i1 false, i1 false}
!384 = !{ptr @__event_xrep_calc_ag_resblks, !141, !"__event_xrep_calc_ag_resblks", i1 false, i1 false}
!385 = !{ptr @event_class_xrep_calc_ag_resblks_btsize, !145, !"event_class_xrep_calc_ag_resblks_btsize", i1 false, i1 false}
!386 = !{ptr @event_xrep_calc_ag_resblks_btsize, !145, !"event_xrep_calc_ag_resblks_btsize", i1 false, i1 false}
!387 = !{ptr @__event_xrep_calc_ag_resblks_btsize, !145, !"__event_xrep_calc_ag_resblks_btsize", i1 false, i1 false}
!388 = !{ptr @event_class_xrep_reset_counters, !149, !"event_class_xrep_reset_counters", i1 false, i1 false}
!389 = !{ptr @event_xrep_reset_counters, !149, !"event_xrep_reset_counters", i1 false, i1 false}
!390 = !{ptr @__event_xrep_reset_counters, !149, !"__event_xrep_reset_counters", i1 false, i1 false}
!391 = !{ptr @event_class_xrep_ialloc_insert, !153, !"event_class_xrep_ialloc_insert", i1 false, i1 false}
!392 = !{ptr @event_xrep_ialloc_insert, !153, !"event_xrep_ialloc_insert", i1 false, i1 false}
!393 = !{ptr @__event_xrep_ialloc_insert, !153, !"__event_xrep_ialloc_insert", i1 false, i1 false}
!394 = !{ptr @__bpf_trace_tp_map_xchk_start, !1, !"__bpf_trace_tp_map_xchk_start", i1 false, i1 false}
!395 = !{ptr @__bpf_trace_tp_map_xchk_done, !5, !"__bpf_trace_tp_map_xchk_done", i1 false, i1 false}
!396 = !{ptr @__bpf_trace_tp_map_xchk_deadlock_retry, !9, !"__bpf_trace_tp_map_xchk_deadlock_retry", i1 false, i1 false}
!397 = !{ptr @__bpf_trace_tp_map_xrep_attempt, !13, !"__bpf_trace_tp_map_xrep_attempt", i1 false, i1 false}
!398 = !{ptr @__bpf_trace_tp_map_xrep_done, !17, !"__bpf_trace_tp_map_xrep_done", i1 false, i1 false}
!399 = !{ptr @__bpf_trace_tp_map_xchk_op_error, !21, !"__bpf_trace_tp_map_xchk_op_error", i1 false, i1 false}
!400 = !{ptr @__bpf_trace_tp_map_xchk_file_op_error, !25, !"__bpf_trace_tp_map_xchk_file_op_error", i1 false, i1 false}
!401 = !{ptr @__bpf_trace_tp_map_xchk_fs_error, !29, !"__bpf_trace_tp_map_xchk_fs_error", i1 false, i1 false}
!402 = !{ptr @__bpf_trace_tp_map_xchk_block_error, !33, !"__bpf_trace_tp_map_xchk_block_error", i1 false, i1 false}
!403 = !{ptr @__bpf_trace_tp_map_xchk_block_preen, !37, !"__bpf_trace_tp_map_xchk_block_preen", i1 false, i1 false}
!404 = !{ptr @__bpf_trace_tp_map_xchk_ino_error, !41, !"__bpf_trace_tp_map_xchk_ino_error", i1 false, i1 false}
!405 = !{ptr @__bpf_trace_tp_map_xchk_ino_preen, !45, !"__bpf_trace_tp_map_xchk_ino_preen", i1 false, i1 false}
!406 = !{ptr @__bpf_trace_tp_map_xchk_ino_warning, !49, !"__bpf_trace_tp_map_xchk_ino_warning", i1 false, i1 false}
!407 = !{ptr @__bpf_trace_tp_map_xchk_fblock_error, !53, !"__bpf_trace_tp_map_xchk_fblock_error", i1 false, i1 false}
!408 = !{ptr @__bpf_trace_tp_map_xchk_fblock_warning, !57, !"__bpf_trace_tp_map_xchk_fblock_warning", i1 false, i1 false}
!409 = !{ptr @__bpf_trace_tp_map_xchk_incomplete, !61, !"__bpf_trace_tp_map_xchk_incomplete", i1 false, i1 false}
!410 = !{ptr @__bpf_trace_tp_map_xchk_btree_op_error, !65, !"__bpf_trace_tp_map_xchk_btree_op_error", i1 false, i1 false}
!411 = !{ptr @__bpf_trace_tp_map_xchk_ifork_btree_op_error, !69, !"__bpf_trace_tp_map_xchk_ifork_btree_op_error", i1 false, i1 false}
!412 = !{ptr @__bpf_trace_tp_map_xchk_btree_error, !73, !"__bpf_trace_tp_map_xchk_btree_error", i1 false, i1 false}
!413 = !{ptr @__bpf_trace_tp_map_xchk_ifork_btree_error, !77, !"__bpf_trace_tp_map_xchk_ifork_btree_error", i1 false, i1 false}
!414 = !{ptr @__bpf_trace_tp_map_xchk_btree_rec, !81, !"__bpf_trace_tp_map_xchk_btree_rec", i1 false, i1 false}
!415 = !{ptr @__bpf_trace_tp_map_xchk_btree_key, !85, !"__bpf_trace_tp_map_xchk_btree_key", i1 false, i1 false}
!416 = !{ptr @__bpf_trace_tp_map_xchk_xref_error, !89, !"__bpf_trace_tp_map_xchk_xref_error", i1 false, i1 false}
!417 = !{ptr @__bpf_trace_tp_map_xchk_iallocbt_check_cluster, !93, !"__bpf_trace_tp_map_xchk_iallocbt_check_cluster", i1 false, i1 false}
!418 = !{ptr @__bpf_trace_tp_map_xchk_fscounters_calc, !97, !"__bpf_trace_tp_map_xchk_fscounters_calc", i1 false, i1 false}
!419 = !{ptr @__bpf_trace_tp_map_xchk_fscounters_within_range, !101, !"__bpf_trace_tp_map_xchk_fscounters_within_range", i1 false, i1 false}
!420 = !{ptr @__bpf_trace_tp_map_xrep_dispose_btree_extent, !105, !"__bpf_trace_tp_map_xrep_dispose_btree_extent", i1 false, i1 false}
!421 = !{ptr @__bpf_trace_tp_map_xrep_agfl_insert, !109, !"__bpf_trace_tp_map_xrep_agfl_insert", i1 false, i1 false}
!422 = !{ptr @__bpf_trace_tp_map_xrep_alloc_extent_fn, !113, !"__bpf_trace_tp_map_xrep_alloc_extent_fn", i1 false, i1 false}
!423 = !{ptr @__bpf_trace_tp_map_xrep_ialloc_extent_fn, !117, !"__bpf_trace_tp_map_xrep_ialloc_extent_fn", i1 false, i1 false}
!424 = !{ptr @__bpf_trace_tp_map_xrep_rmap_extent_fn, !121, !"__bpf_trace_tp_map_xrep_rmap_extent_fn", i1 false, i1 false}
!425 = !{ptr @__bpf_trace_tp_map_xrep_bmap_extent_fn, !125, !"__bpf_trace_tp_map_xrep_bmap_extent_fn", i1 false, i1 false}
!426 = !{ptr @__bpf_trace_tp_map_xrep_refcount_extent_fn, !129, !"__bpf_trace_tp_map_xrep_refcount_extent_fn", i1 false, i1 false}
!427 = !{ptr @__bpf_trace_tp_map_xrep_init_btblock, !133, !"__bpf_trace_tp_map_xrep_init_btblock", i1 false, i1 false}
!428 = !{ptr @__bpf_trace_tp_map_xrep_findroot_block, !137, !"__bpf_trace_tp_map_xrep_findroot_block", i1 false, i1 false}
!429 = !{ptr @__bpf_trace_tp_map_xrep_calc_ag_resblks, !141, !"__bpf_trace_tp_map_xrep_calc_ag_resblks", i1 false, i1 false}
!430 = !{ptr @__bpf_trace_tp_map_xrep_calc_ag_resblks_btsize, !145, !"__bpf_trace_tp_map_xrep_calc_ag_resblks_btsize", i1 false, i1 false}
!431 = !{ptr @__bpf_trace_tp_map_xrep_reset_counters, !149, !"__bpf_trace_tp_map_xrep_reset_counters", i1 false, i1 false}
!432 = !{ptr @__bpf_trace_tp_map_xrep_ialloc_insert, !153, !"__bpf_trace_tp_map_xrep_ialloc_insert", i1 false, i1 false}
!433 = !{ptr @__tpstrtab_xchk_start, !1, !"__tpstrtab_xchk_start", i1 false, i1 false}
!434 = !{ptr @__tpstrtab_xchk_done, !5, !"__tpstrtab_xchk_done", i1 false, i1 false}
!435 = !{ptr @__tpstrtab_xchk_deadlock_retry, !9, !"__tpstrtab_xchk_deadlock_retry", i1 false, i1 false}
!436 = !{ptr @__tpstrtab_xrep_attempt, !13, !"__tpstrtab_xrep_attempt", i1 false, i1 false}
!437 = !{ptr @__tpstrtab_xrep_done, !17, !"__tpstrtab_xrep_done", i1 false, i1 false}
!438 = !{ptr @__tpstrtab_xchk_op_error, !21, !"__tpstrtab_xchk_op_error", i1 false, i1 false}
!439 = !{ptr @__tpstrtab_xchk_file_op_error, !25, !"__tpstrtab_xchk_file_op_error", i1 false, i1 false}
!440 = !{ptr @__tpstrtab_xchk_fs_error, !29, !"__tpstrtab_xchk_fs_error", i1 false, i1 false}
!441 = !{ptr @__tpstrtab_xchk_block_error, !33, !"__tpstrtab_xchk_block_error", i1 false, i1 false}
!442 = !{ptr @__tpstrtab_xchk_block_preen, !37, !"__tpstrtab_xchk_block_preen", i1 false, i1 false}
!443 = !{ptr @__tpstrtab_xchk_ino_error, !41, !"__tpstrtab_xchk_ino_error", i1 false, i1 false}
!444 = !{ptr @__tpstrtab_xchk_ino_preen, !45, !"__tpstrtab_xchk_ino_preen", i1 false, i1 false}
!445 = !{ptr @__tpstrtab_xchk_ino_warning, !49, !"__tpstrtab_xchk_ino_warning", i1 false, i1 false}
!446 = !{ptr @__tpstrtab_xchk_fblock_error, !53, !"__tpstrtab_xchk_fblock_error", i1 false, i1 false}
!447 = !{ptr @__tpstrtab_xchk_fblock_warning, !57, !"__tpstrtab_xchk_fblock_warning", i1 false, i1 false}
!448 = !{ptr @__tpstrtab_xchk_incomplete, !61, !"__tpstrtab_xchk_incomplete", i1 false, i1 false}
!449 = !{ptr @__tpstrtab_xchk_btree_op_error, !65, !"__tpstrtab_xchk_btree_op_error", i1 false, i1 false}
!450 = !{ptr @__tpstrtab_xchk_ifork_btree_op_error, !69, !"__tpstrtab_xchk_ifork_btree_op_error", i1 false, i1 false}
!451 = !{ptr @__tpstrtab_xchk_btree_error, !73, !"__tpstrtab_xchk_btree_error", i1 false, i1 false}
!452 = !{ptr @__tpstrtab_xchk_ifork_btree_error, !77, !"__tpstrtab_xchk_ifork_btree_error", i1 false, i1 false}
!453 = !{ptr @__tpstrtab_xchk_btree_rec, !81, !"__tpstrtab_xchk_btree_rec", i1 false, i1 false}
!454 = !{ptr @__tpstrtab_xchk_btree_key, !85, !"__tpstrtab_xchk_btree_key", i1 false, i1 false}
!455 = !{ptr @__tpstrtab_xchk_xref_error, !89, !"__tpstrtab_xchk_xref_error", i1 false, i1 false}
!456 = !{ptr @__tpstrtab_xchk_iallocbt_check_cluster, !93, !"__tpstrtab_xchk_iallocbt_check_cluster", i1 false, i1 false}
!457 = !{ptr @__tpstrtab_xchk_fscounters_calc, !97, !"__tpstrtab_xchk_fscounters_calc", i1 false, i1 false}
!458 = !{ptr @__tpstrtab_xchk_fscounters_within_range, !101, !"__tpstrtab_xchk_fscounters_within_range", i1 false, i1 false}
!459 = !{ptr @__tpstrtab_xrep_dispose_btree_extent, !105, !"__tpstrtab_xrep_dispose_btree_extent", i1 false, i1 false}
!460 = !{ptr @__tpstrtab_xrep_agfl_insert, !109, !"__tpstrtab_xrep_agfl_insert", i1 false, i1 false}
!461 = !{ptr @__tpstrtab_xrep_alloc_extent_fn, !113, !"__tpstrtab_xrep_alloc_extent_fn", i1 false, i1 false}
!462 = !{ptr @__tpstrtab_xrep_ialloc_extent_fn, !117, !"__tpstrtab_xrep_ialloc_extent_fn", i1 false, i1 false}
!463 = !{ptr @__tpstrtab_xrep_rmap_extent_fn, !121, !"__tpstrtab_xrep_rmap_extent_fn", i1 false, i1 false}
!464 = !{ptr @__tpstrtab_xrep_bmap_extent_fn, !125, !"__tpstrtab_xrep_bmap_extent_fn", i1 false, i1 false}
!465 = !{ptr @__tpstrtab_xrep_refcount_extent_fn, !129, !"__tpstrtab_xrep_refcount_extent_fn", i1 false, i1 false}
!466 = !{ptr @__tpstrtab_xrep_init_btblock, !133, !"__tpstrtab_xrep_init_btblock", i1 false, i1 false}
!467 = !{ptr @__tpstrtab_xrep_findroot_block, !137, !"__tpstrtab_xrep_findroot_block", i1 false, i1 false}
!468 = !{ptr @__tpstrtab_xrep_calc_ag_resblks, !141, !"__tpstrtab_xrep_calc_ag_resblks", i1 false, i1 false}
!469 = !{ptr @__tpstrtab_xrep_calc_ag_resblks_btsize, !145, !"__tpstrtab_xrep_calc_ag_resblks_btsize", i1 false, i1 false}
!470 = !{ptr @__tpstrtab_xrep_reset_counters, !149, !"__tpstrtab_xrep_reset_counters", i1 false, i1 false}
!471 = !{ptr @__tpstrtab_xrep_ialloc_insert, !153, !"__tpstrtab_xrep_ialloc_insert", i1 false, i1 false}
!472 = !{ptr @str__xfs_scrub__trace_system_name, !473, !"str__xfs_scrub__trace_system_name", i1 false, i1 false}
!473 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!474 = !{ptr @.str.32, !285, !"<string literal>", i1 false, i1 false}
!475 = !{ptr @.str.33, !285, !"<string literal>", i1 false, i1 false}
!476 = !{ptr @.str.34, !285, !"<string literal>", i1 false, i1 false}
!477 = !{ptr @.str.35, !285, !"<string literal>", i1 false, i1 false}
!478 = !{ptr @.str.36, !285, !"<string literal>", i1 false, i1 false}
!479 = !{ptr @.str.37, !285, !"<string literal>", i1 false, i1 false}
!480 = !{ptr @.str.38, !285, !"<string literal>", i1 false, i1 false}
!481 = !{ptr @.str.39, !285, !"<string literal>", i1 false, i1 false}
!482 = !{ptr @.str.40, !285, !"<string literal>", i1 false, i1 false}
!483 = !{ptr @.str.41, !285, !"<string literal>", i1 false, i1 false}
!484 = !{ptr @.str.42, !285, !"<string literal>", i1 false, i1 false}
!485 = !{ptr @.str.43, !285, !"<string literal>", i1 false, i1 false}
!486 = !{ptr @.str.44, !285, !"<string literal>", i1 false, i1 false}
!487 = !{ptr @trace_event_fields_xchk_class, !285, !"trace_event_fields_xchk_class", i1 false, i1 false}
!488 = !{ptr @trace_event_type_funcs_xchk_class, !285, !"trace_event_type_funcs_xchk_class", i1 false, i1 false}
!489 = !{ptr @.str.45, !285, !"<string literal>", i1 false, i1 false}
!490 = !{ptr @.str.46, !285, !"<string literal>", i1 false, i1 false}
!491 = !{ptr @.str.47, !285, !"<string literal>", i1 false, i1 false}
!492 = !{ptr @.str.48, !285, !"<string literal>", i1 false, i1 false}
!493 = !{ptr @.str.49, !285, !"<string literal>", i1 false, i1 false}
!494 = !{ptr @.str.50, !285, !"<string literal>", i1 false, i1 false}
!495 = !{ptr @.str.51, !285, !"<string literal>", i1 false, i1 false}
!496 = !{ptr @.str.52, !285, !"<string literal>", i1 false, i1 false}
!497 = !{ptr @.str.53, !285, !"<string literal>", i1 false, i1 false}
!498 = !{ptr @.str.54, !285, !"<string literal>", i1 false, i1 false}
!499 = !{ptr @.str.55, !285, !"<string literal>", i1 false, i1 false}
!500 = !{ptr @.str.56, !285, !"<string literal>", i1 false, i1 false}
!501 = !{ptr @.str.57, !285, !"<string literal>", i1 false, i1 false}
!502 = !{ptr @.str.58, !285, !"<string literal>", i1 false, i1 false}
!503 = !{ptr @.str.59, !285, !"<string literal>", i1 false, i1 false}
!504 = !{ptr @.str.60, !285, !"<string literal>", i1 false, i1 false}
!505 = !{ptr @.str.61, !285, !"<string literal>", i1 false, i1 false}
!506 = !{ptr @.str.62, !285, !"<string literal>", i1 false, i1 false}
!507 = !{ptr @.str.63, !285, !"<string literal>", i1 false, i1 false}
!508 = !{ptr @.str.64, !285, !"<string literal>", i1 false, i1 false}
!509 = !{ptr @.str.65, !285, !"<string literal>", i1 false, i1 false}
!510 = !{ptr @.str.66, !285, !"<string literal>", i1 false, i1 false}
!511 = !{ptr @.str.67, !285, !"<string literal>", i1 false, i1 false}
!512 = !{ptr @.str.68, !285, !"<string literal>", i1 false, i1 false}
!513 = !{ptr @.str.69, !285, !"<string literal>", i1 false, i1 false}
!514 = !{ptr @.str.70, !285, !"<string literal>", i1 false, i1 false}
!515 = !{ptr @trace_raw_output_xchk_class.symbols, !285, !"symbols", i1 false, i1 false}
!516 = !{ptr @.str.71, !285, !"<string literal>", i1 false, i1 false}
!517 = !{ptr @.str.72, !285, !"<string literal>", i1 false, i1 false}
!518 = !{ptr @.str.73, !285, !"<string literal>", i1 false, i1 false}
!519 = !{ptr @.str.74, !285, !"<string literal>", i1 false, i1 false}
!520 = !{ptr @.str.75, !285, !"<string literal>", i1 false, i1 false}
!521 = !{ptr @.str.76, !285, !"<string literal>", i1 false, i1 false}
!522 = !{ptr @.str.77, !285, !"<string literal>", i1 false, i1 false}
!523 = !{ptr @.str.78, !285, !"<string literal>", i1 false, i1 false}
!524 = !{ptr @trace_raw_output_xchk_class.__flags, !285, !"__flags", i1 false, i1 false}
!525 = !{ptr @.str.79, !285, !"<string literal>", i1 false, i1 false}
!526 = !{ptr @print_fmt_xchk_class, !285, !"print_fmt_xchk_class", i1 false, i1 false}
!527 = !{ptr @.str.80, !21, !"<string literal>", i1 false, i1 false}
!528 = !{ptr @.str.81, !21, !"<string literal>", i1 false, i1 false}
!529 = !{ptr @.str.82, !21, !"<string literal>", i1 false, i1 false}
!530 = !{ptr @.str.83, !21, !"<string literal>", i1 false, i1 false}
!531 = !{ptr @trace_event_fields_xchk_op_error, !21, !"trace_event_fields_xchk_op_error", i1 false, i1 false}
!532 = !{ptr @trace_event_type_funcs_xchk_op_error, !21, !"trace_event_type_funcs_xchk_op_error", i1 false, i1 false}
!533 = !{ptr @.str.84, !21, !"<string literal>", i1 false, i1 false}
!534 = !{ptr @trace_raw_output_xchk_op_error.symbols, !21, !"symbols", i1 false, i1 false}
!535 = !{ptr @print_fmt_xchk_op_error, !21, !"print_fmt_xchk_op_error", i1 false, i1 false}
!536 = !{ptr @.str.85, !25, !"<string literal>", i1 false, i1 false}
!537 = !{ptr @.str.86, !25, !"<string literal>", i1 false, i1 false}
!538 = !{ptr @.str.87, !25, !"<string literal>", i1 false, i1 false}
!539 = !{ptr @trace_event_fields_xchk_file_op_error, !25, !"trace_event_fields_xchk_file_op_error", i1 false, i1 false}
!540 = !{ptr @trace_event_type_funcs_xchk_file_op_error, !25, !"trace_event_type_funcs_xchk_file_op_error", i1 false, i1 false}
!541 = !{ptr @.str.88, !25, !"<string literal>", i1 false, i1 false}
!542 = !{ptr @.str.89, !25, !"<string literal>", i1 false, i1 false}
!543 = !{ptr @.str.90, !25, !"<string literal>", i1 false, i1 false}
!544 = !{ptr @.str.91, !25, !"<string literal>", i1 false, i1 false}
!545 = !{ptr @trace_raw_output_xchk_file_op_error.symbols, !25, !"symbols", i1 false, i1 false}
!546 = !{ptr @trace_raw_output_xchk_file_op_error.symbols.92, !25, !"symbols", i1 false, i1 false}
!547 = !{ptr @print_fmt_xchk_file_op_error, !25, !"print_fmt_xchk_file_op_error", i1 false, i1 false}
!548 = !{ptr @.str.93, !303, !"<string literal>", i1 false, i1 false}
!549 = !{ptr @trace_event_fields_xchk_block_error_class, !303, !"trace_event_fields_xchk_block_error_class", i1 false, i1 false}
!550 = !{ptr @trace_event_type_funcs_xchk_block_error_class, !303, !"trace_event_type_funcs_xchk_block_error_class", i1 false, i1 false}
!551 = !{ptr @.str.94, !303, !"<string literal>", i1 false, i1 false}
!552 = !{ptr @trace_raw_output_xchk_block_error_class.symbols, !303, !"symbols", i1 false, i1 false}
!553 = !{ptr @print_fmt_xchk_block_error_class, !303, !"print_fmt_xchk_block_error_class", i1 false, i1 false}
!554 = !{ptr @trace_event_fields_xchk_ino_error_class, !311, !"trace_event_fields_xchk_ino_error_class", i1 false, i1 false}
!555 = !{ptr @trace_event_type_funcs_xchk_ino_error_class, !311, !"trace_event_type_funcs_xchk_ino_error_class", i1 false, i1 false}
!556 = !{ptr @.str.95, !311, !"<string literal>", i1 false, i1 false}
!557 = !{ptr @trace_raw_output_xchk_ino_error_class.symbols, !311, !"symbols", i1 false, i1 false}
!558 = !{ptr @print_fmt_xchk_ino_error_class, !311, !"print_fmt_xchk_ino_error_class", i1 false, i1 false}
!559 = !{ptr @trace_event_fields_xchk_fblock_error_class, !319, !"trace_event_fields_xchk_fblock_error_class", i1 false, i1 false}
!560 = !{ptr @trace_event_type_funcs_xchk_fblock_error_class, !319, !"trace_event_type_funcs_xchk_fblock_error_class", i1 false, i1 false}
!561 = !{ptr @.str.96, !319, !"<string literal>", i1 false, i1 false}
!562 = !{ptr @trace_raw_output_xchk_fblock_error_class.symbols, !319, !"symbols", i1 false, i1 false}
!563 = !{ptr @trace_raw_output_xchk_fblock_error_class.symbols.97, !319, !"symbols", i1 false, i1 false}
!564 = !{ptr @print_fmt_xchk_fblock_error_class, !319, !"print_fmt_xchk_fblock_error_class", i1 false, i1 false}
!565 = !{ptr @trace_event_fields_xchk_incomplete, !61, !"trace_event_fields_xchk_incomplete", i1 false, i1 false}
!566 = !{ptr @trace_event_type_funcs_xchk_incomplete, !61, !"trace_event_type_funcs_xchk_incomplete", i1 false, i1 false}
!567 = !{ptr @.str.98, !61, !"<string literal>", i1 false, i1 false}
!568 = !{ptr @trace_raw_output_xchk_incomplete.symbols, !61, !"symbols", i1 false, i1 false}
!569 = !{ptr @print_fmt_xchk_incomplete, !61, !"print_fmt_xchk_incomplete", i1 false, i1 false}
!570 = !{ptr @.str.99, !65, !"<string literal>", i1 false, i1 false}
!571 = !{ptr @.str.100, !65, !"<string literal>", i1 false, i1 false}
!572 = !{ptr @.str.101, !65, !"<string literal>", i1 false, i1 false}
!573 = !{ptr @.str.102, !65, !"<string literal>", i1 false, i1 false}
!574 = !{ptr @trace_event_fields_xchk_btree_op_error, !65, !"trace_event_fields_xchk_btree_op_error", i1 false, i1 false}
!575 = !{ptr @trace_event_type_funcs_xchk_btree_op_error, !65, !"trace_event_type_funcs_xchk_btree_op_error", i1 false, i1 false}
!576 = !{ptr @.str.103, !65, !"<string literal>", i1 false, i1 false}
!577 = !{ptr @trace_raw_output_xchk_btree_op_error.symbols, !65, !"symbols", i1 false, i1 false}
!578 = !{ptr @.str.105, !65, !"<string literal>", i1 false, i1 false}
!579 = !{ptr @.str.106, !65, !"<string literal>", i1 false, i1 false}
!580 = !{ptr @trace_raw_output_xchk_btree_op_error.symbols.104, !65, !"symbols", i1 false, i1 false}
!581 = !{ptr @print_fmt_xchk_btree_op_error, !65, !"print_fmt_xchk_btree_op_error", i1 false, i1 false}
!582 = !{ptr @trace_event_fields_xchk_ifork_btree_op_error, !69, !"trace_event_fields_xchk_ifork_btree_op_error", i1 false, i1 false}
!583 = !{ptr @trace_event_type_funcs_xchk_ifork_btree_op_error, !69, !"trace_event_type_funcs_xchk_ifork_btree_op_error", i1 false, i1 false}
!584 = !{ptr @.str.107, !69, !"<string literal>", i1 false, i1 false}
!585 = !{ptr @trace_raw_output_xchk_ifork_btree_op_error.symbols, !69, !"symbols", i1 false, i1 false}
!586 = !{ptr @trace_raw_output_xchk_ifork_btree_op_error.symbols.108, !69, !"symbols", i1 false, i1 false}
!587 = !{ptr @trace_raw_output_xchk_ifork_btree_op_error.symbols.109, !69, !"symbols", i1 false, i1 false}
!588 = !{ptr @print_fmt_xchk_ifork_btree_op_error, !69, !"print_fmt_xchk_ifork_btree_op_error", i1 false, i1 false}
!589 = !{ptr @trace_event_fields_xchk_btree_error, !73, !"trace_event_fields_xchk_btree_error", i1 false, i1 false}
!590 = !{ptr @trace_event_type_funcs_xchk_btree_error, !73, !"trace_event_type_funcs_xchk_btree_error", i1 false, i1 false}
!591 = !{ptr @.str.110, !73, !"<string literal>", i1 false, i1 false}
!592 = !{ptr @trace_raw_output_xchk_btree_error.symbols, !73, !"symbols", i1 false, i1 false}
!593 = !{ptr @trace_raw_output_xchk_btree_error.symbols.111, !73, !"symbols", i1 false, i1 false}
!594 = !{ptr @print_fmt_xchk_btree_error, !73, !"print_fmt_xchk_btree_error", i1 false, i1 false}
!595 = !{ptr @trace_event_fields_xchk_ifork_btree_error, !77, !"trace_event_fields_xchk_ifork_btree_error", i1 false, i1 false}
!596 = !{ptr @trace_event_type_funcs_xchk_ifork_btree_error, !77, !"trace_event_type_funcs_xchk_ifork_btree_error", i1 false, i1 false}
!597 = !{ptr @.str.112, !77, !"<string literal>", i1 false, i1 false}
!598 = !{ptr @trace_raw_output_xchk_ifork_btree_error.symbols, !77, !"symbols", i1 false, i1 false}
!599 = !{ptr @trace_raw_output_xchk_ifork_btree_error.symbols.113, !77, !"symbols", i1 false, i1 false}
!600 = !{ptr @trace_raw_output_xchk_ifork_btree_error.symbols.114, !77, !"symbols", i1 false, i1 false}
!601 = !{ptr @print_fmt_xchk_ifork_btree_error, !77, !"print_fmt_xchk_ifork_btree_error", i1 false, i1 false}
!602 = !{ptr @.str.115, !340, !"<string literal>", i1 false, i1 false}
!603 = !{ptr @trace_event_fields_xchk_sbtree_class, !340, !"trace_event_fields_xchk_sbtree_class", i1 false, i1 false}
!604 = !{ptr @trace_event_type_funcs_xchk_sbtree_class, !340, !"trace_event_type_funcs_xchk_sbtree_class", i1 false, i1 false}
!605 = !{ptr @.str.116, !340, !"<string literal>", i1 false, i1 false}
!606 = !{ptr @trace_raw_output_xchk_sbtree_class.symbols, !340, !"symbols", i1 false, i1 false}
!607 = !{ptr @trace_raw_output_xchk_sbtree_class.symbols.117, !340, !"symbols", i1 false, i1 false}
!608 = !{ptr @print_fmt_xchk_sbtree_class, !340, !"print_fmt_xchk_sbtree_class", i1 false, i1 false}
!609 = !{ptr @trace_event_fields_xchk_xref_error, !89, !"trace_event_fields_xchk_xref_error", i1 false, i1 false}
!610 = !{ptr @trace_event_type_funcs_xchk_xref_error, !89, !"trace_event_type_funcs_xchk_xref_error", i1 false, i1 false}
!611 = !{ptr @.str.118, !89, !"<string literal>", i1 false, i1 false}
!612 = !{ptr @trace_raw_output_xchk_xref_error.symbols, !89, !"symbols", i1 false, i1 false}
!613 = !{ptr @print_fmt_xchk_xref_error, !89, !"print_fmt_xchk_xref_error", i1 false, i1 false}
!614 = !{ptr @.str.119, !93, !"<string literal>", i1 false, i1 false}
!615 = !{ptr @.str.120, !93, !"<string literal>", i1 false, i1 false}
!616 = !{ptr @.str.121, !93, !"<string literal>", i1 false, i1 false}
!617 = !{ptr @.str.122, !93, !"<string literal>", i1 false, i1 false}
!618 = !{ptr @.str.123, !93, !"<string literal>", i1 false, i1 false}
!619 = !{ptr @.str.124, !93, !"<string literal>", i1 false, i1 false}
!620 = !{ptr @.str.125, !93, !"<string literal>", i1 false, i1 false}
!621 = !{ptr @.str.126, !93, !"<string literal>", i1 false, i1 false}
!622 = !{ptr @.str.127, !93, !"<string literal>", i1 false, i1 false}
!623 = !{ptr @.str.128, !93, !"<string literal>", i1 false, i1 false}
!624 = !{ptr @.str.129, !93, !"<string literal>", i1 false, i1 false}
!625 = !{ptr @.str.130, !93, !"<string literal>", i1 false, i1 false}
!626 = !{ptr @trace_event_fields_xchk_iallocbt_check_cluster, !93, !"trace_event_fields_xchk_iallocbt_check_cluster", i1 false, i1 false}
!627 = !{ptr @trace_event_type_funcs_xchk_iallocbt_check_cluster, !93, !"trace_event_type_funcs_xchk_iallocbt_check_cluster", i1 false, i1 false}
!628 = !{ptr @.str.131, !93, !"<string literal>", i1 false, i1 false}
!629 = !{ptr @print_fmt_xchk_iallocbt_check_cluster, !93, !"print_fmt_xchk_iallocbt_check_cluster", i1 false, i1 false}
!630 = !{ptr @.str.132, !97, !"<string literal>", i1 false, i1 false}
!631 = !{ptr @.str.133, !97, !"<string literal>", i1 false, i1 false}
!632 = !{ptr @.str.134, !97, !"<string literal>", i1 false, i1 false}
!633 = !{ptr @.str.135, !97, !"<string literal>", i1 false, i1 false}
!634 = !{ptr @.str.136, !97, !"<string literal>", i1 false, i1 false}
!635 = !{ptr @.str.137, !97, !"<string literal>", i1 false, i1 false}
!636 = !{ptr @.str.138, !97, !"<string literal>", i1 false, i1 false}
!637 = !{ptr @.str.139, !97, !"<string literal>", i1 false, i1 false}
!638 = !{ptr @.str.140, !97, !"<string literal>", i1 false, i1 false}
!639 = !{ptr @trace_event_fields_xchk_fscounters_calc, !97, !"trace_event_fields_xchk_fscounters_calc", i1 false, i1 false}
!640 = !{ptr @trace_event_type_funcs_xchk_fscounters_calc, !97, !"trace_event_type_funcs_xchk_fscounters_calc", i1 false, i1 false}
!641 = !{ptr @.str.141, !97, !"<string literal>", i1 false, i1 false}
!642 = !{ptr @print_fmt_xchk_fscounters_calc, !97, !"print_fmt_xchk_fscounters_calc", i1 false, i1 false}
!643 = !{ptr @.str.142, !101, !"<string literal>", i1 false, i1 false}
!644 = !{ptr @.str.143, !101, !"<string literal>", i1 false, i1 false}
!645 = !{ptr @.str.144, !101, !"<string literal>", i1 false, i1 false}
!646 = !{ptr @trace_event_fields_xchk_fscounters_within_range, !101, !"trace_event_fields_xchk_fscounters_within_range", i1 false, i1 false}
!647 = !{ptr @trace_event_type_funcs_xchk_fscounters_within_range, !101, !"trace_event_type_funcs_xchk_fscounters_within_range", i1 false, i1 false}
!648 = !{ptr @.str.145, !101, !"<string literal>", i1 false, i1 false}
!649 = !{ptr @print_fmt_xchk_fscounters_within_range, !101, !"print_fmt_xchk_fscounters_within_range", i1 false, i1 false}
!650 = !{ptr @.str.146, !358, !"<string literal>", i1 false, i1 false}
!651 = !{ptr @.str.147, !358, !"<string literal>", i1 false, i1 false}
!652 = !{ptr @trace_event_fields_xrep_extent_class, !358, !"trace_event_fields_xrep_extent_class", i1 false, i1 false}
!653 = !{ptr @trace_event_type_funcs_xrep_extent_class, !358, !"trace_event_type_funcs_xrep_extent_class", i1 false, i1 false}
!654 = !{ptr @.str.148, !358, !"<string literal>", i1 false, i1 false}
!655 = !{ptr @print_fmt_xrep_extent_class, !358, !"print_fmt_xrep_extent_class", i1 false, i1 false}
!656 = !{ptr @.str.149, !364, !"<string literal>", i1 false, i1 false}
!657 = !{ptr @trace_event_fields_xrep_rmap_class, !364, !"trace_event_fields_xrep_rmap_class", i1 false, i1 false}
!658 = !{ptr @trace_event_type_funcs_xrep_rmap_class, !364, !"trace_event_type_funcs_xrep_rmap_class", i1 false, i1 false}
!659 = !{ptr @.str.150, !364, !"<string literal>", i1 false, i1 false}
!660 = !{ptr @print_fmt_xrep_rmap_class, !364, !"print_fmt_xrep_rmap_class", i1 false, i1 false}
!661 = !{ptr @.str.151, !129, !"<string literal>", i1 false, i1 false}
!662 = !{ptr @.str.152, !129, !"<string literal>", i1 false, i1 false}
!663 = !{ptr @.str.153, !129, !"<string literal>", i1 false, i1 false}
!664 = !{ptr @.str.154, !129, !"<string literal>", i1 false, i1 false}
!665 = !{ptr @trace_event_fields_xrep_refcount_extent_fn, !129, !"trace_event_fields_xrep_refcount_extent_fn", i1 false, i1 false}
!666 = !{ptr @trace_event_type_funcs_xrep_refcount_extent_fn, !129, !"trace_event_type_funcs_xrep_refcount_extent_fn", i1 false, i1 false}
!667 = !{ptr @.str.155, !129, !"<string literal>", i1 false, i1 false}
!668 = !{ptr @print_fmt_xrep_refcount_extent_fn, !129, !"print_fmt_xrep_refcount_extent_fn", i1 false, i1 false}
!669 = !{ptr @.str.156, !133, !"<string literal>", i1 false, i1 false}
!670 = !{ptr @trace_event_fields_xrep_init_btblock, !133, !"trace_event_fields_xrep_init_btblock", i1 false, i1 false}
!671 = !{ptr @trace_event_type_funcs_xrep_init_btblock, !133, !"trace_event_type_funcs_xrep_init_btblock", i1 false, i1 false}
!672 = !{ptr @.str.157, !133, !"<string literal>", i1 false, i1 false}
!673 = !{ptr @trace_raw_output_xrep_init_btblock.symbols, !133, !"symbols", i1 false, i1 false}
!674 = !{ptr @print_fmt_xrep_init_btblock, !133, !"print_fmt_xrep_init_btblock", i1 false, i1 false}
!675 = !{ptr @.str.158, !137, !"<string literal>", i1 false, i1 false}
!676 = !{ptr @trace_event_fields_xrep_findroot_block, !137, !"trace_event_fields_xrep_findroot_block", i1 false, i1 false}
!677 = !{ptr @trace_event_type_funcs_xrep_findroot_block, !137, !"trace_event_type_funcs_xrep_findroot_block", i1 false, i1 false}
!678 = !{ptr @.str.159, !137, !"<string literal>", i1 false, i1 false}
!679 = !{ptr @print_fmt_xrep_findroot_block, !137, !"print_fmt_xrep_findroot_block", i1 false, i1 false}
!680 = !{ptr @.str.160, !141, !"<string literal>", i1 false, i1 false}
!681 = !{ptr @.str.161, !141, !"<string literal>", i1 false, i1 false}
!682 = !{ptr @.str.162, !141, !"<string literal>", i1 false, i1 false}
!683 = !{ptr @.str.163, !141, !"<string literal>", i1 false, i1 false}
!684 = !{ptr @trace_event_fields_xrep_calc_ag_resblks, !141, !"trace_event_fields_xrep_calc_ag_resblks", i1 false, i1 false}
!685 = !{ptr @trace_event_type_funcs_xrep_calc_ag_resblks, !141, !"trace_event_type_funcs_xrep_calc_ag_resblks", i1 false, i1 false}
!686 = !{ptr @.str.164, !141, !"<string literal>", i1 false, i1 false}
!687 = !{ptr @print_fmt_xrep_calc_ag_resblks, !141, !"print_fmt_xrep_calc_ag_resblks", i1 false, i1 false}
!688 = !{ptr @.str.165, !145, !"<string literal>", i1 false, i1 false}
!689 = !{ptr @.str.166, !145, !"<string literal>", i1 false, i1 false}
!690 = !{ptr @.str.167, !145, !"<string literal>", i1 false, i1 false}
!691 = !{ptr @.str.168, !145, !"<string literal>", i1 false, i1 false}
!692 = !{ptr @trace_event_fields_xrep_calc_ag_resblks_btsize, !145, !"trace_event_fields_xrep_calc_ag_resblks_btsize", i1 false, i1 false}
!693 = !{ptr @trace_event_type_funcs_xrep_calc_ag_resblks_btsize, !145, !"trace_event_type_funcs_xrep_calc_ag_resblks_btsize", i1 false, i1 false}
!694 = !{ptr @.str.169, !145, !"<string literal>", i1 false, i1 false}
!695 = !{ptr @print_fmt_xrep_calc_ag_resblks_btsize, !145, !"print_fmt_xrep_calc_ag_resblks_btsize", i1 false, i1 false}
!696 = !{ptr @trace_event_fields_xrep_reset_counters, !149, !"trace_event_fields_xrep_reset_counters", i1 false, i1 false}
!697 = !{ptr @trace_event_type_funcs_xrep_reset_counters, !149, !"trace_event_type_funcs_xrep_reset_counters", i1 false, i1 false}
!698 = !{ptr @.str.170, !149, !"<string literal>", i1 false, i1 false}
!699 = !{ptr @print_fmt_xrep_reset_counters, !149, !"print_fmt_xrep_reset_counters", i1 false, i1 false}
!700 = !{ptr @.str.171, !153, !"<string literal>", i1 false, i1 false}
!701 = !{ptr @.str.172, !153, !"<string literal>", i1 false, i1 false}
!702 = !{ptr @.str.173, !153, !"<string literal>", i1 false, i1 false}
!703 = !{ptr @.str.174, !153, !"<string literal>", i1 false, i1 false}
!704 = !{ptr @trace_event_fields_xrep_ialloc_insert, !153, !"trace_event_fields_xrep_ialloc_insert", i1 false, i1 false}
!705 = !{ptr @trace_event_type_funcs_xrep_ialloc_insert, !153, !"trace_event_type_funcs_xrep_ialloc_insert", i1 false, i1 false}
!706 = !{ptr @.str.175, !153, !"<string literal>", i1 false, i1 false}
!707 = !{ptr @print_fmt_xrep_ialloc_insert, !153, !"print_fmt_xrep_ialloc_insert", i1 false, i1 false}
!708 = !{!"sp"}
!709 = !{i32 1, !"wchar_size", i32 2}
!710 = !{i32 1, !"min_enum_size", i32 4}
!711 = !{i32 8, !"branch-target-enforcement", i32 0}
!712 = !{i32 8, !"sign-return-address", i32 0}
!713 = !{i32 8, !"sign-return-address-all", i32 0}
!714 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!715 = !{i32 7, !"uwtable", i32 1}
!716 = !{i32 7, !"frame-pointer", i32 2}
!717 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!718 = !{!"branch_weights", i32 2000, i32 1}
!719 = !{!"branch_weights", i32 1, i32 2000}
!720 = !{!"auto-init"}
!721 = !{i64 2148465984, i64 2148466264, i64 2148466598, i64 2148466932}
