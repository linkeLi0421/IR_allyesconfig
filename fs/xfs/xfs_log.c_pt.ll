; ModuleID = '/llk/IR_all_yes/fs/xfs/xfs_log.c_pt.bc'
source_filename = "../fs/xfs/xfs_log.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"

%struct.xstats = type { ptr, %struct.xfs_kobj }
%struct.xfs_kobj = type { %struct.kobject, %struct.completion }
%struct.kobject = type { ptr, %struct.list_head, ptr, ptr, ptr, ptr, %struct.kref, %struct.delayed_work, i8 }
%struct.list_head = type { ptr, ptr }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.hlist_node = type { ptr, ptr }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.1 }
%union.anon.1 = type { i32 }
%struct.kobj_type = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.xfs_param = type { %struct.xfs_sysctl_val, %struct.xfs_sysctl_val, %struct.xfs_sysctl_val, %struct.xfs_sysctl_val, %struct.xfs_sysctl_val, %struct.xfs_sysctl_val, %struct.xfs_sysctl_val, %struct.xfs_sysctl_val, %struct.xfs_sysctl_val, %struct.xfs_sysctl_val, %struct.xfs_sysctl_val, %struct.xfs_sysctl_val, %struct.xfs_sysctl_val, %struct.xfs_sysctl_val, %struct.xfs_sysctl_val, %struct.xfs_sysctl_val }
%struct.xfs_sysctl_val = type { i32, i32, i32 }
%struct.tracepoint = type { ptr, %struct.static_key, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key = type { %struct.atomic_t, %union.anon.72 }
%union.anon.72 = type { i32 }
%struct.cpumask = type { [1 x i32] }
%struct.lock_class_key = type { %union.anon }
%union.anon = type { %struct.hlist_node }
%struct.bio_set = type { ptr, i32, ptr, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, i32, %struct.spinlock, %struct.bio_list, %struct.work_struct, ptr, %struct.hlist_node }
%struct.mempool_s = type { %struct.spinlock, i32, i32, ptr, ptr, ptr, ptr, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.spinlock = type { %union.anon.0 }
%union.anon.0 = type { %struct.raw_spinlock }
%struct.bio_list = type { ptr, ptr }
%struct.cpu_cache_fns = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.xfs_mount = type { %struct.xfs_sb, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i8, i8, i8, i8, i32, i32, i32, [2 x i32], [2 x i32], [2 x i32], [2 x i32], [2 x i32], [2 x i32], [2 x i32], [2 x i32], i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32], i32, i64, [5 x i64], [5 x i64], %struct.xfs_ino_geometry, %struct.xfs_trans_resv, i32, i8, i8, i8, i8, i8, i8, i8, i8, [116 x i8], %struct.spinlock, %struct.percpu_counter, %struct.percpu_counter, %struct.percpu_counter, %struct.percpu_counter, %struct.atomic64_t, %struct.xarray, %struct.spinlock, i64, i64, i64, %struct.delayed_work, %struct.xfs_kobj, %struct.xfs_kobj, %struct.xfs_kobj, [1 x [4 x %struct.xfs_error_cfg]], %struct.xstats, i32, i32, %struct.spinlock, %struct.shrinker, %struct.work_struct, i32, %struct.mutex, ptr, %struct.xfs_kobj }
%struct.xfs_sb = type { i32, i32, i64, i64, i64, %struct.uuid_t, i64, i64, i64, i64, i32, i32, i32, i32, i32, i16, i16, i16, i16, [12 x i8], i8, i8, i8, i8, i8, i8, i8, i8, i64, i64, i64, i64, i64, i64, i16, i8, i8, i32, i32, i32, i8, i8, i16, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, %struct.uuid_t }
%struct.uuid_t = type { [16 x i8] }
%struct.xfs_ino_geometry = type { i64, i32, i32, i32, i32, i32, i32, i32, [2 x i32], [2 x i32], i32, i32, i32, i32, i32, i32, i32, i64 }
%struct.xfs_trans_resv = type { %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res, %struct.xfs_trans_res }
%struct.xfs_trans_res = type { i32, i32, i32 }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.atomic64_t = type { i64 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.xfs_error_cfg = type { %struct.xfs_kobj, i32, i32 }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.xfs_buftarg = type { i32, ptr, ptr, i64, ptr, i32, i32, i32, i32, %struct.shrinker, %struct.list_lru, %struct.percpu_counter, %struct.ratelimit_state }
%struct.list_lru = type { ptr, %struct.list_head, i32, i8 }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.block_device = type { i64, i64, ptr, i32, i8, i32, i32, ptr, ptr, ptr, %struct.device, ptr, i32, i8, ptr, i8, %struct.spinlock, ptr, ptr, i32, %struct.mutex, ptr, ptr, i8 }
%struct.device = type { %struct.kobject, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, ptr, ptr, ptr, %struct.dev_msi_info, ptr, ptr, i64, i64, ptr, ptr, %struct.list_head, ptr, ptr, %struct.dev_archdata, ptr, ptr, i32, i32, %struct.spinlock, %struct.list_head, ptr, ptr, ptr, ptr, ptr, i32, i8 }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, ptr, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, ptr, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64, ptr, ptr, ptr }
%struct.pm_message = type { i32 }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.rb_node = type { i32, ptr, ptr }
%struct.dev_msi_info = type { ptr, ptr }
%struct.dev_archdata = type { ptr, i8 }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.xarray, ptr, ptr, ptr, ptr, i32, i32, %struct.mutex, i32, ptr, ptr, %struct.list_head, ptr, %struct.atomic_t, ptr, %struct.kobject, ptr, i32, ptr, %struct.lockdep_map, i64 }
%struct.xlog = type { ptr, ptr, ptr, ptr, ptr, %struct.delayed_work, i32, i32, ptr, i32, i32, i32, i32, i32, i64, i32, i32, [88 x i8], %struct.wait_queue_head, i32, ptr, %struct.spinlock, i32, i32, i32, i32, [8 x i8], %struct.atomic64_t, [120 x i8], %struct.atomic64_t, [120 x i8], %struct.xlog_grant_head, %struct.xlog_grant_head, %struct.xfs_kobj, [8 x ptr], i64, i32, %struct.rw_semaphore, [52 x i8] }
%struct.xlog_grant_head = type { %struct.spinlock, %struct.list_head, %struct.atomic64_t, [64 x i8] }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.__xfsstats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [15 x i32], [15 x i32], [15 x i32], [15 x i32], [15 x i32], [15 x i32], [15 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i64, i64 }
%struct.xlog_ticket = type { %struct.list_head, ptr, i32, %struct.atomic_t, i32, i32, i8, i8, i8, i8, i32, i32, i32, i32, [15 x %struct.xlog_res] }
%struct.xlog_res = type { i32, i32 }
%struct.xlog_in_core = type { %struct.wait_queue_head, %struct.wait_queue_head, ptr, ptr, ptr, i32, i32, i32, i32, ptr, %struct.list_head, [112 x i8], %struct.atomic_t, ptr, i8, %struct.semaphore, %struct.work_struct, %struct.bio, [0 x %struct.bio_vec], [40 x i8] }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%struct.bio = type { ptr, ptr, i32, i16, i16, i16, i8, %struct.atomic_t, %struct.bvec_iter, i32, ptr, ptr, ptr, %struct.bio_issue, i64, ptr, %union.anon.39, i16, i16, %struct.atomic_t, ptr, ptr, [0 x %struct.bio_vec] }
%struct.bvec_iter = type <{ i64, i32, i32, i32 }>
%struct.bio_issue = type { i64 }
%union.anon.39 = type { ptr }
%struct.bio_vec = type { ptr, i32, i32 }
%struct.xfs_ail = type { ptr, ptr, %struct.list_head, i64, i64, %struct.list_head, %struct.spinlock, i64, i32, %struct.list_head, %struct.wait_queue_head }
%struct.xlog_rec_header = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, [64 x i32], i32, %struct.uuid_t, i32 }
%union.xlog_in_core2 = type { %struct.xlog_rec_header, [184 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, i16, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [24 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [24 x i8] }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t, %struct.lockdep_map }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { ptr }
%struct.hlist_head = type { ptr }
%struct.callback_head = type { ptr, ptr }
%struct.xfs_cil = type { ptr, %struct.list_head, %struct.spinlock, ptr, [68 x i8], %struct.rw_semaphore, ptr, [28 x i8], %struct.spinlock, i64, i8, %struct.list_head, %struct.wait_queue_head, %struct.wait_queue_head, i64, %struct.wait_queue_head, [20 x i8] }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.57, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.30 }
%struct.llist_node = type { ptr }
%union.anon.30 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.32 }
%union.anon.32 = type { %struct.anon.33 }
%struct.anon.33 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.tlbflush_unmap_batch = type {}
%union.anon.57 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.xfs_unmount_log_format = type { i16, i16, i32 }
%struct.xfs_log_iovec = type { ptr, i32, i32 }
%struct.xfs_log_vec = type { ptr, i32, ptr, ptr, ptr, i32, i32, i32 }
%struct.xfs_log_item = type { %struct.list_head, %struct.list_head, i64, ptr, ptr, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, ptr, i64 }
%struct.xfs_trans = type { i32, i32, i32, i32, i32, i32, i32, i32, i64, ptr, ptr, ptr, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, i32 }
%struct.xlog_op_header = type { i32, i32, i8, i8, i16 }
%struct.page = type { i32, %union.anon.17, %union.anon.65, %struct.atomic_t, i32 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { %struct.list_head, ptr, i32, i32 }
%union.anon.65 = type { %struct.atomic_t }

@xfsstats = external dso_local local_unnamed_addr global %struct.xstats, align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@.str = internal constant { [47 x i8], [49 x i8] } { [47 x i8] c"client == XFS_TRANSACTION || client == XFS_LOG\00", [49 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"fs/xfs/xfs_log.c\00", [47 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"*ticp == NULL\00", [18 x i8] zeroinitializer }, align 32
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@.str.3 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"iclog->ic_state == XLOG_STATE_ACTIVE\00", [59 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"Mounting V%d Filesystem\00", [40 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [78 x i8], [50 x i8] } { [78 x i8] c"Mounting V%d filesystem in no-recovery mode. Filesystem will be inconsistent.\00", [50 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"xfs_is_readonly(mp)\00", [44 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [56 x i8], [40 x i8] } { [56 x i8] c"Log size %d blocks too small, minimum size is %d blocks\00", [40 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"Log size %d blocks too large, maximum size is %lld blocks\00", [38 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"log size %lld bytes too large, maximum size is %lld bytes\00", [38 x i8] zeroinitializer }, align 32
@.str.10 = internal constant { [58 x i8], [38 x i8] } { [58 x i8] c"log stripe unit %u bytes must be a multiple of block size\00", [38 x i8] zeroinitializer }, align 32
@.str.11 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"AAIEEE! Log failed size checks. Abort!\00", [57 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"0\00", [30 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"Log size out of supported range.\00", [63 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [104 x i8], [56 x i8] } { [104 x i8] c"Continuing onwards, but if log hangs are experienced then please report this message in the bug report.\00", [56 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"AIL initialisation failed: error %d\00", [60 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"log mount/recovery failed: error %d\00", [60 x i8] zeroinitializer }, align 32
@xfs_log_ktype = external dso_local global %struct.kobj_type, align 4
@.str.17 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"log\00", [28 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"Ending recovery (logdev: %s)\00", [35 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"internal\00", [23 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"Ending clean mount\00", [45 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"!error || xlog_is_shutdown(log)\00", [32 x i8] zeroinitializer }, align 32
@.str.22 = internal constant { [49 x i8], [47 x i8] } { [49 x i8] c"Failed to clear log incompat features on quiesce\00", [47 x i8] zeroinitializer }, align 32
@.str.23 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"!xlog_in_recovery(log)\00", [41 x i8] zeroinitializer }, align 32
@xfs_params = external dso_local local_unnamed_addr global %struct.xfs_param, align 4
@.str.24 = internal constant { [37 x i8], [59 x i8] } { [37 x i8] c"BTOBB(need_bytes) < log->l_logBBsize\00", [59 x i8] zeroinitializer }, align 32
@xlog_print_tic_res.res_type_str = internal constant { [27 x ptr], [52 x i8] } { [27 x ptr] [ptr null, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50], [52 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"bformat\00", [24 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"bchunk\00", [25 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"efi_format\00", [21 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"efd_format\00", [21 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"iformat\00", [24 x i8] zeroinitializer }, align 32
@.str.30 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"icore\00", [26 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"iext\00", [27 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ibroot\00", [25 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"ilocal\00", [25 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"iattr_ext\00", [22 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"iattr_broot\00", [20 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"iattr_local\00", [20 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"qformat\00", [24 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"dquot\00", [26 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"quotaoff\00", [23 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"LR header\00", [22 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"unmount\00", [24 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"commit\00", [25 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"trans header\00", [19 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"inode create\00", [19 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"rui_format\00", [21 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"rud_format\00", [21 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"cui_format\00", [21 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"cud_format\00", [21 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"bui_format\00", [21 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"bud_format\00", [21 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"ticket reservation summary:\00", [36 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"  unit res    = %d bytes\00", [39 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"  current res = %d bytes\00", [39 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"  total reg   = %u bytes (o/flow = %u bytes)\00", [51 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"  ophdrs      = %u (ophdr space = %u bytes)\00", [52 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"  ophdr + reg = %u bytes\00", [39 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"  num regions = %u\00", [45 x i8] zeroinitializer }, align 32
@.str.58 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"region[%u]: %s - %u bytes\00", [38 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"bad-rtype\00", [22 x i8] zeroinitializer }, align 32
@.str.60 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"transaction summary:\00", [43 x i8] zeroinitializer }, align 32
@.str.61 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"  log res   = %d\00", [47 x i8] zeroinitializer }, align 32
@.str.62 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"  log count = %d\00", [47 x i8] zeroinitializer }, align 32
@.str.63 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"  flags     = 0x%x\00", [45 x i8] zeroinitializer }, align 32
@.str.64 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"log item: \00", [21 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"  type\09= 0x%x\00", [18 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"  flags\09= 0x%lx\00", [16 x i8] zeroinitializer }, align 32
@.str.67 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"  niovecs\09= %d\00", [17 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"  size\09= %d\00", [20 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"  bytes\09= %d\00", [19 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"  buf len\09= %d\00", [17 x i8] zeroinitializer }, align 32
@.str.71 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"  iovec[%d]\00", [20 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"    type\09= 0x%x\00", [16 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"    len\09= %d\00", [19 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"    first %d bytes of iovec[%d]:\00", [63 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [55 x i8], [41 x i8] } { [55 x i8] c"ctx ticket reservation ran out. Need to up reservation\00", [41 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [33 x i8], [63 x i8] } { [33 x i8] c"log_offset <= iclog->ic_size - 1\00", [63 x i8] zeroinitializer }, align 32
@.str.77 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"lv->lv_niovecs == 0\00", [44 x i8] zeroinitializer }, align 32
@.str.78 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"reg->i_len % sizeof(int32_t) == 0\00", [62 x i8] zeroinitializer }, align 32
@.str.79 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"(unsigned long)ptr % sizeof(int32_t) == 0\00", [54 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"copy_len >= 0\00", [18 x i8] zeroinitializer }, align 32
@.str.81 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"len == 0\00", [23 x i8] zeroinitializer }, align 32
@.str.82 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"ticket->t_flags & XLOG_TIC_PERM_RESERV\00", [57 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"log->l_curr_block >= 0\00", [41 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"iclog == log->l_iclog\00", [42 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"seq != 0\00", [23 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"atomic_read(&ticket->t_ref) > 0\00", [32 x i8] zeroinitializer }, align 32
@xfs_log_ticket_cache = dso_local global { ptr, [28 x i8] } zeroinitializer, align 32
@.str.87 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"!xlog_is_shutdown(log)\00", [41 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [131 x i8], [61 x i8] } { [131 x i8] c"Corruption warning: Metadata has LSN (%d:%d) ahead of current LSN (%d:%d). Please unmount and run xfs_repair (>= v4.3) to resolve.\00", [61 x i8] zeroinitializer }, align 32
@__tracepoint_xfs_log_regrant = external dso_local global %struct.tracepoint, align 4
@.str.89 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"fs/xfs/xfs_trace.h\00", [45 x i8] zeroinitializer }, align 32
@trace_xfs_log_regrant.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.90 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.91 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"tic->t_flags & XLOG_TIC_PERM_RESERV\00", [60 x i8] zeroinitializer }, align 32
@__tracepoint_xfs_log_grant_sleep = external dso_local global %struct.tracepoint, align 4
@trace_xfs_log_grant_sleep.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xfs_log_grant_wake = external dso_local global %struct.tracepoint, align 4
@trace_xfs_log_grant_wake.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xfs_log_regrant_exit = external dso_local global %struct.tracepoint, align 4
@trace_xfs_log_regrant_exit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xfs_log_reserve = external dso_local global %struct.tracepoint, align 4
@trace_xfs_log_reserve.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xfs_log_reserve_exit = external dso_local global %struct.tracepoint, align 4
@trace_xfs_log_reserve_exit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xlog_iclog_release = external dso_local global %struct.tracepoint, align 4
@trace_xlog_iclog_release.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xlog_iclog_syncing = external dso_local global %struct.tracepoint, align 4
@trace_xlog_iclog_syncing.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.93 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"%s\00", [29 x i8] zeroinitializer }, align 32
@init_completion.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.94 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"&x->wait\00", [23 x i8] zeroinitializer }, align 32
@__tracepoint_xlog_iclog_wait_on = external dso_local global %struct.tracepoint, align 4
@trace_xlog_iclog_wait_on.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.96 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"xfs_fs_has_sickness(mp, XFS_SICK_FS_COUNTERS)\00", [50 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"%s: will fix summary counters at next mount\00", [52 x i8] zeroinitializer }, align 32
@__func__.xfs_log_unmount_write = private unnamed_addr constant [22 x i8] c"xfs_log_unmount_write\00", align 1
@.str.98 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"iclog->ic_offset == 0\00", [42 x i8] zeroinitializer }, align 32
@.str.99 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"%s: unmount record failed\00", [38 x i8] zeroinitializer }, align 32
@__func__.xlog_unmount_write = private unnamed_addr constant [19 x i8] c"xlog_unmount_write\00", align 1
@__tracepoint_xfs_log_umount_write = external dso_local global %struct.tracepoint, align 4
@trace_xfs_log_umount_write.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xfs_log_grant_wake_up = external dso_local global %struct.tracepoint, align 4
@trace_xfs_log_grant_wake_up.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.100 = internal constant { [130 x i8], [62 x i8] } { [130 x i8] c"(xlog_cil_empty(mp->m_log) && xlog_iclogs_empty(mp->m_log) && !xfs_ail_min_lsn(mp->m_log->l_ailp)) || xlog_is_shutdown(mp->m_log)\00", [62 x i8] zeroinitializer }, align 32
@__tracepoint_xfs_log_assign_tail_lsn = external dso_local global %struct.tracepoint, align 4
@trace_xfs_log_assign_tail_lsn.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.101 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"tail_cycle == (head_cycle - 1)\00", [33 x i8] zeroinitializer }, align 32
@.str.102 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"xlog_space_left: head behind tail\00", [62 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"  tail_cycle = %d, tail_bytes = %d\00", [61 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"  GH   cycle = %d, GH   bytes = %d\00", [61 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"Log allocation failed: No memory!\00", [62 x i8] zeroinitializer }, align 32
@xlog_alloc_log.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.106 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"(work_completion)(&(&log->l_work)->work)\00", [55 x i8] zeroinitializer }, align 32
@xlog_alloc_log.__key.107 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.108 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"&(&log->l_work)->timer\00", [41 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Log sector size too small (0x%x < 0x%x)\00", [56 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"Log sector size too large (0x%x > 0x%x)\00", [56 x i8] zeroinitializer }, align 32
@.str.111 = internal constant { [50 x i8], [46 x i8] } { [50 x i8] c"log sector size (0x%x) invalid for configuration.\00", [46 x i8] zeroinitializer }, align 32
@xlog_alloc_log.__key.112 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.113 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"&log->l_incompat_users\00", [41 x i8] zeroinitializer }, align 32
@xlog_alloc_log.__key.114 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.115 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"&log->l_icloglock\00", [46 x i8] zeroinitializer }, align 32
@xlog_alloc_log.__key.116 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.117 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"&log->l_flush_wait\00", [45 x i8] zeroinitializer }, align 32
@.str.118 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"log->l_iclog_size >= 4096\00", [38 x i8] zeroinitializer }, align 32
@xlog_alloc_log.__key.119 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.120 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"&iclog->ic_force_wait\00", [42 x i8] zeroinitializer }, align 32
@xlog_alloc_log.__key.121 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.122 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"&iclog->ic_write_wait\00", [42 x i8] zeroinitializer }, align 32
@xlog_alloc_log.__key.123 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.124 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"(work_completion)(&iclog->ic_end_io_work)\00", [54 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"xfs-log/%s\00", [21 x i8] zeroinitializer }, align 32
@xlog_grant_head_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.126 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"&head->lock\00", [20 x i8] zeroinitializer }, align 32
@.str.127 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"error\00", [26 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"log I/O error %d\00", [47 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"atomic_read(&iclog->ic_refcnt) == 0\00", [60 x i8] zeroinitializer }, align 32
@.str.130 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"iclog->ic_state == XLOG_STATE_SYNCING\00", [58 x i8] zeroinitializer }, align 32
@__tracepoint_xlog_iclog_sync_done = external dso_local global %struct.tracepoint, align 4
@trace_xlog_iclog_sync_done.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.131 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"%s: possible infinite loop (%d iterations)\00", [53 x i8] zeroinitializer }, align 32
@__func__.xlog_state_do_callback = private unnamed_addr constant [23 x i8] c"xlog_state_do_callback\00", align 1
@.str.132 = internal constant { [67 x i8], [61 x i8] } { [67 x i8] c"XFS_LSN_CMP(atomic64_read(&log->l_last_sync_lsn), header_lsn) <= 0\00", [61 x i8] zeroinitializer }, align 32
@__tracepoint_xlog_iclog_callback = external dso_local global %struct.tracepoint, align 4
@trace_xlog_iclog_callback.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xlog_iclog_callbacks_start = external dso_local global %struct.tracepoint, align 4
@trace_xlog_iclog_callbacks_start.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xlog_iclog_callbacks_done = external dso_local global %struct.tracepoint, align 4
@trace_xlog_iclog_callbacks_done.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xlog_iclog_clean = external dso_local global %struct.tracepoint, align 4
@trace_xlog_iclog_clean.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.133 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"list_empty_careful(&iclog->ic_callbacks)\00", [55 x i8] zeroinitializer }, align 32
@__tracepoint_xlog_iclog_activate = external dso_local global %struct.tracepoint, align 4
@trace_xlog_iclog_activate.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@sema_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.134 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"(*sem).lock\00", [20 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"semaphore->lock\00", [16 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"false\00", [26 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [69 x i8], [59 x i8] } { [69 x i8] c"Intentionally corrupted log record at LSN 0x%llx. Shutdown imminent.\00", [59 x i8] zeroinitializer }, align 32
@__tracepoint_xlog_iclog_sync = external dso_local global %struct.tracepoint, align 4
@trace_xlog_iclog_sync.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.138 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"count >= count_init\00", [44 x i8] zeroinitializer }, align 32
@.str.139 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"*roundoff < log->l_iclog_roundoff\00", [62 x i8] zeroinitializer }, align 32
@.str.140 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"icptr\00", [26 x i8] zeroinitializer }, align 32
@.str.141 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"%s: corrupt iclog ring\00", [41 x i8] zeroinitializer }, align 32
@__func__.xlog_verify_iclog = private unnamed_addr constant [18 x i8] c"xlog_verify_iclog\00", align 1
@.str.142 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c"%s: invalid magic num\00", [42 x i8] zeroinitializer }, align 32
@.str.143 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"%s: unexpected magic num\00", [39 x i8] zeroinitializer }, align 32
@.str.144 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"%s: invalid clientid %d op %px offset 0x%lx\00", [52 x i8] zeroinitializer }, align 32
@.str.145 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"bno < log->l_logBBsize\00", [41 x i8] zeroinitializer }, align 32
@fs_bio_set = external dso_local global %struct.bio_set, align 4
@__tracepoint_xlog_iclog_write = external dso_local global %struct.tracepoint, align 4
@trace_xlog_iclog_write.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@mem_map = external dso_local local_unnamed_addr global ptr, align 4
@cpu_cache = external dso_local local_unnamed_addr global %struct.cpu_cache_fns, align 4
@cacheid = external dso_local local_unnamed_addr global i32, align 4
@.str.146 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"Bad XFS transaction clientid 0x%x in ticket %px\00", [48 x i8] zeroinitializer }, align 32
@.str.147 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"iclog->ic_state == XLOG_STATE_WANT_SYNC || xlog_is_shutdown(log)\00", [63 x i8] zeroinitializer }, align 32
@.str.148 = internal constant { [35 x i8], [61 x i8] } { [35 x i8] c"iclog->ic_offset <= iclog->ic_size\00", [61 x i8] zeroinitializer }, align 32
@__tracepoint_xlog_iclog_get_space = external dso_local global %struct.tracepoint, align 4
@trace_xlog_iclog_get_space.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xfs_log_ticket_regrant = external dso_local global %struct.tracepoint, align 4
@trace_xfs_log_ticket_regrant.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xfs_log_ticket_regrant_sub = external dso_local global %struct.tracepoint, align 4
@trace_xfs_log_ticket_regrant_sub.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xfs_log_ticket_regrant_exit = external dso_local global %struct.tracepoint, align 4
@trace_xfs_log_ticket_regrant_exit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xfs_log_ticket_ungrant = external dso_local global %struct.tracepoint, align 4
@trace_xfs_log_ticket_ungrant.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xfs_log_ticket_ungrant_sub = external dso_local global %struct.tracepoint, align 4
@trace_xfs_log_ticket_ungrant_sub.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xfs_log_ticket_ungrant_exit = external dso_local global %struct.tracepoint, align 4
@trace_xfs_log_ticket_ungrant_exit.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xlog_iclog_switch = external dso_local global %struct.tracepoint, align 4
@trace_xlog_iclog_switch.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xfs_log_force = external dso_local global %struct.tracepoint, align 4
@trace_xfs_log_force.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xlog_iclog_force = external dso_local global %struct.tracepoint, align 4
@trace_xlog_iclog_force.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__tracepoint_xlog_iclog_force_lsn = external dso_local global %struct.tracepoint, align 4
@trace_xlog_iclog_force_lsn.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.149 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"%s: invalid ptr\00", [16 x i8] zeroinitializer }, align 32
@__func__.xlog_verify_dest_ptr = private unnamed_addr constant [21 x i8] c"xlog_verify_dest_ptr\00", align 1
@.str.150 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"%s: cycle - 1 != tail_cycle\00", [36 x i8] zeroinitializer }, align 32
@__func__.xlog_verify_grant_tail = private unnamed_addr constant [23 x i8] c"xlog_verify_grant_tail\00", align 1
@.str.151 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"%s: space > BBTOB(tail_blocks)\00", [33 x i8] zeroinitializer }, align 32
@.str.152 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"%s: ran out of log space\00", [39 x i8] zeroinitializer }, align 32
@__func__.xlog_verify_tail_lsn = private unnamed_addr constant [21 x i8] c"xlog_verify_tail_lsn\00", align 1
@.str.153 = internal constant { [43 x i8], [53 x i8] } { [43 x i8] c"CYCLE_LSN(tail_lsn)+1 == log->l_prev_cycle\00", [53 x i8] zeroinitializer }, align 32
@.str.154 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"%s: tail wrapped\00", [47 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 8, i64 105, i64 170]
@__sancov_gen_cov_switch_values.155 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.156 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 5]
@__sancov_gen_cov_switch_values.157 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 5]
@__sancov_gen_cov_switch_values.158 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.159 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.160 = internal global [5 x i64] [i64 3, i64 8, i64 2, i64 105, i64 170]
@__sancov_gen_cov_switch_values.161 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.162 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 1]
@__sancov_gen_cov_switch_values.163 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.164 = internal global [5 x i64] [i64 3, i64 32, i64 0, i64 3, i64 5]
@__sancov_gen_cov_switch_values.165 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 5]
@__sancov_gen_cov_switch_values.166 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4]
@__sancov_gen_cov_switch_values.167 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 5]
@__sancov_gen_cov_switch_values.168 = internal global [4 x i64] [i64 2, i64 8, i64 105, i64 170]
@___asan_gen_.174 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 448, i32 2 }
@___asan_gen_.177 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 455, i32 2 }
@___asan_gen_.180 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 598, i32 3 }
@___asan_gen_.183 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 637, i32 18 }
@___asan_gen_.186 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 641, i32 1 }
@___asan_gen_.189 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 643, i32 3 }
@___asan_gen_.192 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 671, i32 3 }
@___asan_gen_.195 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 676, i32 3 }
@___asan_gen_.198 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 681, i32 3 }
@___asan_gen_.201 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 688, i32 3 }
@___asan_gen_.204 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 699, i32 17 }
@___asan_gen_.207 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 700, i32 4 }
@___asan_gen_.210 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 703, i32 16 }
@___asan_gen_.213 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 705, i32 1 }
@___asan_gen_.216 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 713, i32 16 }
@___asan_gen_.219 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 733, i32 17 }
@___asan_gen_.222 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 741, i32 11 }
@___asan_gen_.225 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 836, i32 18 }
@___asan_gen_.228 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 837, i32 37 }
@___asan_gen_.231 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 839, i32 16 }
@___asan_gen_.234 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 848, i32 2 }
@___asan_gen_.237 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1047, i32 2 }
@___asan_gen_.240 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1131, i32 3 }
@___asan_gen_.243 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1679, i32 2 }
@___asan_gen_.244 = private unnamed_addr constant [13 x i8] c"res_type_str\00", align 1
@___asan_gen_.246 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2133, i32 15 }
@___asan_gen_.249 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2134, i32 6 }
@___asan_gen_.252 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2135, i32 6 }
@___asan_gen_.255 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2136, i32 6 }
@___asan_gen_.258 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2137, i32 6 }
@___asan_gen_.261 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2138, i32 6 }
@___asan_gen_.264 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2139, i32 6 }
@___asan_gen_.267 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2140, i32 6 }
@___asan_gen_.270 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2141, i32 6 }
@___asan_gen_.273 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2142, i32 6 }
@___asan_gen_.276 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2143, i32 6 }
@___asan_gen_.279 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2144, i32 6 }
@___asan_gen_.282 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2145, i32 6 }
@___asan_gen_.285 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2146, i32 6 }
@___asan_gen_.288 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2147, i32 6 }
@___asan_gen_.291 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2148, i32 6 }
@___asan_gen_.294 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2149, i32 6 }
@___asan_gen_.297 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2150, i32 6 }
@___asan_gen_.300 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2151, i32 6 }
@___asan_gen_.303 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2152, i32 6 }
@___asan_gen_.306 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2153, i32 6 }
@___asan_gen_.309 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2154, i32 6 }
@___asan_gen_.312 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2155, i32 6 }
@___asan_gen_.315 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2156, i32 6 }
@___asan_gen_.318 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2157, i32 6 }
@___asan_gen_.321 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2158, i32 6 }
@___asan_gen_.324 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2159, i32 6 }
@___asan_gen_.327 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2164, i32 15 }
@___asan_gen_.330 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2165, i32 15 }
@___asan_gen_.333 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2167, i32 15 }
@___asan_gen_.336 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2169, i32 15 }
@___asan_gen_.339 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2171, i32 15 }
@___asan_gen_.342 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2173, i32 15 }
@___asan_gen_.345 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2175, i32 15 }
@___asan_gen_.348 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2180, i32 16 }
@___asan_gen_.351 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2182, i32 8 }
@___asan_gen_.354 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2198, i32 15 }
@___asan_gen_.357 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2199, i32 15 }
@___asan_gen_.360 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2200, i32 15 }
@___asan_gen_.363 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2201, i32 15 }
@___asan_gen_.366 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2211, i32 16 }
@___asan_gen_.369 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2212, i32 16 }
@___asan_gen_.372 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2213, i32 16 }
@___asan_gen_.375 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2216, i32 16 }
@___asan_gen_.378 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2217, i32 16 }
@___asan_gen_.381 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2218, i32 16 }
@___asan_gen_.384 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2219, i32 16 }
@___asan_gen_.387 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2226, i32 17 }
@___asan_gen_.390 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2227, i32 17 }
@___asan_gen_.393 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2228, i32 17 }
@___asan_gen_.396 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2229, i32 17 }
@___asan_gen_.399 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2489, i32 8 }
@___asan_gen_.402 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2504, i32 3 }
@___asan_gen_.405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2531, i32 5 }
@___asan_gen_.408 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2537, i32 4 }
@___asan_gen_.411 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2538, i32 4 }
@___asan_gen_.414 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2576, i32 4 }
@___asan_gen_.417 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2628, i32 2 }
@___asan_gen_.420 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 3158, i32 3 }
@___asan_gen_.423 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 3210, i32 3 }
@___asan_gen_.426 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 3216, i32 2 }
@___asan_gen_.429 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 3464, i32 2 }
@___asan_gen_.432 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 3488, i32 2 }
@___asan_gen_.433 = private unnamed_addr constant [21 x i8] c"xfs_log_ticket_cache\00", align 1
@___asan_gen_.435 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 24, i32 20 }
@___asan_gen_.438 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 3854, i32 2 }
@___asan_gen_.441 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 3963, i32 1 }
@___asan_gen_.446 = private unnamed_addr constant [22 x i8] c"../fs/xfs/xfs_trace.h\00", align 1
@___asan_gen_.447 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.446, i32 1290, i32 1 }
@___asan_gen_.449 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.450 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.449, i32 108, i32 2 }
@___asan_gen_.453 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 176, i32 3 }
@___asan_gen_.455 = private unnamed_addr constant [22 x i8] c"../fs/xfs/xfs_sysfs.h\00", align 1
@___asan_gen_.456 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.455, i32 39, i32 61 }
@___asan_gen_.461 = private unnamed_addr constant [30 x i8] c"../include/linux/completion.h\00", align 1
@___asan_gen_.462 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.461, i32 87, i32 2 }
@___asan_gen_.465 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1013, i32 6 }
@___asan_gen_.468 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1015, i32 17 }
@___asan_gen_.471 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 982, i32 3 }
@___asan_gen_.474 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 961, i32 17 }
@___asan_gen_.477 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1216, i32 2 }
@___asan_gen_.480 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1338, i32 3 }
@___asan_gen_.483 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1346, i32 23 }
@___asan_gen_.486 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1347, i32 23 }
@___asan_gen_.489 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1349, i32 23 }
@___asan_gen_.492 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1515, i32 16 }
@___asan_gen_.504 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1526, i32 2 }
@___asan_gen_.507 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1546, i32 17 }
@___asan_gen_.510 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1553, i32 17 }
@___asan_gen_.513 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1562, i32 3 }
@___asan_gen_.519 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1569, i32 2 }
@___asan_gen_.525 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1573, i32 2 }
@___asan_gen_.531 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1574, i32 2 }
@___asan_gen_.534 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1584, i32 2 }
@___asan_gen_.540 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1621, i32 3 }
@___asan_gen_.546 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1622, i32 3 }
@___asan_gen_.552 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1623, i32 3 }
@___asan_gen_.555 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1631, i32 43 }
@___asan_gen_.561 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 154, i32 2 }
@___asan_gen_.564 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1375, i32 6 }
@___asan_gen_.567 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1376, i32 24 }
@___asan_gen_.570 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2941, i32 2 }
@___asan_gen_.573 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2950, i32 3 }
@___asan_gen_.576 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2916, i32 5 }
@___asan_gen_.579 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2800, i32 2 }
@___asan_gen_.582 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2643, i32 2 }
@___asan_gen_.583 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.585 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.590, i32 33, i32 31 }
@___asan_gen_.588 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.590, i32 34, i32 28 }
@___asan_gen_.590 = private unnamed_addr constant [29 x i8] c"../include/linux/semaphore.h\00", align 1
@___asan_gen_.591 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.590, i32 35, i32 39 }
@___asan_gen_.594 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2055, i32 6 }
@___asan_gen_.597 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2059, i32 2 }
@___asan_gen_.600 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1979, i32 2 }
@___asan_gen_.603 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1980, i32 2 }
@___asan_gen_.606 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 3754, i32 3 }
@___asan_gen_.609 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 3757, i32 24 }
@___asan_gen_.612 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 3762, i32 24 }
@___asan_gen_.615 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 3768, i32 25 }
@___asan_gen_.618 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 3799, i32 5 }
@___asan_gen_.621 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 1861, i32 2 }
@___asan_gen_.624 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2315, i32 4 }
@___asan_gen_.627 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 2412, i32 3 }
@___asan_gen_.630 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 3078, i32 2 }
@___asan_gen_.633 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 3656, i32 24 }
@___asan_gen_.636 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 3683, i32 5 }
@___asan_gen_.639 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 3689, i32 5 }
@___asan_gen_.642 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 3707, i32 24 }
@___asan_gen_.645 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 3709, i32 2 }
@___asan_gen_.646 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.647 = private constant [20 x i8] c"../fs/xfs/xfs_log.c\00", align 1
@___asan_gen_.648 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.647, i32 3712, i32 24 }
@llvm.compiler.used = appending global [160 x ptr] [ptr @.str, ptr @.str.1, ptr @.str.2, ptr @.str.3, ptr @.str.4, ptr @.str.5, ptr @.str.6, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @xlog_print_tic_res.res_type_str, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @.str.59, ptr @.str.60, ptr @.str.61, ptr @.str.62, ptr @.str.63, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @.str.77, ptr @.str.78, ptr @.str.79, ptr @.str.80, ptr @.str.81, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @xfs_log_ticket_cache, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @init_completion.__key, ptr @.str.94, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @.str.102, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @xlog_alloc_log.__key, ptr @.str.106, ptr @xlog_alloc_log.__key.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @xlog_alloc_log.__key.112, ptr @.str.113, ptr @xlog_alloc_log.__key.114, ptr @.str.115, ptr @xlog_alloc_log.__key.116, ptr @.str.117, ptr @.str.118, ptr @xlog_alloc_log.__key.119, ptr @.str.120, ptr @xlog_alloc_log.__key.121, ptr @.str.122, ptr @xlog_alloc_log.__key.123, ptr @.str.124, ptr @.str.125, ptr @xlog_grant_head_init.__key, ptr @.str.126, ptr @.str.127, ptr @.str.128, ptr @.str.129, ptr @.str.130, ptr @.str.131, ptr @.str.132, ptr @.str.133, ptr @sema_init.__key, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @.str.139, ptr @.str.140, ptr @.str.141, ptr @.str.142, ptr @.str.143, ptr @.str.144, ptr @.str.145, ptr @.str.146, ptr @.str.147, ptr @.str.148, ptr @.str.149, ptr @.str.150, ptr @.str.151, ptr @.str.152, ptr @.str.153, ptr @.str.154], section "llvm.metadata"
@0 = internal global [160 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 47, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.174 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.174 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.180 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 78, i32 128, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.186 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.189 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.192 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.195 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.198 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 58, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.201 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.207 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.210 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 104, i32 160, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.213 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.219 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.222 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.225 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.228 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.231 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.234 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 49, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.237 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.240 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 37, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.243 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xlog_print_tic_res.res_type_str to i32), i32 108, i32 160, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.246 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.249 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.252 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.255 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.258 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.261 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.264 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.267 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.270 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.273 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.276 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.279 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.282 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.285 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.288 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.291 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.294 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.297 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.300 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.303 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.306 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.309 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.312 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.315 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.318 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.321 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.324 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.327 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.330 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.333 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.336 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.339 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.342 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.357 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.62 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.366 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.369 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.375 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.378 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 55, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.399 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 33, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.408 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.81 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.420 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.429 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.432 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xfs_log_ticket_cache to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.433 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 131, i32 192, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.453 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.456 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_completion.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.462 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.465 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.468 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.471 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.474 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 130, i32 192, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.477 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.480 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.483 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.486 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.489 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.492 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xlog_alloc_log.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xlog_alloc_log.__key.107 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.504 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.507 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.510 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 50, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.513 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xlog_alloc_log.__key.112 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.519 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xlog_alloc_log.__key.114 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.525 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xlog_alloc_log.__key.116 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.531 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.531 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.534 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xlog_alloc_log.__key.119 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.540 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xlog_alloc_log.__key.121 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.546 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xlog_alloc_log.__key.123 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.552 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.555 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xlog_grant_head_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.126 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.561 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.127 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.564 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.567 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.570 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.130 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.573 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.576 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.132 to i32), i32 67, i32 128, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.579 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.582 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @sema_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.583 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.585 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.588 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.591 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.594 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 69, i32 128, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.597 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.600 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.139 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.603 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.140 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.606 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.141 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.609 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.142 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.612 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.143 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.615 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.144 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.618 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.145 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.621 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.146 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.624 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.147 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.627 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.148 to i32), i32 35, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.630 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.149 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.633 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.150 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.636 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.151 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.639 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.152 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.642 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.153 to i32), i32 43, i32 96, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.645 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.154 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.646 to i32), i32 ptrtoint (ptr @___asan_gen_.647 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.648 to i32), i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @xfs_log_writable(ptr nocapture noundef readonly %mp) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %m_features.i = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 61
  %0 = ptrtoint ptr %m_features.i to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %m_features.i, align 8
  %and.i = and i64 %1, 4611686018427387904
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.i.not = icmp eq i64 %and.i, 0
  br i1 %tobool.i.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end:                                           ; preds = %entry
  %m_ddev_targp = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 13
  %2 = ptrtoint ptr %m_ddev_targp to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %m_ddev_targp, align 8
  %bt_bdev = getelementptr inbounds %struct.xfs_buftarg, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %bt_bdev to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %bt_bdev, align 4
  %bd_read_only.i = getelementptr inbounds %struct.block_device, ptr %5, i32 0, i32 4
  %6 = ptrtoint ptr %bd_read_only.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %bd_read_only.i, align 8, !range !429
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.not.i = icmp eq i8 %7, 0
  br i1 %tobool.not.i, label %lor.rhs.i, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

lor.rhs.i:                                        ; preds = %if.end
  %bd_disk.i = getelementptr inbounds %struct.block_device, ptr %5, i32 0, i32 17
  %8 = ptrtoint ptr %bd_disk.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %bd_disk.i, align 8
  %part0.i.i = getelementptr inbounds %struct.gendisk, ptr %9, i32 0, i32 7
  %10 = ptrtoint ptr %part0.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %part0.i.i, align 4
  %bd_read_only.i.i = getelementptr inbounds %struct.block_device, ptr %11, i32 0, i32 4
  %12 = ptrtoint ptr %bd_read_only.i.i to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %bd_read_only.i.i, align 8, !range !429
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.not.i.i = icmp eq i8 %13, 0
  br i1 %tobool.not.i.i, label %bdev_read_only.exit, label %lor.rhs.i.return_crit_edge

lor.rhs.i.return_crit_edge:                       ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

bdev_read_only.exit:                              ; preds = %lor.rhs.i
  %state.i.i = getelementptr inbounds %struct.gendisk, ptr %9, i32 0, i32 12
  %14 = ptrtoint ptr %state.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %state.i.i, align 4
  %16 = and i32 %15, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not = icmp eq i32 %16, 0
  br i1 %tobool.not, label %if.end3, label %bdev_read_only.exit.return_crit_edge

bdev_read_only.exit.return_crit_edge:             ; preds = %bdev_read_only.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end3:                                          ; preds = %bdev_read_only.exit
  %m_log = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 8
  %17 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %m_log, align 4
  %l_targ = getelementptr inbounds %struct.xlog, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %l_targ to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %l_targ, align 4
  %bt_bdev4 = getelementptr inbounds %struct.xfs_buftarg, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %bt_bdev4 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %bt_bdev4, align 4
  %bd_read_only.i16 = getelementptr inbounds %struct.block_device, ptr %22, i32 0, i32 4
  %23 = ptrtoint ptr %bd_read_only.i16 to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %bd_read_only.i16, align 8, !range !429
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool.not.i17 = icmp eq i8 %24, 0
  br i1 %tobool.not.i17, label %lor.rhs.i22, label %if.end3.return_crit_edge

if.end3.return_crit_edge:                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

lor.rhs.i22:                                      ; preds = %if.end3
  %bd_disk.i18 = getelementptr inbounds %struct.block_device, ptr %22, i32 0, i32 17
  %25 = ptrtoint ptr %bd_disk.i18 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %bd_disk.i18, align 8
  %part0.i.i19 = getelementptr inbounds %struct.gendisk, ptr %26, i32 0, i32 7
  %27 = ptrtoint ptr %part0.i.i19 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %part0.i.i19, align 4
  %bd_read_only.i.i20 = getelementptr inbounds %struct.block_device, ptr %28, i32 0, i32 4
  %29 = ptrtoint ptr %bd_read_only.i.i20 to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %bd_read_only.i.i20, align 8, !range !429
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %30)
  %tobool.not.i.i21 = icmp eq i8 %30, 0
  br i1 %tobool.not.i.i21, label %bdev_read_only.exit26, label %lor.rhs.i22.return_crit_edge

lor.rhs.i22.return_crit_edge:                     ; preds = %lor.rhs.i22
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

bdev_read_only.exit26:                            ; preds = %lor.rhs.i22
  %state.i.i23 = getelementptr inbounds %struct.gendisk, ptr %26, i32 0, i32 12
  %31 = ptrtoint ptr %state.i.i23 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %state.i.i23, align 4
  %33 = and i32 %32, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool6.not = icmp eq i32 %33, 0
  br i1 %tobool6.not, label %if.end8, label %bdev_read_only.exit26.return_crit_edge

bdev_read_only.exit26.return_crit_edge:           ; preds = %bdev_read_only.exit26
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end8:                                          ; preds = %bdev_read_only.exit26
  call void @__sanitizer_cov_trace_pc() #18
  %l_opstate.i = getelementptr inbounds %struct.xlog, ptr %18, i32 0, i32 6
  %34 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %l_opstate.i, align 4
  %36 = and i32 %35, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.i27.not = icmp eq i32 %36, 0
  br label %return

return:                                           ; preds = %if.end8, %bdev_read_only.exit26.return_crit_edge, %lor.rhs.i22.return_crit_edge, %if.end3.return_crit_edge, %bdev_read_only.exit.return_crit_edge, %lor.rhs.i.return_crit_edge, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i1 [ false, %entry.return_crit_edge ], [ false, %bdev_read_only.exit.return_crit_edge ], [ false, %bdev_read_only.exit26.return_crit_edge ], [ %tobool.i27.not, %if.end8 ], [ false, %if.end.return_crit_edge ], [ false, %lor.rhs.i.return_crit_edge ], [ false, %if.end3.return_crit_edge ], [ false, %lor.rhs.i22.return_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @xfs_log_regrant(ptr nocapture noundef readonly %mp, ptr noundef %tic) local_unnamed_addr #1 align 64 {
entry:
  %need_bytes = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %m_log = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 8
  %0 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %m_log, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %need_bytes) #16
  %2 = ptrtoint ptr %need_bytes to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %need_bytes, align 4, !annotation !430
  %l_opstate.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 6
  %3 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %l_opstate.i, align 4
  %5 = and i32 %4, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.i.not = icmp eq i32 %5, 0
  br i1 %tobool.i.not, label %do.body1, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body1:                                         ; preds = %entry
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @xfsstats to i32))
  %6 = load ptr, ptr @xfsstats, align 4
  %7 = ptrtoint ptr %6 to i32
  %8 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %arrayidx, align 4
  %add = add i32 %13, %7
  %14 = inttoptr i32 %add to ptr
  %xs_try_logspace = getelementptr inbounds %struct.__xfsstats, ptr %14, i32 0, i32 38
  %15 = ptrtoint ptr %xs_try_logspace to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %xs_try_logspace, align 8
  %inc = add i32 %16, 1
  store i32 %inc, ptr %xs_try_logspace, align 8
  %m_stats = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 92
  %17 = ptrtoint ptr %m_stats to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %m_stats, align 4
  %19 = ptrtoint ptr %18 to i32
  %20 = load i32, ptr %cpu, align 4
  %arrayidx13 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %20
  %21 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %arrayidx13, align 4
  %add14 = add i32 %22, %19
  %23 = inttoptr i32 %add14 to ptr
  %xs_try_logspace15 = getelementptr inbounds %struct.__xfsstats, ptr %23, i32 0, i32 38
  %24 = ptrtoint ptr %xs_try_logspace15 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %xs_try_logspace15, align 8
  %inc16 = add i32 %25, 1
  store i32 %inc16, ptr %xs_try_logspace15, align 8
  %t_tid = getelementptr inbounds %struct.xlog_ticket, ptr %tic, i32 0, i32 2
  %26 = ptrtoint ptr %t_tid to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %t_tid, align 4
  %inc19 = add i32 %27, 1
  store i32 %inc19, ptr %t_tid, align 4
  %t_unit_res = getelementptr inbounds %struct.xlog_ticket, ptr %tic, i32 0, i32 5
  %28 = ptrtoint ptr %t_unit_res to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %t_unit_res, align 4
  tail call fastcc void @xlog_grant_push_ail(ptr noundef %1, i32 noundef %29)
  %30 = ptrtoint ptr %t_unit_res to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %t_unit_res, align 4
  %t_curr_res = getelementptr inbounds %struct.xlog_ticket, ptr %tic, i32 0, i32 4
  %32 = ptrtoint ptr %t_curr_res to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %t_curr_res, align 4
  %t_res_num.i = getelementptr inbounds %struct.xlog_ticket, ptr %tic, i32 0, i32 10
  %33 = ptrtoint ptr %t_res_num.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 0, ptr %t_res_num.i, align 4
  %t_res_arr_sum.i = getelementptr inbounds %struct.xlog_ticket, ptr %tic, i32 0, i32 12
  %34 = ptrtoint ptr %t_res_arr_sum.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 0, ptr %t_res_arr_sum.i, align 4
  %t_res_num_ophdrs.i = getelementptr inbounds %struct.xlog_ticket, ptr %tic, i32 0, i32 11
  %35 = ptrtoint ptr %t_res_num_ophdrs.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 0, ptr %t_res_num_ophdrs.i, align 4
  %t_cnt = getelementptr inbounds %struct.xlog_ticket, ptr %tic, i32 0, i32 7
  %36 = ptrtoint ptr %t_cnt to i32
  call void @__asan_load1_noabort(i32 %36)
  %37 = load i8, ptr %t_cnt, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %37)
  %cmp.not = icmp eq i8 %37, 0
  br i1 %cmp.not, label %if.end23, label %do.body1.cleanup_crit_edge

do.body1.cleanup_crit_edge:                       ; preds = %do.body1
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end23:                                         ; preds = %do.body1
  tail call fastcc void @trace_xfs_log_regrant(ptr noundef %1, ptr noundef %tic)
  %l_write_head = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 32
  %call24 = call fastcc i32 @xlog_grant_head_check(ptr noundef %1, ptr noundef %l_write_head, ptr noundef %tic, ptr noundef nonnull %need_bytes)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool.not = icmp eq i32 %call24, 0
  br i1 %tobool.not, label %if.end26, label %out_error

if.end26:                                         ; preds = %if.end23
  %grant = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 32, i32 2
  %38 = ptrtoint ptr %need_bytes to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %need_bytes, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %grant, i32 noundef 8) #16
  %call.i.i = tail call i64 @generic_atomic64_read(ptr noundef %grant) #16
  %l_logsize.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 15
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %if.end26
  %head_val.0.i = phi i64 [ %call.i.i, %if.end26 ], [ %call.i13.i, %do.body.i.do.body.i_crit_edge ]
  %40 = lshr i64 %head_val.0.i, 32
  %conv.i.i = trunc i64 %40 to i32
  %conv1.i.i = trunc i64 %head_val.0.i to i32
  %41 = ptrtoint ptr %l_logsize.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %l_logsize.i, align 32
  %sub.i = sub i32 %42, %conv1.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %39)
  %cmp.i = icmp sgt i32 %sub.i, %39
  %not.cmp.i = xor i1 %cmp.i, true
  %inc.i = zext i1 %not.cmp.i to i32
  %cycle.0.i = add i32 %inc.i, %conv.i.i
  %43 = sub i32 0, %sub.i
  %space.0.p.i = select i1 %cmp.i, i32 %conv1.i.i, i32 %43
  %space.0.i = add i32 %space.0.p.i, %39
  %conv2.i.i = zext i32 %cycle.0.i to i64
  %shl.i.i = shl nuw i64 %conv2.i.i, 32
  %conv1.i14.i = sext i32 %space.0.i to i64
  %or.i.i = or i64 %shl.i.i, %conv1.i14.i
  %call.i.i12.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %grant, i32 noundef 8) #16
  %call.i13.i = tail call i64 @generic_atomic64_cmpxchg(ptr noundef %grant, i64 noundef %head_val.0.i, i64 noundef %or.i.i) #16
  %cmp4.not.i = icmp eq i64 %call.i13.i, %head_val.0.i
  br i1 %cmp4.not.i, label %xlog_grant_add_space.exit, label %do.body.i.do.body.i_crit_edge

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i

xlog_grant_add_space.exit:                        ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @trace_xfs_log_regrant_exit(ptr noundef %1, ptr noundef %tic)
  tail call fastcc void @xlog_verify_grant_tail(ptr noundef %1)
  br label %cleanup

out_error:                                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #18
  %44 = ptrtoint ptr %t_curr_res to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 0, ptr %t_curr_res, align 4
  %45 = ptrtoint ptr %t_cnt to i32
  call void @__asan_store1_noabort(i32 %45)
  store i8 0, ptr %t_cnt, align 1
  br label %cleanup

cleanup:                                          ; preds = %out_error, %xlog_grant_add_space.exit, %do.body1.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call24, %out_error ], [ 0, %xlog_grant_add_space.exit ], [ -5, %entry.cleanup_crit_edge ], [ 0, %do.body1.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %need_bytes) #16
  ret i32 %retval.0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @xlog_grant_push_ail(ptr noundef %log, i32 noundef %need_bytes) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i64 @xlog_grant_push_threshold(ptr noundef %log, i32 noundef %need_bytes)
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %call)
  %cmp = icmp eq i64 %call, -1
  br i1 %cmp, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %l_opstate.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 6
  %0 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %l_opstate.i, align 4
  %2 = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.i.not = icmp eq i32 %2, 0
  br i1 %tobool.i.not, label %if.end, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  %l_ailp = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 1
  %3 = ptrtoint ptr %l_ailp to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %l_ailp, align 4
  tail call void @xfs_ail_push(ptr noundef %4, i64 noundef %call) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xfs_log_regrant(ptr noundef %log, ptr noundef %tic) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_regrant, i32 0, i32 1), ptr blockaddress(@trace_xfs_log_regrant, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !433
  %call42 = tail call i32 @__traceiter_xfs_log_regrant(ptr noundef null, ptr noundef %log, ptr noundef %tic) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !434
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_regrant, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_regrant, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xfs_log_regrant.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xfs_log_regrant.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 1290, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @xlog_grant_head_check(ptr noundef %log, ptr noundef %head, ptr noundef %tic, ptr nocapture noundef %need_bytes) unnamed_addr #3 align 64 {
entry:
  %free_bytes = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %free_bytes) #16
  %l_opstate.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 6
  %0 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %l_opstate.i, align 4
  %and1.i.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %entry.cond.end_crit_edge, label %cond.false, !prof !432

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.23, ptr noundef nonnull @.str.1, i32 noundef 298) #16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry.cond.end_crit_edge
  %l_write_head.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 32
  %cmp.i = icmp eq ptr %l_write_head.i, %head
  %t_flags.i = getelementptr inbounds %struct.xlog_ticket, ptr %tic, i32 0, i32 9
  %2 = ptrtoint ptr %t_flags.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %t_flags.i, align 1
  %4 = and i8 %3, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %4)
  %tobool.not.i = icmp eq i8 %4, 0
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %cond.end
  br i1 %tobool.not.i, label %cond.false.i, label %if.then.i.cond.end.i_crit_edge, !prof !437

if.then.i.cond.end.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.i

cond.false.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.92, ptr noundef nonnull @.str.1, i32 noundef 176) #16
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %if.then.i.cond.end.i_crit_edge
  %t_unit_res.i = getelementptr inbounds %struct.xlog_ticket, ptr %tic, i32 0, i32 5
  %5 = ptrtoint ptr %t_unit_res.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %t_unit_res.i, align 4
  br label %xlog_ticket_reservation.exit

if.else.i:                                        ; preds = %cond.end
  %t_unit_res11.i = getelementptr inbounds %struct.xlog_ticket, ptr %tic, i32 0, i32 5
  %7 = ptrtoint ptr %t_unit_res11.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %t_unit_res11.i, align 4
  br i1 %tobool.not.i, label %if.else.i.xlog_ticket_reservation.exit_crit_edge, label %if.then7.i

if.else.i.xlog_ticket_reservation.exit_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_ticket_reservation.exit

if.then7.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  %t_cnt.i = getelementptr inbounds %struct.xlog_ticket, ptr %tic, i32 0, i32 7
  %9 = ptrtoint ptr %t_cnt.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %t_cnt.i, align 1
  %conv9.i = zext i8 %10 to i32
  %mul.i = mul i32 %8, %conv9.i
  br label %xlog_ticket_reservation.exit

xlog_ticket_reservation.exit:                     ; preds = %if.then7.i, %if.else.i.xlog_ticket_reservation.exit_crit_edge, %cond.end.i
  %retval.0.i = phi i32 [ %6, %cond.end.i ], [ %mul.i, %if.then7.i ], [ %8, %if.else.i.xlog_ticket_reservation.exit_crit_edge ]
  %11 = ptrtoint ptr %need_bytes to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %retval.0.i, ptr %need_bytes, align 4
  %grant = getelementptr inbounds %struct.xlog_grant_head, ptr %head, i32 0, i32 2
  %call4 = tail call fastcc i32 @xlog_space_left(ptr noundef %log, ptr noundef %grant)
  %12 = ptrtoint ptr %free_bytes to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %call4, ptr %free_bytes, align 4
  %waiters = getelementptr inbounds %struct.xlog_grant_head, ptr %head, i32 0, i32 1
  %13 = ptrtoint ptr %waiters to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %waiters, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !438
  %cmp.i.not.i = icmp eq ptr %14, %waiters
  br i1 %cmp.i.not.i, label %list_empty_careful.exit, label %xlog_ticket_reservation.exit.if.then_crit_edge

xlog_ticket_reservation.exit.if.then_crit_edge:   ; preds = %xlog_ticket_reservation.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

list_empty_careful.exit:                          ; preds = %xlog_ticket_reservation.exit
  %prev.i = getelementptr inbounds %struct.xlog_grant_head, ptr %head, i32 0, i32 1, i32 1
  %15 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev.i, align 4
  %cmp.i38.not = icmp eq ptr %16, %waiters
  br i1 %cmp.i38.not, label %if.else, label %list_empty_careful.exit.if.then_crit_edge

list_empty_careful.exit.if.then_crit_edge:        ; preds = %list_empty_careful.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

if.then:                                          ; preds = %list_empty_careful.exit.if.then_crit_edge, %xlog_ticket_reservation.exit.if.then_crit_edge
  tail call void @_raw_spin_lock(ptr noundef %head) #16
  %call7 = call fastcc zeroext i1 @xlog_grant_head_wake(ptr noundef %log, ptr noundef %head, ptr noundef nonnull %free_bytes)
  br i1 %call7, label %lor.lhs.false, label %if.then.if.end17.sink.split.sink.split_crit_edge

if.then.if.end17.sink.split.sink.split_crit_edge: ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17.sink.split.sink.split

lor.lhs.false:                                    ; preds = %if.then
  %17 = ptrtoint ptr %free_bytes to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %free_bytes, align 4
  %19 = ptrtoint ptr %need_bytes to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %need_bytes, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %20)
  %cmp = icmp slt i32 %18, %20
  br i1 %cmp, label %lor.lhs.false.if.end17.sink.split.sink.split_crit_edge, label %lor.lhs.false.if.end17.sink.split_crit_edge

lor.lhs.false.if.end17.sink.split_crit_edge:      ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17.sink.split

lor.lhs.false.if.end17.sink.split.sink.split_crit_edge: ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17.sink.split.sink.split

if.else:                                          ; preds = %list_empty_careful.exit
  %21 = ptrtoint ptr %need_bytes to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %need_bytes, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call4, i32 %22)
  %cmp11 = icmp slt i32 %call4, %22
  br i1 %cmp11, label %if.then12, label %if.else.if.end17_crit_edge

if.else.if.end17_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

if.then12:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_raw_spin_lock(ptr noundef %head) #16
  br label %if.end17.sink.split.sink.split

if.end17.sink.split.sink.split:                   ; preds = %if.then12, %lor.lhs.false.if.end17.sink.split.sink.split_crit_edge, %if.then.if.end17.sink.split.sink.split_crit_edge
  %23 = ptrtoint ptr %need_bytes to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %need_bytes, align 4
  %call9 = tail call fastcc i32 @xlog_grant_head_wait(ptr noundef %log, ptr noundef %head, ptr noundef %tic, i32 noundef %24)
  br label %if.end17.sink.split

if.end17.sink.split:                              ; preds = %if.end17.sink.split.sink.split, %lor.lhs.false.if.end17.sink.split_crit_edge
  %error.1.ph = phi i32 [ 0, %lor.lhs.false.if.end17.sink.split_crit_edge ], [ %call9, %if.end17.sink.split.sink.split ]
  tail call void @_raw_spin_unlock(ptr noundef %head) #16
  br label %if.end17

if.end17:                                         ; preds = %if.end17.sink.split, %if.else.if.end17_crit_edge
  %error.1 = phi i32 [ 0, %if.else.if.end17_crit_edge ], [ %error.1.ph, %if.end17.sink.split ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %free_bytes) #16
  ret i32 %error.1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xfs_log_regrant_exit(ptr noundef %log, ptr noundef %tic) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_regrant_exit, i32 0, i32 1), ptr blockaddress(@trace_xfs_log_regrant_exit, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !439
  %call42 = tail call i32 @__traceiter_xfs_log_regrant_exit(ptr noundef null, ptr noundef %log, ptr noundef %tic) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !440
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_regrant_exit, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_regrant_exit, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xfs_log_regrant_exit.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xfs_log_regrant_exit.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 1291, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @xlog_verify_grant_tail(ptr noundef %log) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %grant = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 32, i32 2
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %grant, i32 noundef 8) #16
  %call.i.i = tail call i64 @generic_atomic64_read(ptr noundef %grant) #16
  %0 = lshr i64 %call.i.i, 32
  %conv.i.i = trunc i64 %0 to i32
  %conv1.i.i = trunc i64 %call.i.i to i32
  %l_tail_lsn = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 29
  %call.i.i.i18 = tail call zeroext i1 @__kasan_check_read(ptr noundef %l_tail_lsn, i32 noundef 8) #16
  %call.i.i19 = tail call i64 @generic_atomic64_read(ptr noundef %l_tail_lsn) #16
  %1 = lshr i64 %call.i.i19, 32
  %conv.i = trunc i64 %1 to i32
  %conv1.i = trunc i64 %call.i.i19 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %conv.i.i)
  %cmp.not = icmp eq i32 %conv.i, %conv.i.i
  br i1 %cmp.not, label %entry.if.end11_crit_edge, label %if.then

entry.if.end11_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

if.then:                                          ; preds = %entry
  %sub = add i32 %conv.i.i, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %conv.i)
  %cmp1.not = icmp eq i32 %sub, %conv.i
  br i1 %cmp1.not, label %if.then.if.end_crit_edge, label %land.lhs.true

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.lhs.true:                                    ; preds = %if.then
  %l_opstate = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 6
  %call = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %l_opstate) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.then2, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then2:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %2 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %log, align 128
  tail call void (ptr, i32, ptr, ...) @xfs_alert_tag(ptr noundef %3, i32 noundef 2, ptr noundef nonnull @.str.150, ptr noundef nonnull @__func__.xlog_verify_grant_tail) #16
  br label %if.end

if.end:                                           ; preds = %if.then2, %land.lhs.true.if.end_crit_edge, %if.then.if.end_crit_edge
  %shl = shl i32 %conv1.i, 9
  call void @__sanitizer_cov_trace_cmp4(i32 %shl, i32 %conv1.i.i)
  %cmp3 = icmp slt i32 %shl, %conv1.i.i
  br i1 %cmp3, label %land.lhs.true4, label %if.end.if.end11_crit_edge

if.end.if.end11_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

land.lhs.true4:                                   ; preds = %if.end
  %l_opstate5 = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 6
  %call6 = tail call i32 @_test_and_set_bit(i32 noundef 3, ptr noundef %l_opstate5) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %tobool7.not = icmp eq i32 %call6, 0
  br i1 %tobool7.not, label %if.then8, label %land.lhs.true4.if.end11_crit_edge

land.lhs.true4.if.end11_crit_edge:                ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

if.then8:                                         ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #18
  %4 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %log, align 128
  tail call void (ptr, i32, ptr, ...) @xfs_alert_tag(ptr noundef %5, i32 noundef 2, ptr noundef nonnull @.str.151, ptr noundef nonnull @__func__.xlog_verify_grant_tail) #16
  br label %if.end11

if.end11:                                         ; preds = %if.then8, %land.lhs.true4.if.end11_crit_edge, %if.end.if.end11_crit_edge, %entry.if.end11_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @xfs_log_reserve(ptr nocapture noundef readonly %mp, i32 noundef %unit_bytes, i32 noundef %cnt, ptr nocapture noundef %ticp, i8 noundef zeroext %client, i1 noundef zeroext %permanent) local_unnamed_addr #1 align 64 {
entry:
  %need_bytes = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %m_log = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 8
  %0 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %m_log, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %need_bytes) #16
  %2 = ptrtoint ptr %need_bytes to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %need_bytes, align 4, !annotation !430
  %3 = zext i8 %client to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values)
  switch i8 %client, label %cond.false [
    i8 -86, label %entry.cond.end_crit_edge
    i8 105, label %entry.cond.end_crit_edge102
  ]

entry.cond.end_crit_edge102:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str, ptr noundef nonnull @.str.1, i32 noundef 448) #16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry.cond.end_crit_edge, %entry.cond.end_crit_edge102
  %l_opstate.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 6
  %4 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %l_opstate.i, align 4
  %6 = and i32 %5, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.i.not = icmp eq i32 %6, 0
  br i1 %tobool.i.not, label %do.body6, label %cond.end.cleanup_crit_edge

cond.end.cleanup_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body6:                                         ; preds = %cond.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @xfsstats to i32))
  %7 = load ptr, ptr @xfsstats, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %xs_try_logspace = getelementptr inbounds %struct.__xfsstats, ptr %15, i32 0, i32 38
  %16 = ptrtoint ptr %xs_try_logspace to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %xs_try_logspace, align 8
  %inc = add i32 %17, 1
  store i32 %inc, ptr %xs_try_logspace, align 8
  %m_stats = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 92
  %18 = ptrtoint ptr %m_stats to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %m_stats, align 4
  %20 = ptrtoint ptr %19 to i32
  %21 = load i32, ptr %cpu, align 4
  %arrayidx18 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %21
  %22 = ptrtoint ptr %arrayidx18 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx18, align 4
  %add19 = add i32 %23, %20
  %24 = inttoptr i32 %add19 to ptr
  %xs_try_logspace20 = getelementptr inbounds %struct.__xfsstats, ptr %24, i32 0, i32 38
  %25 = ptrtoint ptr %xs_try_logspace20 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %xs_try_logspace20, align 8
  %inc21 = add i32 %26, 1
  store i32 %inc21, ptr %xs_try_logspace20, align 8
  %27 = ptrtoint ptr %ticp to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ticp, align 4
  %cmp24 = icmp eq ptr %28, null
  br i1 %cmp24, label %do.body6.cond.end34_crit_edge, label %cond.false33, !prof !432

do.body6.cond.end34_crit_edge:                    ; preds = %do.body6
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end34

cond.false33:                                     ; preds = %do.body6
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.2, ptr noundef nonnull @.str.1, i32 noundef 455) #16
  br label %cond.end34

cond.end34:                                       ; preds = %cond.false33, %do.body6.cond.end34_crit_edge
  %call36 = tail call ptr @xlog_ticket_alloc(ptr noundef %1, i32 noundef %unit_bytes, i32 noundef %cnt, i8 noundef zeroext %client, i1 noundef zeroext %permanent)
  %29 = ptrtoint ptr %ticp to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %call36, ptr %ticp, align 4
  %t_cnt = getelementptr inbounds %struct.xlog_ticket, ptr %call36, i32 0, i32 7
  %30 = ptrtoint ptr %t_cnt to i32
  call void @__asan_load1_noabort(i32 %30)
  %31 = load i8, ptr %t_cnt, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %31)
  %tobool38.not = icmp eq i8 %31, 0
  br i1 %tobool38.not, label %cond.false42, label %cond.true39

cond.true39:                                      ; preds = %cond.end34
  call void @__sanitizer_cov_trace_pc() #18
  %conv37 = zext i8 %31 to i32
  %t_unit_res = getelementptr inbounds %struct.xlog_ticket, ptr %call36, i32 0, i32 5
  %32 = ptrtoint ptr %t_unit_res to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %t_unit_res, align 4
  %mul = mul i32 %33, %conv37
  br label %cond.end44

cond.false42:                                     ; preds = %cond.end34
  call void @__sanitizer_cov_trace_pc() #18
  %t_unit_res43 = getelementptr inbounds %struct.xlog_ticket, ptr %call36, i32 0, i32 5
  %34 = ptrtoint ptr %t_unit_res43 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %t_unit_res43, align 4
  br label %cond.end44

cond.end44:                                       ; preds = %cond.false42, %cond.true39
  %cond = phi i32 [ %mul, %cond.true39 ], [ %35, %cond.false42 ]
  tail call fastcc void @xlog_grant_push_ail(ptr noundef %1, i32 noundef %cond)
  tail call fastcc void @trace_xfs_log_reserve(ptr noundef %1, ptr noundef %call36)
  %l_reserve_head = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 31
  %call45 = call fastcc i32 @xlog_grant_head_check(ptr noundef %1, ptr noundef %l_reserve_head, ptr noundef %call36, ptr noundef nonnull %need_bytes)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45)
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %if.end48, label %out_error

if.end48:                                         ; preds = %cond.end44
  %grant = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 31, i32 2
  %36 = ptrtoint ptr %need_bytes to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %need_bytes, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %grant, i32 noundef 8) #16
  %call.i.i = tail call i64 @generic_atomic64_read(ptr noundef %grant) #16
  %l_logsize.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 15
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %if.end48
  %head_val.0.i = phi i64 [ %call.i.i, %if.end48 ], [ %call.i13.i, %do.body.i.do.body.i_crit_edge ]
  %38 = lshr i64 %head_val.0.i, 32
  %conv.i.i = trunc i64 %38 to i32
  %conv1.i.i = trunc i64 %head_val.0.i to i32
  %39 = ptrtoint ptr %l_logsize.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %l_logsize.i, align 32
  %sub.i = sub i32 %40, %conv1.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i, i32 %37)
  %cmp.i = icmp sgt i32 %sub.i, %37
  %not.cmp.i = xor i1 %cmp.i, true
  %inc.i = zext i1 %not.cmp.i to i32
  %cycle.0.i = add i32 %inc.i, %conv.i.i
  %41 = sub i32 0, %sub.i
  %space.0.p.i = select i1 %cmp.i, i32 %conv1.i.i, i32 %41
  %space.0.i = add i32 %space.0.p.i, %37
  %conv2.i.i = zext i32 %cycle.0.i to i64
  %shl.i.i = shl nuw i64 %conv2.i.i, 32
  %conv1.i14.i = sext i32 %space.0.i to i64
  %or.i.i = or i64 %shl.i.i, %conv1.i14.i
  %call.i.i12.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %grant, i32 noundef 8) #16
  %call.i13.i = tail call i64 @generic_atomic64_cmpxchg(ptr noundef %grant, i64 noundef %head_val.0.i, i64 noundef %or.i.i) #16
  %cmp4.not.i = icmp eq i64 %call.i13.i, %head_val.0.i
  br i1 %cmp4.not.i, label %xlog_grant_add_space.exit, label %do.body.i.do.body.i_crit_edge

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i

xlog_grant_add_space.exit:                        ; preds = %do.body.i
  %grant50 = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 32, i32 2
  %call.i.i.i80 = tail call zeroext i1 @__kasan_check_read(ptr noundef %grant50, i32 noundef 8) #16
  %call.i.i81 = tail call i64 @generic_atomic64_read(ptr noundef %grant50) #16
  br label %do.body.i100

do.body.i100:                                     ; preds = %do.body.i100.do.body.i100_crit_edge, %xlog_grant_add_space.exit
  %head_val.0.i83 = phi i64 [ %call.i.i81, %xlog_grant_add_space.exit ], [ %call.i13.i98, %do.body.i100.do.body.i100_crit_edge ]
  %42 = lshr i64 %head_val.0.i83, 32
  %conv.i.i84 = trunc i64 %42 to i32
  %conv1.i.i85 = trunc i64 %head_val.0.i83 to i32
  %43 = ptrtoint ptr %l_logsize.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %l_logsize.i, align 32
  %sub.i86 = sub i32 %44, %conv1.i.i85
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i86, i32 %37)
  %cmp.i87 = icmp sgt i32 %sub.i86, %37
  %not.cmp.i88 = xor i1 %cmp.i87, true
  %inc.i89 = zext i1 %not.cmp.i88 to i32
  %cycle.0.i90 = add i32 %inc.i89, %conv.i.i84
  %45 = sub i32 0, %sub.i86
  %space.0.p.i91 = select i1 %cmp.i87, i32 %conv1.i.i85, i32 %45
  %space.0.i92 = add i32 %space.0.p.i91, %37
  %conv2.i.i93 = zext i32 %cycle.0.i90 to i64
  %shl.i.i94 = shl nuw i64 %conv2.i.i93, 32
  %conv1.i14.i95 = sext i32 %space.0.i92 to i64
  %or.i.i96 = or i64 %shl.i.i94, %conv1.i14.i95
  %call.i.i12.i97 = tail call zeroext i1 @__kasan_check_write(ptr noundef %grant50, i32 noundef 8) #16
  %call.i13.i98 = tail call i64 @generic_atomic64_cmpxchg(ptr noundef %grant50, i64 noundef %head_val.0.i83, i64 noundef %or.i.i96) #16
  %cmp4.not.i99 = icmp eq i64 %call.i13.i98, %head_val.0.i83
  br i1 %cmp4.not.i99, label %xlog_grant_add_space.exit101, label %do.body.i100.do.body.i100_crit_edge

do.body.i100.do.body.i100_crit_edge:              ; preds = %do.body.i100
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i100

xlog_grant_add_space.exit101:                     ; preds = %do.body.i100
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @trace_xfs_log_reserve_exit(ptr noundef %1, ptr noundef %call36)
  tail call fastcc void @xlog_verify_grant_tail(ptr noundef %1)
  br label %cleanup

out_error:                                        ; preds = %cond.end44
  call void @__sanitizer_cov_trace_pc() #18
  %t_curr_res = getelementptr inbounds %struct.xlog_ticket, ptr %call36, i32 0, i32 4
  %46 = ptrtoint ptr %t_curr_res to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 0, ptr %t_curr_res, align 4
  %47 = ptrtoint ptr %t_cnt to i32
  call void @__asan_store1_noabort(i32 %47)
  store i8 0, ptr %t_cnt, align 1
  br label %cleanup

cleanup:                                          ; preds = %out_error, %xlog_grant_add_space.exit101, %cond.end.cleanup_crit_edge
  %retval.0 = phi i32 [ %call45, %out_error ], [ 0, %xlog_grant_add_space.exit101 ], [ -5, %cond.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %need_bytes) #16
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @assfail(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @xlog_ticket_alloc(ptr nocapture noundef readonly %log, i32 noundef %unit_bytes, i32 noundef %cnt, i8 noundef zeroext %client, i1 noundef zeroext %permanent) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @xfs_log_ticket_cache, align 4
  %call.i = tail call noalias align 8 ptr @kmem_cache_alloc(ptr noundef %0, i32 noundef 36160) #16
  %add2.i = add i32 %unit_bytes, 40
  %l_iclog_size.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 12
  %1 = ptrtoint ptr %l_iclog_size.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %l_iclog_size.i, align 16
  %l_iclog_hsize.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 9
  %3 = ptrtoint ptr %l_iclog_hsize.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %l_iclog_hsize.i, align 4
  %sub.i = sub i32 %2, %4
  %sub3.i = add i32 %sub.i, -1
  %add4.i = add i32 %sub3.i, %add2.i
  %div.i = sdiv i32 %add4.i, %sub.i
  %mul.i = mul i32 %div.i, 12
  %add5.i = add i32 %mul.i, %add2.i
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i, %entry
  %unit_bytes.addr.0.i = phi i32 [ %add5.i, %entry ], [ %add9.i, %while.body.i ]
  %num_headers.0.i = phi i32 [ %div.i, %entry ], [ %inc.i, %while.body.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num_headers.0.i)
  %tobool.not.i = icmp eq i32 %num_headers.0.i, 0
  br i1 %tobool.not.i, label %while.cond.i.while.body.i_crit_edge, label %lor.rhs.i

while.cond.i.while.body.i_crit_edge:              ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body.i

lor.rhs.i:                                        ; preds = %while.cond.i
  %add7.i = add i32 %unit_bytes.addr.0.i, %sub3.i
  %div8.i = sdiv i32 %add7.i, %sub.i
  call void @__sanitizer_cov_trace_cmp4(i32 %div8.i, i32 %num_headers.0.i)
  %cmp.i = icmp ugt i32 %div8.i, %num_headers.0.i
  br i1 %cmp.i, label %lor.rhs.i.while.body.i_crit_edge, label %xlog_calc_unit_res.exit

lor.rhs.i.while.body.i_crit_edge:                 ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body.i

while.body.i:                                     ; preds = %lor.rhs.i.while.body.i_crit_edge, %while.cond.i.while.body.i_crit_edge
  %add9.i = add i32 %unit_bytes.addr.0.i, 12
  %inc.i = add nuw i32 %num_headers.0.i, 1
  br label %while.cond.i

xlog_calc_unit_res.exit:                          ; preds = %lor.rhs.i
  %mul11.i = mul i32 %num_headers.0.i, %4
  %l_iclog_roundoff.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 36
  %5 = ptrtoint ptr %l_iclog_roundoff.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %l_iclog_roundoff.i, align 8
  %mul15.i = shl i32 %6, 1
  %add12.i = add i32 %unit_bytes.addr.0.i, %4
  %add14.i = add i32 %add12.i, %mul11.i
  %add16.i = add i32 %add14.i, %mul15.i
  %t_ref = getelementptr inbounds %struct.xlog_ticket, ptr %call.i, i32 0, i32 3
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %t_ref, i32 noundef 4) #16
  %7 = ptrtoint ptr %t_ref to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile i32 1, ptr %t_ref, align 8
  %8 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %task, align 8
  %t_task = getelementptr inbounds %struct.xlog_ticket, ptr %call.i, i32 0, i32 1
  %12 = ptrtoint ptr %t_task to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %11, ptr %t_task, align 8
  %13 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %call.i, ptr %call.i, align 8
  %prev.i = getelementptr inbounds %struct.list_head, ptr %call.i, i32 0, i32 1
  %14 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %call.i, ptr %prev.i, align 4
  %t_unit_res = getelementptr inbounds %struct.xlog_ticket, ptr %call.i, i32 0, i32 5
  %15 = ptrtoint ptr %t_unit_res to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %add16.i, ptr %t_unit_res, align 8
  %t_curr_res = getelementptr inbounds %struct.xlog_ticket, ptr %call.i, i32 0, i32 4
  %16 = ptrtoint ptr %t_curr_res to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %add16.i, ptr %t_curr_res, align 4
  %conv = trunc i32 %cnt to i8
  %t_cnt = getelementptr inbounds %struct.xlog_ticket, ptr %call.i, i32 0, i32 7
  %17 = ptrtoint ptr %t_cnt to i32
  call void @__asan_store1_noabort(i32 %17)
  store i8 %conv, ptr %t_cnt, align 1
  %t_ocnt = getelementptr inbounds %struct.xlog_ticket, ptr %call.i, i32 0, i32 6
  %18 = ptrtoint ptr %t_ocnt to i32
  call void @__asan_store1_noabort(i32 %18)
  store i8 %conv, ptr %t_ocnt, align 4
  %call4 = tail call i32 @prandom_u32() #16
  %t_tid = getelementptr inbounds %struct.xlog_ticket, ptr %call.i, i32 0, i32 2
  %19 = ptrtoint ptr %t_tid to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 %call4, ptr %t_tid, align 4
  %t_clientid = getelementptr inbounds %struct.xlog_ticket, ptr %call.i, i32 0, i32 8
  %20 = ptrtoint ptr %t_clientid to i32
  call void @__asan_store1_noabort(i32 %20)
  store i8 %client, ptr %t_clientid, align 2
  br i1 %permanent, label %if.then, label %xlog_calc_unit_res.exit.if.end_crit_edge

xlog_calc_unit_res.exit.if.end_crit_edge:         ; preds = %xlog_calc_unit_res.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %xlog_calc_unit_res.exit
  call void @__sanitizer_cov_trace_pc() #18
  %t_flags = getelementptr inbounds %struct.xlog_ticket, ptr %call.i, i32 0, i32 9
  %21 = ptrtoint ptr %t_flags to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %t_flags, align 1
  %23 = or i8 %22, 1
  store i8 %23, ptr %t_flags, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %xlog_calc_unit_res.exit.if.end_crit_edge
  %t_res_num.i = getelementptr inbounds %struct.xlog_ticket, ptr %call.i, i32 0, i32 10
  %24 = ptrtoint ptr %t_res_num.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 0, ptr %t_res_num.i, align 8
  %t_res_arr_sum.i = getelementptr inbounds %struct.xlog_ticket, ptr %call.i, i32 0, i32 12
  %25 = ptrtoint ptr %t_res_arr_sum.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 0, ptr %t_res_arr_sum.i, align 8
  %t_res_num_ophdrs.i = getelementptr inbounds %struct.xlog_ticket, ptr %call.i, i32 0, i32 11
  %26 = ptrtoint ptr %t_res_num_ophdrs.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 0, ptr %t_res_num_ophdrs.i, align 4
  ret ptr %call.i
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xfs_log_reserve(ptr noundef %log, ptr noundef %tic) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_reserve, i32 0, i32 1), ptr blockaddress(@trace_xfs_log_reserve, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !441
  %call42 = tail call i32 @__traceiter_xfs_log_reserve(ptr noundef null, ptr noundef %log, ptr noundef %tic) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !442
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_reserve, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_reserve, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xfs_log_reserve.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xfs_log_reserve.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 1288, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xfs_log_reserve_exit(ptr noundef %log, ptr noundef %tic) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_reserve_exit, i32 0, i32 1), ptr blockaddress(@trace_xfs_log_reserve_exit, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !443
  %call42 = tail call i32 @__traceiter_xfs_log_reserve_exit(ptr noundef null, ptr noundef %log, ptr noundef %tic) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !444
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_reserve_exit, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_reserve_exit, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xfs_log_reserve_exit.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xfs_log_reserve_exit.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 1289, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @xlog_state_release_iclog(ptr noundef %log, ptr noundef %iclog, i64 noundef %old_tail_lsn) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

land.rhs:                                         ; preds = %entry
  %dep_map = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 21, i32 0, i32 0, i32 4
  %call.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map, i32 noundef -1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !437

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 558, i32 noundef 9, ptr noundef null) #16
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %1 = tail call ptr @llvm.returnaddress(i32 0)
  %2 = ptrtoint ptr %1 to i32
  tail call fastcc void @trace_xlog_iclog_release(ptr noundef %iclog, i32 noundef %2)
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %old_tail_lsn)
  %tobool24.not = icmp eq i64 %old_tail_lsn, 0
  br i1 %tobool24.not, label %lor.lhs.false, label %if.end.if.then26_crit_edge

if.end.if.then26_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then26

lor.lhs.false:                                    ; preds = %if.end
  %ic_state = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 7
  %3 = ptrtoint ptr %ic_state to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %ic_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp25 = icmp eq i32 %4, 1
  br i1 %cmp25, label %lor.lhs.false.if.then26_crit_edge, label %lor.lhs.false.if.end40_crit_edge

lor.lhs.false.if.end40_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end40

lor.lhs.false.if.then26_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then26

if.then26:                                        ; preds = %lor.lhs.false.if.then26_crit_edge, %if.end.if.then26_crit_edge
  %5 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %log, align 128
  %m_ail.i = getelementptr inbounds %struct.xfs_mount, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %m_ail.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %m_ail.i, align 4
  %ail_lock.i = getelementptr inbounds %struct.xfs_ail, ptr %8, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %ail_lock.i) #16
  %call.i105 = tail call i64 @xlog_assign_tail_lsn_locked(ptr noundef %6) #16
  %9 = ptrtoint ptr %m_ail.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %m_ail.i, align 4
  %ail_lock2.i = getelementptr inbounds %struct.xfs_ail, ptr %10, i32 0, i32 6
  tail call void @_raw_spin_unlock(ptr noundef %ail_lock2.i) #16
  call void @__sanitizer_cov_trace_cmp8(i64 %call.i105, i64 %old_tail_lsn)
  %cmp29.not = icmp eq i64 %call.i105, %old_tail_lsn
  %or.cond = select i1 %tobool24.not, i1 true, i1 %cmp29.not
  br i1 %or.cond, label %if.then26.if.end31_crit_edge, label %if.then30

if.then26.if.end31_crit_edge:                     ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end31

if.then30:                                        ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #18
  %ic_flags = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 8
  %11 = ptrtoint ptr %ic_flags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %ic_flags, align 128
  %or = or i32 %12, 1
  store i32 %or, ptr %ic_flags, align 128
  br label %if.end31

if.end31:                                         ; preds = %if.then30, %if.then26.if.end31_crit_edge
  %ic_flags32 = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 8
  %13 = ptrtoint ptr %ic_flags32 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %ic_flags32, align 128
  %and = and i32 %14, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool33.not = icmp eq i32 %and, 0
  br i1 %tobool33.not, label %if.end31.if.end40_crit_edge, label %land.lhs.true34

if.end31.if.end40_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end40

land.lhs.true34:                                  ; preds = %if.end31
  %ic_data = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 13
  %15 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ic_data, align 4
  %h_tail_lsn = getelementptr inbounds %struct.xlog_rec_header, ptr %16, i32 0, i32 5
  %17 = ptrtoint ptr %h_tail_lsn to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %h_tail_lsn, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %18)
  %tobool35.not = icmp eq i64 %18, 0
  br i1 %tobool35.not, label %if.then36, label %land.lhs.true34.if.end40_crit_edge

land.lhs.true34.if.end40_crit_edge:               ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end40

if.then36:                                        ; preds = %land.lhs.true34
  call void @__sanitizer_cov_trace_pc() #18
  %19 = ptrtoint ptr %h_tail_lsn to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %call.i105, ptr %h_tail_lsn, align 8
  br label %if.end40

if.end40:                                         ; preds = %if.then36, %land.lhs.true34.if.end40_crit_edge, %if.end31.if.end40_crit_edge, %lor.lhs.false.if.end40_crit_edge
  %tail_lsn.0 = phi i64 [ %call.i105, %land.lhs.true34.if.end40_crit_edge ], [ %call.i105, %if.then36 ], [ %call.i105, %if.end31.if.end40_crit_edge ], [ -1, %lor.lhs.false.if.end40_crit_edge ]
  %ic_refcnt = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 12
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %ic_refcnt, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !445
  tail call void @llvm.prefetch.p0(ptr %ic_refcnt, i32 1, i32 3, i32 1) #16
  %20 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %ic_refcnt, ptr %ic_refcnt, i32 1, ptr elementtype(i32) %ic_refcnt) #16, !srcloc !446
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %20, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !447
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  %l_opstate.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 6
  %21 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile i32, ptr %l_opstate.i, align 4
  %23 = and i32 %22, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool.i.not = icmp eq i32 %23, 0
  br i1 %tobool.i.not, label %if.end49, label %if.then43

if.then43:                                        ; preds = %if.end40
  br i1 %cmp.i.i, label %if.then45, label %if.then43.cleanup_crit_edge

if.then43.cleanup_crit_edge:                      ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then45:                                        ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #18
  %l_icloglock46 = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 21
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock46) #16
  tail call fastcc void @xlog_state_shutdown_callbacks(ptr noundef %log)
  tail call void @_raw_spin_lock(ptr noundef %l_icloglock46) #16
  br label %cleanup

if.end49:                                         ; preds = %if.end40
  br i1 %cmp.i.i, label %if.end52, label %if.end49.cleanup_crit_edge

if.end49.cleanup_crit_edge:                       ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end52:                                         ; preds = %if.end49
  %ic_state53 = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 7
  %24 = ptrtoint ptr %ic_state53 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %ic_state53, align 4
  %26 = zext i32 %25 to i64
  call void @__sanitizer_cov_trace_switch(i64 %26, ptr @__sancov_gen_cov_switch_values.155)
  switch i32 %25, label %cond.false [
    i32 1, label %if.end64
    i32 0, label %if.end52.cleanup_crit_edge
  ], !prof !448

if.end52.cleanup_crit_edge:                       ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cond.false:                                       ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.1, i32 noundef 598) #16
  br label %cleanup

if.end64:                                         ; preds = %if.end52
  %27 = ptrtoint ptr %ic_state53 to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 2, ptr %ic_state53, align 4
  %ic_data66 = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 13
  %28 = ptrtoint ptr %ic_data66 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ic_data66, align 4
  %h_tail_lsn67 = getelementptr inbounds %struct.xlog_rec_header, ptr %29, i32 0, i32 5
  %30 = ptrtoint ptr %h_tail_lsn67 to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %h_tail_lsn67, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %31)
  %tobool68.not = icmp eq i64 %31, 0
  br i1 %tobool68.not, label %if.then69, label %if.end64.if.end72_crit_edge

if.end64.if.end72_crit_edge:                      ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end72

if.then69:                                        ; preds = %if.end64
  call void @__sanitizer_cov_trace_pc() #18
  %32 = ptrtoint ptr %h_tail_lsn67 to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %tail_lsn.0, ptr %h_tail_lsn67, align 8
  br label %if.end72

if.end72:                                         ; preds = %if.then69, %if.end64.if.end72_crit_edge
  tail call fastcc void @xlog_verify_tail_lsn(ptr noundef %log, ptr noundef %iclog)
  tail call fastcc void @trace_xlog_iclog_syncing(ptr noundef %iclog, i32 noundef %2)
  %l_icloglock73 = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 21
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock73) #16
  tail call fastcc void @xlog_sync(ptr noundef %log, ptr noundef %iclog)
  tail call void @_raw_spin_lock(ptr noundef %l_icloglock73) #16
  br label %cleanup

cleanup:                                          ; preds = %if.end72, %cond.false, %if.end52.cleanup_crit_edge, %if.end49.cleanup_crit_edge, %if.then45, %if.then43.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end72 ], [ -5, %if.then45 ], [ -5, %if.then43.cleanup_crit_edge ], [ 0, %if.end49.cleanup_crit_edge ], [ %25, %if.end52.cleanup_crit_edge ], [ 0, %cond.false ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xlog_iclog_release(ptr noundef %iclog, i32 noundef %caller_ip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_release, i32 0, i32 1), ptr blockaddress(@trace_xlog_iclog_release, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !449
  %call42 = tail call i32 @__traceiter_xlog_iclog_release(ptr noundef null, ptr noundef %iclog, i32 noundef %caller_ip) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !450
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_release, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_release, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xlog_iclog_release.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xlog_iclog_release.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 4105, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #6

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i64 @xlog_assign_tail_lsn(ptr nocapture noundef readonly %mp) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %m_ail = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 2
  %0 = ptrtoint ptr %m_ail to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %m_ail, align 4
  %ail_lock = getelementptr inbounds %struct.xfs_ail, ptr %1, i32 0, i32 6
  tail call void @_raw_spin_lock(ptr noundef %ail_lock) #16
  %call = tail call i64 @xlog_assign_tail_lsn_locked(ptr noundef %mp)
  %2 = ptrtoint ptr %m_ail to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %m_ail, align 4
  %ail_lock2 = getelementptr inbounds %struct.xfs_ail, ptr %3, i32 0, i32 6
  tail call void @_raw_spin_unlock(ptr noundef %ail_lock2) #16
  ret i64 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @xlog_state_shutdown_callbacks(ptr noundef %log) unnamed_addr #1 align 64 {
entry:
  %cb_list = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %cb_list) #16
  %0 = getelementptr inbounds %struct.list_head, ptr %cb_list, i32 0, i32 1
  %1 = ptrtoint ptr %cb_list to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %cb_list, ptr %cb_list, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %cb_list, ptr %0, align 4
  %l_icloglock = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 21
  call void @_raw_spin_lock(ptr noundef %l_icloglock) #16
  %l_iclog = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 20
  %3 = ptrtoint ptr %l_iclog to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %l_iclog, align 8
  br label %do.body

do.body:                                          ; preds = %do.cond.do.body_crit_edge, %entry
  %iclog.0 = phi ptr [ %4, %entry ], [ %18, %do.cond.do.body_crit_edge ]
  %ic_refcnt = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 12
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %ic_refcnt, i32 noundef 4) #16
  %5 = ptrtoint ptr %ic_refcnt to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %ic_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %if.end, label %do.body.do.cond_crit_edge

do.body.do.cond_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond

if.end:                                           ; preds = %do.body
  %ic_callbacks = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 10
  %7 = ptrtoint ptr %ic_callbacks to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %ic_callbacks, align 4
  %cmp.i.not.i = icmp eq ptr %8, %ic_callbacks
  br i1 %cmp.i.not.i, label %if.end.list_splice_init.exit_crit_edge, label %if.then.i

if.end.list_splice_init.exit_crit_edge:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_splice_init.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %9 = ptrtoint ptr %cb_list to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %cb_list, align 4
  %prev2.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 10, i32 1
  %11 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %prev2.i.i, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %8, i32 0, i32 1
  %13 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %cb_list, ptr %prev3.i.i, align 4
  store ptr %8, ptr %cb_list, align 4
  %14 = ptrtoint ptr %12 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %10, ptr %12, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %10, i32 0, i32 1
  %15 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %12, ptr %prev6.i.i, align 4
  %16 = ptrtoint ptr %ic_callbacks to i32
  call void @__asan_store4_noabort(i32 %16)
  store volatile ptr %ic_callbacks, ptr %ic_callbacks, align 4
  store ptr %ic_callbacks, ptr %prev2.i.i, align 4
  br label %list_splice_init.exit

list_splice_init.exit:                            ; preds = %if.then.i, %if.end.list_splice_init.exit_crit_edge
  %ic_write_wait = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 1
  call void @__wake_up(ptr noundef %ic_write_wait, i32 noundef 3, i32 noundef 0, ptr noundef null) #16
  call void @__wake_up(ptr noundef %iclog.0, i32 noundef 3, i32 noundef 0, ptr noundef null) #16
  br label %do.cond

do.cond:                                          ; preds = %list_splice_init.exit, %do.body.do.cond_crit_edge
  %ic_next = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 2
  %17 = ptrtoint ptr %ic_next to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ic_next, align 8
  %19 = ptrtoint ptr %l_iclog to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %l_iclog, align 8
  %cmp.not = icmp eq ptr %18, %20
  br i1 %cmp.not, label %do.end, label %do.cond.do.body_crit_edge

do.cond.do.body_crit_edge:                        ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

do.end:                                           ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #18
  %l_flush_wait = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 18
  call void @__wake_up(ptr noundef %l_flush_wait, i32 noundef 3, i32 noundef 0, ptr noundef null) #16
  call void @_raw_spin_unlock(ptr noundef %l_icloglock) #16
  call void @xlog_cil_process_committed(ptr noundef nonnull %cb_list) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %cb_list) #16
  ret void
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @xlog_verify_tail_lsn(ptr nocapture noundef readonly %log, ptr nocapture noundef readonly %iclog) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ic_data = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 13
  %0 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ic_data, align 4
  %h_tail_lsn = getelementptr inbounds %struct.xlog_rec_header, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %h_tail_lsn to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %h_tail_lsn, align 8
  %4 = lshr i64 %3, 32
  %conv = trunc i64 %4 to i32
  %l_prev_cycle = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 23
  %5 = ptrtoint ptr %l_prev_cycle to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %l_prev_cycle, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %conv)
  %cmp = icmp eq i32 %6, %conv
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %l_logBBsize = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 16
  %7 = ptrtoint ptr %l_logBBsize to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %l_logBBsize, align 4
  %l_prev_block = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 25
  %9 = ptrtoint ptr %l_prev_block to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %l_prev_block, align 4
  %conv2 = trunc i64 %3 to i32
  %sub.neg = add i32 %8, %conv2
  %sub3 = sub i32 %sub.neg, %10
  %conv4 = sext i32 %sub3 to i64
  %ic_offset = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 6
  %11 = ptrtoint ptr %ic_offset to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %ic_offset, align 8
  %conv5 = zext i32 %12 to i64
  %sub6 = add nuw nsw i64 %conv5, 511
  %shr7 = lshr i64 %sub6, 9
  %l_iclog_hsize = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 9
  %13 = ptrtoint ptr %l_iclog_hsize to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %l_iclog_hsize, align 4
  %conv8 = sext i32 %14 to i64
  %sub10 = add nsw i64 %conv8, 511
  %shr11 = lshr i64 %sub10, 9
  %add12 = add nuw nsw i64 %shr11, %shr7
  call void @__sanitizer_cov_trace_cmp8(i64 %add12, i64 %conv4)
  %cmp13 = icmp ugt i64 %add12, %conv4
  br i1 %cmp13, label %if.then.if.end45.sink.split_crit_edge, label %if.then.if.end45_crit_edge

if.then.if.end45_crit_edge:                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end45

if.then.if.end45.sink.split_crit_edge:            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end45.sink.split

if.else:                                          ; preds = %entry
  %add18 = add i32 %conv, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %add18, i32 %6)
  %cmp20 = icmp eq i32 %add18, %6
  br i1 %cmp20, label %if.else.cond.end_crit_edge, label %cond.false, !prof !432

if.else.cond.end_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.false:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.153, ptr noundef nonnull @.str.1, i32 noundef 3709) #16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.else.cond.end_crit_edge
  %conv23 = trunc i64 %3 to i32
  %l_prev_block24 = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 25
  %15 = ptrtoint ptr %l_prev_block24 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %l_prev_block24, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %16, i32 %conv23)
  %cmp25 = icmp eq i32 %16, %conv23
  br i1 %cmp25, label %if.then27, label %cond.end.if.end29_crit_edge

cond.end.if.end29_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end29

if.then27:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  %17 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %log, align 128
  tail call void (ptr, ptr, ...) @xfs_emerg(ptr noundef %18, ptr noundef nonnull @.str.154, ptr noundef nonnull @__func__.xlog_verify_tail_lsn) #16
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %cond.end.if.end29_crit_edge
  %19 = ptrtoint ptr %l_prev_block24 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %l_prev_block24, align 4
  %sub32 = sub i32 %conv23, %20
  %conv33 = sext i32 %sub32 to i64
  %ic_offset34 = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 6
  %21 = ptrtoint ptr %ic_offset34 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %ic_offset34, align 8
  %conv35 = zext i32 %22 to i64
  %sub37 = add nuw nsw i64 %conv35, 511
  %shr38 = lshr i64 %sub37, 9
  call void @__sanitizer_cov_trace_cmp8(i64 %shr38, i64 %conv33)
  %cmp40.not = icmp ult i64 %shr38, %conv33
  br i1 %cmp40.not, label %if.end29.if.end45_crit_edge, label %if.end29.if.end45.sink.split_crit_edge

if.end29.if.end45.sink.split_crit_edge:           ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end45.sink.split

if.end29.if.end45_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end45

if.end45.sink.split:                              ; preds = %if.end29.if.end45.sink.split_crit_edge, %if.then.if.end45.sink.split_crit_edge
  %23 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %log, align 128
  tail call void (ptr, ptr, ...) @xfs_emerg(ptr noundef %24, ptr noundef nonnull @.str.152, ptr noundef nonnull @__func__.xlog_verify_tail_lsn) #16
  br label %if.end45

if.end45:                                         ; preds = %if.end45.sink.split, %if.end29.if.end45_crit_edge, %if.then.if.end45_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xlog_iclog_syncing(ptr noundef %iclog, i32 noundef %caller_ip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_syncing, i32 0, i32 1), ptr blockaddress(@trace_xlog_iclog_syncing, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !451
  %call42 = tail call i32 @__traceiter_xlog_iclog_syncing(ptr noundef null, ptr noundef %iclog, i32 noundef %caller_ip) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !452
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_syncing, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_syncing, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xlog_iclog_syncing.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xlog_iclog_syncing.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 4108, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @xlog_sync(ptr noundef %log, ptr noundef %iclog) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ic_refcnt = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 12
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %ic_refcnt, i32 noundef 4) #16
  %0 = ptrtoint ptr %ic_refcnt to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %ic_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %entry.cond.end_crit_edge, label %cond.false, !prof !432

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.129, ptr noundef nonnull @.str.1, i32 noundef 2017) #16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry.cond.end_crit_edge
  %2 = tail call ptr @llvm.returnaddress(i32 0)
  %3 = ptrtoint ptr %2 to i32
  tail call fastcc void @trace_xlog_iclog_sync(ptr noundef %iclog, i32 noundef %3)
  %l_iclog_hsize.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 9
  %4 = ptrtoint ptr %l_iclog_hsize.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %l_iclog_hsize.i, align 4
  %ic_offset.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 6
  %6 = ptrtoint ptr %ic_offset.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ic_offset.i, align 8
  %add.i = add i32 %7, %5
  %l_iclog_roundoff.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 36
  %8 = ptrtoint ptr %l_iclog_roundoff.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %l_iclog_roundoff.i, align 8
  %sub.i = add i32 %9, -1
  %add1.i = add i32 %sub.i, %add.i
  %10 = urem i32 %add1.i, %9
  %mul.i = sub i32 %add1.i, %10
  %sub2.i = sub i32 %mul.i, %add.i
  call void @__sanitizer_cov_trace_cmp4(i32 %mul.i, i32 %add.i)
  %cmp.not.i = icmp ult i32 %mul.i, %add.i
  br i1 %cmp.not.i, label %cond.false.i, label %cond.end.cond.end.i_crit_edge, !prof !437

cond.end.cond.end.i_crit_edge:                    ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.i

cond.false.i:                                     ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.138, ptr noundef nonnull @.str.1, i32 noundef 1979) #16
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %cond.end.cond.end.i_crit_edge
  %11 = ptrtoint ptr %l_iclog_roundoff.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %l_iclog_roundoff.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %sub2.i, i32 %12)
  %cmp5.i = icmp ult i32 %sub2.i, %12
  br i1 %cmp5.i, label %cond.end.i.xlog_calc_iclog_size.exit_crit_edge, label %cond.false13.i, !prof !432

cond.end.i.xlog_calc_iclog_size.exit_crit_edge:   ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_calc_iclog_size.exit

cond.false13.i:                                   ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.139, ptr noundef nonnull @.str.1, i32 noundef 1980) #16
  br label %xlog_calc_iclog_size.exit

xlog_calc_iclog_size.exit:                        ; preds = %cond.false13.i, %cond.end.i.xlog_calc_iclog_size.exit_crit_edge
  %grant = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 31, i32 2
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %grant, i32 noundef 8) #16
  %call.i.i131 = tail call i64 @generic_atomic64_read(ptr noundef %grant) #16
  %l_logsize.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 15
  br label %do.body.i

do.body.i:                                        ; preds = %do.body.i.do.body.i_crit_edge, %xlog_calc_iclog_size.exit
  %head_val.0.i = phi i64 [ %call.i.i131, %xlog_calc_iclog_size.exit ], [ %call.i13.i, %do.body.i.do.body.i_crit_edge ]
  %13 = lshr i64 %head_val.0.i, 32
  %conv.i.i = trunc i64 %13 to i32
  %conv1.i.i = trunc i64 %head_val.0.i to i32
  %14 = ptrtoint ptr %l_logsize.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %l_logsize.i, align 32
  %sub.i132 = sub i32 %15, %conv1.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i132, i32 %sub2.i)
  %cmp.i = icmp sgt i32 %sub.i132, %sub2.i
  %not.cmp.i = xor i1 %cmp.i, true
  %inc.i = zext i1 %not.cmp.i to i32
  %cycle.0.i = add i32 %inc.i, %conv.i.i
  %16 = sub i32 0, %sub.i132
  %space.0.p.i = select i1 %cmp.i, i32 %conv1.i.i, i32 %16
  %space.0.i = add i32 %space.0.p.i, %sub2.i
  %conv2.i.i = zext i32 %cycle.0.i to i64
  %shl.i.i = shl nuw i64 %conv2.i.i, 32
  %conv1.i14.i = sext i32 %space.0.i to i64
  %or.i.i = or i64 %shl.i.i, %conv1.i14.i
  %call.i.i12.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %grant, i32 noundef 8) #16
  %call.i13.i = tail call i64 @generic_atomic64_cmpxchg(ptr noundef %grant, i64 noundef %head_val.0.i, i64 noundef %or.i.i) #16
  %cmp4.not.i = icmp eq i64 %call.i13.i, %head_val.0.i
  br i1 %cmp4.not.i, label %xlog_grant_add_space.exit, label %do.body.i.do.body.i_crit_edge

do.body.i.do.body.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i

xlog_grant_add_space.exit:                        ; preds = %do.body.i
  %grant3 = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 32, i32 2
  %call.i.i.i133 = tail call zeroext i1 @__kasan_check_read(ptr noundef %grant3, i32 noundef 8) #16
  %call.i.i134 = tail call i64 @generic_atomic64_read(ptr noundef %grant3) #16
  br label %do.body.i153

do.body.i153:                                     ; preds = %do.body.i153.do.body.i153_crit_edge, %xlog_grant_add_space.exit
  %head_val.0.i136 = phi i64 [ %call.i.i134, %xlog_grant_add_space.exit ], [ %call.i13.i151, %do.body.i153.do.body.i153_crit_edge ]
  %17 = lshr i64 %head_val.0.i136, 32
  %conv.i.i137 = trunc i64 %17 to i32
  %conv1.i.i138 = trunc i64 %head_val.0.i136 to i32
  %18 = ptrtoint ptr %l_logsize.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %l_logsize.i, align 32
  %sub.i139 = sub i32 %19, %conv1.i.i138
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i139, i32 %sub2.i)
  %cmp.i140 = icmp sgt i32 %sub.i139, %sub2.i
  %not.cmp.i141 = xor i1 %cmp.i140, true
  %inc.i142 = zext i1 %not.cmp.i141 to i32
  %cycle.0.i143 = add i32 %inc.i142, %conv.i.i137
  %20 = sub i32 0, %sub.i139
  %space.0.p.i144 = select i1 %cmp.i140, i32 %conv1.i.i138, i32 %20
  %space.0.i145 = add i32 %space.0.p.i144, %sub2.i
  %conv2.i.i146 = zext i32 %cycle.0.i143 to i64
  %shl.i.i147 = shl nuw i64 %conv2.i.i146, 32
  %conv1.i14.i148 = sext i32 %space.0.i145 to i64
  %or.i.i149 = or i64 %shl.i.i147, %conv1.i14.i148
  %call.i.i12.i150 = tail call zeroext i1 @__kasan_check_write(ptr noundef %grant3, i32 noundef 8) #16
  %call.i13.i151 = tail call i64 @generic_atomic64_cmpxchg(ptr noundef %grant3, i64 noundef %head_val.0.i136, i64 noundef %or.i.i149) #16
  %cmp4.not.i152 = icmp eq i64 %call.i13.i151, %head_val.0.i136
  br i1 %cmp4.not.i152, label %xlog_grant_add_space.exit154, label %do.body.i153.do.body.i153_crit_edge

do.body.i153.do.body.i153_crit_edge:              ; preds = %do.body.i153
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i153

xlog_grant_add_space.exit154:                     ; preds = %do.body.i153
  tail call fastcc void @xlog_pack_data(ptr noundef %log, ptr noundef %iclog, i32 noundef %sub2.i)
  %21 = ptrtoint ptr %ic_offset.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %ic_offset.i, align 8
  %23 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %log, align 128
  %m_features.i = getelementptr inbounds %struct.xfs_mount, ptr %24, i32 0, i32 61
  %25 = ptrtoint ptr %m_features.i to i32
  call void @__asan_load8_noabort(i32 %25)
  %26 = load i64, ptr %m_features.i, align 8
  %and.i = and i64 %26, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.i.not = icmp eq i64 %and.i, 0
  %add = select i1 %tobool.i.not, i32 0, i32 %sub2.i
  %spec.select = add i32 %add, %22
  %ic_data = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 13
  %27 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ic_data, align 4
  %h_len = getelementptr inbounds %struct.xlog_rec_header, ptr %28, i32 0, i32 3
  %29 = ptrtoint ptr %h_len to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %spec.select, ptr %h_len, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @xfsstats to i32))
  %30 = load ptr, ptr @xfsstats, align 4
  %31 = ptrtoint ptr %30 to i32
  %32 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i155 = and i32 %32, -16384
  %33 = inttoptr i32 %and.i155 to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 3
  %34 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %35
  %36 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %arrayidx, align 4
  %add8 = add i32 %37, %31
  %38 = inttoptr i32 %add8 to ptr
  %xs_log_writes = getelementptr inbounds %struct.__xfsstats, ptr %38, i32 0, i32 33
  %39 = ptrtoint ptr %xs_log_writes to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %xs_log_writes, align 4
  %inc = add i32 %40, 1
  store i32 %inc, ptr %xs_log_writes, align 4
  %41 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %log, align 128
  %m_stats = getelementptr inbounds %struct.xfs_mount, ptr %42, i32 0, i32 92
  %43 = ptrtoint ptr %m_stats to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %m_stats, align 4
  %45 = ptrtoint ptr %44 to i32
  %46 = load i32, ptr %cpu, align 4
  %arrayidx19 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %46
  %47 = ptrtoint ptr %arrayidx19 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx19, align 4
  %add20 = add i32 %48, %45
  %49 = inttoptr i32 %add20 to ptr
  %xs_log_writes21 = getelementptr inbounds %struct.__xfsstats, ptr %49, i32 0, i32 33
  %50 = ptrtoint ptr %xs_log_writes21 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %xs_log_writes21, align 4
  %inc22 = add i32 %51, 1
  store i32 %inc22, ptr %xs_log_writes21, align 4
  %conv = zext i32 %mul.i to i64
  %sub = add nuw nsw i64 %conv, 511
  %shr = lshr i64 %sub, 9
  %52 = load i32, ptr %cpu, align 4
  %arrayidx36 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %52
  %53 = ptrtoint ptr %arrayidx36 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %arrayidx36, align 4
  %add37 = add i32 %54, %31
  %55 = inttoptr i32 %add37 to ptr
  %xs_log_blocks = getelementptr inbounds %struct.__xfsstats, ptr %55, i32 0, i32 34
  %56 = ptrtoint ptr %xs_log_blocks to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %xs_log_blocks, align 8
  %58 = trunc i64 %shr to i32
  %conv40 = add i32 %57, %58
  store i32 %conv40, ptr %xs_log_blocks, align 8
  %59 = load ptr, ptr %log, align 128
  %m_stats52 = getelementptr inbounds %struct.xfs_mount, ptr %59, i32 0, i32 92
  %60 = ptrtoint ptr %m_stats52 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %m_stats52, align 4
  %62 = ptrtoint ptr %61 to i32
  %63 = load i32, ptr %cpu, align 4
  %arrayidx57 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %63
  %64 = ptrtoint ptr %arrayidx57 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %arrayidx57, align 4
  %add58 = add i32 %65, %62
  %66 = inttoptr i32 %add58 to ptr
  %xs_log_blocks59 = getelementptr inbounds %struct.__xfsstats, ptr %66, i32 0, i32 34
  %67 = ptrtoint ptr %xs_log_blocks59 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %xs_log_blocks59, align 8
  %conv62 = add i32 %68, %58
  store i32 %conv62, ptr %xs_log_blocks59, align 8
  %69 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %ic_data, align 4
  %h_lsn = getelementptr inbounds %struct.xlog_rec_header, ptr %70, i32 0, i32 4
  %71 = ptrtoint ptr %h_lsn to i32
  call void @__asan_load8_noabort(i32 %71)
  %72 = load i64, ptr %h_lsn, align 8
  %conv67 = and i64 %72, 4294967295
  %add72 = add nuw nsw i64 %conv67, %shr
  %l_logBBsize = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 16
  %73 = ptrtoint ptr %l_logBBsize to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %l_logBBsize, align 4
  %conv73 = sext i32 %74 to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %add72, i64 %conv73)
  %cmp74 = icmp ugt i64 %add72, %conv73
  br i1 %cmp74, label %if.then76, label %xlog_grant_add_space.exit154.if.end78_crit_edge

xlog_grant_add_space.exit154.if.end78_crit_edge:  ; preds = %xlog_grant_add_space.exit154
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end78

if.then76:                                        ; preds = %xlog_grant_add_space.exit154
  %75 = trunc i64 %72 to i32
  %sub.tr.i = sub i32 %74, %75
  %conv1.i = shl i32 %sub.tr.i, 9
  call void @__sanitizer_cov_trace_cmp4(i32 %conv1.i, i32 %mul.i)
  %cmp14.i = icmp ult i32 %conv1.i, %mul.i
  br i1 %cmp14.i, label %if.then76.for.body.i_crit_edge, label %if.then76.if.end78_crit_edge

if.then76.if.end78_crit_edge:                     ; preds = %if.then76
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end78

if.then76.for.body.i_crit_edge:                   ; preds = %if.then76
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.then76.for.body.i_crit_edge
  %i.015.i = phi i32 [ %add.i157, %for.body.i.for.body.i_crit_edge ], [ %conv1.i, %if.then76.for.body.i_crit_edge ]
  %add.ptr.i = getelementptr i8, ptr %70, i32 %i.015.i
  %76 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_loadN_noabort(i32 %76, i32 4)
  %77 = load i32, ptr %add.ptr.i, align 1
  %inc.i156 = add i32 %77, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -17974594, i32 %inc.i156)
  %cmp3.i = icmp eq i32 %inc.i156, -17974594
  %spec.select.i = select i1 %cmp3.i, i32 -17974593, i32 %inc.i156
  %78 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_storeN_noabort(i32 %78, i32 4)
  store i32 %spec.select.i, ptr %add.ptr.i, align 1
  %add.i157 = add i32 %i.015.i, 512
  %cmp.i158 = icmp ult i32 %add.i157, %mul.i
  br i1 %cmp.i158, label %for.body.i.for.body.i_crit_edge, label %for.body.i.if.end78_crit_edge

for.body.i.if.end78_crit_edge:                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end78

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

if.end78:                                         ; preds = %for.body.i.if.end78_crit_edge, %if.then76.if.end78_crit_edge, %xlog_grant_add_space.exit154.if.end78_crit_edge
  %79 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %ic_data, align 4
  %ic_datap = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 9
  %81 = ptrtoint ptr %ic_datap to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %ic_datap, align 4
  %add.ptr.i.i = getelementptr i8, ptr %80, i32 32
  %83 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_store4_noabort(i32 %83)
  store i32 0, ptr %add.ptr.i.i, align 4
  %call.i.i159 = tail call i32 @crc32c(i32 noundef -1, ptr noundef %80, i32 noundef 328) #16
  %84 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %log, align 128
  %m_features.i.i = getelementptr inbounds %struct.xfs_mount, ptr %85, i32 0, i32 61
  %86 = ptrtoint ptr %m_features.i.i to i32
  call void @__asan_load8_noabort(i32 %86)
  %87 = load i64, ptr %m_features.i.i, align 8
  %and.i.i = and i64 %87, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.i.not.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.i.not.i, label %if.end78.xlog_cksum.exit_crit_edge, label %if.then.i

if.end78.xlog_cksum.exit_crit_edge:               ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_cksum.exit

if.then.i:                                        ; preds = %if.end78
  %sub.i160 = add i32 %spec.select, 32767
  call void @__sanitizer_cov_trace_const_cmp4(i32 65535, i32 %sub.i160)
  %cmp11.i = icmp sgt i32 %sub.i160, 65535
  br i1 %cmp11.i, label %for.body.preheader.i, label %if.then.i.xlog_cksum.exit_crit_edge

if.then.i.xlog_cksum.exit_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_cksum.exit

for.body.preheader.i:                             ; preds = %if.then.i
  %div1415.i = lshr i32 %sub.i160, 15
  br label %for.body.i162

for.body.i162:                                    ; preds = %for.body.i162.for.body.i162_crit_edge, %for.body.preheader.i
  %i.013.i = phi i32 [ %inc.i161, %for.body.i162.for.body.i162_crit_edge ], [ 1, %for.body.preheader.i ]
  %crc.012.i = phi i32 [ %call2.i, %for.body.i162.for.body.i162_crit_edge ], [ %call.i.i159, %for.body.preheader.i ]
  %arrayidx.i = getelementptr %union.xlog_in_core2, ptr %80, i32 %i.013.i
  %call2.i = tail call i32 @crc32c(i32 noundef %crc.012.i, ptr noundef %arrayidx.i, i32 noundef 260) #16
  %inc.i161 = add nuw nsw i32 %i.013.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i161, %div1415.i
  br i1 %exitcond.not.i, label %for.body.i162.xlog_cksum.exit_crit_edge, label %for.body.i162.for.body.i162_crit_edge

for.body.i162.for.body.i162_crit_edge:            ; preds = %for.body.i162
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i162

for.body.i162.xlog_cksum.exit_crit_edge:          ; preds = %for.body.i162
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_cksum.exit

xlog_cksum.exit:                                  ; preds = %for.body.i162.xlog_cksum.exit_crit_edge, %if.then.i.xlog_cksum.exit_crit_edge, %if.end78.xlog_cksum.exit_crit_edge
  %crc.1.i = phi i32 [ %call.i.i159, %if.end78.xlog_cksum.exit_crit_edge ], [ %call.i.i159, %if.then.i.xlog_cksum.exit_crit_edge ], [ %call2.i, %for.body.i162.xlog_cksum.exit_crit_edge ]
  %call3.i = tail call i32 @crc32c(i32 noundef %crc.1.i, ptr noundef %82, i32 noundef %spec.select) #16
  %88 = xor i32 %call3.i, -1
  %89 = tail call i32 @llvm.bswap.i32(i32 %88) #16
  %90 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %ic_data, align 4
  %h_crc = getelementptr inbounds %struct.xlog_rec_header, ptr %91, i32 0, i32 6
  %92 = ptrtoint ptr %h_crc to i32
  call void @__asan_store4_noabort(i32 %92)
  store i32 %89, ptr %h_crc, align 8
  %93 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %log, align 128
  %call83 = tail call zeroext i1 @xfs_errortag_test(ptr noundef %94, ptr noundef nonnull @.str.136, ptr noundef nonnull @.str.1, i32 noundef 2055, i32 noundef 29) #16
  br i1 %call83, label %if.then85, label %xlog_cksum.exit.if.end91_crit_edge

xlog_cksum.exit.if.end91_crit_edge:               ; preds = %xlog_cksum.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end91

if.then85:                                        ; preds = %xlog_cksum.exit
  call void @__sanitizer_cov_trace_pc() #18
  %95 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %ic_data, align 4
  %h_crc87 = getelementptr inbounds %struct.xlog_rec_header, ptr %96, i32 0, i32 6
  %97 = ptrtoint ptr %h_crc87 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load i32, ptr %h_crc87, align 8
  %and = and i32 %98, -1431655766
  store i32 %and, ptr %h_crc87, align 8
  %ic_fail_crc = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 14
  %99 = ptrtoint ptr %ic_fail_crc to i32
  call void @__asan_load1_noabort(i32 %99)
  %bf.load = load i8, ptr %ic_fail_crc, align 8
  %bf.set = or i8 %bf.load, -128
  store i8 %bf.set, ptr %ic_fail_crc, align 8
  %100 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %log, align 128
  %102 = load ptr, ptr %ic_data, align 4
  %h_lsn90 = getelementptr inbounds %struct.xlog_rec_header, ptr %102, i32 0, i32 4
  %103 = ptrtoint ptr %h_lsn90 to i32
  call void @__asan_load8_noabort(i32 %103)
  %104 = load i64, ptr %h_lsn90, align 8
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %101, ptr noundef nonnull @.str.137, i64 noundef %104) #16
  br label %if.end91

if.end91:                                         ; preds = %if.then85, %xlog_cksum.exit.if.end91_crit_edge
  tail call fastcc void @xlog_verify_iclog(ptr noundef %log, ptr noundef %iclog, i32 noundef %mul.i)
  tail call fastcc void @xlog_write_iclog(ptr noundef %log, ptr noundef %iclog, i64 noundef %conv67, i32 noundef %mul.i)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @xfs_log_mount(ptr noundef %mp, ptr noundef %log_target, i64 noundef %blk_offset, i32 noundef %num_bblks) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %m_features.i = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 61
  %0 = ptrtoint ptr %m_features.i to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %m_features.i, align 8
  %and.i = and i64 %1, 8192
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.i.not = icmp eq i64 %and.i, 0
  %and.i148 = and i64 %1, 4611686018427387904
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i148)
  %tobool.i149.not = icmp eq i64 %and.i148, 0
  %sb_versionnum = getelementptr inbounds %struct.xfs_sb, ptr %mp, i32 0, i32 15
  %2 = ptrtoint ptr %sb_versionnum to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %sb_versionnum, align 4
  %4 = and i16 %3, 15
  %and = zext i16 %4 to i32
  br i1 %tobool.i149.not, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @xfs_notice(ptr noundef %mp, ptr noundef nonnull @.str.4, i32 noundef %and) #16
  br label %if.end

if.else:                                          ; preds = %entry
  tail call void (ptr, ptr, ...) @xfs_notice(ptr noundef %mp, ptr noundef nonnull @.str.5, i32 noundef %and) #16
  %m_opstate.i = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 66
  %5 = ptrtoint ptr %m_opstate.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %m_opstate.i, align 4
  %7 = and i32 %6, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.i150.not = icmp eq i32 %7, 0
  br i1 %tobool.i150.not, label %cond.false, label %if.else.if.end_crit_edge, !prof !437

if.else.if.end_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

cond.false:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.6, ptr noundef nonnull @.str.1, i32 noundef 643) #16
  br label %if.end

if.end:                                           ; preds = %cond.false, %if.else.if.end_crit_edge, %if.then
  %call8 = tail call fastcc ptr @xlog_alloc_log(ptr noundef %mp, ptr noundef %log_target, i64 noundef %blk_offset, i32 noundef %num_bblks)
  %cmp.i = icmp ugt ptr %call8, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %call8 to i32
  br label %cleanup88

if.end12:                                         ; preds = %if.end
  %m_log = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 8
  %9 = ptrtoint ptr %m_log to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %call8, ptr %m_log, align 4
  %call13 = tail call i32 @xfs_log_calc_minimum_size(ptr noundef %mp) #16
  %sb_logblocks = getelementptr inbounds %struct.xfs_sb, ptr %mp, i32 0, i32 14
  %10 = ptrtoint ptr %sb_logblocks to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %sb_logblocks, align 32
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %call13)
  %cmp = icmp ult i32 %11, %call13
  br i1 %cmp, label %if.then61, label %if.else19

if.else19:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_const_cmp4(i32 1048576, i32 %11)
  %cmp23 = icmp ugt i32 %11, 1048576
  br i1 %cmp23, label %if.then25, label %if.else28

if.then25:                                        ; preds = %if.else19
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.8, i32 noundef %11, i64 noundef 1048576) #16
  br i1 %tobool.i.not, label %if.then25.if.end64_crit_edge, label %if.then25.if.then63_crit_edge

if.then25.if.then63_crit_edge:                    ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then63

if.then25.if.end64_crit_edge:                     ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end64

if.else28:                                        ; preds = %if.else19
  %conv22 = zext i32 %11 to i64
  %sb_blocklog = getelementptr inbounds %struct.xfs_sb, ptr %mp, i32 0, i32 20
  %12 = ptrtoint ptr %sb_blocklog to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %sb_blocklog, align 8
  %sh_prom = zext i8 %13 to i64
  %shl = shl i64 %conv22, %sh_prom
  call void @__sanitizer_cov_trace_const_cmp8(i64 2136997888, i64 %shl)
  %cmp34 = icmp ugt i64 %shl, 2136997888
  br i1 %cmp34, label %if.then36, label %if.else45

if.then36:                                        ; preds = %if.else28
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.9, i64 noundef %shl, i64 noundef 2136997888) #16
  br i1 %tobool.i.not, label %if.then36.if.end64_crit_edge, label %if.then36.if.then63_crit_edge

if.then36.if.then63_crit_edge:                    ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then63

if.then36.if.end64_crit_edge:                     ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end64

if.else45:                                        ; preds = %if.else28
  %sb_logsunit = getelementptr inbounds %struct.xfs_sb, ptr %mp, i32 0, i32 43
  %14 = ptrtoint ptr %sb_logsunit to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %sb_logsunit, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %15)
  %cmp47 = icmp ugt i32 %15, 1
  br i1 %cmp47, label %land.lhs.true, label %if.else45.if.end65_crit_edge

if.else45.if.end65_crit_edge:                     ; preds = %if.else45
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end65

land.lhs.true:                                    ; preds = %if.else45
  %sb_blocksize = getelementptr inbounds %struct.xfs_sb, ptr %mp, i32 0, i32 1
  %16 = ptrtoint ptr %sb_blocksize to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %sb_blocksize, align 4
  %rem = urem i32 %15, %17
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem)
  %tobool52.not = icmp eq i32 %rem, 0
  br i1 %tobool52.not, label %land.lhs.true.if.end65_crit_edge, label %if.then61.thread

land.lhs.true.if.end65_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end65

if.then61.thread:                                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.10, i32 noundef %15) #16
  br label %if.then63

if.then61:                                        ; preds = %if.end12
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.7, i32 noundef %11, i32 noundef %call13) #16
  br i1 %tobool.i.not, label %if.then61.if.end64_crit_edge, label %if.then61.if.then63_crit_edge

if.then61.if.then63_crit_edge:                    ; preds = %if.then61
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then63

if.then61.if.end64_crit_edge:                     ; preds = %if.then61
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end64

if.then63:                                        ; preds = %if.then61.if.then63_crit_edge, %if.then61.thread, %if.then36.if.then63_crit_edge, %if.then25.if.then63_crit_edge
  tail call void (ptr, ptr, ...) @xfs_crit(ptr noundef %mp, ptr noundef nonnull @.str.11) #16
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.12, ptr noundef nonnull @.str.1, i32 noundef 700) #16
  br label %out_free_log

if.end64:                                         ; preds = %if.then61.if.end64_crit_edge, %if.then36.if.end64_crit_edge, %if.then25.if.end64_crit_edge
  tail call void (ptr, ptr, ...) @xfs_crit(ptr noundef %mp, ptr noundef nonnull @.str.13) #16
  tail call void (ptr, ptr, ...) @xfs_crit(ptr noundef %mp, ptr noundef nonnull @.str.14) #16
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %land.lhs.true.if.end65_crit_edge, %if.else45.if.end65_crit_edge
  %call66 = tail call i32 @xfs_trans_ail_init(ptr noundef %mp) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call66)
  %tobool67.not = icmp eq i32 %call66, 0
  br i1 %tobool67.not, label %if.end69, label %if.then68

if.then68:                                        ; preds = %if.end65
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.15, i32 noundef %call66) #16
  br label %out_free_log

if.end69:                                         ; preds = %if.end65
  %m_ail = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 2
  %18 = ptrtoint ptr %m_ail to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %m_ail, align 4
  %l_ailp = getelementptr inbounds %struct.xlog, ptr %call8, i32 0, i32 1
  %20 = ptrtoint ptr %l_ailp to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %19, ptr %l_ailp, align 4
  %21 = ptrtoint ptr %m_features.i to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %m_features.i, align 8
  %and.i152 = and i64 %22, 4611686018427387904
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i152)
  %tobool.i153.not = icmp eq i64 %and.i152, 0
  br i1 %tobool.i153.not, label %if.then71, label %if.end69.if.end83_crit_edge

if.end69.if.end83_crit_edge:                      ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end83

if.then71:                                        ; preds = %if.end69
  %m_opstate = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 66
  %call72 = tail call i32 @_test_and_clear_bit(i32 noundef 4, ptr noundef %m_opstate) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call72)
  %tobool73.not = icmp eq i32 %call72, 0
  %call75 = tail call i32 @xlog_recover(ptr noundef %call8) #16
  br i1 %tobool73.not, label %if.then71.if.end79_crit_edge, label %if.then77

if.then71.if.end79_crit_edge:                     ; preds = %if.then71
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end79

if.then77:                                        ; preds = %if.then71
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_set_bit(i32 noundef 4, ptr noundef %m_opstate) #16
  br label %if.end79

if.end79:                                         ; preds = %if.then77, %if.then71.if.end79_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call75)
  %tobool80.not = icmp eq i32 %call75, 0
  br i1 %tobool80.not, label %if.end79.if.end83_crit_edge, label %cleanup

if.end79.if.end83_crit_edge:                      ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end83

cleanup:                                          ; preds = %if.end79
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.16, i32 noundef %call75) #16
  tail call void @xlog_recover_cancel(ptr noundef %call8) #16
  br label %out_destroy_ail

if.end83:                                         ; preds = %if.end79.if.end83_crit_edge, %if.end69.if.end83_crit_edge
  %l_kobj = getelementptr inbounds %struct.xlog, ptr %call8, i32 0, i32 33
  %m_kobj = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 88
  %complete.i = getelementptr inbounds %struct.xlog, ptr %call8, i32 0, i32 33, i32 1
  %23 = ptrtoint ptr %complete.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 0, ptr %complete.i, align 4
  %wait.i.i = getelementptr inbounds %struct.xlog, ptr %call8, i32 0, i32 33, i32 1, i32 1
  tail call void @__init_swait_queue_head(ptr noundef %wait.i.i, ptr noundef nonnull @.str.94, ptr noundef nonnull @init_completion.__key) #16
  %call.i = tail call i32 (ptr, ptr, ptr, ptr, ...) @kobject_init_and_add(ptr noundef %l_kobj, ptr noundef nonnull @xfs_log_ktype, ptr noundef %m_kobj, ptr noundef nonnull @.str.93, ptr noundef nonnull @.str.17) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool85.not = icmp eq i32 %call.i, 0
  br i1 %tobool85.not, label %if.end87, label %if.end83.out_destroy_ail_crit_edge

if.end83.out_destroy_ail_crit_edge:               ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_destroy_ail

if.end87:                                         ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #18
  %l_opstate = getelementptr inbounds %struct.xlog, ptr %call8, i32 0, i32 6
  tail call void @_clear_bit(i32 noundef 0, ptr noundef %l_opstate) #16
  tail call void @xlog_cil_init_post_recovery(ptr noundef %call8) #16
  br label %cleanup88

out_destroy_ail:                                  ; preds = %if.end83.out_destroy_ail_crit_edge, %cleanup
  %error.1 = phi i32 [ %call.i, %if.end83.out_destroy_ail_crit_edge ], [ %call75, %cleanup ]
  tail call void @xfs_trans_ail_destroy(ptr noundef %mp) #16
  br label %out_free_log

out_free_log:                                     ; preds = %out_destroy_ail, %if.then68, %if.then63
  %error.2 = phi i32 [ -22, %if.then63 ], [ %call66, %if.then68 ], [ %error.1, %out_destroy_ail ]
  tail call fastcc void @xlog_dealloc_log(ptr noundef %call8)
  br label %cleanup88

cleanup88:                                        ; preds = %out_free_log, %if.end87, %if.then10
  %retval.0 = phi i32 [ 0, %if.end87 ], [ %8, %if.then10 ], [ %error.2, %out_free_log ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xfs_notice(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @xlog_alloc_log(ptr noundef %mp, ptr noundef %log_target, i64 noundef %blk_offset, i32 noundef %num_bblks) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call ptr @kmem_alloc(i32 noundef 1280, i32 noundef 24) #16
  %tobool.not = icmp eq ptr %call.i, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.105) #16
  br label %out

if.end:                                           ; preds = %entry
  %0 = ptrtoint ptr %call.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %mp, ptr %call.i, align 128
  %l_targ = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 3
  %1 = ptrtoint ptr %l_targ to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %log_target, ptr %l_targ, align 4
  %shl = shl i32 %num_bblks, 9
  %l_logsize = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 15
  %2 = ptrtoint ptr %l_logsize to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %shl, ptr %l_logsize, align 32
  %l_logBBstart = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 14
  %3 = ptrtoint ptr %l_logBBstart to i32
  call void @__asan_store8_noabort(i32 %3)
  store i64 %blk_offset, ptr %l_logBBstart, align 8
  %l_logBBsize = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 16
  %4 = ptrtoint ptr %l_logBBsize to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %num_bblks, ptr %l_logBBsize, align 4
  %l_covered_state = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 19
  %5 = ptrtoint ptr %l_covered_state to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %l_covered_state, align 4
  %l_opstate = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 6
  tail call void @_set_bit(i32 noundef 0, ptr noundef %l_opstate) #16
  %l_work = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 5
  tail call void @__init_work(ptr noundef %l_work, i32 noundef 0) #16
  %6 = ptrtoint ptr %l_work to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 -64, ptr %l_work, align 4
  %lockdep_map = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 5, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.106, ptr noundef nonnull @xlog_alloc_log.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %entry8 = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 5, i32 0, i32 1
  %7 = ptrtoint ptr %entry8 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %entry8, ptr %entry8, align 4
  %prev.i = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 5, i32 0, i32 1, i32 1
  %8 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %entry8, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 5, i32 0, i32 2
  %9 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr @xfs_log_worker, ptr %func, align 4
  %timer = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 5, i32 1
  tail call void @init_timer_key(ptr noundef %timer, ptr noundef nonnull @delayed_work_timer_fn, i32 noundef 2097152, ptr noundef nonnull @.str.108, ptr noundef nonnull @xlog_alloc_log.__key.107) #16
  %l_prev_block = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 25
  %10 = ptrtoint ptr %l_prev_block to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 -1, ptr %l_prev_block, align 4
  %l_tail_lsn = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 29
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %l_tail_lsn, i32 noundef 8) #16
  tail call void @generic_atomic64_set(ptr noundef %l_tail_lsn, i64 noundef 4294967296) #16
  %l_last_sync_lsn = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 27
  %call.i.i.i254 = tail call zeroext i1 @__kasan_check_write(ptr noundef %l_last_sync_lsn, i32 noundef 8) #16
  tail call void @generic_atomic64_set(ptr noundef %l_last_sync_lsn, i64 noundef 4294967296) #16
  %l_curr_cycle = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 22
  %11 = ptrtoint ptr %l_curr_cycle to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 1, ptr %l_curr_cycle, align 8
  %m_features.i = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 61
  %12 = ptrtoint ptr %m_features.i to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %m_features.i, align 8
  %and.i = and i64 %13, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.i.not = icmp eq i64 %and.i, 0
  br i1 %tobool.i.not, label %if.end.if.else_crit_edge, label %land.lhs.true

if.end.if.else_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

land.lhs.true:                                    ; preds = %if.end
  %sb_logsunit = getelementptr inbounds %struct.xfs_sb, ptr %mp, i32 0, i32 43
  %14 = ptrtoint ptr %sb_logsunit to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %sb_logsunit, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %15)
  %cmp = icmp ugt i32 %15, 1
  br i1 %cmp, label %land.lhs.true.if.end22_crit_edge, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

land.lhs.true.if.end22_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end22

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %if.end.if.else_crit_edge
  br label %if.end22

if.end22:                                         ; preds = %if.else, %land.lhs.true.if.end22_crit_edge
  %.sink = phi i32 [ 512, %if.else ], [ %15, %land.lhs.true.if.end22_crit_edge ]
  %l_iclog_roundoff21 = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 36
  %16 = ptrtoint ptr %l_iclog_roundoff21 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %.sink, ptr %l_iclog_roundoff21, align 8
  %l_reserve_head = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 31
  tail call fastcc void @xlog_grant_head_init(ptr noundef %l_reserve_head)
  %l_write_head = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 32
  tail call fastcc void @xlog_grant_head_init(ptr noundef %l_write_head)
  %17 = ptrtoint ptr %m_features.i to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %m_features.i, align 8
  %and.i256 = and i64 %18, 64
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i256)
  %tobool.i257.not = icmp eq i64 %and.i256, 0
  br i1 %tobool.i257.not, label %if.end22.if.end46_crit_edge, label %if.then24

if.end22.if.end46_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end46

if.then24:                                        ; preds = %if.end22
  %sb_logsectlog = getelementptr inbounds %struct.xfs_sb, ptr %mp, i32 0, i32 41
  %19 = ptrtoint ptr %sb_logsectlog to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %sb_logsectlog, align 1
  %conv = zext i8 %20 to i32
  call void @__sanitizer_cov_trace_const_cmp1(i8 9, i8 %20)
  %cmp26 = icmp ult i8 %20, 9
  br i1 %cmp26, label %if.then28, label %if.end29

if.then28:                                        ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.109, i32 noundef %conv, i32 noundef 9) #16
  br label %out_free_log

if.end29:                                         ; preds = %if.then24
  %sub = add nsw i32 %conv, -9
  %m_sectbb_log = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 30
  %21 = ptrtoint ptr %m_sectbb_log to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load i8, ptr %m_sectbb_log, align 1
  %conv30 = zext i8 %22 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %sub, i32 %conv30)
  %cmp31 = icmp ugt i32 %sub, %conv30
  br i1 %cmp31, label %if.then33, label %if.end36

if.then33:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.110, i32 noundef %sub, i32 noundef %conv30) #16
  br label %out_free_log

if.end36:                                         ; preds = %if.end29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %tobool37.not = icmp eq i32 %sub, 0
  br i1 %tobool37.not, label %if.end36.if.end46_crit_edge, label %land.lhs.true38

if.end36.if.end46_crit_edge:                      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end46

land.lhs.true38:                                  ; preds = %if.end36
  %23 = ptrtoint ptr %l_logBBstart to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %l_logBBstart, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 1, i64 %24)
  %cmp40 = icmp slt i64 %24, 1
  %and.i259 = and i64 %18, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i259)
  %tobool.i260 = icmp ne i64 %and.i259, 0
  %or.cond = select i1 %cmp40, i1 true, i1 %tobool.i260
  br i1 %or.cond, label %land.lhs.true38.if.end46_crit_edge, label %if.then44

land.lhs.true38.if.end46_crit_edge:               ; preds = %land.lhs.true38
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end46

if.then44:                                        ; preds = %land.lhs.true38
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.111, i32 noundef %sub) #16
  br label %out_free_log

if.end46:                                         ; preds = %land.lhs.true38.if.end46_crit_edge, %if.end36.if.end46_crit_edge, %if.end22.if.end46_crit_edge
  %log2_size.0 = phi i32 [ %sub, %land.lhs.true38.if.end46_crit_edge ], [ 0, %if.end36.if.end46_crit_edge ], [ 0, %if.end22.if.end46_crit_edge ]
  %shl47 = shl nuw i32 1, %log2_size.0
  %l_sectBBsize = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 11
  %25 = ptrtoint ptr %l_sectBBsize to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %shl47, ptr %l_sectBBsize, align 4
  %l_incompat_users = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 37
  tail call void @__init_rwsem(ptr noundef %l_incompat_users, ptr noundef nonnull @.str.113, ptr noundef nonnull @xlog_alloc_log.__key.112) #16
  tail call fastcc void @xlog_get_iclog_buffer_size(ptr noundef %mp, ptr noundef nonnull %call.i)
  %l_icloglock = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 21
  tail call void @__raw_spin_lock_init(ptr noundef %l_icloglock, ptr noundef nonnull @.str.115, ptr noundef nonnull @xlog_alloc_log.__key.114, i16 noundef signext 3) #16
  %l_flush_wait = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 18
  tail call void @__init_waitqueue_head(ptr noundef %l_flush_wait, ptr noundef nonnull @.str.117, ptr noundef nonnull @xlog_alloc_log.__key.116) #16
  %l_iclog = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 20
  %l_iclog_size = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 12
  %26 = ptrtoint ptr %l_iclog_size to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %l_iclog_size, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 4095, i32 %27)
  %cmp58 = icmp sgt i32 %27, 4095
  br i1 %cmp58, label %if.end46.cond.end_crit_edge, label %cond.false, !prof !432

if.end46.cond.end_crit_edge:                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.false:                                       ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.118, ptr noundef nonnull @.str.1, i32 noundef 1584) #16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end46.cond.end_crit_edge
  %l_iclog_bufs = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 13
  %28 = ptrtoint ptr %l_iclog_bufs to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %l_iclog_bufs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %cmp62273 = icmp sgt i32 %29, 0
  br i1 %cmp62273, label %for.body.lr.ph, label %cond.end.for.end_crit_edge

cond.end.for.end_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body.lr.ph:                                   ; preds = %cond.end
  %sb_uuid = getelementptr inbounds %struct.xfs_sb, ptr %mp, i32 0, i32 5
  %l_iclog_hsize = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 9
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.0276 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %prev_iclog.0275 = phi ptr [ null, %for.body.lr.ph ], [ %call.i261, %for.inc.for.body_crit_edge ]
  %iclogp.0274 = phi ptr [ %l_iclog, %for.body.lr.ph ], [ %ic_next, %for.inc.for.body_crit_edge ]
  %30 = ptrtoint ptr %l_iclog_size to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %l_iclog_size, align 16
  %add = add i32 %31, 4095
  %div253 = lshr i32 %add, 12
  %mul = mul nuw nsw i32 %div253, 12
  %add65 = add nuw nsw i32 %mul, 512
  %call.i261 = tail call ptr @kmem_alloc(i32 noundef %add65, i32 noundef 24) #16
  %tobool67.not = icmp eq ptr %call.i261, null
  br i1 %tobool67.not, label %for.body.out_free_iclog_crit_edge, label %if.end69

for.body.out_free_iclog_crit_edge:                ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_free_iclog

if.end69:                                         ; preds = %for.body
  %32 = ptrtoint ptr %iclogp.0274 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %call.i261, ptr %iclogp.0274, align 4
  %ic_prev = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 3
  %33 = ptrtoint ptr %ic_prev to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %prev_iclog.0275, ptr %ic_prev, align 4
  %34 = ptrtoint ptr %l_iclog_size to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %l_iclog_size, align 16
  %call.i.i262 = tail call noalias ptr @kvmalloc_node(i32 noundef %35, i32 noundef 19904, i32 noundef -1) #19
  %ic_data = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 13
  %36 = ptrtoint ptr %ic_data to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %call.i.i262, ptr %ic_data, align 4
  %tobool73.not = icmp eq ptr %call.i.i262, null
  br i1 %tobool73.not, label %if.end69.out_free_iclog_crit_edge, label %for.inc

if.end69.out_free_iclog_crit_edge:                ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_free_iclog

for.inc:                                          ; preds = %if.end69
  %arrayidx = getelementptr %struct.xlog, ptr %call.i, i32 0, i32 34, i32 %i.0276
  %37 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %call.i.i262, ptr %arrayidx, align 4
  %38 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %ic_data, align 4
  %40 = call ptr @memset(ptr %39, i32 0, i32 328)
  %41 = ptrtoint ptr %39 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 -17974594, ptr %39, align 8
  %42 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %call.i, align 128
  %m_features.i263 = getelementptr inbounds %struct.xfs_mount, ptr %43, i32 0, i32 61
  %44 = ptrtoint ptr %m_features.i263 to i32
  call void @__asan_load8_noabort(i32 %44)
  %45 = load i64, ptr %m_features.i263, align 8
  %and.i264 = and i64 %45, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i264)
  %tobool.i265.not = icmp eq i64 %and.i264, 0
  %cond = select i1 %tobool.i265.not, i32 1, i32 2
  %h_version = getelementptr inbounds %struct.xlog_rec_header, ptr %39, i32 0, i32 2
  %46 = ptrtoint ptr %h_version to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %cond, ptr %h_version, align 8
  %47 = ptrtoint ptr %l_iclog_size to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %l_iclog_size, align 16
  %h_size = getelementptr inbounds %struct.xlog_rec_header, ptr %39, i32 0, i32 12
  %49 = ptrtoint ptr %h_size to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %48, ptr %h_size, align 8
  %h_fmt = getelementptr inbounds %struct.xlog_rec_header, ptr %39, i32 0, i32 10
  %50 = ptrtoint ptr %h_fmt to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 2, ptr %h_fmt, align 4
  %h_fs_uuid = getelementptr inbounds %struct.xlog_rec_header, ptr %39, i32 0, i32 11
  %51 = call ptr @memcpy(ptr %h_fs_uuid, ptr %sb_uuid, i32 16)
  %52 = load i32, ptr %l_iclog_size, align 16
  %53 = ptrtoint ptr %l_iclog_hsize to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %l_iclog_hsize, align 4
  %sub84 = sub i32 %52, %54
  %ic_size = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 5
  %55 = ptrtoint ptr %ic_size to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %sub84, ptr %ic_size, align 4
  %ic_state = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 7
  %56 = ptrtoint ptr %ic_state to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 0, ptr %ic_state, align 4
  %ic_log = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 4
  %57 = ptrtoint ptr %ic_log to i32
  call void @__asan_store4_noabort(i32 %57)
  store ptr %call.i, ptr %ic_log, align 16
  %ic_refcnt = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 12
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %ic_refcnt, i32 noundef 4) #16
  %58 = ptrtoint ptr %ic_refcnt to i32
  call void @__asan_store4_noabort(i32 %58)
  store volatile i32 0, ptr %ic_refcnt, align 4
  %ic_callbacks = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 10
  %59 = ptrtoint ptr %ic_callbacks to i32
  call void @__asan_store4_noabort(i32 %59)
  store volatile ptr %ic_callbacks, ptr %ic_callbacks, align 4
  %prev.i266 = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 10, i32 1
  %60 = ptrtoint ptr %prev.i266 to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %ic_callbacks, ptr %prev.i266, align 4
  %61 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %ic_data, align 4
  %63 = ptrtoint ptr %l_iclog_hsize to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %l_iclog_hsize, align 4
  %add.ptr = getelementptr i8, ptr %62, i32 %64
  %ic_datap = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 9
  %65 = ptrtoint ptr %ic_datap to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr %add.ptr, ptr %ic_datap, align 4
  tail call void @__init_waitqueue_head(ptr noundef nonnull %call.i261, ptr noundef nonnull @.str.120, ptr noundef nonnull @xlog_alloc_log.__key.119) #16
  %ic_write_wait = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 1
  tail call void @__init_waitqueue_head(ptr noundef %ic_write_wait, ptr noundef nonnull @.str.122, ptr noundef nonnull @xlog_alloc_log.__key.121) #16
  %ic_end_io_work = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 16
  tail call void @__init_work(ptr noundef %ic_end_io_work, i32 noundef 0) #16
  %66 = ptrtoint ptr %ic_end_io_work to i32
  call void @__asan_store4_noabort(i32 %66)
  store i32 -64, ptr %ic_end_io_work, align 4
  %lockdep_map99 = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 16, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map99, ptr noundef nonnull @.str.124, ptr noundef nonnull @xlog_alloc_log.__key.123, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %entry101 = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 16, i32 1
  %67 = ptrtoint ptr %entry101 to i32
  call void @__asan_store4_noabort(i32 %67)
  store volatile ptr %entry101, ptr %entry101, align 4
  %prev.i267 = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 16, i32 1, i32 1
  %68 = ptrtoint ptr %prev.i267 to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %entry101, ptr %prev.i267, align 4
  %func103 = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 16, i32 2
  %69 = ptrtoint ptr %func103 to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr @xlog_ioend_work, ptr %func103, align 4
  %ic_sema = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 15
  %wait_list1.i = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 15, i32 2
  %70 = ptrtoint ptr %ic_sema to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 0, ptr %ic_sema, align 4
  %.compoundliteral.sroa.2.0..sroa_idx.i = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 15, i32 0, i32 1
  %71 = ptrtoint ptr %.compoundliteral.sroa.2.0..sroa_idx.i to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 -559067475, ptr %.compoundliteral.sroa.2.0..sroa_idx.i, align 4
  %.compoundliteral.sroa.3.0..sroa_idx.i = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 15, i32 0, i32 2
  %72 = ptrtoint ptr %.compoundliteral.sroa.3.0..sroa_idx.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 -1, ptr %.compoundliteral.sroa.3.0..sroa_idx.i, align 4
  %.compoundliteral.sroa.4.0..sroa_idx.i = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 15, i32 0, i32 3
  %73 = ptrtoint ptr %.compoundliteral.sroa.4.0..sroa_idx.i to i32
  call void @__asan_store4_noabort(i32 %73)
  store ptr inttoptr (i32 -1 to ptr), ptr %.compoundliteral.sroa.4.0..sroa_idx.i, align 4
  %.compoundliteral.sroa.5.0..sroa_idx.i = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 15, i32 0, i32 4
  %74 = call ptr @memset(ptr %.compoundliteral.sroa.5.0..sroa_idx.i, i32 0, i32 12)
  %.compoundliteral.sroa.6.0..sroa_idx.i = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 15, i32 0, i32 4, i32 2
  %75 = ptrtoint ptr %.compoundliteral.sroa.6.0..sroa_idx.i to i32
  call void @__asan_store4_noabort(i32 %75)
  store ptr @.str.134, ptr %.compoundliteral.sroa.6.0..sroa_idx.i, align 4
  %.compoundliteral.sroa.7.0..sroa_idx.i = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 15, i32 0, i32 4, i32 3
  %76 = ptrtoint ptr %.compoundliteral.sroa.7.0..sroa_idx.i to i32
  call void @__asan_store1_noabort(i32 %76)
  store i8 0, ptr %.compoundliteral.sroa.7.0..sroa_idx.i, align 4
  %.compoundliteral.sroa.75.0..sroa_idx.i = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 15, i32 0, i32 4, i32 4
  %77 = ptrtoint ptr %.compoundliteral.sroa.75.0..sroa_idx.i to i32
  call void @__asan_store1_noabort(i32 %77)
  store i8 2, ptr %.compoundliteral.sroa.75.0..sroa_idx.i, align 1
  %.compoundliteral.sroa.8.0..sroa_idx.i = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 15, i32 0, i32 4, i32 5
  %78 = call ptr @memset(ptr %.compoundliteral.sroa.8.0..sroa_idx.i, i32 0, i32 10)
  %.compoundliteral.sroa.86.0..sroa_idx.i = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 15, i32 1
  %79 = ptrtoint ptr %.compoundliteral.sroa.86.0..sroa_idx.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 1, ptr %.compoundliteral.sroa.86.0..sroa_idx.i, align 4
  %80 = ptrtoint ptr %wait_list1.i to i32
  call void @__asan_store4_noabort(i32 %80)
  store ptr %wait_list1.i, ptr %wait_list1.i, align 4
  %.compoundliteral.sroa.10.0..sroa_idx.i = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 15, i32 2, i32 1
  %81 = ptrtoint ptr %.compoundliteral.sroa.10.0..sroa_idx.i to i32
  call void @__asan_store4_noabort(i32 %81)
  store ptr %wait_list1.i, ptr %.compoundliteral.sroa.10.0..sroa_idx.i, align 4
  tail call void @lockdep_init_map_type(ptr noundef %.compoundliteral.sroa.5.0..sroa_idx.i, ptr noundef nonnull @.str.135, ptr noundef nonnull @sema_init.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #16
  %ic_next = getelementptr inbounds %struct.xlog_in_core, ptr %call.i261, i32 0, i32 2
  %inc = add nuw nsw i32 %i.0276, 1
  %82 = ptrtoint ptr %l_iclog_bufs to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %l_iclog_bufs, align 4
  %cmp62 = icmp slt i32 %inc, %83
  br i1 %cmp62, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %cond.end.for.end_crit_edge
  %iclogp.0.lcssa = phi ptr [ %l_iclog, %cond.end.for.end_crit_edge ], [ %ic_next, %for.inc.for.end_crit_edge ]
  %prev_iclog.0.lcssa = phi ptr [ null, %cond.end.for.end_crit_edge ], [ %call.i261, %for.inc.for.end_crit_edge ]
  %84 = ptrtoint ptr %l_iclog to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %l_iclog, align 8
  %86 = ptrtoint ptr %iclogp.0.lcssa to i32
  call void @__asan_store4_noabort(i32 %86)
  store ptr %85, ptr %iclogp.0.lcssa, align 4
  %87 = load ptr, ptr %l_iclog, align 8
  %ic_prev108 = getelementptr inbounds %struct.xlog_in_core, ptr %87, i32 0, i32 3
  %88 = ptrtoint ptr %ic_prev108 to i32
  call void @__asan_store4_noabort(i32 %88)
  store ptr %prev_iclog.0.lcssa, ptr %ic_prev108, align 4
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %89 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %m_super, align 8
  %s_id = getelementptr inbounds %struct.super_block, ptr %90, i32 0, i32 39
  %call109 = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.125, i32 noundef 92, i32 noundef 0, ptr noundef %s_id) #16
  %l_ioend_workqueue = getelementptr inbounds %struct.xlog, ptr %call.i, i32 0, i32 4
  %91 = ptrtoint ptr %l_ioend_workqueue to i32
  call void @__asan_store4_noabort(i32 %91)
  store ptr %call109, ptr %l_ioend_workqueue, align 16
  %tobool111.not = icmp eq ptr %call109, null
  br i1 %tobool111.not, label %for.end.out_free_iclog_crit_edge, label %if.end113

for.end.out_free_iclog_crit_edge:                 ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_free_iclog

if.end113:                                        ; preds = %for.end
  %call114 = tail call i32 @xlog_cil_init(ptr noundef nonnull %call.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call114)
  %tobool115.not = icmp eq i32 %call114, 0
  br i1 %tobool115.not, label %if.end113.cleanup133_crit_edge, label %out_destroy_workqueue

if.end113.cleanup133_crit_edge:                   ; preds = %if.end113
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup133

out_destroy_workqueue:                            ; preds = %if.end113
  call void @__sanitizer_cov_trace_pc() #18
  %92 = ptrtoint ptr %l_ioend_workqueue to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %l_ioend_workqueue, align 16
  tail call void @destroy_workqueue(ptr noundef %93) #16
  br label %out_free_iclog

out_free_iclog:                                   ; preds = %out_destroy_workqueue, %for.end.out_free_iclog_crit_edge, %if.end69.out_free_iclog_crit_edge, %for.body.out_free_iclog_crit_edge
  %error.0 = phi i32 [ %call114, %out_destroy_workqueue ], [ -117, %for.end.out_free_iclog_crit_edge ], [ -117, %for.body.out_free_iclog_crit_edge ], [ -117, %if.end69.out_free_iclog_crit_edge ]
  %94 = ptrtoint ptr %l_iclog to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load ptr, ptr %l_iclog, align 8
  br label %for.cond120

for.cond120:                                      ; preds = %for.body122.for.cond120_crit_edge, %out_free_iclog
  %iclog.0 = phi ptr [ %95, %out_free_iclog ], [ %97, %for.body122.for.cond120_crit_edge ]
  %tobool121.not = icmp eq ptr %iclog.0, null
  br i1 %tobool121.not, label %for.cond120.out_free_log_crit_edge, label %for.body122

for.cond120.out_free_log_crit_edge:               ; preds = %for.cond120
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_free_log

for.body122:                                      ; preds = %for.cond120
  %ic_next123 = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 2
  %96 = ptrtoint ptr %ic_next123 to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load ptr, ptr %ic_next123, align 8
  %ic_data124 = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 13
  %98 = ptrtoint ptr %ic_data124 to i32
  call void @__asan_load4_noabort(i32 %98)
  %99 = load ptr, ptr %ic_data124, align 4
  tail call void @kvfree(ptr noundef %99) #16
  tail call void @kvfree(ptr noundef nonnull %iclog.0) #16
  %100 = ptrtoint ptr %l_iclog to i32
  call void @__asan_load4_noabort(i32 %100)
  %101 = load ptr, ptr %l_iclog, align 8
  %cmp126 = icmp eq ptr %97, %101
  br i1 %cmp126, label %for.body122.out_free_log_crit_edge, label %for.body122.for.cond120_crit_edge

for.body122.for.cond120_crit_edge:                ; preds = %for.body122
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond120

for.body122.out_free_log_crit_edge:               ; preds = %for.body122
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_free_log

out_free_log:                                     ; preds = %for.body122.out_free_log_crit_edge, %for.cond120.out_free_log_crit_edge, %if.then44, %if.then33, %if.then28
  %error.1 = phi i32 [ -117, %if.then28 ], [ -117, %if.then33 ], [ -117, %if.then44 ], [ %error.0, %for.body122.out_free_log_crit_edge ], [ %error.0, %for.cond120.out_free_log_crit_edge ]
  tail call void @kvfree(ptr noundef %call.i) #16
  br label %out

out:                                              ; preds = %out_free_log, %if.then
  %error.2 = phi i32 [ %error.1, %out_free_log ], [ -12, %if.then ]
  %102 = inttoptr i32 %error.2 to ptr
  br label %cleanup133

cleanup133:                                       ; preds = %out, %if.end113.cleanup133_crit_edge
  %retval.0 = phi ptr [ %102, %out ], [ %call.i, %if.end113.cleanup133_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xfs_log_calc_minimum_size(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @xfs_warn(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @xfs_crit(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xfs_trans_ail_init(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xlog_recover(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @xlog_recover_cancel(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @xlog_cil_init_post_recovery(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @xfs_trans_ail_destroy(ptr noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @xlog_dealloc_log(ptr noundef %log) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @xlog_cil_destroy(ptr noundef %log) #16
  %l_iclog = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 20
  %l_iclog_bufs = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 13
  %0 = ptrtoint ptr %l_iclog_bufs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %l_iclog_bufs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp26 = icmp sgt i32 %1, 0
  br i1 %cmp26, label %entry.for.body_crit_edge, label %entry.for.end10_crit_edge

entry.for.end10_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end10

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %i.028 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %iclog.0.in27 = phi ptr [ %ic_next, %for.body.for.body_crit_edge ], [ %l_iclog, %entry.for.body_crit_edge ]
  %2 = ptrtoint ptr %iclog.0.in27 to i32
  call void @__asan_load4_noabort(i32 %2)
  %iclog.0 = load ptr, ptr %iclog.0.in27, align 8
  %ic_sema = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 15
  tail call void @down(ptr noundef %ic_sema) #16
  tail call void @up(ptr noundef %ic_sema) #16
  %ic_next = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 2
  %inc = add nuw nsw i32 %i.028, 1
  %3 = ptrtoint ptr %l_iclog_bufs to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %l_iclog_bufs, align 4
  %cmp = icmp slt i32 %inc, %4
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.body
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp529 = icmp sgt i32 %4, 0
  br i1 %cmp529, label %for.body6.preheader, label %for.end.for.end10_crit_edge

for.end.for.end10_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end10

for.body6.preheader:                              ; preds = %for.end
  %5 = ptrtoint ptr %l_iclog to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %l_iclog, align 8
  br label %for.body6

for.body6:                                        ; preds = %for.body6.for.body6_crit_edge, %for.body6.preheader
  %i.131 = phi i32 [ %inc9, %for.body6.for.body6_crit_edge ], [ 0, %for.body6.preheader ]
  %iclog.130 = phi ptr [ %8, %for.body6.for.body6_crit_edge ], [ %6, %for.body6.preheader ]
  %ic_next7 = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.130, i32 0, i32 2
  %7 = ptrtoint ptr %ic_next7 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ic_next7, align 8
  %ic_data = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.130, i32 0, i32 13
  %9 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ic_data, align 4
  tail call void @kvfree(ptr noundef %10) #16
  tail call void @kvfree(ptr noundef %iclog.130) #16
  %inc9 = add nuw nsw i32 %i.131, 1
  %11 = ptrtoint ptr %l_iclog_bufs to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %l_iclog_bufs, align 4
  %cmp5 = icmp slt i32 %inc9, %12
  br i1 %cmp5, label %for.body6.for.body6_crit_edge, label %for.body6.for.end10_crit_edge

for.body6.for.end10_crit_edge:                    ; preds = %for.body6
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end10

for.body6.for.body6_crit_edge:                    ; preds = %for.body6
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body6

for.end10:                                        ; preds = %for.body6.for.end10_crit_edge, %for.end.for.end10_crit_edge, %entry.for.end10_crit_edge
  %13 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %log, align 128
  %m_log = getelementptr inbounds %struct.xfs_mount, ptr %14, i32 0, i32 8
  %15 = ptrtoint ptr %m_log to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr null, ptr %m_log, align 4
  %l_ioend_workqueue = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 4
  %16 = ptrtoint ptr %l_ioend_workqueue to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %l_ioend_workqueue, align 16
  tail call void @destroy_workqueue(ptr noundef %17) #16
  tail call void @kvfree(ptr noundef %log) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @xfs_log_mount_finish(ptr noundef %mp) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %m_log = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 8
  %0 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %m_log, align 4
  %m_features.i = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 61
  %2 = ptrtoint ptr %m_features.i to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %m_features.i, align 8
  %and.i = and i64 %3, 4611686018427387904
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.i.not = icmp eq i64 %and.i, 0
  %m_opstate = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 66
  br i1 %tobool.i.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %4 = ptrtoint ptr %m_opstate to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %m_opstate, align 4
  %6 = and i32 %5, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.i66.not = icmp eq i32 %6, 0
  br i1 %tobool.i66.not, label %cond.false, label %if.then.cleanup_crit_edge, !prof !437

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cond.false:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.6, ptr noundef nonnull @.str.1, i32 noundef 784) #16
  br label %cleanup

if.end:                                           ; preds = %entry
  %call3 = tail call i32 @_test_and_clear_bit(i32 noundef 4, ptr noundef %m_opstate) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  %m_super = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 1
  %7 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %m_super, align 8
  %s_flags = getelementptr inbounds %struct.super_block, ptr %8, i32 0, i32 10
  %9 = ptrtoint ptr %s_flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %s_flags, align 4
  %or = or i32 %10, 1073741824
  store i32 %or, ptr %s_flags, align 4
  %l_opstate.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 6
  %11 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %l_opstate.i, align 4
  %13 = and i32 %12, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.i67.not = icmp eq i32 %13, 0
  br i1 %tobool.i67.not, label %if.end.if.then10_crit_edge, label %if.end8

if.end.if.then10_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then10

if.end8:                                          ; preds = %if.end
  %call7 = tail call i32 @xlog_recover_finish(ptr noundef %1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool9.not = icmp eq i32 %call7, 0
  br i1 %tobool9.not, label %if.end8.if.then10_crit_edge, label %if.end8.if.end11_crit_edge

if.end8.if.end11_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end11

if.end8.if.then10_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then10

if.then10:                                        ; preds = %if.end8.if.then10_crit_edge, %if.end.if.then10_crit_edge
  %m_sync_workqueue.i = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 23
  %14 = ptrtoint ptr %m_sync_workqueue.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %m_sync_workqueue.i, align 4
  %16 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %m_log, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.xfs_param, ptr @xfs_params, i32 0, i32 4, i32 1) to i32))
  %18 = load i32, ptr getelementptr inbounds (%struct.xfs_param, ptr @xfs_params, i32 0, i32 4, i32 1), align 4
  %mul.i = mul i32 %18, 10
  %call2.i.i = tail call i32 @__msecs_to_jiffies(i32 noundef %mul.i) #16
  %l_work.i = getelementptr inbounds %struct.xlog, ptr %17, i32 0, i32 5
  %call.i.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %15, ptr noundef %l_work.i, i32 noundef %call2.i.i) #16
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %if.end8.if.end11_crit_edge
  %tobool9.not76 = phi i1 [ true, %if.then10 ], [ false, %if.end8.if.end11_crit_edge ]
  %error.074 = phi i32 [ 0, %if.then10 ], [ %call7, %if.end8.if.end11_crit_edge ]
  %19 = ptrtoint ptr %m_super to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %m_super, align 8
  %s_flags13 = getelementptr inbounds %struct.super_block, ptr %20, i32 0, i32 10
  %21 = ptrtoint ptr %s_flags13 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %s_flags13, align 4
  %and = and i32 %22, -1073741825
  store i32 %and, ptr %s_flags13, align 4
  %23 = load ptr, ptr %m_super, align 8
  tail call void @evict_inodes(ptr noundef %23) #16
  %24 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %l_opstate.i, align 4
  %26 = and i32 %25, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.i69.not = icmp eq i32 %26, 0
  br i1 %tobool.i69.not, label %if.else, label %if.then16

if.then16:                                        ; preds = %if.end11
  br i1 %tobool9.not76, label %if.then18, label %if.then16.if.end20_crit_edge

if.then16.if.end20_crit_edge:                     ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

if.then18:                                        ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #18
  %call19 = tail call i32 @xfs_log_force(ptr noundef %mp, i32 noundef 1)
  %m_ail = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 2
  %27 = ptrtoint ptr %m_ail to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %m_ail, align 4
  tail call void @xfs_ail_push_all_sync(ptr noundef %28) #16
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.then16.if.end20_crit_edge
  %m_logname = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 5
  %29 = ptrtoint ptr %m_logname to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %m_logname, align 8
  %tobool21.not = icmp eq ptr %30, null
  %spec.select = select i1 %tobool21.not, ptr @.str.19, ptr %30
  tail call void (ptr, ptr, ...) @xfs_notice(ptr noundef %mp, ptr noundef nonnull @.str.18, ptr noundef nonnull %spec.select) #16
  br label %if.end26

if.else:                                          ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @xfs_info(ptr noundef %mp, ptr noundef nonnull @.str.20) #16
  br label %if.end26

if.end26:                                         ; preds = %if.else, %if.end20
  %m_ddev_targp = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 13
  %31 = ptrtoint ptr %m_ddev_targp to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %m_ddev_targp, align 8
  tail call void @xfs_buftarg_drain(ptr noundef %32) #16
  tail call void @_clear_bit(i32 noundef 1, ptr noundef %l_opstate.i) #16
  br i1 %tobool4.not, label %if.end26.if.end30_crit_edge, label %if.then28

if.end26.if.end30_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end30

if.then28:                                        ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @_set_bit(i32 noundef 4, ptr noundef %m_opstate) #16
  br label %if.end30

if.end30:                                         ; preds = %if.then28, %if.end26.if.end30_crit_edge
  br i1 %tobool9.not76, label %if.end30.cleanup_crit_edge, label %lor.rhs

if.end30.cleanup_crit_edge:                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.rhs:                                          ; preds = %if.end30
  %33 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %l_opstate.i, align 4
  %35 = and i32 %34, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %tobool.i71.not = icmp eq i32 %35, 0
  br i1 %tobool.i71.not, label %cond.false40, label %lor.rhs.cleanup_crit_edge, !prof !437

lor.rhs.cleanup_crit_edge:                        ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cond.false40:                                     ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.21, ptr noundef nonnull @.str.1, i32 noundef 848) #16
  br label %cleanup

cleanup:                                          ; preds = %cond.false40, %lor.rhs.cleanup_crit_edge, %if.end30.cleanup_crit_edge, %cond.false, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.then.cleanup_crit_edge ], [ 0, %cond.false ], [ %error.074, %if.end30.cleanup_crit_edge ], [ %error.074, %lor.rhs.cleanup_crit_edge ], [ %error.074, %cond.false40 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xlog_recover_finish(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @xfs_log_work_queue(ptr nocapture noundef readonly %mp) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %m_sync_workqueue = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 23
  %0 = ptrtoint ptr %m_sync_workqueue to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %m_sync_workqueue, align 4
  %m_log = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 8
  %2 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %m_log, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.xfs_param, ptr @xfs_params, i32 0, i32 4, i32 1) to i32))
  %4 = load i32, ptr getelementptr inbounds (%struct.xfs_param, ptr @xfs_params, i32 0, i32 4, i32 1), align 4
  %mul = mul i32 %4, 10
  %call2.i = tail call i32 @__msecs_to_jiffies(i32 noundef %mul) #16
  %l_work = getelementptr inbounds %struct.xlog, ptr %3, i32 0, i32 5
  %call.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %1, ptr noundef %l_work, i32 noundef %call2.i) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @evict_inodes(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @xfs_log_force(ptr noundef %mp, i32 noundef %flags) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %m_log = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 8
  %0 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %m_log, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @xfsstats to i32))
  %2 = load ptr, ptr @xfsstats, align 4
  %3 = ptrtoint ptr %2 to i32
  %4 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %7
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx, align 4
  %add = add i32 %9, %3
  %10 = inttoptr i32 %add to ptr
  %xs_log_force = getelementptr inbounds %struct.__xfsstats, ptr %10, i32 0, i32 36
  %11 = ptrtoint ptr %xs_log_force to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %xs_log_force, align 8
  %inc = add i32 %12, 1
  store i32 %inc, ptr %xs_log_force, align 8
  %m_stats = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 92
  %13 = ptrtoint ptr %m_stats to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %m_stats, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load i32, ptr %cpu, align 4
  %arrayidx12 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %16
  %17 = ptrtoint ptr %arrayidx12 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx12, align 4
  %add13 = add i32 %18, %15
  %19 = inttoptr i32 %add13 to ptr
  %xs_log_force14 = getelementptr inbounds %struct.__xfsstats, ptr %19, i32 0, i32 36
  %20 = ptrtoint ptr %xs_log_force14 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %xs_log_force14, align 8
  %inc15 = add i32 %21, 1
  store i32 %inc15, ptr %xs_log_force14, align 8
  %22 = tail call ptr @llvm.returnaddress(i32 0)
  %23 = ptrtoint ptr %22 to i32
  tail call fastcc void @trace_xfs_log_force(ptr noundef %mp, i64 noundef 0, i32 noundef %23)
  %l_cilp.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 2
  %24 = ptrtoint ptr %l_cilp.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %l_cilp.i, align 8
  %xc_current_sequence.i = getelementptr inbounds %struct.xfs_cil, ptr %25, i32 0, i32 14
  %26 = ptrtoint ptr %xc_current_sequence.i to i32
  call void @__asan_load8_noabort(i32 %26)
  %27 = load i64, ptr %xc_current_sequence.i, align 16
  %call.i = tail call i64 @xlog_cil_force_seq(ptr noundef %1, i64 noundef %27) #16
  %l_icloglock = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 21
  tail call void @_raw_spin_lock(ptr noundef %l_icloglock) #16
  %l_opstate.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 6
  %28 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %l_opstate.i, align 4
  %30 = and i32 %29, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool.i.not = icmp eq i32 %30, 0
  br i1 %tobool.i.not, label %if.end, label %entry.out_error_crit_edge

entry.out_error_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_error

if.end:                                           ; preds = %entry
  %l_iclog = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 20
  %31 = ptrtoint ptr %l_iclog to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %l_iclog, align 8
  tail call fastcc void @trace_xlog_iclog_force(ptr noundef %32, i32 noundef %23)
  %ic_state = getelementptr inbounds %struct.xlog_in_core, ptr %32, i32 0, i32 7
  %33 = ptrtoint ptr %ic_state to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %ic_state, align 4
  %35 = zext i32 %34 to i64
  call void @__sanitizer_cov_trace_switch(i64 %35, ptr @__sancov_gen_cov_switch_values.156)
  switch i32 %34, label %if.end.if.end42_crit_edge [
    i32 5, label %if.end.if.then25_crit_edge
    i32 0, label %land.lhs.true
  ]

if.end.if.then25_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then25

if.end.if.end42_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end42

land.lhs.true:                                    ; preds = %if.end
  %ic_refcnt = getelementptr inbounds %struct.xlog_in_core, ptr %32, i32 0, i32 12
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %ic_refcnt, i32 noundef 4) #16
  %36 = ptrtoint ptr %ic_refcnt to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %ic_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %cmp22 = icmp eq i32 %37, 0
  br i1 %cmp22, label %land.lhs.true23, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

land.lhs.true23:                                  ; preds = %land.lhs.true
  %ic_offset = getelementptr inbounds %struct.xlog_in_core, ptr %32, i32 0, i32 6
  %38 = ptrtoint ptr %ic_offset to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %ic_offset, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %cmp24 = icmp eq i32 %39, 0
  br i1 %cmp24, label %land.lhs.true23.if.then25_crit_edge, label %land.lhs.true23.if.else_crit_edge

land.lhs.true23.if.else_crit_edge:                ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

land.lhs.true23.if.then25_crit_edge:              ; preds = %land.lhs.true23
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then25

if.then25:                                        ; preds = %land.lhs.true23.if.then25_crit_edge, %if.end.if.then25_crit_edge
  %ic_prev = getelementptr inbounds %struct.xlog_in_core, ptr %32, i32 0, i32 3
  %40 = ptrtoint ptr %ic_prev to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %ic_prev, align 4
  br label %if.end42

if.else:                                          ; preds = %land.lhs.true23.if.else_crit_edge, %land.lhs.true.if.else_crit_edge
  %42 = ptrtoint ptr %ic_state to i32
  call void @__asan_load4_noabort(i32 %42)
  %.pr = load i32, ptr %ic_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %cmp27 = icmp eq i32 %.pr, 0
  br i1 %cmp27, label %if.then28, label %if.else.if.end42_crit_edge

if.else.if.end42_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end42

if.then28:                                        ; preds = %if.else
  %call.i.i75 = tail call zeroext i1 @__kasan_check_read(ptr noundef %ic_refcnt, i32 noundef 4) #16
  %43 = ptrtoint ptr %ic_refcnt to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %ic_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %cmp31 = icmp eq i32 %44, 0
  br i1 %cmp31, label %if.then32, label %if.else39

if.then32:                                        ; preds = %if.then28
  %ic_data.i = getelementptr inbounds %struct.xlog_in_core, ptr %32, i32 0, i32 13
  %45 = ptrtoint ptr %ic_data.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %ic_data.i, align 4
  %h_lsn.i = getelementptr inbounds %struct.xlog_rec_header, ptr %46, i32 0, i32 4
  %47 = ptrtoint ptr %h_lsn.i to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %h_lsn.i, align 8
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %ic_refcnt, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %ic_refcnt, i32 1, i32 3, i32 1) #16
  %49 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %ic_refcnt, ptr %ic_refcnt, i32 1, ptr elementtype(i32) %ic_refcnt) #16, !srcloc !453
  %ic_flags.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %32, i32 0, i32 8
  %50 = ptrtoint ptr %ic_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %ic_flags.i.i, align 128
  %or.i.i = or i32 %51, 3
  store i32 %or.i.i, ptr %ic_flags.i.i, align 128
  %52 = ptrtoint ptr %ic_state to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %ic_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %cmp.i.i = icmp eq i32 %53, 0
  br i1 %cmp.i.i, label %if.then.i.i, label %if.then32.xlog_force_iclog.exit.i_crit_edge

if.then32.xlog_force_iclog.exit.i_crit_edge:      ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_force_iclog.exit.i

if.then.i.i:                                      ; preds = %if.then32
  call void @__sanitizer_cov_trace_pc() #18
  %ic_log.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %32, i32 0, i32 4
  %54 = ptrtoint ptr %ic_log.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %ic_log.i.i, align 16
  tail call void @xlog_state_switch_iclogs(ptr noundef %55, ptr noundef %32, i32 noundef 0) #16
  br label %xlog_force_iclog.exit.i

xlog_force_iclog.exit.i:                          ; preds = %if.then.i.i, %if.then32.xlog_force_iclog.exit.i_crit_edge
  %ic_log1.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %32, i32 0, i32 4
  %56 = ptrtoint ptr %ic_log1.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %ic_log1.i.i, align 16
  %call.i.i76 = tail call i32 @xlog_state_release_iclog(ptr noundef %57, ptr noundef %32, i64 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i76)
  %tobool.not.i = icmp eq i32 %call.i.i76, 0
  br i1 %tobool.not.i, label %if.end.i, label %xlog_force_iclog.exit.i.out_error_crit_edge

xlog_force_iclog.exit.i.out_error_crit_edge:      ; preds = %xlog_force_iclog.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_error

if.end.i:                                         ; preds = %xlog_force_iclog.exit.i
  %58 = ptrtoint ptr %ic_data.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %ic_data.i, align 4
  %h_lsn2.i = getelementptr inbounds %struct.xlog_rec_header, ptr %59, i32 0, i32 4
  %60 = ptrtoint ptr %h_lsn2.i to i32
  call void @__asan_load8_noabort(i32 %60)
  %61 = load i64, ptr %h_lsn2.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %61, i64 %48)
  %cmp.not.i = icmp eq i64 %61, %48
  br i1 %cmp.not.i, label %if.end.i.if.end42_crit_edge, label %if.end.i.out_unlock_crit_edge

if.end.i.out_unlock_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_unlock

if.end.i.if.end42_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end42

if.else39:                                        ; preds = %if.then28
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @xlog_state_switch_iclogs(ptr noundef %1, ptr noundef %32, i32 noundef 0)
  br label %if.end42

if.end42:                                         ; preds = %if.else39, %if.end.i.if.end42_crit_edge, %if.else.if.end42_crit_edge, %if.then25, %if.end.if.end42_crit_edge
  %iclog.0 = phi ptr [ %41, %if.then25 ], [ %32, %if.else39 ], [ %32, %if.else.if.end42_crit_edge ], [ %32, %if.end.if.end42_crit_edge ], [ %32, %if.end.i.if.end42_crit_edge ]
  %ic_state43 = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 7
  %62 = ptrtoint ptr %ic_state43 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %ic_state43, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %63)
  %cmp44 = icmp eq i32 %63, 1
  br i1 %cmp44, label %if.then45, label %if.end42.if.end46_crit_edge

if.end42.if.end46_crit_edge:                      ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end46

if.then45:                                        ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #18
  %ic_flags = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 8
  %64 = ptrtoint ptr %ic_flags to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %ic_flags, align 128
  %or = or i32 %65, 3
  store i32 %or, ptr %ic_flags, align 128
  br label %if.end46

if.end46:                                         ; preds = %if.then45, %if.end42.if.end46_crit_edge
  %and = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool47.not = icmp eq i32 %and, 0
  br i1 %tobool47.not, label %if.end46.out_unlock_crit_edge, label %if.then48

if.end46.out_unlock_crit_edge:                    ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_unlock

if.then48:                                        ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #18
  %call49 = tail call i32 @xlog_wait_on_iclog(ptr noundef %iclog.0)
  br label %cleanup53

out_unlock:                                       ; preds = %if.end46.out_unlock_crit_edge, %if.end.i.out_unlock_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock) #16
  br label %cleanup53

out_error:                                        ; preds = %xlog_force_iclog.exit.i.out_error_crit_edge, %entry.out_error_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock) #16
  br label %cleanup53

cleanup53:                                        ; preds = %out_error, %out_unlock, %if.then48
  %retval.0 = phi i32 [ -5, %out_error ], [ %call49, %if.then48 ], [ 0, %out_unlock ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xfs_ail_push_all_sync(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @xfs_info(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @xfs_buftarg_drain(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @xfs_log_mount_cancel(ptr noundef %mp) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %m_log = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 8
  %0 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %m_log, align 4
  tail call void @xlog_recover_cancel(ptr noundef %1) #16
  tail call void @xfs_log_clean(ptr noundef %mp) #16
  %m_ddev_targp.i = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 13
  %2 = ptrtoint ptr %m_ddev_targp.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %m_ddev_targp.i, align 8
  tail call void @xfs_buftarg_drain(ptr noundef %3) #16
  tail call void @xfs_trans_ail_destroy(ptr noundef %mp) #16
  %4 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %m_log, align 4
  %l_kobj.i = getelementptr inbounds %struct.xlog, ptr %5, i32 0, i32 33
  tail call void @kobject_del(ptr noundef %l_kobj.i) #16
  tail call void @kobject_put(ptr noundef %l_kobj.i) #16
  %complete.i.i = getelementptr inbounds %struct.xlog, ptr %5, i32 0, i32 33, i32 1
  tail call void @wait_for_completion(ptr noundef %complete.i.i) #16
  %6 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %m_log, align 4
  tail call fastcc void @xlog_dealloc_log(ptr noundef %7) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @xfs_log_unmount(ptr noundef %mp) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @xfs_log_clean(ptr noundef %mp)
  %m_ddev_targp = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 13
  %0 = ptrtoint ptr %m_ddev_targp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %m_ddev_targp, align 8
  tail call void @xfs_buftarg_drain(ptr noundef %1) #16
  tail call void @xfs_trans_ail_destroy(ptr noundef %mp) #16
  %m_log = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 8
  %2 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %m_log, align 4
  %l_kobj = getelementptr inbounds %struct.xlog, ptr %3, i32 0, i32 33
  tail call void @kobject_del(ptr noundef %l_kobj) #16
  tail call void @kobject_put(ptr noundef %l_kobj) #16
  %complete.i = getelementptr inbounds %struct.xlog, ptr %3, i32 0, i32 33, i32 1
  tail call void @wait_for_completion(ptr noundef %complete.i) #16
  %4 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %m_log, align 4
  tail call fastcc void @xlog_dealloc_log(ptr noundef %5)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @xlog_wait_on_iclog(ptr noundef %iclog) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ic_log = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 4
  %0 = ptrtoint ptr %ic_log to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ic_log, align 16
  %2 = tail call ptr @llvm.returnaddress(i32 0)
  %3 = ptrtoint ptr %2 to i32
  tail call fastcc void @trace_xlog_iclog_wait_on(ptr noundef %iclog, i32 noundef %3)
  %l_opstate.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 6
  %4 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %l_opstate.i, align 4
  %6 = and i32 %5, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.i.not = icmp eq i32 %6, 0
  br i1 %tobool.i.not, label %land.lhs.true, label %entry.if.else_crit_edge

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

land.lhs.true:                                    ; preds = %entry
  %ic_state = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 7
  %7 = ptrtoint ptr %ic_state to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %ic_state, align 4
  %9 = zext i32 %8 to i64
  call void @__sanitizer_cov_trace_switch(i64 %9, ptr @__sancov_gen_cov_switch_values.157)
  switch i32 %8, label %do.body4 [
    i32 0, label %land.lhs.true.if.else_crit_edge
    i32 5, label %land.lhs.true.if.else_crit_edge36
  ]

land.lhs.true.if.else_crit_edge36:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

do.body4:                                         ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @xfsstats to i32))
  %10 = load ptr, ptr @xfsstats, align 4
  %11 = ptrtoint ptr %10 to i32
  %12 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 3
  %14 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %15
  %16 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %arrayidx, align 4
  %add = add i32 %17, %11
  %18 = inttoptr i32 %add to ptr
  %xs_log_force_sleep = getelementptr inbounds %struct.__xfsstats, ptr %18, i32 0, i32 37
  %19 = ptrtoint ptr %xs_log_force_sleep to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %xs_log_force_sleep, align 4
  %inc = add i32 %20, 1
  store i32 %inc, ptr %xs_log_force_sleep, align 4
  %21 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %1, align 128
  %m_stats = getelementptr inbounds %struct.xfs_mount, ptr %22, i32 0, i32 92
  %23 = ptrtoint ptr %m_stats to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %m_stats, align 4
  %25 = ptrtoint ptr %24 to i32
  %26 = load i32, ptr %cpu, align 4
  %arrayidx16 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %26
  %27 = ptrtoint ptr %arrayidx16 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx16, align 4
  %add17 = add i32 %28, %25
  %29 = inttoptr i32 %add17 to ptr
  %xs_log_force_sleep18 = getelementptr inbounds %struct.__xfsstats, ptr %29, i32 0, i32 37
  %30 = ptrtoint ptr %xs_log_force_sleep18 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %xs_log_force_sleep18, align 4
  %inc19 = add i32 %31, 1
  store i32 %inc19, ptr %xs_log_force_sleep18, align 4
  %l_icloglock = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 21
  tail call fastcc void @xlog_wait(ptr noundef %iclog, ptr noundef %l_icloglock)
  br label %if.end

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %land.lhs.true.if.else_crit_edge36, %entry.if.else_crit_edge
  %l_icloglock22 = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 21
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock22) #16
  br label %if.end

if.end:                                           ; preds = %if.else, %do.body4
  %32 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %l_opstate.i, align 4
  %34 = and i32 %33, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool.i35.not = icmp eq i32 %34, 0
  %. = select i1 %tobool.i35.not, i32 0, i32 -5
  ret i32 %.
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xlog_iclog_wait_on(ptr noundef %iclog, i32 noundef %caller_ip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_wait_on, i32 0, i32 1), ptr blockaddress(@trace_xlog_iclog_wait_on, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !454
  %call42 = tail call i32 @__traceiter_xlog_iclog_wait_on(ptr noundef null, ptr noundef %iclog, i32 noundef %caller_ip) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !455
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_wait_on, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_wait_on, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xlog_iclog_wait_on.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xlog_iclog_wait_on.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 4111, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @xlog_wait(ptr noundef %wq, ptr noundef %lock) #4 align 64 {
entry:
  %wait = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %wait) #16
  %0 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 1
  %1 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 2
  %2 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3
  %3 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3, i32 1
  %4 = ptrtoint ptr %wait to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %wait, align 4
  %5 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task, align 8
  %9 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %8, ptr %0, align 4
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @default_wake_function, ptr %1, align 4
  %11 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %2, align 4
  %12 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr null, ptr %3, align 4
  call void @add_wait_queue_exclusive(ptr noundef %wq, ptr noundef nonnull %wait) #16
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %13 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task, align 8
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %14, i32 0, i32 212
  %15 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 ptrtoint (ptr blockaddress(@xlog_wait, %__here) to i32), ptr %task_state_change, align 4
  %16 = load ptr, ptr %task, align 8
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile i32 2, ptr %16, align 128
  call void @_raw_spin_unlock(ptr noundef %lock) #16
  call void @schedule() #16
  call void @remove_wait_queue(ptr noundef %wq, ptr noundef nonnull %wait) #16
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %wait) #16
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @xfs_log_quiesce(ptr noundef %mp) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @xfs_clear_incompat_log_features(ptr noundef %mp) #16
  br i1 %call, label %if.then, label %entry.if.end3_crit_edge

entry.if.end3_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3

if.then:                                          ; preds = %entry
  %call1 = tail call i32 @xfs_sync_sb(ptr noundef %mp, i1 noundef zeroext false) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.then.if.end3_crit_edge, label %if.then2

if.then.if.end3_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end3

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.22) #16
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %if.then.if.end3_crit_edge, %entry.if.end3_crit_edge
  %m_log = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 8
  %0 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %m_log, align 4
  %l_work = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 5
  %call4 = tail call zeroext i1 @cancel_delayed_work_sync(ptr noundef %l_work) #16
  %call5 = tail call i32 @xfs_log_force(ptr noundef %mp, i32 noundef 1)
  %m_ail = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 2
  %2 = ptrtoint ptr %m_ail to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %m_ail, align 4
  tail call void @xfs_ail_push_all_sync(ptr noundef %3) #16
  %m_ddev_targp = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 13
  %4 = ptrtoint ptr %m_ddev_targp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %m_ddev_targp, align 8
  tail call void @xfs_buftarg_wait(ptr noundef %5) #16
  %m_sb_bp = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 3
  %6 = ptrtoint ptr %m_sb_bp to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %m_sb_bp, align 16
  tail call void @xfs_buf_lock(ptr noundef %7) #16
  %8 = ptrtoint ptr %m_sb_bp to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %m_sb_bp, align 16
  tail call void @xfs_buf_unlock(ptr noundef %9) #16
  %10 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %m_log, align 4
  %call.i = tail call zeroext i1 @xlog_cil_empty(ptr noundef %11) #16
  br i1 %call.i, label %land.lhs.true.i, label %if.end3.lor.rhs.i_crit_edge

if.end3.lor.rhs.i_crit_edge:                      ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #18
  br label %lor.rhs.i

land.lhs.true.i:                                  ; preds = %if.end3
  %12 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %m_log, align 4
  %call2.i = tail call fastcc i32 @xlog_iclogs_empty(ptr noundef %13) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i)
  %tobool.not.i = icmp eq i32 %call2.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.lor.rhs.i_crit_edge, label %land.lhs.true3.i

land.lhs.true.i.lor.rhs.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %lor.rhs.i

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i
  %l_ailp.i = getelementptr inbounds %struct.xlog, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %l_ailp.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %l_ailp.i, align 4
  %call5.i = tail call i64 @xfs_ail_min_lsn(ptr noundef %15) #16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %call5.i)
  %tobool6.not.i = icmp eq i64 %call5.i, 0
  br i1 %tobool6.not.i, label %land.lhs.true3.i.cond.end.i_crit_edge, label %land.lhs.true3.i.lor.rhs.i_crit_edge

land.lhs.true3.i.lor.rhs.i_crit_edge:             ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %lor.rhs.i

land.lhs.true3.i.cond.end.i_crit_edge:            ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.i

lor.rhs.i:                                        ; preds = %land.lhs.true3.i.lor.rhs.i_crit_edge, %land.lhs.true.i.lor.rhs.i_crit_edge, %if.end3.lor.rhs.i_crit_edge
  %16 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %m_log, align 4
  %l_opstate.i.i = getelementptr inbounds %struct.xlog, ptr %17, i32 0, i32 6
  %18 = ptrtoint ptr %l_opstate.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %l_opstate.i.i, align 4
  %20 = and i32 %19, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.i.not.i = icmp eq i32 %20, 0
  br i1 %tobool.i.not.i, label %cond.false.i, label %lor.rhs.i.cond.end.i_crit_edge, !prof !437

lor.rhs.i.cond.end.i_crit_edge:                   ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.i

cond.false.i:                                     ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.100, ptr noundef nonnull @.str.1, i32 noundef 1218) #16
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %lor.rhs.i.cond.end.i_crit_edge, %land.lhs.true3.i.cond.end.i_crit_edge
  %m_features.i.i.i = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 61
  %21 = ptrtoint ptr %m_features.i.i.i to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %m_features.i.i.i, align 8
  %and.i.i.i = and i64 %22, 4611686018427387904
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i64 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %if.end.i.i, label %cond.end.i.xfs_log_cover.exit_crit_edge

cond.end.i.xfs_log_cover.exit_crit_edge:          ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_cover.exit

if.end.i.i:                                       ; preds = %cond.end.i
  %23 = ptrtoint ptr %m_ddev_targp to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %m_ddev_targp, align 8
  %bt_bdev.i.i = getelementptr inbounds %struct.xfs_buftarg, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %bt_bdev.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %bt_bdev.i.i, align 4
  %bd_read_only.i.i.i = getelementptr inbounds %struct.block_device, ptr %26, i32 0, i32 4
  %27 = ptrtoint ptr %bd_read_only.i.i.i to i32
  call void @__asan_load1_noabort(i32 %27)
  %28 = load i8, ptr %bd_read_only.i.i.i, align 8, !range !429
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %28)
  %tobool.not.i.i.i = icmp eq i8 %28, 0
  br i1 %tobool.not.i.i.i, label %lor.rhs.i.i.i, label %if.end.i.i.xfs_log_cover.exit_crit_edge

if.end.i.i.xfs_log_cover.exit_crit_edge:          ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_cover.exit

lor.rhs.i.i.i:                                    ; preds = %if.end.i.i
  %bd_disk.i.i.i = getelementptr inbounds %struct.block_device, ptr %26, i32 0, i32 17
  %29 = ptrtoint ptr %bd_disk.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %bd_disk.i.i.i, align 8
  %part0.i.i.i.i = getelementptr inbounds %struct.gendisk, ptr %30, i32 0, i32 7
  %31 = ptrtoint ptr %part0.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %part0.i.i.i.i, align 4
  %bd_read_only.i.i.i.i = getelementptr inbounds %struct.block_device, ptr %32, i32 0, i32 4
  %33 = ptrtoint ptr %bd_read_only.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %bd_read_only.i.i.i.i, align 8, !range !429
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %34)
  %tobool.not.i.i.i.i = icmp eq i8 %34, 0
  br i1 %tobool.not.i.i.i.i, label %bdev_read_only.exit.i.i, label %lor.rhs.i.i.i.xfs_log_cover.exit_crit_edge

lor.rhs.i.i.i.xfs_log_cover.exit_crit_edge:       ; preds = %lor.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_cover.exit

bdev_read_only.exit.i.i:                          ; preds = %lor.rhs.i.i.i
  %state.i.i.i.i = getelementptr inbounds %struct.gendisk, ptr %30, i32 0, i32 12
  %35 = ptrtoint ptr %state.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %state.i.i.i.i, align 4
  %37 = and i32 %36, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool.not.i.i = icmp eq i32 %37, 0
  br i1 %tobool.not.i.i, label %if.end3.i.i, label %bdev_read_only.exit.i.i.xfs_log_cover.exit_crit_edge

bdev_read_only.exit.i.i.xfs_log_cover.exit_crit_edge: ; preds = %bdev_read_only.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_cover.exit

if.end3.i.i:                                      ; preds = %bdev_read_only.exit.i.i
  %38 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %m_log, align 4
  %l_targ.i.i = getelementptr inbounds %struct.xlog, ptr %39, i32 0, i32 3
  %40 = ptrtoint ptr %l_targ.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %l_targ.i.i, align 4
  %bt_bdev4.i.i = getelementptr inbounds %struct.xfs_buftarg, ptr %41, i32 0, i32 1
  %42 = ptrtoint ptr %bt_bdev4.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %bt_bdev4.i.i, align 4
  %bd_read_only.i16.i.i = getelementptr inbounds %struct.block_device, ptr %43, i32 0, i32 4
  %44 = ptrtoint ptr %bd_read_only.i16.i.i to i32
  call void @__asan_load1_noabort(i32 %44)
  %45 = load i8, ptr %bd_read_only.i16.i.i, align 8, !range !429
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %45)
  %tobool.not.i17.i.i = icmp eq i8 %45, 0
  br i1 %tobool.not.i17.i.i, label %lor.rhs.i22.i.i, label %if.end3.i.i.xfs_log_cover.exit_crit_edge

if.end3.i.i.xfs_log_cover.exit_crit_edge:         ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_cover.exit

lor.rhs.i22.i.i:                                  ; preds = %if.end3.i.i
  %bd_disk.i18.i.i = getelementptr inbounds %struct.block_device, ptr %43, i32 0, i32 17
  %46 = ptrtoint ptr %bd_disk.i18.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %bd_disk.i18.i.i, align 8
  %part0.i.i19.i.i = getelementptr inbounds %struct.gendisk, ptr %47, i32 0, i32 7
  %48 = ptrtoint ptr %part0.i.i19.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %part0.i.i19.i.i, align 4
  %bd_read_only.i.i20.i.i = getelementptr inbounds %struct.block_device, ptr %49, i32 0, i32 4
  %50 = ptrtoint ptr %bd_read_only.i.i20.i.i to i32
  call void @__asan_load1_noabort(i32 %50)
  %51 = load i8, ptr %bd_read_only.i.i20.i.i, align 8, !range !429
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %51)
  %tobool.not.i.i21.i.i = icmp eq i8 %51, 0
  br i1 %tobool.not.i.i21.i.i, label %bdev_read_only.exit26.i.i, label %lor.rhs.i22.i.i.xfs_log_cover.exit_crit_edge

lor.rhs.i22.i.i.xfs_log_cover.exit_crit_edge:     ; preds = %lor.rhs.i22.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_cover.exit

bdev_read_only.exit26.i.i:                        ; preds = %lor.rhs.i22.i.i
  %state.i.i23.i.i = getelementptr inbounds %struct.gendisk, ptr %47, i32 0, i32 12
  %52 = ptrtoint ptr %state.i.i23.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load volatile i32, ptr %state.i.i23.i.i, align 4
  %54 = and i32 %53, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool6.not.i.i = icmp eq i32 %54, 0
  br i1 %tobool6.not.i.i, label %xfs_log_writable.exit.i, label %bdev_read_only.exit26.i.i.xfs_log_cover.exit_crit_edge

bdev_read_only.exit26.i.i.xfs_log_cover.exit_crit_edge: ; preds = %bdev_read_only.exit26.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_cover.exit

xfs_log_writable.exit.i:                          ; preds = %bdev_read_only.exit26.i.i
  %l_opstate.i.i.i = getelementptr inbounds %struct.xlog, ptr %39, i32 0, i32 6
  %55 = ptrtoint ptr %l_opstate.i.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %l_opstate.i.i.i, align 4
  %57 = and i32 %56, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %tobool.i27.not.i.i = icmp eq i32 %57, 0
  br i1 %tobool.i27.not.i.i, label %if.end.i, label %xfs_log_writable.exit.i.xfs_log_cover.exit_crit_edge

xfs_log_writable.exit.i.xfs_log_cover.exit_crit_edge: ; preds = %xfs_log_writable.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_cover.exit

if.end.i:                                         ; preds = %xfs_log_writable.exit.i
  %call.i.i = tail call zeroext i1 @xlog_cil_empty(ptr noundef %39) #16
  br i1 %call.i.i, label %if.end.i35.i, label %if.end.i.land.lhs.true14.i_crit_edge

if.end.i.land.lhs.true14.i_crit_edge:             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.lhs.true14.i

if.end.i35.i:                                     ; preds = %if.end.i
  %l_icloglock.i.i = getelementptr inbounds %struct.xlog, ptr %39, i32 0, i32 21
  tail call void @_raw_spin_lock(ptr noundef %l_icloglock.i.i) #16
  %l_covered_state.i.i = getelementptr inbounds %struct.xlog, ptr %39, i32 0, i32 19
  %58 = ptrtoint ptr %l_covered_state.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %l_covered_state.i.i, align 4
  %60 = zext i32 %59 to i64
  call void @__sanitizer_cov_trace_switch(i64 %60, ptr @__sancov_gen_cov_switch_values.158)
  switch i32 %59, label %if.end.i35.i.xfs_log_need_covered.exit.thread64.i_crit_edge [
    i32 2, label %if.end.i35.i.xfs_log_need_covered.exit.i_crit_edge
    i32 4, label %if.end.i35.i.xfs_log_need_covered.exit.i_crit_edge17
    i32 0, label %if.end.i35.i.xfs_log_need_covered.exit.i_crit_edge18
    i32 1, label %if.end.i35.i.sw.bb1.i.i_crit_edge
    i32 3, label %if.end.i35.i.sw.bb1.i.i_crit_edge19
  ]

if.end.i35.i.sw.bb1.i.i_crit_edge19:              ; preds = %if.end.i35.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i.i

if.end.i35.i.sw.bb1.i.i_crit_edge:                ; preds = %if.end.i35.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i.i

if.end.i35.i.xfs_log_need_covered.exit.i_crit_edge18: ; preds = %if.end.i35.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_need_covered.exit.i

if.end.i35.i.xfs_log_need_covered.exit.i_crit_edge17: ; preds = %if.end.i35.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_need_covered.exit.i

if.end.i35.i.xfs_log_need_covered.exit.i_crit_edge: ; preds = %if.end.i35.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_need_covered.exit.i

if.end.i35.i.xfs_log_need_covered.exit.thread64.i_crit_edge: ; preds = %if.end.i35.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_need_covered.exit.thread64.i

sw.bb1.i.i:                                       ; preds = %if.end.i35.i.sw.bb1.i.i_crit_edge, %if.end.i35.i.sw.bb1.i.i_crit_edge19
  %l_ailp.i.i = getelementptr inbounds %struct.xlog, ptr %39, i32 0, i32 1
  %61 = ptrtoint ptr %l_ailp.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %l_ailp.i.i, align 4
  %call2.i.i = tail call i64 @xfs_ail_min_lsn(ptr noundef %62) #16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %call2.i.i)
  %tobool.not.i36.i = icmp eq i64 %call2.i.i, 0
  br i1 %tobool.not.i36.i, label %if.end4.i.i, label %sw.bb1.i.i.xfs_log_need_covered.exit.i_crit_edge

sw.bb1.i.i.xfs_log_need_covered.exit.i_crit_edge: ; preds = %sw.bb1.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_need_covered.exit.i

if.end4.i.i:                                      ; preds = %sw.bb1.i.i
  %call5.i.i = tail call fastcc i32 @xlog_iclogs_empty(ptr noundef %39) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i.i)
  %tobool6.not.i37.i = icmp eq i32 %call5.i.i, 0
  br i1 %tobool6.not.i37.i, label %if.end4.i.i.xfs_log_need_covered.exit.i_crit_edge, label %if.end8.i38.i

if.end4.i.i.xfs_log_need_covered.exit.i_crit_edge: ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_need_covered.exit.i

if.end8.i38.i:                                    ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %63 = ptrtoint ptr %l_covered_state.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %l_covered_state.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %64)
  %cmp.i.i = icmp eq i32 %64, 1
  %..i = select i1 %cmp.i.i, i32 2, i32 4
  %65 = ptrtoint ptr %l_covered_state.i.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %..i, ptr %l_covered_state.i.i, align 4
  br label %xfs_log_need_covered.exit.thread64.i

xfs_log_need_covered.exit.thread64.i:             ; preds = %if.end8.i38.i, %if.end.i35.i.xfs_log_need_covered.exit.thread64.i_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock.i.i) #16
  br label %if.end17.i

xfs_log_need_covered.exit.i:                      ; preds = %if.end4.i.i.xfs_log_need_covered.exit.i_crit_edge, %sw.bb1.i.i.xfs_log_need_covered.exit.i_crit_edge, %if.end.i35.i.xfs_log_need_covered.exit.i_crit_edge, %if.end.i35.i.xfs_log_need_covered.exit.i_crit_edge17, %if.end.i35.i.xfs_log_need_covered.exit.i_crit_edge18
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock.i.i) #16
  br label %land.lhs.true14.i

land.lhs.true14.i:                                ; preds = %xfs_log_need_covered.exit.i, %if.end.i.land.lhs.true14.i_crit_edge
  %66 = ptrtoint ptr %m_features.i.i.i to i32
  call void @__asan_load8_noabort(i32 %66)
  %67 = load i64, ptr %m_features.i.i.i, align 8
  %and.i.i = and i64 %67, 512
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i)
  %tobool.i40.not.i = icmp eq i64 %and.i.i, 0
  br i1 %tobool.i40.not.i, label %land.lhs.true14.i.xfs_log_cover.exit_crit_edge, label %land.lhs.true14.i.if.end17.i_crit_edge

land.lhs.true14.i.if.end17.i_crit_edge:           ; preds = %land.lhs.true14.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17.i

land.lhs.true14.i.xfs_log_cover.exit_crit_edge:   ; preds = %land.lhs.true14.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_cover.exit

if.end17.i:                                       ; preds = %land.lhs.true14.i.if.end17.i_crit_edge, %xfs_log_need_covered.exit.thread64.i
  %call1869.i = tail call i32 @xfs_sync_sb(ptr noundef %mp, i1 noundef zeroext true) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1869.i)
  %tobool19.not70.i = icmp eq i32 %call1869.i, 0
  br i1 %tobool19.not70.i, label %if.end17.i.if.end21.i_crit_edge, label %if.end17.i.xfs_log_cover.exit_crit_edge

if.end17.i.xfs_log_cover.exit_crit_edge:          ; preds = %if.end17.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_cover.exit

if.end17.i.if.end21.i_crit_edge:                  ; preds = %if.end17.i
  br label %if.end21.i

if.end21.i:                                       ; preds = %xfs_log_need_covered.exit61.i.if.end21.i_crit_edge, %if.end17.i.if.end21.i_crit_edge
  %68 = ptrtoint ptr %m_ail to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %m_ail, align 4
  tail call void @xfs_ail_push_all_sync(ptr noundef %69) #16
  %70 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %m_log, align 4
  %call.i42.i = tail call zeroext i1 @xlog_cil_empty(ptr noundef %71) #16
  br i1 %call.i42.i, label %if.end.i45.i, label %if.end21.i.xfs_log_cover.exit_crit_edge

if.end21.i.xfs_log_cover.exit_crit_edge:          ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_cover.exit

if.end.i45.i:                                     ; preds = %if.end21.i
  %l_icloglock.i43.i = getelementptr inbounds %struct.xlog, ptr %71, i32 0, i32 21
  tail call void @_raw_spin_lock(ptr noundef %l_icloglock.i43.i) #16
  %l_covered_state.i44.i = getelementptr inbounds %struct.xlog, ptr %71, i32 0, i32 19
  %72 = ptrtoint ptr %l_covered_state.i44.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %l_covered_state.i44.i, align 4
  %74 = zext i32 %73 to i64
  call void @__sanitizer_cov_trace_switch(i64 %74, ptr @__sancov_gen_cov_switch_values.159)
  switch i32 %73, label %if.end.i45.i.xfs_log_need_covered.exit61.i_crit_edge [
    i32 2, label %if.end.i45.i.xfs_log_need_covered.exit61.thread67.i_crit_edge
    i32 4, label %if.end.i45.i.xfs_log_need_covered.exit61.thread67.i_crit_edge20
    i32 0, label %if.end.i45.i.xfs_log_need_covered.exit61.thread67.i_crit_edge21
    i32 1, label %if.end.i45.i.sw.bb1.i49.i_crit_edge
    i32 3, label %if.end.i45.i.sw.bb1.i49.i_crit_edge22
  ]

if.end.i45.i.sw.bb1.i49.i_crit_edge22:            ; preds = %if.end.i45.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i49.i

if.end.i45.i.sw.bb1.i49.i_crit_edge:              ; preds = %if.end.i45.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i49.i

if.end.i45.i.xfs_log_need_covered.exit61.thread67.i_crit_edge21: ; preds = %if.end.i45.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_need_covered.exit61.thread67.i

if.end.i45.i.xfs_log_need_covered.exit61.thread67.i_crit_edge20: ; preds = %if.end.i45.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_need_covered.exit61.thread67.i

if.end.i45.i.xfs_log_need_covered.exit61.thread67.i_crit_edge: ; preds = %if.end.i45.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_need_covered.exit61.thread67.i

if.end.i45.i.xfs_log_need_covered.exit61.i_crit_edge: ; preds = %if.end.i45.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_need_covered.exit61.i

sw.bb1.i49.i:                                     ; preds = %if.end.i45.i.sw.bb1.i49.i_crit_edge, %if.end.i45.i.sw.bb1.i49.i_crit_edge22
  %l_ailp.i46.i = getelementptr inbounds %struct.xlog, ptr %71, i32 0, i32 1
  %75 = ptrtoint ptr %l_ailp.i46.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %l_ailp.i46.i, align 4
  %call2.i47.i = tail call i64 @xfs_ail_min_lsn(ptr noundef %76) #16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %call2.i47.i)
  %tobool.not.i48.i = icmp eq i64 %call2.i47.i, 0
  br i1 %tobool.not.i48.i, label %if.end4.i52.i, label %sw.bb1.i49.i.xfs_log_need_covered.exit61.thread67.i_crit_edge

sw.bb1.i49.i.xfs_log_need_covered.exit61.thread67.i_crit_edge: ; preds = %sw.bb1.i49.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_need_covered.exit61.thread67.i

if.end4.i52.i:                                    ; preds = %sw.bb1.i49.i
  %call5.i50.i = tail call fastcc i32 @xlog_iclogs_empty(ptr noundef %71) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i50.i)
  %tobool6.not.i51.i = icmp eq i32 %call5.i50.i, 0
  br i1 %tobool6.not.i51.i, label %if.end4.i52.i.xfs_log_need_covered.exit61.thread67.i_crit_edge, label %if.end8.i54.i

if.end4.i52.i.xfs_log_need_covered.exit61.thread67.i_crit_edge: ; preds = %if.end4.i52.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_need_covered.exit61.thread67.i

if.end8.i54.i:                                    ; preds = %if.end4.i52.i
  call void @__sanitizer_cov_trace_pc() #18
  %77 = ptrtoint ptr %l_covered_state.i44.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %l_covered_state.i44.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %78)
  %cmp.i53.i = icmp eq i32 %78, 1
  %.73.i = select i1 %cmp.i53.i, i32 2, i32 4
  %79 = ptrtoint ptr %l_covered_state.i44.i to i32
  call void @__asan_store4_noabort(i32 %79)
  store i32 %.73.i, ptr %l_covered_state.i44.i, align 4
  br label %xfs_log_need_covered.exit61.i

xfs_log_need_covered.exit61.thread67.i:           ; preds = %if.end4.i52.i.xfs_log_need_covered.exit61.thread67.i_crit_edge, %sw.bb1.i49.i.xfs_log_need_covered.exit61.thread67.i_crit_edge, %if.end.i45.i.xfs_log_need_covered.exit61.thread67.i_crit_edge, %if.end.i45.i.xfs_log_need_covered.exit61.thread67.i_crit_edge20, %if.end.i45.i.xfs_log_need_covered.exit61.thread67.i_crit_edge21
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock.i43.i) #16
  br label %xfs_log_cover.exit

xfs_log_need_covered.exit61.i:                    ; preds = %if.end8.i54.i, %if.end.i45.i.xfs_log_need_covered.exit61.i_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock.i43.i) #16
  %call18.i = tail call i32 @xfs_sync_sb(ptr noundef %mp, i1 noundef zeroext true) #16
  %tobool19.not.i = icmp eq i32 %call18.i, 0
  br i1 %tobool19.not.i, label %xfs_log_need_covered.exit61.i.if.end21.i_crit_edge, label %xfs_log_need_covered.exit61.i.xfs_log_cover.exit_crit_edge

xfs_log_need_covered.exit61.i.xfs_log_cover.exit_crit_edge: ; preds = %xfs_log_need_covered.exit61.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_cover.exit

xfs_log_need_covered.exit61.i.if.end21.i_crit_edge: ; preds = %xfs_log_need_covered.exit61.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end21.i

xfs_log_cover.exit:                               ; preds = %xfs_log_need_covered.exit61.i.xfs_log_cover.exit_crit_edge, %xfs_log_need_covered.exit61.thread67.i, %if.end21.i.xfs_log_cover.exit_crit_edge, %if.end17.i.xfs_log_cover.exit_crit_edge, %land.lhs.true14.i.xfs_log_cover.exit_crit_edge, %xfs_log_writable.exit.i.xfs_log_cover.exit_crit_edge, %bdev_read_only.exit26.i.i.xfs_log_cover.exit_crit_edge, %lor.rhs.i22.i.i.xfs_log_cover.exit_crit_edge, %if.end3.i.i.xfs_log_cover.exit_crit_edge, %bdev_read_only.exit.i.i.xfs_log_cover.exit_crit_edge, %lor.rhs.i.i.i.xfs_log_cover.exit_crit_edge, %if.end.i.i.xfs_log_cover.exit_crit_edge, %cond.end.i.xfs_log_cover.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %xfs_log_writable.exit.i.xfs_log_cover.exit_crit_edge ], [ 0, %land.lhs.true14.i.xfs_log_cover.exit_crit_edge ], [ 0, %xfs_log_need_covered.exit61.thread67.i ], [ 0, %cond.end.i.xfs_log_cover.exit_crit_edge ], [ 0, %bdev_read_only.exit.i.i.xfs_log_cover.exit_crit_edge ], [ 0, %bdev_read_only.exit26.i.i.xfs_log_cover.exit_crit_edge ], [ 0, %if.end.i.i.xfs_log_cover.exit_crit_edge ], [ 0, %lor.rhs.i.i.i.xfs_log_cover.exit_crit_edge ], [ 0, %if.end3.i.i.xfs_log_cover.exit_crit_edge ], [ 0, %lor.rhs.i22.i.i.xfs_log_cover.exit_crit_edge ], [ %call1869.i, %if.end17.i.xfs_log_cover.exit_crit_edge ], [ 0, %if.end21.i.xfs_log_cover.exit_crit_edge ], [ %call18.i, %xfs_log_need_covered.exit61.i.xfs_log_cover.exit_crit_edge ]
  ret i32 %retval.0.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @xfs_clear_incompat_log_features(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xfs_sync_sb(ptr noundef, i1 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_delayed_work_sync(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @xfs_buftarg_wait(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @xfs_buf_lock(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @xfs_buf_unlock(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @xfs_log_clean(ptr noundef %mp) local_unnamed_addr #1 align 64 {
entry:
  %ulf.i.i.i = alloca %struct.xfs_unmount_log_format, align 8
  %reg.i.i.i = alloca %struct.xfs_log_iovec, align 4
  %vec.i.i.i = alloca %struct.xfs_log_vec, align 4
  %tic.i.i = alloca ptr, align 4
  %sick.i.i = alloca i32, align 4
  %checked.i.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @xfs_log_quiesce(ptr noundef %mp)
  %m_log.i = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 8
  %0 = ptrtoint ptr %m_log.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %m_log.i, align 4
  %m_features.i.i.i = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 61
  %2 = ptrtoint ptr %m_features.i.i.i to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %m_features.i.i.i, align 8
  %and.i.i.i = and i64 %3, 4611686018427387904
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i.i.i)
  %tobool.i.not.i.i = icmp eq i64 %and.i.i.i, 0
  br i1 %tobool.i.not.i.i, label %if.end.i.i, label %entry.xfs_log_unmount_write.exit_crit_edge

entry.xfs_log_unmount_write.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_unmount_write.exit

if.end.i.i:                                       ; preds = %entry
  %m_ddev_targp.i.i = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 13
  %4 = ptrtoint ptr %m_ddev_targp.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %m_ddev_targp.i.i, align 8
  %bt_bdev.i.i = getelementptr inbounds %struct.xfs_buftarg, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %bt_bdev.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %bt_bdev.i.i, align 4
  %bd_read_only.i.i.i = getelementptr inbounds %struct.block_device, ptr %7, i32 0, i32 4
  %8 = ptrtoint ptr %bd_read_only.i.i.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %bd_read_only.i.i.i, align 8, !range !429
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not.i.i.i = icmp eq i8 %9, 0
  br i1 %tobool.not.i.i.i, label %lor.rhs.i.i.i, label %if.end.i.i.xfs_log_unmount_write.exit_crit_edge

if.end.i.i.xfs_log_unmount_write.exit_crit_edge:  ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_unmount_write.exit

lor.rhs.i.i.i:                                    ; preds = %if.end.i.i
  %bd_disk.i.i.i = getelementptr inbounds %struct.block_device, ptr %7, i32 0, i32 17
  %10 = ptrtoint ptr %bd_disk.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %bd_disk.i.i.i, align 8
  %part0.i.i.i.i = getelementptr inbounds %struct.gendisk, ptr %11, i32 0, i32 7
  %12 = ptrtoint ptr %part0.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %part0.i.i.i.i, align 4
  %bd_read_only.i.i.i.i = getelementptr inbounds %struct.block_device, ptr %13, i32 0, i32 4
  %14 = ptrtoint ptr %bd_read_only.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %bd_read_only.i.i.i.i, align 8, !range !429
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool.not.i.i.i.i = icmp eq i8 %15, 0
  br i1 %tobool.not.i.i.i.i, label %bdev_read_only.exit.i.i, label %lor.rhs.i.i.i.xfs_log_unmount_write.exit_crit_edge

lor.rhs.i.i.i.xfs_log_unmount_write.exit_crit_edge: ; preds = %lor.rhs.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_unmount_write.exit

bdev_read_only.exit.i.i:                          ; preds = %lor.rhs.i.i.i
  %state.i.i.i.i = getelementptr inbounds %struct.gendisk, ptr %11, i32 0, i32 12
  %16 = ptrtoint ptr %state.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %state.i.i.i.i, align 4
  %18 = and i32 %17, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool.not.i.i = icmp eq i32 %18, 0
  br i1 %tobool.not.i.i, label %if.end3.i.i, label %bdev_read_only.exit.i.i.xfs_log_unmount_write.exit_crit_edge

bdev_read_only.exit.i.i.xfs_log_unmount_write.exit_crit_edge: ; preds = %bdev_read_only.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_unmount_write.exit

if.end3.i.i:                                      ; preds = %bdev_read_only.exit.i.i
  %l_targ.i.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 3
  %19 = ptrtoint ptr %l_targ.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %l_targ.i.i, align 4
  %bt_bdev4.i.i = getelementptr inbounds %struct.xfs_buftarg, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %bt_bdev4.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %bt_bdev4.i.i, align 4
  %bd_read_only.i16.i.i = getelementptr inbounds %struct.block_device, ptr %22, i32 0, i32 4
  %23 = ptrtoint ptr %bd_read_only.i16.i.i to i32
  call void @__asan_load1_noabort(i32 %23)
  %24 = load i8, ptr %bd_read_only.i16.i.i, align 8, !range !429
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %24)
  %tobool.not.i17.i.i = icmp eq i8 %24, 0
  br i1 %tobool.not.i17.i.i, label %lor.rhs.i22.i.i, label %if.end3.i.i.xfs_log_unmount_write.exit_crit_edge

if.end3.i.i.xfs_log_unmount_write.exit_crit_edge: ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_unmount_write.exit

lor.rhs.i22.i.i:                                  ; preds = %if.end3.i.i
  %bd_disk.i18.i.i = getelementptr inbounds %struct.block_device, ptr %22, i32 0, i32 17
  %25 = ptrtoint ptr %bd_disk.i18.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %bd_disk.i18.i.i, align 8
  %part0.i.i19.i.i = getelementptr inbounds %struct.gendisk, ptr %26, i32 0, i32 7
  %27 = ptrtoint ptr %part0.i.i19.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %part0.i.i19.i.i, align 4
  %bd_read_only.i.i20.i.i = getelementptr inbounds %struct.block_device, ptr %28, i32 0, i32 4
  %29 = ptrtoint ptr %bd_read_only.i.i20.i.i to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %bd_read_only.i.i20.i.i, align 8, !range !429
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %30)
  %tobool.not.i.i21.i.i = icmp eq i8 %30, 0
  br i1 %tobool.not.i.i21.i.i, label %bdev_read_only.exit26.i.i, label %lor.rhs.i22.i.i.xfs_log_unmount_write.exit_crit_edge

lor.rhs.i22.i.i.xfs_log_unmount_write.exit_crit_edge: ; preds = %lor.rhs.i22.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_unmount_write.exit

bdev_read_only.exit26.i.i:                        ; preds = %lor.rhs.i22.i.i
  %state.i.i23.i.i = getelementptr inbounds %struct.gendisk, ptr %26, i32 0, i32 12
  %31 = ptrtoint ptr %state.i.i23.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %state.i.i23.i.i, align 4
  %33 = and i32 %32, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool6.not.i.i = icmp eq i32 %33, 0
  br i1 %tobool6.not.i.i, label %xfs_log_writable.exit.i, label %bdev_read_only.exit26.i.i.xfs_log_unmount_write.exit_crit_edge

bdev_read_only.exit26.i.i.xfs_log_unmount_write.exit_crit_edge: ; preds = %bdev_read_only.exit26.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_unmount_write.exit

xfs_log_writable.exit.i:                          ; preds = %bdev_read_only.exit26.i.i
  %l_opstate.i.i.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 6
  %34 = ptrtoint ptr %l_opstate.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %l_opstate.i.i.i, align 4
  %36 = and i32 %35, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.i27.not.i.i = icmp eq i32 %36, 0
  br i1 %tobool.i27.not.i.i, label %if.end.i, label %xfs_log_writable.exit.i.xfs_log_unmount_write.exit_crit_edge

xfs_log_writable.exit.i.xfs_log_unmount_write.exit_crit_edge: ; preds = %xfs_log_writable.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_unmount_write.exit

if.end.i:                                         ; preds = %xfs_log_writable.exit.i
  %call1.i = tail call i32 @xfs_log_force(ptr noundef %mp, i32 noundef 1) #16
  %37 = ptrtoint ptr %l_opstate.i.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %l_opstate.i.i.i, align 4
  %39 = and i32 %38, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %tobool.i.not.i = icmp eq i32 %39, 0
  br i1 %tobool.i.not.i, label %if.end4.i, label %if.end.i.xfs_log_unmount_write.exit_crit_edge

if.end.i.xfs_log_unmount_write.exit_crit_edge:    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_unmount_write.exit

if.end4.i:                                        ; preds = %if.end.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %sick.i.i) #16
  %40 = ptrtoint ptr %sick.i.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 -1, ptr %sick.i.i, align 4, !annotation !430
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %checked.i.i) #16
  %41 = ptrtoint ptr %checked.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 -1, ptr %checked.i.i, align 4, !annotation !430
  call void @xfs_fs_measure_sickness(ptr noundef %mp, ptr noundef nonnull %sick.i.i, ptr noundef nonnull %checked.i.i) #16
  %42 = ptrtoint ptr %sick.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %sick.i.i, align 4
  %and.i.i = and i32 %43, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.i16.not.i = icmp eq i32 %and.i.i, 0
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %checked.i.i) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %sick.i.i) #16
  br i1 %tobool.i16.not.i, label %lor.lhs.false.i, label %if.end4.i.if.then7.i_crit_edge

if.end4.i.if.then7.i_crit_edge:                   ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then7.i

lor.lhs.false.i:                                  ; preds = %if.end4.i
  %call6.i = call zeroext i1 @xfs_errortag_test(ptr noundef %mp, ptr noundef nonnull @.str.96, ptr noundef nonnull @.str.1, i32 noundef 1014, i32 noundef 33) #16
  br i1 %call6.i, label %lor.lhs.false.i.if.then7.i_crit_edge, label %if.end8.i

lor.lhs.false.i.if.then7.i_crit_edge:             ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then7.i

if.then7.i:                                       ; preds = %lor.lhs.false.i.if.then7.i_crit_edge, %if.end4.i.if.then7.i_crit_edge
  call void (ptr, ptr, ...) @xfs_alert(ptr noundef %mp, ptr noundef nonnull @.str.97, ptr noundef nonnull @__func__.xfs_log_unmount_write) #16
  br label %xfs_log_unmount_write.exit

if.end8.i:                                        ; preds = %lor.lhs.false.i
  %l_iclog.i.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 20
  %44 = ptrtoint ptr %l_iclog.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %l_iclog.i.i, align 8
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %do.cond.i.i.do.body.i.i_crit_edge, %if.end8.i
  %iclog.0.i.i = phi ptr [ %45, %if.end8.i ], [ %51, %do.cond.i.i.do.body.i.i_crit_edge ]
  %ic_state.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0.i.i, i32 0, i32 7
  %46 = ptrtoint ptr %ic_state.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %ic_state.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %cmp.i.i = icmp eq i32 %47, 0
  br i1 %cmp.i.i, label %do.body.i.i.cond.end.i.i_crit_edge, label %cond.false.i.i, !prof !432

do.body.i.i.cond.end.i.i_crit_edge:               ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.i.i

cond.false.i.i:                                   ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @assfail(ptr noundef null, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.1, i32 noundef 981) #16
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %do.body.i.i.cond.end.i.i_crit_edge
  %ic_offset.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0.i.i, i32 0, i32 6
  %48 = ptrtoint ptr %ic_offset.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %ic_offset.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %49)
  %cmp2.i.i = icmp eq i32 %49, 0
  br i1 %cmp2.i.i, label %cond.end.i.i.do.cond.i.i_crit_edge, label %cond.false10.i.i, !prof !432

cond.end.i.i.do.cond.i.i_crit_edge:               ; preds = %cond.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond.i.i

cond.false10.i.i:                                 ; preds = %cond.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @assfail(ptr noundef null, ptr noundef nonnull @.str.98, ptr noundef nonnull @.str.1, i32 noundef 982) #16
  br label %do.cond.i.i

do.cond.i.i:                                      ; preds = %cond.false10.i.i, %cond.end.i.i.do.cond.i.i_crit_edge
  %ic_next.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0.i.i, i32 0, i32 2
  %50 = ptrtoint ptr %ic_next.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %ic_next.i.i, align 8
  %52 = ptrtoint ptr %l_iclog.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %l_iclog.i.i, align 8
  %cmp13.not.i.i = icmp eq ptr %51, %53
  br i1 %cmp13.not.i.i, label %xfs_log_unmount_verify_iclog.exit.i, label %do.cond.i.i.do.body.i.i_crit_edge

do.cond.i.i.do.body.i.i_crit_edge:                ; preds = %do.cond.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i.i

xfs_log_unmount_verify_iclog.exit.i:              ; preds = %do.cond.i.i
  %54 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %1, align 128
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %tic.i.i) #16
  %56 = ptrtoint ptr %tic.i.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr null, ptr %tic.i.i, align 4
  %call.i.i = call i32 @xfs_log_reserve(ptr noundef %55, i32 noundef 600, i32 noundef 1, ptr noundef nonnull %tic.i.i, i8 noundef zeroext -86, i1 noundef zeroext false) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i17.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i17.i, label %out_err.i.i, label %xfs_log_unmount_verify_iclog.exit.i.if.then3.i.i_crit_edge

xfs_log_unmount_verify_iclog.exit.i.if.then3.i.i_crit_edge: ; preds = %xfs_log_unmount_verify_iclog.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then3.i.i

out_err.i.i:                                      ; preds = %xfs_log_unmount_verify_iclog.exit.i
  %57 = ptrtoint ptr %tic.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %tic.i.i, align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %ulf.i.i.i) #16
  %59 = ptrtoint ptr %ulf.i.i.i to i32
  call void @__asan_store8_noabort(i32 %59)
  store i64 6155857740662046720, ptr %ulf.i.i.i, align 8
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %reg.i.i.i) #16
  %60 = getelementptr inbounds %struct.xfs_log_iovec, ptr %reg.i.i.i, i32 0, i32 1
  %61 = getelementptr inbounds %struct.xfs_log_iovec, ptr %reg.i.i.i, i32 0, i32 2
  %62 = ptrtoint ptr %reg.i.i.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %ulf.i.i.i, ptr %reg.i.i.i, align 4
  %63 = ptrtoint ptr %60 to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 8, ptr %60, align 4
  %64 = ptrtoint ptr %61 to i32
  call void @__asan_store4_noabort(i32 %64)
  store i32 17, ptr %61, align 4
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %vec.i.i.i) #16
  %65 = getelementptr inbounds %struct.xfs_log_vec, ptr %vec.i.i.i, i32 0, i32 1
  %66 = getelementptr inbounds %struct.xfs_log_vec, ptr %vec.i.i.i, i32 0, i32 2
  %67 = call ptr @memset(ptr %vec.i.i.i, i32 0, i32 32)
  %68 = ptrtoint ptr %65 to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 1, ptr %65, align 4
  %69 = ptrtoint ptr %66 to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %reg.i.i.i, ptr %66, align 4
  %t_curr_res.i.i.i = getelementptr inbounds %struct.xlog_ticket, ptr %58, i32 0, i32 4
  %70 = ptrtoint ptr %t_curr_res.i.i.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %t_curr_res.i.i.i, align 4
  %sub.i.i.i = add i32 %71, -8
  store i32 %sub.i.i.i, ptr %t_curr_res.i.i.i, align 4
  %call.i.i.i = call i32 @xlog_write(ptr noundef %1, ptr noundef null, ptr noundef nonnull %vec.i.i.i, ptr noundef %58, i32 noundef 32) #16
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %vec.i.i.i) #16
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %reg.i.i.i) #16
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %ulf.i.i.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool2.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool2.not.i.i, label %out_err.i.i.if.end4.i.i_crit_edge, label %out_err.i.i.if.then3.i.i_crit_edge

out_err.i.i.if.then3.i.i_crit_edge:               ; preds = %out_err.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then3.i.i

out_err.i.i.if.end4.i.i_crit_edge:                ; preds = %out_err.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end4.i.i

if.then3.i.i:                                     ; preds = %out_err.i.i.if.then3.i.i_crit_edge, %xfs_log_unmount_verify_iclog.exit.i.if.then3.i.i_crit_edge
  call void (ptr, ptr, ...) @xfs_alert(ptr noundef %55, ptr noundef nonnull @.str.99, ptr noundef nonnull @__func__.xlog_unmount_write) #16
  br label %if.end4.i.i

if.end4.i.i:                                      ; preds = %if.then3.i.i, %out_err.i.i.if.end4.i.i_crit_edge
  %l_icloglock.i.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 21
  call void @_raw_spin_lock(ptr noundef %l_icloglock.i.i) #16
  %72 = ptrtoint ptr %l_iclog.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %l_iclog.i.i, align 8
  %ic_refcnt.i.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %73, i32 0, i32 12
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %ic_refcnt.i.i.i, i32 noundef 4) #16
  call void @llvm.prefetch.p0(ptr %ic_refcnt.i.i.i, i32 1, i32 3, i32 1) #16
  %74 = call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %ic_refcnt.i.i.i, ptr %ic_refcnt.i.i.i, i32 1, ptr elementtype(i32) %ic_refcnt.i.i.i) #16, !srcloc !453
  %ic_flags.i.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %73, i32 0, i32 8
  %75 = ptrtoint ptr %ic_flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %ic_flags.i.i.i, align 128
  %or.i.i.i = or i32 %76, 3
  store i32 %or.i.i.i, ptr %ic_flags.i.i.i, align 128
  %ic_state.i.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %73, i32 0, i32 7
  %77 = ptrtoint ptr %ic_state.i.i.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load i32, ptr %ic_state.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %78)
  %cmp.i.i.i = icmp eq i32 %78, 0
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.end4.i.i.xlog_force_iclog.exit.i.i_crit_edge

if.end4.i.i.xlog_force_iclog.exit.i.i_crit_edge:  ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_force_iclog.exit.i.i

if.then.i.i.i:                                    ; preds = %if.end4.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %ic_log.i.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %73, i32 0, i32 4
  %79 = ptrtoint ptr %ic_log.i.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %ic_log.i.i.i, align 16
  call void @xlog_state_switch_iclogs(ptr noundef %80, ptr noundef %73, i32 noundef 0) #16
  br label %xlog_force_iclog.exit.i.i

xlog_force_iclog.exit.i.i:                        ; preds = %if.then.i.i.i, %if.end4.i.i.xlog_force_iclog.exit.i.i_crit_edge
  %ic_log1.i.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %73, i32 0, i32 4
  %81 = ptrtoint ptr %ic_log1.i.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %ic_log1.i.i.i, align 16
  %call.i18.i.i = call i32 @xlog_state_release_iclog(ptr noundef %82, ptr noundef %73, i64 noundef 0) #16
  %call6.i.i = call i32 @xlog_wait_on_iclog(ptr noundef %73) #16
  %83 = ptrtoint ptr %tic.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %tic.i.i, align 4
  %tobool7.not.i.i = icmp eq ptr %84, null
  br i1 %tobool7.not.i.i, label %xlog_force_iclog.exit.i.i.xlog_unmount_write.exit.i_crit_edge, label %if.then8.i.i

xlog_force_iclog.exit.i.i.xlog_unmount_write.exit.i_crit_edge: ; preds = %xlog_force_iclog.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_unmount_write.exit.i

if.then8.i.i:                                     ; preds = %xlog_force_iclog.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  call fastcc void @trace_xfs_log_umount_write(ptr noundef %1, ptr noundef nonnull %84) #16
  call void @xfs_log_ticket_ungrant(ptr noundef %1, ptr noundef nonnull %84) #16
  br label %xlog_unmount_write.exit.i

xlog_unmount_write.exit.i:                        ; preds = %if.then8.i.i, %xlog_force_iclog.exit.i.i.xlog_unmount_write.exit.i_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %tic.i.i) #16
  br label %xfs_log_unmount_write.exit

xfs_log_unmount_write.exit:                       ; preds = %xlog_unmount_write.exit.i, %if.then7.i, %if.end.i.xfs_log_unmount_write.exit_crit_edge, %xfs_log_writable.exit.i.xfs_log_unmount_write.exit_crit_edge, %bdev_read_only.exit26.i.i.xfs_log_unmount_write.exit_crit_edge, %lor.rhs.i22.i.i.xfs_log_unmount_write.exit_crit_edge, %if.end3.i.i.xfs_log_unmount_write.exit_crit_edge, %bdev_read_only.exit.i.i.xfs_log_unmount_write.exit_crit_edge, %lor.rhs.i.i.i.xfs_log_unmount_write.exit_crit_edge, %if.end.i.i.xfs_log_unmount_write.exit_crit_edge, %entry.xfs_log_unmount_write.exit_crit_edge
  ret void
}

; Function Attrs: argmemonly nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @xfs_log_item_init(ptr noundef %mp, ptr noundef %item, i32 noundef %type, ptr noundef %ops) local_unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %li_mountp = getelementptr inbounds %struct.xfs_log_item, ptr %item, i32 0, i32 3
  %0 = ptrtoint ptr %li_mountp to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %mp, ptr %li_mountp, align 8
  %m_ail = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 2
  %1 = ptrtoint ptr %m_ail to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %m_ail, align 4
  %li_ailp = getelementptr inbounds %struct.xfs_log_item, ptr %item, i32 0, i32 4
  %3 = ptrtoint ptr %li_ailp to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %2, ptr %li_ailp, align 4
  %li_type = getelementptr inbounds %struct.xfs_log_item, ptr %item, i32 0, i32 5
  %4 = ptrtoint ptr %li_type to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %type, ptr %li_type, align 8
  %li_ops = getelementptr inbounds %struct.xfs_log_item, ptr %item, i32 0, i32 9
  %5 = ptrtoint ptr %li_ops to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %ops, ptr %li_ops, align 4
  %li_lv = getelementptr inbounds %struct.xfs_log_item, ptr %item, i32 0, i32 11
  %6 = ptrtoint ptr %li_lv to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %li_lv, align 8
  %7 = ptrtoint ptr %item to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %item, ptr %item, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %item, i32 0, i32 1
  %8 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %item, ptr %prev.i, align 4
  %li_cil = getelementptr inbounds %struct.xfs_log_item, ptr %item, i32 0, i32 10
  %9 = ptrtoint ptr %li_cil to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %li_cil, ptr %li_cil, align 4
  %prev.i10 = getelementptr inbounds %struct.xfs_log_item, ptr %item, i32 0, i32 10, i32 1
  %10 = ptrtoint ptr %prev.i10 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %li_cil, ptr %prev.i10, align 4
  %li_bio_list = getelementptr inbounds %struct.xfs_log_item, ptr %item, i32 0, i32 8
  %11 = ptrtoint ptr %li_bio_list to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %li_bio_list, ptr %li_bio_list, align 4
  %prev.i11 = getelementptr inbounds %struct.xfs_log_item, ptr %item, i32 0, i32 8, i32 1
  %12 = ptrtoint ptr %prev.i11 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %li_bio_list, ptr %prev.i11, align 4
  %li_trans = getelementptr inbounds %struct.xfs_log_item, ptr %item, i32 0, i32 1
  %13 = ptrtoint ptr %li_trans to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %li_trans, ptr %li_trans, align 4
  %prev.i12 = getelementptr inbounds %struct.xfs_log_item, ptr %item, i32 0, i32 1, i32 1
  %14 = ptrtoint ptr %prev.i12 to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %li_trans, ptr %prev.i12, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @xfs_log_space_wake(ptr nocapture noundef readonly %mp) local_unnamed_addr #1 align 64 {
entry:
  %free_bytes = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %m_log = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 8
  %0 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %m_log, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %free_bytes) #16
  %l_opstate.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %l_opstate.i, align 4
  %4 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.i.not = icmp eq i32 %4, 0
  br i1 %tobool.i.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %entry
  %l_write_head = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 32
  %waiters = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 32, i32 1
  %5 = ptrtoint ptr %waiters to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %waiters, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !438
  %cmp.i.not.i = icmp eq ptr %6, %waiters
  br i1 %cmp.i.not.i, label %list_empty_careful.exit, label %if.end.if.then2_crit_edge

if.end.if.then2_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then2

list_empty_careful.exit:                          ; preds = %if.end
  %prev.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 32, i32 1, i32 1
  %7 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %prev.i, align 4
  %cmp.i.not = icmp eq ptr %8, %waiters
  br i1 %cmp.i.not, label %list_empty_careful.exit.if.end14_crit_edge, label %list_empty_careful.exit.if.then2_crit_edge

list_empty_careful.exit.if.then2_crit_edge:       ; preds = %list_empty_careful.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then2

list_empty_careful.exit.if.end14_crit_edge:       ; preds = %list_empty_careful.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end14

if.then2:                                         ; preds = %list_empty_careful.exit.if.then2_crit_edge, %if.end.if.then2_crit_edge
  %9 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %l_opstate.i, align 4
  %and1.i.i = and i32 %10, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i59.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i59.not, label %if.then2.cond.end_crit_edge, label %cond.false, !prof !432

if.then2.cond.end_crit_edge:                      ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.false:                                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.23, ptr noundef nonnull @.str.1, i32 noundef 1131) #16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.then2.cond.end_crit_edge
  tail call void @_raw_spin_lock(ptr noundef %l_write_head) #16
  %grant = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 32, i32 2
  %call9 = tail call fastcc i32 @xlog_space_left(ptr noundef %1, ptr noundef %grant)
  %11 = ptrtoint ptr %free_bytes to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %call9, ptr %free_bytes, align 4
  %call11 = call fastcc zeroext i1 @xlog_grant_head_wake(ptr noundef %1, ptr noundef %l_write_head, ptr noundef nonnull %free_bytes)
  tail call void @_raw_spin_unlock(ptr noundef %l_write_head) #16
  br label %if.end14

if.end14:                                         ; preds = %cond.end, %list_empty_careful.exit.if.end14_crit_edge
  %l_reserve_head = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 31
  %waiters15 = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 31, i32 1
  %12 = ptrtoint ptr %waiters15 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %waiters15, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !438
  %cmp.i.not.i60 = icmp eq ptr %13, %waiters15
  br i1 %cmp.i.not.i60, label %list_empty_careful.exit65, label %if.end14.if.then18_crit_edge

if.end14.if.then18_crit_edge:                     ; preds = %if.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then18

list_empty_careful.exit65:                        ; preds = %if.end14
  %prev.i61 = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 31, i32 1, i32 1
  %14 = ptrtoint ptr %prev.i61 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %prev.i61, align 4
  %cmp.i62.not = icmp eq ptr %15, %waiters15
  br i1 %cmp.i62.not, label %list_empty_careful.exit65.cleanup_crit_edge, label %list_empty_careful.exit65.if.then18_crit_edge

list_empty_careful.exit65.if.then18_crit_edge:    ; preds = %list_empty_careful.exit65
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then18

list_empty_careful.exit65.cleanup_crit_edge:      ; preds = %list_empty_careful.exit65
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then18:                                        ; preds = %list_empty_careful.exit65.if.then18_crit_edge, %if.end14.if.then18_crit_edge
  %16 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %l_opstate.i, align 4
  %and1.i.i67 = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i67)
  %tobool.i68.not = icmp eq i32 %and1.i.i67, 0
  br i1 %tobool.i68.not, label %if.then18.cond.end30_crit_edge, label %cond.false29, !prof !432

if.then18.cond.end30_crit_edge:                   ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end30

cond.false29:                                     ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.23, ptr noundef nonnull @.str.1, i32 noundef 1140) #16
  br label %cond.end30

cond.end30:                                       ; preds = %cond.false29, %if.then18.cond.end30_crit_edge
  tail call void @_raw_spin_lock(ptr noundef %l_reserve_head) #16
  %grant34 = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 31, i32 2
  %call35 = tail call fastcc i32 @xlog_space_left(ptr noundef %1, ptr noundef %grant34)
  %18 = ptrtoint ptr %free_bytes to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %call35, ptr %free_bytes, align 4
  %call37 = call fastcc zeroext i1 @xlog_grant_head_wake(ptr noundef %1, ptr noundef %l_reserve_head, ptr noundef nonnull %free_bytes)
  tail call void @_raw_spin_unlock(ptr noundef %l_reserve_head) #16
  br label %cleanup

cleanup:                                          ; preds = %cond.end30, %list_empty_careful.exit65.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %free_bytes) #16
  ret void
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @xlog_space_left(ptr noundef %log, ptr noundef %head) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %head, i32 noundef 8) #16
  %call.i.i = tail call i64 @generic_atomic64_read(ptr noundef %head) #16
  %0 = lshr i64 %call.i.i, 32
  %conv.i.i = trunc i64 %0 to i32
  %conv1.i.i = trunc i64 %call.i.i to i32
  %l_tail_lsn = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 29
  %call.i.i.i31 = tail call zeroext i1 @__kasan_check_read(ptr noundef %l_tail_lsn, i32 noundef 8) #16
  %call.i.i32 = tail call i64 @generic_atomic64_read(ptr noundef %l_tail_lsn) #16
  %1 = lshr i64 %call.i.i32, 32
  %conv.i = trunc i64 %1 to i32
  %conv1.i = trunc i64 %call.i.i32 to i32
  %shl = shl i32 %conv1.i, 9
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %conv.i.i)
  %cmp = icmp ne i32 %conv.i, %conv.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %shl, i32 %conv1.i.i)
  %cmp1.not = icmp sgt i32 %shl, %conv1.i.i
  %or.cond = select i1 %cmp, i1 true, i1 %cmp1.not
  br i1 %or.cond, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %l_logsize = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 15
  %2 = ptrtoint ptr %l_logsize to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %l_logsize, align 32
  %sub.neg = sub i32 %shl, %conv1.i.i
  %sub2 = add i32 %sub.neg, %3
  br label %cleanup

if.end:                                           ; preds = %entry
  %add = add i32 %conv.i, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %conv.i.i)
  %cmp3 = icmp slt i32 %add, %conv.i.i
  br i1 %cmp3, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %l_opstate.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 6
  %4 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %l_opstate.i, align 4
  %6 = and i32 %5, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.i.not = icmp eq i32 %6, 0
  br i1 %tobool.i.not, label %if.end8, label %if.then6

if.then6:                                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #18
  %l_logsize7 = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 15
  %7 = ptrtoint ptr %l_logsize7 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %l_logsize7, align 32
  br label %cleanup

if.end8:                                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %conv.i.i)
  %cmp9 = icmp slt i32 %conv.i, %conv.i.i
  br i1 %cmp9, label %if.then10, label %if.end15

if.then10:                                        ; preds = %if.end8
  %sub11 = add nsw i32 %conv.i.i, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %sub11, i32 %conv.i)
  %cmp12 = icmp eq i32 %sub11, %conv.i
  br i1 %cmp12, label %if.then10.cond.end_crit_edge, label %cond.false, !prof !432

if.then10.cond.end_crit_edge:                     ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.false:                                       ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.101, ptr noundef nonnull @.str.1, i32 noundef 1338) #16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.then10.cond.end_crit_edge
  %sub14 = sub i32 %shl, %conv1.i.i
  br label %cleanup

if.end15:                                         ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #18
  %9 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %log, align 128
  tail call void (ptr, ptr, ...) @xfs_alert(ptr noundef %10, ptr noundef nonnull @.str.102) #16
  %11 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %log, align 128
  tail call void (ptr, ptr, ...) @xfs_alert(ptr noundef %12, ptr noundef nonnull @.str.103, i32 noundef %conv.i, i32 noundef %shl) #16
  %13 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %log, align 128
  tail call void (ptr, ptr, ...) @xfs_alert(ptr noundef %14, ptr noundef nonnull @.str.104, i32 noundef %conv.i.i, i32 noundef %conv1.i.i) #16
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.12, ptr noundef nonnull @.str.1, i32 noundef 1351) #16
  %l_logsize18 = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 15
  %15 = ptrtoint ptr %l_logsize18 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %l_logsize18, align 32
  br label %cleanup

cleanup:                                          ; preds = %if.end15, %cond.end, %if.then6, %if.end.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ %sub2, %if.then ], [ %8, %if.then6 ], [ %sub14, %cond.end ], [ %16, %if.end15 ], [ 0, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @xlog_grant_head_wake(ptr noundef %log, ptr noundef readonly %head, ptr nocapture noundef %free_bytes) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %waiters = getelementptr inbounds %struct.xlog_grant_head, ptr %head, i32 0, i32 1
  %0 = ptrtoint ptr %waiters to i32
  call void @__asan_load4_noabort(i32 %0)
  %tic.027 = load ptr, ptr %waiters, align 4
  %cmp.not28 = icmp eq ptr %tic.027, %waiters
  br i1 %cmp.not28, label %entry.cleanup_crit_edge, label %for.body.lr.ph

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %l_write_head.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 32
  %cmp.i = icmp eq ptr %l_write_head.i, %head
  br label %for.body

for.body:                                         ; preds = %if.end4.for.body_crit_edge, %for.body.lr.ph
  %tic.030 = phi ptr [ %tic.027, %for.body.lr.ph ], [ %tic.0, %if.end4.for.body_crit_edge ]
  %woken_task.0.off029 = phi i1 [ false, %for.body.lr.ph ], [ true, %if.end4.for.body_crit_edge ]
  %t_flags.i = getelementptr inbounds %struct.xlog_ticket, ptr %tic.030, i32 0, i32 9
  %1 = ptrtoint ptr %t_flags.i to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %t_flags.i, align 1
  %3 = and i8 %2, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not.i = icmp eq i8 %3, 0
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %for.body
  br i1 %tobool.not.i, label %cond.false.i, label %if.then.i.cond.end.i_crit_edge, !prof !437

if.then.i.cond.end.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.i

cond.false.i:                                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.92, ptr noundef nonnull @.str.1, i32 noundef 176) #16
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %if.then.i.cond.end.i_crit_edge
  %t_unit_res.i = getelementptr inbounds %struct.xlog_ticket, ptr %tic.030, i32 0, i32 5
  %4 = ptrtoint ptr %t_unit_res.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %t_unit_res.i, align 4
  br label %xlog_ticket_reservation.exit

if.else.i:                                        ; preds = %for.body
  %t_unit_res11.i = getelementptr inbounds %struct.xlog_ticket, ptr %tic.030, i32 0, i32 5
  %6 = ptrtoint ptr %t_unit_res11.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %t_unit_res11.i, align 4
  br i1 %tobool.not.i, label %if.else.i.xlog_ticket_reservation.exit_crit_edge, label %if.then7.i

if.else.i.xlog_ticket_reservation.exit_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_ticket_reservation.exit

if.then7.i:                                       ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #18
  %t_cnt.i = getelementptr inbounds %struct.xlog_ticket, ptr %tic.030, i32 0, i32 7
  %8 = ptrtoint ptr %t_cnt.i to i32
  call void @__asan_load1_noabort(i32 %8)
  %9 = load i8, ptr %t_cnt.i, align 1
  %conv9.i = zext i8 %9 to i32
  %mul.i = mul i32 %7, %conv9.i
  br label %xlog_ticket_reservation.exit

xlog_ticket_reservation.exit:                     ; preds = %if.then7.i, %if.else.i.xlog_ticket_reservation.exit_crit_edge, %cond.end.i
  %retval.0.i = phi i32 [ %5, %cond.end.i ], [ %mul.i, %if.then7.i ], [ %7, %if.else.i.xlog_ticket_reservation.exit_crit_edge ]
  %10 = ptrtoint ptr %free_bytes to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %free_bytes, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %retval.0.i)
  %cmp2 = icmp slt i32 %11, %retval.0.i
  br i1 %cmp2, label %if.then, label %if.end4

if.then:                                          ; preds = %xlog_ticket_reservation.exit
  br i1 %woken_task.0.off029, label %if.then.cleanup_crit_edge, label %if.then3

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then3:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @xlog_grant_push_ail(ptr noundef %log, i32 noundef %retval.0.i)
  br label %cleanup

if.end4:                                          ; preds = %xlog_ticket_reservation.exit
  %sub = sub i32 %11, %retval.0.i
  %12 = ptrtoint ptr %free_bytes to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %sub, ptr %free_bytes, align 4
  tail call fastcc void @trace_xfs_log_grant_wake_up(ptr noundef %log, ptr noundef %tic.030)
  %t_task = getelementptr inbounds %struct.xlog_ticket, ptr %tic.030, i32 0, i32 1
  %13 = ptrtoint ptr %t_task to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %t_task, align 4
  %call5 = tail call i32 @wake_up_process(ptr noundef %14) #16
  %15 = ptrtoint ptr %tic.030 to i32
  call void @__asan_load4_noabort(i32 %15)
  %tic.0 = load ptr, ptr %tic.030, align 4
  %cmp.not = icmp eq ptr %tic.0, %waiters
  br i1 %cmp.not, label %if.end4.cleanup_crit_edge, label %if.end4.for.body_crit_edge

if.end4.for.body_crit_edge:                       ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %if.end4.cleanup_crit_edge, %if.then3, %if.then.cleanup_crit_edge, %entry.cleanup_crit_edge
  %cmp.not25 = phi i1 [ false, %if.then.cleanup_crit_edge ], [ false, %if.then3 ], [ true, %entry.cleanup_crit_edge ], [ true, %if.end4.cleanup_crit_edge ]
  ret i1 %cmp.not25
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i64 @xlog_assign_tail_lsn_locked(ptr nocapture noundef readonly %mp) local_unnamed_addr #1 align 64 {
entry:
  %agg.tmp.sroa.0.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %m_log = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 8
  %0 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %m_log, align 4
  %m_ail = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 2
  %2 = ptrtoint ptr %m_ail to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %m_ail, align 4
  %ail_lock = getelementptr inbounds %struct.xfs_ail, ptr %3, i32 0, i32 6
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i)
  %4 = ptrtoint ptr %ail_lock to i32
  call void @__asan_load4_noabort(i32 %4)
  %agg.tmp.sroa.0.0.copyload.i = load volatile i32, ptr %ail_lock, align 4
  %5 = ptrtoint ptr %agg.tmp.sroa.0.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile i32 %agg.tmp.sroa.0.0.copyload.i, ptr %agg.tmp.sroa.0.i, align 4
  %lock.sroa.0.0.extract.shift.i.i = lshr i32 %agg.tmp.sroa.0.0.copyload.i, 16
  %conv.i.i = and i32 %agg.tmp.sroa.0.0.copyload.i, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i.i, i32 %lock.sroa.0.0.extract.shift.i.i)
  %cmp.i.i.not = icmp eq i32 %conv.i.i, %lock.sroa.0.0.extract.shift.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i)
  br i1 %cmp.i.i.not, label %do.body4, label %do.end9, !prof !437

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/xfs/xfs_log.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1268, 0\0A.popsection", ""() #16, !srcloc !456
  unreachable

do.end9:                                          ; preds = %entry
  %ail_head.i = getelementptr inbounds %struct.xfs_ail, ptr %3, i32 0, i32 2
  %6 = ptrtoint ptr %ail_head.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %ail_head.i, align 4
  %cmp.not.i = icmp eq ptr %7, %ail_head.i
  %tobool12.not24 = icmp eq ptr %7, null
  %tobool12.not = or i1 %cmp.not.i, %tobool12.not24
  br i1 %tobool12.not, label %if.else, label %if.then13

if.then13:                                        ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #18
  %li_lsn = getelementptr inbounds %struct.xfs_log_item, ptr %7, i32 0, i32 2
  %8 = ptrtoint ptr %li_lsn to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %li_lsn, align 8
  br label %if.end15

if.else:                                          ; preds = %do.end9
  call void @__sanitizer_cov_trace_pc() #18
  %l_last_sync_lsn = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 27
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %l_last_sync_lsn, i32 noundef 8) #16
  %call.i = tail call i64 @generic_atomic64_read(ptr noundef %l_last_sync_lsn) #16
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then13
  %tail_lsn.0 = phi i64 [ %9, %if.then13 ], [ %call.i, %if.else ]
  tail call fastcc void @trace_xfs_log_assign_tail_lsn(ptr noundef %1, i64 noundef %tail_lsn.0)
  %l_tail_lsn = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 29
  %call.i.i23 = tail call zeroext i1 @__kasan_check_write(ptr noundef %l_tail_lsn, i32 noundef 8) #16
  tail call void @generic_atomic64_set(ptr noundef %l_tail_lsn, i64 noundef %tail_lsn.0) #16
  ret i64 %tail_lsn.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xfs_log_assign_tail_lsn(ptr noundef %log, i64 noundef %new_lsn) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_assign_tail_lsn, i32 0, i32 1), ptr blockaddress(@trace_xfs_log_assign_tail_lsn, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !457
  %call42 = tail call i32 @__traceiter_xfs_log_assign_tail_lsn(ptr noundef null, ptr noundef %log, i64 noundef %new_lsn) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !458
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_assign_tail_lsn, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_assign_tail_lsn, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xfs_log_assign_tail_lsn.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xfs_log_assign_tail_lsn.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 1408, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i64 @xlog_grant_push_threshold(ptr noundef %log, i32 noundef %need_bytes) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = sext i32 %need_bytes to i64
  %sub = add nsw i64 %conv, 511
  %shr = lshr i64 %sub, 9
  %l_logBBsize = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 16
  %0 = ptrtoint ptr %l_logBBsize to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %l_logBBsize, align 4
  %conv1 = sext i32 %1 to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %shr, i64 %conv1)
  %cmp = icmp ult i64 %shr, %conv1
  br i1 %cmp, label %entry.cond.end_crit_edge, label %cond.false, !prof !432

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.24, ptr noundef nonnull @.str.1, i32 noundef 1679) #16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry.cond.end_crit_edge
  %grant = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 31, i32 2
  %call = tail call fastcc i32 @xlog_space_left(ptr noundef %log, ptr noundef %grant)
  %conv6 = ashr i32 %call, 9
  %conv11 = trunc i64 %shr to i32
  %2 = ptrtoint ptr %l_logBBsize to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %l_logBBsize, align 4
  %shr13 = ashr i32 %3, 2
  %4 = tail call i32 @llvm.smax.i32(i32 %shr13, i32 %conv11)
  %5 = tail call i32 @llvm.smax.i32(i32 %4, i32 256)
  call void @__sanitizer_cov_trace_cmp4(i32 %conv6, i32 %5)
  %cmp26.not = icmp slt i32 %conv6, %5
  br i1 %cmp26.not, label %if.end, label %cond.end.cleanup_crit_edge

cond.end.cleanup_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %cond.end
  %l_tail_lsn = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 29
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %l_tail_lsn, i32 noundef 8) #16
  %call.i.i67 = tail call i64 @generic_atomic64_read(ptr noundef %l_tail_lsn) #16
  %6 = lshr i64 %call.i.i67, 32
  %conv.i = trunc i64 %6 to i32
  %conv1.i = trunc i64 %call.i.i67 to i32
  %add28 = add i32 %5, %conv1.i
  %7 = ptrtoint ptr %l_logBBsize to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %l_logBBsize, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add28, i32 %8)
  %cmp30.not = icmp slt i32 %add28, %8
  %sub34 = select i1 %cmp30.not, i32 0, i32 %8
  %threshold_block.0 = sub i32 %add28, %sub34
  %not.cmp30.not = xor i1 %cmp30.not, true
  %add35 = zext i1 %not.cmp30.not to i32
  %threshold_cycle.0 = add i32 %add35, %conv.i
  %conv.i68 = zext i32 %threshold_cycle.0 to i64
  %shl.i = shl nuw i64 %conv.i68, 32
  %conv1.i69 = zext i32 %threshold_block.0 to i64
  %or.i = or i64 %shl.i, %conv1.i69
  %l_last_sync_lsn = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 27
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %l_last_sync_lsn, i32 noundef 8) #16
  %call.i = tail call i64 @generic_atomic64_read(ptr noundef %l_last_sync_lsn) #16
  %9 = lshr i64 %call.i, 32
  %conv2.i = trunc i64 %9 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %threshold_cycle.0, i32 %conv2.i)
  %cmp.not.i = icmp eq i32 %threshold_cycle.0, %conv2.i
  br i1 %cmp.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  call void @__sanitizer_cov_trace_cmp4(i32 %threshold_cycle.0, i32 %conv2.i)
  %cmp8.i = icmp ult i32 %threshold_cycle.0, %conv2.i
  br label %_lsn_cmp.exit

if.end.i:                                         ; preds = %if.end
  %conv12.i = trunc i64 %call.i to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %threshold_block.0, i32 %conv12.i)
  %cmp13.not.i = icmp eq i32 %threshold_block.0, %conv12.i
  br i1 %cmp13.not.i, label %if.end.i.cleanup_crit_edge, label %if.then15.i

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.then15.i:                                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @__sanitizer_cov_trace_cmp4(i32 %threshold_block.0, i32 %conv12.i)
  %cmp18.i = icmp ult i32 %threshold_block.0, %conv12.i
  br label %_lsn_cmp.exit

_lsn_cmp.exit:                                    ; preds = %if.then15.i, %if.then.i
  %cmp8.i.sink = phi i1 [ %cmp8.i, %if.then.i ], [ %cmp18.i, %if.then15.i ]
  %spec.select = select i1 %cmp8.i.sink, i64 %or.i, i64 %call.i
  br label %cleanup

cleanup:                                          ; preds = %_lsn_cmp.exit, %if.end.i.cleanup_crit_edge, %cond.end.cleanup_crit_edge
  %retval.0 = phi i64 [ -1, %cond.end.cleanup_crit_edge ], [ %or.i, %if.end.i.cleanup_crit_edge ], [ %spec.select, %_lsn_cmp.exit ]
  ret i64 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @xlog_cksum(ptr nocapture noundef readonly %log, ptr noundef %rhead, ptr noundef %dp, i32 noundef %size) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr.i = getelementptr i8, ptr %rhead, i32 32
  %0 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %add.ptr.i, align 4
  %call.i = tail call i32 @crc32c(i32 noundef -1, ptr noundef %rhead, i32 noundef 328) #16
  %1 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %log, align 128
  %m_features.i = getelementptr inbounds %struct.xfs_mount, ptr %2, i32 0, i32 61
  %3 = ptrtoint ptr %m_features.i to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %m_features.i, align 8
  %and.i = and i64 %4, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.i.not = icmp eq i64 %and.i, 0
  br i1 %tobool.i.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  %sub = add i32 %size, 32767
  call void @__sanitizer_cov_trace_const_cmp4(i32 65535, i32 %sub)
  %cmp11 = icmp sgt i32 %sub, 65535
  br i1 %cmp11, label %for.body.preheader, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

for.body.preheader:                               ; preds = %if.then
  %div1415 = lshr i32 %sub, 15
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %for.body.preheader
  %i.013 = phi i32 [ %inc, %for.body.for.body_crit_edge ], [ 1, %for.body.preheader ]
  %crc.012 = phi i32 [ %call2, %for.body.for.body_crit_edge ], [ %call.i, %for.body.preheader ]
  %arrayidx = getelementptr %union.xlog_in_core2, ptr %rhead, i32 %i.013
  %call2 = tail call i32 @crc32c(i32 noundef %crc.012, ptr noundef %arrayidx, i32 noundef 260) #16
  %inc = add nuw nsw i32 %i.013, 1
  %exitcond.not = icmp eq i32 %inc, %div1415
  br i1 %exitcond.not, label %for.body.if.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.body.if.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end:                                           ; preds = %for.body.if.end_crit_edge, %if.then.if.end_crit_edge, %entry.if.end_crit_edge
  %crc.1 = phi i32 [ %call.i, %entry.if.end_crit_edge ], [ %call.i, %if.then.if.end_crit_edge ], [ %call2, %for.body.if.end_crit_edge ]
  %call3 = tail call i32 @crc32c(i32 noundef %crc.1, ptr noundef %dp, i32 noundef %size) #16
  %5 = xor i32 %call3, -1
  %6 = tail call i32 @llvm.bswap.i32(i32 %5) #16
  ret i32 %6
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @crc32c(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @xlog_print_tic_res(ptr noundef %mp, ptr nocapture noundef readonly %ticket) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %t_res_num_ophdrs = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 11
  %0 = ptrtoint ptr %t_res_num_ophdrs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %t_res_num_ophdrs, align 4
  %mul = mul i32 %1, 12
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.51) #16
  %t_unit_res = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 5
  %2 = ptrtoint ptr %t_unit_res to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %t_unit_res, align 4
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.52, i32 noundef %3) #16
  %t_curr_res = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 4
  %4 = ptrtoint ptr %t_curr_res to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %t_curr_res, align 4
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.53, i32 noundef %5) #16
  %t_res_arr_sum = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 12
  %6 = ptrtoint ptr %t_res_arr_sum to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %t_res_arr_sum, align 4
  %t_res_o_flow = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 13
  %8 = ptrtoint ptr %t_res_o_flow to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %t_res_o_flow, align 4
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.54, i32 noundef %7, i32 noundef %9) #16
  %10 = ptrtoint ptr %t_res_num_ophdrs to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %t_res_num_ophdrs, align 4
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.55, i32 noundef %11, i32 noundef %mul) #16
  %12 = ptrtoint ptr %t_res_arr_sum to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %t_res_arr_sum, align 4
  %14 = ptrtoint ptr %t_res_o_flow to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %t_res_o_flow, align 4
  %add = add i32 %13, %mul
  %add4 = add i32 %add, %15
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.56, i32 noundef %add4) #16
  %t_res_num = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 10
  %16 = ptrtoint ptr %t_res_num to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %t_res_num, align 4
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.57, i32 noundef %17) #16
  %18 = ptrtoint ptr %t_res_num to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %t_res_num, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %19)
  %cmp37.not = icmp eq i32 %19, 0
  br i1 %cmp37.not, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %cond.end.for.body_crit_edge, %entry.for.body_crit_edge
  %i.038 = phi i32 [ %inc, %cond.end.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.xlog_ticket, ptr %ticket, i32 0, i32 14, i32 %i.038
  %r_type6 = getelementptr %struct.xlog_ticket, ptr %ticket, i32 0, i32 14, i32 %i.038, i32 1
  %20 = ptrtoint ptr %r_type6 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %r_type6, align 4
  %22 = add i32 %21, -27
  call void @__sanitizer_cov_trace_const_cmp4(i32 -26, i32 %22)
  %23 = icmp ult i32 %22, -26
  br i1 %23, label %for.body.cond.end_crit_edge, label %cond.false

for.body.cond.end_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.false:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %arrayidx9 = getelementptr [27 x ptr], ptr @xlog_print_tic_res.res_type_str, i32 0, i32 %21
  %24 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx9, align 4
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %for.body.cond.end_crit_edge
  %cond = phi ptr [ %25, %cond.false ], [ @.str.59, %for.body.cond.end_crit_edge ]
  %26 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx, align 4
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.58, i32 noundef %i.038, ptr noundef %cond, i32 noundef %27) #16
  %inc = add nuw i32 %i.038, 1
  %28 = ptrtoint ptr %t_res_num to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %t_res_num, align 4
  %cmp = icmp ult i32 %inc, %29
  br i1 %cmp, label %cond.end.for.body_crit_edge, label %cond.end.for.end_crit_edge

cond.end.for.end_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

cond.end.for.body_crit_edge:                      ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %cond.end.for.end_crit_edge, %entry.for.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @xlog_print_trans(ptr noundef readonly %tp) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %t_mountp = getelementptr inbounds %struct.xfs_trans, ptr %tp, i32 0, i32 10
  %0 = ptrtoint ptr %t_mountp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %t_mountp, align 4
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %1, ptr noundef nonnull @.str.60) #16
  %t_log_res = getelementptr inbounds %struct.xfs_trans, ptr %tp, i32 0, i32 1
  %2 = ptrtoint ptr %t_log_res to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %t_log_res, align 4
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %1, ptr noundef nonnull @.str.61, i32 noundef %3) #16
  %t_log_count = getelementptr inbounds %struct.xfs_trans, ptr %tp, i32 0, i32 2
  %4 = ptrtoint ptr %t_log_count to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %t_log_count, align 8
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %1, ptr noundef nonnull @.str.62, i32 noundef %5) #16
  %t_flags = getelementptr inbounds %struct.xfs_trans, ptr %tp, i32 0, i32 7
  %6 = ptrtoint ptr %t_flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %t_flags, align 4
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %1, ptr noundef nonnull @.str.63, i32 noundef %7) #16
  %t_ticket = getelementptr inbounds %struct.xfs_trans, ptr %tp, i32 0, i32 9
  %8 = ptrtoint ptr %t_ticket to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %t_ticket, align 8
  tail call void @xlog_print_tic_res(ptr noundef %1, ptr noundef %9)
  %t_items = getelementptr inbounds %struct.xfs_trans, ptr %tp, i32 0, i32 26
  %10 = ptrtoint ptr %t_items to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pn63 = load ptr, ptr %t_items, align 8
  %cmp.not64 = icmp eq ptr %.pn63, %t_items
  br i1 %cmp.not64, label %entry.for.end17_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end17_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end17

for.body:                                         ; preds = %cleanup.for.body_crit_edge, %entry.for.body_crit_edge
  %.pn65 = phi ptr [ %.pn, %cleanup.for.body_crit_edge ], [ %.pn63, %entry.for.body_crit_edge ]
  %li_lv = getelementptr i8, ptr %.pn65, i32 56
  %11 = ptrtoint ptr %li_lv to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %li_lv, align 8
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %1, ptr noundef nonnull @.str.64) #16
  %li_type = getelementptr i8, ptr %.pn65, i32 24
  %13 = ptrtoint ptr %li_type to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %li_type, align 8
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %1, ptr noundef nonnull @.str.65, i32 noundef %14) #16
  %li_flags = getelementptr i8, ptr %.pn65, i32 28
  %15 = ptrtoint ptr %li_flags to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %li_flags, align 4
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %1, ptr noundef nonnull @.str.66, i32 noundef %16) #16
  %tobool.not = icmp eq ptr %12, null
  br i1 %tobool.not, label %for.body.cleanup_crit_edge, label %if.end

for.body.cleanup_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %for.body
  %lv_niovecs = getelementptr inbounds %struct.xfs_log_vec, ptr %12, i32 0, i32 1
  %17 = ptrtoint ptr %lv_niovecs to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %lv_niovecs, align 4
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %1, ptr noundef nonnull @.str.67, i32 noundef %18) #16
  %lv_size = getelementptr inbounds %struct.xfs_log_vec, ptr %12, i32 0, i32 7
  %19 = ptrtoint ptr %lv_size to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %lv_size, align 4
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %1, ptr noundef nonnull @.str.68, i32 noundef %20) #16
  %lv_bytes = getelementptr inbounds %struct.xfs_log_vec, ptr %12, i32 0, i32 5
  %21 = ptrtoint ptr %lv_bytes to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %lv_bytes, align 4
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %1, ptr noundef nonnull @.str.69, i32 noundef %22) #16
  %lv_buf_len = getelementptr inbounds %struct.xfs_log_vec, ptr %12, i32 0, i32 6
  %23 = ptrtoint ptr %lv_buf_len to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %lv_buf_len, align 4
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %1, ptr noundef nonnull @.str.70, i32 noundef %24) #16
  %25 = ptrtoint ptr %lv_niovecs to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %lv_niovecs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %cmp460 = icmp sgt i32 %26, 0
  br i1 %cmp460, label %for.body5.preheader, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body5.preheader:                              ; preds = %if.end
  %lv_iovecp = getelementptr inbounds %struct.xfs_log_vec, ptr %12, i32 0, i32 2
  %27 = ptrtoint ptr %lv_iovecp to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %lv_iovecp, align 4
  br label %for.body5

for.body5:                                        ; preds = %for.body5.for.body5_crit_edge, %for.body5.preheader
  %i.062 = phi i32 [ %inc, %for.body5.for.body5_crit_edge ], [ 0, %for.body5.preheader ]
  %vec.061 = phi ptr [ %incdec.ptr, %for.body5.for.body5_crit_edge ], [ %28, %for.body5.preheader ]
  %i_len = getelementptr inbounds %struct.xfs_log_iovec, ptr %vec.061, i32 0, i32 1
  %29 = ptrtoint ptr %i_len to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %i_len, align 4
  %31 = tail call i32 @llvm.smin.i32(i32 %30, i32 32)
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %1, ptr noundef nonnull @.str.71, i32 noundef %i.062) #16
  %i_type = getelementptr inbounds %struct.xfs_log_iovec, ptr %vec.061, i32 0, i32 2
  %32 = ptrtoint ptr %i_type to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %i_type, align 4
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %1, ptr noundef nonnull @.str.72, i32 noundef %33) #16
  %34 = ptrtoint ptr %i_len to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %i_len, align 4
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %1, ptr noundef nonnull @.str.73, i32 noundef %35) #16
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %1, ptr noundef nonnull @.str.74, i32 noundef %31, i32 noundef %i.062) #16
  %36 = ptrtoint ptr %vec.061 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %vec.061, align 4
  tail call void @xfs_hex_dump(ptr noundef %37, i32 noundef %31) #16
  %incdec.ptr = getelementptr %struct.xfs_log_iovec, ptr %vec.061, i32 1
  %inc = add nuw nsw i32 %i.062, 1
  %38 = ptrtoint ptr %lv_niovecs to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %lv_niovecs, align 4
  %cmp4 = icmp slt i32 %inc, %39
  br i1 %cmp4, label %for.body5.for.body5_crit_edge, label %for.body5.cleanup_crit_edge

for.body5.cleanup_crit_edge:                      ; preds = %for.body5
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

for.body5.for.body5_crit_edge:                    ; preds = %for.body5
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body5

cleanup:                                          ; preds = %for.body5.cleanup_crit_edge, %if.end.cleanup_crit_edge, %for.body.cleanup_crit_edge
  %40 = ptrtoint ptr %.pn65 to i32
  call void @__asan_load4_noabort(i32 %40)
  %.pn = load ptr, ptr %.pn65, align 8
  %cmp.not = icmp eq ptr %.pn, %t_items
  br i1 %cmp.not, label %cleanup.for.end17_crit_edge, label %cleanup.for.body_crit_edge

cleanup.for.body_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

cleanup.for.end17_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end17

for.end17:                                        ; preds = %cleanup.for.end17_crit_edge, %entry.for.end17_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xfs_hex_dump(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @xlog_write(ptr noundef %log, ptr noundef %ctx, ptr noundef readonly %log_vector, ptr noundef %ticket, i32 noundef %optype) local_unnamed_addr #1 align 64 {
entry:
  %iclog = alloca ptr, align 4
  %contwr = alloca i32, align 4
  %log_offset = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %iclog) #16
  %0 = ptrtoint ptr %iclog to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr null, ptr %iclog, align 4
  %lv_iovecp = getelementptr inbounds %struct.xfs_log_vec, ptr %log_vector, i32 0, i32 2
  %1 = ptrtoint ptr %lv_iovecp to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %lv_iovecp, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %contwr) #16
  %3 = ptrtoint ptr %contwr to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %contwr, align 4
  %t_curr_res = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 4
  %4 = ptrtoint ptr %t_curr_res to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %t_curr_res, align 4
  %sub = add i32 %5, -12
  store i32 %sub, ptr %t_curr_res, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp = icmp slt i32 %sub, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %6 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %log, align 128
  tail call void (ptr, i32, ptr, ...) @xfs_alert_tag(ptr noundef %7, i32 noundef 2, ptr noundef nonnull @.str.75) #16
  %8 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %log, align 128
  tail call void @xlog_print_tic_res(ptr noundef %9, ptr noundef %ticket)
  %10 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %log, align 128
  tail call void @xfs_do_force_shutdown(ptr noundef %11, i32 noundef 2, ptr noundef nonnull @.str.1, i32 noundef 2491) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %and.i = and i32 %optype, 1
  %tobool1.not33.i = icmp eq ptr %log_vector, null
  br i1 %tobool1.not33.i, label %xlog_write_calc_vec_length.exit.thread, label %for.body.lr.ph.i

xlog_write_calc_vec_length.exit.thread:           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %t_res_num_ophdrs.i463 = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 11
  %12 = ptrtoint ptr %t_res_num_ophdrs.i463 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %t_res_num_ophdrs.i463, align 4
  %add13.i464 = add i32 %13, %and.i
  store i32 %add13.i464, ptr %t_res_num_ophdrs.i463, align 4
  %mul.i465 = mul nuw nsw i32 %and.i, 12
  br label %while.end133

for.body.lr.ph.i:                                 ; preds = %if.end
  %t_res_num.i.i = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 10
  %t_res_arr_sum.i.i = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 12
  %t_res_o_flow.i.i = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 13
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc11.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %lv.036.i = phi ptr [ %log_vector, %for.body.lr.ph.i ], [ %41, %for.inc11.i.for.body.i_crit_edge ]
  %len.035.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %len.2.i, %for.inc11.i.for.body.i_crit_edge ]
  %headers.134.i = phi i32 [ %and.i, %for.body.lr.ph.i ], [ %headers.2.i, %for.inc11.i.for.body.i_crit_edge ]
  %lv_buf_len.i = getelementptr inbounds %struct.xfs_log_vec, ptr %lv.036.i, i32 0, i32 6
  %14 = ptrtoint ptr %lv_buf_len.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %lv_buf_len.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %15)
  %cmp.i = icmp eq i32 %15, -1
  br i1 %cmp.i, label %for.body.i.for.inc11.i_crit_edge, label %if.end3.i

for.body.i.for.inc11.i_crit_edge:                 ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc11.i

if.end3.i:                                        ; preds = %for.body.i
  %lv_niovecs.i = getelementptr inbounds %struct.xfs_log_vec, ptr %lv.036.i, i32 0, i32 1
  %16 = ptrtoint ptr %lv_niovecs.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %lv_niovecs.i, align 4
  %add.i = add i32 %17, %headers.134.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %cmp630.i = icmp sgt i32 %17, 0
  br i1 %cmp630.i, label %for.body7.lr.ph.i, label %if.end3.i.for.inc11.i_crit_edge

if.end3.i.for.inc11.i_crit_edge:                  ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc11.i

for.body7.lr.ph.i:                                ; preds = %if.end3.i
  %lv_iovecp.i = getelementptr inbounds %struct.xfs_log_vec, ptr %lv.036.i, i32 0, i32 2
  br label %for.body7.i

for.body7.i:                                      ; preds = %xlog_tic_add_region.exit.i.for.body7.i_crit_edge, %for.body7.lr.ph.i
  %i.032.i = phi i32 [ 0, %for.body7.lr.ph.i ], [ %inc10.i, %xlog_tic_add_region.exit.i.for.body7.i_crit_edge ]
  %len.131.i = phi i32 [ %len.035.i, %for.body7.lr.ph.i ], [ %add8.i, %xlog_tic_add_region.exit.i.for.body7.i_crit_edge ]
  %18 = ptrtoint ptr %lv_iovecp.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %lv_iovecp.i, align 4
  %i_len.i = getelementptr %struct.xfs_log_iovec, ptr %19, i32 %i.032.i, i32 1
  %20 = ptrtoint ptr %i_len.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %i_len.i, align 4
  %add8.i = add i32 %21, %len.131.i
  %i_type.i = getelementptr %struct.xfs_log_iovec, ptr %19, i32 %i.032.i, i32 2
  %22 = ptrtoint ptr %i_type.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %i_type.i, align 4
  %24 = ptrtoint ptr %t_res_num.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %t_res_num.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %25)
  %cmp.i.i = icmp eq i32 %25, 15
  br i1 %cmp.i.i, label %if.then.i.i, label %for.body7.i.xlog_tic_add_region.exit.i_crit_edge

for.body7.i.xlog_tic_add_region.exit.i_crit_edge: ; preds = %for.body7.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_tic_add_region.exit.i

if.then.i.i:                                      ; preds = %for.body7.i
  call void @__sanitizer_cov_trace_pc() #18
  %26 = ptrtoint ptr %t_res_arr_sum.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %t_res_arr_sum.i.i, align 4
  %28 = ptrtoint ptr %t_res_o_flow.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %t_res_o_flow.i.i, align 4
  %add.i.i = add i32 %29, %27
  store i32 %add.i.i, ptr %t_res_o_flow.i.i, align 4
  %30 = ptrtoint ptr %t_res_num.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %t_res_num.i.i, align 4
  store i32 0, ptr %t_res_arr_sum.i.i, align 4
  br label %xlog_tic_add_region.exit.i

xlog_tic_add_region.exit.i:                       ; preds = %if.then.i.i, %for.body7.i.xlog_tic_add_region.exit.i_crit_edge
  %31 = ptrtoint ptr %t_res_num.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %t_res_num.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.xlog_ticket, ptr %ticket, i32 0, i32 14, i32 %32
  %33 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %21, ptr %arrayidx.i.i, align 4
  %34 = load i32, ptr %t_res_num.i.i, align 4
  %r_type.i.i = getelementptr %struct.xlog_ticket, ptr %ticket, i32 0, i32 14, i32 %34, i32 1
  %35 = ptrtoint ptr %r_type.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %23, ptr %r_type.i.i, align 4
  %36 = ptrtoint ptr %t_res_arr_sum.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %t_res_arr_sum.i.i, align 4
  %add8.i.i = add i32 %37, %21
  store i32 %add8.i.i, ptr %t_res_arr_sum.i.i, align 4
  %inc.i.i = add i32 %34, 1
  store i32 %inc.i.i, ptr %t_res_num.i.i, align 4
  %inc10.i = add nuw nsw i32 %i.032.i, 1
  %38 = ptrtoint ptr %lv_niovecs.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %lv_niovecs.i, align 4
  %cmp6.i = icmp slt i32 %inc10.i, %39
  br i1 %cmp6.i, label %xlog_tic_add_region.exit.i.for.body7.i_crit_edge, label %xlog_tic_add_region.exit.i.for.inc11.i_crit_edge

xlog_tic_add_region.exit.i.for.inc11.i_crit_edge: ; preds = %xlog_tic_add_region.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc11.i

xlog_tic_add_region.exit.i.for.body7.i_crit_edge: ; preds = %xlog_tic_add_region.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body7.i

for.inc11.i:                                      ; preds = %xlog_tic_add_region.exit.i.for.inc11.i_crit_edge, %if.end3.i.for.inc11.i_crit_edge, %for.body.i.for.inc11.i_crit_edge
  %headers.2.i = phi i32 [ %headers.134.i, %for.body.i.for.inc11.i_crit_edge ], [ %add.i, %if.end3.i.for.inc11.i_crit_edge ], [ %add.i, %xlog_tic_add_region.exit.i.for.inc11.i_crit_edge ]
  %len.2.i = phi i32 [ %len.035.i, %for.body.i.for.inc11.i_crit_edge ], [ %len.035.i, %if.end3.i.for.inc11.i_crit_edge ], [ %add8.i, %xlog_tic_add_region.exit.i.for.inc11.i_crit_edge ]
  %40 = ptrtoint ptr %lv.036.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %lv.036.i, align 4
  %tobool1.not.i = icmp eq ptr %41, null
  br i1 %tobool1.not.i, label %xlog_write_calc_vec_length.exit, label %for.inc11.i.for.body.i_crit_edge

for.inc11.i.for.body.i_crit_edge:                 ; preds = %for.inc11.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body.i

xlog_write_calc_vec_length.exit:                  ; preds = %for.inc11.i
  %t_res_num_ophdrs.i = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 11
  %42 = ptrtoint ptr %t_res_num_ophdrs.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %t_res_num_ophdrs.i, align 4
  %add13.i = add i32 %43, %headers.2.i
  store i32 %add13.i, ptr %t_res_num_ophdrs.i, align 4
  %mul.i = mul i32 %headers.2.i, 12
  %add14.i = add i32 %len.2.i, %mul.i
  br i1 %tobool1.not33.i, label %xlog_write_calc_vec_length.exit.while.end133_crit_edge, label %land.rhs.lr.ph

xlog_write_calc_vec_length.exit.while.end133_crit_edge: ; preds = %xlog_write_calc_vec_length.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end133

land.rhs.lr.ph:                                   ; preds = %xlog_write_calc_vec_length.exit
  %t_tid.i = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 2
  %t_clientid.i = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 8
  %l_icloglock.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 21
  %dep_map.i.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 21, i32 0, i32 0, i32 4
  %l_opstate.i.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 6
  %lv_niovecs527 = getelementptr inbounds %struct.xfs_log_vec, ptr %log_vector, i32 0, i32 1
  %44 = ptrtoint ptr %lv_niovecs527 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %lv_niovecs527, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %45)
  %46 = icmp sgt i32 %45, -1
  br i1 %46, label %land.rhs.lr.ph.while.body_crit_edge, label %land.rhs.lr.ph.while.end133_crit_edge

land.rhs.lr.ph.while.end133_crit_edge:            ; preds = %land.rhs.lr.ph
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end133

land.rhs.lr.ph.while.body_crit_edge:              ; preds = %land.rhs.lr.ph
  br label %while.body

while.body:                                       ; preds = %cleanup129.while.body_crit_edge, %land.rhs.lr.ph.while.body_crit_edge
  %len.0442540 = phi i32 [ %len.8, %cleanup129.while.body_crit_edge ], [ %add14.i, %land.rhs.lr.ph.while.body_crit_edge ]
  %partial_copy.0443539 = phi i32 [ %partial_copy.9, %cleanup129.while.body_crit_edge ], [ 0, %land.rhs.lr.ph.while.body_crit_edge ]
  %partial_copy_len.0444538 = phi i32 [ %partial_copy_len.9, %cleanup129.while.body_crit_edge ], [ 0, %land.rhs.lr.ph.while.body_crit_edge ]
  %record_cnt.0445537 = phi i32 [ %record_cnt.9, %cleanup129.while.body_crit_edge ], [ 0, %land.rhs.lr.ph.while.body_crit_edge ]
  %data_cnt.0446536 = phi i32 [ %data_cnt.8, %cleanup129.while.body_crit_edge ], [ 0, %land.rhs.lr.ph.while.body_crit_edge ]
  %ctx.addr.0447535 = phi ptr [ null, %cleanup129.while.body_crit_edge ], [ %ctx, %land.rhs.lr.ph.while.body_crit_edge ]
  %optype.addr.0448534 = phi i32 [ %optype.addr.7, %cleanup129.while.body_crit_edge ], [ %optype, %land.rhs.lr.ph.while.body_crit_edge ]
  %lv.0449533 = phi ptr [ %lv.5, %cleanup129.while.body_crit_edge ], [ %log_vector, %land.rhs.lr.ph.while.body_crit_edge ]
  %vecp.0450532 = phi ptr [ %vecp.5, %cleanup129.while.body_crit_edge ], [ %2, %land.rhs.lr.ph.while.body_crit_edge ]
  %index.0451531 = phi i32 [ %index.5, %cleanup129.while.body_crit_edge ], [ 0, %land.rhs.lr.ph.while.body_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %log_offset) #16
  %47 = ptrtoint ptr %log_offset to i32
  call void @__asan_store4_noabort(i32 %47)
  store i32 -1, ptr %log_offset, align 4, !annotation !430
  %call7 = call fastcc i32 @xlog_state_get_iclog_space(ptr noundef %log, i32 noundef %len.0442540, ptr noundef nonnull %iclog, ptr noundef %ticket, ptr noundef nonnull %contwr, ptr noundef nonnull %log_offset)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.end10, label %while.body.cleanup129.thread_crit_edge

while.body.cleanup129.thread_crit_edge:           ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup129.thread

if.end10:                                         ; preds = %while.body
  %48 = ptrtoint ptr %log_offset to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %log_offset, align 4
  %50 = ptrtoint ptr %iclog to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %iclog, align 4
  %ic_size = getelementptr inbounds %struct.xlog_in_core, ptr %51, i32 0, i32 5
  %52 = ptrtoint ptr %ic_size to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %ic_size, align 4
  %sub11 = add i32 %53, -1
  call void @__sanitizer_cov_trace_cmp4(i32 %49, i32 %sub11)
  %cmp12.not = icmp ugt i32 %49, %sub11
  br i1 %cmp12.not, label %cond.false, label %if.end10.cond.end_crit_edge, !prof !437

if.end10.cond.end_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.false:                                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.76, ptr noundef nonnull @.str.1, i32 noundef 2504) #16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end10.cond.end_crit_edge
  %ic_datap = getelementptr inbounds %struct.xlog_in_core, ptr %51, i32 0, i32 9
  %54 = ptrtoint ptr %ic_datap to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %ic_datap, align 4
  %add.ptr = getelementptr i8, ptr %55, i32 %49
  %tobool15.not = icmp eq ptr %ctx.addr.0447535, null
  br i1 %tobool15.not, label %cond.end.land.rhs20.preheader_crit_edge, label %if.then16

cond.end.land.rhs20.preheader_crit_edge:          ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs20.preheader

if.then16:                                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @xlog_cil_set_ctx_write_state(ptr noundef nonnull %ctx.addr.0447535, ptr noundef %51) #16
  br label %land.rhs20.preheader

land.rhs20.preheader:                             ; preds = %if.then16, %cond.end.land.rhs20.preheader_crit_edge
  br label %land.rhs20

land.rhs20:                                       ; preds = %if.end116.land.rhs20_crit_edge, %land.rhs20.preheader
  %index.1404 = phi i32 [ %index.2, %if.end116.land.rhs20_crit_edge ], [ %index.0451531, %land.rhs20.preheader ]
  %vecp.1401 = phi ptr [ %vecp.2, %if.end116.land.rhs20_crit_edge ], [ %vecp.0450532, %land.rhs20.preheader ]
  %lv.1398 = phi ptr [ %lv.2, %if.end116.land.rhs20_crit_edge ], [ %lv.0449533, %land.rhs20.preheader ]
  %optype.addr.1397 = phi i32 [ %optype.addr.4, %if.end116.land.rhs20_crit_edge ], [ %optype.addr.0448534, %land.rhs20.preheader ]
  %ptr.0396 = phi ptr [ %ptr.4, %if.end116.land.rhs20_crit_edge ], [ %add.ptr, %land.rhs20.preheader ]
  %data_cnt.1395 = phi i32 [ %data_cnt.5, %if.end116.land.rhs20_crit_edge ], [ %data_cnt.0446536, %land.rhs20.preheader ]
  %record_cnt.1394 = phi i32 [ %record_cnt.6, %if.end116.land.rhs20_crit_edge ], [ %record_cnt.0445537, %land.rhs20.preheader ]
  %partial_copy_len.1393 = phi i32 [ %partial_copy_len.6, %if.end116.land.rhs20_crit_edge ], [ %partial_copy_len.0444538, %land.rhs20.preheader ]
  %partial_copy.1392 = phi i32 [ %partial_copy.6, %if.end116.land.rhs20_crit_edge ], [ %partial_copy.0443539, %land.rhs20.preheader ]
  %len.1391 = phi i32 [ %len.5, %if.end116.land.rhs20_crit_edge ], [ %len.0442540, %land.rhs20.preheader ]
  %lv_niovecs21 = getelementptr inbounds %struct.xfs_log_vec, ptr %lv.1398, i32 0, i32 1
  %56 = ptrtoint ptr %lv_niovecs21 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %lv_niovecs21, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %57)
  %tobool22.not = icmp eq i32 %57, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %index.1404, i32 %57)
  %cmp25 = icmp slt i32 %index.1404, %57
  %or.cond209 = select i1 %tobool22.not, i1 true, i1 %cmp25
  br i1 %or.cond209, label %while.body28, label %land.rhs20.cleanup129_crit_edge

land.rhs20.cleanup129_crit_edge:                  ; preds = %land.rhs20
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup129

while.body28:                                     ; preds = %land.rhs20
  %lv_buf_len = getelementptr inbounds %struct.xfs_log_vec, ptr %lv.1398, i32 0, i32 6
  %58 = ptrtoint ptr %lv_buf_len to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %lv_buf_len, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %59)
  %cmp29 = icmp eq i32 %59, -1
  br i1 %cmp29, label %if.then30, label %if.end42

if.then30:                                        ; preds = %while.body28
  br i1 %tobool22.not, label %if.then30.next_lv_crit_edge, label %cond.false40, !prof !432

if.then30.next_lv_crit_edge:                      ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #18
  br label %next_lv

cond.false40:                                     ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.77, ptr noundef nonnull @.str.1, i32 noundef 2531) #16
  br label %next_lv

if.end42:                                         ; preds = %while.body28
  %arrayidx = getelementptr %struct.xfs_log_iovec, ptr %vecp.1401, i32 %index.1404
  %i_len = getelementptr %struct.xfs_log_iovec, ptr %vecp.1401, i32 %index.1404, i32 1
  %60 = ptrtoint ptr %i_len to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load i32, ptr %i_len, align 4
  %rem = and i32 %61, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem)
  %cmp43 = icmp eq i32 %rem, 0
  br i1 %cmp43, label %if.end42.cond.end52_crit_edge, label %cond.false51, !prof !432

if.end42.cond.end52_crit_edge:                    ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end52

cond.false51:                                     ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.78, ptr noundef nonnull @.str.1, i32 noundef 2537) #16
  br label %cond.end52

cond.end52:                                       ; preds = %cond.false51, %if.end42.cond.end52_crit_edge
  %62 = ptrtoint ptr %ptr.0396 to i32
  %rem53 = and i32 %62, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem53)
  %cmp54 = icmp eq i32 %rem53, 0
  br i1 %cmp54, label %cond.end52.cond.end63_crit_edge, label %cond.false62, !prof !432

cond.end52.cond.end63_crit_edge:                  ; preds = %cond.end52
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end63

cond.false62:                                     ; preds = %cond.end52
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.79, ptr noundef nonnull @.str.1, i32 noundef 2538) #16
  br label %cond.end63

cond.end63:                                       ; preds = %cond.false62, %cond.end52.cond.end63_crit_edge
  %and = and i32 %optype.addr.1397, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool64.not = icmp eq i32 %and, 0
  br i1 %tobool64.not, label %cond.end63.if.end67_crit_edge, label %if.then65

cond.end63.if.end67_crit_edge:                    ; preds = %cond.end63
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end67

if.then65:                                        ; preds = %cond.end63
  call void @__sanitizer_cov_trace_pc() #18
  %63 = ptrtoint ptr %t_tid.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %t_tid.i, align 4
  %65 = ptrtoint ptr %ptr.0396 to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %64, ptr %ptr.0396, align 4
  %66 = ptrtoint ptr %t_clientid.i to i32
  call void @__asan_load1_noabort(i32 %66)
  %67 = load i8, ptr %t_clientid.i, align 2
  %oh_clientid.i = getelementptr inbounds %struct.xlog_op_header, ptr %ptr.0396, i32 0, i32 2
  %68 = ptrtoint ptr %oh_clientid.i to i32
  call void @__asan_store1_noabort(i32 %68)
  store i8 %67, ptr %oh_clientid.i, align 4
  %oh_len.i = getelementptr inbounds %struct.xlog_op_header, ptr %ptr.0396, i32 0, i32 1
  %69 = ptrtoint ptr %oh_len.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store i32 0, ptr %oh_len.i, align 4
  %oh_flags.i = getelementptr inbounds %struct.xlog_op_header, ptr %ptr.0396, i32 0, i32 3
  %70 = ptrtoint ptr %oh_flags.i to i32
  call void @__asan_store1_noabort(i32 %70)
  store i8 1, ptr %oh_flags.i, align 1
  %oh_res2.i = getelementptr inbounds %struct.xlog_op_header, ptr %ptr.0396, i32 0, i32 4
  %71 = ptrtoint ptr %oh_res2.i to i32
  call void @__asan_store2_noabort(i32 %71)
  store i16 0, ptr %oh_res2.i, align 2
  %add.ptr.i = getelementptr i8, ptr %ptr.0396, i32 12
  %sub.i = add i32 %len.1391, -12
  %72 = ptrtoint ptr %log_offset to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %log_offset, align 4
  %add.i210 = add i32 %73, 12
  store i32 %add.i210, ptr %log_offset, align 4
  %and66 = and i32 %optype.addr.1397, -2
  br label %if.end67

if.end67:                                         ; preds = %if.then65, %cond.end63.if.end67_crit_edge
  %len.2 = phi i32 [ %len.1391, %cond.end63.if.end67_crit_edge ], [ %sub.i, %if.then65 ]
  %ptr.1 = phi ptr [ %ptr.0396, %cond.end63.if.end67_crit_edge ], [ %add.ptr.i, %if.then65 ]
  %optype.addr.2 = phi i32 [ %optype.addr.1397, %cond.end63.if.end67_crit_edge ], [ %and66, %if.then65 ]
  %74 = ptrtoint ptr %t_tid.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load i32, ptr %t_tid.i, align 4
  %76 = ptrtoint ptr %ptr.1 to i32
  call void @__asan_store4_noabort(i32 %76)
  store i32 %75, ptr %ptr.1, align 4
  %77 = ptrtoint ptr %t_clientid.i to i32
  call void @__asan_load1_noabort(i32 %77)
  %78 = load i8, ptr %t_clientid.i, align 2
  %oh_clientid.i213 = getelementptr inbounds %struct.xlog_op_header, ptr %ptr.1, i32 0, i32 2
  %79 = ptrtoint ptr %oh_clientid.i213 to i32
  call void @__asan_store1_noabort(i32 %79)
  store i8 %78, ptr %oh_clientid.i213, align 4
  %oh_res2.i214 = getelementptr inbounds %struct.xlog_op_header, ptr %ptr.1, i32 0, i32 4
  %80 = ptrtoint ptr %oh_res2.i214 to i32
  call void @__asan_store2_noabort(i32 %80)
  store i16 0, ptr %oh_res2.i214, align 2
  %conv.i = trunc i32 %optype.addr.2 to i8
  %oh_flags.i215 = getelementptr inbounds %struct.xlog_op_header, ptr %ptr.1, i32 0, i32 3
  %81 = ptrtoint ptr %oh_flags.i215 to i32
  call void @__asan_store1_noabort(i32 %81)
  store i8 %conv.i, ptr %oh_flags.i215, align 1
  %82 = zext i8 %78 to i64
  call void @__sanitizer_cov_trace_switch(i64 %82, ptr @__sancov_gen_cov_switch_values.160)
  switch i8 %78, label %xlog_write_setup_ophdr.exit.thread [
    i8 105, label %if.end67.xlog_write_setup_ophdr.exit_crit_edge
    i8 2, label %if.end67.xlog_write_setup_ophdr.exit_crit_edge558
    i8 -86, label %if.end67.xlog_write_setup_ophdr.exit_crit_edge559
  ]

if.end67.xlog_write_setup_ophdr.exit_crit_edge559: ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_write_setup_ophdr.exit

if.end67.xlog_write_setup_ophdr.exit_crit_edge558: ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_write_setup_ophdr.exit

if.end67.xlog_write_setup_ophdr.exit_crit_edge:   ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_write_setup_ophdr.exit

xlog_write_setup_ophdr.exit.thread:               ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #18
  %conv2.i = zext i8 %78 to i32
  %83 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %log, align 128
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %84, ptr noundef nonnull @.str.146, i32 noundef %conv2.i, ptr noundef %ticket) #16
  br label %cleanup129.thread

xlog_write_setup_ophdr.exit:                      ; preds = %if.end67.xlog_write_setup_ophdr.exit_crit_edge, %if.end67.xlog_write_setup_ophdr.exit_crit_edge558, %if.end67.xlog_write_setup_ophdr.exit_crit_edge559
  %tobool69.not = icmp eq ptr %ptr.1, null
  br i1 %tobool69.not, label %xlog_write_setup_ophdr.exit.cleanup129.thread_crit_edge, label %if.end71

xlog_write_setup_ophdr.exit.cleanup129.thread_crit_edge: ; preds = %xlog_write_setup_ophdr.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup129.thread

if.end71:                                         ; preds = %xlog_write_setup_ophdr.exit
  %add.ptr.i216 = getelementptr i8, ptr %ptr.1, i32 12
  %sub.i217 = add i32 %len.2, -12
  %85 = ptrtoint ptr %log_offset to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load i32, ptr %log_offset, align 4
  %add.i218 = add i32 %86, 12
  store i32 %add.i218, ptr %log_offset, align 4
  %87 = ptrtoint ptr %iclog to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %iclog, align 4
  %ic_size72 = getelementptr inbounds %struct.xlog_in_core, ptr %88, i32 0, i32 5
  %89 = ptrtoint ptr %ic_size72 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %ic_size72, align 4
  %sub73 = sub i32 %90, %add.i218
  %91 = ptrtoint ptr %i_len to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %i_len, align 4
  %sub.i219 = sub i32 %92, %partial_copy_len.1393
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i219, i32 %sub73)
  %cmp.not.i = icmp sgt i32 %sub.i219, %sub73
  %oh_len4.i = getelementptr inbounds %struct.xlog_op_header, ptr %ptr.1, i32 0, i32 1
  br i1 %cmp.not.i, label %if.end3.i222, label %if.then.i

if.then.i:                                        ; preds = %if.end71
  %93 = ptrtoint ptr %oh_len4.i to i32
  call void @__asan_store4_noabort(i32 %93)
  store i32 %sub.i219, ptr %oh_len4.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %partial_copy.1392)
  %tobool.not.i = icmp eq i32 %partial_copy.1392, 0
  br i1 %tobool.not.i, label %if.then.i.xlog_write_setup_copy.exit_crit_edge, label %if.then1.i

if.then.i.xlog_write_setup_copy.exit_crit_edge:   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_write_setup_copy.exit

if.then1.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %94 = ptrtoint ptr %oh_flags.i215 to i32
  call void @__asan_load1_noabort(i32 %94)
  %95 = load i8, ptr %oh_flags.i215, align 1
  %96 = or i8 %95, 24
  store i8 %96, ptr %oh_flags.i215, align 1
  br label %xlog_write_setup_copy.exit

if.end3.i222:                                     ; preds = %if.end71
  call void @__sanitizer_cov_trace_pc() #18
  %97 = ptrtoint ptr %oh_len4.i to i32
  call void @__asan_store4_noabort(i32 %97)
  store i32 %sub73, ptr %oh_len4.i, align 4
  %98 = ptrtoint ptr %oh_flags.i215 to i32
  call void @__asan_load1_noabort(i32 %98)
  %99 = load i8, ptr %oh_flags.i215, align 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %partial_copy.1392)
  %tobool9.not.i = icmp eq i32 %partial_copy.1392, 0
  %spec.select.v = select i1 %tobool9.not.i, i8 4, i8 12
  %spec.select = or i8 %99, %spec.select.v
  %100 = ptrtoint ptr %oh_flags.i215 to i32
  call void @__asan_store1_noabort(i32 %100)
  store i8 %spec.select, ptr %oh_flags.i215, align 1
  %add.i223 = add i32 %sub73, %partial_copy_len.1393
  %inc.i = add i32 %partial_copy.1392, 1
  %101 = ptrtoint ptr %t_curr_res to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load i32, ptr %t_curr_res, align 4
  %sub16.i = add i32 %102, -12
  store i32 %sub16.i, ptr %t_curr_res, align 4
  %103 = ptrtoint ptr %t_res_num_ophdrs.i to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load i32, ptr %t_res_num_ophdrs.i, align 4
  %inc17.i = add i32 %104, 1
  store i32 %inc17.i, ptr %t_res_num_ophdrs.i, align 4
  br label %xlog_write_setup_copy.exit

xlog_write_setup_copy.exit:                       ; preds = %if.end3.i222, %if.then1.i, %if.then.i.xlog_write_setup_copy.exit_crit_edge
  %partial_copy.2 = phi i32 [ %inc.i, %if.end3.i222 ], [ 0, %if.then1.i ], [ 0, %if.then.i.xlog_write_setup_copy.exit_crit_edge ]
  %partial_copy_len.2 = phi i32 [ %add.i223, %if.end3.i222 ], [ 0, %if.then1.i ], [ 0, %if.then.i.xlog_write_setup_copy.exit_crit_edge ]
  %copy_len.0 = phi i32 [ %sub73, %if.end3.i222 ], [ %sub.i219, %if.then1.i ], [ %sub.i219, %if.then.i.xlog_write_setup_copy.exit_crit_edge ]
  %retval.0.i225 = phi i32 [ 12, %if.end3.i222 ], [ 0, %if.then1.i ], [ 0, %if.then.i.xlog_write_setup_copy.exit_crit_edge ]
  %add = add i32 %sub.i217, %retval.0.i225
  tail call fastcc void @xlog_verify_dest_ptr(ptr noundef %log, ptr noundef %add.ptr.i216)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %copy_len.0)
  %cmp76 = icmp sgt i32 %copy_len.0, -1
  br i1 %cmp76, label %cond.end85, label %cond.end85.thread, !prof !432

cond.end85.thread:                                ; preds = %xlog_write_setup_copy.exit
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.80, ptr noundef nonnull @.str.1, i32 noundef 2576) #16
  br label %if.end89

cond.end85:                                       ; preds = %xlog_write_setup_copy.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %copy_len.0)
  %cmp86.not = icmp eq i32 %copy_len.0, 0
  br i1 %cmp86.not, label %cond.end85.if.end89_crit_edge, label %if.then87

cond.end85.if.end89_crit_edge:                    ; preds = %cond.end85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end89

if.then87:                                        ; preds = %cond.end85
  call void @__sanitizer_cov_trace_pc() #18
  %105 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %arrayidx, align 4
  %add.ptr88 = getelementptr i8, ptr %106, i32 %partial_copy_len.1393
  %107 = call ptr @memcpy(ptr %add.ptr.i216, ptr %add.ptr88, i32 %copy_len.0)
  %add.ptr.i226 = getelementptr i8, ptr %add.ptr.i216, i32 %copy_len.0
  %sub.i227 = sub i32 %add, %copy_len.0
  %108 = ptrtoint ptr %log_offset to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load i32, ptr %log_offset, align 4
  %add.i228 = add i32 %109, %copy_len.0
  store i32 %add.i228, ptr %log_offset, align 4
  br label %if.end89

if.end89:                                         ; preds = %if.then87, %cond.end85.if.end89_crit_edge, %cond.end85.thread
  %len.3 = phi i32 [ %sub.i227, %if.then87 ], [ %add, %cond.end85.if.end89_crit_edge ], [ %add, %cond.end85.thread ]
  %ptr.2 = phi ptr [ %add.ptr.i226, %if.then87 ], [ %add.ptr.i216, %cond.end85.if.end89_crit_edge ], [ %add.ptr.i216, %cond.end85.thread ]
  %record_cnt.2.v = select i1 %tobool64.not, i32 1, i32 2
  %record_cnt.2 = add i32 %record_cnt.2.v, %record_cnt.1394
  %copy_len.1.v = select i1 %tobool64.not, i32 12, i32 24
  %copy_len.1 = add i32 %copy_len.0, %copy_len.1.v
  %110 = ptrtoint ptr %contwr to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load i32, ptr %contwr, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %111)
  %tobool96.not = icmp eq i32 %111, 0
  %cond = select i1 %tobool96.not, i32 0, i32 %copy_len.1
  %add100 = add i32 %cond, %data_cnt.1395
  %112 = ptrtoint ptr %iclog to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %iclog, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %partial_copy.2)
  %tobool.not.i229 = icmp eq i32 %partial_copy.2, 0
  br i1 %tobool.not.i229, label %if.end.i234, label %if.then.i230

if.then.i230:                                     ; preds = %if.end89
  tail call void @_raw_spin_lock(ptr noundef %l_icloglock.i) #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %114 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %114)
  %tobool.not.i.i = icmp eq i32 %114, 0
  br i1 %tobool.not.i.i, label %if.then.i230.xlog_state_finish_copy.exit.i_crit_edge, label %land.rhs.i.i

if.then.i230.xlog_state_finish_copy.exit.i_crit_edge: ; preds = %if.then.i230
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_state_finish_copy.exit.i

land.rhs.i.i:                                     ; preds = %if.then.i230
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp.not.i.i, label %do.end.i.i, label %land.rhs.i.i.xlog_state_finish_copy.exit.i_crit_edge, !prof !437

land.rhs.i.i.xlog_state_finish_copy.exit.i_crit_edge: ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_state_finish_copy.exit.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 2113, i32 noundef 9, ptr noundef null) #16
  br label %xlog_state_finish_copy.exit.i

xlog_state_finish_copy.exit.i:                    ; preds = %do.end.i.i, %land.rhs.i.i.xlog_state_finish_copy.exit.i_crit_edge, %if.then.i230.xlog_state_finish_copy.exit.i_crit_edge
  %ic_data.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %113, i32 0, i32 13
  %115 = ptrtoint ptr %ic_data.i.i to i32
  call void @__asan_load4_noabort(i32 %115)
  %116 = load ptr, ptr %ic_data.i.i, align 4
  %h_num_logops.i.i = getelementptr inbounds %struct.xlog_rec_header, ptr %116, i32 0, i32 8
  %117 = ptrtoint ptr %h_num_logops.i.i to i32
  call void @__asan_load4_noabort(i32 %117)
  %118 = load i32, ptr %h_num_logops.i.i, align 4
  %add.i.i.i = add i32 %118, %record_cnt.2
  store i32 %add.i.i.i, ptr %h_num_logops.i.i, align 4
  %ic_offset.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %113, i32 0, i32 6
  %119 = ptrtoint ptr %ic_offset.i.i to i32
  call void @__asan_load4_noabort(i32 %119)
  %120 = load i32, ptr %ic_offset.i.i, align 8
  %add.i.i231 = add i32 %120, %add100
  store i32 %add.i.i231, ptr %ic_offset.i.i, align 8
  br label %xlog_write_copy_finish.exit

if.end.i234:                                      ; preds = %if.end89
  %121 = ptrtoint ptr %log_offset to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load i32, ptr %log_offset, align 4
  %ic_size.i = getelementptr inbounds %struct.xlog_in_core, ptr %113, i32 0, i32 5
  %123 = ptrtoint ptr %ic_size.i to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load i32, ptr %ic_size.i, align 4
  %sub.i232 = sub i32 %124, %122
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %sub.i232)
  %cmp.i233 = icmp ugt i32 %sub.i232, 12
  br i1 %cmp.i233, label %if.end.i234.if.end107_crit_edge, label %if.end2.i

if.end.i234.if.end107_crit_edge:                  ; preds = %if.end.i234
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end107

if.end2.i:                                        ; preds = %if.end.i234
  tail call void @_raw_spin_lock(ptr noundef %l_icloglock.i) #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %125 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %125)
  %tobool.not.i1.i = icmp eq i32 %125, 0
  br i1 %tobool.not.i1.i, label %if.end2.i.xlog_state_finish_copy.exit12.i_crit_edge, label %land.rhs.i5.i

if.end2.i.xlog_state_finish_copy.exit12.i_crit_edge: ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_state_finish_copy.exit12.i

land.rhs.i5.i:                                    ; preds = %if.end2.i
  %call.i.i3.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i.i, i32 noundef -1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i3.i)
  %cmp.not.i4.i = icmp eq i32 %call.i.i3.i, 0
  br i1 %cmp.not.i4.i, label %do.end.i6.i, label %land.rhs.i5.i.xlog_state_finish_copy.exit12.i_crit_edge, !prof !437

land.rhs.i5.i.xlog_state_finish_copy.exit12.i_crit_edge: ; preds = %land.rhs.i5.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_state_finish_copy.exit12.i

do.end.i6.i:                                      ; preds = %land.rhs.i5.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 2113, i32 noundef 9, ptr noundef null) #16
  br label %xlog_state_finish_copy.exit12.i

xlog_state_finish_copy.exit12.i:                  ; preds = %do.end.i6.i, %land.rhs.i5.i.xlog_state_finish_copy.exit12.i_crit_edge, %if.end2.i.xlog_state_finish_copy.exit12.i_crit_edge
  %ic_data.i7.i = getelementptr inbounds %struct.xlog_in_core, ptr %113, i32 0, i32 13
  %126 = ptrtoint ptr %ic_data.i7.i to i32
  call void @__asan_load4_noabort(i32 %126)
  %127 = load ptr, ptr %ic_data.i7.i, align 4
  %h_num_logops.i8.i = getelementptr inbounds %struct.xlog_rec_header, ptr %127, i32 0, i32 8
  %128 = ptrtoint ptr %h_num_logops.i8.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load i32, ptr %h_num_logops.i8.i, align 4
  %add.i.i9.i = add i32 %129, %record_cnt.2
  store i32 %add.i.i9.i, ptr %h_num_logops.i8.i, align 4
  %ic_offset.i10.i = getelementptr inbounds %struct.xlog_in_core, ptr %113, i32 0, i32 6
  %130 = ptrtoint ptr %ic_offset.i10.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load i32, ptr %ic_offset.i10.i, align 8
  %add.i11.i = add i32 %131, %add100
  store i32 %add.i11.i, ptr %ic_offset.i10.i, align 8
  %ic_state.i = getelementptr inbounds %struct.xlog_in_core, ptr %113, i32 0, i32 7
  %132 = ptrtoint ptr %ic_state.i to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %ic_state.i, align 4
  %134 = zext i32 %133 to i64
  call void @__sanitizer_cov_trace_switch(i64 %134, ptr @__sancov_gen_cov_switch_values.161)
  switch i32 %133, label %lor.rhs.i [
    i32 0, label %if.then5.i
    i32 1, label %xlog_state_finish_copy.exit12.i.xlog_write_copy_finish.exit_crit_edge
  ]

xlog_state_finish_copy.exit12.i.xlog_write_copy_finish.exit_crit_edge: ; preds = %xlog_state_finish_copy.exit12.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_write_copy_finish.exit

if.then5.i:                                       ; preds = %xlog_state_finish_copy.exit12.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @xlog_state_switch_iclogs(ptr noundef %log, ptr noundef %113, i32 noundef 0) #16
  br label %xlog_write_copy_finish.exit

lor.rhs.i:                                        ; preds = %xlog_state_finish_copy.exit12.i
  %135 = ptrtoint ptr %l_opstate.i.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load volatile i32, ptr %l_opstate.i.i, align 4
  %137 = and i32 %136, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %137)
  %tobool.i.not.i = icmp eq i32 %137, 0
  br i1 %tobool.i.not.i, label %cond.false.i, label %lor.rhs.i.xlog_write_copy_finish.exit_crit_edge, !prof !437

lor.rhs.i.xlog_write_copy_finish.exit_crit_edge:  ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_write_copy_finish.exit

cond.false.i:                                     ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.147, ptr noundef nonnull @.str.1, i32 noundef 2413) #16
  br label %xlog_write_copy_finish.exit

xlog_write_copy_finish.exit:                      ; preds = %cond.false.i, %lor.rhs.i.xlog_write_copy_finish.exit_crit_edge, %if.then5.i, %xlog_state_finish_copy.exit12.i.xlog_write_copy_finish.exit_crit_edge, %xlog_state_finish_copy.exit.i
  %partial_copy_len.3 = phi i32 [ 0, %cond.false.i ], [ 0, %lor.rhs.i.xlog_write_copy_finish.exit_crit_edge ], [ 0, %xlog_state_finish_copy.exit12.i.xlog_write_copy_finish.exit_crit_edge ], [ 0, %if.then5.i ], [ %partial_copy_len.2, %xlog_state_finish_copy.exit.i ]
  %call11.i = tail call i32 @xlog_state_release_iclog(ptr noundef %log, ptr noundef %113, i64 noundef 0) #16
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11.i)
  %tobool102.not = icmp eq i32 %call11.i, 0
  br i1 %tobool102.not, label %if.end104, label %xlog_write_copy_finish.exit.cleanup129.thread_crit_edge

xlog_write_copy_finish.exit.cleanup129.thread_crit_edge: ; preds = %xlog_write_copy_finish.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup129.thread

if.end104:                                        ; preds = %xlog_write_copy_finish.exit
  br i1 %tobool.not.i229, label %if.end104.if.end107_crit_edge, label %if.end104.cleanup129_crit_edge

if.end104.cleanup129_crit_edge:                   ; preds = %if.end104
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup129

if.end104.if.end107_crit_edge:                    ; preds = %if.end104
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end107

if.end107:                                        ; preds = %if.end104.if.end107_crit_edge, %if.end.i234.if.end107_crit_edge
  %partial_copy_len.4282292 = phi i32 [ %partial_copy_len.3, %if.end104.if.end107_crit_edge ], [ 0, %if.end.i234.if.end107_crit_edge ]
  %record_cnt.4283291 = phi i32 [ 0, %if.end104.if.end107_crit_edge ], [ %record_cnt.2, %if.end.i234.if.end107_crit_edge ]
  %data_cnt.3284290 = phi i32 [ 0, %if.end104.if.end107_crit_edge ], [ %add100, %if.end.i234.if.end107_crit_edge ]
  %inc108 = add i32 %index.1404, 1
  %138 = ptrtoint ptr %lv_niovecs21 to i32
  call void @__asan_load4_noabort(i32 %138)
  %139 = load i32, ptr %lv_niovecs21, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %inc108, i32 %139)
  %cmp110 = icmp eq i32 %inc108, %139
  br i1 %cmp110, label %if.end107.next_lv_crit_edge, label %if.end107.if.end116_crit_edge

if.end107.if.end116_crit_edge:                    ; preds = %if.end107
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end116

if.end107.next_lv_crit_edge:                      ; preds = %if.end107
  call void @__sanitizer_cov_trace_pc() #18
  br label %next_lv

next_lv:                                          ; preds = %if.end107.next_lv_crit_edge, %cond.false40, %if.then30.next_lv_crit_edge
  %len.4 = phi i32 [ %len.1391, %if.then30.next_lv_crit_edge ], [ %len.1391, %cond.false40 ], [ %len.3, %if.end107.next_lv_crit_edge ]
  %partial_copy.5 = phi i32 [ %partial_copy.1392, %if.then30.next_lv_crit_edge ], [ %partial_copy.1392, %cond.false40 ], [ 0, %if.end107.next_lv_crit_edge ]
  %partial_copy_len.5 = phi i32 [ %partial_copy_len.1393, %if.then30.next_lv_crit_edge ], [ %partial_copy_len.1393, %cond.false40 ], [ %partial_copy_len.4282292, %if.end107.next_lv_crit_edge ]
  %record_cnt.5 = phi i32 [ %record_cnt.1394, %if.then30.next_lv_crit_edge ], [ %record_cnt.1394, %cond.false40 ], [ %record_cnt.4283291, %if.end107.next_lv_crit_edge ]
  %data_cnt.4 = phi i32 [ %data_cnt.1395, %if.then30.next_lv_crit_edge ], [ %data_cnt.1395, %cond.false40 ], [ %data_cnt.3284290, %if.end107.next_lv_crit_edge ]
  %ptr.3 = phi ptr [ %ptr.0396, %if.then30.next_lv_crit_edge ], [ %ptr.0396, %cond.false40 ], [ %ptr.2, %if.end107.next_lv_crit_edge ]
  %optype.addr.3 = phi i32 [ %optype.addr.1397, %if.then30.next_lv_crit_edge ], [ %optype.addr.1397, %cond.false40 ], [ %optype.addr.2, %if.end107.next_lv_crit_edge ]
  %140 = ptrtoint ptr %lv.1398 to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %lv.1398, align 4
  %tobool112.not = icmp eq ptr %141, null
  br i1 %tobool112.not, label %if.end116.thread, label %if.then113

if.then113:                                       ; preds = %next_lv
  call void @__sanitizer_cov_trace_pc() #18
  %lv_iovecp114 = getelementptr inbounds %struct.xfs_log_vec, ptr %141, i32 0, i32 2
  %142 = ptrtoint ptr %lv_iovecp114 to i32
  call void @__asan_load4_noabort(i32 %142)
  %143 = load ptr, ptr %lv_iovecp114, align 4
  br label %if.end116

if.end116:                                        ; preds = %if.then113, %if.end107.if.end116_crit_edge
  %len.5 = phi i32 [ %len.4, %if.then113 ], [ %len.3, %if.end107.if.end116_crit_edge ]
  %partial_copy.6 = phi i32 [ %partial_copy.5, %if.then113 ], [ 0, %if.end107.if.end116_crit_edge ]
  %partial_copy_len.6 = phi i32 [ %partial_copy_len.5, %if.then113 ], [ %partial_copy_len.4282292, %if.end107.if.end116_crit_edge ]
  %record_cnt.6 = phi i32 [ %record_cnt.5, %if.then113 ], [ %record_cnt.4283291, %if.end107.if.end116_crit_edge ]
  %data_cnt.5 = phi i32 [ %data_cnt.4, %if.then113 ], [ %data_cnt.3284290, %if.end107.if.end116_crit_edge ]
  %ptr.4 = phi ptr [ %ptr.3, %if.then113 ], [ %ptr.2, %if.end107.if.end116_crit_edge ]
  %optype.addr.4 = phi i32 [ %optype.addr.3, %if.then113 ], [ %optype.addr.2, %if.end107.if.end116_crit_edge ]
  %lv.2 = phi ptr [ %141, %if.then113 ], [ %lv.1398, %if.end107.if.end116_crit_edge ]
  %vecp.2 = phi ptr [ %143, %if.then113 ], [ %vecp.1401, %if.end107.if.end116_crit_edge ]
  %index.2 = phi i32 [ 0, %if.then113 ], [ %inc108, %if.end107.if.end116_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %record_cnt.6)
  %cmp117 = icmp ne i32 %record_cnt.6, 0
  %brmerge = select i1 %cmp117, i1 true, i1 %cmp29
  br i1 %brmerge, label %if.end116.land.rhs20_crit_edge, label %if.end116.cleanup129_crit_edge

if.end116.cleanup129_crit_edge:                   ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup129

if.end116.land.rhs20_crit_edge:                   ; preds = %if.end116
  call void @__sanitizer_cov_trace_pc() #18
  br label %land.rhs20

if.end116.thread:                                 ; preds = %next_lv
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %record_cnt.5)
  %cmp117354 = icmp ne i32 %record_cnt.5, 0
  %brmerge356 = select i1 %cmp117354, i1 true, i1 %cmp29
  br i1 %brmerge356, label %cleanup129.thread478, label %if.end116.thread.cleanup129.thread_crit_edge

if.end116.thread.cleanup129.thread_crit_edge:     ; preds = %if.end116.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup129.thread

cleanup129.thread478:                             ; preds = %if.end116.thread
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %log_offset) #16
  br label %while.end133

cleanup129.thread:                                ; preds = %if.end116.thread.cleanup129.thread_crit_edge, %xlog_write_copy_finish.exit.cleanup129.thread_crit_edge, %xlog_write_setup_ophdr.exit.cleanup129.thread_crit_edge, %xlog_write_setup_ophdr.exit.thread, %while.body.cleanup129.thread_crit_edge
  %retval.4.ph = phi i32 [ -5, %xlog_write_setup_ophdr.exit.thread ], [ 0, %if.end116.thread.cleanup129.thread_crit_edge ], [ -5, %xlog_write_setup_ophdr.exit.cleanup129.thread_crit_edge ], [ %call11.i, %xlog_write_copy_finish.exit.cleanup129.thread_crit_edge ], [ %call7, %while.body.cleanup129.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %log_offset) #16
  br label %cleanup146

cleanup129:                                       ; preds = %if.end116.cleanup129_crit_edge, %if.end104.cleanup129_crit_edge, %land.rhs20.cleanup129_crit_edge
  %len.8 = phi i32 [ %len.5, %if.end116.cleanup129_crit_edge ], [ %len.3, %if.end104.cleanup129_crit_edge ], [ %len.1391, %land.rhs20.cleanup129_crit_edge ]
  %partial_copy.9 = phi i32 [ %partial_copy.6, %if.end116.cleanup129_crit_edge ], [ %partial_copy.2, %if.end104.cleanup129_crit_edge ], [ %partial_copy.1392, %land.rhs20.cleanup129_crit_edge ]
  %partial_copy_len.9 = phi i32 [ %partial_copy_len.6, %if.end116.cleanup129_crit_edge ], [ %partial_copy_len.3, %if.end104.cleanup129_crit_edge ], [ %partial_copy_len.1393, %land.rhs20.cleanup129_crit_edge ]
  %record_cnt.9 = phi i32 [ 0, %if.end116.cleanup129_crit_edge ], [ 0, %if.end104.cleanup129_crit_edge ], [ %record_cnt.1394, %land.rhs20.cleanup129_crit_edge ]
  %data_cnt.8 = phi i32 [ %data_cnt.5, %if.end116.cleanup129_crit_edge ], [ 0, %if.end104.cleanup129_crit_edge ], [ %data_cnt.1395, %land.rhs20.cleanup129_crit_edge ]
  %optype.addr.7 = phi i32 [ %optype.addr.4, %if.end116.cleanup129_crit_edge ], [ %optype.addr.2, %if.end104.cleanup129_crit_edge ], [ %optype.addr.1397, %land.rhs20.cleanup129_crit_edge ]
  %lv.5 = phi ptr [ %lv.2, %if.end116.cleanup129_crit_edge ], [ %lv.1398, %if.end104.cleanup129_crit_edge ], [ %lv.1398, %land.rhs20.cleanup129_crit_edge ]
  %vecp.5 = phi ptr [ %vecp.2, %if.end116.cleanup129_crit_edge ], [ %vecp.1401, %if.end104.cleanup129_crit_edge ], [ %vecp.1401, %land.rhs20.cleanup129_crit_edge ]
  %index.5 = phi i32 [ %index.2, %if.end116.cleanup129_crit_edge ], [ %index.1404, %if.end104.cleanup129_crit_edge ], [ %index.1404, %land.rhs20.cleanup129_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %log_offset) #16
  %lv_niovecs = getelementptr inbounds %struct.xfs_log_vec, ptr %lv.5, i32 0, i32 1
  %144 = ptrtoint ptr %lv_niovecs to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %lv_niovecs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %145)
  %tobool4.not = icmp eq i32 %145, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %index.5, i32 %145)
  %cmp6 = icmp slt i32 %index.5, %145
  %or.cond = select i1 %tobool4.not, i1 true, i1 %cmp6
  br i1 %or.cond, label %cleanup129.while.body_crit_edge, label %cleanup129.while.end133_crit_edge

cleanup129.while.end133_crit_edge:                ; preds = %cleanup129
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end133

cleanup129.while.body_crit_edge:                  ; preds = %cleanup129
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

while.end133:                                     ; preds = %cleanup129.while.end133_crit_edge, %cleanup129.thread478, %land.rhs.lr.ph.while.end133_crit_edge, %xlog_write_calc_vec_length.exit.while.end133_crit_edge, %xlog_write_calc_vec_length.exit.thread
  %len.0.lcssa = phi i32 [ %add14.i, %xlog_write_calc_vec_length.exit.while.end133_crit_edge ], [ %mul.i465, %xlog_write_calc_vec_length.exit.thread ], [ %len.4, %cleanup129.thread478 ], [ %add14.i, %land.rhs.lr.ph.while.end133_crit_edge ], [ %len.8, %cleanup129.while.end133_crit_edge ]
  %record_cnt.0.lcssa = phi i32 [ 0, %xlog_write_calc_vec_length.exit.while.end133_crit_edge ], [ 0, %xlog_write_calc_vec_length.exit.thread ], [ %record_cnt.5, %cleanup129.thread478 ], [ 0, %land.rhs.lr.ph.while.end133_crit_edge ], [ %record_cnt.9, %cleanup129.while.end133_crit_edge ]
  %data_cnt.0.lcssa = phi i32 [ 0, %xlog_write_calc_vec_length.exit.while.end133_crit_edge ], [ 0, %xlog_write_calc_vec_length.exit.thread ], [ %data_cnt.4, %cleanup129.thread478 ], [ 0, %land.rhs.lr.ph.while.end133_crit_edge ], [ %data_cnt.8, %cleanup129.while.end133_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %len.0.lcssa)
  %cmp134 = icmp eq i32 %len.0.lcssa, 0
  br i1 %cmp134, label %while.end133.cond.end143_crit_edge, label %cond.false142, !prof !432

while.end133.cond.end143_crit_edge:               ; preds = %while.end133
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end143

cond.false142:                                    ; preds = %while.end133
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.81, ptr noundef nonnull @.str.1, i32 noundef 2628) #16
  br label %cond.end143

cond.end143:                                      ; preds = %cond.false142, %while.end133.cond.end143_crit_edge
  %l_icloglock = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 21
  tail call void @_raw_spin_lock(ptr noundef %l_icloglock) #16
  %146 = ptrtoint ptr %iclog to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %iclog, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %148 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %148)
  %tobool.not.i236 = icmp eq i32 %148, 0
  br i1 %tobool.not.i236, label %cond.end143.xlog_state_finish_copy.exit_crit_edge, label %land.rhs.i

cond.end143.xlog_state_finish_copy.exit_crit_edge: ; preds = %cond.end143
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_state_finish_copy.exit

land.rhs.i:                                       ; preds = %cond.end143
  %dep_map.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 21, i32 0, i32 0, i32 4
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef %dep_map.i, i32 noundef -1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i237 = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i237, label %do.end.i, label %land.rhs.i.xlog_state_finish_copy.exit_crit_edge, !prof !437

land.rhs.i.xlog_state_finish_copy.exit_crit_edge: ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_state_finish_copy.exit

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 2113, i32 noundef 9, ptr noundef null) #16
  br label %xlog_state_finish_copy.exit

xlog_state_finish_copy.exit:                      ; preds = %do.end.i, %land.rhs.i.xlog_state_finish_copy.exit_crit_edge, %cond.end143.xlog_state_finish_copy.exit_crit_edge
  %ic_data.i = getelementptr inbounds %struct.xlog_in_core, ptr %147, i32 0, i32 13
  %149 = ptrtoint ptr %ic_data.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %ic_data.i, align 4
  %h_num_logops.i = getelementptr inbounds %struct.xlog_rec_header, ptr %150, i32 0, i32 8
  %151 = ptrtoint ptr %h_num_logops.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load i32, ptr %h_num_logops.i, align 4
  %add.i.i238 = add i32 %152, %record_cnt.0.lcssa
  store i32 %add.i.i238, ptr %h_num_logops.i, align 4
  %ic_offset.i = getelementptr inbounds %struct.xlog_in_core, ptr %147, i32 0, i32 6
  %153 = ptrtoint ptr %ic_offset.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %ic_offset.i, align 8
  %add.i239 = add i32 %154, %data_cnt.0.lcssa
  store i32 %add.i239, ptr %ic_offset.i, align 8
  %call144 = tail call i32 @xlog_state_release_iclog(ptr noundef %log, ptr noundef %147, i64 noundef 0)
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock) #16
  br label %cleanup146

cleanup146:                                       ; preds = %xlog_state_finish_copy.exit, %cleanup129.thread
  %retval.5 = phi i32 [ %call144, %xlog_state_finish_copy.exit ], [ %retval.4.ph, %cleanup129.thread ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %contwr) #16
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %iclog) #16
  ret i32 %retval.5
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xfs_alert_tag(ptr noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @xfs_do_force_shutdown(ptr noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @xlog_state_get_iclog_space(ptr noundef %log, i32 noundef %len, ptr nocapture noundef writeonly %iclogp, ptr nocapture noundef %ticket, ptr nocapture noundef writeonly %continued_write, ptr nocapture noundef writeonly %logoffsetp) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %l_icloglock = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 21
  tail call void @_raw_spin_lock(ptr noundef %l_icloglock) #16
  %l_opstate.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 6
  %0 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %l_opstate.i, align 4
  %2 = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.i.not125 = icmp eq i32 %2, 0
  br i1 %tobool.i.not125, label %if.end.lr.ph, label %entry.if.then_crit_edge

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

if.end.lr.ph:                                     ; preds = %entry
  %l_iclog = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 20
  %l_flush_wait = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 18
  %l_iclog_hsize = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 9
  %t_curr_res = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 4
  %t_res_num.i = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 10
  %t_res_arr_sum.i = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 12
  %t_res_o_flow.i = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 13
  %l_curr_cycle = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 22
  %l_curr_block = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 24
  br label %if.end

if.then:                                          ; preds = %restart.backedge.if.then_crit_edge, %entry.if.then_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock) #16
  br label %cleanup69

if.end:                                           ; preds = %restart.backedge.if.end_crit_edge, %if.end.lr.ph
  %3 = ptrtoint ptr %l_iclog to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %l_iclog, align 8
  %ic_state = getelementptr inbounds %struct.xlog_in_core, ptr %4, i32 0, i32 7
  %5 = ptrtoint ptr %ic_state to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %ic_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %cmp.not = icmp eq i32 %6, 0
  br i1 %cmp.not, label %if.end22, label %do.body3

do.body3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @xfsstats to i32))
  %7 = load ptr, ptr @xfsstats, align 4
  %8 = ptrtoint ptr %7 to i32
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx, align 4
  %add = add i32 %14, %8
  %15 = inttoptr i32 %add to ptr
  %xs_log_noiclogs = getelementptr inbounds %struct.__xfsstats, ptr %15, i32 0, i32 35
  %16 = ptrtoint ptr %xs_log_noiclogs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %xs_log_noiclogs, align 4
  %inc = add i32 %17, 1
  store i32 %inc, ptr %xs_log_noiclogs, align 4
  %18 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %log, align 128
  %m_stats = getelementptr inbounds %struct.xfs_mount, ptr %19, i32 0, i32 92
  %20 = ptrtoint ptr %m_stats to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %m_stats, align 4
  %22 = ptrtoint ptr %21 to i32
  %23 = load i32, ptr %cpu, align 4
  %arrayidx15 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %23
  %24 = ptrtoint ptr %arrayidx15 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %arrayidx15, align 4
  %add16 = add i32 %25, %22
  %26 = inttoptr i32 %add16 to ptr
  %xs_log_noiclogs17 = getelementptr inbounds %struct.__xfsstats, ptr %26, i32 0, i32 35
  %27 = ptrtoint ptr %xs_log_noiclogs17 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %xs_log_noiclogs17, align 4
  %inc18 = add i32 %28, 1
  store i32 %inc18, ptr %xs_log_noiclogs17, align 4
  tail call fastcc void @xlog_wait(ptr noundef %l_flush_wait, ptr noundef %l_icloglock)
  br label %restart.backedge

restart.backedge:                                 ; preds = %if.end41.restart.backedge_crit_edge, %if.end41.thread, %do.body3
  tail call void @_raw_spin_lock(ptr noundef %l_icloglock) #16
  %29 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %l_opstate.i, align 4
  %31 = and i32 %30, 4
  %tobool.i.not = icmp eq i32 %31, 0
  br i1 %tobool.i.not, label %restart.backedge.if.end_crit_edge, label %restart.backedge.if.then_crit_edge

restart.backedge.if.then_crit_edge:               ; preds = %restart.backedge
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

restart.backedge.if.end_crit_edge:                ; preds = %restart.backedge
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end22:                                         ; preds = %if.end
  %ic_data = getelementptr inbounds %struct.xlog_in_core, ptr %4, i32 0, i32 13
  %32 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %ic_data, align 4
  %ic_refcnt = getelementptr inbounds %struct.xlog_in_core, ptr %4, i32 0, i32 12
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %ic_refcnt, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %ic_refcnt, i32 1, i32 3, i32 1) #16
  %34 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %ic_refcnt, ptr %ic_refcnt, i32 1, ptr elementtype(i32) %ic_refcnt) #16, !srcloc !453
  %ic_offset = getelementptr inbounds %struct.xlog_in_core, ptr %4, i32 0, i32 6
  %35 = ptrtoint ptr %ic_offset to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %ic_offset, align 8
  %37 = tail call ptr @llvm.returnaddress(i32 0)
  %38 = ptrtoint ptr %37 to i32
  tail call fastcc void @trace_xlog_iclog_get_space(ptr noundef %4, i32 noundef %38)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %cmp23 = icmp eq i32 %36, 0
  br i1 %cmp23, label %if.then24, label %if.end22.if.end31_crit_edge

if.end22.if.end31_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end31

if.then24:                                        ; preds = %if.end22
  %39 = ptrtoint ptr %l_iclog_hsize to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %l_iclog_hsize, align 4
  %41 = ptrtoint ptr %t_curr_res to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %t_curr_res, align 4
  %sub = sub i32 %42, %40
  store i32 %sub, ptr %t_curr_res, align 4
  %43 = load i32, ptr %l_iclog_hsize, align 4
  %44 = ptrtoint ptr %t_res_num.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %t_res_num.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 15, i32 %45)
  %cmp.i = icmp eq i32 %45, 15
  br i1 %cmp.i, label %if.then.i, label %if.then24.xlog_tic_add_region.exit_crit_edge

if.then24.xlog_tic_add_region.exit_crit_edge:     ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_tic_add_region.exit

if.then.i:                                        ; preds = %if.then24
  call void @__sanitizer_cov_trace_pc() #18
  %46 = ptrtoint ptr %t_res_arr_sum.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %t_res_arr_sum.i, align 4
  %48 = ptrtoint ptr %t_res_o_flow.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %t_res_o_flow.i, align 4
  %add.i = add i32 %49, %47
  store i32 %add.i, ptr %t_res_o_flow.i, align 4
  %50 = ptrtoint ptr %t_res_num.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 0, ptr %t_res_num.i, align 4
  store i32 0, ptr %t_res_arr_sum.i, align 4
  br label %xlog_tic_add_region.exit

xlog_tic_add_region.exit:                         ; preds = %if.then.i, %if.then24.xlog_tic_add_region.exit_crit_edge
  %51 = ptrtoint ptr %t_res_num.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %t_res_num.i, align 4
  %arrayidx.i = getelementptr %struct.xlog_ticket, ptr %ticket, i32 0, i32 14, i32 %52
  %53 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store i32 %43, ptr %arrayidx.i, align 4
  %54 = load i32, ptr %t_res_num.i, align 4
  %r_type.i = getelementptr %struct.xlog_ticket, ptr %ticket, i32 0, i32 14, i32 %54, i32 1
  %55 = ptrtoint ptr %r_type.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 16, ptr %r_type.i, align 4
  %56 = ptrtoint ptr %t_res_arr_sum.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %t_res_arr_sum.i, align 4
  %add8.i = add i32 %57, %43
  store i32 %add8.i, ptr %t_res_arr_sum.i, align 4
  %inc.i = add i32 %54, 1
  store i32 %inc.i, ptr %t_res_num.i, align 4
  %58 = ptrtoint ptr %l_curr_cycle to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %l_curr_cycle, align 8
  %h_cycle = getelementptr inbounds %struct.xlog_rec_header, ptr %33, i32 0, i32 1
  %60 = ptrtoint ptr %h_cycle to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %59, ptr %h_cycle, align 4
  %61 = load i32, ptr %l_curr_cycle, align 8
  %62 = ptrtoint ptr %l_curr_block to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %l_curr_block, align 16
  %conv.i = zext i32 %61 to i64
  %shl.i = shl nuw i64 %conv.i, 32
  %conv1.i = zext i32 %63 to i64
  %or.i = or i64 %shl.i, %conv1.i
  %h_lsn = getelementptr inbounds %struct.xlog_rec_header, ptr %33, i32 0, i32 4
  %64 = ptrtoint ptr %h_lsn to i32
  call void @__asan_store8_noabort(i32 %64)
  store i64 %or.i, ptr %h_lsn, align 8
  %65 = load i32, ptr %l_curr_block, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %65)
  %cmp29 = icmp sgt i32 %65, -1
  br i1 %cmp29, label %xlog_tic_add_region.exit.if.end31_crit_edge, label %cond.false, !prof !432

xlog_tic_add_region.exit.if.end31_crit_edge:      ; preds = %xlog_tic_add_region.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end31

cond.false:                                       ; preds = %xlog_tic_add_region.exit
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.83, ptr noundef nonnull @.str.1, i32 noundef 3031) #16
  br label %if.end31

if.end31:                                         ; preds = %cond.false, %xlog_tic_add_region.exit.if.end31_crit_edge, %if.end22.if.end31_crit_edge
  %ic_size = getelementptr inbounds %struct.xlog_in_core, ptr %4, i32 0, i32 5
  %66 = ptrtoint ptr %ic_size to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load i32, ptr %ic_size, align 4
  %68 = ptrtoint ptr %ic_offset to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %ic_offset, align 8
  %sub33 = sub i32 %67, %69
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %sub33)
  %cmp34 = icmp ult i32 %sub33, 24
  br i1 %cmp34, label %if.then35, label %if.end46

if.then35:                                        ; preds = %if.end31
  tail call void @xlog_state_switch_iclogs(ptr noundef %log, ptr noundef %4, i32 noundef %67)
  %call.i.i113 = tail call zeroext i1 @__kasan_check_write(ptr noundef %ic_refcnt, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !459
  tail call void @llvm.prefetch.p0(ptr %ic_refcnt, i32 1, i32 3, i32 1) #16
  %70 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %ic_refcnt, ptr %ic_refcnt, i32 1, i32 -1, ptr elementtype(i32) %ic_refcnt) #16, !srcloc !460
  %asmresult.i.i.i = extractvalue { i32, i32, i32 } %70, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i)
  %cmp.not.i.i.i = icmp eq i32 %asmresult.i.i.i, 1
  br i1 %cmp.not.i.i.i, label %if.end41, label %if.end41.thread

if.end41.thread:                                  ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !461
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock) #16
  br label %restart.backedge

if.end41:                                         ; preds = %if.then35
  %call40 = tail call i32 @xlog_state_release_iclog(ptr noundef %log, ptr noundef %4, i64 noundef 0)
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40)
  %tobool43.not = icmp eq i32 %call40, 0
  br i1 %tobool43.not, label %if.end41.restart.backedge_crit_edge, label %if.end41.cleanup69_crit_edge

if.end41.cleanup69_crit_edge:                     ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup69

if.end41.restart.backedge_crit_edge:              ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #18
  br label %restart.backedge

if.end46:                                         ; preds = %if.end31
  %ic_size.le = getelementptr inbounds %struct.xlog_in_core, ptr %4, i32 0, i32 5
  call void @__sanitizer_cov_trace_cmp4(i32 %sub33, i32 %len)
  %cmp50.not = icmp ult i32 %sub33, %len
  br i1 %cmp50.not, label %if.else, label %if.then51

if.then51:                                        ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #18
  %71 = ptrtoint ptr %continued_write to i32
  call void @__asan_store4_noabort(i32 %71)
  store i32 0, ptr %continued_write, align 4
  %72 = ptrtoint ptr %ic_offset to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %ic_offset, align 8
  %add53 = add i32 %73, %len
  store i32 %add53, ptr %ic_offset, align 8
  br label %if.end55

if.else:                                          ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #18
  %74 = ptrtoint ptr %continued_write to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 1, ptr %continued_write, align 4
  %75 = ptrtoint ptr %ic_size.le to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %ic_size.le, align 4
  tail call void @xlog_state_switch_iclogs(ptr noundef %log, ptr noundef %4, i32 noundef %76)
  br label %if.end55

if.end55:                                         ; preds = %if.else, %if.then51
  %77 = ptrtoint ptr %iclogp to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr %4, ptr %iclogp, align 4
  %78 = ptrtoint ptr %ic_offset to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load i32, ptr %ic_offset, align 8
  %80 = ptrtoint ptr %ic_size.le to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %ic_size.le, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %79, i32 %81)
  %cmp58.not = icmp ugt i32 %79, %81
  br i1 %cmp58.not, label %cond.false66, label %if.end55.cond.end67_crit_edge, !prof !437

if.end55.cond.end67_crit_edge:                    ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end67

cond.false66:                                     ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.148, ptr noundef nonnull @.str.1, i32 noundef 3078) #16
  br label %cond.end67

cond.end67:                                       ; preds = %cond.false66, %if.end55.cond.end67_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock) #16
  %82 = ptrtoint ptr %logoffsetp to i32
  call void @__asan_store4_noabort(i32 %82)
  store i32 %36, ptr %logoffsetp, align 4
  br label %cleanup69

cleanup69:                                        ; preds = %cond.end67, %if.end41.cleanup69_crit_edge, %if.then
  %retval.2 = phi i32 [ -5, %if.then ], [ 0, %cond.end67 ], [ %call40, %if.end41.cleanup69_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @xlog_cil_set_ctx_write_state(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @xlog_verify_dest_ptr(ptr nocapture noundef readonly %log, ptr noundef readnone %ptr) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %l_iclog_bufs = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 13
  %0 = ptrtoint ptr %l_iclog_bufs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %l_iclog_bufs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp17 = icmp sgt i32 %1, 0
  br i1 %cmp17, label %for.body.lr.ph, label %entry.if.then6_crit_edge

entry.if.then6_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then6

for.body.lr.ph:                                   ; preds = %entry
  %l_iclog_size = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 12
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %good_ptr.019 = phi i32 [ 0, %for.body.lr.ph ], [ %good_ptr.1, %for.inc.for.body_crit_edge ]
  %i.018 = phi i32 [ 0, %for.body.lr.ph ], [ %inc5, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.xlog, ptr %log, i32 0, i32 34, i32 %i.018
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 4
  %cmp1.not = icmp ugt ptr %3, %ptr
  br i1 %cmp1.not, label %for.body.for.inc_crit_edge, label %land.lhs.true

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

land.lhs.true:                                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  %4 = ptrtoint ptr %l_iclog_size to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %l_iclog_size, align 16
  %add.ptr = getelementptr i8, ptr %3, i32 %5
  %cmp4.not = icmp uge ptr %add.ptr, %ptr
  %inc = zext i1 %cmp4.not to i32
  %spec.select = add i32 %good_ptr.019, %inc
  br label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %for.body.for.inc_crit_edge
  %good_ptr.1 = phi i32 [ %good_ptr.019, %for.body.for.inc_crit_edge ], [ %spec.select, %land.lhs.true ]
  %inc5 = add nuw nsw i32 %i.018, 1
  %exitcond.not = icmp eq i32 %inc5, %1
  br i1 %exitcond.not, label %for.end, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.inc
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %good_ptr.1)
  %tobool.not = icmp eq i32 %good_ptr.1, 0
  br i1 %tobool.not, label %for.end.if.then6_crit_edge, label %for.end.if.end7_crit_edge

for.end.if.end7_crit_edge:                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end7

for.end.if.then6_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then6

if.then6:                                         ; preds = %for.end.if.then6_crit_edge, %entry.if.then6_crit_edge
  %6 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %log, align 128
  tail call void (ptr, ptr, ...) @xfs_emerg(ptr noundef %7, ptr noundef nonnull @.str.149, ptr noundef nonnull @__func__.xlog_verify_dest_ptr) #16
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %for.end.if.end7_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @xfs_log_ticket_regrant(ptr noundef %log, ptr noundef %ticket) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @trace_xfs_log_ticket_regrant(ptr noundef %log, ptr noundef %ticket)
  %t_cnt = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 7
  %0 = ptrtoint ptr %t_cnt to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %t_cnt, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp.not = icmp eq i8 %1, 0
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %dec = add i8 %1, -1
  %2 = ptrtoint ptr %t_cnt to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 %dec, ptr %t_cnt, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %grant = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 31, i32 2
  %t_curr_res = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 4
  %3 = ptrtoint ptr %t_curr_res to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %t_curr_res, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %grant, i32 noundef 8) #16
  %call.i.i = tail call i64 @generic_atomic64_read(ptr noundef %grant) #16
  %l_logsize.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 15
  br label %do.body.i

do.body.i:                                        ; preds = %if.end.i.do.body.i_crit_edge, %if.end
  %head_val.0.i = phi i64 [ %call.i.i, %if.end ], [ %call.i9.i, %if.end.i.do.body.i_crit_edge ]
  %5 = lshr i64 %head_val.0.i, 32
  %conv.i.i = trunc i64 %5 to i32
  %conv1.i.i = trunc i64 %head_val.0.i to i32
  %sub.i = sub i32 %conv1.i.i, %4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp.i = icmp slt i32 %sub.i, 0
  br i1 %cmp.i, label %if.then.i, label %do.body.i.if.end.i_crit_edge

do.body.i.if.end.i_crit_edge:                     ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then.i:                                        ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %6 = ptrtoint ptr %l_logsize.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %l_logsize.i, align 32
  %add.i = add i32 %7, %sub.i
  %dec.i = add i32 %conv.i.i, -1
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %do.body.i.if.end.i_crit_edge
  %cycle.0.i = phi i32 [ %dec.i, %if.then.i ], [ %conv.i.i, %do.body.i.if.end.i_crit_edge ]
  %space.0.i = phi i32 [ %add.i, %if.then.i ], [ %sub.i, %do.body.i.if.end.i_crit_edge ]
  %conv2.i.i = zext i32 %cycle.0.i to i64
  %shl.i.i = shl nuw i64 %conv2.i.i, 32
  %conv1.i10.i = sext i32 %space.0.i to i64
  %or.i.i = or i64 %shl.i.i, %conv1.i10.i
  %call.i.i8.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %grant, i32 noundef 8) #16
  %call.i9.i = tail call i64 @generic_atomic64_cmpxchg(ptr noundef %grant, i64 noundef %head_val.0.i, i64 noundef %or.i.i) #16
  %cmp3.not.i = icmp eq i64 %call.i9.i, %head_val.0.i
  br i1 %cmp3.not.i, label %xlog_grant_sub_space.exit, label %if.end.i.do.body.i_crit_edge

if.end.i.do.body.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i

xlog_grant_sub_space.exit:                        ; preds = %if.end.i
  %grant3 = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 32, i32 2
  %8 = ptrtoint ptr %t_curr_res to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %t_curr_res, align 4
  %call.i.i.i37 = tail call zeroext i1 @__kasan_check_read(ptr noundef %grant3, i32 noundef 8) #16
  %call.i.i38 = tail call i64 @generic_atomic64_read(ptr noundef %grant3) #16
  br label %do.body.i45

do.body.i45:                                      ; preds = %if.end.i58.do.body.i45_crit_edge, %xlog_grant_sub_space.exit
  %head_val.0.i40 = phi i64 [ %call.i.i38, %xlog_grant_sub_space.exit ], [ %call.i9.i56, %if.end.i58.do.body.i45_crit_edge ]
  %10 = lshr i64 %head_val.0.i40, 32
  %conv.i.i41 = trunc i64 %10 to i32
  %conv1.i.i42 = trunc i64 %head_val.0.i40 to i32
  %sub.i43 = sub i32 %conv1.i.i42, %9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i43)
  %cmp.i44 = icmp slt i32 %sub.i43, 0
  br i1 %cmp.i44, label %if.then.i48, label %do.body.i45.if.end.i58_crit_edge

do.body.i45.if.end.i58_crit_edge:                 ; preds = %do.body.i45
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i58

if.then.i48:                                      ; preds = %do.body.i45
  call void @__sanitizer_cov_trace_pc() #18
  %11 = ptrtoint ptr %l_logsize.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %l_logsize.i, align 32
  %add.i46 = add i32 %12, %sub.i43
  %dec.i47 = add i32 %conv.i.i41, -1
  br label %if.end.i58

if.end.i58:                                       ; preds = %if.then.i48, %do.body.i45.if.end.i58_crit_edge
  %cycle.0.i49 = phi i32 [ %dec.i47, %if.then.i48 ], [ %conv.i.i41, %do.body.i45.if.end.i58_crit_edge ]
  %space.0.i50 = phi i32 [ %add.i46, %if.then.i48 ], [ %sub.i43, %do.body.i45.if.end.i58_crit_edge ]
  %conv2.i.i51 = zext i32 %cycle.0.i49 to i64
  %shl.i.i52 = shl nuw i64 %conv2.i.i51, 32
  %conv1.i10.i53 = sext i32 %space.0.i50 to i64
  %or.i.i54 = or i64 %shl.i.i52, %conv1.i10.i53
  %call.i.i8.i55 = tail call zeroext i1 @__kasan_check_write(ptr noundef %grant3, i32 noundef 8) #16
  %call.i9.i56 = tail call i64 @generic_atomic64_cmpxchg(ptr noundef %grant3, i64 noundef %head_val.0.i40, i64 noundef %or.i.i54) #16
  %cmp3.not.i57 = icmp eq i64 %call.i9.i56, %head_val.0.i40
  br i1 %cmp3.not.i57, label %xlog_grant_sub_space.exit59, label %if.end.i58.do.body.i45_crit_edge

if.end.i58.do.body.i45_crit_edge:                 ; preds = %if.end.i58
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i45

xlog_grant_sub_space.exit59:                      ; preds = %if.end.i58
  %t_unit_res = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 5
  %13 = ptrtoint ptr %t_unit_res to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %t_unit_res, align 4
  %15 = ptrtoint ptr %t_curr_res to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %14, ptr %t_curr_res, align 4
  %t_res_num.i = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 10
  %16 = ptrtoint ptr %t_res_num.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %t_res_num.i, align 4
  %t_res_arr_sum.i = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 12
  %17 = ptrtoint ptr %t_res_arr_sum.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %t_res_arr_sum.i, align 4
  %t_res_num_ophdrs.i = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 11
  %18 = ptrtoint ptr %t_res_num_ophdrs.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 0, ptr %t_res_num_ophdrs.i, align 4
  tail call fastcc void @trace_xfs_log_ticket_regrant_sub(ptr noundef %log, ptr noundef %ticket)
  %19 = ptrtoint ptr %t_cnt to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load i8, ptr %t_cnt, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool.not = icmp eq i8 %20, 0
  br i1 %tobool.not, label %if.then7, label %xlog_grant_sub_space.exit59.if.end13_crit_edge

xlog_grant_sub_space.exit59.if.end13_crit_edge:   ; preds = %xlog_grant_sub_space.exit59
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

if.then7:                                         ; preds = %xlog_grant_sub_space.exit59
  %21 = ptrtoint ptr %t_unit_res to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %t_unit_res, align 4
  %call.i.i.i60 = tail call zeroext i1 @__kasan_check_read(ptr noundef %grant, i32 noundef 8) #16
  %call.i.i61 = tail call i64 @generic_atomic64_read(ptr noundef %grant) #16
  br label %do.body.i73

do.body.i73:                                      ; preds = %do.body.i73.do.body.i73_crit_edge, %if.then7
  %head_val.0.i63 = phi i64 [ %call.i.i61, %if.then7 ], [ %call.i13.i, %do.body.i73.do.body.i73_crit_edge ]
  %23 = lshr i64 %head_val.0.i63, 32
  %conv.i.i64 = trunc i64 %23 to i32
  %conv1.i.i65 = trunc i64 %head_val.0.i63 to i32
  %24 = ptrtoint ptr %l_logsize.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %l_logsize.i, align 32
  %sub.i66 = sub i32 %25, %conv1.i.i65
  call void @__sanitizer_cov_trace_cmp4(i32 %sub.i66, i32 %22)
  %cmp.i67 = icmp sgt i32 %sub.i66, %22
  %not.cmp.i = xor i1 %cmp.i67, true
  %inc.i = zext i1 %not.cmp.i to i32
  %cycle.0.i68 = add i32 %inc.i, %conv.i.i64
  %26 = sub i32 0, %sub.i66
  %space.0.p.i = select i1 %cmp.i67, i32 %conv1.i.i65, i32 %26
  %space.0.i69 = add i32 %space.0.p.i, %22
  %conv2.i.i70 = zext i32 %cycle.0.i68 to i64
  %shl.i.i71 = shl nuw i64 %conv2.i.i70, 32
  %conv1.i14.i = sext i32 %space.0.i69 to i64
  %or.i.i72 = or i64 %shl.i.i71, %conv1.i14.i
  %call.i.i12.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %grant, i32 noundef 8) #16
  %call.i13.i = tail call i64 @generic_atomic64_cmpxchg(ptr noundef %grant, i64 noundef %head_val.0.i63, i64 noundef %or.i.i72) #16
  %cmp4.not.i = icmp eq i64 %call.i13.i, %head_val.0.i63
  br i1 %cmp4.not.i, label %xlog_grant_add_space.exit, label %do.body.i73.do.body.i73_crit_edge

do.body.i73.do.body.i73_crit_edge:                ; preds = %do.body.i73
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i73

xlog_grant_add_space.exit:                        ; preds = %do.body.i73
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @trace_xfs_log_ticket_regrant_exit(ptr noundef %log, ptr noundef %ticket)
  %27 = ptrtoint ptr %t_unit_res to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %t_unit_res, align 4
  %29 = ptrtoint ptr %t_curr_res to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %t_curr_res, align 4
  %30 = ptrtoint ptr %t_res_num.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 0, ptr %t_res_num.i, align 4
  %31 = ptrtoint ptr %t_res_arr_sum.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 0, ptr %t_res_arr_sum.i, align 4
  %32 = ptrtoint ptr %t_res_num_ophdrs.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 0, ptr %t_res_num_ophdrs.i, align 4
  br label %if.end13

if.end13:                                         ; preds = %xlog_grant_add_space.exit, %xlog_grant_sub_space.exit59.if.end13_crit_edge
  %t_ref.i = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 3
  %call.i.i.i77 = tail call zeroext i1 @__kasan_check_read(ptr noundef %t_ref.i, i32 noundef 4) #16
  %33 = ptrtoint ptr %t_ref.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %t_ref.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %cmp.i78 = icmp sgt i32 %34, 0
  br i1 %cmp.i78, label %if.end13.cond.end.i_crit_edge, label %cond.false.i, !prof !432

if.end13.cond.end.i_crit_edge:                    ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.i

cond.false.i:                                     ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.86, ptr noundef nonnull @.str.1, i32 noundef 3488) #16
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %if.end13.cond.end.i_crit_edge
  %call.i.i6.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %t_ref.i, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !445
  tail call void @llvm.prefetch.p0(ptr %t_ref.i, i32 1, i32 3, i32 1) #16
  %35 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %t_ref.i, ptr %t_ref.i, i32 1, ptr elementtype(i32) %t_ref.i) #16, !srcloc !446
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %35, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !447
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then.i79, label %cond.end.i.xfs_log_ticket_put.exit_crit_edge

cond.end.i.xfs_log_ticket_put.exit_crit_edge:     ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_ticket_put.exit

if.then.i79:                                      ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %36 = load ptr, ptr @xfs_log_ticket_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %36, ptr noundef %ticket) #16
  br label %xfs_log_ticket_put.exit

xfs_log_ticket_put.exit:                          ; preds = %if.then.i79, %cond.end.i.xfs_log_ticket_put.exit_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xfs_log_ticket_regrant(ptr noundef %log, ptr noundef %tic) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_ticket_regrant, i32 0, i32 1), ptr blockaddress(@trace_xfs_log_ticket_regrant, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !462
  %call42 = tail call i32 @__traceiter_xfs_log_ticket_regrant(ptr noundef null, ptr noundef %log, ptr noundef %tic) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !463
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_ticket_regrant, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_ticket_regrant, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xfs_log_ticket_regrant.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xfs_log_ticket_regrant.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 1292, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xfs_log_ticket_regrant_sub(ptr noundef %log, ptr noundef %tic) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_ticket_regrant_sub, i32 0, i32 1), ptr blockaddress(@trace_xfs_log_ticket_regrant_sub, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !464
  %call42 = tail call i32 @__traceiter_xfs_log_ticket_regrant_sub(ptr noundef null, ptr noundef %log, ptr noundef %tic) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !465
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_ticket_regrant_sub, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_ticket_regrant_sub, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xfs_log_ticket_regrant_sub.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xfs_log_ticket_regrant_sub.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 1294, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xfs_log_ticket_regrant_exit(ptr noundef %log, ptr noundef %tic) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_ticket_regrant_exit, i32 0, i32 1), ptr blockaddress(@trace_xfs_log_ticket_regrant_exit, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !466
  %call42 = tail call i32 @__traceiter_xfs_log_ticket_regrant_exit(ptr noundef null, ptr noundef %log, ptr noundef %tic) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !467
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_ticket_regrant_exit, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_ticket_regrant_exit, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xfs_log_ticket_regrant_exit.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xfs_log_ticket_regrant_exit.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 1293, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @xfs_log_ticket_put(ptr noundef %ticket) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %t_ref = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 3
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %t_ref, i32 noundef 4) #16
  %0 = ptrtoint ptr %t_ref to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %t_ref, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp sgt i32 %1, 0
  br i1 %cmp, label %entry.cond.end_crit_edge, label %cond.false, !prof !432

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.86, ptr noundef nonnull @.str.1, i32 noundef 3488) #16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry.cond.end_crit_edge
  %call.i.i6 = tail call zeroext i1 @__kasan_check_write(ptr noundef %t_ref, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !445
  tail call void @llvm.prefetch.p0(ptr %t_ref, i32 1, i32 3, i32 1) #16
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %t_ref, ptr %t_ref, i32 1, ptr elementtype(i32) %t_ref) #16, !srcloc !446
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %2, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !447
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i, label %if.then, label %cond.end.if.end_crit_edge

cond.end.if.end_crit_edge:                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  %3 = load ptr, ptr @xfs_log_ticket_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %3, ptr noundef %ticket) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @xfs_log_ticket_ungrant(ptr noundef %log, ptr noundef %ticket) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @trace_xfs_log_ticket_ungrant(ptr noundef %log, ptr noundef %ticket)
  %t_cnt = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 7
  %0 = ptrtoint ptr %t_cnt to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %t_cnt, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp.not = icmp eq i8 %1, 0
  br i1 %cmp.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %dec = add i8 %1, -1
  %2 = ptrtoint ptr %t_cnt to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 %dec, ptr %t_cnt, align 1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call fastcc void @trace_xfs_log_ticket_ungrant_sub(ptr noundef %log, ptr noundef %ticket)
  %t_curr_res = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 4
  %3 = ptrtoint ptr %t_curr_res to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %t_curr_res, align 4
  %5 = ptrtoint ptr %t_cnt to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %t_cnt, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %6)
  %cmp5.not = icmp eq i8 %6, 0
  br i1 %cmp5.not, label %if.end.if.end13_crit_edge, label %if.then7

if.end.if.end13_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

if.then7:                                         ; preds = %if.end
  %t_flags = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 9
  %7 = ptrtoint ptr %t_flags to i32
  call void @__asan_load1_noabort(i32 %7)
  %8 = load i8, ptr %t_flags, align 1
  %9 = and i8 %8, 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %9)
  %tobool.not = icmp eq i8 %9, 0
  br i1 %tobool.not, label %cond.false, label %if.then7.cond.end_crit_edge, !prof !437

if.then7.cond.end_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.false:                                       ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.82, ptr noundef nonnull @.str.1, i32 noundef 3158) #16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.then7.cond.end_crit_edge
  %t_unit_res = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 5
  %10 = ptrtoint ptr %t_unit_res to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %t_unit_res, align 4
  %12 = ptrtoint ptr %t_cnt to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %t_cnt, align 1
  %conv12 = zext i8 %13 to i32
  %mul = mul i32 %11, %conv12
  %add = add i32 %mul, %4
  br label %if.end13

if.end13:                                         ; preds = %cond.end, %if.end.if.end13_crit_edge
  %bytes.0 = phi i32 [ %add, %cond.end ], [ %4, %if.end.if.end13_crit_edge ]
  %grant = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 31, i32 2
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %grant, i32 noundef 8) #16
  %call.i.i = tail call i64 @generic_atomic64_read(ptr noundef %grant) #16
  %l_logsize.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 15
  br label %do.body.i

do.body.i:                                        ; preds = %if.end.i.do.body.i_crit_edge, %if.end13
  %head_val.0.i = phi i64 [ %call.i.i, %if.end13 ], [ %call.i9.i, %if.end.i.do.body.i_crit_edge ]
  %14 = lshr i64 %head_val.0.i, 32
  %conv.i.i = trunc i64 %14 to i32
  %conv1.i.i = trunc i64 %head_val.0.i to i32
  %sub.i = sub i32 %conv1.i.i, %bytes.0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %cmp.i = icmp slt i32 %sub.i, 0
  br i1 %cmp.i, label %if.then.i, label %do.body.i.if.end.i_crit_edge

do.body.i.if.end.i_crit_edge:                     ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

if.then.i:                                        ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %15 = ptrtoint ptr %l_logsize.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %l_logsize.i, align 32
  %add.i = add i32 %16, %sub.i
  %dec.i = add i32 %conv.i.i, -1
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %do.body.i.if.end.i_crit_edge
  %cycle.0.i = phi i32 [ %dec.i, %if.then.i ], [ %conv.i.i, %do.body.i.if.end.i_crit_edge ]
  %space.0.i = phi i32 [ %add.i, %if.then.i ], [ %sub.i, %do.body.i.if.end.i_crit_edge ]
  %conv2.i.i = zext i32 %cycle.0.i to i64
  %shl.i.i = shl nuw i64 %conv2.i.i, 32
  %conv1.i10.i = sext i32 %space.0.i to i64
  %or.i.i = or i64 %shl.i.i, %conv1.i10.i
  %call.i.i8.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %grant, i32 noundef 8) #16
  %call.i9.i = tail call i64 @generic_atomic64_cmpxchg(ptr noundef %grant, i64 noundef %head_val.0.i, i64 noundef %or.i.i) #16
  %cmp3.not.i = icmp eq i64 %call.i9.i, %head_val.0.i
  br i1 %cmp3.not.i, label %xlog_grant_sub_space.exit, label %if.end.i.do.body.i_crit_edge

if.end.i.do.body.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i

xlog_grant_sub_space.exit:                        ; preds = %if.end.i
  %grant14 = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 32, i32 2
  %call.i.i.i34 = tail call zeroext i1 @__kasan_check_read(ptr noundef %grant14, i32 noundef 8) #16
  %call.i.i35 = tail call i64 @generic_atomic64_read(ptr noundef %grant14) #16
  br label %do.body.i42

do.body.i42:                                      ; preds = %if.end.i55.do.body.i42_crit_edge, %xlog_grant_sub_space.exit
  %head_val.0.i37 = phi i64 [ %call.i.i35, %xlog_grant_sub_space.exit ], [ %call.i9.i53, %if.end.i55.do.body.i42_crit_edge ]
  %17 = lshr i64 %head_val.0.i37, 32
  %conv.i.i38 = trunc i64 %17 to i32
  %conv1.i.i39 = trunc i64 %head_val.0.i37 to i32
  %sub.i40 = sub i32 %conv1.i.i39, %bytes.0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i40)
  %cmp.i41 = icmp slt i32 %sub.i40, 0
  br i1 %cmp.i41, label %if.then.i45, label %do.body.i42.if.end.i55_crit_edge

do.body.i42.if.end.i55_crit_edge:                 ; preds = %do.body.i42
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i55

if.then.i45:                                      ; preds = %do.body.i42
  call void @__sanitizer_cov_trace_pc() #18
  %18 = ptrtoint ptr %l_logsize.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %l_logsize.i, align 32
  %add.i43 = add i32 %19, %sub.i40
  %dec.i44 = add i32 %conv.i.i38, -1
  br label %if.end.i55

if.end.i55:                                       ; preds = %if.then.i45, %do.body.i42.if.end.i55_crit_edge
  %cycle.0.i46 = phi i32 [ %dec.i44, %if.then.i45 ], [ %conv.i.i38, %do.body.i42.if.end.i55_crit_edge ]
  %space.0.i47 = phi i32 [ %add.i43, %if.then.i45 ], [ %sub.i40, %do.body.i42.if.end.i55_crit_edge ]
  %conv2.i.i48 = zext i32 %cycle.0.i46 to i64
  %shl.i.i49 = shl nuw i64 %conv2.i.i48, 32
  %conv1.i10.i50 = sext i32 %space.0.i47 to i64
  %or.i.i51 = or i64 %shl.i.i49, %conv1.i10.i50
  %call.i.i8.i52 = tail call zeroext i1 @__kasan_check_write(ptr noundef %grant14, i32 noundef 8) #16
  %call.i9.i53 = tail call i64 @generic_atomic64_cmpxchg(ptr noundef %grant14, i64 noundef %head_val.0.i37, i64 noundef %or.i.i51) #16
  %cmp3.not.i54 = icmp eq i64 %call.i9.i53, %head_val.0.i37
  br i1 %cmp3.not.i54, label %xlog_grant_sub_space.exit56, label %if.end.i55.do.body.i42_crit_edge

if.end.i55.do.body.i42_crit_edge:                 ; preds = %if.end.i55
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i42

xlog_grant_sub_space.exit56:                      ; preds = %if.end.i55
  tail call fastcc void @trace_xfs_log_ticket_ungrant_exit(ptr noundef %log, ptr noundef %ticket)
  %20 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %log, align 128
  tail call void @xfs_log_space_wake(ptr noundef %21)
  %t_ref.i = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 3
  %call.i.i.i57 = tail call zeroext i1 @__kasan_check_read(ptr noundef %t_ref.i, i32 noundef 4) #16
  %22 = ptrtoint ptr %t_ref.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %t_ref.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp.i58 = icmp sgt i32 %23, 0
  br i1 %cmp.i58, label %xlog_grant_sub_space.exit56.cond.end.i_crit_edge, label %cond.false.i, !prof !432

xlog_grant_sub_space.exit56.cond.end.i_crit_edge: ; preds = %xlog_grant_sub_space.exit56
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.i

cond.false.i:                                     ; preds = %xlog_grant_sub_space.exit56
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.86, ptr noundef nonnull @.str.1, i32 noundef 3488) #16
  br label %cond.end.i

cond.end.i:                                       ; preds = %cond.false.i, %xlog_grant_sub_space.exit56.cond.end.i_crit_edge
  %call.i.i6.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %t_ref.i, i32 noundef 4) #16
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !445
  tail call void @llvm.prefetch.p0(ptr %t_ref.i, i32 1, i32 3, i32 1) #16
  %24 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %t_ref.i, ptr %t_ref.i, i32 1, ptr elementtype(i32) %t_ref.i) #16, !srcloc !446
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %24, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !447
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then.i59, label %cond.end.i.xfs_log_ticket_put.exit_crit_edge

cond.end.i.xfs_log_ticket_put.exit_crit_edge:     ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_ticket_put.exit

if.then.i59:                                      ; preds = %cond.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %25 = load ptr, ptr @xfs_log_ticket_cache, align 4
  tail call void @kmem_cache_free(ptr noundef %25, ptr noundef %ticket) #16
  br label %xfs_log_ticket_put.exit

xfs_log_ticket_put.exit:                          ; preds = %if.then.i59, %cond.end.i.xfs_log_ticket_put.exit_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xfs_log_ticket_ungrant(ptr noundef %log, ptr noundef %tic) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_ticket_ungrant, i32 0, i32 1), ptr blockaddress(@trace_xfs_log_ticket_ungrant, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !468
  %call42 = tail call i32 @__traceiter_xfs_log_ticket_ungrant(ptr noundef null, ptr noundef %log, ptr noundef %tic) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !469
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_ticket_ungrant, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_ticket_ungrant, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xfs_log_ticket_ungrant.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xfs_log_ticket_ungrant.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 1295, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xfs_log_ticket_ungrant_sub(ptr noundef %log, ptr noundef %tic) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_ticket_ungrant_sub, i32 0, i32 1), ptr blockaddress(@trace_xfs_log_ticket_ungrant_sub, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !470
  %call42 = tail call i32 @__traceiter_xfs_log_ticket_ungrant_sub(ptr noundef null, ptr noundef %log, ptr noundef %tic) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !471
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_ticket_ungrant_sub, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_ticket_ungrant_sub, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xfs_log_ticket_ungrant_sub.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xfs_log_ticket_ungrant_sub.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 1296, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xfs_log_ticket_ungrant_exit(ptr noundef %log, ptr noundef %tic) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_ticket_ungrant_exit, i32 0, i32 1), ptr blockaddress(@trace_xfs_log_ticket_ungrant_exit, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !472
  %call42 = tail call i32 @__traceiter_xfs_log_ticket_ungrant_exit(ptr noundef null, ptr noundef %log, ptr noundef %tic) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !473
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_ticket_ungrant_exit, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_ticket_ungrant_exit, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xfs_log_ticket_ungrant_exit.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xfs_log_ticket_ungrant_exit.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 1297, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @xlog_state_switch_iclogs(ptr noundef %log, ptr noundef %iclog, i32 noundef %eventual_size) local_unnamed_addr #1 align 64 {
entry:
  %agg.tmp.sroa.0.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ic_state = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 7
  %0 = ptrtoint ptr %ic_state to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ic_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %entry.do.body_crit_edge, label %cond.false, !prof !432

entry.do.body_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.3, ptr noundef nonnull @.str.1, i32 noundef 3181) #16
  br label %do.body

do.body:                                          ; preds = %cond.false, %entry.do.body_crit_edge
  %l_icloglock = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 21
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i)
  %2 = ptrtoint ptr %l_icloglock to i32
  call void @__asan_load4_noabort(i32 %2)
  %agg.tmp.sroa.0.0.copyload.i = load volatile i32, ptr %l_icloglock, align 4
  %3 = ptrtoint ptr %agg.tmp.sroa.0.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store volatile i32 %agg.tmp.sroa.0.0.copyload.i, ptr %agg.tmp.sroa.0.i, align 4
  %lock.sroa.0.0.extract.shift.i.i = lshr i32 %agg.tmp.sroa.0.0.copyload.i, 16
  %conv.i.i = and i32 %agg.tmp.sroa.0.0.copyload.i, 65535
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i.i, i32 %lock.sroa.0.0.extract.shift.i.i)
  %cmp.i.i.not = icmp eq i32 %conv.i.i, %lock.sroa.0.0.extract.shift.i.i
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %agg.tmp.sroa.0.i)
  br i1 %cmp.i.i.not, label %do.body11, label %do.end14, !prof !437

do.body11:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22fs/xfs/xfs_log.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 3182, 0\0A.popsection", ""() #16, !srcloc !474
  unreachable

do.end14:                                         ; preds = %do.body
  %4 = tail call ptr @llvm.returnaddress(i32 0)
  %5 = ptrtoint ptr %4 to i32
  tail call fastcc void @trace_xlog_iclog_switch(ptr noundef %iclog, i32 noundef %5)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %eventual_size)
  %tobool15.not = icmp eq i32 %eventual_size, 0
  br i1 %tobool15.not, label %if.then16, label %do.end14.if.end17_crit_edge

do.end14.if.end17_crit_edge:                      ; preds = %do.end14
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end17

if.then16:                                        ; preds = %do.end14
  call void @__sanitizer_cov_trace_pc() #18
  %ic_offset = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 6
  %6 = ptrtoint ptr %ic_offset to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %ic_offset, align 8
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %do.end14.if.end17_crit_edge
  %eventual_size.addr.0 = phi i32 [ %eventual_size, %do.end14.if.end17_crit_edge ], [ %7, %if.then16 ]
  %8 = ptrtoint ptr %ic_state to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 1, ptr %ic_state, align 4
  %l_prev_block = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 25
  %9 = ptrtoint ptr %l_prev_block to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %l_prev_block, align 4
  %ic_data = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 13
  %11 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ic_data, align 4
  %h_prev_block = getelementptr inbounds %struct.xlog_rec_header, ptr %12, i32 0, i32 7
  %13 = ptrtoint ptr %h_prev_block to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %10, ptr %h_prev_block, align 4
  %l_curr_block = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 24
  %14 = ptrtoint ptr %l_curr_block to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %l_curr_block, align 16
  store i32 %15, ptr %l_prev_block, align 4
  %l_curr_cycle = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 22
  %16 = ptrtoint ptr %l_curr_cycle to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %l_curr_cycle, align 8
  %l_prev_cycle = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 23
  %18 = ptrtoint ptr %l_prev_cycle to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %17, ptr %l_prev_cycle, align 4
  %conv = sext i32 %eventual_size.addr.0 to i64
  %sub = add nsw i64 %conv, 511
  %shr = lshr i64 %sub, 9
  %l_iclog_hsize = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 9
  %19 = ptrtoint ptr %l_iclog_hsize to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %l_iclog_hsize, align 4
  %conv20 = sext i32 %20 to i64
  %sub22 = add nsw i64 %conv20, 511
  %shr23 = lshr i64 %sub22, 9
  %add24 = add nuw nsw i64 %shr23, %shr
  %21 = trunc i64 %add24 to i32
  %conv28 = add i32 %15, %21
  store i32 %conv28, ptr %l_curr_block, align 16
  %l_iclog_roundoff = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 36
  %22 = ptrtoint ptr %l_iclog_roundoff to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %l_iclog_roundoff, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 512, i32 %23)
  %cmp29 = icmp ugt i32 %23, 512
  br i1 %cmp29, label %if.then31, label %if.end17.if.end42_crit_edge

if.end17.if.end42_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end42

if.then31:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #18
  %conv33 = zext i32 %23 to i64
  %sub35 = add nuw nsw i64 %conv33, 511
  %shr36 = lshr i64 %sub35, 9
  %conv37 = trunc i64 %shr36 to i32
  %sub39 = add nsw i32 %conv37, -1
  %add40 = add i32 %sub39, %conv28
  %24 = urem i32 %add40, %conv37
  %mul = sub i32 %add40, %24
  %25 = ptrtoint ptr %l_curr_block to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %mul, ptr %l_curr_block, align 16
  br label %if.end42

if.end42:                                         ; preds = %if.then31, %if.end17.if.end42_crit_edge
  %26 = ptrtoint ptr %l_curr_block to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %l_curr_block, align 16
  %l_logBBsize = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 16
  %28 = ptrtoint ptr %l_logBBsize to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %l_logBBsize, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %27, i32 %29)
  %cmp44.not = icmp slt i32 %27, %29
  br i1 %cmp44.not, label %if.end42.if.end74_crit_edge, label %if.then46

if.end42.if.end74_crit_edge:                      ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end74

if.then46:                                        ; preds = %if.end42
  %sub49 = sub i32 %27, %29
  %30 = ptrtoint ptr %l_curr_block to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %sub49, ptr %l_curr_block, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub49)
  %cmp51 = icmp sgt i32 %sub49, -1
  br i1 %cmp51, label %if.then46.do.end64_crit_edge, label %cond.false60, !prof !432

if.then46.do.end64_crit_edge:                     ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end64

cond.false60:                                     ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.83, ptr noundef nonnull @.str.1, i32 noundef 3210) #16
  br label %do.end64

do.end64:                                         ; preds = %cond.false60, %if.then46.do.end64_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !475
  %31 = ptrtoint ptr %l_curr_cycle to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %l_curr_cycle, align 8
  %inc = add i32 %32, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 -17974594, i32 %inc)
  %cmp68 = icmp eq i32 %inc, -17974594
  %spec.store.select = select i1 %cmp68, i32 -17974593, i32 %inc
  %33 = ptrtoint ptr %l_curr_cycle to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %spec.store.select, ptr %l_curr_cycle, align 8
  br label %if.end74

if.end74:                                         ; preds = %do.end64, %if.end42.if.end74_crit_edge
  %l_iclog = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 20
  %34 = ptrtoint ptr %l_iclog to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %l_iclog, align 8
  %cmp75 = icmp eq ptr %35, %iclog
  br i1 %cmp75, label %if.end74.cond.end85_crit_edge, label %cond.false84, !prof !432

if.end74.cond.end85_crit_edge:                    ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end85

cond.false84:                                     ; preds = %if.end74
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.84, ptr noundef nonnull @.str.1, i32 noundef 3216) #16
  br label %cond.end85

cond.end85:                                       ; preds = %cond.false84, %if.end74.cond.end85_crit_edge
  %ic_next = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 2
  %36 = ptrtoint ptr %ic_next to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %ic_next, align 8
  %38 = ptrtoint ptr %l_iclog to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %37, ptr %l_iclog, align 8
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xlog_iclog_switch(ptr noundef %iclog, i32 noundef %caller_ip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_switch, i32 0, i32 1), ptr blockaddress(@trace_xlog_iclog_switch, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !476
  %call42 = tail call i32 @__traceiter_xlog_iclog_switch(ptr noundef null, ptr noundef %iclog, i32 noundef %caller_ip) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !477
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_switch, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_switch, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xlog_iclog_switch.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xlog_iclog_switch.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 4106, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xfs_log_force(ptr noundef %mp, i64 noundef %lsn, i32 noundef %caller_ip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_force, i32 0, i32 1), ptr blockaddress(@trace_xfs_log_force, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !478
  %call42 = tail call i32 @__traceiter_xfs_log_force(ptr noundef null, ptr noundef %mp, i64 noundef %lsn, i32 noundef %caller_ip) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !479
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_force, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_force, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xfs_log_force.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xfs_log_force.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 1341, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xlog_iclog_force(ptr noundef %iclog, i32 noundef %caller_ip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_force, i32 0, i32 1), ptr blockaddress(@trace_xlog_iclog_force, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !480
  %call42 = tail call i32 @__traceiter_xlog_iclog_force(ptr noundef null, ptr noundef %iclog, i32 noundef %caller_ip) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !481
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_force, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_force, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xlog_iclog_force.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xlog_iclog_force.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 4102, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @xfs_log_force_seq(ptr noundef %mp, i64 noundef %seq, i32 noundef %flags, ptr noundef %log_flushed) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %m_log = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 8
  %0 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %m_log, align 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %seq)
  %cmp.not = icmp eq i64 %seq, 0
  br i1 %cmp.not, label %cond.false, label %entry.do.body2_crit_edge, !prof !437

entry.do.body2_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body2

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.85, ptr noundef nonnull @.str.1, i32 noundef 3464) #16
  br label %do.body2

do.body2:                                         ; preds = %cond.false, %entry.do.body2_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @xfsstats to i32))
  %2 = load ptr, ptr @xfsstats, align 4
  %3 = ptrtoint ptr %2 to i32
  %4 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %7
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %arrayidx, align 4
  %add = add i32 %9, %3
  %10 = inttoptr i32 %add to ptr
  %xs_log_force = getelementptr inbounds %struct.__xfsstats, ptr %10, i32 0, i32 36
  %11 = ptrtoint ptr %xs_log_force to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %xs_log_force, align 8
  %inc = add i32 %12, 1
  store i32 %inc, ptr %xs_log_force, align 8
  %m_stats = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 92
  %13 = ptrtoint ptr %m_stats to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %m_stats, align 4
  %15 = ptrtoint ptr %14 to i32
  %16 = load i32, ptr %cpu, align 4
  %arrayidx13 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %16
  %17 = ptrtoint ptr %arrayidx13 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %arrayidx13, align 4
  %add14 = add i32 %18, %15
  %19 = inttoptr i32 %add14 to ptr
  %xs_log_force15 = getelementptr inbounds %struct.__xfsstats, ptr %19, i32 0, i32 36
  %20 = ptrtoint ptr %xs_log_force15 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %xs_log_force15, align 8
  %inc16 = add i32 %21, 1
  store i32 %inc16, ptr %xs_log_force15, align 8
  %22 = tail call ptr @llvm.returnaddress(i32 0)
  %23 = ptrtoint ptr %22 to i32
  tail call fastcc void @trace_xfs_log_force(ptr noundef %mp, i64 noundef %seq, i32 noundef %23)
  %call19 = tail call i64 @xlog_cil_force_seq(ptr noundef %1, i64 noundef %seq) #16
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %call19)
  %cmp20 = icmp eq i64 %call19, -1
  br i1 %cmp20, label %do.body2.cleanup_crit_edge, label %if.end

do.body2.cleanup_crit_edge:                       ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %do.body2
  %call21 = tail call fastcc i32 @xlog_force_lsn(ptr noundef %1, i64 noundef %call19, i32 noundef %flags, ptr noundef %log_flushed, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -11, i32 %call21)
  %cmp22 = icmp eq i32 %call21, -11
  br i1 %cmp22, label %do.body25, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

do.body25:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @xfsstats to i32))
  %24 = load ptr, ptr @xfsstats, align 4
  %25 = ptrtoint ptr %24 to i32
  %26 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu, align 4
  %arrayidx34 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %27
  %28 = ptrtoint ptr %arrayidx34 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %arrayidx34, align 4
  %add35 = add i32 %29, %25
  %30 = inttoptr i32 %add35 to ptr
  %xs_log_force_sleep = getelementptr inbounds %struct.__xfsstats, ptr %30, i32 0, i32 37
  %31 = ptrtoint ptr %xs_log_force_sleep to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %xs_log_force_sleep, align 4
  %inc36 = add i32 %32, 1
  store i32 %inc36, ptr %xs_log_force_sleep, align 4
  %33 = ptrtoint ptr %m_stats to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %m_stats, align 4
  %35 = ptrtoint ptr %34 to i32
  %36 = load i32, ptr %cpu, align 4
  %arrayidx48 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %36
  %37 = ptrtoint ptr %arrayidx48 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx48, align 4
  %add49 = add i32 %38, %35
  %39 = inttoptr i32 %add49 to ptr
  %xs_log_force_sleep50 = getelementptr inbounds %struct.__xfsstats, ptr %39, i32 0, i32 37
  %40 = ptrtoint ptr %xs_log_force_sleep50 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %xs_log_force_sleep50, align 4
  %inc51 = add i32 %41, 1
  store i32 %inc51, ptr %xs_log_force_sleep50, align 4
  %call54 = tail call fastcc i32 @xlog_force_lsn(ptr noundef %1, i64 noundef %call19, i32 noundef %flags, ptr noundef %log_flushed, i1 noundef zeroext true)
  br label %cleanup

cleanup:                                          ; preds = %do.body25, %if.end.cleanup_crit_edge, %do.body2.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %do.body2.cleanup_crit_edge ], [ %call54, %do.body25 ], [ %call21, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @xlog_cil_force_seq(ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @xlog_force_lsn(ptr noundef %log, i64 noundef %lsn, i32 noundef %flags, ptr noundef writeonly %log_flushed, i1 noundef zeroext %already_slept) unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %l_icloglock = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 21
  tail call void @_raw_spin_lock(ptr noundef %l_icloglock) #16
  %l_opstate.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 6
  %0 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %l_opstate.i, align 4
  %2 = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.i.not = icmp eq i32 %2, 0
  br i1 %tobool.i.not, label %if.end, label %entry.out_error_crit_edge

entry.out_error_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_error

if.end:                                           ; preds = %entry
  %l_iclog = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 20
  %3 = ptrtoint ptr %l_iclog to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %l_iclog, align 8
  br label %while.cond

while.cond:                                       ; preds = %while.body.while.cond_crit_edge, %if.end
  %iclog.0 = phi ptr [ %4, %if.end ], [ %12, %while.body.while.cond_crit_edge ]
  %ic_data = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 13
  %5 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ic_data, align 4
  %h_lsn = getelementptr inbounds %struct.xlog_rec_header, ptr %6, i32 0, i32 4
  %7 = ptrtoint ptr %h_lsn to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %h_lsn, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %8, i64 %lsn)
  %cmp.not = icmp eq i64 %8, %lsn
  br i1 %cmp.not, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond
  %9 = tail call ptr @llvm.returnaddress(i32 0)
  %10 = ptrtoint ptr %9 to i32
  tail call fastcc void @trace_xlog_iclog_force_lsn(ptr noundef %iclog.0, i32 noundef %10)
  %ic_next = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 2
  %11 = ptrtoint ptr %ic_next to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ic_next, align 8
  %13 = ptrtoint ptr %l_iclog to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %l_iclog, align 8
  %cmp2 = icmp eq ptr %12, %14
  br i1 %cmp2, label %while.body.out_unlock_crit_edge, label %while.body.while.cond_crit_edge

while.body.while.cond_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.cond

while.body.out_unlock_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_unlock

while.end:                                        ; preds = %while.cond
  %ic_data.le = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 13
  %ic_state = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 7
  %15 = ptrtoint ptr %ic_state to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %ic_state, align 4
  %17 = zext i32 %16 to i64
  call void @__sanitizer_cov_trace_switch(i64 %17, ptr @__sancov_gen_cov_switch_values.162)
  switch i32 %16, label %while.end.sw.epilog_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb24
  ]

while.end.sw.epilog_crit_edge:                    ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog

sw.bb:                                            ; preds = %while.end
  br i1 %already_slept, label %sw.bb.if.end13_crit_edge, label %land.lhs.true

sw.bb.if.end13_crit_edge:                         ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

land.lhs.true:                                    ; preds = %sw.bb
  %ic_prev = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 3
  %18 = ptrtoint ptr %ic_prev to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %ic_prev, align 4
  %ic_state5 = getelementptr inbounds %struct.xlog_in_core, ptr %19, i32 0, i32 7
  %20 = ptrtoint ptr %ic_state5 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %ic_state5, align 4
  %.off = add i32 %21, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %.off)
  %switch = icmp ult i32 %.off, 2
  br i1 %switch, label %if.then10, label %land.lhs.true.if.end13_crit_edge

land.lhs.true.if.end13_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end13

if.then10:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  %ic_write_wait = getelementptr inbounds %struct.xlog_in_core, ptr %19, i32 0, i32 1
  tail call fastcc void @xlog_wait(ptr noundef %ic_write_wait, ptr noundef %l_icloglock)
  br label %cleanup

if.end13:                                         ; preds = %land.lhs.true.if.end13_crit_edge, %sw.bb.if.end13_crit_edge
  %ic_refcnt.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 12
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %ic_refcnt.i.i, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %ic_refcnt.i.i, i32 1, i32 3, i32 1) #16
  %22 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %ic_refcnt.i.i, ptr %ic_refcnt.i.i, i32 1, ptr elementtype(i32) %ic_refcnt.i.i) #16, !srcloc !453
  %ic_flags.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 8
  %23 = ptrtoint ptr %ic_flags.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %ic_flags.i.i, align 128
  %or.i.i = or i32 %24, 3
  store i32 %or.i.i, ptr %ic_flags.i.i, align 128
  %25 = ptrtoint ptr %ic_state to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %ic_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %cmp.i.i = icmp eq i32 %26, 0
  br i1 %cmp.i.i, label %if.then.i.i, label %if.end13.xlog_force_iclog.exit.i_crit_edge

if.end13.xlog_force_iclog.exit.i_crit_edge:       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_force_iclog.exit.i

if.then.i.i:                                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #18
  %ic_log.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 4
  %27 = ptrtoint ptr %ic_log.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ic_log.i.i, align 16
  tail call void @xlog_state_switch_iclogs(ptr noundef %28, ptr noundef %iclog.0, i32 noundef 0) #16
  br label %xlog_force_iclog.exit.i

xlog_force_iclog.exit.i:                          ; preds = %if.then.i.i, %if.end13.xlog_force_iclog.exit.i_crit_edge
  %ic_log1.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 4
  %29 = ptrtoint ptr %ic_log1.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ic_log1.i.i, align 16
  %call.i.i = tail call i32 @xlog_state_release_iclog(ptr noundef %30, ptr noundef %iclog.0, i64 noundef 0) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %if.end.i, label %xlog_force_iclog.exit.i.out_error_crit_edge

xlog_force_iclog.exit.i.out_error_crit_edge:      ; preds = %xlog_force_iclog.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_error

if.end.i:                                         ; preds = %xlog_force_iclog.exit.i
  %31 = ptrtoint ptr %ic_data.le to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %ic_data.le, align 4
  %h_lsn2.i = getelementptr inbounds %struct.xlog_rec_header, ptr %32, i32 0, i32 4
  %33 = ptrtoint ptr %h_lsn2.i to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %h_lsn2.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %34, i64 %lsn)
  %cmp.not.i = icmp ne i64 %34, %lsn
  %tobool18.not = icmp eq ptr %log_flushed, null
  br i1 %tobool18.not, label %if.end.i.if.end20_crit_edge, label %if.then19

if.end.i.if.end20_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end20

if.then19:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  %35 = ptrtoint ptr %log_flushed to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 1, ptr %log_flushed, align 4
  br label %if.end20

if.end20:                                         ; preds = %if.then19, %if.end.i.if.end20_crit_edge
  %and = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool25.not = icmp eq i32 %and, 0
  %or.cond = or i1 %tobool25.not, %cmp.not.i
  br i1 %or.cond, label %if.end20.out_unlock_crit_edge, label %if.end20.if.then26_crit_edge

if.end20.if.then26_crit_edge:                     ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then26

if.end20.out_unlock_crit_edge:                    ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_unlock

sw.bb24:                                          ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  %ic_flags = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 8
  %36 = ptrtoint ptr %ic_flags to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %ic_flags, align 128
  %or = or i32 %37, 3
  store i32 %or, ptr %ic_flags, align 128
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb24, %while.end.sw.epilog_crit_edge
  %and.old = and i32 %flags, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.old)
  %tobool25.not.old = icmp eq i32 %and.old, 0
  br i1 %tobool25.not.old, label %sw.epilog.out_unlock_crit_edge, label %sw.epilog.if.then26_crit_edge

sw.epilog.if.then26_crit_edge:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then26

sw.epilog.out_unlock_crit_edge:                   ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #18
  br label %out_unlock

if.then26:                                        ; preds = %sw.epilog.if.then26_crit_edge, %if.end20.if.then26_crit_edge
  %call27 = tail call i32 @xlog_wait_on_iclog(ptr noundef %iclog.0)
  br label %cleanup

out_unlock:                                       ; preds = %sw.epilog.out_unlock_crit_edge, %if.end20.out_unlock_crit_edge, %while.body.out_unlock_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock) #16
  br label %cleanup

out_error:                                        ; preds = %xlog_force_iclog.exit.i.out_error_crit_edge, %entry.out_error_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock) #16
  br label %cleanup

cleanup:                                          ; preds = %out_error, %out_unlock, %if.then26, %if.then10
  %retval.0 = phi i32 [ -5, %out_error ], [ 0, %out_unlock ], [ %call27, %if.then26 ], [ -11, %if.then10 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kmem_cache_free(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @xfs_log_ticket_get(ptr noundef returned %ticket) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %t_ref = getelementptr inbounds %struct.xlog_ticket, ptr %ticket, i32 0, i32 3
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %t_ref, i32 noundef 4) #16
  %0 = ptrtoint ptr %t_ref to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %t_ref, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp = icmp sgt i32 %1, 0
  br i1 %cmp, label %entry.cond.end_crit_edge, label %cond.false, !prof !432

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.86, ptr noundef nonnull @.str.1, i32 noundef 3497) #16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry.cond.end_crit_edge
  %call.i.i5 = tail call zeroext i1 @__kasan_check_write(ptr noundef %t_ref, i32 noundef 4) #16
  tail call void @llvm.prefetch.p0(ptr %t_ref, i32 1, i32 3, i32 1) #16
  %2 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %t_ref, ptr %t_ref, i32 1, ptr elementtype(i32) %t_ref) #16, !srcloc !453
  ret ptr %ticket
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local i32 @xfs_log_calc_unit_res(ptr nocapture noundef readonly %mp, i32 noundef %unit_bytes) local_unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %m_log = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 8
  %0 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %m_log, align 4
  %add2.i = add i32 %unit_bytes, 40
  %l_iclog_size.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 12
  %2 = ptrtoint ptr %l_iclog_size.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %l_iclog_size.i, align 16
  %l_iclog_hsize.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 9
  %4 = ptrtoint ptr %l_iclog_hsize.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %l_iclog_hsize.i, align 4
  %sub.i = sub i32 %3, %5
  %sub3.i = add i32 %sub.i, -1
  %add4.i = add i32 %sub3.i, %add2.i
  %div.i = sdiv i32 %add4.i, %sub.i
  %mul.i = mul i32 %div.i, 12
  %add5.i = add i32 %mul.i, %add2.i
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i, %entry
  %unit_bytes.addr.0.i = phi i32 [ %add5.i, %entry ], [ %add9.i, %while.body.i ]
  %num_headers.0.i = phi i32 [ %div.i, %entry ], [ %inc.i, %while.body.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %num_headers.0.i)
  %tobool.not.i = icmp eq i32 %num_headers.0.i, 0
  br i1 %tobool.not.i, label %while.cond.i.while.body.i_crit_edge, label %lor.rhs.i

while.cond.i.while.body.i_crit_edge:              ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body.i

lor.rhs.i:                                        ; preds = %while.cond.i
  %add7.i = add i32 %unit_bytes.addr.0.i, %sub3.i
  %div8.i = sdiv i32 %add7.i, %sub.i
  call void @__sanitizer_cov_trace_cmp4(i32 %div8.i, i32 %num_headers.0.i)
  %cmp.i = icmp ugt i32 %div8.i, %num_headers.0.i
  br i1 %cmp.i, label %lor.rhs.i.while.body.i_crit_edge, label %xlog_calc_unit_res.exit

lor.rhs.i.while.body.i_crit_edge:                 ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body.i

while.body.i:                                     ; preds = %lor.rhs.i.while.body.i_crit_edge, %while.cond.i.while.body.i_crit_edge
  %add9.i = add i32 %unit_bytes.addr.0.i, 12
  %inc.i = add nuw i32 %num_headers.0.i, 1
  br label %while.cond.i

xlog_calc_unit_res.exit:                          ; preds = %lor.rhs.i
  call void @__sanitizer_cov_trace_pc() #18
  %mul11.i = mul i32 %num_headers.0.i, %5
  %l_iclog_roundoff.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 36
  %6 = ptrtoint ptr %l_iclog_roundoff.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %l_iclog_roundoff.i, align 8
  %mul15.i = shl i32 %7, 1
  %add12.i = add i32 %unit_bytes.addr.0.i, %5
  %add14.i = add i32 %add12.i, %mul11.i
  %add16.i = add i32 %add14.i, %mul15.i
  ret i32 %add16.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @prandom_u32() local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @xlog_force_shutdown(ptr noundef %log, i32 noundef %shutdown_flags) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %shutdown_flags, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool = icmp ne i32 %and, 0
  %tobool1.not = icmp eq ptr %log, null
  br i1 %tobool1.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %l_opstate.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 6
  %0 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile i32, ptr %l_opstate.i, align 4
  %and1.i.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i)
  %tobool.i.not = icmp eq i32 %and1.i.i, 0
  br i1 %tobool.i.not, label %if.end, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %2 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %l_opstate.i, align 4
  %4 = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.i37.not = icmp eq i32 %4, 0
  br i1 %tobool.i37.not, label %if.end.cond.end_crit_edge, label %cond.false, !prof !432

if.end.cond.end_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.false:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.87, ptr noundef nonnull @.str.1, i32 noundef 3854) #16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %if.end.cond.end_crit_edge
  br i1 %tobool, label %cond.end.if.end9_crit_edge, label %if.then7

cond.end.if.end9_crit_edge:                       ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

if.then7:                                         ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  %5 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %log, align 128
  %call8 = tail call i32 @xfs_log_force(ptr noundef %6, i32 noundef 1)
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %cond.end.if.end9_crit_edge
  %l_icloglock = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 21
  tail call void @_raw_spin_lock(ptr noundef %l_icloglock) #16
  %call10 = tail call i32 @_test_and_set_bit(i32 noundef 2, ptr noundef %l_opstate.i) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock) #16
  br i1 %tobool11.not, label %if.end14, label %if.then12

if.then12:                                        ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.12, ptr noundef nonnull @.str.1, i32 noundef 3882) #16
  br label %cleanup

if.end14:                                         ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  %l_reserve_head = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 31
  tail call fastcc void @xlog_grant_head_wake_all(ptr noundef %l_reserve_head)
  %l_write_head = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 32
  tail call fastcc void @xlog_grant_head_wake_all(ptr noundef %l_write_head)
  %l_cilp = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 2
  %7 = ptrtoint ptr %l_cilp to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %l_cilp, align 8
  %xc_push_lock = getelementptr inbounds %struct.xfs_cil, ptr %8, i32 0, i32 8
  tail call void @_raw_spin_lock(ptr noundef %xc_push_lock) #16
  %9 = ptrtoint ptr %l_cilp to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %l_cilp, align 8
  %xc_start_wait = getelementptr inbounds %struct.xfs_cil, ptr %10, i32 0, i32 13
  tail call void @__wake_up(ptr noundef %xc_start_wait, i32 noundef 3, i32 noundef 0, ptr noundef null) #16
  %11 = ptrtoint ptr %l_cilp to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %l_cilp, align 8
  %xc_commit_wait = getelementptr inbounds %struct.xfs_cil, ptr %12, i32 0, i32 12
  tail call void @__wake_up(ptr noundef %xc_commit_wait, i32 noundef 3, i32 noundef 0, ptr noundef null) #16
  %13 = ptrtoint ptr %l_cilp to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %l_cilp, align 8
  %xc_push_lock19 = getelementptr inbounds %struct.xfs_cil, ptr %14, i32 0, i32 8
  tail call void @_raw_spin_unlock(ptr noundef %xc_push_lock19) #16
  tail call fastcc void @xlog_state_shutdown_callbacks(ptr noundef nonnull %log)
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.then12, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ false, %if.then12 ], [ %tobool, %if.end14 ], [ false, %lor.lhs.false.cleanup_crit_edge ], [ false, %entry.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_test_and_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @xlog_grant_head_wake_all(ptr noundef %head) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_spin_lock(ptr noundef %head) #16
  %waiters = getelementptr inbounds %struct.xlog_grant_head, ptr %head, i32 0, i32 1
  %0 = ptrtoint ptr %waiters to i32
  call void @__asan_load4_noabort(i32 %0)
  %tic.013 = load ptr, ptr %waiters, align 4
  %cmp.not14 = icmp eq ptr %tic.013, %waiters
  br i1 %cmp.not14, label %entry.for.end_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %tic.015 = phi ptr [ %tic.0, %for.body.for.body_crit_edge ], [ %tic.013, %entry.for.body_crit_edge ]
  %t_task = getelementptr inbounds %struct.xlog_ticket, ptr %tic.015, i32 0, i32 1
  %1 = ptrtoint ptr %t_task to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %t_task, align 4
  %call = tail call i32 @wake_up_process(ptr noundef %2) #16
  %3 = ptrtoint ptr %tic.015 to i32
  call void @__asan_load4_noabort(i32 %3)
  %tic.0 = load ptr, ptr %tic.015, align 4
  %cmp.not = icmp eq ptr %tic.0, %waiters
  br i1 %cmp.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %head) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @xfs_log_check_lsn(ptr noundef %mp, i64 noundef %lsn) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %m_log = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 8
  %0 = ptrtoint ptr %m_log to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %m_log, align 4
  %m_features.i = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 61
  %2 = ptrtoint ptr %m_features.i to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %m_features.i, align 8
  %and.i = and i64 %3, 4611686018427387904
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.i = icmp ne i64 %and.i, 0
  call void @__sanitizer_cov_trace_const_cmp8(i64 -1, i64 %lsn)
  %cmp = icmp eq i64 %lsn, -1
  %or.cond = or i1 %cmp, %tobool.i
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %if.end2

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end2:                                          ; preds = %entry
  %l_curr_cycle.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 22
  %4 = ptrtoint ptr %l_curr_cycle.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %l_curr_cycle.i, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !482
  %l_curr_block.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 24
  %6 = ptrtoint ptr %l_curr_block.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %l_curr_block.i, align 16
  %8 = lshr i64 %lsn, 32
  %conv.i = trunc i64 %8 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %conv.i)
  %cmp.i = icmp ult i32 %5, %conv.i
  br i1 %cmp.i, label %if.end2.if.then.i_crit_edge, label %lor.lhs.false.i

if.end2.if.then.i_crit_edge:                      ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i

lor.lhs.false.i:                                  ; preds = %if.end2
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %conv.i)
  %cmp14.i = icmp eq i32 %5, %conv.i
  %conv16.i = trunc i64 %lsn to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %conv16.i)
  %cmp17.i = icmp ult i32 %7, %conv16.i
  %or.cond.i = select i1 %cmp14.i, i1 %cmp17.i, i1 false
  br i1 %or.cond.i, label %lor.lhs.false.i.if.then.i_crit_edge, label %lor.lhs.false.i.cleanup_crit_edge

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false.i.if.then.i_crit_edge:              ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false.i.if.then.i_crit_edge, %if.end2.if.then.i_crit_edge
  %l_icloglock.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 21
  tail call void @_raw_spin_lock(ptr noundef %l_icloglock.i) #16
  %9 = ptrtoint ptr %l_curr_cycle.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %l_curr_cycle.i, align 8
  %11 = ptrtoint ptr %l_curr_block.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %l_curr_block.i, align 16
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock.i) #16
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %conv.i)
  %cmp24.i = icmp ult i32 %10, %conv.i
  br i1 %cmp24.i, label %if.then.i.if.then5_crit_edge, label %lor.lhs.false26.i

if.then.i.if.then5_crit_edge:                     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  %.pre = trunc i64 %lsn to i32
  br label %if.then5

lor.lhs.false26.i:                                ; preds = %if.then.i
  call void @__sanitizer_cov_trace_cmp4(i32 %10, i32 %conv.i)
  %cmp29.i = icmp eq i32 %10, %conv.i
  %conv32.i = trunc i64 %lsn to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %12, i32 %conv32.i)
  %cmp33.i = icmp ult i32 %12, %conv32.i
  %or.cond52.i = select i1 %cmp29.i, i1 %cmp33.i, i1 false
  br i1 %or.cond52.i, label %lor.lhs.false26.i.if.then5_crit_edge, label %lor.lhs.false26.i.cleanup_crit_edge

lor.lhs.false26.i.cleanup_crit_edge:              ; preds = %lor.lhs.false26.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

lor.lhs.false26.i.if.then5_crit_edge:             ; preds = %lor.lhs.false26.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then5

if.then5:                                         ; preds = %lor.lhs.false26.i.if.then5_crit_edge, %if.then.i.if.then5_crit_edge
  %conv6.pre-phi = phi i32 [ %.pre, %if.then.i.if.then5_crit_edge ], [ %conv32.i, %lor.lhs.false26.i.if.then5_crit_edge ]
  tail call void @_raw_spin_lock(ptr noundef %l_icloglock.i) #16
  %13 = ptrtoint ptr %l_curr_cycle.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %l_curr_cycle.i, align 8
  %15 = ptrtoint ptr %l_curr_block.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %l_curr_block.i, align 16
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %mp, ptr noundef nonnull @.str.88, i32 noundef %conv.i, i32 noundef %conv6.pre-phi, i32 noundef %14, i32 noundef %16) #16
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock.i) #16
  br label %cleanup

cleanup:                                          ; preds = %if.then5, %lor.lhs.false26.i.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i1 [ true, %entry.cleanup_crit_edge ], [ false, %if.then5 ], [ true, %lor.lhs.false26.i.cleanup_crit_edge ], [ true, %lor.lhs.false.i.cleanup_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @xlog_use_incompat_feat(ptr noundef %log) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %l_incompat_users = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 37
  tail call void @down_read(ptr noundef %l_incompat_users) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @down_read(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @xlog_drop_incompat_feat(ptr noundef %log) local_unnamed_addr #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %l_incompat_users = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 37
  tail call void @up_read(ptr noundef %l_incompat_users) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @up_read(ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #9

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xfs_log_regrant(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @xlog_grant_head_wait(ptr noundef %log, ptr noundef %head, ptr noundef %tic, i32 noundef %need_bytes) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %waiters = getelementptr inbounds %struct.xlog_grant_head, ptr %head, i32 0, i32 1
  %prev.i = getelementptr inbounds %struct.xlog_grant_head, ptr %head, i32 0, i32 1, i32 1
  %0 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %tic, ptr noundef %1, ptr noundef %waiters) #16
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_add_tail.exit_crit_edge

entry.list_add_tail.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %2 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %tic, ptr %prev.i, align 4
  %3 = ptrtoint ptr %tic to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %waiters, ptr %tic, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %tic, i32 0, i32 1
  %4 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %1, ptr %prev3.i.i, align 4
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %tic, ptr %1, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %entry.list_add_tail.exit_crit_edge
  %l_opstate.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 6
  %grant = getelementptr inbounds %struct.xlog_grant_head, ptr %head, i32 0, i32 2
  br label %do.body

do.body:                                          ; preds = %do.cond81.do.body_crit_edge, %list_add_tail.exit
  %6 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %l_opstate.i, align 4
  %8 = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.end, label %do.body.shutdown_crit_edge

do.body.shutdown_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %shutdown

if.end:                                           ; preds = %do.body
  tail call fastcc void @xlog_grant_push_ail(ptr noundef %log, i32 noundef %need_bytes)
  br label %__here

__here:                                           ; preds = %if.end
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 2
  %11 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %task, align 8
  %task_state_change = getelementptr inbounds %struct.task_struct, ptr %12, i32 0, i32 212
  %13 = ptrtoint ptr %task_state_change to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 ptrtoint (ptr blockaddress(@xlog_grant_head_wait, %__here) to i32), ptr %task_state_change, align 4
  %14 = load ptr, ptr %task, align 8
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %15)
  store volatile i32 2, ptr %14, align 128
  tail call void @_raw_spin_unlock(ptr noundef %head) #16
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @xfsstats to i32))
  %16 = load ptr, ptr @xfsstats, align 4
  %17 = ptrtoint ptr %16 to i32
  %cpu = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %18 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %19
  %20 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %arrayidx, align 4
  %add = add i32 %21, %17
  %22 = inttoptr i32 %add to ptr
  %xs_sleep_logspace = getelementptr inbounds %struct.__xfsstats, ptr %22, i32 0, i32 39
  %23 = ptrtoint ptr %xs_sleep_logspace to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %xs_sleep_logspace, align 4
  %inc = add i32 %24, 1
  store i32 %inc, ptr %xs_sleep_logspace, align 4
  %25 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %log, align 128
  %m_stats = getelementptr inbounds %struct.xfs_mount, ptr %26, i32 0, i32 92
  %27 = ptrtoint ptr %m_stats to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %m_stats, align 4
  %29 = ptrtoint ptr %28 to i32
  %30 = load i32, ptr %cpu, align 4
  %arrayidx71 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %30
  %31 = ptrtoint ptr %arrayidx71 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %arrayidx71, align 4
  %add72 = add i32 %32, %29
  %33 = inttoptr i32 %add72 to ptr
  %xs_sleep_logspace73 = getelementptr inbounds %struct.__xfsstats, ptr %33, i32 0, i32 39
  %34 = ptrtoint ptr %xs_sleep_logspace73 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %xs_sleep_logspace73, align 4
  %inc74 = add i32 %35, 1
  store i32 %inc74, ptr %xs_sleep_logspace73, align 4
  tail call fastcc void @trace_xfs_log_grant_sleep(ptr noundef %log, ptr noundef %tic)
  tail call void @schedule() #16
  tail call fastcc void @trace_xfs_log_grant_wake(ptr noundef %log, ptr noundef %tic)
  tail call void @_raw_spin_lock(ptr noundef %head) #16
  %36 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %l_opstate.i, align 4
  %38 = and i32 %37, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool.i103.not = icmp eq i32 %38, 0
  br i1 %tobool.i103.not, label %do.cond81, label %__here.shutdown_crit_edge

__here.shutdown_crit_edge:                        ; preds = %__here
  call void @__sanitizer_cov_trace_pc() #18
  br label %shutdown

do.cond81:                                        ; preds = %__here
  %call82 = tail call fastcc i32 @xlog_space_left(ptr noundef %log, ptr noundef %grant)
  %cmp = icmp slt i32 %call82, %need_bytes
  br i1 %cmp, label %do.cond81.do.body_crit_edge, label %do.end83

do.cond81.do.body_crit_edge:                      ; preds = %do.cond81
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

do.end83:                                         ; preds = %do.cond81
  %call.i.i104 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %tic) #16
  br i1 %call.i.i104, label %if.end.i.i105, label %do.end83.return_crit_edge

do.end83.return_crit_edge:                        ; preds = %do.end83
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end.i.i105:                                    ; preds = %do.end83
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %tic, i32 0, i32 1
  %39 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %prev.i.i, align 4
  %41 = ptrtoint ptr %tic to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %tic, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %40, ptr %prev1.i.i.i, align 4
  %44 = ptrtoint ptr %40 to i32
  call void @__asan_store4_noabort(i32 %44)
  store volatile ptr %42, ptr %40, align 4
  br label %return

shutdown:                                         ; preds = %__here.shutdown_crit_edge, %do.body.shutdown_crit_edge
  %call.i.i106 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %tic) #16
  br i1 %call.i.i106, label %if.end.i.i109, label %shutdown.return_crit_edge

shutdown.return_crit_edge:                        ; preds = %shutdown
  call void @__sanitizer_cov_trace_pc() #18
  br label %return

if.end.i.i109:                                    ; preds = %shutdown
  call void @__sanitizer_cov_trace_pc() #18
  %prev.i.i107 = getelementptr inbounds %struct.list_head, ptr %tic, i32 0, i32 1
  %45 = ptrtoint ptr %prev.i.i107 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %prev.i.i107, align 4
  %47 = ptrtoint ptr %tic to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %tic, align 4
  %prev1.i.i.i108 = getelementptr inbounds %struct.list_head, ptr %48, i32 0, i32 1
  %49 = ptrtoint ptr %prev1.i.i.i108 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %46, ptr %prev1.i.i.i108, align 4
  %50 = ptrtoint ptr %46 to i32
  call void @__asan_store4_noabort(i32 %50)
  store volatile ptr %48, ptr %46, align 4
  br label %return

return:                                           ; preds = %if.end.i.i109, %shutdown.return_crit_edge, %if.end.i.i105, %do.end83.return_crit_edge
  %retval.0 = phi i32 [ 0, %do.end83.return_crit_edge ], [ 0, %if.end.i.i105 ], [ -5, %shutdown.return_crit_edge ], [ -5, %if.end.i.i109 ]
  %51 = ptrtoint ptr %tic to i32
  call void @__asan_store4_noabort(i32 %51)
  store volatile ptr %tic, ptr %tic, align 4
  %prev.i3.i110 = getelementptr inbounds %struct.list_head, ptr %tic, i32 0, i32 1
  %52 = ptrtoint ptr %prev.i3.i110 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %tic, ptr %prev.i3.i110, align 4
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xfs_log_grant_sleep(ptr noundef %log, ptr noundef %tic) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_grant_sleep, i32 0, i32 1), ptr blockaddress(@trace_xfs_log_grant_sleep, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !483
  %call42 = tail call i32 @__traceiter_xfs_log_grant_sleep(ptr noundef null, ptr noundef %log, ptr noundef %tic) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !484
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_grant_sleep, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_grant_sleep, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xfs_log_grant_sleep.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xfs_log_grant_sleep.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 1285, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xfs_log_grant_wake(ptr noundef %log, ptr noundef %tic) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_grant_wake, i32 0, i32 1), ptr blockaddress(@trace_xfs_log_grant_wake, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !485
  %call42 = tail call i32 @__traceiter_xfs_log_grant_wake(ptr noundef null, ptr noundef %log, ptr noundef %tic) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !486
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_grant_wake, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_grant_wake, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xfs_log_grant_wake.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xfs_log_grant_wake.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 1286, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xfs_log_grant_sleep(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xfs_log_grant_wake(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @generic_atomic64_cmpxchg(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xfs_log_regrant_exit(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xfs_log_reserve(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xfs_log_reserve_exit(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xlog_iclog_release(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #10

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @xlog_cil_process_committed(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #5 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xlog_iclog_syncing(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kobject_init_and_add(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_swait_queue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xlog_iclog_wait_on(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @default_wake_function(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @add_wait_queue_exclusive(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @remove_wait_queue(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @xfs_errortag_test(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @xfs_alert(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @xfs_fs_measure_sickness(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xfs_log_umount_write(ptr noundef %log, ptr noundef %tic) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_umount_write, i32 0, i32 1), ptr blockaddress(@trace_xfs_log_umount_write, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !487
  %call42 = tail call i32 @__traceiter_xfs_log_umount_write(ptr noundef null, ptr noundef %log, ptr noundef %tic) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !488
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_umount_write, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_umount_write, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xfs_log_umount_write.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xfs_log_umount_write.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 1284, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xfs_log_umount_write(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @kobject_del(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @kobject_put(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @wait_for_completion(ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xfs_log_grant_wake_up(ptr noundef %log, ptr noundef %tic) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_grant_wake_up, i32 0, i32 1), ptr blockaddress(@trace_xfs_log_grant_wake_up, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !489
  %call42 = tail call i32 @__traceiter_xfs_log_grant_wake_up(ptr noundef null, ptr noundef %log, ptr noundef %tic) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !490
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_grant_wake_up, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xfs_log_grant_wake_up, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xfs_log_grant_wake_up.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xfs_log_grant_wake_up.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 1287, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @wake_up_process(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xfs_log_grant_wake_up(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @xlog_cil_empty(ptr noundef) local_unnamed_addr #5

; Function Attrs: nofree noinline norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @xlog_iclogs_empty(ptr nocapture noundef readonly %log) unnamed_addr #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %l_iclog = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 20
  %0 = ptrtoint ptr %l_iclog to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %l_iclog, align 8
  br label %do.body

do.body:                                          ; preds = %if.end.do.body_crit_edge, %entry
  %iclog.0 = phi ptr [ %1, %entry ], [ %7, %if.end.do.body_crit_edge ]
  %ic_data = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 13
  %2 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ic_data, align 4
  %h_num_logops = getelementptr inbounds %struct.xlog_rec_header, ptr %3, i32 0, i32 8
  %4 = ptrtoint ptr %h_num_logops to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %h_num_logops, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %if.end, label %do.body.cleanup_crit_edge

do.body.cleanup_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

if.end:                                           ; preds = %do.body
  %ic_next = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 2
  %6 = ptrtoint ptr %ic_next to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ic_next, align 8
  %cmp.not = icmp eq ptr %7, %1
  br i1 %cmp.not, label %if.end.cleanup_crit_edge, label %if.end.do.body_crit_edge

if.end.do.body_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup

cleanup:                                          ; preds = %if.end.cleanup_crit_edge, %do.body.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %do.body.cleanup_crit_edge ], [ 1, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @xfs_ail_min_lsn(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @generic_atomic64_read(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xfs_log_assign_tail_lsn(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @generic_atomic64_set(ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_delayed_work_on(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__msecs_to_jiffies(i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @xfs_log_worker(ptr nocapture noundef readonly %work) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -20
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr, align 128
  %call1 = tail call zeroext i1 @xfs_fs_writable(ptr noundef %1, i32 noundef 1) #16
  br i1 %call1, label %land.lhs.true, label %entry.if.else_crit_edge

entry.if.else_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

land.lhs.true:                                    ; preds = %entry
  %m_log.i = getelementptr inbounds %struct.xfs_mount, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %m_log.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %m_log.i, align 4
  %call.i = tail call zeroext i1 @xlog_cil_empty(ptr noundef %3) #16
  br i1 %call.i, label %if.end.i, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else

if.end.i:                                         ; preds = %land.lhs.true
  %l_icloglock.i = getelementptr inbounds %struct.xlog, ptr %3, i32 0, i32 21
  tail call void @_raw_spin_lock(ptr noundef %l_icloglock.i) #16
  %l_covered_state.i = getelementptr inbounds %struct.xlog, ptr %3, i32 0, i32 19
  %4 = ptrtoint ptr %l_covered_state.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %l_covered_state.i, align 4
  %6 = zext i32 %5 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.163)
  switch i32 %5, label %if.end.i.if.then_crit_edge [
    i32 2, label %if.end.i.xfs_log_need_covered.exit_crit_edge
    i32 4, label %if.end.i.xfs_log_need_covered.exit_crit_edge15
    i32 0, label %if.end.i.xfs_log_need_covered.exit_crit_edge16
    i32 1, label %if.end.i.sw.bb1.i_crit_edge
    i32 3, label %if.end.i.sw.bb1.i_crit_edge17
  ]

if.end.i.sw.bb1.i_crit_edge17:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i

if.end.i.sw.bb1.i_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.bb1.i

if.end.i.xfs_log_need_covered.exit_crit_edge16:   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_need_covered.exit

if.end.i.xfs_log_need_covered.exit_crit_edge15:   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_need_covered.exit

if.end.i.xfs_log_need_covered.exit_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_need_covered.exit

if.end.i.if.then_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then

sw.bb1.i:                                         ; preds = %if.end.i.sw.bb1.i_crit_edge, %if.end.i.sw.bb1.i_crit_edge17
  %l_ailp.i = getelementptr inbounds %struct.xlog, ptr %3, i32 0, i32 1
  %7 = ptrtoint ptr %l_ailp.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %l_ailp.i, align 4
  %call2.i = tail call i64 @xfs_ail_min_lsn(ptr noundef %8) #16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %call2.i)
  %tobool.not.i = icmp eq i64 %call2.i, 0
  br i1 %tobool.not.i, label %if.end4.i, label %sw.bb1.i.xfs_log_need_covered.exit_crit_edge

sw.bb1.i.xfs_log_need_covered.exit_crit_edge:     ; preds = %sw.bb1.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_need_covered.exit

if.end4.i:                                        ; preds = %sw.bb1.i
  %call5.i = tail call fastcc i32 @xlog_iclogs_empty(ptr noundef %3) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %if.end4.i.xfs_log_need_covered.exit_crit_edge, label %if.end8.i

if.end4.i.xfs_log_need_covered.exit_crit_edge:    ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xfs_log_need_covered.exit

if.end8.i:                                        ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #18
  %9 = ptrtoint ptr %l_covered_state.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %l_covered_state.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %10)
  %cmp.i = icmp eq i32 %10, 1
  %. = select i1 %cmp.i, i32 2, i32 4
  %11 = ptrtoint ptr %l_covered_state.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %., ptr %l_covered_state.i, align 4
  br label %if.then

xfs_log_need_covered.exit:                        ; preds = %if.end4.i.xfs_log_need_covered.exit_crit_edge, %sw.bb1.i.xfs_log_need_covered.exit_crit_edge, %if.end.i.xfs_log_need_covered.exit_crit_edge, %if.end.i.xfs_log_need_covered.exit_crit_edge15, %if.end.i.xfs_log_need_covered.exit_crit_edge16
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock.i) #16
  br label %if.else

if.then:                                          ; preds = %if.end8.i, %if.end.i.if.then_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock.i) #16
  %call3 = tail call i32 @xfs_sync_sb(ptr noundef %1, i1 noundef zeroext true) #16
  br label %if.end

if.else:                                          ; preds = %xfs_log_need_covered.exit, %land.lhs.true.if.else_crit_edge, %entry.if.else_crit_edge
  %call4 = tail call i32 @xfs_log_force(ptr noundef %1, i32 noundef 0)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %m_ail = getelementptr inbounds %struct.xfs_mount, ptr %1, i32 0, i32 2
  %12 = ptrtoint ptr %m_ail to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %m_ail, align 4
  tail call void @xfs_ail_push_all(ptr noundef %13) #16
  %m_sync_workqueue.i = getelementptr inbounds %struct.xfs_mount, ptr %1, i32 0, i32 23
  %14 = ptrtoint ptr %m_sync_workqueue.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %m_sync_workqueue.i, align 4
  %m_log.i11 = getelementptr inbounds %struct.xfs_mount, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %m_log.i11 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %m_log.i11, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.xfs_param, ptr @xfs_params, i32 0, i32 4, i32 1) to i32))
  %18 = load i32, ptr getelementptr inbounds (%struct.xfs_param, ptr @xfs_params, i32 0, i32 4, i32 1), align 4
  %mul.i = mul i32 %18, 10
  %call2.i.i = tail call i32 @__msecs_to_jiffies(i32 noundef %mul.i) #16
  %l_work.i = getelementptr inbounds %struct.xlog, ptr %17, i32 0, i32 5
  %call.i.i = tail call zeroext i1 @queue_delayed_work_on(i32 noundef 4, ptr noundef %15, ptr noundef %l_work.i, i32 noundef %call2.i.i) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @delayed_work_timer_fn(ptr noundef) #5

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @xlog_grant_head_init(ptr noundef %head) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %grant = getelementptr inbounds %struct.xlog_grant_head, ptr %head, i32 0, i32 2
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %grant, i32 noundef 8) #16
  tail call void @generic_atomic64_set(ptr noundef %grant, i64 noundef 4294967296) #16
  %waiters = getelementptr inbounds %struct.xlog_grant_head, ptr %head, i32 0, i32 1
  %0 = ptrtoint ptr %waiters to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile ptr %waiters, ptr %waiters, align 4
  %prev.i = getelementptr inbounds %struct.xlog_grant_head, ptr %head, i32 0, i32 1, i32 1
  %1 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %waiters, ptr %prev.i, align 4
  tail call void @__raw_spin_lock_init(ptr noundef %head, ptr noundef nonnull @.str.126, ptr noundef nonnull @xlog_grant_head_init.__key, i16 noundef signext 3) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_rwsem(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: argmemonly mustprogress nofree noinline norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc void @xlog_get_iclog_buffer_size(ptr nocapture noundef %mp, ptr nocapture noundef writeonly %log) unnamed_addr #12 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %m_logbufs = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 55
  %0 = ptrtoint ptr %m_logbufs to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %m_logbufs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %1)
  %cmp = icmp slt i32 %1, 1
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  %2 = ptrtoint ptr %m_logbufs to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 8, ptr %m_logbufs, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %m_logbsize = getelementptr inbounds %struct.xfs_mount, ptr %mp, i32 0, i32 56
  %3 = ptrtoint ptr %m_logbsize to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %m_logbsize, align 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %4)
  %cmp2 = icmp slt i32 %4, 1
  br i1 %cmp2, label %if.then3, label %if.end.if.end5_crit_edge

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %5 = ptrtoint ptr %m_logbsize to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 32768, ptr %m_logbsize, align 128
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %if.end.if.end5_crit_edge
  %6 = ptrtoint ptr %m_logbufs to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %m_logbufs, align 4
  %l_iclog_bufs = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 13
  %8 = ptrtoint ptr %l_iclog_bufs to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %l_iclog_bufs, align 4
  %9 = ptrtoint ptr %m_logbsize to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %m_logbsize, align 128
  %l_iclog_size = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 12
  %11 = ptrtoint ptr %l_iclog_size to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %l_iclog_size, align 16
  %12 = load i32, ptr %m_logbsize, align 128
  %sub = add i32 %12, 32767
  %div = sdiv i32 %sub, 32768
  %l_iclog_heads = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 10
  %13 = ptrtoint ptr %l_iclog_heads to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 %div, ptr %l_iclog_heads, align 8
  %shl = shl nsw i32 %div, 9
  %l_iclog_hsize = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 9
  %14 = ptrtoint ptr %l_iclog_hsize to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %shl, ptr %l_iclog_hsize, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_waitqueue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @xlog_ioend_work(ptr noundef %work) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ic_log = getelementptr i8, ptr %work, i32 -212
  %0 = ptrtoint ptr %ic_log to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ic_log, align 16
  %bi_status = getelementptr i8, ptr %work, i32 62
  %2 = ptrtoint ptr %bi_status to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %bi_status, align 2
  %call = tail call i32 @blk_status_to_errno(i8 noundef zeroext %3) #16
  %ic_fail_crc = getelementptr i8, ptr %work, i32 -60
  %4 = ptrtoint ptr %ic_fail_crc to i32
  call void @__asan_load1_noabort(i32 %4)
  %bf.load = load i8, ptr %ic_fail_crc, align 8
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %bf.cast.not = icmp sgt i8 %bf.load, -1
  %spec.store.select = select i1 %bf.cast.not, i32 %call, i32 -5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.store.select)
  %tobool.not = icmp eq i32 %spec.store.select, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.if.then2_crit_edge

entry.if.then2_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then2

lor.lhs.false:                                    ; preds = %entry
  %5 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %1, align 128
  %call1 = tail call zeroext i1 @xfs_errortag_test(ptr noundef %6, ptr noundef nonnull @.str.127, ptr noundef nonnull @.str.1, i32 noundef 1375, i32 noundef 17) #16
  br i1 %call1, label %lor.lhs.false.if.then2_crit_edge, label %lor.lhs.false.if.end5_crit_edge

lor.lhs.false.if.end5_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end5

lor.lhs.false.if.then2_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.then2

if.then2:                                         ; preds = %lor.lhs.false.if.then2_crit_edge, %entry.if.then2_crit_edge
  %7 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %1, align 128
  tail call void (ptr, ptr, ...) @xfs_alert(ptr noundef %8, ptr noundef nonnull @.str.128, i32 noundef %spec.store.select) #16
  %9 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %1, align 128
  tail call void @xfs_do_force_shutdown(ptr noundef %10, i32 noundef 2, ptr noundef nonnull @.str.1, i32 noundef 1377) #16
  br label %if.end5

if.end5:                                          ; preds = %if.then2, %lor.lhs.false.if.end5_crit_edge
  %add.ptr = getelementptr i8, ptr %work, i32 -324
  %ic_bio = getelementptr i8, ptr %work, i32 44
  tail call fastcc void @xlog_state_done_syncing(ptr noundef %add.ptr)
  tail call void @bio_uninit(ptr noundef %ic_bio) #16
  %ic_sema = getelementptr i8, ptr %work, i32 -56
  tail call void @up(ptr noundef %ic_sema) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_workqueue(ptr noundef, i32 noundef, i32 noundef, ...) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @xlog_cil_init(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @destroy_workqueue(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmem_alloc(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @xfs_fs_writable(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @xfs_ail_push_all(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @kvmalloc_node(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #13

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blk_status_to_errno(i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @xlog_state_done_syncing(ptr noundef %iclog) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ic_log = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 4
  %0 = ptrtoint ptr %ic_log to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ic_log, align 16
  %l_icloglock = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 21
  tail call void @_raw_spin_lock(ptr noundef %l_icloglock) #16
  %ic_refcnt = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 12
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %ic_refcnt, i32 noundef 4) #16
  %2 = ptrtoint ptr %ic_refcnt to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %ic_refcnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %entry.cond.end_crit_edge, label %cond.false, !prof !432

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.129, ptr noundef nonnull @.str.1, i32 noundef 2941) #16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry.cond.end_crit_edge
  %4 = tail call ptr @llvm.returnaddress(i32 0)
  %5 = ptrtoint ptr %4 to i32
  tail call fastcc void @trace_xlog_iclog_sync_done(ptr noundef %iclog, i32 noundef %5)
  %l_opstate.i = getelementptr inbounds %struct.xlog, ptr %1, i32 0, i32 6
  %6 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %l_opstate.i, align 4
  %8 = and i32 %7, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %if.then, label %cond.end.if.end_crit_edge

cond.end.if.end_crit_edge:                        ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %cond.end
  %ic_state = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 7
  %9 = ptrtoint ptr %ic_state to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %ic_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %10)
  %cmp3 = icmp eq i32 %10, 2
  br i1 %cmp3, label %if.then.cond.end12_crit_edge, label %cond.false11, !prof !432

if.then.cond.end12_crit_edge:                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end12

cond.false11:                                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.130, ptr noundef nonnull @.str.1, i32 noundef 2950) #16
  br label %cond.end12

cond.end12:                                       ; preds = %cond.false11, %if.then.cond.end12_crit_edge
  %11 = ptrtoint ptr %ic_state to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 3, ptr %ic_state, align 4
  br label %if.end

if.end:                                           ; preds = %cond.end12, %cond.end.if.end_crit_edge
  %ic_write_wait = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 1
  tail call void @__wake_up(ptr noundef %ic_write_wait, i32 noundef 3, i32 noundef 0, ptr noundef null) #16
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock) #16
  tail call fastcc void @xlog_state_do_callback(ptr noundef %1)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_uninit(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @up(ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xlog_iclog_sync_done(ptr noundef %iclog, i32 noundef %caller_ip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_sync_done, i32 0, i32 1), ptr blockaddress(@trace_xlog_iclog_sync_done, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !491
  %call42 = tail call i32 @__traceiter_xlog_iclog_sync_done(ptr noundef null, ptr noundef %iclog, i32 noundef %caller_ip) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !492
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_sync_done, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_sync_done, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xlog_iclog_sync_done.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xlog_iclog_sync_done.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 4109, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @xlog_state_do_callback(ptr noundef %log) unnamed_addr #3 align 64 {
entry:
  %cb_list.i = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %l_icloglock = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 21
  tail call void @_raw_spin_lock(ptr noundef %l_icloglock) #16
  %l_iclog.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 20
  %0 = getelementptr inbounds %struct.list_head, ptr %cb_list.i, i32 0, i32 1
  %l_last_sync_lsn.i.i.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 27
  %l_opstate.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 6
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.then2, %entry
  %flushcnt.0.ph = phi i32 [ %add, %if.then2 ], [ 0, %entry ]
  br label %while.cond

while.cond:                                       ; preds = %if.end.while.cond_crit_edge, %while.cond.outer
  %repeats.0 = phi i32 [ %inc, %if.end.while.cond_crit_edge ], [ 0, %while.cond.outer ]
  %1 = ptrtoint ptr %l_iclog.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %l_iclog.i, align 8
  br label %do.body.i.outer

do.body.i.outer:                                  ; preds = %cleanup.i.thread.do.body.i.outer_crit_edge, %while.cond
  %iclog.0.i.ph = phi ptr [ %iclog.1.i20, %cleanup.i.thread.do.body.i.outer_crit_edge ], [ %2, %while.cond ]
  %ran_callback.0.off0.i.ph = phi i1 [ true, %cleanup.i.thread.do.body.i.outer_crit_edge ], [ false, %while.cond ]
  br label %do.body.i

do.body.i:                                        ; preds = %cleanup.i.do.body.i_crit_edge, %do.body.i.outer
  %iclog.0.i = phi ptr [ %iclog.1.i, %cleanup.i.do.body.i_crit_edge ], [ %iclog.0.i.ph, %do.body.i.outer ]
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %cb_list.i) #16
  %3 = ptrtoint ptr %cb_list.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %cb_list.i, ptr %cb_list.i, align 4
  %4 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %cb_list.i, ptr %0, align 4
  %ic_state.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0.i, i32 0, i32 7
  %5 = ptrtoint ptr %ic_state.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %ic_state.i.i, align 4
  %7 = zext i32 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.164)
  switch i32 %6, label %cleanup.thread.i [
    i32 0, label %do.body.i.if.end.i_crit_edge
    i32 5, label %do.body.i.if.end.i_crit_edge40
    i32 3, label %sw.bb1.i.i
  ]

do.body.i.if.end.i_crit_edge40:                   ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

do.body.i.if.end.i_crit_edge:                     ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i

cleanup.thread.i:                                 ; preds = %do.body.i
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %cb_list.i) #16
  br i1 %ran_callback.0.off0.i.ph, label %cleanup.thread.i.while.body_crit_edge, label %cleanup.thread.i.while.end_crit_edge

cleanup.thread.i.while.end_crit_edge:             ; preds = %cleanup.thread.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

cleanup.thread.i.while.body_crit_edge:            ; preds = %cleanup.thread.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

sw.bb1.i.i:                                       ; preds = %do.body.i
  %ic_data.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0.i, i32 0, i32 13
  %8 = ptrtoint ptr %ic_data.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ic_data.i.i, align 4
  %h_lsn.i.i = getelementptr inbounds %struct.xlog_rec_header, ptr %9, i32 0, i32 4
  %10 = ptrtoint ptr %h_lsn.i.i to i32
  call void @__asan_load8_noabort(i32 %10)
  %11 = load i64, ptr %h_lsn.i.i, align 8
  %call.i.i = call fastcc i64 @xlog_get_lowest_lsn(ptr noundef %log) #16
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %call.i.i)
  %tobool.not.i.i = icmp eq i64 %call.i.i, 0
  br i1 %tobool.not.i.i, label %sw.bb1.if.end_crit_edge.i.i, label %land.lhs.true.i.i

sw.bb1.if.end_crit_edge.i.i:                      ; preds = %sw.bb1.i.i
  call void @__sanitizer_cov_trace_pc() #18
  %.pre.i.i = lshr i64 %11, 32
  %.pre12.i.i = trunc i64 %.pre.i.i to i32
  br label %if.end.i.i

land.lhs.true.i.i:                                ; preds = %sw.bb1.i.i
  %12 = lshr i64 %call.i.i, 32
  %conv.i.i.i = trunc i64 %12 to i32
  %13 = lshr i64 %11, 32
  %conv2.i.i.i = trunc i64 %13 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i.i.i, i32 %conv2.i.i.i)
  %cmp.not.i.i.i = icmp eq i32 %conv.i.i.i, %conv2.i.i.i
  br i1 %cmp.not.i.i.i, label %if.end.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i.i.i, i32 %conv2.i.i.i)
  %cmp8.i.i.i = icmp ult i32 %conv.i.i.i, %conv2.i.i.i
  br i1 %cmp8.i.i.i, label %if.then.i.i.i.if.endthread-pre-split.i_crit_edge, label %if.then.i.i.i.if.end.i.i_crit_edge

if.then.i.i.i.if.end.i.i_crit_edge:               ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i

if.then.i.i.i.if.endthread-pre-split.i_crit_edge: ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.endthread-pre-split.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i
  %conv11.i.i.i = trunc i64 %call.i.i to i32
  %conv12.i.i.i = trunc i64 %11 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv11.i.i.i, i32 %conv12.i.i.i)
  %cmp18.i.i.i = icmp ult i32 %conv11.i.i.i, %conv12.i.i.i
  br i1 %cmp18.i.i.i, label %if.end.i.i.i.if.endthread-pre-split.i_crit_edge, label %if.end.i.i.i.if.end.i.i_crit_edge

if.end.i.i.i.if.end.i.i_crit_edge:                ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i.i

if.end.i.i.i.if.endthread-pre-split.i_crit_edge:  ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.endthread-pre-split.i

if.end.i.i:                                       ; preds = %if.end.i.i.i.if.end.i.i_crit_edge, %if.then.i.i.i.if.end.i.i_crit_edge, %sw.bb1.if.end_crit_edge.i.i
  %conv2.i.i.pre-phi.i.i = phi i32 [ %.pre12.i.i, %sw.bb1.if.end_crit_edge.i.i ], [ %conv.i.i.i, %if.end.i.i.i.if.end.i.i_crit_edge ], [ %conv2.i.i.i, %if.then.i.i.i.if.end.i.i_crit_edge ]
  %14 = call ptr @llvm.returnaddress(i32 0) #16
  %15 = ptrtoint ptr %14 to i32
  call fastcc void @trace_xlog_iclog_callback(ptr noundef %iclog.0.i, i32 noundef %15) #16
  %16 = ptrtoint ptr %ic_state.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 4, ptr %ic_state.i.i, align 4
  %call.i.i.i.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %l_last_sync_lsn.i.i.i, i32 noundef 8) #16
  %call.i.i.i.i = call i64 @generic_atomic64_read(ptr noundef %l_last_sync_lsn.i.i.i) #16
  %17 = lshr i64 %call.i.i.i.i, 32
  %conv.i.i.i.i = trunc i64 %17 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv2.i.i.pre-phi.i.i, i32 %conv.i.i.i.i)
  %cmp.not.i.i.i.i = icmp eq i32 %conv2.i.i.pre-phi.i.i, %conv.i.i.i.i
  br i1 %cmp.not.i.i.i.i, label %if.end.i.i.i.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_cmp4(i32 %conv2.i.i.pre-phi.i.i, i32 %conv.i.i.i.i)
  %cmp8.i.i.i.i = icmp ugt i32 %conv2.i.i.pre-phi.i.i, %conv.i.i.i.i
  br i1 %cmp8.i.i.i.i, label %if.then.i.i.i.i.cond.end.i.i.i_crit_edge, label %if.then.i.i.i.i.cond.false.i.i.i_crit_edge

if.then.i.i.i.i.cond.false.i.i.i_crit_edge:       ; preds = %if.then.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.false.i.i.i

if.then.i.i.i.i.cond.end.i.i.i_crit_edge:         ; preds = %if.then.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.i.i.i

if.end.i.i.i.i:                                   ; preds = %if.end.i.i
  %conv11.i.i.i.i = trunc i64 %call.i.i.i.i to i32
  %conv12.i.i.i.i = trunc i64 %11 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv11.i.i.i.i, i32 %conv12.i.i.i.i)
  %.not.i.i.i = icmp ugt i32 %conv11.i.i.i.i, %conv12.i.i.i.i
  br i1 %.not.i.i.i, label %if.end.i.i.i.i.cond.false.i.i.i_crit_edge, label %if.end.i.i.i.i.cond.end.i.i.i_crit_edge

if.end.i.i.i.i.cond.end.i.i.i_crit_edge:          ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.i.i.i

if.end.i.i.i.i.cond.false.i.i.i_crit_edge:        ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.false.i.i.i

cond.false.i.i.i:                                 ; preds = %if.end.i.i.i.i.cond.false.i.i.i_crit_edge, %if.then.i.i.i.i.cond.false.i.i.i_crit_edge
  call void @assfail(ptr noundef null, ptr noundef nonnull @.str.132, ptr noundef nonnull @.str.1, i32 noundef 2801) #16
  br label %cond.end.i.i.i

cond.end.i.i.i:                                   ; preds = %cond.false.i.i.i, %if.end.i.i.i.i.cond.end.i.i.i_crit_edge, %if.then.i.i.i.i.cond.end.i.i.i_crit_edge
  %ic_callbacks.i.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0.i, i32 0, i32 10
  %18 = ptrtoint ptr %ic_callbacks.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %ic_callbacks.i.i.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !438
  %cmp.i.not.i.i.i.i = icmp eq ptr %19, %ic_callbacks.i.i.i
  br i1 %cmp.i.not.i.i.i.i, label %list_empty_careful.exit.i.i.i, label %cond.end.i.i.i.if.end.i9.i.i_crit_edge

cond.end.i.i.i.if.end.i9.i.i_crit_edge:           ; preds = %cond.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i9.i.i

list_empty_careful.exit.i.i.i:                    ; preds = %cond.end.i.i.i
  %prev.i.i.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0.i, i32 0, i32 10, i32 1
  %20 = ptrtoint ptr %prev.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %prev.i.i.i.i, align 4
  %cmp.i.not.i.i.i = icmp eq ptr %21, %ic_callbacks.i.i.i
  br i1 %cmp.i.not.i.i.i, label %list_empty_careful.exit.i.i.i.if.endthread-pre-split.i_crit_edge, label %list_empty_careful.exit.i.i.i.if.end.i9.i.i_crit_edge

list_empty_careful.exit.i.i.i.if.end.i9.i.i_crit_edge: ; preds = %list_empty_careful.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end.i9.i.i

list_empty_careful.exit.i.i.i.if.endthread-pre-split.i_crit_edge: ; preds = %list_empty_careful.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.endthread-pre-split.i

if.end.i9.i.i:                                    ; preds = %list_empty_careful.exit.i.i.i.if.end.i9.i.i_crit_edge, %cond.end.i.i.i.if.end.i9.i.i_crit_edge
  %call.i.i11.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %l_last_sync_lsn.i.i.i, i32 noundef 8) #16
  call void @generic_atomic64_set(ptr noundef %l_last_sync_lsn.i.i.i, i64 noundef %11) #16
  call fastcc void @xlog_grant_push_ail(ptr noundef %log, i32 noundef 0) #16
  br label %if.endthread-pre-split.i

if.endthread-pre-split.i:                         ; preds = %if.end.i9.i.i, %list_empty_careful.exit.i.i.i.if.endthread-pre-split.i_crit_edge, %if.end.i.i.i.if.endthread-pre-split.i_crit_edge, %if.then.i.i.i.if.endthread-pre-split.i_crit_edge
  %22 = ptrtoint ptr %ic_state.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %.pr.i = load i32, ptr %ic_state.i.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.endthread-pre-split.i, %do.body.i.if.end.i_crit_edge, %do.body.i.if.end.i_crit_edge40
  %23 = phi i32 [ %.pr.i, %if.endthread-pre-split.i ], [ %6, %do.body.i.if.end.i_crit_edge ], [ %6, %do.body.i.if.end.i_crit_edge40 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %23)
  %cmp.not.i = icmp eq i32 %23, 4
  br i1 %cmp.not.i, label %if.end2.i, label %cleanup.i

if.end2.i:                                        ; preds = %if.end.i
  %ic_callbacks.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0.i, i32 0, i32 10
  %24 = ptrtoint ptr %ic_callbacks.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile ptr, ptr %ic_callbacks.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %25, %ic_callbacks.i
  br i1 %cmp.i.not.i.i, label %if.end2.i.cleanup.i.thread_crit_edge, label %if.then.i.i

if.end2.i.cleanup.i.thread_crit_edge:             ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cleanup.i.thread

if.then.i.i:                                      ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #18
  %26 = ptrtoint ptr %cb_list.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %cb_list.i, align 4
  %prev2.i.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0.i, i32 0, i32 10, i32 1
  %28 = ptrtoint ptr %prev2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %prev2.i.i.i, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %25, i32 0, i32 1
  %30 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %cb_list.i, ptr %prev3.i.i.i, align 4
  store ptr %25, ptr %cb_list.i, align 4
  %31 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %27, ptr %29, align 4
  %prev6.i.i.i = getelementptr inbounds %struct.list_head, ptr %27, i32 0, i32 1
  %32 = ptrtoint ptr %prev6.i.i.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %29, ptr %prev6.i.i.i, align 4
  %33 = ptrtoint ptr %ic_callbacks.i to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %ic_callbacks.i, ptr %ic_callbacks.i, align 4
  store ptr %ic_callbacks.i, ptr %prev2.i.i.i, align 4
  br label %cleanup.i.thread

cleanup.i:                                        ; preds = %if.end.i
  %iclog.1.in.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0.i, i32 0, i32 2
  %34 = ptrtoint ptr %iclog.1.in.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %iclog.1.i = load ptr, ptr %iclog.1.in.i, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %cb_list.i) #16
  %cmp5.not.i = icmp eq ptr %iclog.1.i, %2
  br i1 %cmp5.not.i, label %xlog_state_do_iclog_callbacks.exit, label %cleanup.i.do.body.i_crit_edge

cleanup.i.do.body.i_crit_edge:                    ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i

cleanup.i.thread:                                 ; preds = %if.then.i.i, %if.end2.i.cleanup.i.thread_crit_edge
  call void @_raw_spin_unlock(ptr noundef %l_icloglock) #16
  %35 = call ptr @llvm.returnaddress(i32 0) #16
  %36 = ptrtoint ptr %35 to i32
  call fastcc void @trace_xlog_iclog_callbacks_start(ptr noundef %iclog.0.i, i32 noundef %36) #16
  call void @xlog_cil_process_committed(ptr noundef nonnull %cb_list.i) #16
  call fastcc void @trace_xlog_iclog_callbacks_done(ptr noundef %iclog.0.i, i32 noundef %36) #16
  call void @_raw_spin_lock(ptr noundef %l_icloglock) #16
  call fastcc void @xlog_state_clean_iclog(ptr noundef %log, ptr noundef %iclog.0.i) #16
  %iclog.1.in.i19 = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0.i, i32 0, i32 2
  %37 = ptrtoint ptr %iclog.1.in.i19 to i32
  call void @__asan_load4_noabort(i32 %37)
  %iclog.1.i20 = load ptr, ptr %iclog.1.in.i19, align 8
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %cb_list.i) #16
  %cmp5.not.i21 = icmp eq ptr %iclog.1.i20, %2
  br i1 %cmp5.not.i21, label %cleanup.i.thread.while.body_crit_edge, label %cleanup.i.thread.do.body.i.outer_crit_edge

cleanup.i.thread.do.body.i.outer_crit_edge:       ; preds = %cleanup.i.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i.outer

cleanup.i.thread.while.body_crit_edge:            ; preds = %cleanup.i.thread
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

xlog_state_do_iclog_callbacks.exit:               ; preds = %cleanup.i
  br i1 %ran_callback.0.off0.i.ph, label %xlog_state_do_iclog_callbacks.exit.while.body_crit_edge, label %xlog_state_do_iclog_callbacks.exit.while.end_crit_edge

xlog_state_do_iclog_callbacks.exit.while.end_crit_edge: ; preds = %xlog_state_do_iclog_callbacks.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

xlog_state_do_iclog_callbacks.exit.while.body_crit_edge: ; preds = %xlog_state_do_iclog_callbacks.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.body

while.body:                                       ; preds = %xlog_state_do_iclog_callbacks.exit.while.body_crit_edge, %cleanup.i.thread.while.body_crit_edge, %cleanup.thread.i.while.body_crit_edge
  %38 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %l_opstate.i, align 4
  %40 = and i32 %39, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool.i.not = icmp eq i32 %40, 0
  br i1 %tobool.i.not, label %if.end, label %while.body.while.end_crit_edge

while.body.while.end_crit_edge:                   ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.end

if.end:                                           ; preds = %while.body
  %inc = add i32 %repeats.0, 1
  %cmp = icmp sgt i32 %inc, 5000
  br i1 %cmp, label %if.then2, label %if.end.while.cond_crit_edge

if.end.while.cond_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %while.cond

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %add = add i32 %inc, %flushcnt.0.ph
  %41 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %log, align 128
  call void (ptr, ptr, ...) @xfs_warn(ptr noundef %42, ptr noundef nonnull @.str.131, ptr noundef nonnull @__func__.xlog_state_do_callback, i32 noundef %add) #16
  br label %while.cond.outer

while.end:                                        ; preds = %while.body.while.end_crit_edge, %xlog_state_do_iclog_callbacks.exit.while.end_crit_edge, %cleanup.thread.i.while.end_crit_edge
  %43 = ptrtoint ptr %l_iclog.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %l_iclog.i, align 8
  %ic_state = getelementptr inbounds %struct.xlog_in_core, ptr %44, i32 0, i32 7
  %45 = ptrtoint ptr %ic_state to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %ic_state, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %46)
  %cmp4 = icmp eq i32 %46, 0
  br i1 %cmp4, label %if.then5, label %while.end.if.end6_crit_edge

while.end.if.end6_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end6

if.then5:                                         ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #18
  %l_flush_wait = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 18
  call void @__wake_up(ptr noundef %l_flush_wait, i32 noundef 3, i32 noundef 0, ptr noundef null) #16
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %while.end.if.end6_crit_edge
  call void @_raw_spin_unlock(ptr noundef %l_icloglock) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xlog_iclog_sync_done(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xlog_iclog_callbacks_start(ptr noundef %iclog, i32 noundef %caller_ip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_callbacks_start, i32 0, i32 1), ptr blockaddress(@trace_xlog_iclog_callbacks_start, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !493
  %call42 = tail call i32 @__traceiter_xlog_iclog_callbacks_start(ptr noundef null, ptr noundef %iclog, i32 noundef %caller_ip) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !494
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_callbacks_start, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_callbacks_start, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xlog_iclog_callbacks_start.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xlog_iclog_callbacks_start.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 4100, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xlog_iclog_callbacks_done(ptr noundef %iclog, i32 noundef %caller_ip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_callbacks_done, i32 0, i32 1), ptr blockaddress(@trace_xlog_iclog_callbacks_done, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !495
  %call42 = tail call i32 @__traceiter_xlog_iclog_callbacks_done(ptr noundef null, ptr noundef %iclog, i32 noundef %caller_ip) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !496
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_callbacks_done, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_callbacks_done, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xlog_iclog_callbacks_done.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xlog_iclog_callbacks_done.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 4101, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @xlog_state_clean_iclog(ptr nocapture noundef %log, ptr noundef %dirty_iclog) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call ptr @llvm.returnaddress(i32 0)
  %1 = ptrtoint ptr %0 to i32
  tail call fastcc void @trace_xlog_iclog_clean(ptr noundef %dirty_iclog, i32 noundef %1)
  %ic_state = getelementptr inbounds %struct.xlog_in_core, ptr %dirty_iclog, i32 0, i32 7
  %2 = ptrtoint ptr %ic_state to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 5, ptr %ic_state, align 4
  %l_iclog.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 20
  %3 = ptrtoint ptr %l_iclog.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %l_iclog.i, align 8
  br label %do.body.i

do.body.i:                                        ; preds = %do.cond.i.do.body.i_crit_edge, %entry
  %iclogs_changed.0 = phi i32 [ 0, %entry ], [ %iclogs_changed.1, %do.cond.i.do.body.i_crit_edge ]
  %iclog.0.i = phi ptr [ %4, %entry ], [ %28, %do.cond.i.do.body.i_crit_edge ]
  %ic_state.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0.i, i32 0, i32 7
  %5 = ptrtoint ptr %ic_state.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %ic_state.i, align 4
  %7 = zext i32 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.165)
  switch i32 %6, label %do.body.i.xlog_state_activate_iclogs.exit_crit_edge [
    i32 5, label %if.then.i
    i32 0, label %do.body.i.do.cond.i_crit_edge
  ]

do.body.i.do.cond.i_crit_edge:                    ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond.i

do.body.i.xlog_state_activate_iclogs.exit_crit_edge: ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_state_activate_iclogs.exit

if.then.i:                                        ; preds = %do.body.i
  %ic_callbacks.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0.i, i32 0, i32 10
  %8 = ptrtoint ptr %ic_callbacks.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile ptr, ptr %ic_callbacks.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #16, !srcloc !438
  %cmp.i.not.i.i.i = icmp eq ptr %9, %ic_callbacks.i.i
  br i1 %cmp.i.not.i.i.i, label %list_empty_careful.exit.i.i, label %if.then.i.cond.false.i.i_crit_edge

if.then.i.cond.false.i.i_crit_edge:               ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.false.i.i

list_empty_careful.exit.i.i:                      ; preds = %if.then.i
  %prev.i.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0.i, i32 0, i32 10, i32 1
  %10 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %prev.i.i.i, align 4
  %cmp.i.not.i.i = icmp eq ptr %11, %ic_callbacks.i.i
  br i1 %cmp.i.not.i.i, label %list_empty_careful.exit.i.i.cond.end.i.i_crit_edge, label %list_empty_careful.exit.i.i.cond.false.i.i_crit_edge, !prof !432

list_empty_careful.exit.i.i.cond.false.i.i_crit_edge: ; preds = %list_empty_careful.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.false.i.i

list_empty_careful.exit.i.i.cond.end.i.i_crit_edge: ; preds = %list_empty_careful.exit.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end.i.i

cond.false.i.i:                                   ; preds = %list_empty_careful.exit.i.i.cond.false.i.i_crit_edge, %if.then.i.cond.false.i.i_crit_edge
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.133, ptr noundef nonnull @.str.1, i32 noundef 2643) #16
  br label %cond.end.i.i

cond.end.i.i:                                     ; preds = %cond.false.i.i, %list_empty_careful.exit.i.i.cond.end.i.i_crit_edge
  tail call fastcc void @trace_xlog_iclog_activate(ptr noundef %iclog.0.i, i32 noundef %1) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %iclogs_changed.0)
  %cmp.i.i = icmp eq i32 %iclogs_changed.0, 0
  br i1 %cmp.i.i, label %land.lhs.true.i.i, label %cond.end.i.i.if.else.i.i_crit_edge

cond.end.i.i.if.else.i.i_crit_edge:               ; preds = %cond.end.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i.i

land.lhs.true.i.i:                                ; preds = %cond.end.i.i
  %ic_data.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0.i, i32 0, i32 13
  %12 = ptrtoint ptr %ic_data.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %ic_data.i.i, align 4
  %h_num_logops.i.i = getelementptr inbounds %struct.xlog_rec_header, ptr %13, i32 0, i32 8
  %14 = ptrtoint ptr %h_num_logops.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %h_num_logops.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 5, i32 %15)
  %cmp3.i.i = icmp eq i32 %15, 5
  br i1 %cmp3.i.i, label %land.lhs.true.i.i.xlog_state_activate_iclog.exit.i_crit_edge, label %land.lhs.true.i.i.if.else.i.i_crit_edge

land.lhs.true.i.i.if.else.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.else.i.i

land.lhs.true.i.i.xlog_state_activate_iclog.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_state_activate_iclog.exit.i

if.else.i.i:                                      ; preds = %land.lhs.true.i.i.if.else.i.i_crit_edge, %cond.end.i.i.if.else.i.i_crit_edge
  br label %xlog_state_activate_iclog.exit.i

xlog_state_activate_iclog.exit.i:                 ; preds = %if.else.i.i, %land.lhs.true.i.i.xlog_state_activate_iclog.exit.i_crit_edge
  %storemerge.i.i = phi i32 [ 2, %if.else.i.i ], [ 1, %land.lhs.true.i.i.xlog_state_activate_iclog.exit.i_crit_edge ]
  %16 = ptrtoint ptr %ic_state.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 0, ptr %ic_state.i, align 4
  %ic_offset.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0.i, i32 0, i32 6
  %17 = ptrtoint ptr %ic_offset.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %ic_offset.i.i, align 8
  %ic_data4.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0.i, i32 0, i32 13
  %18 = ptrtoint ptr %ic_data4.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %ic_data4.i.i, align 4
  %h_num_logops5.i.i = getelementptr inbounds %struct.xlog_rec_header, ptr %19, i32 0, i32 8
  %20 = ptrtoint ptr %h_num_logops5.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 0, ptr %h_num_logops5.i.i, align 8
  %21 = load ptr, ptr %ic_data4.i.i, align 4
  %h_cycle_data.i.i = getelementptr inbounds %struct.xlog_rec_header, ptr %21, i32 0, i32 9
  %22 = call ptr @memset(ptr %h_cycle_data.i.i, i32 0, i32 256)
  %23 = load ptr, ptr %ic_data4.i.i, align 4
  %h_lsn.i.i = getelementptr inbounds %struct.xlog_rec_header, ptr %23, i32 0, i32 4
  %24 = ptrtoint ptr %h_lsn.i.i to i32
  call void @__asan_store8_noabort(i32 %24)
  store i64 0, ptr %h_lsn.i.i, align 8
  %25 = load ptr, ptr %ic_data4.i.i, align 4
  %h_tail_lsn.i.i = getelementptr inbounds %struct.xlog_rec_header, ptr %25, i32 0, i32 5
  %26 = ptrtoint ptr %h_tail_lsn.i.i to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 0, ptr %h_tail_lsn.i.i, align 8
  br label %do.cond.i

do.cond.i:                                        ; preds = %xlog_state_activate_iclog.exit.i, %do.body.i.do.cond.i_crit_edge
  %iclogs_changed.1 = phi i32 [ %iclogs_changed.0, %do.body.i.do.cond.i_crit_edge ], [ %storemerge.i.i, %xlog_state_activate_iclog.exit.i ]
  %ic_next.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0.i, i32 0, i32 2
  %27 = ptrtoint ptr %ic_next.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %ic_next.i, align 8
  %29 = ptrtoint ptr %l_iclog.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %l_iclog.i, align 8
  %cmp6.not.i = icmp eq ptr %28, %30
  br i1 %cmp6.not.i, label %do.cond.i.xlog_state_activate_iclogs.exit_crit_edge, label %do.cond.i.do.body.i_crit_edge

do.cond.i.do.body.i_crit_edge:                    ; preds = %do.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i

do.cond.i.xlog_state_activate_iclogs.exit_crit_edge: ; preds = %do.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_state_activate_iclogs.exit

xlog_state_activate_iclogs.exit:                  ; preds = %do.cond.i.xlog_state_activate_iclogs.exit_crit_edge, %do.body.i.xlog_state_activate_iclogs.exit_crit_edge
  %iclogs_changed.2 = phi i32 [ %iclogs_changed.0, %do.body.i.xlog_state_activate_iclogs.exit_crit_edge ], [ %iclogs_changed.1, %do.cond.i.xlog_state_activate_iclogs.exit_crit_edge ]
  tail call void @__wake_up(ptr noundef %dirty_iclog, i32 noundef 3, i32 noundef 0, ptr noundef null) #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %iclogs_changed.2)
  %tobool.not = icmp eq i32 %iclogs_changed.2, 0
  br i1 %tobool.not, label %xlog_state_activate_iclogs.exit.if.end_crit_edge, label %if.then

xlog_state_activate_iclogs.exit.if.end_crit_edge: ; preds = %xlog_state_activate_iclogs.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %xlog_state_activate_iclogs.exit
  %l_covered_state = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 19
  %31 = ptrtoint ptr %l_covered_state to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %l_covered_state, align 4
  %33 = zext i32 %32 to i64
  call void @__sanitizer_cov_trace_switch(i64 %33, ptr @__sancov_gen_cov_switch_values.166)
  switch i32 %32, label %sw.default.i [
    i32 0, label %sw.bb.i
    i32 1, label %if.then.sw.epilog.i_crit_edge
    i32 3, label %if.then.sw.epilog.i_crit_edge7
    i32 2, label %sw.bb2.i
    i32 4, label %sw.bb6.i
  ]

if.then.sw.epilog.i_crit_edge7:                   ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

if.then.sw.epilog.i_crit_edge:                    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

sw.bb.i:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %iclogs_changed.2)
  %cmp.i = icmp eq i32 %iclogs_changed.2, 1
  br i1 %cmp.i, label %sw.bb.i.xlog_covered_state.exit_crit_edge, label %sw.bb.i.sw.epilog.i_crit_edge

sw.bb.i.sw.epilog.i_crit_edge:                    ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

sw.bb.i.xlog_covered_state.exit_crit_edge:        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_covered_state.exit

sw.bb2.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %iclogs_changed.2)
  %cmp3.i = icmp eq i32 %iclogs_changed.2, 1
  br i1 %cmp3.i, label %sw.bb2.i.xlog_covered_state.exit_crit_edge, label %sw.bb2.i.sw.epilog.i_crit_edge

sw.bb2.i.sw.epilog.i_crit_edge:                   ; preds = %sw.bb2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

sw.bb2.i.xlog_covered_state.exit_crit_edge:       ; preds = %sw.bb2.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_covered_state.exit

sw.bb6.i:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %iclogs_changed.2)
  %cmp7.i = icmp eq i32 %iclogs_changed.2, 1
  br i1 %cmp7.i, label %sw.bb6.i.xlog_covered_state.exit_crit_edge, label %sw.bb6.i.sw.epilog.i_crit_edge

sw.bb6.i.sw.epilog.i_crit_edge:                   ; preds = %sw.bb6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %sw.epilog.i

sw.bb6.i.xlog_covered_state.exit_crit_edge:       ; preds = %sw.bb6.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %xlog_covered_state.exit

sw.default.i:                                     ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.12, ptr noundef nonnull @.str.1, i32 noundef 2723) #16
  br label %sw.epilog.i

sw.epilog.i:                                      ; preds = %sw.default.i, %sw.bb6.i.sw.epilog.i_crit_edge, %sw.bb2.i.sw.epilog.i_crit_edge, %sw.bb.i.sw.epilog.i_crit_edge, %if.then.sw.epilog.i_crit_edge, %if.then.sw.epilog.i_crit_edge7
  br label %xlog_covered_state.exit

xlog_covered_state.exit:                          ; preds = %sw.epilog.i, %sw.bb6.i.xlog_covered_state.exit_crit_edge, %sw.bb2.i.xlog_covered_state.exit_crit_edge, %sw.bb.i.xlog_covered_state.exit_crit_edge
  %retval.0.i = phi i32 [ 1, %sw.epilog.i ], [ 0, %sw.bb.i.xlog_covered_state.exit_crit_edge ], [ 3, %sw.bb2.i.xlog_covered_state.exit_crit_edge ], [ 0, %sw.bb6.i.xlog_covered_state.exit_crit_edge ]
  %34 = ptrtoint ptr %l_covered_state to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %retval.0.i, ptr %l_covered_state, align 4
  br label %if.end

if.end:                                           ; preds = %xlog_covered_state.exit, %xlog_state_activate_iclogs.exit.if.end_crit_edge
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define internal fastcc i64 @xlog_get_lowest_lsn(ptr nocapture noundef readonly %log) unnamed_addr #11 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %l_iclog = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 20
  %0 = ptrtoint ptr %l_iclog to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %l_iclog, align 8
  br label %do.body

do.body:                                          ; preds = %do.cond.do.body_crit_edge, %entry
  %iclog.0 = phi ptr [ %1, %entry ], [ %12, %do.cond.do.body_crit_edge ]
  %lowest_lsn.0 = phi i64 [ 0, %entry ], [ %lowest_lsn.1, %do.cond.do.body_crit_edge ]
  %ic_state = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 7
  %2 = ptrtoint ptr %ic_state to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %ic_state, align 4
  %4 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.167)
  switch i32 %3, label %if.end [
    i32 0, label %do.body.do.cond_crit_edge
    i32 5, label %do.body.do.cond_crit_edge25
  ]

do.body.do.cond_crit_edge25:                      ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond

do.body.do.cond_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond

if.end:                                           ; preds = %do.body
  %ic_data = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 13
  %5 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %ic_data, align 4
  %h_lsn = getelementptr inbounds %struct.xlog_rec_header, ptr %6, i32 0, i32 4
  %7 = ptrtoint ptr %h_lsn to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %h_lsn, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %8)
  %tobool.not = icmp ne i64 %8, 0
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %lowest_lsn.0)
  %tobool3.not = icmp eq i64 %lowest_lsn.0, 0
  %or.cond = select i1 %tobool.not, i1 %tobool3.not, i1 false
  br i1 %or.cond, label %if.end.do.cond_crit_edge, label %lor.lhs.false4

if.end.do.cond_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond

lor.lhs.false4:                                   ; preds = %if.end
  %9 = lshr i64 %8, 32
  %conv.i = trunc i64 %9 to i32
  %10 = lshr i64 %lowest_lsn.0, 32
  %conv2.i = trunc i64 %10 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %conv2.i)
  %cmp.not.i = icmp eq i32 %conv.i, %conv2.i
  br i1 %cmp.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %lor.lhs.false4
  call void @__sanitizer_cov_trace_cmp4(i32 %conv.i, i32 %conv2.i)
  %cmp8.i = icmp ult i32 %conv.i, %conv2.i
  br i1 %cmp8.i, label %if.then.i._lsn_cmp.exit.thread_crit_edge, label %if.then.i.do.cond_crit_edge

if.then.i.do.cond_crit_edge:                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond

if.then.i._lsn_cmp.exit.thread_crit_edge:         ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %_lsn_cmp.exit.thread

if.end.i:                                         ; preds = %lor.lhs.false4
  %conv11.i = trunc i64 %8 to i32
  %conv12.i = trunc i64 %lowest_lsn.0 to i32
  call void @__sanitizer_cov_trace_cmp4(i32 %conv11.i, i32 %conv12.i)
  %cmp18.i = icmp ult i32 %conv11.i, %conv12.i
  br i1 %cmp18.i, label %if.end.i._lsn_cmp.exit.thread_crit_edge, label %if.end.i.do.cond_crit_edge

if.end.i.do.cond_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.cond

if.end.i._lsn_cmp.exit.thread_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %_lsn_cmp.exit.thread

_lsn_cmp.exit.thread:                             ; preds = %if.end.i._lsn_cmp.exit.thread_crit_edge, %if.then.i._lsn_cmp.exit.thread_crit_edge
  br label %do.cond

do.cond:                                          ; preds = %_lsn_cmp.exit.thread, %if.end.i.do.cond_crit_edge, %if.then.i.do.cond_crit_edge, %if.end.do.cond_crit_edge, %do.body.do.cond_crit_edge, %do.body.do.cond_crit_edge25
  %lowest_lsn.1 = phi i64 [ %lowest_lsn.0, %do.body.do.cond_crit_edge ], [ %lowest_lsn.0, %do.body.do.cond_crit_edge25 ], [ %lowest_lsn.0, %if.end.i.do.cond_crit_edge ], [ %lowest_lsn.0, %if.then.i.do.cond_crit_edge ], [ %8, %_lsn_cmp.exit.thread ], [ %8, %if.end.do.cond_crit_edge ]
  %ic_next = getelementptr inbounds %struct.xlog_in_core, ptr %iclog.0, i32 0, i32 2
  %11 = ptrtoint ptr %ic_next to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ic_next, align 8
  %cmp9.not = icmp eq ptr %12, %1
  br i1 %cmp9.not, label %do.end, label %do.cond.do.body_crit_edge

do.cond.do.body_crit_edge:                        ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body

do.end:                                           ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #18
  ret i64 %lowest_lsn.1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xlog_iclog_callback(ptr noundef %iclog, i32 noundef %caller_ip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_callback, i32 0, i32 1), ptr blockaddress(@trace_xlog_iclog_callback, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !497
  %call42 = tail call i32 @__traceiter_xlog_iclog_callback(ptr noundef null, ptr noundef %iclog, i32 noundef %caller_ip) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !498
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_callback, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_callback, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xlog_iclog_callback.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xlog_iclog_callback.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 4099, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xlog_iclog_callback(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xlog_iclog_callbacks_start(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xlog_iclog_callbacks_done(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xlog_iclog_clean(ptr noundef %iclog, i32 noundef %caller_ip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_clean, i32 0, i32 1), ptr blockaddress(@trace_xlog_iclog_clean, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !499
  %call42 = tail call i32 @__traceiter_xlog_iclog_clean(ptr noundef null, ptr noundef %iclog, i32 noundef %caller_ip) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !500
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_clean, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_clean, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xlog_iclog_clean.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xlog_iclog_clean.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 4098, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xlog_iclog_clean(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xlog_iclog_activate(ptr noundef %iclog, i32 noundef %caller_ip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_activate, i32 0, i32 1), ptr blockaddress(@trace_xlog_iclog_activate, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !501
  %call42 = tail call i32 @__traceiter_xlog_iclog_activate(ptr noundef null, ptr noundef %iclog, i32 noundef %caller_ip) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !502
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_activate, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_activate, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xlog_iclog_activate.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xlog_iclog_activate.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 4097, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xlog_iclog_activate(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @xfs_ail_push(ptr noundef, i64 noundef) local_unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #14

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xlog_iclog_sync(ptr noundef %iclog, i32 noundef %caller_ip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_sync, i32 0, i32 1), ptr blockaddress(@trace_xlog_iclog_sync, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !503
  %call42 = tail call i32 @__traceiter_xlog_iclog_sync(ptr noundef null, ptr noundef %iclog, i32 noundef %caller_ip) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !504
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_sync, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_sync, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xlog_iclog_sync.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xlog_iclog_sync.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 4107, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nofree noinline norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @xlog_pack_data(ptr nocapture noundef readonly %log, ptr nocapture noundef readonly %iclog, i32 noundef %roundoff) unnamed_addr #15 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %ic_offset = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 6
  %0 = ptrtoint ptr %ic_offset to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ic_offset, align 8
  %add = add i32 %1, %roundoff
  %ic_data = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 13
  %2 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ic_data, align 4
  %h_lsn = getelementptr inbounds %struct.xlog_rec_header, ptr %3, i32 0, i32 4
  %4 = ptrtoint ptr %h_lsn to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %h_lsn, align 8
  %ic_datap = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 9
  %6 = ptrtoint ptr %ic_datap to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ic_datap, align 4
  %conv1 = sext i32 %add to i64
  %sub = add nsw i64 %conv1, 511
  %shr = lshr i64 %sub, 9
  call void @__sanitizer_cov_trace_const_cmp8(i64 512, i64 %sub)
  %cmp58 = icmp ult i64 %sub, 512
  br i1 %cmp58, label %entry.for.end_crit_edge, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  br label %if.end

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

if.end:                                           ; preds = %if.end.if.end_crit_edge, %entry.if.end_crit_edge
  %dp.060 = phi ptr [ %add.ptr, %if.end.if.end_crit_edge ], [ %7, %entry.if.end_crit_edge ]
  %i.059 = phi i32 [ %inc, %if.end.if.end_crit_edge ], [ 0, %entry.if.end_crit_edge ]
  %8 = ptrtoint ptr %dp.060 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %dp.060, align 4
  %10 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ic_data, align 4
  %arrayidx7 = getelementptr %struct.xlog_rec_header, ptr %11, i32 0, i32 9, i32 %i.059
  %12 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %9, ptr %arrayidx7, align 4
  store i32 %5, ptr %dp.060, align 4
  %add.ptr = getelementptr i8, ptr %dp.060, i32 512
  %inc = add nuw nsw i32 %i.059, 1
  %conv = zext i32 %inc to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %shr, i64 %conv)
  %cmp = icmp ule i64 %shr, %conv
  call void @__sanitizer_cov_trace_const_cmp4(i32 62, i32 %i.059)
  %cmp4 = icmp ugt i32 %i.059, 62
  %or.cond = or i1 %cmp4, %cmp
  br i1 %or.cond, label %if.end.for.end_crit_edge, label %if.end.if.end_crit_edge

if.end.if.end_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.end:                                          ; preds = %if.end.for.end_crit_edge, %entry.for.end_crit_edge
  %i.0.lcssa = phi i32 [ 0, %entry.for.end_crit_edge ], [ %inc, %if.end.for.end_crit_edge ]
  %dp.0.lcssa = phi ptr [ %7, %entry.for.end_crit_edge ], [ %add.ptr, %if.end.for.end_crit_edge ]
  %13 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %log, align 128
  %m_features.i = getelementptr inbounds %struct.xfs_mount, ptr %14, i32 0, i32 61
  %15 = ptrtoint ptr %m_features.i to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %m_features.i, align 8
  %and.i = and i64 %16, 32
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.i.not = icmp eq i64 %and.i, 0
  br i1 %tobool.i.not, label %for.end.if.end33_crit_edge, label %if.then8

for.end.if.end33_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end33

if.then8:                                         ; preds = %for.end
  %17 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ic_data, align 4
  %conv116369 = zext i32 %i.0.lcssa to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %shr, i64 %conv116369)
  %cmp1664 = icmp ugt i64 %shr, %conv116369
  br i1 %cmp1664, label %if.then8.for.body18_crit_edge, label %if.then8.for.cond25.preheader_crit_edge

if.then8.for.cond25.preheader_crit_edge:          ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond25.preheader

if.then8.for.body18_crit_edge:                    ; preds = %if.then8
  br label %for.body18

for.cond25.preheader:                             ; preds = %for.body18.for.cond25.preheader_crit_edge, %if.then8.for.cond25.preheader_crit_edge
  %l_iclog_heads = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 10
  %19 = ptrtoint ptr %l_iclog_heads to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %l_iclog_heads, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %20)
  %cmp2667 = icmp sgt i32 %20, 1
  br i1 %cmp2667, label %for.cond25.preheader.for.body28_crit_edge, label %for.cond25.preheader.if.end33_crit_edge

for.cond25.preheader.if.end33_crit_edge:          ; preds = %for.cond25.preheader
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end33

for.cond25.preheader.for.body28_crit_edge:        ; preds = %for.cond25.preheader
  br label %for.body28

for.body18:                                       ; preds = %for.body18.for.body18_crit_edge, %if.then8.for.body18_crit_edge
  %dp.166 = phi ptr [ %add.ptr21, %for.body18.for.body18_crit_edge ], [ %dp.0.lcssa, %if.then8.for.body18_crit_edge ]
  %i.165 = phi i32 [ %inc23, %for.body18.for.body18_crit_edge ], [ %i.0.lcssa, %if.then8.for.body18_crit_edge ]
  %i.165.frozen = freeze i32 %i.165
  %div = sdiv i32 %i.165.frozen, 64
  %21 = mul i32 %div, 64
  %rem.decomposed = sub i32 %i.165.frozen, %21
  %22 = ptrtoint ptr %dp.166 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %dp.166, align 4
  %xh_cycle_data = getelementptr %union.xlog_in_core2, ptr %18, i32 %div, i32 0, i32 1
  %arrayidx20 = getelementptr [64 x i32], ptr %xh_cycle_data, i32 0, i32 %rem.decomposed
  %24 = ptrtoint ptr %arrayidx20 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %arrayidx20, align 4
  store i32 %5, ptr %dp.166, align 4
  %add.ptr21 = getelementptr i8, ptr %dp.166, i32 512
  %inc23 = add i32 %i.165, 1
  %conv11 = sext i32 %inc23 to i64
  %cmp16 = icmp ugt i64 %shr, %conv11
  br i1 %cmp16, label %for.body18.for.body18_crit_edge, label %for.body18.for.cond25.preheader_crit_edge

for.body18.for.cond25.preheader_crit_edge:        ; preds = %for.body18
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.cond25.preheader

for.body18.for.body18_crit_edge:                  ; preds = %for.body18
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body18

for.body28:                                       ; preds = %for.body28.for.body28_crit_edge, %for.cond25.preheader.for.body28_crit_edge
  %i.268 = phi i32 [ %inc31, %for.body28.for.body28_crit_edge ], [ 1, %for.cond25.preheader.for.body28_crit_edge ]
  %arrayidx29 = getelementptr %union.xlog_in_core2, ptr %18, i32 %i.268
  %25 = ptrtoint ptr %arrayidx29 to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %5, ptr %arrayidx29, align 8
  %inc31 = add nuw nsw i32 %i.268, 1
  %26 = ptrtoint ptr %l_iclog_heads to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %l_iclog_heads, align 8
  %cmp26 = icmp slt i32 %inc31, %27
  br i1 %cmp26, label %for.body28.for.body28_crit_edge, label %for.body28.if.end33_crit_edge

for.body28.if.end33_crit_edge:                    ; preds = %for.body28
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end33

for.body28.for.body28_crit_edge:                  ; preds = %for.body28
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body28

if.end33:                                         ; preds = %for.body28.if.end33_crit_edge, %for.cond25.preheader.if.end33_crit_edge, %for.end.if.end33_crit_edge
  ret void
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @xlog_verify_iclog(ptr noundef %log, ptr nocapture noundef readonly %iclog, i32 noundef %count) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %l_icloglock = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 21
  tail call void @_raw_spin_lock(ptr noundef %l_icloglock) #16
  %l_iclog = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 20
  %l_iclog_bufs = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 13
  %0 = ptrtoint ptr %l_iclog to i32
  call void @__asan_load4_noabort(i32 %0)
  %icptr.0143 = load ptr, ptr %l_iclog, align 8
  %1 = ptrtoint ptr %l_iclog_bufs to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %l_iclog_bufs, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp144 = icmp sgt i32 %2, 0
  br i1 %cmp144, label %entry.for.body_crit_edge, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %icptr.0146 = phi ptr [ %icptr.0, %for.inc.for.body_crit_edge ], [ %icptr.0143, %entry.for.body_crit_edge ]
  %i.0145 = phi i32 [ %inc, %for.inc.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  %tobool.not = icmp eq ptr %icptr.0146, null
  br i1 %tobool.not, label %cond.false, label %for.body.for.inc_crit_edge, !prof !437

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc

cond.false:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.140, ptr noundef nonnull @.str.1, i32 noundef 3754) #16
  br label %for.inc

for.inc:                                          ; preds = %cond.false, %for.body.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.0145, 1
  %ic_next = getelementptr inbounds %struct.xlog_in_core, ptr %icptr.0146, i32 0, i32 2
  %3 = ptrtoint ptr %ic_next to i32
  call void @__asan_load4_noabort(i32 %3)
  %icptr.0 = load ptr, ptr %ic_next, align 8
  %4 = ptrtoint ptr %l_iclog_bufs to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %l_iclog_bufs, align 4
  %cmp = icmp slt i32 %inc, %5
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.for.end_crit_edge

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %entry.for.end_crit_edge
  %icptr.0.lcssa = phi ptr [ %icptr.0143, %entry.for.end_crit_edge ], [ %icptr.0, %for.inc.for.end_crit_edge ]
  %6 = ptrtoint ptr %l_iclog to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %l_iclog, align 8
  %cmp4.not = icmp eq ptr %icptr.0.lcssa, %7
  br i1 %cmp4.not, label %for.end.if.end_crit_edge, label %if.then

for.end.if.end_crit_edge:                         ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end

if.then:                                          ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #18
  %8 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %log, align 128
  tail call void (ptr, ptr, ...) @xfs_emerg(ptr noundef %9, ptr noundef nonnull @.str.141, ptr noundef nonnull @__func__.xlog_verify_iclog) #16
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end.if.end_crit_edge
  tail call void @_raw_spin_unlock(ptr noundef %l_icloglock) #16
  %ic_data = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 13
  %10 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ic_data, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %11, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 -17974594, i32 %13)
  %cmp6.not = icmp eq i32 %13, -17974594
  br i1 %cmp6.not, label %if.end.if.end9_crit_edge, label %if.then7

if.end.if.end9_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end9

if.then7:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %14 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %log, align 128
  tail call void (ptr, ptr, ...) @xfs_emerg(ptr noundef %15, ptr noundef nonnull @.str.142, ptr noundef nonnull @__func__.xlog_verify_iclog) #16
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %if.end.if.end9_crit_edge
  %16 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %ic_data, align 4
  %add.ptr13 = getelementptr i8, ptr %17, i32 %count
  %ptr.0147 = getelementptr i8, ptr %17, i32 512
  %cmp14148 = icmp ult ptr %ptr.0147, %add.ptr13
  br i1 %cmp14148, label %if.end9.for.body15_crit_edge, label %if.end9.for.end22_crit_edge

if.end9.for.end22_crit_edge:                      ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end22

if.end9.for.body15_crit_edge:                     ; preds = %if.end9
  br label %for.body15

for.body15:                                       ; preds = %for.inc20.for.body15_crit_edge, %if.end9.for.body15_crit_edge
  %ptr.0149 = phi ptr [ %ptr.0, %for.inc20.for.body15_crit_edge ], [ %ptr.0147, %if.end9.for.body15_crit_edge ]
  %18 = ptrtoint ptr %ptr.0149 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %ptr.0149, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -17974594, i32 %19)
  %cmp16 = icmp eq i32 %19, -17974594
  br i1 %cmp16, label %if.then17, label %for.body15.for.inc20_crit_edge

for.body15.for.inc20_crit_edge:                   ; preds = %for.body15
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.inc20

if.then17:                                        ; preds = %for.body15
  call void @__sanitizer_cov_trace_pc() #18
  %20 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %log, align 128
  tail call void (ptr, ptr, ...) @xfs_emerg(ptr noundef %21, ptr noundef nonnull @.str.143, ptr noundef nonnull @__func__.xlog_verify_iclog) #16
  br label %for.inc20

for.inc20:                                        ; preds = %if.then17, %for.body15.for.inc20_crit_edge
  %ptr.0 = getelementptr i8, ptr %ptr.0149, i32 512
  %cmp14 = icmp ult ptr %ptr.0, %add.ptr13
  br i1 %cmp14, label %for.inc20.for.body15_crit_edge, label %for.inc20.for.end22_crit_edge

for.inc20.for.end22_crit_edge:                    ; preds = %for.inc20
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end22

for.inc20.for.body15_crit_edge:                   ; preds = %for.inc20
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body15

for.end22:                                        ; preds = %for.inc20.for.end22_crit_edge, %if.end9.for.end22_crit_edge
  %22 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %ic_data, align 4
  %h_num_logops = getelementptr inbounds %struct.xlog_rec_header, ptr %23, i32 0, i32 8
  %24 = ptrtoint ptr %h_num_logops to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %h_num_logops, align 8
  %ic_datap = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 9
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %cmp26150 = icmp sgt i32 %25, 0
  br i1 %cmp26150, label %for.body27.lr.ph, label %for.end22.for.end89_crit_edge

for.end22.for.end89_crit_edge:                    ; preds = %for.end22
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end89

for.body27.lr.ph:                                 ; preds = %for.end22
  %26 = ptrtoint ptr %ic_datap to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %ic_datap, align 4
  %sub.ptr.rhs.cast = ptrtoint ptr %27 to i32
  br label %for.body27

for.body27:                                       ; preds = %if.end85.for.body27_crit_edge, %for.body27.lr.ph
  %i.1152 = phi i32 [ 0, %for.body27.lr.ph ], [ %inc88, %if.end85.for.body27_crit_edge ]
  %ptr.1151 = phi ptr [ %27, %for.body27.lr.ph ], [ %add.ptr86, %if.end85.for.body27_crit_edge ]
  %oh_clientid = getelementptr inbounds %struct.xlog_op_header, ptr %ptr.1151, i32 0, i32 2
  %sub.ptr.lhs.cast = ptrtoint ptr %oh_clientid to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %and = and i32 %sub.ptr.sub, 511
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool28.not = icmp eq i32 %and, 0
  br i1 %tobool28.not, label %if.else, label %if.then29

if.then29:                                        ; preds = %for.body27
  call void @__sanitizer_cov_trace_pc() #18
  %28 = ptrtoint ptr %oh_clientid to i32
  call void @__asan_load1_noabort(i32 %28)
  %29 = load i8, ptr %oh_clientid, align 4
  br label %if.end48

if.else:                                          ; preds = %for.body27
  %30 = ptrtoint ptr %ic_datap to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %ic_datap, align 4
  %sub.ptr.rhs.cast34 = ptrtoint ptr %31 to i32
  %sub.ptr.sub35 = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast34
  %conv36 = ashr i32 %sub.ptr.sub35, 9
  call void @__sanitizer_cov_trace_const_cmp4(i32 32767, i32 %sub.ptr.sub35)
  %cmp37 = icmp sgt i32 %sub.ptr.sub35, 32767
  br i1 %cmp37, label %if.then39, label %if.else42

if.then39:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %conv36.frozen = freeze i32 %conv36
  %div = sdiv i32 %conv36.frozen, 64
  %32 = mul i32 %div, 64
  %rem.decomposed = sub i32 %conv36.frozen, %32
  %xh_cycle_data = getelementptr %union.xlog_in_core2, ptr %23, i32 %div, i32 0, i32 1
  %arrayidx40 = getelementptr [64 x i32], ptr %xh_cycle_data, i32 0, i32 %rem.decomposed
  %33 = ptrtoint ptr %arrayidx40 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx40, align 4
  %shr.i = lshr i32 %34, 24
  %conv41 = trunc i32 %shr.i to i8
  br label %if.end48

if.else42:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #18
  %35 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %ic_data, align 4
  %arrayidx44 = getelementptr %struct.xlog_rec_header, ptr %36, i32 0, i32 9, i32 %conv36
  %37 = ptrtoint ptr %arrayidx44 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %arrayidx44, align 4
  %shr.i142 = lshr i32 %38, 24
  %conv46 = trunc i32 %shr.i142 to i8
  br label %if.end48

if.end48:                                         ; preds = %if.else42, %if.then39, %if.then29
  %clientid.0 = phi i8 [ %29, %if.then29 ], [ %conv41, %if.then39 ], [ %conv46, %if.else42 ]
  %39 = zext i8 %clientid.0 to i64
  call void @__sanitizer_cov_trace_switch(i64 %39, ptr @__sancov_gen_cov_switch_values.168)
  switch i8 %clientid.0, label %if.then55 [
    i8 105, label %if.end48.if.end58_crit_edge
    i8 -86, label %if.end48.if.end58_crit_edge158
  ]

if.end48.if.end58_crit_edge158:                   ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end58

if.end48.if.end58_crit_edge:                      ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end58

if.then55:                                        ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  %conv49 = zext i8 %clientid.0 to i32
  %40 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %log, align 128
  tail call void (ptr, ptr, ...) @xfs_warn(ptr noundef %41, ptr noundef nonnull @.str.144, ptr noundef nonnull @__func__.xlog_verify_iclog, i32 noundef %conv49, ptr noundef %ptr.1151, i32 noundef %sub.ptr.sub) #16
  br label %if.end58

if.end58:                                         ; preds = %if.then55, %if.end48.if.end58_crit_edge, %if.end48.if.end58_crit_edge158
  %oh_len = getelementptr inbounds %struct.xlog_op_header, ptr %ptr.1151, i32 0, i32 1
  %sub.ptr.lhs.cast59 = ptrtoint ptr %oh_len to i32
  %sub.ptr.sub61 = sub i32 %sub.ptr.lhs.cast59, %sub.ptr.rhs.cast
  %and62 = and i32 %sub.ptr.sub61, 511
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and62)
  %tobool63.not = icmp eq i32 %and62, 0
  br i1 %tobool63.not, label %if.else66, label %if.end58.if.end85_crit_edge

if.end58.if.end85_crit_edge:                      ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end85

if.else66:                                        ; preds = %if.end58
  %42 = ptrtoint ptr %ic_datap to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %ic_datap, align 4
  %44 = ptrtoint ptr %43 to i32
  %sub = sub i32 %sub.ptr.lhs.cast59, %44
  %45 = lshr i32 %sub, 9
  call void @__sanitizer_cov_trace_const_cmp4(i32 32767, i32 %sub)
  %cmp72 = icmp ugt i32 %sub, 32767
  br i1 %cmp72, label %if.then74, label %if.else80

if.then74:                                        ; preds = %if.else66
  call void @__sanitizer_cov_trace_pc() #18
  %div75141 = lshr i32 %sub, 15
  %rem76 = and i32 %45, 63
  %xh_cycle_data78 = getelementptr %union.xlog_in_core2, ptr %23, i32 %div75141, i32 0, i32 1
  %arrayidx79 = getelementptr [64 x i32], ptr %xh_cycle_data78, i32 0, i32 %rem76
  br label %if.end85

if.else80:                                        ; preds = %if.else66
  call void @__sanitizer_cov_trace_pc() #18
  %46 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %ic_data, align 4
  %arrayidx83 = getelementptr %struct.xlog_rec_header, ptr %47, i32 0, i32 9, i32 %45
  br label %if.end85

if.end85:                                         ; preds = %if.else80, %if.then74, %if.end58.if.end85_crit_edge
  %op_len.0.in = phi ptr [ %arrayidx79, %if.then74 ], [ %arrayidx83, %if.else80 ], [ %oh_len, %if.end58.if.end85_crit_edge ]
  %48 = ptrtoint ptr %op_len.0.in to i32
  call void @__asan_load4_noabort(i32 %48)
  %op_len.0 = load i32, ptr %op_len.0.in, align 4
  %add = add i32 %op_len.0, 12
  %add.ptr86 = getelementptr i8, ptr %ptr.1151, i32 %add
  %inc88 = add nuw nsw i32 %i.1152, 1
  %exitcond.not = icmp eq i32 %inc88, %25
  br i1 %exitcond.not, label %if.end85.for.end89_crit_edge, label %if.end85.for.body27_crit_edge

if.end85.for.body27_crit_edge:                    ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.body27

if.end85.for.end89_crit_edge:                     ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #18
  br label %for.end89

for.end89:                                        ; preds = %if.end85.for.end89_crit_edge, %for.end22.for.end89_crit_edge
  ret void
}

; Function Attrs: noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @xlog_write_iclog(ptr noundef %log, ptr noundef %iclog, i64 noundef %bno, i32 noundef %count) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %l_logBBsize = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 16
  %0 = ptrtoint ptr %l_logBBsize to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %l_logBBsize, align 4
  %conv = sext i32 %1 to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %conv, i64 %bno)
  %cmp = icmp ugt i64 %conv, %bno
  br i1 %cmp, label %entry.cond.end_crit_edge, label %cond.false, !prof !432

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  br label %cond.end

cond.false:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #18
  tail call void @assfail(ptr noundef null, ptr noundef nonnull @.str.145, ptr noundef nonnull @.str.1, i32 noundef 1861) #16
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry.cond.end_crit_edge
  %2 = tail call ptr @llvm.returnaddress(i32 0)
  %3 = ptrtoint ptr %2 to i32
  tail call fastcc void @trace_xlog_iclog_write(ptr noundef %iclog, i32 noundef %3)
  %ic_sema = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 15
  tail call void @down(ptr noundef %ic_sema) #16
  %l_opstate.i = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 6
  %4 = ptrtoint ptr %l_opstate.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %l_opstate.i, align 4
  %6 = and i32 %5, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.i.not = icmp eq i32 %6, 0
  br i1 %tobool.i.not, label %if.end, label %if.then

if.then:                                          ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #18
  tail call fastcc void @xlog_state_done_syncing(ptr noundef %iclog)
  tail call void @up(ptr noundef %ic_sema) #16
  br label %return

if.end:                                           ; preds = %cond.end
  %ic_bio = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 17
  %ic_bvec = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 18
  %add = add i32 %count, 4095
  %div112 = lshr i32 %add, 12
  %conv4 = trunc i32 %div112 to i16
  tail call void @bio_init(ptr noundef %ic_bio, ptr noundef %ic_bvec, i16 noundef zeroext %conv4) #16
  %l_targ = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 3
  %7 = ptrtoint ptr %l_targ to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %l_targ, align 4
  %bt_bdev = getelementptr inbounds %struct.xfs_buftarg, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %bt_bdev to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %bt_bdev, align 4
  %bi_flags.i.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 17, i32 3
  %11 = ptrtoint ptr %bi_flags.i.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %bi_flags.i.i, align 4
  %conv1.i.i = and i16 %12, -2049
  store i16 %conv1.i.i, ptr %bi_flags.i.i, align 4
  %bi_bdev.i = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 17, i32 1
  %13 = ptrtoint ptr %bi_bdev.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %bi_bdev.i, align 4
  %cmp.not.i = icmp eq ptr %14, %10
  br i1 %cmp.not.i, label %if.end.bio_set_dev.exit_crit_edge, label %if.then.i

if.end.bio_set_dev.exit_crit_edge:                ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  br label %bio_set_dev.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #18
  %conv1.i8.i = and i16 %12, -2177
  %15 = ptrtoint ptr %bi_flags.i.i to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 %conv1.i8.i, ptr %bi_flags.i.i, align 4
  br label %bio_set_dev.exit

bio_set_dev.exit:                                 ; preds = %if.then.i, %if.end.bio_set_dev.exit_crit_edge
  %16 = ptrtoint ptr %bi_bdev.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %10, ptr %bi_bdev.i, align 4
  tail call void @bio_associate_blkg(ptr noundef %ic_bio) #16
  %l_logBBstart = getelementptr inbounds %struct.xlog, ptr %log, i32 0, i32 14
  %17 = ptrtoint ptr %l_logBBstart to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %l_logBBstart, align 8
  %add6 = add i64 %18, %bno
  %bi_iter = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 17, i32 8
  %19 = ptrtoint ptr %bi_iter to i32
  call void @__asan_store8_noabort(i32 %19)
  store i64 %add6, ptr %bi_iter, align 8
  %bi_end_io = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 17, i32 10
  %20 = ptrtoint ptr %bi_end_io to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr @xlog_bio_end_io, ptr %bi_end_io, align 16
  %bi_private = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 17, i32 11
  %21 = ptrtoint ptr %bi_private to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %iclog, ptr %bi_private, align 4
  %bi_opf = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 17, i32 2
  %22 = ptrtoint ptr %bi_opf to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 38913, ptr %bi_opf, align 8
  %ic_flags = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 8
  %23 = ptrtoint ptr %ic_flags to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %ic_flags, align 128
  %and = and i32 %24, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool11.not = icmp eq i32 %and, 0
  br i1 %tobool11.not, label %bio_set_dev.exit.if.end26_crit_edge, label %if.then12

bio_set_dev.exit.if.end26_crit_edge:              ; preds = %bio_set_dev.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end26

if.then12:                                        ; preds = %bio_set_dev.exit
  %25 = ptrtoint ptr %bi_opf to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 301057, ptr %bi_opf, align 8
  %26 = ptrtoint ptr %l_targ to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %l_targ, align 4
  %28 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %log, align 128
  %m_ddev_targp = getelementptr inbounds %struct.xfs_mount, ptr %29, i32 0, i32 13
  %30 = ptrtoint ptr %m_ddev_targp to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %m_ddev_targp, align 8
  %cmp18.not = icmp eq ptr %27, %31
  br i1 %cmp18.not, label %if.then12.if.end26_crit_edge, label %if.then20

if.then12.if.end26_crit_edge:                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end26

if.then20:                                        ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #18
  %bt_bdev23 = getelementptr inbounds %struct.xfs_buftarg, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %bt_bdev23 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %bt_bdev23, align 4
  %call24 = tail call i32 @blkdev_issue_flush(ptr noundef %33) #16
  br label %if.end26

if.end26:                                         ; preds = %if.then20, %if.then12.if.end26_crit_edge, %bio_set_dev.exit.if.end26_crit_edge
  %34 = ptrtoint ptr %ic_flags to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %ic_flags, align 128
  %and28 = and i32 %35, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28)
  %tobool29.not = icmp eq i32 %and28, 0
  br i1 %tobool29.not, label %if.end26.if.end36_crit_edge, label %if.then30

if.end26.if.end36_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end36

if.then30:                                        ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #18
  %36 = ptrtoint ptr %bi_opf to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %bi_opf, align 8
  %38 = or i32 %37, 131072
  store i32 %38, ptr %bi_opf, align 8
  br label %if.end36

if.end36:                                         ; preds = %if.then30, %if.end26.if.end36_crit_edge
  %and38 = and i32 %35, -4
  %39 = ptrtoint ptr %ic_flags to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %and38, ptr %ic_flags, align 128
  %ic_data = getelementptr inbounds %struct.xlog_in_core, ptr %iclog, i32 0, i32 13
  %40 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %ic_data, align 4
  br label %do.body.i

do.body.i:                                        ; preds = %do.cond.i.do.body.i_crit_edge, %if.end36
  %data.addr.0.i = phi ptr [ %41, %if.end36 ], [ %add.ptr.i, %do.cond.i.do.body.i_crit_edge ]
  %count.addr.0.i = phi i32 [ %count, %if.end36 ], [ %sub3.i, %do.cond.i.do.body.i_crit_edge ]
  %call.i.i = tail call zeroext i1 @is_vmalloc_addr(ptr noundef %data.addr.0.i) #16
  br i1 %call.i.i, label %if.then.i.i, label %if.end.i.i

if.then.i.i:                                      ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  %call1.i.i = tail call ptr @vmalloc_to_page(ptr noundef %data.addr.0.i) #16
  %.pre.i = ptrtoint ptr %data.addr.0.i to i32
  br label %kmem_to_page.exit.i

if.end.i.i:                                       ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #18
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @mem_map to i32))
  %42 = load ptr, ptr @mem_map, align 4
  %43 = ptrtoint ptr %data.addr.0.i to i32
  %sub.i.i = add i32 %43, 1073741824
  %shr.i.i = lshr i32 %sub.i.i, 12
  %add.ptr.i.i = getelementptr %struct.page, ptr %42, i32 %shr.i.i
  br label %kmem_to_page.exit.i

kmem_to_page.exit.i:                              ; preds = %if.end.i.i, %if.then.i.i
  %.pre-phi.i = phi i32 [ %.pre.i, %if.then.i.i ], [ %43, %if.end.i.i ]
  %retval.0.i.i = phi ptr [ %call1.i.i, %if.then.i.i ], [ %add.ptr.i.i, %if.end.i.i ]
  %and.i = and i32 %.pre-phi.i, 4095
  %sub.i = sub nuw nsw i32 4096, %and.i
  %44 = tail call i32 @llvm.umin.i32(i32 %count.addr.0.i, i32 %sub.i) #16
  %call1.i = tail call i32 @bio_add_page(ptr noundef %ic_bio, ptr noundef %retval.0.i.i, i32 noundef %44, i32 noundef %and.i) #16
  call void @__sanitizer_cov_trace_cmp4(i32 %call1.i, i32 %44)
  %cmp2.not.i = icmp eq i32 %call1.i, %44
  br i1 %cmp2.not.i, label %do.cond.i, label %if.then42

do.cond.i:                                        ; preds = %kmem_to_page.exit.i
  %sub3.i = sub i32 %count.addr.0.i, %44
  %add.ptr.i = getelementptr i8, ptr %data.addr.0.i, i32 %44
  %tobool.not.i = icmp eq i32 %sub3.i, 0
  br i1 %tobool.not.i, label %if.end44, label %do.cond.i.do.body.i_crit_edge

do.cond.i.do.body.i_crit_edge:                    ; preds = %do.cond.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.body.i

if.then42:                                        ; preds = %kmem_to_page.exit.i
  call void @__sanitizer_cov_trace_pc() #18
  %45 = ptrtoint ptr %log to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %log, align 128
  tail call void @xfs_do_force_shutdown(ptr noundef %46, i32 noundef 2, ptr noundef nonnull @.str.1, i32 noundef 1916) #16
  br label %return

if.end44:                                         ; preds = %do.cond.i
  %47 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %ic_data, align 4
  %call46 = tail call zeroext i1 @is_vmalloc_addr(ptr noundef %48) #16
  br i1 %call46, label %if.then47, label %if.end44.if.end49_crit_edge

if.end44.if.end49_crit_edge:                      ; preds = %if.end44
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end49

if.then47:                                        ; preds = %if.end44
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @cacheid to i32))
  %49 = load i32, ptr @cacheid, align 4
  %and2.i.i = and i32 %49, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and2.i.i)
  %tobool2.not.i = icmp eq i32 %and2.i.i, 0
  br i1 %tobool2.not.i, label %if.then47.if.end49_crit_edge, label %if.then.i113

if.then47.if.end49_crit_edge:                     ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end49

if.then.i113:                                     ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #18
  %50 = ptrtoint ptr %ic_data to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %ic_data, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7) to i32))
  %52 = load ptr, ptr getelementptr inbounds (%struct.cpu_cache_fns, ptr @cpu_cache, i32 0, i32 7), align 4
  tail call void %52(ptr noundef %51, i32 noundef %count) #16
  br label %if.end49

if.end49:                                         ; preds = %if.then.i113, %if.then47.if.end49_crit_edge, %if.end44.if.end49_crit_edge
  %conv50 = zext i32 %count to i64
  %sub = add nuw nsw i64 %conv50, 511
  %shr = lshr i64 %sub, 9
  %add52 = add i64 %shr, %bno
  %53 = ptrtoint ptr %l_logBBsize to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %l_logBBsize, align 4
  %conv54 = sext i32 %54 to i64
  call void @__sanitizer_cov_trace_cmp8(i64 %add52, i64 %conv54)
  %cmp55 = icmp ugt i64 %add52, %conv54
  br i1 %cmp55, label %if.then57, label %if.end49.if.end69_crit_edge

if.end49.if.end69_crit_edge:                      ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then57:                                        ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #18
  %55 = trunc i64 %bno to i32
  %conv62 = sub i32 %54, %55
  %call63 = tail call ptr @bio_split(ptr noundef %ic_bio, i32 noundef %conv62, i32 noundef 3072, ptr noundef nonnull @fs_bio_set) #16
  tail call void @bio_chain(ptr noundef %call63, ptr noundef %ic_bio) #16
  tail call void @submit_bio(ptr noundef %call63) #16
  %56 = ptrtoint ptr %l_logBBstart to i32
  call void @__asan_load8_noabort(i32 %56)
  %57 = load i64, ptr %l_logBBstart, align 8
  %58 = ptrtoint ptr %bi_iter to i32
  call void @__asan_store8_noabort(i32 %58)
  store i64 %57, ptr %bi_iter, align 8
  br label %if.end69

if.end69:                                         ; preds = %if.then57, %if.end49.if.end69_crit_edge
  tail call void @submit_bio(ptr noundef %ic_bio) #16
  br label %return

return:                                           ; preds = %if.end69, %if.then42, %if.then
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xlog_iclog_sync(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @xfs_emerg(ptr noundef, ptr noundef, ...) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xlog_iclog_write(ptr noundef %iclog, i32 noundef %caller_ip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_write, i32 0, i32 1), ptr blockaddress(@trace_xlog_iclog_write, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !505
  %call42 = tail call i32 @__traceiter_xlog_iclog_write(ptr noundef null, ptr noundef %iclog, i32 noundef %caller_ip) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !506
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_write, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_write, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xlog_iclog_write.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xlog_iclog_write.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 4112, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @down(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_init(ptr noundef, ptr noundef, i16 noundef zeroext) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @xlog_bio_end_io(ptr nocapture noundef readonly %bio) #1 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  call void @llvm.arm.gnu.eabi.mcount()
  %bi_private = getelementptr inbounds %struct.bio, ptr %bio, i32 0, i32 11
  %0 = ptrtoint ptr %bi_private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %bi_private, align 4
  %ic_log = getelementptr inbounds %struct.xlog_in_core, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %ic_log to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ic_log, align 16
  %l_ioend_workqueue = getelementptr inbounds %struct.xlog, ptr %3, i32 0, i32 4
  %4 = ptrtoint ptr %l_ioend_workqueue to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %l_ioend_workqueue, align 16
  %ic_end_io_work = getelementptr inbounds %struct.xlog_in_core, ptr %1, i32 0, i32 16
  %call.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %5, ptr noundef %ic_end_io_work) #16
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @blkdev_issue_flush(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @is_vmalloc_addr(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bio_split(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_chain(ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @submit_bio(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xlog_iclog_write(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @bio_associate_blkg(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bio_add_page(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @vmalloc_to_page(ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @xlog_cil_destroy(ptr noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xlog_iclog_get_space(ptr noundef %iclog, i32 noundef %caller_ip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_get_space, i32 0, i32 1), ptr blockaddress(@trace_xlog_iclog_get_space, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !507
  %call42 = tail call i32 @__traceiter_xlog_iclog_get_space(ptr noundef null, ptr noundef %iclog, i32 noundef %caller_ip) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !508
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_get_space, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_get_space, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xlog_iclog_get_space.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xlog_iclog_get_space.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 4104, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xlog_iclog_get_space(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xfs_log_ticket_regrant(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xfs_log_ticket_regrant_sub(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xfs_log_ticket_regrant_exit(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xfs_log_ticket_ungrant(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xfs_log_ticket_ungrant_sub(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xfs_log_ticket_ungrant_exit(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xlog_iclog_switch(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xfs_log_force(ptr noundef, ptr noundef, i64 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xlog_iclog_force(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_xlog_iclog_force_lsn(ptr noundef %iclog, i32 noundef %caller_ip) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #18
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_force_lsn, i32 0, i32 1), ptr blockaddress(@trace_xlog_iclog_force_lsn, %do.body)) #16
          to label %if.end48 [label %do.body], !srcloc !431

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !432

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %cleanup.thread

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

cleanup.thread:                                   ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #18
  %9 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !509
  %call42 = tail call i32 @__traceiter_xlog_iclog_force_lsn(ptr noundef null, ptr noundef %iclog, i32 noundef %caller_ip) #16
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !510
  %13 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i73 = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  %preempt_count.i.i74 = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i74 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i74, align 4
  %sub.i = add i32 %16, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74, align 4
  br label %if.end48

if.end48:                                         ; preds = %cleanup.thread, %entry
  %17 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i76 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %21 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %21, i32 %20)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %21, %20
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !432

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.91, i32 noundef 108, i32 noundef 9, ptr noundef null) #16
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %20, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %22 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %20, 31
  %24 = shl nuw i32 1, %and.i.i.i83
  %25 = and i32 %23, %24
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.i84.not = icmp eq i32 %25, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #18
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %26 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %29, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !435
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_force_lsn, i32 0, i32 7) to i32))
  %30 = load volatile ptr, ptr getelementptr inbounds (%struct.tracepoint, ptr @__tracepoint_xlog_iclog_force_lsn, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_xlog_iclog_force_lsn.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #18
  store i1 true, ptr @trace_xlog_iclog_force_lsn.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.89, i32 noundef 4103, ptr noundef nonnull @.str.90) #16
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #16, !srcloc !436
  %31 = tail call i32 @llvm.read_register.i32(metadata !419) #16
  %and.i.i.i.i86 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 1
  %33 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %34, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__traceiter_xlog_iclog_force_lsn(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kmem_cache_alloc(ptr noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #14

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #14

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #14

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #16

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #17 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 160)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #17 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 160)
  ret void
}

attributes #0 = { mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #2 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #3 = { noinline nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #7 = { argmemonly nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { nounwind readonly }
attributes #10 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #11 = { nofree noinline norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #12 = { argmemonly mustprogress nofree noinline norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #14 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #15 = { nofree noinline norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #16 = { nounwind }
attributes #17 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #18 = { nomerge }
attributes #19 = { nounwind allocsize(0) }

!llvm.asan.globals = !{!0, !2, !3, !5, !7, !9, !11, !13, !15, !17, !19, !21, !23, !25, !27, !29, !31, !33, !35, !37, !39, !41, !43, !45, !47, !49, !51, !53, !55, !57, !59, !61, !63, !65, !67, !69, !71, !73, !75, !77, !79, !81, !83, !85, !87, !89, !91, !93, !95, !97, !99, !101, !103, !105, !107, !109, !111, !113, !115, !117, !119, !121, !123, !125, !127, !129, !131, !133, !135, !137, !139, !141, !143, !145, !147, !149, !151, !153, !155, !157, !159, !161, !163, !165, !167, !169, !171, !173, !175, !177, !179, !181, !183, !184, !185, !186, !188, !189, !191, !193, !195, !196, !198, !199, !201, !202, !204, !205, !207, !208, !210, !211, !213, !214, !216, !218, !219, !221, !222, !224, !225, !227, !229, !231, !233, !235, !237, !239, !240, !242, !243, !245, !247, !248, !250, !252, !254, !256, !258, !260, !261, !262, !263, !265, !267, !269, !271, !272, !274, !275, !277, !278, !280, !282, !283, !285, !286, !288, !289, !291, !293, !294, !296, !298, !300, !302, !304, !305, !307, !309, !311, !313, !314, !316, !317, !319, !320, !322, !323, !325, !327, !328, !330, !332, !334, !336, !338, !340, !341, !343, !345, !347, !349, !351, !353, !355, !357, !359, !361, !362, !364, !366, !368, !370, !371, !373, !374, !376, !377, !379, !380, !382, !383, !385, !386, !388, !389, !391, !392, !394, !395, !397, !398, !400, !401, !403, !405, !407, !409, !411, !413, !415, !417}
!llvm.named.register.sp = !{!419}
!llvm.module.flags = !{!420, !421, !422, !423, !424, !425, !426, !427}
!llvm.ident = !{!428}

!0 = !{ptr @.str, !1, !"<string literal>", i1 false, i1 false}
!1 = !{!"../fs/xfs/xfs_log.c", i32 448, i32 2}
!2 = !{ptr @.str.1, !1, !"<string literal>", i1 false, i1 false}
!3 = !{ptr @.str.2, !4, !"<string literal>", i1 false, i1 false}
!4 = !{!"../fs/xfs/xfs_log.c", i32 455, i32 2}
!5 = !{ptr @.str.3, !6, !"<string literal>", i1 false, i1 false}
!6 = !{!"../fs/xfs/xfs_log.c", i32 598, i32 3}
!7 = !{ptr @.str.4, !8, !"<string literal>", i1 false, i1 false}
!8 = !{!"../fs/xfs/xfs_log.c", i32 637, i32 18}
!9 = !{ptr @.str.5, !10, !"<string literal>", i1 false, i1 false}
!10 = !{!"../fs/xfs/xfs_log.c", i32 641, i32 1}
!11 = !{ptr @.str.6, !12, !"<string literal>", i1 false, i1 false}
!12 = !{!"../fs/xfs/xfs_log.c", i32 643, i32 3}
!13 = !{ptr @.str.7, !14, !"<string literal>", i1 false, i1 false}
!14 = !{!"../fs/xfs/xfs_log.c", i32 671, i32 3}
!15 = !{ptr @.str.8, !16, !"<string literal>", i1 false, i1 false}
!16 = !{!"../fs/xfs/xfs_log.c", i32 676, i32 3}
!17 = !{ptr @.str.9, !18, !"<string literal>", i1 false, i1 false}
!18 = !{!"../fs/xfs/xfs_log.c", i32 681, i32 3}
!19 = !{ptr @.str.10, !20, !"<string literal>", i1 false, i1 false}
!20 = !{!"../fs/xfs/xfs_log.c", i32 688, i32 3}
!21 = !{ptr @.str.11, !22, !"<string literal>", i1 false, i1 false}
!22 = !{!"../fs/xfs/xfs_log.c", i32 699, i32 17}
!23 = !{ptr @.str.12, !24, !"<string literal>", i1 false, i1 false}
!24 = !{!"../fs/xfs/xfs_log.c", i32 700, i32 4}
!25 = !{ptr @.str.13, !26, !"<string literal>", i1 false, i1 false}
!26 = !{!"../fs/xfs/xfs_log.c", i32 703, i32 16}
!27 = !{ptr @.str.14, !28, !"<string literal>", i1 false, i1 false}
!28 = !{!"../fs/xfs/xfs_log.c", i32 705, i32 1}
!29 = !{ptr @.str.15, !30, !"<string literal>", i1 false, i1 false}
!30 = !{!"../fs/xfs/xfs_log.c", i32 713, i32 16}
!31 = !{ptr @.str.16, !32, !"<string literal>", i1 false, i1 false}
!32 = !{!"../fs/xfs/xfs_log.c", i32 733, i32 17}
!33 = !{ptr @.str.17, !34, !"<string literal>", i1 false, i1 false}
!34 = !{!"../fs/xfs/xfs_log.c", i32 741, i32 11}
!35 = !{ptr @.str.18, !36, !"<string literal>", i1 false, i1 false}
!36 = !{!"../fs/xfs/xfs_log.c", i32 836, i32 18}
!37 = !{ptr @.str.19, !38, !"<string literal>", i1 false, i1 false}
!38 = !{!"../fs/xfs/xfs_log.c", i32 837, i32 37}
!39 = !{ptr @.str.20, !40, !"<string literal>", i1 false, i1 false}
!40 = !{!"../fs/xfs/xfs_log.c", i32 839, i32 16}
!41 = !{ptr @.str.21, !42, !"<string literal>", i1 false, i1 false}
!42 = !{!"../fs/xfs/xfs_log.c", i32 848, i32 2}
!43 = !{ptr @.str.22, !44, !"<string literal>", i1 false, i1 false}
!44 = !{!"../fs/xfs/xfs_log.c", i32 1047, i32 2}
!45 = !{ptr @.str.23, !46, !"<string literal>", i1 false, i1 false}
!46 = !{!"../fs/xfs/xfs_log.c", i32 1131, i32 3}
!47 = !{ptr @.str.24, !48, !"<string literal>", i1 false, i1 false}
!48 = !{!"../fs/xfs/xfs_log.c", i32 1679, i32 2}
!49 = !{ptr @.str.25, !50, !"<string literal>", i1 false, i1 false}
!50 = !{!"../fs/xfs/xfs_log.c", i32 2134, i32 6}
!51 = !{ptr @.str.26, !52, !"<string literal>", i1 false, i1 false}
!52 = !{!"../fs/xfs/xfs_log.c", i32 2135, i32 6}
!53 = !{ptr @.str.27, !54, !"<string literal>", i1 false, i1 false}
!54 = !{!"../fs/xfs/xfs_log.c", i32 2136, i32 6}
!55 = !{ptr @.str.28, !56, !"<string literal>", i1 false, i1 false}
!56 = !{!"../fs/xfs/xfs_log.c", i32 2137, i32 6}
!57 = !{ptr @.str.29, !58, !"<string literal>", i1 false, i1 false}
!58 = !{!"../fs/xfs/xfs_log.c", i32 2138, i32 6}
!59 = !{ptr @.str.30, !60, !"<string literal>", i1 false, i1 false}
!60 = !{!"../fs/xfs/xfs_log.c", i32 2139, i32 6}
!61 = !{ptr @.str.31, !62, !"<string literal>", i1 false, i1 false}
!62 = !{!"../fs/xfs/xfs_log.c", i32 2140, i32 6}
!63 = !{ptr @.str.32, !64, !"<string literal>", i1 false, i1 false}
!64 = !{!"../fs/xfs/xfs_log.c", i32 2141, i32 6}
!65 = !{ptr @.str.33, !66, !"<string literal>", i1 false, i1 false}
!66 = !{!"../fs/xfs/xfs_log.c", i32 2142, i32 6}
!67 = !{ptr @.str.34, !68, !"<string literal>", i1 false, i1 false}
!68 = !{!"../fs/xfs/xfs_log.c", i32 2143, i32 6}
!69 = !{ptr @.str.35, !70, !"<string literal>", i1 false, i1 false}
!70 = !{!"../fs/xfs/xfs_log.c", i32 2144, i32 6}
!71 = !{ptr @.str.36, !72, !"<string literal>", i1 false, i1 false}
!72 = !{!"../fs/xfs/xfs_log.c", i32 2145, i32 6}
!73 = !{ptr @.str.37, !74, !"<string literal>", i1 false, i1 false}
!74 = !{!"../fs/xfs/xfs_log.c", i32 2146, i32 6}
!75 = !{ptr @.str.38, !76, !"<string literal>", i1 false, i1 false}
!76 = !{!"../fs/xfs/xfs_log.c", i32 2147, i32 6}
!77 = !{ptr @.str.39, !78, !"<string literal>", i1 false, i1 false}
!78 = !{!"../fs/xfs/xfs_log.c", i32 2148, i32 6}
!79 = !{ptr @.str.40, !80, !"<string literal>", i1 false, i1 false}
!80 = !{!"../fs/xfs/xfs_log.c", i32 2149, i32 6}
!81 = !{ptr @.str.41, !82, !"<string literal>", i1 false, i1 false}
!82 = !{!"../fs/xfs/xfs_log.c", i32 2150, i32 6}
!83 = !{ptr @.str.42, !84, !"<string literal>", i1 false, i1 false}
!84 = !{!"../fs/xfs/xfs_log.c", i32 2151, i32 6}
!85 = !{ptr @.str.43, !86, !"<string literal>", i1 false, i1 false}
!86 = !{!"../fs/xfs/xfs_log.c", i32 2152, i32 6}
!87 = !{ptr @.str.44, !88, !"<string literal>", i1 false, i1 false}
!88 = !{!"../fs/xfs/xfs_log.c", i32 2153, i32 6}
!89 = !{ptr @.str.45, !90, !"<string literal>", i1 false, i1 false}
!90 = !{!"../fs/xfs/xfs_log.c", i32 2154, i32 6}
!91 = !{ptr @.str.46, !92, !"<string literal>", i1 false, i1 false}
!92 = !{!"../fs/xfs/xfs_log.c", i32 2155, i32 6}
!93 = !{ptr @.str.47, !94, !"<string literal>", i1 false, i1 false}
!94 = !{!"../fs/xfs/xfs_log.c", i32 2156, i32 6}
!95 = !{ptr @.str.48, !96, !"<string literal>", i1 false, i1 false}
!96 = !{!"../fs/xfs/xfs_log.c", i32 2157, i32 6}
!97 = !{ptr @.str.49, !98, !"<string literal>", i1 false, i1 false}
!98 = !{!"../fs/xfs/xfs_log.c", i32 2158, i32 6}
!99 = !{ptr @.str.50, !100, !"<string literal>", i1 false, i1 false}
!100 = !{!"../fs/xfs/xfs_log.c", i32 2159, i32 6}
!101 = !{ptr @xlog_print_tic_res.res_type_str, !102, !"res_type_str", i1 false, i1 false}
!102 = !{!"../fs/xfs/xfs_log.c", i32 2133, i32 15}
!103 = !{ptr @.str.51, !104, !"<string literal>", i1 false, i1 false}
!104 = !{!"../fs/xfs/xfs_log.c", i32 2164, i32 15}
!105 = !{ptr @.str.52, !106, !"<string literal>", i1 false, i1 false}
!106 = !{!"../fs/xfs/xfs_log.c", i32 2165, i32 15}
!107 = !{ptr @.str.53, !108, !"<string literal>", i1 false, i1 false}
!108 = !{!"../fs/xfs/xfs_log.c", i32 2167, i32 15}
!109 = !{ptr @.str.54, !110, !"<string literal>", i1 false, i1 false}
!110 = !{!"../fs/xfs/xfs_log.c", i32 2169, i32 15}
!111 = !{ptr @.str.55, !112, !"<string literal>", i1 false, i1 false}
!112 = !{!"../fs/xfs/xfs_log.c", i32 2171, i32 15}
!113 = !{ptr @.str.56, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../fs/xfs/xfs_log.c", i32 2173, i32 15}
!115 = !{ptr @.str.57, !116, !"<string literal>", i1 false, i1 false}
!116 = !{!"../fs/xfs/xfs_log.c", i32 2175, i32 15}
!117 = !{ptr @.str.58, !118, !"<string literal>", i1 false, i1 false}
!118 = !{!"../fs/xfs/xfs_log.c", i32 2180, i32 16}
!119 = !{ptr @.str.59, !120, !"<string literal>", i1 false, i1 false}
!120 = !{!"../fs/xfs/xfs_log.c", i32 2182, i32 8}
!121 = !{ptr @.str.60, !122, !"<string literal>", i1 false, i1 false}
!122 = !{!"../fs/xfs/xfs_log.c", i32 2198, i32 15}
!123 = !{ptr @.str.61, !124, !"<string literal>", i1 false, i1 false}
!124 = !{!"../fs/xfs/xfs_log.c", i32 2199, i32 15}
!125 = !{ptr @.str.62, !126, !"<string literal>", i1 false, i1 false}
!126 = !{!"../fs/xfs/xfs_log.c", i32 2200, i32 15}
!127 = !{ptr @.str.63, !128, !"<string literal>", i1 false, i1 false}
!128 = !{!"../fs/xfs/xfs_log.c", i32 2201, i32 15}
!129 = !{ptr @.str.64, !130, !"<string literal>", i1 false, i1 false}
!130 = !{!"../fs/xfs/xfs_log.c", i32 2211, i32 16}
!131 = !{ptr @.str.65, !132, !"<string literal>", i1 false, i1 false}
!132 = !{!"../fs/xfs/xfs_log.c", i32 2212, i32 16}
!133 = !{ptr @.str.66, !134, !"<string literal>", i1 false, i1 false}
!134 = !{!"../fs/xfs/xfs_log.c", i32 2213, i32 16}
!135 = !{ptr @.str.67, !136, !"<string literal>", i1 false, i1 false}
!136 = !{!"../fs/xfs/xfs_log.c", i32 2216, i32 16}
!137 = !{ptr @.str.68, !138, !"<string literal>", i1 false, i1 false}
!138 = !{!"../fs/xfs/xfs_log.c", i32 2217, i32 16}
!139 = !{ptr @.str.69, !140, !"<string literal>", i1 false, i1 false}
!140 = !{!"../fs/xfs/xfs_log.c", i32 2218, i32 16}
!141 = !{ptr @.str.70, !142, !"<string literal>", i1 false, i1 false}
!142 = !{!"../fs/xfs/xfs_log.c", i32 2219, i32 16}
!143 = !{ptr @.str.71, !144, !"<string literal>", i1 false, i1 false}
!144 = !{!"../fs/xfs/xfs_log.c", i32 2226, i32 17}
!145 = !{ptr @.str.72, !146, !"<string literal>", i1 false, i1 false}
!146 = !{!"../fs/xfs/xfs_log.c", i32 2227, i32 17}
!147 = !{ptr @.str.73, !148, !"<string literal>", i1 false, i1 false}
!148 = !{!"../fs/xfs/xfs_log.c", i32 2228, i32 17}
!149 = !{ptr @.str.74, !150, !"<string literal>", i1 false, i1 false}
!150 = !{!"../fs/xfs/xfs_log.c", i32 2229, i32 17}
!151 = !{ptr @.str.75, !152, !"<string literal>", i1 false, i1 false}
!152 = !{!"../fs/xfs/xfs_log.c", i32 2489, i32 8}
!153 = !{ptr @.str.76, !154, !"<string literal>", i1 false, i1 false}
!154 = !{!"../fs/xfs/xfs_log.c", i32 2504, i32 3}
!155 = !{ptr @.str.77, !156, !"<string literal>", i1 false, i1 false}
!156 = !{!"../fs/xfs/xfs_log.c", i32 2531, i32 5}
!157 = !{ptr @.str.78, !158, !"<string literal>", i1 false, i1 false}
!158 = !{!"../fs/xfs/xfs_log.c", i32 2537, i32 4}
!159 = !{ptr @.str.79, !160, !"<string literal>", i1 false, i1 false}
!160 = !{!"../fs/xfs/xfs_log.c", i32 2538, i32 4}
!161 = !{ptr @.str.80, !162, !"<string literal>", i1 false, i1 false}
!162 = !{!"../fs/xfs/xfs_log.c", i32 2576, i32 4}
!163 = !{ptr @.str.81, !164, !"<string literal>", i1 false, i1 false}
!164 = !{!"../fs/xfs/xfs_log.c", i32 2628, i32 2}
!165 = !{ptr @.str.82, !166, !"<string literal>", i1 false, i1 false}
!166 = !{!"../fs/xfs/xfs_log.c", i32 3158, i32 3}
!167 = !{ptr @.str.83, !168, !"<string literal>", i1 false, i1 false}
!168 = !{!"../fs/xfs/xfs_log.c", i32 3210, i32 3}
!169 = !{ptr @.str.84, !170, !"<string literal>", i1 false, i1 false}
!170 = !{!"../fs/xfs/xfs_log.c", i32 3216, i32 2}
!171 = !{ptr @.str.85, !172, !"<string literal>", i1 false, i1 false}
!172 = !{!"../fs/xfs/xfs_log.c", i32 3464, i32 2}
!173 = !{ptr @.str.86, !174, !"<string literal>", i1 false, i1 false}
!174 = !{!"../fs/xfs/xfs_log.c", i32 3488, i32 2}
!175 = !{ptr @.str.87, !176, !"<string literal>", i1 false, i1 false}
!176 = !{!"../fs/xfs/xfs_log.c", i32 3854, i32 2}
!177 = !{ptr @.str.88, !178, !"<string literal>", i1 false, i1 false}
!178 = !{!"../fs/xfs/xfs_log.c", i32 3963, i32 1}
!179 = !{ptr @xfs_log_ticket_cache, !180, !"xfs_log_ticket_cache", i1 false, i1 false}
!180 = !{!"../fs/xfs/xfs_log.c", i32 24, i32 20}
!181 = distinct !{null, !182, !"__already_done", i1 false, i1 false}
!182 = !{!"../fs/xfs/xfs_trace.h", i32 1290, i32 1}
!183 = !{ptr @.str.89, !182, !"<string literal>", i1 false, i1 false}
!184 = distinct !{null, !182, !"__warned", i1 false, i1 false}
!185 = !{ptr @.str.90, !182, !"<string literal>", i1 false, i1 false}
!186 = distinct !{null, !187, !"__already_done", i1 false, i1 false}
!187 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!188 = !{ptr @.str.91, !187, !"<string literal>", i1 false, i1 false}
!189 = !{ptr @.str.92, !190, !"<string literal>", i1 false, i1 false}
!190 = !{!"../fs/xfs/xfs_log.c", i32 176, i32 3}
!191 = distinct !{null, !192, !"__already_done", i1 false, i1 false}
!192 = !{!"../fs/xfs/xfs_log.c", i32 250, i32 3}
!193 = distinct !{null, !194, !"__already_done", i1 false, i1 false}
!194 = !{!"../fs/xfs/xfs_trace.h", i32 1285, i32 1}
!195 = distinct !{null, !194, !"__warned", i1 false, i1 false}
!196 = distinct !{null, !197, !"__already_done", i1 false, i1 false}
!197 = !{!"../fs/xfs/xfs_trace.h", i32 1286, i32 1}
!198 = distinct !{null, !197, !"__warned", i1 false, i1 false}
!199 = distinct !{null, !200, !"__already_done", i1 false, i1 false}
!200 = !{!"../fs/xfs/xfs_trace.h", i32 1291, i32 1}
!201 = distinct !{null, !200, !"__warned", i1 false, i1 false}
!202 = distinct !{null, !203, !"__already_done", i1 false, i1 false}
!203 = !{!"../fs/xfs/xfs_trace.h", i32 1288, i32 1}
!204 = distinct !{null, !203, !"__warned", i1 false, i1 false}
!205 = distinct !{null, !206, !"__already_done", i1 false, i1 false}
!206 = !{!"../fs/xfs/xfs_trace.h", i32 1289, i32 1}
!207 = distinct !{null, !206, !"__warned", i1 false, i1 false}
!208 = distinct !{null, !209, !"__already_done", i1 false, i1 false}
!209 = !{!"../fs/xfs/xfs_trace.h", i32 4105, i32 1}
!210 = distinct !{null, !209, !"__warned", i1 false, i1 false}
!211 = distinct !{null, !212, !"__already_done", i1 false, i1 false}
!212 = !{!"../fs/xfs/xfs_trace.h", i32 4108, i32 1}
!213 = distinct !{null, !212, !"__warned", i1 false, i1 false}
!214 = !{ptr @.str.93, !215, !"<string literal>", i1 false, i1 false}
!215 = !{!"../fs/xfs/xfs_sysfs.h", i32 39, i32 61}
!216 = !{ptr @init_completion.__key, !217, !"__key", i1 false, i1 false}
!217 = !{!"../include/linux/completion.h", i32 87, i32 2}
!218 = !{ptr @.str.94, !217, !"<string literal>", i1 false, i1 false}
!219 = distinct !{null, !220, !"__already_done", i1 false, i1 false}
!220 = !{!"../fs/xfs/xfs_trace.h", i32 4111, i32 1}
!221 = distinct !{null, !220, !"__warned", i1 false, i1 false}
!222 = distinct !{null, !223, !"__already_done", i1 false, i1 false}
!223 = !{!"../fs/xfs/xfs_log_priv.h", i32 624, i32 2}
!224 = distinct !{null, !223, !"<string literal>", i1 false, i1 false}
!225 = !{ptr @.str.96, !226, !"<string literal>", i1 false, i1 false}
!226 = !{!"../fs/xfs/xfs_log.c", i32 1013, i32 6}
!227 = !{ptr @.str.97, !228, !"<string literal>", i1 false, i1 false}
!228 = !{!"../fs/xfs/xfs_log.c", i32 1015, i32 17}
!229 = !{ptr @__func__.xfs_log_unmount_write, !230, !"<string literal>", i1 false, i1 false}
!230 = !{!"../fs/xfs/xfs_log.c", i32 1016, i32 5}
!231 = !{ptr @.str.98, !232, !"<string literal>", i1 false, i1 false}
!232 = !{!"../fs/xfs/xfs_log.c", i32 982, i32 3}
!233 = !{ptr @.str.99, !234, !"<string literal>", i1 false, i1 false}
!234 = !{!"../fs/xfs/xfs_log.c", i32 961, i32 17}
!235 = !{ptr @__func__.xlog_unmount_write, !236, !"<string literal>", i1 false, i1 false}
!236 = !{!"../fs/xfs/xfs_log.c", i32 961, i32 46}
!237 = distinct !{null, !238, !"__already_done", i1 false, i1 false}
!238 = !{!"../fs/xfs/xfs_trace.h", i32 1284, i32 1}
!239 = distinct !{null, !238, !"__warned", i1 false, i1 false}
!240 = distinct !{null, !241, !"__already_done", i1 false, i1 false}
!241 = !{!"../fs/xfs/xfs_trace.h", i32 1287, i32 1}
!242 = distinct !{null, !241, !"__warned", i1 false, i1 false}
!243 = !{ptr @.str.100, !244, !"<string literal>", i1 false, i1 false}
!244 = !{!"../fs/xfs/xfs_log.c", i32 1216, i32 2}
!245 = distinct !{null, !246, !"__already_done", i1 false, i1 false}
!246 = !{!"../fs/xfs/xfs_trace.h", i32 1388, i32 1}
!247 = distinct !{null, !246, !"__warned", i1 false, i1 false}
!248 = !{ptr @.str.101, !249, !"<string literal>", i1 false, i1 false}
!249 = !{!"../fs/xfs/xfs_log.c", i32 1338, i32 3}
!250 = !{ptr @.str.102, !251, !"<string literal>", i1 false, i1 false}
!251 = !{!"../fs/xfs/xfs_log.c", i32 1346, i32 23}
!252 = !{ptr @.str.103, !253, !"<string literal>", i1 false, i1 false}
!253 = !{!"../fs/xfs/xfs_log.c", i32 1347, i32 23}
!254 = !{ptr @.str.104, !255, !"<string literal>", i1 false, i1 false}
!255 = !{!"../fs/xfs/xfs_log.c", i32 1349, i32 23}
!256 = !{ptr @.str.105, !257, !"<string literal>", i1 false, i1 false}
!257 = !{!"../fs/xfs/xfs_log.c", i32 1515, i32 16}
!258 = !{ptr @xlog_alloc_log.__key, !259, !"__key", i1 false, i1 false}
!259 = !{!"../fs/xfs/xfs_log.c", i32 1526, i32 2}
!260 = !{ptr @.str.106, !259, !"<string literal>", i1 false, i1 false}
!261 = !{ptr @xlog_alloc_log.__key.107, !259, !"__key", i1 false, i1 false}
!262 = !{ptr @.str.108, !259, !"<string literal>", i1 false, i1 false}
!263 = !{ptr @.str.109, !264, !"<string literal>", i1 false, i1 false}
!264 = !{!"../fs/xfs/xfs_log.c", i32 1546, i32 17}
!265 = !{ptr @.str.110, !266, !"<string literal>", i1 false, i1 false}
!266 = !{!"../fs/xfs/xfs_log.c", i32 1553, i32 17}
!267 = !{ptr @.str.111, !268, !"<string literal>", i1 false, i1 false}
!268 = !{!"../fs/xfs/xfs_log.c", i32 1562, i32 3}
!269 = !{ptr @xlog_alloc_log.__key.112, !270, !"__key", i1 false, i1 false}
!270 = !{!"../fs/xfs/xfs_log.c", i32 1569, i32 2}
!271 = !{ptr @.str.113, !270, !"<string literal>", i1 false, i1 false}
!272 = !{ptr @xlog_alloc_log.__key.114, !273, !"__key", i1 false, i1 false}
!273 = !{!"../fs/xfs/xfs_log.c", i32 1573, i32 2}
!274 = !{ptr @.str.115, !273, !"<string literal>", i1 false, i1 false}
!275 = !{ptr @xlog_alloc_log.__key.116, !276, !"__key", i1 false, i1 false}
!276 = !{!"../fs/xfs/xfs_log.c", i32 1574, i32 2}
!277 = !{ptr @.str.117, !276, !"<string literal>", i1 false, i1 false}
!278 = !{ptr @.str.118, !279, !"<string literal>", i1 false, i1 false}
!279 = !{!"../fs/xfs/xfs_log.c", i32 1584, i32 2}
!280 = !{ptr @xlog_alloc_log.__key.119, !281, !"__key", i1 false, i1 false}
!281 = !{!"../fs/xfs/xfs_log.c", i32 1621, i32 3}
!282 = !{ptr @.str.120, !281, !"<string literal>", i1 false, i1 false}
!283 = !{ptr @xlog_alloc_log.__key.121, !284, !"__key", i1 false, i1 false}
!284 = !{!"../fs/xfs/xfs_log.c", i32 1622, i32 3}
!285 = !{ptr @.str.122, !284, !"<string literal>", i1 false, i1 false}
!286 = !{ptr @xlog_alloc_log.__key.123, !287, !"__key", i1 false, i1 false}
!287 = !{!"../fs/xfs/xfs_log.c", i32 1623, i32 3}
!288 = !{ptr @.str.124, !287, !"<string literal>", i1 false, i1 false}
!289 = !{ptr @.str.125, !290, !"<string literal>", i1 false, i1 false}
!290 = !{!"../fs/xfs/xfs_log.c", i32 1631, i32 43}
!291 = !{ptr @xlog_grant_head_init.__key, !292, !"__key", i1 false, i1 false}
!292 = !{!"../fs/xfs/xfs_log.c", i32 154, i32 2}
!293 = !{ptr @.str.126, !292, !"<string literal>", i1 false, i1 false}
!294 = !{ptr @.str.127, !295, !"<string literal>", i1 false, i1 false}
!295 = !{!"../fs/xfs/xfs_log.c", i32 1375, i32 6}
!296 = !{ptr @.str.128, !297, !"<string literal>", i1 false, i1 false}
!297 = !{!"../fs/xfs/xfs_log.c", i32 1376, i32 24}
!298 = !{ptr @.str.129, !299, !"<string literal>", i1 false, i1 false}
!299 = !{!"../fs/xfs/xfs_log.c", i32 2941, i32 2}
!300 = !{ptr @.str.130, !301, !"<string literal>", i1 false, i1 false}
!301 = !{!"../fs/xfs/xfs_log.c", i32 2950, i32 3}
!302 = distinct !{null, !303, !"__already_done", i1 false, i1 false}
!303 = !{!"../fs/xfs/xfs_trace.h", i32 4109, i32 1}
!304 = distinct !{null, !303, !"__warned", i1 false, i1 false}
!305 = !{ptr @.str.131, !306, !"<string literal>", i1 false, i1 false}
!306 = !{!"../fs/xfs/xfs_log.c", i32 2916, i32 5}
!307 = !{ptr @__func__.xlog_state_do_callback, !308, !"<string literal>", i1 false, i1 false}
!308 = !{!"../fs/xfs/xfs_log.c", i32 2917, i32 5}
!309 = !{ptr @.str.132, !310, !"<string literal>", i1 false, i1 false}
!310 = !{!"../fs/xfs/xfs_log.c", i32 2800, i32 2}
!311 = distinct !{null, !312, !"__already_done", i1 false, i1 false}
!312 = !{!"../fs/xfs/xfs_trace.h", i32 4099, i32 1}
!313 = distinct !{null, !312, !"__warned", i1 false, i1 false}
!314 = distinct !{null, !315, !"__already_done", i1 false, i1 false}
!315 = !{!"../fs/xfs/xfs_trace.h", i32 4100, i32 1}
!316 = distinct !{null, !315, !"__warned", i1 false, i1 false}
!317 = distinct !{null, !318, !"__already_done", i1 false, i1 false}
!318 = !{!"../fs/xfs/xfs_trace.h", i32 4101, i32 1}
!319 = distinct !{null, !318, !"__warned", i1 false, i1 false}
!320 = distinct !{null, !321, !"__already_done", i1 false, i1 false}
!321 = !{!"../fs/xfs/xfs_trace.h", i32 4098, i32 1}
!322 = distinct !{null, !321, !"__warned", i1 false, i1 false}
!323 = !{ptr @.str.133, !324, !"<string literal>", i1 false, i1 false}
!324 = !{!"../fs/xfs/xfs_log.c", i32 2643, i32 2}
!325 = distinct !{null, !326, !"__already_done", i1 false, i1 false}
!326 = !{!"../fs/xfs/xfs_trace.h", i32 4097, i32 1}
!327 = distinct !{null, !326, !"__warned", i1 false, i1 false}
!328 = !{ptr @sema_init.__key, !329, !"__key", i1 false, i1 false}
!329 = !{!"../include/linux/semaphore.h", i32 33, i32 31}
!330 = !{ptr @.str.134, !331, !"<string literal>", i1 false, i1 false}
!331 = !{!"../include/linux/semaphore.h", i32 34, i32 28}
!332 = !{ptr @.str.135, !333, !"<string literal>", i1 false, i1 false}
!333 = !{!"../include/linux/semaphore.h", i32 35, i32 39}
!334 = !{ptr @.str.136, !335, !"<string literal>", i1 false, i1 false}
!335 = !{!"../fs/xfs/xfs_log.c", i32 2055, i32 6}
!336 = !{ptr @.str.137, !337, !"<string literal>", i1 false, i1 false}
!337 = !{!"../fs/xfs/xfs_log.c", i32 2059, i32 2}
!338 = distinct !{null, !339, !"__already_done", i1 false, i1 false}
!339 = !{!"../fs/xfs/xfs_trace.h", i32 4107, i32 1}
!340 = distinct !{null, !339, !"__warned", i1 false, i1 false}
!341 = !{ptr @.str.138, !342, !"<string literal>", i1 false, i1 false}
!342 = !{!"../fs/xfs/xfs_log.c", i32 1979, i32 2}
!343 = !{ptr @.str.139, !344, !"<string literal>", i1 false, i1 false}
!344 = !{!"../fs/xfs/xfs_log.c", i32 1980, i32 2}
!345 = !{ptr @.str.140, !346, !"<string literal>", i1 false, i1 false}
!346 = !{!"../fs/xfs/xfs_log.c", i32 3754, i32 3}
!347 = !{ptr @.str.141, !348, !"<string literal>", i1 false, i1 false}
!348 = !{!"../fs/xfs/xfs_log.c", i32 3757, i32 24}
!349 = !{ptr @__func__.xlog_verify_iclog, !350, !"<string literal>", i1 false, i1 false}
!350 = !{!"../fs/xfs/xfs_log.c", i32 3757, i32 50}
!351 = !{ptr @.str.142, !352, !"<string literal>", i1 false, i1 false}
!352 = !{!"../fs/xfs/xfs_log.c", i32 3762, i32 24}
!353 = !{ptr @.str.143, !354, !"<string literal>", i1 false, i1 false}
!354 = !{!"../fs/xfs/xfs_log.c", i32 3768, i32 25}
!355 = !{ptr @.str.144, !356, !"<string literal>", i1 false, i1 false}
!356 = !{!"../fs/xfs/xfs_log.c", i32 3799, i32 5}
!357 = !{ptr @.str.145, !358, !"<string literal>", i1 false, i1 false}
!358 = !{!"../fs/xfs/xfs_log.c", i32 1861, i32 2}
!359 = distinct !{null, !360, !"__already_done", i1 false, i1 false}
!360 = !{!"../fs/xfs/xfs_trace.h", i32 4112, i32 1}
!361 = distinct !{null, !360, !"__warned", i1 false, i1 false}
!362 = !{ptr @.str.146, !363, !"<string literal>", i1 false, i1 false}
!363 = !{!"../fs/xfs/xfs_log.c", i32 2315, i32 4}
!364 = !{ptr @.str.147, !365, !"<string literal>", i1 false, i1 false}
!365 = !{!"../fs/xfs/xfs_log.c", i32 2412, i32 3}
!366 = !{ptr @.str.148, !367, !"<string literal>", i1 false, i1 false}
!367 = !{!"../fs/xfs/xfs_log.c", i32 3078, i32 2}
!368 = distinct !{null, !369, !"__already_done", i1 false, i1 false}
!369 = !{!"../fs/xfs/xfs_trace.h", i32 4104, i32 1}
!370 = distinct !{null, !369, !"__warned", i1 false, i1 false}
!371 = distinct !{null, !372, !"__already_done", i1 false, i1 false}
!372 = !{!"../fs/xfs/xfs_trace.h", i32 1292, i32 1}
!373 = distinct !{null, !372, !"__warned", i1 false, i1 false}
!374 = distinct !{null, !375, !"__already_done", i1 false, i1 false}
!375 = !{!"../fs/xfs/xfs_trace.h", i32 1294, i32 1}
!376 = distinct !{null, !375, !"__warned", i1 false, i1 false}
!377 = distinct !{null, !378, !"__already_done", i1 false, i1 false}
!378 = !{!"../fs/xfs/xfs_trace.h", i32 1293, i32 1}
!379 = distinct !{null, !378, !"__warned", i1 false, i1 false}
!380 = distinct !{null, !381, !"__already_done", i1 false, i1 false}
!381 = !{!"../fs/xfs/xfs_trace.h", i32 1295, i32 1}
!382 = distinct !{null, !381, !"__warned", i1 false, i1 false}
!383 = distinct !{null, !384, !"__already_done", i1 false, i1 false}
!384 = !{!"../fs/xfs/xfs_trace.h", i32 1296, i32 1}
!385 = distinct !{null, !384, !"__warned", i1 false, i1 false}
!386 = distinct !{null, !387, !"__already_done", i1 false, i1 false}
!387 = !{!"../fs/xfs/xfs_trace.h", i32 1297, i32 1}
!388 = distinct !{null, !387, !"__warned", i1 false, i1 false}
!389 = distinct !{null, !390, !"__already_done", i1 false, i1 false}
!390 = !{!"../fs/xfs/xfs_trace.h", i32 4106, i32 1}
!391 = distinct !{null, !390, !"__warned", i1 false, i1 false}
!392 = distinct !{null, !393, !"__already_done", i1 false, i1 false}
!393 = !{!"../fs/xfs/xfs_trace.h", i32 1325, i32 1}
!394 = distinct !{null, !393, !"__warned", i1 false, i1 false}
!395 = distinct !{null, !396, !"__already_done", i1 false, i1 false}
!396 = !{!"../fs/xfs/xfs_trace.h", i32 4102, i32 1}
!397 = distinct !{null, !396, !"__warned", i1 false, i1 false}
!398 = distinct !{null, !399, !"__already_done", i1 false, i1 false}
!399 = !{!"../fs/xfs/xfs_trace.h", i32 4103, i32 1}
!400 = distinct !{null, !399, !"__warned", i1 false, i1 false}
!401 = !{ptr @.str.149, !402, !"<string literal>", i1 false, i1 false}
!402 = !{!"../fs/xfs/xfs_log.c", i32 3656, i32 24}
!403 = !{ptr @__func__.xlog_verify_dest_ptr, !404, !"<string literal>", i1 false, i1 false}
!404 = !{!"../fs/xfs/xfs_log.c", i32 3656, i32 43}
!405 = !{ptr @.str.150, !406, !"<string literal>", i1 false, i1 false}
!406 = !{!"../fs/xfs/xfs_log.c", i32 3683, i32 5}
!407 = !{ptr @__func__.xlog_verify_grant_tail, !408, !"<string literal>", i1 false, i1 false}
!408 = !{!"../fs/xfs/xfs_log.c", i32 3683, i32 36}
!409 = !{ptr @.str.151, !410, !"<string literal>", i1 false, i1 false}
!410 = !{!"../fs/xfs/xfs_log.c", i32 3689, i32 5}
!411 = !{ptr @.str.152, !412, !"<string literal>", i1 false, i1 false}
!412 = !{!"../fs/xfs/xfs_log.c", i32 3707, i32 24}
!413 = !{ptr @__func__.xlog_verify_tail_lsn, !414, !"<string literal>", i1 false, i1 false}
!414 = !{!"../fs/xfs/xfs_log.c", i32 3707, i32 52}
!415 = !{ptr @.str.153, !416, !"<string literal>", i1 false, i1 false}
!416 = !{!"../fs/xfs/xfs_log.c", i32 3709, i32 2}
!417 = !{ptr @.str.154, !418, !"<string literal>", i1 false, i1 false}
!418 = !{!"../fs/xfs/xfs_log.c", i32 3712, i32 24}
!419 = !{!"sp"}
!420 = !{i32 1, !"wchar_size", i32 2}
!421 = !{i32 1, !"min_enum_size", i32 4}
!422 = !{i32 8, !"branch-target-enforcement", i32 0}
!423 = !{i32 8, !"sign-return-address", i32 0}
!424 = !{i32 8, !"sign-return-address-all", i32 0}
!425 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!426 = !{i32 7, !"uwtable", i32 1}
!427 = !{i32 7, !"frame-pointer", i32 2}
!428 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!429 = !{i8 0, i8 2}
!430 = !{!"auto-init"}
!431 = !{i64 2148356980, i64 2148356985, i64 2148356998, i64 2148357042, i64 2148357076, i64 2148357097}
!432 = !{!"branch_weights", i32 2000, i32 1}
!433 = !{i64 2159270187}
!434 = !{i64 2159270396}
!435 = !{i64 2150059073}
!436 = !{i64 2150060109}
!437 = !{!"branch_weights", i32 1, i32 2000}
!438 = !{i64 2148506990}
!439 = !{i64 2159286914}
!440 = !{i64 2159287133}
!441 = !{i64 2159236658}
!442 = !{i64 2159236867}
!443 = !{i64 2159253385}
!444 = !{i64 2159253604}
!445 = !{i64 2148817468}
!446 = !{i64 2148732177, i64 2148732209, i64 2148732238, i64 2148732272, i64 2148732303, i64 2148732326}
!447 = !{i64 2148817697}
!448 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!449 = !{i64 2166119042}
!450 = !{i64 2166119273}
!451 = !{i64 2166174136}
!452 = !{i64 2166174367}
!453 = !{i64 2148728992, i64 2148729018, i64 2148729047, i64 2148729081, i64 2148729112, i64 2148729135}
!454 = !{i64 2166229974}
!455 = !{i64 2166230205}
!456 = !{i64 2166418351, i64 2166418833, i64 2166418388, i64 2166418444, i64 2166418478, i64 2166418502, i64 2166418543, i64 2166418564, i64 2166418592, i64 2166418626}
!457 = !{i64 2159577355}
!458 = !{i64 2159577588}
!459 = !{i64 2148728411}
!460 = !{i64 1215011, i64 1215036, i64 1215058, i64 1215074, i64 1215086, i64 1215106, i64 1215130, i64 1215146, i64 1215158}
!461 = !{i64 2148728599}
!462 = !{i64 2159308050}
!463 = !{i64 2159308273}
!464 = !{i64 2159343037}
!465 = !{i64 2159343268}
!466 = !{i64 2159325428}
!467 = !{i64 2159325661}
!468 = !{i64 2159364497}
!469 = !{i64 2159364720}
!470 = !{i64 2159381836}
!471 = !{i64 2159382067}
!472 = !{i64 2159399430}
!473 = !{i64 2159399663}
!474 = !{i64 2166459590, i64 2166464133, i64 2166459627, i64 2166459683, i64 2166459717, i64 2166459741, i64 2166459782, i64 2166459803, i64 2166459831, i64 2166459865}
!475 = !{i64 2166465753}
!476 = !{i64 2166140199}
!477 = !{i64 2166140428}
!478 = !{i64 2159437441}
!479 = !{i64 2159437666}
!480 = !{i64 2166067373}
!481 = !{i64 2166067600}
!482 = !{i64 2155840265}
!483 = !{i64 2159181948}
!484 = !{i64 2159182165}
!485 = !{i64 2159198813}
!486 = !{i64 2159199028}
!487 = !{i64 2159164990}
!488 = !{i64 2159165209}
!489 = !{i64 2159215741}
!490 = !{i64 2159215962}
!491 = !{i64 2166191349}
!492 = !{i64 2166191584}
!493 = !{i64 2166028037}
!494 = !{i64 2166028284}
!495 = !{i64 2166045877}
!496 = !{i64 2166046122}
!497 = !{i64 2166010536}
!498 = !{i64 2166010769}
!499 = !{i64 2165989409}
!500 = !{i64 2165989636}
!501 = !{i64 2165972298}
!502 = !{i64 2165972531}
!503 = !{i64 2166157163}
!504 = !{i64 2166157388}
!505 = !{i64 2166247031}
!506 = !{i64 2166247258}
!507 = !{i64 2166101799}
!508 = !{i64 2166102034}
!509 = !{i64 2166084478}
!510 = !{i64 2166084713}
