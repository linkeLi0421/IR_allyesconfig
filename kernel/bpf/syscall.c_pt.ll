; ModuleID = '/llk/IR_all_yes/kernel/bpf/syscall.c_pt.bc'
source_filename = "../kernel/bpf/syscall.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+bpf_map_put\22, \22a\22\09"
module asm "\09.weak\09__crc_bpf_map_put\09\09\09\09"
module asm "\09.long\09__crc_bpf_map_put\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_bpf_map_put:\09\09\09\09\09"
module asm "\09.asciz \09\22bpf_map_put\22\09\09\09\09\09"
module asm "__kstrtabns_bpf_map_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+bpf_map_inc\22, \22a\22\09"
module asm "\09.weak\09__crc_bpf_map_inc\09\09\09\09"
module asm "\09.long\09__crc_bpf_map_inc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_bpf_map_inc:\09\09\09\09\09"
module asm "\09.asciz \09\22bpf_map_inc\22\09\09\09\09\09"
module asm "__kstrtabns_bpf_map_inc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+bpf_map_inc_with_uref\22, \22a\22\09"
module asm "\09.weak\09__crc_bpf_map_inc_with_uref\09\09\09\09"
module asm "\09.long\09__crc_bpf_map_inc_with_uref\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_bpf_map_inc_with_uref:\09\09\09\09\09"
module asm "\09.asciz \09\22bpf_map_inc_with_uref\22\09\09\09\09\09"
module asm "__kstrtabns_bpf_map_inc_with_uref:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+bpf_map_inc_not_zero\22, \22a\22\09"
module asm "\09.weak\09__crc_bpf_map_inc_not_zero\09\09\09\09"
module asm "\09.long\09__crc_bpf_map_inc_not_zero\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_bpf_map_inc_not_zero:\09\09\09\09\09"
module asm "\09.asciz \09\22bpf_map_inc_not_zero\22\09\09\09\09\09"
module asm "__kstrtabns_bpf_map_inc_not_zero:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+bpf_prog_put\22, \22a\22\09"
module asm "\09.weak\09__crc_bpf_prog_put\09\09\09\09"
module asm "\09.long\09__crc_bpf_prog_put\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_bpf_prog_put:\09\09\09\09\09"
module asm "\09.asciz \09\22bpf_prog_put\22\09\09\09\09\09"
module asm "__kstrtabns_bpf_prog_put:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+bpf_prog_add\22, \22a\22\09"
module asm "\09.weak\09__crc_bpf_prog_add\09\09\09\09"
module asm "\09.long\09__crc_bpf_prog_add\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_bpf_prog_add:\09\09\09\09\09"
module asm "\09.asciz \09\22bpf_prog_add\22\09\09\09\09\09"
module asm "__kstrtabns_bpf_prog_add:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+bpf_prog_sub\22, \22a\22\09"
module asm "\09.weak\09__crc_bpf_prog_sub\09\09\09\09"
module asm "\09.long\09__crc_bpf_prog_sub\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_bpf_prog_sub:\09\09\09\09\09"
module asm "\09.asciz \09\22bpf_prog_sub\22\09\09\09\09\09"
module asm "__kstrtabns_bpf_prog_sub:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+bpf_prog_inc\22, \22a\22\09"
module asm "\09.weak\09__crc_bpf_prog_inc\09\09\09\09"
module asm "\09.long\09__crc_bpf_prog_inc\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_bpf_prog_inc:\09\09\09\09\09"
module asm "\09.asciz \09\22bpf_prog_inc\22\09\09\09\09\09"
module asm "__kstrtabns_bpf_prog_inc:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+bpf_prog_inc_not_zero\22, \22a\22\09"
module asm "\09.weak\09__crc_bpf_prog_inc_not_zero\09\09\09\09"
module asm "\09.long\09__crc_bpf_prog_inc_not_zero\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_bpf_prog_inc_not_zero:\09\09\09\09\09"
module asm "\09.asciz \09\22bpf_prog_inc_not_zero\22\09\09\09\09\09"
module asm "__kstrtabns_bpf_prog_inc_not_zero:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+bpf_prog_get_type_dev\22, \22a\22\09"
module asm "\09.weak\09__crc_bpf_prog_get_type_dev\09\09\09\09"
module asm "\09.long\09__crc_bpf_prog_get_type_dev\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_bpf_prog_get_type_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22bpf_prog_get_type_dev\22\09\09\09\09\09"
module asm "__kstrtabns_bpf_prog_get_type_dev:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.bpf_map_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.spinlock = type { %union.anon.27 }
%union.anon.27 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.28 }
%union.anon.28 = type { i32 }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.file_operations = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.lock_class_key = type { %union.anon.26 }
%union.anon.26 = type { %struct.hlist_node }
%struct.hlist_node = type { ptr, ptr }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.atomic_t = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.syscall_metadata = type { ptr, i32, i32, ptr, ptr, %struct.list_head, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.141, %struct.trace_event, ptr, ptr, %union.anon.143, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.141 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%union.anon.143 = type { ptr }
%struct.bpf_func_proto = type { ptr, i8, i8, i32, %union.anon.171, %union.anon.173, ptr, ptr }
%union.anon.171 = type { %struct.anon.172 }
%struct.anon.172 = type { i32, i32, i32, i32, i32 }
%union.anon.173 = type { %struct.anon.174 }
%struct.anon.174 = type { ptr, ptr, ptr, ptr, ptr }
%struct.bpf_verifier_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.bpf_prog_ops = type { ptr }
%struct.vm_operations_struct = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.cpumask = type { [1 x i32] }
%struct.radix_tree_preload = type { %struct.local_lock_t, i32, ptr }
%struct.local_lock_t = type { %struct.lockdep_map, ptr }
%struct.bpf_link_ops = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.static_key_false = type { %struct.static_key }
%struct.static_key = type { %struct.atomic_t, %union.anon.142 }
%union.anon.142 = type { i32 }
%struct.bpf_map = type { ptr, ptr, ptr, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, [16 x i8], i8, i8, [30 x i8], %struct.atomic64_t, %struct.atomic64_t, %struct.work_struct, %struct.mutex, %struct.atomic64_t, [96 x i8] }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.atomic64_t = type { i64 }
%struct.anon = type { i32, i32, i32, i32, i32, i32, i32, [16 x i8], i32, i32, i32, i32, i32, i64 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.147, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.57 }
%struct.llist_node = type { ptr }
%union.anon.57 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.rb_node = type { i32, ptr, ptr }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.59 }
%union.anon.59 = type { %struct.anon.60 }
%struct.anon.60 = type { ptr, i32, i32, i32, i64, ptr }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.kuid_t = type { i32 }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.rb_root = type { ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.tlbflush_unmap_batch = type {}
%union.anon.147 = type { %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.file = type { %union.anon.25, %struct.path, ptr, ptr, %struct.spinlock, i32, %struct.atomic_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, ptr, %struct.file_ra_state, i64, ptr, ptr, ptr, ptr, i32, i32 }
%union.anon.25 = type { %struct.callback_head }
%struct.path = type { ptr, ptr }
%struct.fown_struct = type { %struct.rwlock_t, ptr, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.file_ra_state = type { i32, i32, i32, i32, i32, i64 }
%struct.vm_area_struct = type { i32, i32, ptr, ptr, %struct.rb_node, i32, ptr, i32, i32, %union.anon.53, %struct.list_head, ptr, ptr, i32, ptr, ptr, %struct.atomic_t, %struct.vm_userfaultfd_ctx }
%union.anon.53 = type { %struct.anon.54 }
%struct.anon.54 = type { %struct.rb_node, i32 }
%struct.vm_userfaultfd_ctx = type { ptr }
%struct.bpf_array = type { %struct.bpf_map, i32, i32, ptr, [4 x i8], %union.anon.218, [112 x i8] }
%union.anon.218 = type { [0 x ptr] }
%struct.anon.217 = type { %struct.spinlock, i32, i8 }
%struct.anon.2 = type { i64, i64, i64, i64, i32, i32, i64, i64 }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], ptr, ptr, ptr, ptr, ptr, %union.anon.96 }
%union.anon.96 = type { %struct.anon.97 }
%struct.anon.97 = type { %struct.anon.98, [0 x %struct.sock_filter] }
%struct.anon.98 = type {}
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.bpf_prog_aux = type { %struct.atomic64_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, %struct.mutex, ptr, ptr, i32, i32, i8, i8, i8, i8, i8, i8, %struct.hlist_node, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, %struct.bpf_ksym, ptr, ptr, %struct.mutex, ptr, ptr, ptr, i64, i32, [2 x ptr], [16 x i8], ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, ptr, %union.anon.95 }
%struct.bpf_ksym = type { i32, i32, [128 x i8], %struct.list_head, %struct.latch_tree_node, i8 }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%union.anon.95 = type { %struct.work_struct }
%struct.bpf_prog_kstats = type { i64, i64, i64 }
%struct.bpf_link = type { %struct.atomic64_t, i32, i32, ptr, ptr, %struct.work_struct }
%struct.bpf_link_primer = type { ptr, ptr, i32, i32 }
%struct.cgroup_subsys_state = type { ptr, ptr, %struct.percpu_ref, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i64, %struct.atomic_t, %struct.work_struct, %struct.rcu_work, ptr }
%struct.percpu_ref = type { i32, ptr }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, ptr }
%struct.percpu_ref_data = type { %struct.atomic_t, ptr, ptr, i8, %struct.callback_head, ptr }
%struct.bpf_prog_stats = type { %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_t, %struct.u64_stats_sync, [8 x i8] }
%struct.u64_stats_t = type { i64 }
%struct.u64_stats_sync = type { %struct.seqcount }
%union.bpf_attr = type { %struct.anon.3 }
%struct.anon.3 = type { i32, i32, i64, i64, i32, i32, i64, i32, i32, [16 x i8], i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, %union.anon.4, i32, i64, i64, i32 }
%union.anon.4 = type { i32 }
%struct.anon.0 = type { i32, i64, %union.anon.1, i64 }
%union.anon.1 = type { i64 }
%struct.cred = type { %struct.atomic_t, %struct.atomic_t, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %union.anon.64 }
%struct.kgid_t = type { i32 }
%struct.kernel_cap_struct = type { [2 x i32] }
%union.anon.64 = type { %struct.callback_head }
%struct.anon.5 = type { i64, i32, i32 }
%struct.anon.6 = type { i32, i32, i32, i32, i32 }
%struct.anon.11 = type { i32, i32, i32, i32, i64, i32 }
%struct.anon.7 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i64, i32, i32 }
%struct.anon.8 = type { %union.anon.9, i32, i32 }
%union.anon.9 = type { i32 }
%struct.bpf_link_info = type { i32, i32, i32, %union.anon.208 }
%union.anon.208 = type { %struct.anon.209 }
%struct.anon.209 = type { i64, i32 }
%struct.bpf_map_info = type { i32, i32, i32, i32, i32, i32, [16 x i8], i32, i32, i64, i64, i32, i32, i32, i32, i64 }
%struct.bpf_prog_info = type { i32, i32, [8 x i8], i32, i32, i64, i64, i64, i32, i32, i64, [16 x i8], i32, i32, i64, i64, i32, i32, i64, i64, i32, i32, i64, i32, i32, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, i32 }
%struct.anon.10 = type { i32, i32, i64 }
%struct.user_struct = type { %struct.refcount_struct, %struct.percpu_counter, i32, %struct.atomic_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic_t, %struct.atomic_t, %struct.ratelimit_state }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, ptr }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i32, i32 }
%struct.anon.12 = type { i64, i32 }
%struct.bpf_raw_tp_link = type { %struct.bpf_link, ptr }
%struct.anon.13 = type { i64, i64, i32, i32, i32 }
%struct.anon.14 = type { i32, i32, i32, i32, i64, i32, i32, i64, i64 }
%struct.anon.15 = type { i32, %union.anon.16, i32, i32, %union.anon.17 }
%union.anon.16 = type { i32 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i64, i32 }
%struct.anon.20 = type { i32, i32, i32, i32 }
%struct.anon.23 = type { i32, i32 }
%struct.anon.24 = type { i32, i32, i32 }
%struct.bpf_insn = type { i8, i8, i16, i32 }
%struct.bpf_attach_target_info = type { %struct.btf_func_model, i32, ptr, ptr }
%struct.btf_func_model = type { i8, i8, [12 x i8] }
%struct.bpf_tracing_link = type { %struct.bpf_link, i32, ptr, ptr }
%struct.bpf_trampoline = type { %struct.hlist_node, %struct.mutex, %struct.refcount_struct, i64, %struct.anon.90, ptr, [3 x %struct.hlist_head], [3 x i32], ptr, i64, ptr }
%struct.anon.90 = type { %struct.btf_func_model, ptr, i8 }
%struct.hlist_head = type { ptr }
%struct.anon.210 = type { i32, i32, i32 }
%struct.bpf_perf_link = type { %struct.bpf_link, ptr }

@sysctl_unprivileged_bpf_disabled = dso_local local_unnamed_addr global i32 2, section ".data..read_mostly", align 4
@bpf_map_offload_ops = dso_local constant { %struct.bpf_map_ops, [60 x i8] } { %struct.bpf_map_ops { ptr null, ptr @bpf_map_offload_map_alloc, ptr null, ptr @bpf_map_offload_map_free, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @map_check_no_btf, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @bpf_map_meta_equal, ptr null, ptr null, ptr null, ptr null, ptr null }, [60 x i8] zeroinitializer }, align 32
@map_idr_lock = internal global { %struct.spinlock, [52 x i8] } { %struct.spinlock { %union.anon.27 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.11, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, [52 x i8] zeroinitializer }, align 32
@map_idr = internal global { %struct.idr, [36 x i8] } { %struct.idr { %struct.xarray { %struct.spinlock { %union.anon.27 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.12, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, i32 67108868, ptr null }, i32 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@__kstrtab_bpf_map_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_bpf_map_put = external dso_local constant [0 x i8], align 1
@__ksymtab_bpf_map_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @bpf_map_put to i32), ptr @__kstrtab_bpf_map_put, ptr @__kstrtabns_bpf_map_put }, section "___ksymtab_gpl+bpf_map_put", align 4
@bpf_map_fops = dso_local constant { %struct.file_operations, [32 x i8] } { %struct.file_operations { ptr null, ptr null, ptr @bpf_dummy_read, ptr @bpf_dummy_write, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @bpf_map_poll, ptr null, ptr null, ptr @bpf_map_mmap, i32 0, ptr null, ptr null, ptr @bpf_map_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @bpf_map_show_fdinfo, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@.str = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"bpf-map\00", [24 x i8] zeroinitializer }, align 32
@_ctype = external dso_local local_unnamed_addr constant [0 x i8], align 1
@__kstrtab_bpf_map_inc = external dso_local constant [0 x i8], align 1
@__kstrtabns_bpf_map_inc = external dso_local constant [0 x i8], align 1
@__ksymtab_bpf_map_inc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @bpf_map_inc to i32), ptr @__kstrtab_bpf_map_inc, ptr @__kstrtabns_bpf_map_inc }, section "___ksymtab_gpl+bpf_map_inc", align 4
@__kstrtab_bpf_map_inc_with_uref = external dso_local constant [0 x i8], align 1
@__kstrtabns_bpf_map_inc_with_uref = external dso_local constant [0 x i8], align 1
@__ksymtab_bpf_map_inc_with_uref = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @bpf_map_inc_with_uref to i32), ptr @__kstrtab_bpf_map_inc_with_uref, ptr @__kstrtabns_bpf_map_inc_with_uref }, section "___ksymtab_gpl+bpf_map_inc_with_uref", align 4
@__kstrtab_bpf_map_inc_not_zero = external dso_local constant [0 x i8], align 1
@__kstrtabns_bpf_map_inc_not_zero = external dso_local constant [0 x i8], align 1
@__ksymtab_bpf_map_inc_not_zero = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @bpf_map_inc_not_zero to i32), ptr @__kstrtab_bpf_map_inc_not_zero, ptr @__kstrtabns_bpf_map_inc_not_zero }, section "___ksymtab_gpl+bpf_map_inc_not_zero", align 4
@.str.1 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"kernel/bpf/syscall.c\00", [43 x i8] zeroinitializer }, align 32
@prog_idr_lock = internal global { %struct.spinlock, [52 x i8] } { %struct.spinlock { %union.anon.27 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.23, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, [52 x i8] zeroinitializer }, align 32
@prog_idr = internal global { %struct.idr, [36 x i8] } { %struct.idr { %struct.xarray { %struct.spinlock { %union.anon.27 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.24, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, i32 67108868, ptr null }, i32 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@__kstrtab_bpf_prog_put = external dso_local constant [0 x i8], align 1
@__kstrtabns_bpf_prog_put = external dso_local constant [0 x i8], align 1
@__ksymtab_bpf_prog_put = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @bpf_prog_put to i32), ptr @__kstrtab_bpf_prog_put, ptr @__kstrtabns_bpf_prog_put }, section "___ksymtab_gpl+bpf_prog_put", align 4
@bpf_prog_fops = dso_local constant { %struct.file_operations, [32 x i8] } { %struct.file_operations { ptr null, ptr null, ptr @bpf_dummy_read, ptr @bpf_dummy_write, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr null, ptr null, ptr @bpf_prog_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @bpf_prog_show_fdinfo, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"bpf-prog\00", [23 x i8] zeroinitializer }, align 32
@__kstrtab_bpf_prog_add = external dso_local constant [0 x i8], align 1
@__kstrtabns_bpf_prog_add = external dso_local constant [0 x i8], align 1
@__ksymtab_bpf_prog_add = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @bpf_prog_add to i32), ptr @__kstrtab_bpf_prog_add, ptr @__kstrtabns_bpf_prog_add }, section "___ksymtab_gpl+bpf_prog_add", align 4
@__kstrtab_bpf_prog_sub = external dso_local constant [0 x i8], align 1
@__kstrtabns_bpf_prog_sub = external dso_local constant [0 x i8], align 1
@__ksymtab_bpf_prog_sub = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @bpf_prog_sub to i32), ptr @__kstrtab_bpf_prog_sub, ptr @__kstrtabns_bpf_prog_sub }, section "___ksymtab_gpl+bpf_prog_sub", align 4
@__kstrtab_bpf_prog_inc = external dso_local constant [0 x i8], align 1
@__kstrtabns_bpf_prog_inc = external dso_local constant [0 x i8], align 1
@__ksymtab_bpf_prog_inc = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @bpf_prog_inc to i32), ptr @__kstrtab_bpf_prog_inc, ptr @__kstrtabns_bpf_prog_inc }, section "___ksymtab_gpl+bpf_prog_inc", align 4
@__kstrtab_bpf_prog_inc_not_zero = external dso_local constant [0 x i8], align 1
@__kstrtabns_bpf_prog_inc_not_zero = external dso_local constant [0 x i8], align 1
@__ksymtab_bpf_prog_inc_not_zero = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @bpf_prog_inc_not_zero to i32), ptr @__kstrtab_bpf_prog_inc_not_zero, ptr @__kstrtabns_bpf_prog_inc_not_zero }, section "___ksymtab_gpl+bpf_prog_inc_not_zero", align 4
@__kstrtab_bpf_prog_get_type_dev = external dso_local constant [0 x i8], align 1
@__kstrtabns_bpf_prog_get_type_dev = external dso_local constant [0 x i8], align 1
@__ksymtab_bpf_prog_get_type_dev = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @bpf_prog_get_type_dev to i32), ptr @__kstrtab_bpf_prog_get_type_dev, ptr @__kstrtabns_bpf_prog_get_type_dev }, section "___ksymtab_gpl+bpf_prog_get_type_dev", align 4
@bpf_link_put.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.3 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"(work_completion)(&link->work)\00", [33 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"bpf_link\00", [23 x i8] zeroinitializer }, align 32
@bpf_link_fops = internal constant { %struct.file_operations, [32 x i8] } { %struct.file_operations { ptr null, ptr null, ptr @bpf_dummy_read, ptr @bpf_dummy_write, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr null, ptr null, ptr @bpf_link_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @bpf_link_show_fdinfo, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@link_idr_lock = internal global { %struct.spinlock, [52 x i8] } { %struct.spinlock { %union.anon.27 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.42, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, [52 x i8] zeroinitializer }, align 32
@.str.5 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"bpf-link\00", [23 x i8] zeroinitializer }, align 32
@link_idr = internal global { %struct.idr, [36 x i8] } { %struct.idr { %struct.xarray { %struct.spinlock { %union.anon.27 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.43, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, i32 67108868, ptr null }, i32 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"bpf_stats_enabled_mutex.wait_lock\00", [62 x i8] zeroinitializer }, align 32
@bpf_stats_enabled_mutex = dso_local global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.6, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @bpf_stats_enabled_mutex, i64 52), ptr getelementptr (i8, ptr @bpf_stats_enabled_mutex, i64 52) }, ptr @bpf_stats_enabled_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.7, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@.str.7 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"bpf_stats_enabled_mutex\00", [40 x i8] zeroinitializer }, align 32
@event_class_syscall_enter = external dso_local global %struct.trace_event_class, align 4
@.str.8 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"sys_enter_bpf\00", [18 x i8] zeroinitializer }, align 32
@enter_syscall_print_funcs = external dso_local global %struct.trace_event_functions, align 4
@__syscall_meta__bpf = internal global %struct.syscall_metadata { ptr @.str.10, i32 -1, i32 3, ptr @types__bpf, ptr @args__bpf, %struct.list_head { ptr getelementptr (i8, ptr @__syscall_meta__bpf, i64 20), ptr getelementptr (i8, ptr @__syscall_meta__bpf, i64 20) }, ptr @event_enter__bpf, ptr @event_exit__bpf }, align 4
@event_enter__bpf = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_enter, %union.anon.141 { ptr @.str.8 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @enter_syscall_print_funcs }, ptr null, ptr null, %union.anon.143 zeroinitializer, ptr @__syscall_meta__bpf, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_enter__bpf = internal global ptr @event_enter__bpf, section "_ftrace_events", align 4
@event_class_syscall_exit = external dso_local global %struct.trace_event_class, align 4
@.str.9 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"sys_exit_bpf\00", [19 x i8] zeroinitializer }, align 32
@exit_syscall_print_funcs = external dso_local global %struct.trace_event_functions, align 4
@event_exit__bpf = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_syscall_exit, %union.anon.141 { ptr @.str.9 }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @exit_syscall_print_funcs }, ptr null, ptr null, %union.anon.143 zeroinitializer, ptr @__syscall_meta__bpf, i32 2, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_exit__bpf = internal global ptr @event_exit__bpf, section "_ftrace_events", align 4
@.str.10 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"sys_bpf\00", [24 x i8] zeroinitializer }, align 32
@types__bpf = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.44, ptr @.str.45, ptr @.str.46], [20 x i8] zeroinitializer }, align 32
@args__bpf = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @.str.47, ptr @.str.48, ptr @.str.49], [20 x i8] zeroinitializer }, align 32
@__p_syscall_meta__bpf = internal global ptr @__syscall_meta__bpf, section "__syscalls_metadata", align 4
@bpf_kallsyms_lookup_name_proto = dso_local constant { %struct.bpf_func_proto, [36 x i8] } { %struct.bpf_func_proto { ptr @bpf_kallsyms_lookup_name, i8 0, i8 0, i32 0, %union.anon.171 { %struct.anon.172 { i32 5, i32 8, i32 10, i32 14, i32 0 } }, %union.anon.173 zeroinitializer, ptr null, ptr null }, [36 x i8] zeroinitializer }, align 32
@bpf_syscall_verifier_ops = dso_local constant { %struct.bpf_verifier_ops, [36 x i8] } { %struct.bpf_verifier_ops { ptr @syscall_prog_func_proto, ptr @syscall_prog_is_valid_access, ptr null, ptr null, ptr null, ptr null, ptr null }, [36 x i8] zeroinitializer }, align 32
@bpf_syscall_prog_ops = dso_local constant { %struct.bpf_prog_ops, [28 x i8] } { %struct.bpf_prog_ops { ptr @bpf_prog_test_run_syscall }, [28 x i8] zeroinitializer }, align 32
@__pcpu_scope_bpf_prog_active = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@__pcpu_unique_bpf_prog_active = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@bpf_prog_active = weak dso_local global i32 0, section ".data..percpu", align 4
@high_memory = external dso_local local_unnamed_addr global ptr, align 4
@pgprot_kernel = external dso_local local_unnamed_addr global i32, align 4
@.str.11 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"map_idr_lock\00", [19 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"map_idr.xa_lock\00", [16 x i8] zeroinitializer }, align 32
@int_active_memcg = external dso_local global ptr, section ".data..percpu", align 4
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@__bpf_map_put.__key = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.13 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"(work_completion)(&map->work)\00", [34 x i8] zeroinitializer }, align 32
@bpf_map_default_vmops = internal constant { %struct.vm_operations_struct, [40 x i8] } { %struct.vm_operations_struct { ptr @bpf_map_mmap_open, ptr @bpf_map_mmap_close, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.14 = internal constant { [125 x i8], [35 x i8] } { [125 x i8] c"map_type:\09%u\0Akey_size:\09%u\0Avalue_size:\09%u\0Amax_entries:\09%u\0Amap_flags:\09%#x\0Amap_extra:\09%#llx\0Amemlock:\09%lu\0Amap_id:\09%u\0Afrozen:\09%u\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.15 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"owner_prog_type:\09%u\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.16 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"owner_jited:\09%u\0A\00", [47 x i8] zeroinitializer }, align 32
@check_copy_size.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.17 = internal constant { [28 x i8], [36 x i8] } { [28 x i8] c"include/linux/thread_info.h\00", [36 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", [58 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/uaccess.h\00", [40 x i8] zeroinitializer }, align 32
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.20 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.21 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.22 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@__cpu_possible_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@.str.23 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"prog_idr_lock\00", [18 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"prog_idr.xa_lock\00", [47 x i8] zeroinitializer }, align 32
@__bpf_prog_put.__key = internal global %struct.lock_class_key zeroinitializer, align 4
@.str.25 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"(work_completion)(&aux->work)\00", [34 x i8] zeroinitializer }, align 32
@audit_enabled = external dso_local local_unnamed_addr global i32, align 4
@.str.26 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"prog-id=%u op=%s\00", [47 x i8] zeroinitializer }, align 32
@bpf_audit_str = internal constant { [2 x ptr], [24 x i8] } { [2 x ptr] [ptr @.str.27, ptr @.str.28], [24 x i8] zeroinitializer }, align 32
@.str.27 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"LOAD\00", [27 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"UNLOAD\00", [25 x i8] zeroinitializer }, align 32
@.str.29 = internal constant { [143 x i8], [49 x i8] } { [143 x i8] c"prog_type:\09%u\0Aprog_jited:\09%u\0Aprog_tag:\09%s\0Amemlock:\09%llu\0Aprog_id:\09%u\0Arun_time_ns:\09%llu\0Arun_cnt:\09%llu\0Arecursion_misses:\09%llu\0Averified_insns:\09%u\0A\00", [49 x i8] zeroinitializer }, align 32
@system_wq = external dso_local local_unnamed_addr global ptr, align 4
@radix_tree_preloads = external dso_local global %struct.radix_tree_preload, section ".data..percpu", align 4
@oops_in_progress = external dso_local local_unnamed_addr global i32, align 4
@debug_locks_silent = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@.str.30 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"include/linux/local_lock_internal.h\00", [60 x i8] zeroinitializer }, align 32
@.str.31 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"DEBUG_LOCKS_WARN_ON(%s)\00", [40 x i8] zeroinitializer }, align 32
@.str.32 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"l->owner != current\00", [44 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"link_type:\09%s\0Alink_id:\09%u\0Aprog_tag:\09%s\0Aprog_id:\09%u\0A\00", [44 x i8] zeroinitializer }, align 32
@bpf_link_type_strs = internal constant { [8 x ptr], [32 x i8] } { [8 x ptr] [ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41], [32 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"<invalid>\00", [22 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"raw_tracepoint\00", [17 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"tracing\00", [24 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"cgroup\00", [25 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"iter\00", [27 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"netns\00", [26 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"xdp\00", [28 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"perf\00", [27 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"link_idr_lock\00", [18 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"link_idr.xa_lock\00", [47 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"union bpf_attr *\00", [47 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"unsigned int\00", [19 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"cmd\00", [28 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"uattr\00", [26 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"size\00", [27 x i8] zeroinitializer }, align 32
@btf_idr = external dso_local global %struct.idr, align 4
@btf_idr_lock = external dso_local global %struct.spinlock, align 4
@map_create.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.50 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"&map->freeze_mutex\00", [45 x i8] zeroinitializer }, align 32
@bpf_map_types = internal constant { [31 x ptr], [36 x i8] } { [31 x ptr] [ptr null, ptr @htab_map_ops, ptr @array_map_ops, ptr @prog_array_map_ops, ptr @perf_event_array_map_ops, ptr @htab_percpu_map_ops, ptr @percpu_array_map_ops, ptr @stack_trace_map_ops, ptr @cgroup_array_map_ops, ptr @htab_lru_map_ops, ptr @htab_lru_percpu_map_ops, ptr @trie_map_ops, ptr @array_of_maps_map_ops, ptr @htab_of_maps_map_ops, ptr @dev_map_ops, ptr @sock_map_ops, ptr @cpu_map_ops, ptr @xsk_map_ops, ptr @sock_hash_ops, ptr @cgroup_storage_map_ops, ptr @reuseport_array_ops, ptr @cgroup_storage_map_ops, ptr @queue_map_ops, ptr @stack_map_ops, ptr @sk_storage_map_ops, ptr @dev_map_hash_ops, ptr @bpf_struct_ops_map_ops, ptr @ringbuf_map_ops, ptr @inode_storage_map_ops, ptr @task_storage_map_ops, ptr @bloom_filter_map_ops], [36 x i8] zeroinitializer }, align 32
@htab_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@array_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@prog_array_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@perf_event_array_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@htab_percpu_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@percpu_array_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@stack_trace_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@cgroup_array_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@htab_lru_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@htab_lru_percpu_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@trie_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@array_of_maps_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@htab_of_maps_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@dev_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@sock_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@cpu_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@xsk_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@sock_hash_ops = external dso_local constant %struct.bpf_map_ops, align 4
@cgroup_storage_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@reuseport_array_ops = external dso_local constant %struct.bpf_map_ops, align 4
@queue_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@stack_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@sk_storage_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@dev_map_hash_ops = external dso_local constant %struct.bpf_map_ops, align 4
@bpf_struct_ops_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@ringbuf_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@inode_storage_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@task_storage_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@bloom_filter_map_ops = external dso_local constant %struct.bpf_map_ops, align 4
@map_check_btf.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.51 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"verifier bug spin_lock_off %d value_size %d\0A\00", [51 x i8] zeroinitializer }, align 32
@bpf_map_alloc_id.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.52 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"GPL\00", [28 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"GPL v2\00", [25 x i8] zeroinitializer }, align 32
@.str.54 = internal constant { [26 x i8], [38 x i8] } { [26 x i8] c"GPL and additional rights\00", [38 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Dual BSD/GPL\00", [19 x i8] zeroinitializer }, align 32
@.str.56 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Dual MIT/GPL\00", [19 x i8] zeroinitializer }, align 32
@.str.57 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"Dual MPL/GPL\00", [19 x i8] zeroinitializer }, align 32
@bpf_prog_types = internal constant { [32 x ptr], [32 x i8] } { [32 x ptr] [ptr null, ptr @sk_filter_prog_ops, ptr @kprobe_prog_ops, ptr @tc_cls_act_prog_ops, ptr @tc_cls_act_prog_ops, ptr @tracepoint_prog_ops, ptr @xdp_prog_ops, ptr @perf_event_prog_ops, ptr @cg_skb_prog_ops, ptr @cg_sock_prog_ops, ptr @lwt_in_prog_ops, ptr @lwt_out_prog_ops, ptr @lwt_xmit_prog_ops, ptr @sock_ops_prog_ops, ptr @sk_skb_prog_ops, ptr @cg_dev_prog_ops, ptr @sk_msg_prog_ops, ptr @raw_tracepoint_prog_ops, ptr @cg_sock_addr_prog_ops, ptr @lwt_seg6local_prog_ops, ptr @lirc_mode2_prog_ops, ptr @sk_reuseport_prog_ops, ptr @flow_dissector_prog_ops, ptr @cg_sysctl_prog_ops, ptr @raw_tracepoint_writable_prog_ops, ptr @cg_sockopt_prog_ops, ptr @tracing_prog_ops, ptr @bpf_struct_ops_prog_ops, ptr @bpf_extension_prog_ops, ptr @lsm_prog_ops, ptr @sk_lookup_prog_ops, ptr @bpf_syscall_prog_ops], [32 x i8] zeroinitializer }, align 32
@bpf_offload_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@sk_filter_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@kprobe_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@tc_cls_act_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@tracepoint_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@xdp_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@perf_event_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@cg_skb_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@cg_sock_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@lwt_in_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@lwt_out_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@lwt_xmit_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@sock_ops_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@sk_skb_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@cg_dev_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@sk_msg_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@raw_tracepoint_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@cg_sock_addr_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@lwt_seg6local_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@lirc_mode2_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@sk_reuseport_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@flow_dissector_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@cg_sysctl_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@raw_tracepoint_writable_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@cg_sockopt_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@tracing_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@bpf_struct_ops_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@bpf_extension_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@lsm_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@sk_lookup_prog_ops = external dso_local constant %struct.bpf_prog_ops, align 4
@bpf_prog_alloc_id.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@btf_fops = external dso_local constant %struct.file_operations, align 4
@bpf_raw_tp_link_lops = internal constant { %struct.bpf_link_ops, [40 x i8] } { %struct.bpf_link_ops { ptr @bpf_raw_tp_link_release, ptr @bpf_raw_tp_link_dealloc, ptr null, ptr null, ptr @bpf_raw_tp_link_show_fdinfo, ptr @bpf_raw_tp_link_fill_link_info }, [40 x i8] zeroinitializer }, align 32
@bpf_tracing_link_lops = internal constant { %struct.bpf_link_ops, [40 x i8] } { %struct.bpf_link_ops { ptr @bpf_tracing_link_release, ptr @bpf_tracing_link_dealloc, ptr null, ptr null, ptr @bpf_tracing_link_show_fdinfo, ptr @bpf_tracing_link_fill_link_info }, [40 x i8] zeroinitializer }, align 32
@bpf_tracing_link_release.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.58 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"attach_type:\09%d\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.59 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"tp_name:\09%s\0A\00", [19 x i8] zeroinitializer }, align 32
@bpf_perf_link_lops = internal constant { %struct.bpf_link_ops, [40 x i8] } { %struct.bpf_link_ops { ptr @bpf_perf_link_release, ptr @bpf_perf_link_dealloc, ptr null, ptr null, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@bpf_stats_enabled_key = external dso_local global %struct.static_key_false, align 4
@.str.60 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"bpf-stats\00", [22 x i8] zeroinitializer }, align 32
@bpf_stats_fops = internal constant { %struct.file_operations, [32 x i8] } { %struct.file_operations { ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, i32 0, ptr null, ptr null, ptr @bpf_stats_release, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null }, [32 x i8] zeroinitializer }, align 32
@bpf_sys_bpf_proto = internal constant { %struct.bpf_func_proto, [36 x i8] } { %struct.bpf_func_proto { ptr @bpf_sys_bpf, i8 0, i8 0, i32 0, %union.anon.171 { %struct.anon.172 { i32 10, i32 517, i32 7, i32 0, i32 0 } }, %union.anon.173 zeroinitializer, ptr null, ptr null }, [36 x i8] zeroinitializer }, align 32
@bpf_btf_find_by_name_kind_proto = external dso_local constant %struct.bpf_func_proto, align 4
@bpf_sys_close_proto = internal constant { %struct.bpf_func_proto, [36 x i8] } { %struct.bpf_func_proto { ptr @bpf_sys_close, i8 0, i8 0, i32 0, %union.anon.171 { %struct.anon.172 { i32 10, i32 0, i32 0, i32 0, i32 0 } }, %union.anon.173 zeroinitializer, ptr null, ptr null }, [36 x i8] zeroinitializer }, align 32
@switch.table.bpf_prog_load_check_attach = internal constant { [25 x i32], [60 x i8] } { [25 x i32] [i32 0, i32 0, i32 0, i32 0, i32 -22, i32 -22, i32 0, i32 0, i32 -22, i32 -22, i32 -22, i32 0, i32 0, i32 -22, i32 -22, i32 -22, i32 -22, i32 -22, i32 -22, i32 -22, i32 -22, i32 0, i32 0, i32 0, i32 0], [60 x i8] zeroinitializer }, align 32
@switch.table.attach_type_to_prog_type = internal constant { [39 x i32], [36 x i8] } { [39 x i32] [i32 8, i32 8, i32 9, i32 13, i32 14, i32 14, i32 15, i32 16, i32 18, i32 18, i32 18, i32 18, i32 9, i32 9, i32 18, i32 18, i32 20, i32 22, i32 23, i32 18, i32 18, i32 25, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 26, i32 18, i32 18, i32 18, i32 18, i32 0, i32 9, i32 0, i32 30, i32 6, i32 14], [36 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [11 x i64] [i64 9, i64 32, i64 3, i64 4, i64 5, i64 6, i64 8, i64 10, i64 12, i64 13, i64 21]
@__sancov_gen_cov_switch_values.61 = internal global [4 x i64] [i64 2, i64 8, i64 46, i64 95]
@__sancov_gen_cov_switch_values.62 = internal global [11 x i64] [i64 9, i64 32, i64 3, i64 4, i64 5, i64 6, i64 8, i64 10, i64 12, i64 13, i64 21]
@__sancov_gen_cov_switch_values.63 = internal global [11 x i64] [i64 9, i64 32, i64 3, i64 4, i64 5, i64 6, i64 8, i64 10, i64 12, i64 13, i64 21]
@__sancov_gen_cov_switch_values.64 = internal global [7 x i64] [i64 5, i64 32, i64 3, i64 15, i64 16, i64 18, i64 26]
@__sancov_gen_cov_switch_values.65 = internal global [14 x i64] [i64 12, i64 32, i64 4, i64 5, i64 6, i64 8, i64 10, i64 12, i64 13, i64 20, i64 21, i64 22, i64 23, i64 30]
@__sancov_gen_cov_switch_values.66 = internal global [11 x i64] [i64 9, i64 32, i64 3, i64 4, i64 5, i64 6, i64 8, i64 10, i64 12, i64 13, i64 21]
@__sancov_gen_cov_switch_values.67 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967294]
@__sancov_gen_cov_switch_values.68 = internal global [17 x i64] [i64 15, i64 32, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 10, i64 12, i64 13, i64 20, i64 21, i64 22, i64 23, i64 26, i64 30]
@__sancov_gen_cov_switch_values.69 = internal global [7 x i64] [i64 5, i64 32, i64 0, i64 2, i64 5, i64 18, i64 22]
@__sancov_gen_cov_switch_values.70 = internal global [6 x i64] [i64 4, i64 32, i64 166, i64 167, i64 168, i64 179]
@__sancov_gen_cov_switch_values.71 = internal global [38 x i64] [i64 36, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 16, i64 17, i64 18, i64 19, i64 20, i64 21, i64 22, i64 23, i64 24, i64 25, i64 26, i64 27, i64 28, i64 29, i64 30, i64 31, i64 32, i64 33, i64 34, i64 35]
@__sancov_gen_cov_switch_values.72 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4294967295]
@__sancov_gen_cov_switch_values.73 = internal global [11 x i64] [i64 9, i64 32, i64 3, i64 4, i64 5, i64 6, i64 8, i64 10, i64 12, i64 13, i64 21]
@__sancov_gen_cov_switch_values.74 = internal global [4 x i64] [i64 2, i64 32, i64 3, i64 26]
@__sancov_gen_cov_switch_values.75 = internal global [4 x i64] [i64 2, i64 32, i64 1, i64 8]
@__sancov_gen_cov_switch_values.76 = internal global [28 x i64] [i64 26, i64 32, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 16, i64 17, i64 18, i64 19, i64 20, i64 22, i64 23, i64 24, i64 25, i64 26, i64 27, i64 28, i64 29]
@__sancov_gen_cov_switch_values.77 = internal global [9 x i64] [i64 7, i64 32, i64 5, i64 7, i64 17, i64 24, i64 26, i64 27, i64 28]
@__sancov_gen_cov_switch_values.78 = internal global [4 x i64] [i64 2, i64 32, i64 9, i64 21]
@__sancov_gen_cov_switch_values.79 = internal global [34 x i64] [i64 32, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 16, i64 17, i64 18, i64 19, i64 20, i64 21, i64 22, i64 28, i64 29, i64 30, i64 31, i64 32, i64 34, i64 36, i64 37, i64 38]
@__sancov_gen_cov_switch_values.80 = internal global [7 x i64] [i64 5, i64 32, i64 8, i64 9, i64 18, i64 25, i64 30]
@__sancov_gen_cov_switch_values.81 = internal global [13 x i64] [i64 11, i64 32, i64 8, i64 9, i64 13, i64 14, i64 15, i64 16, i64 18, i64 20, i64 22, i64 23, i64 25]
@__sancov_gen_cov_switch_values.82 = internal global [31 x i64] [i64 29, i64 32, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 16, i64 17, i64 18, i64 19, i64 20, i64 21, i64 22, i64 29, i64 30, i64 31, i64 32, i64 34, i64 38]
@__sancov_gen_cov_switch_values.83 = internal global [28 x i64] [i64 26, i64 32, i64 0, i64 1, i64 2, i64 3, i64 6, i64 8, i64 9, i64 10, i64 11, i64 12, i64 13, i64 14, i64 15, i64 16, i64 17, i64 18, i64 19, i64 20, i64 21, i64 22, i64 29, i64 30, i64 31, i64 32, i64 34, i64 36]
@__sancov_gen_cov_switch_values.84 = internal global [7 x i64] [i64 5, i64 32, i64 17, i64 24, i64 26, i64 28, i64 29]
@__sancov_gen_cov_switch_values.85 = internal global [8 x i64] [i64 6, i64 32, i64 1, i64 5, i64 9, i64 10, i64 22, i64 23]
@__sancov_gen_cov_switch_values.86 = internal global [4 x i64] [i64 2, i64 32, i64 25, i64 26]
@__sancov_gen_cov_switch_values.87 = internal global [7 x i64] [i64 5, i64 32, i64 8, i64 9, i64 18, i64 25, i64 30]
@__sancov_gen_cov_switch_values.88 = internal global [6 x i64] [i64 4, i64 32, i64 2, i64 5, i64 7, i64 28]
@__sancov_gen_cov_switch_values.89 = internal global [16 x i64] [i64 14, i64 32, i64 2, i64 5, i64 6, i64 7, i64 8, i64 9, i64 13, i64 15, i64 18, i64 22, i64 23, i64 25, i64 26, i64 30]
@__sancov_gen_cov_switch_values.90 = internal global [8 x i64] [i64 6, i64 32, i64 1, i64 2, i64 19, i64 24, i64 28, i64 29]
@__sancov_gen_cov_switch_values.91 = internal global [5 x i64] [i64 3, i64 32, i64 1, i64 2, i64 9]
@__sancov_gen_cov_switch_values.92 = internal global [4 x i64] [i64 2, i64 32, i64 26, i64 28]
@__sancov_gen_cov_switch_values.93 = internal global [10 x i64] [i64 8, i64 32, i64 8, i64 9, i64 18, i64 21, i64 25, i64 28, i64 30, i64 31]
@__sancov_gen_cov_switch_values.94 = internal global [6 x i64] [i64 4, i64 32, i64 2, i64 12, i64 13, i64 34]
@__sancov_gen_cov_switch_values.95 = internal global [5 x i64] [i64 3, i64 8, i64 133, i64 229, i64 245]
@__sancov_gen_cov_switch_values.96 = internal global [5 x i64] [i64 3, i64 32, i64 26, i64 28, i64 29]
@__sancov_gen_cov_switch_values.97 = internal global [4 x i64] [i64 2, i64 32, i64 26, i64 29]
@___asan_gen_.98 = private unnamed_addr constant [20 x i8] c"bpf_map_offload_ops\00", align 1
@___asan_gen_.100 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 100, i32 26 }
@___asan_gen_.101 = private unnamed_addr constant [13 x i8] c"map_idr_lock\00", align 1
@___asan_gen_.104 = private unnamed_addr constant [8 x i8] c"map_idr\00", align 1
@___asan_gen_.107 = private unnamed_addr constant [13 x i8] c"bpf_map_fops\00", align 1
@___asan_gen_.109 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 697, i32 30 }
@___asan_gen_.112 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 716, i32 26 }
@___asan_gen_.115 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 1358, i32 3 }
@___asan_gen_.116 = private unnamed_addr constant [14 x i8] c"prog_idr_lock\00", align 1
@___asan_gen_.119 = private unnamed_addr constant [9 x i8] c"prog_idr\00", align 1
@___asan_gen_.122 = private unnamed_addr constant [14 x i8] c"bpf_prog_fops\00", align 1
@___asan_gen_.124 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 1909, i32 30 }
@___asan_gen_.127 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 1926, i32 26 }
@___asan_gen_.133 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 2488, i32 3 }
@___asan_gen_.136 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 2587, i32 28 }
@___asan_gen_.137 = private unnamed_addr constant [14 x i8] c"bpf_link_fops\00", align 1
@___asan_gen_.139 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 2536, i32 37 }
@___asan_gen_.140 = private unnamed_addr constant [14 x i8] c"link_idr_lock\00", align 1
@___asan_gen_.145 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 2615, i32 26 }
@___asan_gen_.146 = private unnamed_addr constant [9 x i8] c"link_idr\00", align 1
@___asan_gen_.152 = private unnamed_addr constant [24 x i8] c"bpf_stats_enabled_mutex\00", align 1
@___asan_gen_.157 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 4456, i32 1 }
@___asan_gen_.161 = private unnamed_addr constant [17 x i8] c"event_enter__bpf\00", align 1
@___asan_gen_.167 = private unnamed_addr constant [16 x i8] c"event_exit__bpf\00", align 1
@___asan_gen_.173 = private unnamed_addr constant [11 x i8] c"types__bpf\00", align 1
@___asan_gen_.176 = private unnamed_addr constant [10 x i8] c"args__bpf\00", align 1
@___asan_gen_.179 = private unnamed_addr constant [31 x i8] c"bpf_kallsyms_lookup_name_proto\00", align 1
@___asan_gen_.181 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 4821, i32 29 }
@___asan_gen_.182 = private unnamed_addr constant [25 x i8] c"bpf_syscall_verifier_ops\00", align 1
@___asan_gen_.184 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 4848, i32 31 }
@___asan_gen_.185 = private unnamed_addr constant [21 x i8] c"bpf_syscall_prog_ops\00", align 1
@___asan_gen_.187 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 4853, i32 27 }
@___asan_gen_.190 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 50, i32 8 }
@___asan_gen_.193 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 49, i32 8 }
@___asan_gen_.196 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 503, i32 3 }
@___asan_gen_.197 = private unnamed_addr constant [22 x i8] c"bpf_map_default_vmops\00", align 1
@___asan_gen_.199 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 633, i32 42 }
@___asan_gen_.202 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 572, i32 6 }
@___asan_gen_.205 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 591, i32 17 }
@___asan_gen_.208 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 592, i32 17 }
@___asan_gen_.211 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.213, i32 230, i32 6 }
@___asan_gen_.213 = private unnamed_addr constant [31 x i8] c"../include/linux/thread_info.h\00", align 1
@___asan_gen_.214 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.213, i32 214, i32 2 }
@___asan_gen_.216 = private unnamed_addr constant [27 x i8] c"../include/linux/uaccess.h\00", align 1
@___asan_gen_.217 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.216, i32 156, i32 2 }
@___asan_gen_.223 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.225, i32 695, i32 2 }
@___asan_gen_.225 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.226 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.225, i32 723, i32 2 }
@___asan_gen_.229 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 48, i32 8 }
@___asan_gen_.232 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 47, i32 8 }
@___asan_gen_.235 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 1823, i32 4 }
@___asan_gen_.238 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 1721, i32 23 }
@___asan_gen_.239 = private unnamed_addr constant [14 x i8] c"bpf_audit_str\00", align 1
@___asan_gen_.241 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 1702, i32 27 }
@___asan_gen_.244 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 1703, i32 23 }
@___asan_gen_.247 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 1704, i32 23 }
@___asan_gen_.250 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 1888, i32 6 }
@___asan_gen_.258 = private unnamed_addr constant [39 x i8] c"../include/linux/local_lock_internal.h\00", align 1
@___asan_gen_.259 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.258, i32 36, i32 2 }
@___asan_gen_.262 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 2523, i32 6 }
@___asan_gen_.263 = private unnamed_addr constant [19 x i8] c"bpf_link_type_strs\00", align 1
@___asan_gen_.265 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 2507, i32 20 }
@___asan_gen_.268 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 2508, i32 27 }
@___asan_gen_.271 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.288, i32 130, i32 1 }
@___asan_gen_.274 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.288, i32 131, i32 1 }
@___asan_gen_.277 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.288, i32 133, i32 1 }
@___asan_gen_.280 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.288, i32 135, i32 1 }
@___asan_gen_.283 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.288, i32 137, i32 1 }
@___asan_gen_.286 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.288, i32 138, i32 1 }
@___asan_gen_.288 = private unnamed_addr constant [29 x i8] c"../include/linux/bpf_types.h\00", align 1
@___asan_gen_.289 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.288, i32 141, i32 1 }
@___asan_gen_.292 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 52, i32 8 }
@___asan_gen_.295 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 51, i32 8 }
@___asan_gen_.313 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 4739, i32 1 }
@___asan_gen_.314 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.319 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 876, i32 2 }
@___asan_gen_.320 = private unnamed_addr constant [14 x i8] c"bpf_map_types\00", align 1
@___asan_gen_.322 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 57, i32 41 }
@___asan_gen_.325 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 807, i32 4 }
@___asan_gen_.328 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.342, i32 7, i32 26 }
@___asan_gen_.331 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.342, i32 8, i32 22 }
@___asan_gen_.334 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.342, i32 9, i32 22 }
@___asan_gen_.337 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.342, i32 10, i32 22 }
@___asan_gen_.340 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.342, i32 11, i32 22 }
@___asan_gen_.342 = private unnamed_addr constant [27 x i8] c"../include/linux/license.h\00", align 1
@___asan_gen_.343 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.342, i32 12, i32 22 }
@___asan_gen_.344 = private unnamed_addr constant [15 x i8] c"bpf_prog_types\00", align 1
@___asan_gen_.346 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 1666, i32 42 }
@___asan_gen_.347 = private unnamed_addr constant [21 x i8] c"bpf_raw_tp_link_lops\00", align 1
@___asan_gen_.349 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 2942, i32 34 }
@___asan_gen_.350 = private unnamed_addr constant [22 x i8] c"bpf_tracing_link_lops\00", align 1
@___asan_gen_.352 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 2692, i32 34 }
@___asan_gen_.355 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 2674, i32 6 }
@___asan_gen_.358 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 2904, i32 6 }
@___asan_gen_.359 = private unnamed_addr constant [19 x i8] c"bpf_perf_link_lops\00", align 1
@___asan_gen_.361 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 2971, i32 34 }
@___asan_gen_.362 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.364 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 4482, i32 24 }
@___asan_gen_.365 = private unnamed_addr constant [15 x i8] c"bpf_stats_fops\00", align 1
@___asan_gen_.367 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 4466, i32 37 }
@___asan_gen_.368 = private unnamed_addr constant [18 x i8] c"bpf_sys_bpf_proto\00", align 1
@___asan_gen_.370 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 4774, i32 36 }
@___asan_gen_.371 = private unnamed_addr constant [20 x i8] c"bpf_sys_close_proto\00", align 1
@___asan_gen_.372 = private constant [24 x i8] c"../kernel/bpf/syscall.c\00", align 1
@___asan_gen_.373 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.372, i32 4799, i32 36 }
@___asan_gen_.374 = private unnamed_addr constant [40 x i8] c"switch.table.bpf_prog_load_check_attach\00", align 1
@___asan_gen_.375 = private unnamed_addr constant [38 x i8] c"switch.table.attach_type_to_prog_type\00", align 1
@llvm.compiler.used = appending global [108 x ptr] [ptr @__event_enter__bpf, ptr @__event_exit__bpf, ptr @__ksymtab_bpf_map_inc, ptr @__ksymtab_bpf_map_inc_not_zero, ptr @__ksymtab_bpf_map_inc_with_uref, ptr @__ksymtab_bpf_map_put, ptr @__ksymtab_bpf_prog_add, ptr @__ksymtab_bpf_prog_get_type_dev, ptr @__ksymtab_bpf_prog_inc, ptr @__ksymtab_bpf_prog_inc_not_zero, ptr @__ksymtab_bpf_prog_put, ptr @__ksymtab_bpf_prog_sub, ptr @__p_syscall_meta__bpf, ptr @__syscall_meta__bpf, ptr @event_enter__bpf, ptr @event_exit__bpf, ptr @bpf_map_offload_ops, ptr @map_idr_lock, ptr @map_idr, ptr @bpf_map_fops, ptr @.str, ptr @.str.1, ptr @prog_idr_lock, ptr @prog_idr, ptr @bpf_prog_fops, ptr @.str.2, ptr @bpf_link_put.__key, ptr @.str.3, ptr @.str.4, ptr @bpf_link_fops, ptr @link_idr_lock, ptr @.str.5, ptr @link_idr, ptr @.str.6, ptr @bpf_stats_enabled_mutex, ptr @.str.7, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @types__bpf, ptr @args__bpf, ptr @bpf_kallsyms_lookup_name_proto, ptr @bpf_syscall_verifier_ops, ptr @bpf_syscall_prog_ops, ptr @.str.11, ptr @.str.12, ptr @.str.13, ptr @bpf_map_default_vmops, ptr @.str.14, ptr @.str.15, ptr @.str.16, ptr @.str.17, ptr @.str.18, ptr @.str.19, ptr @.str.20, ptr @.str.21, ptr @.str.22, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @bpf_audit_str, ptr @.str.27, ptr @.str.28, ptr @.str.29, ptr @.str.30, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @bpf_link_type_strs, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @map_create.__key, ptr @.str.50, ptr @bpf_map_types, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @bpf_prog_types, ptr @bpf_raw_tp_link_lops, ptr @bpf_tracing_link_lops, ptr @.str.58, ptr @.str.59, ptr @bpf_perf_link_lops, ptr @.str.60, ptr @bpf_stats_fops, ptr @bpf_sys_bpf_proto, ptr @bpf_sys_close_proto, ptr @switch.table.bpf_prog_load_check_attach, ptr @switch.table.attach_type_to_prog_type], section "llvm.metadata"
@0 = internal global [94 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_map_offload_ops to i32), i32 164, i32 224, i32 ptrtoint (ptr @___asan_gen_.98 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.100 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @map_idr_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.101 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @map_idr to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.104 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_map_fops to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.107 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.109 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.112 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.115 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @prog_idr_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.116 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @prog_idr to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.119 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_prog_fops to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.122 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.124 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.127 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_link_put.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.133 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.133 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.136 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_link_fops to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.137 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.139 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @link_idr_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.140 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.145 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @link_idr to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.146 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_stats_enabled_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.152 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.157 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.157 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_enter__bpf to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.161 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_exit__bpf to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.167 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @types__bpf to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.173 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @args__bpf to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.176 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_kallsyms_lookup_name_proto to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.179 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.181 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_syscall_verifier_ops to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.182 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.184 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_syscall_prog_ops to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.185 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.187 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.11 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.193 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.196 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_map_default_vmops to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.197 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 125, i32 160, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.15 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.205 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.226 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.229 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.235 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_audit_str to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.239 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.241 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.247 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.29 to i32), i32 143, i32 192, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.250 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.30 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.262 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_link_type_strs to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.263 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @map_create.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.314 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_map_types to i32), i32 124, i32 160, i32 ptrtoint (ptr @___asan_gen_.320 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.322 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 26, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.343 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_prog_types to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.344 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_raw_tp_link_lops to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.347 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_tracing_link_lops to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.350 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.358 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_perf_link_lops to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.359 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.60 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.362 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_stats_fops to i32), i32 128, i32 160, i32 ptrtoint (ptr @___asan_gen_.365 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_sys_bpf_proto to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.368 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.370 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @bpf_sys_close_proto to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.371 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.373 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.bpf_prog_load_check_attach to i32), i32 100, i32 160, i32 ptrtoint (ptr @___asan_gen_.374 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.attach_type_to_prog_type to i32), i32 156, i32 192, i32 ptrtoint (ptr @___asan_gen_.375 to i32), i32 ptrtoint (ptr @___asan_gen_.372 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

@sys_bpf = dso_local alias i32 (i32, ptr, i32), ptr @__se_sys_bpf

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @bpf_check_uarg_tail_zero([2 x i32] %uaddr.coerce, i32 noundef %expected_size, i32 noundef %actual_size) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %uaddr.coerce.fca.0.extract = extractvalue [2 x i32] %uaddr.coerce, 0
  %0 = inttoptr i32 %uaddr.coerce.fca.0.extract to ptr
  %uaddr.coerce.fca.1.extract = extractvalue [2 x i32] %uaddr.coerce, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %actual_size)
  %cmp = icmp ugt i32 %actual_size, 4096
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end, !prof !219

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_cmp4(i32 %actual_size, i32 %expected_size)
  %cmp2.not = icmp ugt i32 %actual_size, %expected_size
  br i1 %cmp2.not, label %if.end4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %uaddr.coerce.fca.1.extract)
  %bf.cast.not = icmp sgt i32 %uaddr.coerce.fca.1.extract, -1
  %add.ptr7 = getelementptr i8, ptr %0, i32 %expected_size
  %sub8 = sub i32 %actual_size, %expected_size
  br i1 %bf.cast.not, label %if.end10, label %if.end10.thread

if.end10.thread:                                  ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #21
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr7, i32 noundef 0, i32 noundef %sub8) #19
  %cmp6 = icmp eq ptr %call, null
  %conv = zext i1 %cmp6 to i32
  br label %if.end14

if.end10:                                         ; preds = %if.end4
  %call9 = tail call i32 @check_zeroed_user(ptr noundef %add.ptr7, i32 noundef %sub8) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %cmp11 = icmp slt i32 %call9, 0
  br i1 %cmp11, label %if.end10.cleanup_crit_edge, label %if.end10.if.end14_crit_edge

if.end10.if.end14_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end14

if.end10.cleanup_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end14:                                         ; preds = %if.end10.if.end14_crit_edge, %if.end10.thread
  %res.029 = phi i32 [ %conv, %if.end10.thread ], [ %call9, %if.end10.if.end14_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %res.029)
  %tobool15.not = icmp eq i32 %res.029, 0
  %cond = select i1 %tobool15.not, i32 -7, i32 0
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.end10.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %cond, %if.end14 ], [ -7, %entry.cleanup_crit_edge ], [ 0, %if.end.cleanup_crit_edge ], [ %call9, %if.end10.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @memchr_inv(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @check_zeroed_user(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bpf_map_offload_map_alloc(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_map_offload_map_free(ptr noundef) #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @map_check_no_btf(ptr nocapture readnone %map, ptr nocapture readnone %btf, ptr nocapture readnone %key_type, ptr nocapture readnone %value_type) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -524
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @bpf_map_meta_equal(ptr noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @bpf_map_write_active(ptr noundef %map) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %writecnt = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 26
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %writecnt, i32 noundef 8) #19
  %call.i = tail call i64 @generic_atomic64_read(ptr noundef %writecnt) #19
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %call.i)
  %cmp = icmp ne i64 %call.i, 0
  ret i1 %cmp
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @bpf_map_area_alloc(i64 noundef %size, i32 noundef %numa_node) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967294, i64 %size)
  %cmp.i = icmp ugt i64 %size, 4294967294
  br i1 %cmp.i, label %entry.__bpf_map_area_alloc.exit_crit_edge, label %if.end.i

entry.__bpf_map_area_alloc.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %__bpf_map_area_alloc.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp8(i64 32769, i64 %size)
  %cmp15.i = icmp ult i64 %size, 32769
  %conv18.i = trunc i64 %size to i32
  br i1 %cmp15.i, label %if.end5.i.i, label %if.end.i.if.end24.i_crit_edge

if.end.i.if.end24.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end24.i

if.end5.i.i:                                      ; preds = %if.end.i
  %call.i4.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %conv18.i, i32 noundef 5320128) #22
  %cmp19.not.i = icmp eq ptr %call.i4.i.i, null
  br i1 %cmp19.not.i, label %if.end5.i.i.if.end24.i_crit_edge, label %if.end5.i.i.__bpf_map_area_alloc.exit_crit_edge

if.end5.i.i.__bpf_map_area_alloc.exit_crit_edge:  ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %__bpf_map_area_alloc.exit

if.end5.i.i.if.end24.i_crit_edge:                 ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end24.i

if.end24.i:                                       ; preds = %if.end5.i.i.if.end24.i_crit_edge, %if.end.i.if.end24.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @high_memory to i32))
  %0 = load ptr, ptr @high_memory, align 4
  %1 = ptrtoint ptr %0 to i32
  %add.i = add i32 %1, 8388608
  %and26.i = and i32 %add.i, -8388608
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %2 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %2, 512
  %3 = tail call ptr @llvm.returnaddress(i32 0) #19
  %call27.i = tail call noalias ptr @__vmalloc_node_range(i32 noundef %conv18.i, i32 noundef 1, i32 noundef %and26.i, i32 noundef -8388608, i32 noundef 4222400, i32 noundef %or.i, i32 noundef 0, i32 noundef %numa_node, ptr noundef %3) #22
  br label %__bpf_map_area_alloc.exit

__bpf_map_area_alloc.exit:                        ; preds = %if.end24.i, %if.end5.i.i.__bpf_map_area_alloc.exit_crit_edge, %entry.__bpf_map_area_alloc.exit_crit_edge
  %retval.0.i = phi ptr [ %call27.i, %if.end24.i ], [ null, %entry.__bpf_map_area_alloc.exit_crit_edge ], [ %call.i4.i.i, %if.end5.i.i.__bpf_map_area_alloc.exit_crit_edge ]
  ret ptr %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @bpf_map_area_mmapable_alloc(i64 noundef %size, i32 noundef %numa_node) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967294, i64 %size)
  %cmp.i = icmp ugt i64 %size, 4294967294
  br i1 %cmp.i, label %entry.__bpf_map_area_alloc.exit_crit_edge, label %if.end.i

entry.__bpf_map_area_alloc.exit_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %__bpf_map_area_alloc.exit

if.end.i:                                         ; preds = %entry
  %and37.i = and i64 %size, 4095
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and37.i)
  %cmp2.not.i = icmp eq i64 %and37.i, 0
  br i1 %cmp2.not.i, label %if.end24.i, label %do.body8.i, !prof !220

do.body8.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/bpf/syscall.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 319, 0\0A.popsection", ""() #19, !srcloc !221
  unreachable

if.end24.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  %conv25.i = trunc i64 %size to i32
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @high_memory to i32))
  %0 = load ptr, ptr @high_memory, align 4
  %1 = ptrtoint ptr %0 to i32
  %add.i = add i32 %1, 8388608
  %and26.i = and i32 %add.i, -8388608
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @pgprot_kernel to i32))
  %2 = load i32, ptr @pgprot_kernel, align 4
  %or.i = or i32 %2, 512
  %3 = tail call ptr @llvm.returnaddress(i32 0) #19
  %call27.i = tail call noalias ptr @__vmalloc_node_range(i32 noundef %conv25.i, i32 noundef 16384, i32 noundef %and26.i, i32 noundef -8388608, i32 noundef 4222400, i32 noundef %or.i, i32 noundef 8, i32 noundef %numa_node, ptr noundef %3) #22
  br label %__bpf_map_area_alloc.exit

__bpf_map_area_alloc.exit:                        ; preds = %if.end24.i, %entry.__bpf_map_area_alloc.exit_crit_edge
  %retval.0.i = phi ptr [ %call27.i, %if.end24.i ], [ null, %entry.__bpf_map_area_alloc.exit_crit_edge ]
  ret ptr %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @bpf_map_area_free(ptr noundef %area) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @kvfree(ptr noundef %area) #19
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local void @bpf_map_init_from_attr(ptr nocapture noundef writeonly %map, ptr nocapture noundef readonly %attr) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %attr, align 8
  %map_type1 = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 3
  %2 = ptrtoint ptr %map_type1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %1, ptr %map_type1, align 4
  %key_size = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 1
  %3 = ptrtoint ptr %key_size to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %key_size, align 4
  %key_size2 = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 4
  %5 = ptrtoint ptr %key_size2 to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %4, ptr %key_size2, align 16
  %value_size = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 2
  %6 = ptrtoint ptr %value_size to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %value_size, align 8
  %value_size3 = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 5
  %8 = ptrtoint ptr %value_size3 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %value_size3, align 4
  %max_entries = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 3
  %9 = ptrtoint ptr %max_entries to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %max_entries, align 4
  %max_entries4 = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 6
  %11 = ptrtoint ptr %max_entries4 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %10, ptr %max_entries4, align 8
  %map_flags = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 4
  %12 = ptrtoint ptr %map_flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %map_flags, align 8
  %and.i = and i32 %13, -25
  %map_flags5 = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 8
  %14 = ptrtoint ptr %map_flags5 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %and.i, ptr %map_flags5, align 8
  %15 = load i32, ptr %map_flags, align 8
  %and.i20 = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i20)
  %tobool.not.i = icmp eq i32 %and.i20, 0
  br i1 %tobool.not.i, label %entry.bpf_map_attr_numa_node.exit_crit_edge, label %cond.true.i

entry.bpf_map_attr_numa_node.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_attr_numa_node.exit

cond.true.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %numa_node.i = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 6
  %16 = ptrtoint ptr %numa_node.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %numa_node.i, align 8
  br label %bpf_map_attr_numa_node.exit

bpf_map_attr_numa_node.exit:                      ; preds = %cond.true.i, %entry.bpf_map_attr_numa_node.exit_crit_edge
  %cond.i = phi i32 [ %17, %cond.true.i ], [ -1, %entry.bpf_map_attr_numa_node.exit_crit_edge ]
  %numa_node = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 12
  %18 = ptrtoint ptr %numa_node to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %cond.i, ptr %numa_node, align 8
  %map_extra = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 13
  %19 = ptrtoint ptr %map_extra to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %map_extra, align 8
  %map_extra7 = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 7
  %21 = ptrtoint ptr %map_extra7 to i32
  call void @__asan_store8_noabort(i32 %21)
  store i64 %20, ptr %map_extra7, align 32
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @bpf_map_free_id(ptr nocapture noundef %map, i1 noundef zeroext %do_idr_lock) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %id = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 11
  %0 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  br i1 %do_idr_lock, label %if.then12, label %if.end7

if.end7:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %2 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %id, align 4
  %call9 = tail call ptr @idr_remove(ptr noundef nonnull @map_idr, i32 noundef %3) #19
  %4 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %id, align 4
  br label %cleanup

if.then12:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %call4 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @map_idr_lock) #19
  %5 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %id, align 4
  %call919 = tail call ptr @idr_remove(ptr noundef nonnull @map_idr, i32 noundef %6) #19
  %7 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 0, ptr %id, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @map_idr_lock, i32 noundef %call4) #19
  br label %cleanup

cleanup:                                          ; preds = %if.then12, %if.end7, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idr_remove(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @bpf_map_kmalloc_node(ptr nocapture noundef readonly %map, i32 noundef %size, i32 noundef %flags, i32 noundef %node) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %memcg = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 17
  %0 = ptrtoint ptr %memcg to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %memcg, align 4
  %2 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i, align 4
  %and.i = and i32 %5, 15728640
  %6 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i78.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i78.i to ptr
  %preempt_count.i79.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i79.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i79.i, align 4
  %and2.i = and i32 %9, 983040
  %or.i = or i32 %and2.i, %and.i
  %10 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i80.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i80.i to ptr
  %preempt_count.i81.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i81.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i81.i, align 4
  %and5.i = and i32 %13, 256
  %or6.i = or i32 %or.i, %and5.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or6.i)
  %tobool.not.i = icmp eq i32 %or6.i, 0
  %14 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i85.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i85.i to ptr
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i4

if.then.i4:                                       ; preds = %entry
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %17, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !222
  %18 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i3 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i3 to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %21
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %23, ptrtoint (ptr @int_active_memcg to i32)
  %24 = inttoptr i32 %add.i to ptr
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile ptr, ptr %24, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !223
  %27 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i82.i = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i.i82.i to ptr
  %preempt_count.i.i83.i = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %preempt_count.i.i83.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %preempt_count.i.i83.i, align 4
  %sub.i.i = add i32 %30, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i83.i, align 4
  %31 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #19, !srcloc !224
  %32 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cpu.i, align 4
  %arrayidx47.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %33
  %34 = ptrtoint ptr %arrayidx47.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx47.i, align 4
  %add48.i = add i32 %35, ptrtoint (ptr @int_active_memcg to i32)
  %36 = inttoptr i32 %add48.i to ptr
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %1, ptr %36, align 4
  %38 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #19, !srcloc !225
  %and.i.i84.i = and i32 %38, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i84.i)
  %tobool59.not.i = icmp eq i32 %and.i.i84.i, 0
  br i1 %tobool59.not.i, label %if.then63.i, label %if.then.i4.do.end65.i_crit_edge, !prof !219

if.then.i4.do.end65.i_crit_edge:                  ; preds = %if.then.i4
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end65.i

if.then63.i:                                      ; preds = %if.then.i4
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @warn_bogus_irq_restore() #19
  br label %do.end65.i

do.end65.i:                                       ; preds = %if.then63.i, %if.then.i4.do.end65.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %31) #19, !srcloc !226
  br label %if.end5.i

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %task.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 2
  %39 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %task.i, align 8
  %active_memcg.i = getelementptr inbounds %struct.task_struct, ptr %40, i32 0, i32 206
  %41 = ptrtoint ptr %active_memcg.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %active_memcg.i, align 8
  store ptr %1, ptr %active_memcg.i, align 8
  br label %if.end5.i

if.end5.i:                                        ; preds = %if.else.i, %do.end65.i
  %old.0.i = phi ptr [ %26, %do.end65.i ], [ %42, %if.else.i ]
  %or = or i32 %flags, 4194304
  %call.i4.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %size, i32 noundef %or) #22
  %43 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i5 = and i32 %43, -16384
  %44 = inttoptr i32 %and.i.i.i5 to ptr
  %preempt_count.i.i6 = getelementptr inbounds %struct.thread_info, ptr %44, i32 0, i32 1
  %45 = ptrtoint ptr %preempt_count.i.i6 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %preempt_count.i.i6, align 4
  %and.i7 = and i32 %46, 15728640
  %47 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i78.i8 = and i32 %47, -16384
  %48 = inttoptr i32 %and.i.i78.i8 to ptr
  %preempt_count.i79.i9 = getelementptr inbounds %struct.thread_info, ptr %48, i32 0, i32 1
  %49 = ptrtoint ptr %preempt_count.i79.i9 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %preempt_count.i79.i9, align 4
  %and2.i10 = and i32 %50, 983040
  %or.i11 = or i32 %and2.i10, %and.i7
  %51 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i80.i12 = and i32 %51, -16384
  %52 = inttoptr i32 %and.i.i80.i12 to ptr
  %preempt_count.i81.i13 = getelementptr inbounds %struct.thread_info, ptr %52, i32 0, i32 1
  %53 = ptrtoint ptr %preempt_count.i81.i13 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %preempt_count.i81.i13, align 4
  %and5.i14 = and i32 %54, 256
  %or6.i15 = or i32 %or.i11, %and5.i14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or6.i15)
  %tobool.not.i16 = icmp eq i32 %or6.i15, 0
  %55 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i85.i17 = and i32 %55, -16384
  %56 = inttoptr i32 %and.i85.i17 to ptr
  br i1 %tobool.not.i16, label %if.else.i36, label %if.then.i31

if.then.i31:                                      ; preds = %if.end5.i
  %preempt_count.i.i.i18 = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 1
  %57 = ptrtoint ptr %preempt_count.i.i.i18 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %preempt_count.i.i.i18, align 4
  %add.i.i19 = add i32 %58, 1
  store volatile i32 %add.i.i19, ptr %preempt_count.i.i.i18, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !222
  %59 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i20 = and i32 %59, -16384
  %60 = inttoptr i32 %and.i.i20 to ptr
  %cpu.i21 = getelementptr inbounds %struct.thread_info, ptr %60, i32 0, i32 3
  %61 = ptrtoint ptr %cpu.i21 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %cpu.i21, align 4
  %arrayidx.i22 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %62
  %63 = ptrtoint ptr %arrayidx.i22 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %arrayidx.i22, align 4
  %add.i23 = add i32 %64, ptrtoint (ptr @int_active_memcg to i32)
  %65 = inttoptr i32 %add.i23 to ptr
  %66 = ptrtoint ptr %65 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile ptr, ptr %65, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !223
  %68 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i82.i24 = and i32 %68, -16384
  %69 = inttoptr i32 %and.i.i.i82.i24 to ptr
  %preempt_count.i.i83.i25 = getelementptr inbounds %struct.thread_info, ptr %69, i32 0, i32 1
  %70 = ptrtoint ptr %preempt_count.i.i83.i25 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load volatile i32, ptr %preempt_count.i.i83.i25, align 4
  %sub.i.i26 = add i32 %71, -1
  store volatile i32 %sub.i.i26, ptr %preempt_count.i.i83.i25, align 4
  %72 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #19, !srcloc !224
  %73 = ptrtoint ptr %cpu.i21 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %cpu.i21, align 4
  %arrayidx47.i27 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %74
  %75 = ptrtoint ptr %arrayidx47.i27 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %arrayidx47.i27, align 4
  %add48.i28 = add i32 %76, ptrtoint (ptr @int_active_memcg to i32)
  %77 = inttoptr i32 %add48.i28 to ptr
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr %old.0.i, ptr %77, align 4
  %79 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #19, !srcloc !225
  %and.i.i84.i29 = and i32 %79, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i84.i29)
  %tobool59.not.i30 = icmp eq i32 %and.i.i84.i29, 0
  br i1 %tobool59.not.i30, label %if.then63.i32, label %if.then.i31.do.end65.i33_crit_edge, !prof !219

if.then.i31.do.end65.i33_crit_edge:               ; preds = %if.then.i31
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end65.i33

if.then63.i32:                                    ; preds = %if.then.i31
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @warn_bogus_irq_restore() #19
  br label %do.end65.i33

do.end65.i33:                                     ; preds = %if.then63.i32, %if.then.i31.do.end65.i33_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %72) #19, !srcloc !226
  br label %set_active_memcg.exit38

if.else.i36:                                      ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #21
  %task.i34 = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 2
  %80 = ptrtoint ptr %task.i34 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %task.i34, align 8
  %active_memcg.i35 = getelementptr inbounds %struct.task_struct, ptr %81, i32 0, i32 206
  %82 = ptrtoint ptr %active_memcg.i35 to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %old.0.i, ptr %active_memcg.i35, align 8
  br label %set_active_memcg.exit38

set_active_memcg.exit38:                          ; preds = %if.else.i36, %do.end65.i33
  ret ptr %call.i4.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @bpf_map_kzalloc(ptr nocapture noundef readonly %map, i32 noundef %size, i32 noundef %flags) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %memcg = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 17
  %0 = ptrtoint ptr %memcg to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %memcg, align 4
  %2 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i, align 4
  %and.i = and i32 %5, 15728640
  %6 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i78.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i78.i to ptr
  %preempt_count.i79.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i79.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i79.i, align 4
  %and2.i = and i32 %9, 983040
  %or.i = or i32 %and2.i, %and.i
  %10 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i80.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i80.i to ptr
  %preempt_count.i81.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i81.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i81.i, align 4
  %and5.i = and i32 %13, 256
  %or6.i = or i32 %or.i, %and5.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or6.i)
  %tobool.not.i = icmp eq i32 %or6.i, 0
  %14 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i85.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i85.i to ptr
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %17, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !222
  %18 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %21
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %23, ptrtoint (ptr @int_active_memcg to i32)
  %24 = inttoptr i32 %add.i to ptr
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile ptr, ptr %24, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !223
  %27 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i82.i = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i.i82.i to ptr
  %preempt_count.i.i83.i = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %preempt_count.i.i83.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %preempt_count.i.i83.i, align 4
  %sub.i.i = add i32 %30, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i83.i, align 4
  %31 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #19, !srcloc !224
  %32 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cpu.i, align 4
  %arrayidx47.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %33
  %34 = ptrtoint ptr %arrayidx47.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx47.i, align 4
  %add48.i = add i32 %35, ptrtoint (ptr @int_active_memcg to i32)
  %36 = inttoptr i32 %add48.i to ptr
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %1, ptr %36, align 4
  %38 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #19, !srcloc !225
  %and.i.i84.i = and i32 %38, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i84.i)
  %tobool59.not.i = icmp eq i32 %and.i.i84.i, 0
  br i1 %tobool59.not.i, label %if.then63.i, label %if.then.i.do.end65.i_crit_edge, !prof !219

if.then.i.do.end65.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end65.i

if.then63.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @warn_bogus_irq_restore() #19
  br label %do.end65.i

do.end65.i:                                       ; preds = %if.then63.i, %if.then.i.do.end65.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %31) #19, !srcloc !226
  br label %if.end8.i.i

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %task.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 2
  %39 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %task.i, align 8
  %active_memcg.i = getelementptr inbounds %struct.task_struct, ptr %40, i32 0, i32 206
  %41 = ptrtoint ptr %active_memcg.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %active_memcg.i, align 8
  store ptr %1, ptr %active_memcg.i, align 8
  br label %if.end8.i.i

if.end8.i.i:                                      ; preds = %if.else.i, %do.end65.i
  %old.0.i = phi ptr [ %26, %do.end65.i ], [ %42, %if.else.i ]
  %or.i3 = or i32 %flags, 4194560
  %call9.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %size, i32 noundef %or.i3) #22
  %43 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i5 = and i32 %43, -16384
  %44 = inttoptr i32 %and.i.i.i5 to ptr
  %preempt_count.i.i6 = getelementptr inbounds %struct.thread_info, ptr %44, i32 0, i32 1
  %45 = ptrtoint ptr %preempt_count.i.i6 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %preempt_count.i.i6, align 4
  %and.i7 = and i32 %46, 15728640
  %47 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i78.i8 = and i32 %47, -16384
  %48 = inttoptr i32 %and.i.i78.i8 to ptr
  %preempt_count.i79.i9 = getelementptr inbounds %struct.thread_info, ptr %48, i32 0, i32 1
  %49 = ptrtoint ptr %preempt_count.i79.i9 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %preempt_count.i79.i9, align 4
  %and2.i10 = and i32 %50, 983040
  %or.i11 = or i32 %and2.i10, %and.i7
  %51 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i80.i12 = and i32 %51, -16384
  %52 = inttoptr i32 %and.i.i80.i12 to ptr
  %preempt_count.i81.i13 = getelementptr inbounds %struct.thread_info, ptr %52, i32 0, i32 1
  %53 = ptrtoint ptr %preempt_count.i81.i13 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %preempt_count.i81.i13, align 4
  %and5.i14 = and i32 %54, 256
  %or6.i15 = or i32 %or.i11, %and5.i14
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or6.i15)
  %tobool.not.i16 = icmp eq i32 %or6.i15, 0
  %55 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i85.i17 = and i32 %55, -16384
  %56 = inttoptr i32 %and.i85.i17 to ptr
  br i1 %tobool.not.i16, label %if.else.i36, label %if.then.i31

if.then.i31:                                      ; preds = %if.end8.i.i
  %preempt_count.i.i.i18 = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 1
  %57 = ptrtoint ptr %preempt_count.i.i.i18 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %preempt_count.i.i.i18, align 4
  %add.i.i19 = add i32 %58, 1
  store volatile i32 %add.i.i19, ptr %preempt_count.i.i.i18, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !222
  %59 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i20 = and i32 %59, -16384
  %60 = inttoptr i32 %and.i.i20 to ptr
  %cpu.i21 = getelementptr inbounds %struct.thread_info, ptr %60, i32 0, i32 3
  %61 = ptrtoint ptr %cpu.i21 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %cpu.i21, align 4
  %arrayidx.i22 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %62
  %63 = ptrtoint ptr %arrayidx.i22 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %arrayidx.i22, align 4
  %add.i23 = add i32 %64, ptrtoint (ptr @int_active_memcg to i32)
  %65 = inttoptr i32 %add.i23 to ptr
  %66 = ptrtoint ptr %65 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile ptr, ptr %65, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !223
  %68 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i82.i24 = and i32 %68, -16384
  %69 = inttoptr i32 %and.i.i.i82.i24 to ptr
  %preempt_count.i.i83.i25 = getelementptr inbounds %struct.thread_info, ptr %69, i32 0, i32 1
  %70 = ptrtoint ptr %preempt_count.i.i83.i25 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load volatile i32, ptr %preempt_count.i.i83.i25, align 4
  %sub.i.i26 = add i32 %71, -1
  store volatile i32 %sub.i.i26, ptr %preempt_count.i.i83.i25, align 4
  %72 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #19, !srcloc !224
  %73 = ptrtoint ptr %cpu.i21 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %cpu.i21, align 4
  %arrayidx47.i27 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %74
  %75 = ptrtoint ptr %arrayidx47.i27 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %arrayidx47.i27, align 4
  %add48.i28 = add i32 %76, ptrtoint (ptr @int_active_memcg to i32)
  %77 = inttoptr i32 %add48.i28 to ptr
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr %old.0.i, ptr %77, align 4
  %79 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #19, !srcloc !225
  %and.i.i84.i29 = and i32 %79, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i84.i29)
  %tobool59.not.i30 = icmp eq i32 %and.i.i84.i29, 0
  br i1 %tobool59.not.i30, label %if.then63.i32, label %if.then.i31.do.end65.i33_crit_edge, !prof !219

if.then.i31.do.end65.i33_crit_edge:               ; preds = %if.then.i31
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end65.i33

if.then63.i32:                                    ; preds = %if.then.i31
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @warn_bogus_irq_restore() #19
  br label %do.end65.i33

do.end65.i33:                                     ; preds = %if.then63.i32, %if.then.i31.do.end65.i33_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %72) #19, !srcloc !226
  br label %set_active_memcg.exit38

if.else.i36:                                      ; preds = %if.end8.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %task.i34 = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 2
  %80 = ptrtoint ptr %task.i34 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %task.i34, align 8
  %active_memcg.i35 = getelementptr inbounds %struct.task_struct, ptr %81, i32 0, i32 206
  %82 = ptrtoint ptr %active_memcg.i35 to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %old.0.i, ptr %active_memcg.i35, align 8
  br label %set_active_memcg.exit38

set_active_memcg.exit38:                          ; preds = %if.else.i36, %do.end65.i33
  ret ptr %call9.i.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @bpf_map_alloc_percpu(ptr nocapture noundef readonly %map, i32 noundef %size, i32 noundef %align, i32 noundef %flags) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %memcg = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 17
  %0 = ptrtoint ptr %memcg to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %memcg, align 4
  %2 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i, align 4
  %and.i = and i32 %5, 15728640
  %6 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i78.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i78.i to ptr
  %preempt_count.i79.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i79.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i79.i, align 4
  %and2.i = and i32 %9, 983040
  %or.i = or i32 %and2.i, %and.i
  %10 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i80.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i80.i to ptr
  %preempt_count.i81.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i81.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i81.i, align 4
  %and5.i = and i32 %13, 256
  %or6.i = or i32 %or.i, %and5.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or6.i)
  %tobool.not.i = icmp eq i32 %or6.i, 0
  %14 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i85.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i85.i to ptr
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %17, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !222
  %18 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %21
  %22 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %23, ptrtoint (ptr @int_active_memcg to i32)
  %24 = inttoptr i32 %add.i to ptr
  %25 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile ptr, ptr %24, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !223
  %27 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i82.i = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i.i82.i to ptr
  %preempt_count.i.i83.i = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 1
  %29 = ptrtoint ptr %preempt_count.i.i83.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %preempt_count.i.i83.i, align 4
  %sub.i.i = add i32 %30, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i83.i, align 4
  %31 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #19, !srcloc !224
  %32 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %cpu.i, align 4
  %arrayidx47.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %33
  %34 = ptrtoint ptr %arrayidx47.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %arrayidx47.i, align 4
  %add48.i = add i32 %35, ptrtoint (ptr @int_active_memcg to i32)
  %36 = inttoptr i32 %add48.i to ptr
  %37 = ptrtoint ptr %36 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %1, ptr %36, align 4
  %38 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #19, !srcloc !225
  %and.i.i84.i = and i32 %38, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i84.i)
  %tobool59.not.i = icmp eq i32 %and.i.i84.i, 0
  br i1 %tobool59.not.i, label %if.then63.i, label %if.then.i.do.end65.i_crit_edge, !prof !219

if.then.i.do.end65.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end65.i

if.then63.i:                                      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @warn_bogus_irq_restore() #19
  br label %do.end65.i

do.end65.i:                                       ; preds = %if.then63.i, %if.then.i.do.end65.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %31) #19, !srcloc !226
  br label %set_active_memcg.exit

if.else.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %task.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 2
  %39 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %task.i, align 8
  %active_memcg.i = getelementptr inbounds %struct.task_struct, ptr %40, i32 0, i32 206
  %41 = ptrtoint ptr %active_memcg.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %active_memcg.i, align 8
  store ptr %1, ptr %active_memcg.i, align 8
  br label %set_active_memcg.exit

set_active_memcg.exit:                            ; preds = %if.else.i, %do.end65.i
  %old.0.i = phi ptr [ %26, %do.end65.i ], [ %42, %if.else.i ]
  %or = or i32 %flags, 4194304
  %call1 = tail call noalias ptr @__alloc_percpu_gfp(i32 noundef %size, i32 noundef %align, i32 noundef %or) #22
  %43 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i3 = and i32 %43, -16384
  %44 = inttoptr i32 %and.i.i.i3 to ptr
  %preempt_count.i.i4 = getelementptr inbounds %struct.thread_info, ptr %44, i32 0, i32 1
  %45 = ptrtoint ptr %preempt_count.i.i4 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load volatile i32, ptr %preempt_count.i.i4, align 4
  %and.i5 = and i32 %46, 15728640
  %47 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i78.i6 = and i32 %47, -16384
  %48 = inttoptr i32 %and.i.i78.i6 to ptr
  %preempt_count.i79.i7 = getelementptr inbounds %struct.thread_info, ptr %48, i32 0, i32 1
  %49 = ptrtoint ptr %preempt_count.i79.i7 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load volatile i32, ptr %preempt_count.i79.i7, align 4
  %and2.i8 = and i32 %50, 983040
  %or.i9 = or i32 %and2.i8, %and.i5
  %51 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i80.i10 = and i32 %51, -16384
  %52 = inttoptr i32 %and.i.i80.i10 to ptr
  %preempt_count.i81.i11 = getelementptr inbounds %struct.thread_info, ptr %52, i32 0, i32 1
  %53 = ptrtoint ptr %preempt_count.i81.i11 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load volatile i32, ptr %preempt_count.i81.i11, align 4
  %and5.i12 = and i32 %54, 256
  %or6.i13 = or i32 %or.i9, %and5.i12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or6.i13)
  %tobool.not.i14 = icmp eq i32 %or6.i13, 0
  %55 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i85.i15 = and i32 %55, -16384
  %56 = inttoptr i32 %and.i85.i15 to ptr
  br i1 %tobool.not.i14, label %if.else.i34, label %if.then.i29

if.then.i29:                                      ; preds = %set_active_memcg.exit
  %preempt_count.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 1
  %57 = ptrtoint ptr %preempt_count.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load volatile i32, ptr %preempt_count.i.i.i16, align 4
  %add.i.i17 = add i32 %58, 1
  store volatile i32 %add.i.i17, ptr %preempt_count.i.i.i16, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !222
  %59 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i18 = and i32 %59, -16384
  %60 = inttoptr i32 %and.i.i18 to ptr
  %cpu.i19 = getelementptr inbounds %struct.thread_info, ptr %60, i32 0, i32 3
  %61 = ptrtoint ptr %cpu.i19 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %cpu.i19, align 4
  %arrayidx.i20 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %62
  %63 = ptrtoint ptr %arrayidx.i20 to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load i32, ptr %arrayidx.i20, align 4
  %add.i21 = add i32 %64, ptrtoint (ptr @int_active_memcg to i32)
  %65 = inttoptr i32 %add.i21 to ptr
  %66 = ptrtoint ptr %65 to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load volatile ptr, ptr %65, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !223
  %68 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i82.i22 = and i32 %68, -16384
  %69 = inttoptr i32 %and.i.i.i82.i22 to ptr
  %preempt_count.i.i83.i23 = getelementptr inbounds %struct.thread_info, ptr %69, i32 0, i32 1
  %70 = ptrtoint ptr %preempt_count.i.i83.i23 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load volatile i32, ptr %preempt_count.i.i83.i23, align 4
  %sub.i.i24 = add i32 %71, -1
  store volatile i32 %sub.i.i24, ptr %preempt_count.i.i83.i23, align 4
  %72 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #19, !srcloc !224
  %73 = ptrtoint ptr %cpu.i19 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load i32, ptr %cpu.i19, align 4
  %arrayidx47.i25 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %74
  %75 = ptrtoint ptr %arrayidx47.i25 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %arrayidx47.i25, align 4
  %add48.i26 = add i32 %76, ptrtoint (ptr @int_active_memcg to i32)
  %77 = inttoptr i32 %add48.i26 to ptr
  %78 = ptrtoint ptr %77 to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr %old.0.i, ptr %77, align 4
  %79 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #19, !srcloc !225
  %and.i.i84.i27 = and i32 %79, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i84.i27)
  %tobool59.not.i28 = icmp eq i32 %and.i.i84.i27, 0
  br i1 %tobool59.not.i28, label %if.then63.i30, label %if.then.i29.do.end65.i31_crit_edge, !prof !219

if.then.i29.do.end65.i31_crit_edge:               ; preds = %if.then.i29
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end65.i31

if.then63.i30:                                    ; preds = %if.then.i29
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @warn_bogus_irq_restore() #19
  br label %do.end65.i31

do.end65.i31:                                     ; preds = %if.then63.i30, %if.then.i29.do.end65.i31_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %72) #19, !srcloc !226
  br label %set_active_memcg.exit36

if.else.i34:                                      ; preds = %set_active_memcg.exit
  call void @__sanitizer_cov_trace_pc() #21
  %task.i32 = getelementptr inbounds %struct.thread_info, ptr %56, i32 0, i32 2
  %80 = ptrtoint ptr %task.i32 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %task.i32, align 8
  %active_memcg.i33 = getelementptr inbounds %struct.task_struct, ptr %81, i32 0, i32 206
  %82 = ptrtoint ptr %active_memcg.i33 to i32
  call void @__asan_store4_noabort(i32 %82)
  store ptr %old.0.i, ptr %active_memcg.i33, align 8
  br label %set_active_memcg.exit36

set_active_memcg.exit36:                          ; preds = %if.else.i34, %do.end65.i31
  ret ptr %call1
}

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__alloc_percpu_gfp(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @bpf_map_put(ptr noundef %map) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %refcnt.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 22
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 8) #19
  %call.i.i.i.i = tail call i64 @generic_atomic64_sub_return(i64 noundef 1, ptr noundef %refcnt.i) #19
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %call.i.i.i.i)
  %cmp.i.i.i = icmp eq i64 %call.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then.i, label %entry.__bpf_map_put.exit_crit_edge

entry.__bpf_map_put.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %__bpf_map_put.exit

if.then.i:                                        ; preds = %entry
  %id.i.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 11
  %0 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %id.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i.i, label %if.then.i.bpf_map_free_id.exit.i_crit_edge, label %if.end.i.i

if.then.i.bpf_map_free_id.exit.i_crit_edge:       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_free_id.exit.i

if.end.i.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #21
  %call4.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @map_idr_lock) #19
  %2 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %id.i.i, align 4
  %call919.i.i = tail call ptr @idr_remove(ptr noundef nonnull @map_idr, i32 noundef %3) #19
  %4 = ptrtoint ptr %id.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %id.i.i, align 4
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @map_idr_lock, i32 noundef %call4.i.i) #19
  br label %bpf_map_free_id.exit.i

bpf_map_free_id.exit.i:                           ; preds = %if.end.i.i, %if.then.i.bpf_map_free_id.exit.i_crit_edge
  %btf.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 16
  %5 = ptrtoint ptr %btf.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %btf.i, align 8
  tail call void @btf_put(ptr noundef %6) #19
  %work.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 24
  tail call void @__init_work(ptr noundef %work.i, i32 noundef 0) #19
  %7 = ptrtoint ptr %work.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 -64, ptr %work.i, align 16
  %lockdep_map.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 24, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map.i, ptr noundef nonnull @.str.13, ptr noundef nonnull @__bpf_map_put.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #19
  %entry4.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 24, i32 1
  %8 = ptrtoint ptr %entry4.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %entry4.i, ptr %entry4.i, align 4
  %prev.i.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 24, i32 1, i32 1
  %9 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %entry4.i, ptr %prev.i.i, align 4
  %func.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 24, i32 2
  %10 = ptrtoint ptr %func.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr @bpf_map_free_deferred, ptr %func.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %11 = load ptr, ptr @system_wq, align 4
  %call.i.i1.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %11, ptr noundef %work.i) #19
  br label %__bpf_map_put.exit

__bpf_map_put.exit:                               ; preds = %bpf_map_free_id.exit.i, %entry.__bpf_map_put.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @bpf_map_put_with_uref(ptr noundef %map) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %usercnt.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 23
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usercnt.i, i32 noundef 8) #19
  %call.i.i.i.i = tail call i64 @generic_atomic64_sub_return(i64 noundef 1, ptr noundef %usercnt.i) #19
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %call.i.i.i.i)
  %cmp.i.i.i = icmp eq i64 %call.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then.i, label %entry.bpf_map_put_uref.exit_crit_edge

entry.bpf_map_put_uref.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_put_uref.exit

if.then.i:                                        ; preds = %entry
  %0 = ptrtoint ptr %map to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %map, align 128
  %map_release_uref.i = getelementptr inbounds %struct.bpf_map_ops, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %map_release_uref.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %map_release_uref.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %if.then.i.bpf_map_put_uref.exit_crit_edge, label %if.then1.i

if.then.i.bpf_map_put_uref.exit_crit_edge:        ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_put_uref.exit

if.then1.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void %3(ptr noundef %map) #19
  br label %bpf_map_put_uref.exit

bpf_map_put_uref.exit:                            ; preds = %if.then1.i, %if.then.i.bpf_map_put_uref.exit_crit_edge, %entry.bpf_map_put_uref.exit_crit_edge
  tail call void @bpf_map_put(ptr noundef %map)
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @bpf_dummy_read(ptr nocapture noundef readnone %filp, ptr nocapture noundef readnone %buf, i32 noundef %siz, ptr nocapture noundef readnone %ppos) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -22
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @bpf_dummy_write(ptr nocapture noundef readnone %filp, ptr nocapture noundef readnone %buf, i32 noundef %siz, ptr nocapture noundef readnone %ppos) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -22
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @bpf_map_poll(ptr noundef %filp, ptr noundef %pts) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %filp, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 128
  %map_poll = getelementptr inbounds %struct.bpf_map_ops, ptr %3, i32 0, i32 30
  %4 = ptrtoint ptr %map_poll to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %map_poll, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.then

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %call = tail call i32 %5(ptr noundef %1, ptr noundef %filp, ptr noundef %pts) #19
  br label %cleanup

cleanup:                                          ; preds = %if.then, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %if.then ], [ 8, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @bpf_map_mmap(ptr nocapture noundef readonly %filp, ptr noundef %vma) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %filp, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 128
  %map_mmap = getelementptr inbounds %struct.bpf_map_ops, ptr %3, i32 0, i32 29
  %4 = ptrtoint ptr %map_mmap to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %map_mmap, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %spin_lock_off.i = getelementptr inbounds %struct.bpf_map, ptr %1, i32 0, i32 9
  %6 = ptrtoint ptr %spin_lock_off.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %spin_lock_off.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %7)
  %cmp.i = icmp sgt i32 %7, -1
  br i1 %cmp.i, label %lor.lhs.false.cleanup_crit_edge, label %lor.lhs.false1

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

lor.lhs.false1:                                   ; preds = %lor.lhs.false
  %timer_off.i = getelementptr inbounds %struct.bpf_map, ptr %1, i32 0, i32 10
  %8 = ptrtoint ptr %timer_off.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %timer_off.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %9)
  %cmp.i59 = icmp sgt i32 %9, -1
  br i1 %cmp.i59, label %lor.lhs.false1.cleanup_crit_edge, label %if.end

lor.lhs.false1.cleanup_crit_edge:                 ; preds = %lor.lhs.false1
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false1
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %10 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %vm_flags, align 4
  %and = and i32 %11, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %freeze_mutex = getelementptr inbounds %struct.bpf_map, ptr %1, i32 0, i32 25
  tail call void @mutex_lock_nested(ptr noundef %freeze_mutex, i32 noundef 0) #19
  %12 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %vm_flags, align 4
  %and7 = and i32 %13, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and7)
  %tobool8.not = icmp eq i32 %and7, 0
  br i1 %tobool8.not, label %if.end5.if.end17_crit_edge, label %if.then9

if.end5.if.end17_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end17

if.then9:                                         ; preds = %if.end5
  %frozen = getelementptr inbounds %struct.bpf_map, ptr %1, i32 0, i32 20
  %14 = ptrtoint ptr %frozen to i32
  call void @__asan_load1_noabort(i32 %14)
  %15 = load i8, ptr %frozen, align 1, !range !227
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool10.not = icmp eq i8 %15, 0
  br i1 %tobool10.not, label %if.end12, label %if.then9.out_crit_edge

if.then9.out_crit_edge:                           ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #21
  br label %out

if.end12:                                         ; preds = %if.then9
  %map_flags = getelementptr inbounds %struct.bpf_map, ptr %1, i32 0, i32 8
  %16 = ptrtoint ptr %map_flags to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %map_flags, align 8
  %and13 = and i32 %17, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and13)
  %tobool14.not = icmp eq i32 %and13, 0
  br i1 %tobool14.not, label %if.end12.if.end17_crit_edge, label %if.end12.out_crit_edge

if.end12.out_crit_edge:                           ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  br label %out

if.end12.if.end17_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end17

if.end17:                                         ; preds = %if.end12.if.end17_crit_edge, %if.end5.if.end17_crit_edge
  %spec.select.v = phi i32 [ -65, %if.end12.if.end17_crit_edge ], [ -97, %if.end5.if.end17_crit_edge ]
  %vm_ops = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 12
  %18 = ptrtoint ptr %vm_ops to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr @bpf_map_default_vmops, ptr %vm_ops, align 4
  %vm_private_data = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 15
  %19 = ptrtoint ptr %vm_private_data to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %1, ptr %vm_private_data, align 4
  %spec.select = and i32 %spec.select.v, %13
  %20 = ptrtoint ptr %vm_flags to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %spec.select, ptr %vm_flags, align 4
  %21 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %1, align 128
  %map_mmap28 = getelementptr inbounds %struct.bpf_map_ops, ptr %22, i32 0, i32 29
  %23 = ptrtoint ptr %map_mmap28 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %map_mmap28, align 4
  %call29 = tail call i32 %24(ptr noundef %1, ptr noundef %vma) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %if.end32, label %if.end17.out_crit_edge

if.end17.out_crit_edge:                           ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #21
  br label %out

if.end32:                                         ; preds = %if.end17
  %25 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %vm_flags, align 4
  %and34 = and i32 %26, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34)
  %tobool35.not = icmp eq i32 %and34, 0
  br i1 %tobool35.not, label %if.end32.out_crit_edge, label %if.then36

if.end32.out_crit_edge:                           ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #21
  br label %out

if.then36:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #21
  tail call fastcc void @bpf_map_write_active_inc(ptr noundef %1)
  br label %out

out:                                              ; preds = %if.then36, %if.end32.out_crit_edge, %if.end17.out_crit_edge, %if.end12.out_crit_edge, %if.then9.out_crit_edge
  %err.0 = phi i32 [ %call29, %if.end17.out_crit_edge ], [ 0, %if.then36 ], [ 0, %if.end32.out_crit_edge ], [ -1, %if.then9.out_crit_edge ], [ -13, %if.end12.out_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %freeze_mutex) #19
  br label %cleanup

cleanup:                                          ; preds = %out, %if.end.cleanup_crit_edge, %lor.lhs.false1.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.0, %out ], [ -524, %lor.lhs.false1.cleanup_crit_edge ], [ -524, %lor.lhs.false.cleanup_crit_edge ], [ -524, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @bpf_map_release(ptr nocapture noundef readnone %inode, ptr noundef %filp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %filp, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 128
  %map_release = getelementptr inbounds %struct.bpf_map_ops, ptr %3, i32 0, i32 2
  %4 = ptrtoint ptr %map_release to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %map_release, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void %5(ptr noundef %1, ptr noundef %filp) #19
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %usercnt.i.i = getelementptr inbounds %struct.bpf_map, ptr %1, i32 0, i32 23
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usercnt.i.i, i32 noundef 8) #19
  %call.i.i.i.i.i = tail call i64 @generic_atomic64_sub_return(i64 noundef 1, ptr noundef %usercnt.i.i) #19
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %call.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i64 %call.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %if.then.i.i, label %if.end.bpf_map_put_with_uref.exit_crit_edge

if.end.bpf_map_put_with_uref.exit_crit_edge:      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_put_with_uref.exit

if.then.i.i:                                      ; preds = %if.end
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %1, align 128
  %map_release_uref.i.i = getelementptr inbounds %struct.bpf_map_ops, ptr %7, i32 0, i32 5
  %8 = ptrtoint ptr %map_release_uref.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %map_release_uref.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i, label %if.then.i.i.bpf_map_put_with_uref.exit_crit_edge, label %if.then1.i.i

if.then.i.i.bpf_map_put_with_uref.exit_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_put_with_uref.exit

if.then1.i.i:                                     ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void %9(ptr noundef %1) #19
  br label %bpf_map_put_with_uref.exit

bpf_map_put_with_uref.exit:                       ; preds = %if.then1.i.i, %if.then.i.i.bpf_map_put_with_uref.exit_crit_edge, %if.end.bpf_map_put_with_uref.exit_crit_edge
  tail call void @bpf_map_put(ptr noundef %1) #19
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bpf_map_show_fdinfo(ptr noundef %m, ptr nocapture noundef readonly %filp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %filp, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %map_type = getelementptr inbounds %struct.bpf_map, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %map_type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %map_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %3)
  %cmp = icmp eq i32 %3, 3
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %aux = getelementptr inbounds %struct.bpf_array, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %aux, align 8
  tail call void @_raw_spin_lock(ptr noundef %5) #19
  %6 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %aux, align 8
  %type3 = getelementptr inbounds %struct.anon.217, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %type3 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %type3, align 4
  %jited6 = getelementptr inbounds %struct.anon.217, ptr %7, i32 0, i32 2
  %10 = ptrtoint ptr %jited6 to i32
  call void @__asan_load1_noabort(i32 %10)
  %11 = load i8, ptr %jited6, align 4, !range !227
  %12 = zext i8 %11 to i32
  tail call void @_raw_spin_unlock(ptr noundef %7) #19
  %13 = ptrtoint ptr %map_type to i32
  call void @__asan_load4_noabort(i32 %13)
  %.pr = load i32, ptr %map_type, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %14 = phi i32 [ %.pr, %if.then ], [ %3, %entry.if.end_crit_edge ]
  %jited.0 = phi i32 [ %12, %if.then ], [ 0, %entry.if.end_crit_edge ]
  %type.0 = phi i32 [ %9, %if.then ], [ 0, %entry.if.end_crit_edge ]
  %key_size = getelementptr inbounds %struct.bpf_map, ptr %1, i32 0, i32 4
  %15 = ptrtoint ptr %key_size to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %key_size, align 16
  %value_size = getelementptr inbounds %struct.bpf_map, ptr %1, i32 0, i32 5
  %17 = ptrtoint ptr %value_size to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %value_size, align 4
  %max_entries = getelementptr inbounds %struct.bpf_map, ptr %1, i32 0, i32 6
  %19 = ptrtoint ptr %max_entries to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %max_entries, align 8
  %map_flags = getelementptr inbounds %struct.bpf_map, ptr %1, i32 0, i32 8
  %21 = ptrtoint ptr %map_flags to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %map_flags, align 8
  %map_extra = getelementptr inbounds %struct.bpf_map, ptr %1, i32 0, i32 7
  %23 = ptrtoint ptr %map_extra to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %map_extra, align 32
  %25 = zext i32 %14 to i64
  call void @__sanitizer_cov_trace_switch(i64 %25, ptr @__sancov_gen_cov_switch_values)
  switch i32 %14, label %if.else24.i.i [
    i32 5, label %if.end.if.then.i.i_crit_edge
    i32 10, label %if.end.if.then.i.i_crit_edge34
    i32 6, label %if.end.if.then.i.i_crit_edge35
    i32 21, label %if.end.if.then.i.i_crit_edge36
    i32 4, label %if.end.bpf_map_memory_footprint.exit_crit_edge
    i32 8, label %if.end.bpf_map_memory_footprint.exit_crit_edge37
    i32 12, label %if.end.bpf_map_memory_footprint.exit_crit_edge38
    i32 3, label %if.end.bpf_map_memory_footprint.exit_crit_edge39
    i32 13, label %if.end.bpf_map_memory_footprint.exit_crit_edge40
  ]

if.end.bpf_map_memory_footprint.exit_crit_edge40: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_memory_footprint.exit

if.end.bpf_map_memory_footprint.exit_crit_edge39: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_memory_footprint.exit

if.end.bpf_map_memory_footprint.exit_crit_edge38: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_memory_footprint.exit

if.end.bpf_map_memory_footprint.exit_crit_edge37: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_memory_footprint.exit

if.end.bpf_map_memory_footprint.exit_crit_edge:   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_memory_footprint.exit

if.end.if.then.i.i_crit_edge36:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i.i

if.end.if.then.i.i_crit_edge35:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i.i

if.end.if.then.i.i_crit_edge34:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i.i

if.end.if.then.i.i_crit_edge:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i.i

if.then.i.i:                                      ; preds = %if.end.if.then.i.i_crit_edge, %if.end.if.then.i.i_crit_edge34, %if.end.if.then.i.i_crit_edge35, %if.end.if.then.i.i_crit_edge36
  %sub.i.i = add i32 %18, -1
  %or.i.i = or i32 %sub.i.i, 7
  %add.i.i = add i32 %or.i.i, 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %26 = load i32, ptr @nr_cpu_ids, align 4
  %call4.i.i.i.i = tail call i32 @__bitmap_weight(ptr noundef nonnull @__cpu_possible_mask, i32 noundef %26) #19
  %mul.i.i = mul i32 %call4.i.i.i.i, %add.i.i
  br label %bpf_map_memory_footprint.exit

if.else24.i.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_memory_footprint.exit

bpf_map_memory_footprint.exit:                    ; preds = %if.else24.i.i, %if.then.i.i, %if.end.bpf_map_memory_footprint.exit_crit_edge, %if.end.bpf_map_memory_footprint.exit_crit_edge37, %if.end.bpf_map_memory_footprint.exit_crit_edge38, %if.end.bpf_map_memory_footprint.exit_crit_edge39, %if.end.bpf_map_memory_footprint.exit_crit_edge40
  %retval.0.i.i = phi i32 [ %mul.i.i, %if.then.i.i ], [ %18, %if.else24.i.i ], [ 4, %if.end.bpf_map_memory_footprint.exit_crit_edge ], [ 4, %if.end.bpf_map_memory_footprint.exit_crit_edge37 ], [ 4, %if.end.bpf_map_memory_footprint.exit_crit_edge38 ], [ 4, %if.end.bpf_map_memory_footprint.exit_crit_edge39 ], [ 4, %if.end.bpf_map_memory_footprint.exit_crit_edge40 ]
  %add.i = add i32 %16, -1
  %sub.i = add i32 %add.i, %retval.0.i.i
  %or.i = or i32 %sub.i, 7
  %add1.i = add i32 %or.i, 1
  %27 = ptrtoint ptr %max_entries to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %max_entries, align 8
  %mul.i = mul i32 %add1.i, %28
  %sub2.i = add i32 %mul.i, -1
  %or3.i = or i32 %sub2.i, 4095
  %add4.i = add i32 %or3.i, 1
  %id = getelementptr inbounds %struct.bpf_map, ptr %1, i32 0, i32 11
  %29 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %id, align 4
  %frozen = getelementptr inbounds %struct.bpf_map, ptr %1, i32 0, i32 20
  %31 = ptrtoint ptr %frozen to i32
  call void @__asan_load1_noabort(i32 %31)
  %32 = load volatile i8, ptr %frozen, align 1, !range !227
  %33 = zext i8 %32 to i32
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.14, i32 noundef %14, i32 noundef %16, i32 noundef %18, i32 noundef %20, i32 noundef %22, i64 noundef %24, i32 noundef %add4.i, i32 noundef %30, i32 noundef %33) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %type.0)
  %tobool15.not = icmp eq i32 %type.0, 0
  br i1 %tobool15.not, label %bpf_map_memory_footprint.exit.if.end17_crit_edge, label %if.then16

bpf_map_memory_footprint.exit.if.end17_crit_edge: ; preds = %bpf_map_memory_footprint.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end17

if.then16:                                        ; preds = %bpf_map_memory_footprint.exit
  call void @__sanitizer_cov_trace_pc() #21
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.15, i32 noundef %type.0) #19
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.16, i32 noundef %jited.0) #19
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %bpf_map_memory_footprint.exit.if.end17_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @bpf_map_new_fd(ptr noundef %map, i32 noundef %flags) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %add = add i32 %flags, 1
  %and = and i32 %add, 3
  %and1 = and i32 %flags, 67108864
  %or = or i32 %and, %and1
  %call = tail call i32 @security_bpf_map(ptr noundef %map, i32 noundef %or) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %or2 = or i32 %flags, 524288
  %call3 = tail call i32 @anon_inode_getfd(ptr noundef nonnull @.str, ptr noundef nonnull @bpf_map_fops, ptr noundef %map, i32 noundef %or2) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_bpf_map(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @anon_inode_getfd(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define dso_local i32 @bpf_get_file_flag(i32 noundef %flags) local_unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %and = and i32 %flags, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not.not = icmp eq i32 %and, 0
  %and1 = and i32 %flags, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool2.not = icmp eq i32 %and1, 0
  %0 = and i32 %flags, 24
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %0)
  %.not = icmp eq i32 %0, 24
  %.mux = select i1 %.not, i32 -22, i32 0
  %. = select i1 %tobool2.not, i32 2, i32 1
  %retval.0 = select i1 %tobool.not.not, i32 %., i32 %.mux
  ret i32 %retval.0
}

; Function Attrs: nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @bpf_obj_name_cpy(ptr nocapture noundef writeonly %dst, ptr noundef %src, i32 noundef %size) local_unnamed_addr #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %src, i32 %size
  %0 = call ptr @memset(ptr %dst, i32 0, i32 %size)
  %cmp33 = icmp ugt ptr %add.ptr, %src
  br i1 %cmp33, label %entry.land.rhs_crit_edge, label %entry.while.end_crit_edge

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %while.end

entry.land.rhs_crit_edge:                         ; preds = %entry
  br label %land.rhs

land.rhs:                                         ; preds = %if.end.land.rhs_crit_edge, %entry.land.rhs_crit_edge
  %src.addr.035 = phi ptr [ %incdec.ptr, %if.end.land.rhs_crit_edge ], [ %src, %entry.land.rhs_crit_edge ]
  %dst.addr.034 = phi ptr [ %incdec.ptr12, %if.end.land.rhs_crit_edge ], [ %dst, %entry.land.rhs_crit_edge ]
  %1 = ptrtoint ptr %src.addr.035 to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %src.addr.035, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %land.rhs.while.end_crit_edge, label %while.body

land.rhs.while.end_crit_edge:                     ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #21
  br label %while.end

while.body:                                       ; preds = %land.rhs
  %conv = zext i8 %2 to i32
  %arrayidx = getelementptr [0 x i8], ptr @_ctype, i32 0, i32 %conv
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %3)
  %4 = load i8, ptr %arrayidx, align 1
  %.fr31 = freeze i8 %4
  %5 = and i8 %.fr31, 7
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %cmp3.not.not = icmp eq i8 %5, 0
  br i1 %cmp3.not.not, label %switch.early.test, label %while.body.if.end_crit_edge

while.body.if.end_crit_edge:                      ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

switch.early.test:                                ; preds = %while.body
  %6 = zext i8 %2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %6, ptr @__sancov_gen_cov_switch_values.61)
  switch i8 %2, label %switch.early.test.cleanup_crit_edge [
    i8 95, label %switch.early.test.if.end_crit_edge
    i8 46, label %switch.early.test.if.end_crit_edge43
  ]

switch.early.test.if.end_crit_edge43:             ; preds = %switch.early.test
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

switch.early.test.if.end_crit_edge:               ; preds = %switch.early.test
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

switch.early.test.cleanup_crit_edge:              ; preds = %switch.early.test
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %switch.early.test.if.end_crit_edge, %switch.early.test.if.end_crit_edge43, %while.body.if.end_crit_edge
  %incdec.ptr = getelementptr i8, ptr %src.addr.035, i32 1
  %incdec.ptr12 = getelementptr i8, ptr %dst.addr.034, i32 1
  %7 = ptrtoint ptr %dst.addr.034 to i32
  call void @__asan_store1_noabort(i32 %7)
  store i8 %2, ptr %dst.addr.034, align 1
  %exitcond.not = icmp eq ptr %incdec.ptr, %add.ptr
  br i1 %exitcond.not, label %if.end.cleanup_crit_edge, label %if.end.land.rhs_crit_edge

if.end.land.rhs_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.rhs

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

while.end:                                        ; preds = %land.rhs.while.end_crit_edge, %entry.while.end_crit_edge
  %src.addr.0.lcssa = phi ptr [ %src, %entry.while.end_crit_edge ], [ %src.addr.035, %land.rhs.while.end_crit_edge ]
  %cmp13 = icmp eq ptr %src.addr.0.lcssa, %add.ptr
  br i1 %cmp13, label %while.end.cleanup_crit_edge, label %if.end16

while.end.cleanup_crit_edge:                      ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end16:                                         ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #21
  %sub.ptr.lhs.cast = ptrtoint ptr %src.addr.0.lcssa to i32
  %sub.ptr.rhs.cast = ptrtoint ptr %src to i32
  %sub.ptr.sub = sub i32 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %while.end.cleanup_crit_edge, %if.end.cleanup_crit_edge, %switch.early.test.cleanup_crit_edge
  %retval.0 = phi i32 [ %sub.ptr.sub, %if.end16 ], [ -22, %while.end.cleanup_crit_edge ], [ -22, %switch.early.test.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @__bpf_map_get([2 x i32] %f.coerce) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %f.coerce.fca.0.extract = extractvalue [2 x i32] %f.coerce, 0
  %0 = inttoptr i32 %f.coerce.fca.0.extract to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %f.coerce.fca.0.extract)
  %tobool.not = icmp eq i32 %f.coerce.fca.0.extract, 0
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end:                                           ; preds = %entry
  %f_op = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 3
  %1 = ptrtoint ptr %f_op to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %f_op, align 4
  %cmp.not = icmp eq ptr %2, @bpf_map_fops
  br i1 %cmp.not, label %if.end4, label %if.then2

if.then2:                                         ; preds = %if.end
  %fd.coerce.fca.1.extract.i = extractvalue [2 x i32] %f.coerce, 1
  %and.i = and i32 %fd.coerce.fca.1.extract.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then2.return_crit_edge, label %if.then.i

if.then2.return_crit_edge:                        ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.then.i:                                        ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @fput(ptr noundef nonnull %0) #19
  br label %return

if.end4:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %private_data = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 16
  %3 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %private_data, align 4
  br label %return

return:                                           ; preds = %if.end4, %if.then.i, %if.then2.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi ptr [ %4, %if.end4 ], [ inttoptr (i32 -9 to ptr), %entry.return_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then2.return_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then.i ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @bpf_map_inc(ptr noundef %map) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %refcnt = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 22
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %refcnt) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @bpf_map_inc_with_uref(ptr noundef %map) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %refcnt = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 22
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %refcnt) #19
  %usercnt = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 23
  %call.i.i2 = tail call zeroext i1 @__kasan_check_write(ptr noundef %usercnt, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %usercnt) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @bpf_map_get(i32 noundef %ufd) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @__fdget(i32 noundef %ufd) #19, !noalias !228
  %and.i.i = and i32 %call.i, -4
  %0 = inttoptr i32 %and.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %f_op.i = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 3
  %1 = ptrtoint ptr %f_op.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %f_op.i, align 4
  %cmp.not.i = icmp eq ptr %2, @bpf_map_fops
  br i1 %cmp.not.i, label %__bpf_map_get.exit, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  %and.i.i12 = and i32 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i12)
  %tobool.not.i.i = icmp eq i32 %and.i.i12, 0
  br i1 %tobool.not.i.i, label %if.then2.i.cleanup_crit_edge, label %if.then2.i.cleanup.sink.split_crit_edge

if.then2.i.cleanup.sink.split_crit_edge:          ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split

if.then2.i.cleanup_crit_edge:                     ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

__bpf_map_get.exit:                               ; preds = %if.end.i
  %private_data.i = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 16
  %3 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %private_data.i, align 4
  %cmp.i = icmp ugt ptr %4, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %__bpf_map_get.exit.cleanup_crit_edge, label %if.end

__bpf_map_get.exit.cleanup_crit_edge:             ; preds = %__bpf_map_get.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %__bpf_map_get.exit
  %refcnt.i = getelementptr inbounds %struct.bpf_map, ptr %4, i32 0, i32 22
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %refcnt.i) #19
  %and.i = and i32 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i13 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i13, label %if.end.cleanup_crit_edge, label %if.end.cleanup.sink.split_crit_edge

if.end.cleanup.sink.split_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

cleanup.sink.split:                               ; preds = %if.end.cleanup.sink.split_crit_edge, %if.then2.i.cleanup.sink.split_crit_edge
  %retval.0.i18.ph = phi ptr [ inttoptr (i32 -22 to ptr), %if.then2.i.cleanup.sink.split_crit_edge ], [ %4, %if.end.cleanup.sink.split_crit_edge ]
  tail call void @fput(ptr noundef nonnull %0) #19
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end.cleanup_crit_edge, %__bpf_map_get.exit.cleanup_crit_edge, %if.then2.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0.i18 = phi ptr [ %4, %__bpf_map_get.exit.cleanup_crit_edge ], [ %4, %if.end.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then2.i.cleanup_crit_edge ], [ inttoptr (i32 -9 to ptr), %entry.cleanup_crit_edge ], [ %retval.0.i18.ph, %cleanup.sink.split ]
  ret ptr %retval.0.i18
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @bpf_map_get_with_uref(i32 noundef %ufd) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @__fdget(i32 noundef %ufd) #19, !noalias !231
  %and.i.i = and i32 %call.i, -4
  %0 = inttoptr i32 %and.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %entry.cleanup_crit_edge, label %if.end.i

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end.i:                                         ; preds = %entry
  %f_op.i = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 3
  %1 = ptrtoint ptr %f_op.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %f_op.i, align 4
  %cmp.not.i = icmp eq ptr %2, @bpf_map_fops
  br i1 %cmp.not.i, label %__bpf_map_get.exit, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  %and.i.i12 = and i32 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i12)
  %tobool.not.i.i = icmp eq i32 %and.i.i12, 0
  br i1 %tobool.not.i.i, label %if.then2.i.cleanup_crit_edge, label %if.then2.i.cleanup.sink.split_crit_edge

if.then2.i.cleanup.sink.split_crit_edge:          ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split

if.then2.i.cleanup_crit_edge:                     ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

__bpf_map_get.exit:                               ; preds = %if.end.i
  %private_data.i = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 16
  %3 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %private_data.i, align 4
  %cmp.i = icmp ugt ptr %4, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %__bpf_map_get.exit.cleanup_crit_edge, label %if.end

__bpf_map_get.exit.cleanup_crit_edge:             ; preds = %__bpf_map_get.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %__bpf_map_get.exit
  %refcnt.i = getelementptr inbounds %struct.bpf_map, ptr %4, i32 0, i32 22
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %refcnt.i) #19
  %usercnt.i = getelementptr inbounds %struct.bpf_map, ptr %4, i32 0, i32 23
  %call.i.i2.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usercnt.i, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %usercnt.i) #19
  %and.i = and i32 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i13 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i13, label %if.end.cleanup_crit_edge, label %if.end.cleanup.sink.split_crit_edge

if.end.cleanup.sink.split_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

cleanup.sink.split:                               ; preds = %if.end.cleanup.sink.split_crit_edge, %if.then2.i.cleanup.sink.split_crit_edge
  %retval.0.i18.ph = phi ptr [ inttoptr (i32 -22 to ptr), %if.then2.i.cleanup.sink.split_crit_edge ], [ %4, %if.end.cleanup.sink.split_crit_edge ]
  tail call void @fput(ptr noundef nonnull %0) #19
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end.cleanup_crit_edge, %__bpf_map_get.exit.cleanup_crit_edge, %if.then2.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0.i18 = phi ptr [ %4, %__bpf_map_get.exit.cleanup_crit_edge ], [ %4, %if.end.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then2.i.cleanup_crit_edge ], [ inttoptr (i32 -9 to ptr), %entry.cleanup_crit_edge ], [ %retval.0.i18.ph, %cleanup.sink.split ]
  ret ptr %retval.0.i18
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @bpf_map_inc_not_zero(ptr noundef %map) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @map_idr_lock) #19
  %refcnt.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 22
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 8) #19
  %call.i.i = tail call i64 @generic_atomic64_fetch_add_unless(ptr noundef %refcnt.i, i64 noundef 1, i64 noundef 0) #19
  %conv.i = trunc i64 %call.i.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv.i)
  %tobool.not.i = icmp eq i32 %conv.i, 0
  %.mux.i = select i1 %tobool.not.i, ptr inttoptr (i32 -2 to ptr), ptr %map
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @map_idr_lock) #19
  ret ptr %.mux.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local i32 @bpf_stackmap_copy(ptr noundef %map, ptr noundef %key, ptr noundef %value) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  ret i32 -524
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @generic_map_delete_batch(ptr noundef %map, ptr nocapture noundef readonly %attr, ptr noundef %uattr) local_unnamed_addr #0 align 64 {
entry:
  %cp = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %keys2 = getelementptr inbounds %struct.anon.2, ptr %attr, i32 0, i32 2
  %0 = ptrtoint ptr %keys2 to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %keys2, align 8
  %conv3 = trunc i64 %1 to i32
  %2 = inttoptr i32 %conv3 to ptr
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cp) #19
  %elem_flags = getelementptr inbounds %struct.anon.2, ptr %attr, i32 0, i32 6
  %3 = ptrtoint ptr %elem_flags to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %elem_flags, align 8
  %and = and i64 %4, -5
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %and5 = and i64 %4, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5)
  %tobool6.not = icmp eq i64 %and5, 0
  br i1 %tobool6.not, label %if.end.if.end8_crit_edge, label %land.lhs.true

if.end.if.end8_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end8

land.lhs.true:                                    ; preds = %if.end
  %spin_lock_off.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 9
  %5 = ptrtoint ptr %spin_lock_off.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %spin_lock_off.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %6)
  %cmp.i = icmp sgt i32 %6, -1
  br i1 %cmp.i, label %land.lhs.true.if.end8_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

land.lhs.true.if.end8_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end8

if.end8:                                          ; preds = %land.lhs.true.if.end8_crit_edge, %if.end.if.end8_crit_edge
  %count = getelementptr inbounds %struct.anon.2, ptr %attr, i32 0, i32 4
  %7 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool9.not = icmp eq i32 %8, 0
  br i1 %tobool9.not, label %if.end8.cleanup_crit_edge, label %if.end11

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end11:                                         ; preds = %if.end8
  %key_size = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 4
  %9 = ptrtoint ptr %key_size to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %key_size, align 16
  %call.i75 = tail call noalias ptr @kvmalloc_node(i32 noundef %10, i32 noundef 1060032, i32 noundef -1) #22
  %tobool13.not = icmp eq ptr %call.i75, null
  br i1 %tobool13.not, label %if.end11.cleanup_crit_edge, label %for.body.lr.ph

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

for.body.lr.ph:                                   ; preds = %if.end11
  %11 = ptrtoint ptr %cp to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %cp, align 4
  %map_type.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %if.end31.for.body_crit_edge, %for.body.lr.ph
  %storemerge111 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end31.for.body_crit_edge ]
  %12 = ptrtoint ptr %key_size to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %key_size, align 16
  %mul = mul i32 %13, %storemerge111
  %add.ptr = getelementptr i8, ptr %2, i32 %mul
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %cmp9.i.i = icmp slt i32 %13, 0
  br i1 %cmp9.i.i, label %land.rhs16.i.i, label %if.then.i.i.i

land.rhs16.i.i:                                   ; preds = %for.body
  %.b71.i.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i, label %land.rhs16.i.i.for.end_crit_edge, label %if.then27.i.i, !prof !220

land.rhs16.i.i.for.end_crit_edge:                 ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end

if.then27.i.i:                                    ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %for.end

if.then.i.i.i:                                    ; preds = %for.body
  tail call void @__check_object_size(ptr noundef nonnull %call.i75, i32 noundef %13, i1 noundef zeroext false) #19
  tail call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 156) #19
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i, label %if.then.i.i.i.if.end.i.i_crit_edge, label %land.lhs.true.i.i

if.then.i.i.i.if.end.i.i_crit_edge:               ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i.i

land.lhs.true.i.i:                                ; preds = %if.then.i.i.i
  %14 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %add.ptr, i32 %13, i32 -1226833920) #23, !srcloc !234
  %asmresult.i.i = extractvalue { i32, i32 } %14, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.then.i7.i, label %land.lhs.true.i.i.if.end.i.i_crit_edge, !prof !220

land.lhs.true.i.i.if.end.i.i_crit_edge:           ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i.i

if.then.i7.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call.i75, i32 noundef %13) #19
  %15 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i.i = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 4
  %17 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #10, !srcloc !235
  %and.i.i.i.i = and i32 %17, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %call1.i.i.i = tail call i32 @arm_copy_from_user(ptr noundef nonnull %call.i75, ptr noundef %add.ptr, i32 noundef %13) #19
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %17) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i7.i, %land.lhs.true.i.i.if.end.i.i_crit_edge, %if.then.i.i.i.if.end.i.i_crit_edge
  %res.0.i.i = phi i32 [ %13, %if.then.i.i.i.if.end.i.i_crit_edge ], [ %call1.i.i.i, %if.then.i7.i ], [ %13, %land.lhs.true.i.i.if.end.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %res.0.i.i)
  %tobool4.not.i.i = icmp eq i32 %res.0.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end23, label %if.then11.i.i, !prof !220

if.then11.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %sub.i.i = sub i32 %13, %res.0.i.i
  %add.ptr.i.i = getelementptr i8, ptr %call.i75, i32 %sub.i.i
  %18 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i)
  br label %for.end

if.end23:                                         ; preds = %if.end.i.i
  %19 = ptrtoint ptr %map to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %map, align 128
  %cmp.i76 = icmp eq ptr %20, @bpf_map_offload_ops
  br i1 %cmp.i76, label %if.then25, label %if.end27

if.then25:                                        ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #21
  %call26 = tail call i32 @bpf_map_offload_delete_elem(ptr noundef %map, ptr noundef nonnull %call.i75) #19
  br label %for.end

if.end27:                                         ; preds = %if.end23
  tail call void @migrate_disable() #19
  %21 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #19, !srcloc !224
  %22 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 3
  %24 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %25
  %26 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %27, ptrtoint (ptr @bpf_prog_active to i32)
  %28 = inttoptr i32 %add.i to ptr
  %29 = ptrtoint ptr %28 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %28, align 4
  %add13.i = add i32 %30, 1
  store i32 %add13.i, ptr %28, align 4
  %31 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #19, !srcloc !225
  %and.i.i.i = and i32 %31, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i77 = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i77, label %if.then.i78, label %if.end27.bpf_disable_instrumentation.exit_crit_edge, !prof !219

if.end27.bpf_disable_instrumentation.exit_crit_edge: ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_disable_instrumentation.exit

if.then.i78:                                      ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @warn_bogus_irq_restore() #19
  br label %bpf_disable_instrumentation.exit

bpf_disable_instrumentation.exit:                 ; preds = %if.then.i78, %if.end27.bpf_disable_instrumentation.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %21) #19, !srcloc !226
  %32 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i = and i32 %32, -16384
  %33 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %35, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !238
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #19
  %call.i = tail call zeroext i1 @rcu_is_watching() #19
  br i1 %call.i, label %bpf_disable_instrumentation.exit.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

bpf_disable_instrumentation.exit.rcu_read_lock.exit_crit_edge: ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %bpf_disable_instrumentation.exit
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i61

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

if.then.i61:                                      ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.20, i32 noundef 696, ptr noundef nonnull @.str.21) #19
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i61, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %bpf_disable_instrumentation.exit.rcu_read_lock.exit_crit_edge
  %36 = ptrtoint ptr %map to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %map, align 128
  %map_delete_elem = getelementptr inbounds %struct.bpf_map_ops, ptr %37, i32 0, i32 14
  %38 = ptrtoint ptr %map_delete_elem to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %map_delete_elem, align 4
  %call28 = tail call i32 %39(ptr noundef %map, ptr noundef nonnull %call.i75) #19
  %call.i79 = tail call zeroext i1 @rcu_is_watching() #19
  br i1 %call.i79, label %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i82

rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_unlock.exit

land.lhs.true.i82:                                ; preds = %rcu_read_lock.exit
  %call1.i80 = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i80)
  %tobool.not.i81 = icmp eq i32 %call1.i80, 0
  br i1 %tobool.not.i81, label %land.lhs.true.i82.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i84

land.lhs.true.i82.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i82
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_unlock.exit

land.lhs.true2.i84:                               ; preds = %land.lhs.true.i82
  %.b4.i83 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i83, label %land.lhs.true2.i84.rcu_read_unlock.exit_crit_edge, label %if.then.i85

land.lhs.true2.i84.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i84
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_unlock.exit

if.then.i85:                                      ; preds = %land.lhs.true2.i84
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.20, i32 noundef 724, ptr noundef nonnull @.str.22) #19
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i85, %land.lhs.true2.i84.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i82.rcu_read_unlock.exit_crit_edge, %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !239
  %40 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i86 = and i32 %40, -16384
  %41 = inttoptr i32 %and.i.i.i.i.i86 to ptr
  %preempt_count.i.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %41, i32 0, i32 1
  %42 = ptrtoint ptr %preempt_count.i.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %preempt_count.i.i.i.i87, align 4
  %sub.i.i.i = add i32 %43, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i87, align 4
  tail call void @rcu_read_unlock_strict() #19
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #19
  %44 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #19, !srcloc !224
  %45 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i88 = and i32 %45, -16384
  %46 = inttoptr i32 %and.i.i88 to ptr
  %cpu.i89 = getelementptr inbounds %struct.thread_info, ptr %46, i32 0, i32 3
  %47 = ptrtoint ptr %cpu.i89 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %cpu.i89, align 4
  %arrayidx.i90 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %48
  %49 = ptrtoint ptr %arrayidx.i90 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %arrayidx.i90, align 4
  %add.i91 = add i32 %50, ptrtoint (ptr @bpf_prog_active to i32)
  %51 = inttoptr i32 %add.i91 to ptr
  %52 = ptrtoint ptr %51 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %51, align 4
  %add13.i92 = add i32 %53, -1
  store i32 %add13.i92, ptr %51, align 4
  %54 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #19, !srcloc !225
  %and.i.i.i93 = and i32 %54, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i93)
  %tobool.not.i94 = icmp eq i32 %and.i.i.i93, 0
  br i1 %tobool.not.i94, label %if.then.i95, label %rcu_read_unlock.exit.bpf_enable_instrumentation.exit_crit_edge, !prof !219

rcu_read_unlock.exit.bpf_enable_instrumentation.exit_crit_edge: ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_enable_instrumentation.exit

if.then.i95:                                      ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @warn_bogus_irq_restore() #19
  br label %bpf_enable_instrumentation.exit

bpf_enable_instrumentation.exit:                  ; preds = %if.then.i95, %rcu_read_unlock.exit.bpf_enable_instrumentation.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %44) #19, !srcloc !226
  tail call void @migrate_enable() #19
  %55 = ptrtoint ptr %map_type.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load i32, ptr %map_type.i, align 4
  %57 = and i32 %56, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %57)
  %switch.i = icmp eq i32 %57, 12
  br i1 %switch.i, label %if.then.i96, label %bpf_enable_instrumentation.exit.maybe_wait_bpf_programs.exit_crit_edge

bpf_enable_instrumentation.exit.maybe_wait_bpf_programs.exit_crit_edge: ; preds = %bpf_enable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %maybe_wait_bpf_programs.exit

if.then.i96:                                      ; preds = %bpf_enable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @synchronize_rcu() #19
  br label %maybe_wait_bpf_programs.exit

maybe_wait_bpf_programs.exit:                     ; preds = %if.then.i96, %bpf_enable_instrumentation.exit.maybe_wait_bpf_programs.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28)
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %if.end31, label %maybe_wait_bpf_programs.exit.for.end_crit_edge

maybe_wait_bpf_programs.exit.for.end_crit_edge:   ; preds = %maybe_wait_bpf_programs.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end

if.end31:                                         ; preds = %maybe_wait_bpf_programs.exit
  tail call void @__might_resched(ptr noundef nonnull @.str.1, i32 noundef 1358, i32 noundef 0) #19
  %call.i97 = tail call i32 @__cond_resched() #19
  %58 = ptrtoint ptr %cp to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %cp, align 4
  %inc = add i32 %59, 1
  store i32 %inc, ptr %cp, align 4
  %cmp16 = icmp ult i32 %inc, %8
  br i1 %cmp16, label %if.end31.for.body_crit_edge, label %if.end31.for.end_crit_edge

if.end31.for.end_crit_edge:                       ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end

if.end31.for.body_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.body

for.end:                                          ; preds = %if.end31.for.end_crit_edge, %maybe_wait_bpf_programs.exit.for.end_crit_edge, %if.then25, %if.then11.i.i, %if.then27.i.i, %land.rhs16.i.i.for.end_crit_edge
  %err.1 = phi i32 [ %call26, %if.then25 ], [ -14, %if.then11.i.i ], [ -14, %if.then27.i.i ], [ -14, %land.rhs16.i.i.for.end_crit_edge ], [ 0, %if.end31.for.end_crit_edge ], [ %call28, %maybe_wait_bpf_programs.exit.for.end_crit_edge ]
  %count34 = getelementptr inbounds %struct.anon.2, ptr %uattr, i32 0, i32 4
  tail call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i68 = tail call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i68, label %for.end.copy_to_user.exit.thread_crit_edge, label %if.end.i.i72

for.end.copy_to_user.exit.thread_crit_edge:       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit.thread

if.end.i.i72:                                     ; preds = %for.end
  %60 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %count34, i32 4, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i70 = extractvalue { i32, i32 } %60, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i70)
  %cmp.i6.i71 = icmp eq i32 %asmresult.i.i70, 0
  br i1 %cmp.i6.i71, label %copy_to_user.exit, label %if.end.i.i72.copy_to_user.exit.thread_crit_edge

if.end.i.i72.copy_to_user.exit.thread_crit_edge:  ; preds = %if.end.i.i72
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit.thread

copy_to_user.exit:                                ; preds = %if.end.i.i72
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i73 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %cp, i32 noundef 4) #19
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %count34, ptr noundef nonnull %cp, i32 noundef 4) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool36.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool36.not, i32 %err.1, i32 -14
  br label %copy_to_user.exit.thread

copy_to_user.exit.thread:                         ; preds = %copy_to_user.exit, %if.end.i.i72.copy_to_user.exit.thread_crit_edge, %for.end.copy_to_user.exit.thread_crit_edge
  %61 = phi i32 [ -14, %for.end.copy_to_user.exit.thread_crit_edge ], [ -14, %if.end.i.i72.copy_to_user.exit.thread_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  call void @kvfree(ptr noundef nonnull %call.i75) #19
  br label %cleanup

cleanup:                                          ; preds = %copy_to_user.exit.thread, %if.end11.cleanup_crit_edge, %if.end8.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %61, %copy_to_user.exit.thread ], [ -22, %entry.cleanup_crit_edge ], [ -22, %land.lhs.true.cleanup_crit_edge ], [ 0, %if.end8.cleanup_crit_edge ], [ -12, %if.end11.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cp) #19
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_map_offload_delete_elem(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @bpf_disable_instrumentation() unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @migrate_disable() #19
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #19, !srcloc !224
  %1 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %4
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx, align 4
  %add = add i32 %6, ptrtoint (ptr @bpf_prog_active to i32)
  %7 = inttoptr i32 %add to ptr
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add13 = add i32 %9, 1
  store i32 %add13, ptr %7, align 4
  %10 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #19, !srcloc !225
  %and.i.i = and i32 %10, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not, label %if.then, label %entry.do.end28_crit_edge, !prof !219

entry.do.end28_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end28

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @warn_bogus_irq_restore() #19
  br label %do.end28

do.end28:                                         ; preds = %if.then, %entry.do.end28_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #19, !srcloc !226
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_read_unlock() unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %call = tail call zeroext i1 @rcu_is_watching() #19
  br i1 %call, label %entry.do.end_crit_edge, label %land.lhs.true

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %land.lhs.true.do.end_crit_edge, label %land.lhs.true2

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end

land.lhs.true2:                                   ; preds = %land.lhs.true
  %.b4 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4, label %land.lhs.true2.do.end_crit_edge, label %if.then

land.lhs.true2.do.end_crit_edge:                  ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end

if.then:                                          ; preds = %land.lhs.true2
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.20, i32 noundef 724, ptr noundef nonnull @.str.22) #19
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true2.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !239
  %0 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %3, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void @rcu_read_unlock_strict() #19
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map)
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @bpf_enable_instrumentation() unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %0 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #19, !srcloc !224
  %1 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %4
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx, align 4
  %add = add i32 %6, ptrtoint (ptr @bpf_prog_active to i32)
  %7 = inttoptr i32 %add to ptr
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %7, align 4
  %add13 = add i32 %9, -1
  store i32 %add13, ptr %7, align 4
  %10 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #19, !srcloc !225
  %and.i.i = and i32 %10, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not, label %if.then, label %entry.do.end28_crit_edge, !prof !219

entry.do.end28_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end28

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @warn_bogus_irq_restore() #19
  br label %do.end28

do.end28:                                         ; preds = %if.then, %entry.do.end28_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %0) #19, !srcloc !226
  tail call void @migrate_enable() #19
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_resched(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @generic_map_update_batch(ptr noundef %map, ptr nocapture noundef readonly %attr, ptr noundef %uattr) local_unnamed_addr #0 align 64 {
entry:
  %cp = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %values2 = getelementptr inbounds %struct.anon.2, ptr %attr, i32 0, i32 3
  %0 = ptrtoint ptr %values2 to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %values2, align 8
  %conv3 = trunc i64 %1 to i32
  %2 = inttoptr i32 %conv3 to ptr
  %keys10 = getelementptr inbounds %struct.anon.2, ptr %attr, i32 0, i32 2
  %3 = ptrtoint ptr %keys10 to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %keys10, align 8
  %conv11 = trunc i64 %4 to i32
  %5 = inttoptr i32 %conv11 to ptr
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cp) #19
  %map_fd = getelementptr inbounds %struct.anon.2, ptr %attr, i32 0, i32 5
  %6 = ptrtoint ptr %map_fd to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %map_fd, align 4
  %elem_flags = getelementptr inbounds %struct.anon.2, ptr %attr, i32 0, i32 6
  %8 = ptrtoint ptr %elem_flags to i32
  call void @__asan_load8_noabort(i32 %8)
  %9 = load i64, ptr %elem_flags, align 8
  %and = and i64 %9, -5
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %and13 = and i64 %9, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and13)
  %tobool14.not = icmp eq i64 %and13, 0
  br i1 %tobool14.not, label %if.end.if.end16_crit_edge, label %land.lhs.true

if.end.if.end16_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end16

land.lhs.true:                                    ; preds = %if.end
  %spin_lock_off.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 9
  %10 = ptrtoint ptr %spin_lock_off.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %spin_lock_off.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %11)
  %cmp.i = icmp sgt i32 %11, -1
  br i1 %cmp.i, label %land.lhs.true.if.end16_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

land.lhs.true.if.end16_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end16

if.end16:                                         ; preds = %land.lhs.true.if.end16_crit_edge, %if.end.if.end16_crit_edge
  %map_type.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 3
  %12 = ptrtoint ptr %map_type.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %map_type.i, align 4
  %14 = zext i32 %13 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.62)
  switch i32 %13, label %if.else24.i [
    i32 5, label %if.end16.if.then.i139_crit_edge
    i32 10, label %if.end16.if.then.i139_crit_edge250
    i32 6, label %if.end16.if.then.i139_crit_edge251
    i32 21, label %if.end16.if.then.i139_crit_edge252
    i32 4, label %if.end16.bpf_map_value_size.exit_crit_edge
    i32 8, label %if.end16.bpf_map_value_size.exit_crit_edge253
    i32 12, label %if.end16.bpf_map_value_size.exit_crit_edge254
    i32 3, label %if.end16.bpf_map_value_size.exit_crit_edge255
    i32 13, label %if.end16.bpf_map_value_size.exit_crit_edge256
  ]

if.end16.bpf_map_value_size.exit_crit_edge256:    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_value_size.exit

if.end16.bpf_map_value_size.exit_crit_edge255:    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_value_size.exit

if.end16.bpf_map_value_size.exit_crit_edge254:    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_value_size.exit

if.end16.bpf_map_value_size.exit_crit_edge253:    ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_value_size.exit

if.end16.bpf_map_value_size.exit_crit_edge:       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_value_size.exit

if.end16.if.then.i139_crit_edge252:               ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i139

if.end16.if.then.i139_crit_edge251:               ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i139

if.end16.if.then.i139_crit_edge250:               ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i139

if.end16.if.then.i139_crit_edge:                  ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i139

if.then.i139:                                     ; preds = %if.end16.if.then.i139_crit_edge, %if.end16.if.then.i139_crit_edge250, %if.end16.if.then.i139_crit_edge251, %if.end16.if.then.i139_crit_edge252
  %value_size.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 5
  %15 = ptrtoint ptr %value_size.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %value_size.i, align 4
  %sub.i = add i32 %16, -1
  %or.i = or i32 %sub.i, 7
  %add.i = add i32 %or.i, 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %17 = load i32, ptr @nr_cpu_ids, align 4
  %call4.i.i.i = tail call i32 @__bitmap_weight(ptr noundef nonnull @__cpu_possible_mask, i32 noundef %17) #19
  %mul.i = mul i32 %call4.i.i.i, %add.i
  br label %bpf_map_value_size.exit

if.else24.i:                                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  %value_size25.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 5
  %18 = ptrtoint ptr %value_size25.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %value_size25.i, align 4
  br label %bpf_map_value_size.exit

bpf_map_value_size.exit:                          ; preds = %if.else24.i, %if.then.i139, %if.end16.bpf_map_value_size.exit_crit_edge, %if.end16.bpf_map_value_size.exit_crit_edge253, %if.end16.bpf_map_value_size.exit_crit_edge254, %if.end16.bpf_map_value_size.exit_crit_edge255, %if.end16.bpf_map_value_size.exit_crit_edge256
  %retval.0.i = phi i32 [ %mul.i, %if.then.i139 ], [ %19, %if.else24.i ], [ 4, %if.end16.bpf_map_value_size.exit_crit_edge ], [ 4, %if.end16.bpf_map_value_size.exit_crit_edge253 ], [ 4, %if.end16.bpf_map_value_size.exit_crit_edge254 ], [ 4, %if.end16.bpf_map_value_size.exit_crit_edge255 ], [ 4, %if.end16.bpf_map_value_size.exit_crit_edge256 ]
  %count = getelementptr inbounds %struct.anon.2, ptr %attr, i32 0, i32 4
  %20 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool18.not = icmp eq i32 %21, 0
  br i1 %tobool18.not, label %bpf_map_value_size.exit.cleanup_crit_edge, label %if.end20

bpf_map_value_size.exit.cleanup_crit_edge:        ; preds = %bpf_map_value_size.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end20:                                         ; preds = %bpf_map_value_size.exit
  %key_size = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 4
  %22 = ptrtoint ptr %key_size to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %key_size, align 16
  %call.i = tail call noalias ptr @kvmalloc_node(i32 noundef %23, i32 noundef 1060032, i32 noundef -1) #22
  %tobool22.not = icmp eq ptr %call.i, null
  br i1 %tobool22.not, label %if.end20.cleanup_crit_edge, label %if.end24

if.end20.cleanup_crit_edge:                       ; preds = %if.end20
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end24:                                         ; preds = %if.end20
  %call.i142 = tail call noalias ptr @kvmalloc_node(i32 noundef %retval.0.i, i32 noundef 1060032, i32 noundef -1) #22
  %tobool26.not = icmp eq ptr %call.i142, null
  br i1 %tobool26.not, label %if.then27, label %for.body.lr.ph

if.then27:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @kvfree(ptr noundef nonnull %call.i) #19
  br label %cleanup

for.body.lr.ph:                                   ; preds = %if.end24
  %call.i143 = tail call i32 @__fdget(i32 noundef %7) #19, !noalias !241
  %and.i.i = and i32 %call.i143, -4
  %24 = inttoptr i32 %and.i.i to ptr
  %and1.i.i = and i32 %call.i143, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %cmp9.i.i99 = icmp slt i32 %retval.0.i, 0
  %.fca.0.insert = insertvalue [2 x i32] poison, i32 %and.i.i, 0
  %.fca.1.insert = insertvalue [2 x i32] %.fca.0.insert, i32 %and1.i.i, 1
  br label %for.body

for.body:                                         ; preds = %if.end46.for.body_crit_edge, %for.body.lr.ph
  %storemerge176 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end46.for.body_crit_edge ]
  %25 = ptrtoint ptr %key_size to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %key_size, align 16
  %mul = mul i32 %26, %storemerge176
  %add.ptr = getelementptr i8, ptr %5, i32 %mul
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %cmp9.i.i = icmp slt i32 %26, 0
  br i1 %cmp9.i.i, label %land.rhs16.i.i, label %if.then.i.i.i

land.rhs16.i.i:                                   ; preds = %for.body
  %27 = ptrtoint ptr %cp to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %storemerge176, ptr %cp, align 4
  %.b71.i.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i, label %land.rhs16.i.i.for.end_crit_edge, label %if.then27.i.i, !prof !220

land.rhs16.i.i.for.end_crit_edge:                 ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end

if.then27.i.i:                                    ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %for.end

if.then.i.i.i:                                    ; preds = %for.body
  tail call void @__check_object_size(ptr noundef nonnull %call.i, i32 noundef %26, i1 noundef zeroext false) #19
  tail call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 156) #19
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i, label %if.then.i.i.i.if.end.i.i_crit_edge, label %land.lhs.true.i.i

if.then.i.i.i.if.end.i.i_crit_edge:               ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i.i

land.lhs.true.i.i:                                ; preds = %if.then.i.i.i
  %28 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %add.ptr, i32 %26, i32 -1226833920) #23, !srcloc !234
  %asmresult.i.i = extractvalue { i32, i32 } %28, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.then.i7.i, label %land.lhs.true.i.i.if.end.i.i_crit_edge, !prof !220

land.lhs.true.i.i.if.end.i.i_crit_edge:           ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i.i

if.then.i7.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call.i, i32 noundef %26) #19
  %29 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i.i = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 4
  %31 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #10, !srcloc !235
  %and.i.i.i.i = and i32 %31, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %call1.i.i.i = tail call i32 @arm_copy_from_user(ptr noundef nonnull %call.i, ptr noundef %add.ptr, i32 noundef %26) #19
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %31) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i7.i, %land.lhs.true.i.i.if.end.i.i_crit_edge, %if.then.i.i.i.if.end.i.i_crit_edge
  %res.0.i.i = phi i32 [ %26, %if.then.i.i.i.if.end.i.i_crit_edge ], [ %call1.i.i.i, %if.then.i7.i ], [ %26, %land.lhs.true.i.i.if.end.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %res.0.i.i)
  %tobool4.not.i.i = icmp eq i32 %res.0.i.i, 0
  br i1 %tobool4.not.i.i, label %lor.lhs.false, label %if.then11.i.i, !prof !220

if.then11.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %32 = ptrtoint ptr %cp to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %storemerge176, ptr %cp, align 4
  %sub.i.i = sub i32 %26, %res.0.i.i
  %add.ptr.i.i = getelementptr i8, ptr %call.i, i32 %sub.i.i
  %33 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i)
  br label %for.end

lor.lhs.false:                                    ; preds = %if.end.i.i
  %mul36 = mul i32 %storemerge176, %retval.0.i
  %add.ptr37 = getelementptr i8, ptr %2, i32 %mul36
  br i1 %cmp9.i.i99, label %land.rhs16.i.i102, label %if.then.i.i.i105

land.rhs16.i.i102:                                ; preds = %lor.lhs.false
  %34 = ptrtoint ptr %cp to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 0, ptr %cp, align 4
  %.b71.i.i101 = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i101, label %land.rhs16.i.i102.for.end_crit_edge, label %if.then27.i.i103, !prof !220

land.rhs16.i.i102.for.end_crit_edge:              ; preds = %land.rhs16.i.i102
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end

if.then27.i.i103:                                 ; preds = %land.rhs16.i.i102
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %for.end

if.then.i.i.i105:                                 ; preds = %lor.lhs.false
  tail call void @__check_object_size(ptr noundef nonnull %call.i142, i32 noundef %retval.0.i, i1 noundef zeroext false) #19
  tail call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 156) #19
  %call.i.i106 = tail call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i106, label %if.then.i.i.i105.if.end.i.i120_crit_edge, label %land.lhs.true.i.i110

if.then.i.i.i105.if.end.i.i120_crit_edge:         ; preds = %if.then.i.i.i105
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i.i120

land.lhs.true.i.i110:                             ; preds = %if.then.i.i.i105
  %35 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %add.ptr37, i32 %retval.0.i, i32 -1226833920) #23, !srcloc !234
  %asmresult.i.i108 = extractvalue { i32, i32 } %35, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i108)
  %cmp.i6.i109 = icmp eq i32 %asmresult.i.i108, 0
  br i1 %cmp.i6.i109, label %if.then.i7.i117, label %land.lhs.true.i.i110.if.end.i.i120_crit_edge, !prof !220

land.lhs.true.i.i110.if.end.i.i120_crit_edge:     ; preds = %land.lhs.true.i.i110
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i.i120

if.then.i7.i117:                                  ; preds = %land.lhs.true.i.i110
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i111 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call.i142, i32 noundef %retval.0.i) #19
  %36 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i.i112 = and i32 %36, -16384
  %37 = inttoptr i32 %and.i.i.i.i.i.i112 to ptr
  %cpu_domain.i.i.i.i.i113 = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 4
  %38 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i113) #10, !srcloc !235
  %and.i.i.i.i114 = and i32 %38, -13
  %or.i.i.i.i115 = or i32 %and.i.i.i.i114, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i115) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %call1.i.i.i116 = tail call i32 @arm_copy_from_user(ptr noundef nonnull %call.i142, ptr noundef %add.ptr37, i32 noundef %retval.0.i) #19
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %38) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  br label %if.end.i.i120

if.end.i.i120:                                    ; preds = %if.then.i7.i117, %land.lhs.true.i.i110.if.end.i.i120_crit_edge, %if.then.i.i.i105.if.end.i.i120_crit_edge
  %res.0.i.i118 = phi i32 [ %retval.0.i, %if.then.i.i.i105.if.end.i.i120_crit_edge ], [ %call1.i.i.i116, %if.then.i7.i117 ], [ %retval.0.i, %land.lhs.true.i.i110.if.end.i.i120_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %res.0.i.i118)
  %tobool4.not.i.i119 = icmp eq i32 %res.0.i.i118, 0
  br i1 %tobool4.not.i.i119, label %if.end41, label %if.then11.i.i123, !prof !220

if.then11.i.i123:                                 ; preds = %if.end.i.i120
  call void @__sanitizer_cov_trace_pc() #21
  %39 = ptrtoint ptr %cp to i32
  call void @__asan_store4_noabort(i32 %39)
  store i32 %storemerge176, ptr %cp, align 4
  %sub.i.i121 = sub i32 %retval.0.i, %res.0.i.i118
  %add.ptr.i.i122 = getelementptr i8, ptr %call.i142, i32 %sub.i.i121
  %40 = call ptr @memset(ptr %add.ptr.i.i122, i32 0, i32 %res.0.i.i118)
  br label %for.end

if.end41:                                         ; preds = %if.end.i.i120
  %41 = ptrtoint ptr %elem_flags to i32
  call void @__asan_load8_noabort(i32 %41)
  %42 = load i64, ptr %elem_flags, align 8
  %call43 = tail call fastcc i32 @bpf_map_update_value(ptr noundef %map, [2 x i32] %.fca.1.insert, ptr noundef nonnull %call.i, ptr noundef nonnull %call.i142, i64 noundef %42)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call43)
  %tobool44.not = icmp eq i32 %call43, 0
  br i1 %tobool44.not, label %if.end46, label %if.end41.for.end.loopexit_crit_edge

if.end41.for.end.loopexit_crit_edge:              ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end.loopexit

if.end46:                                         ; preds = %if.end41
  tail call void @__might_resched(ptr noundef nonnull @.str.1, i32 noundef 1416, i32 noundef 0) #19
  %call.i144 = tail call i32 @__cond_resched() #19
  %inc = add nuw i32 %storemerge176, 1
  %exitcond.not = icmp eq i32 %inc, %21
  br i1 %exitcond.not, label %if.end46.for.end.loopexit_crit_edge, label %if.end46.for.body_crit_edge

if.end46.for.body_crit_edge:                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.body

if.end46.for.end.loopexit_crit_edge:              ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end.loopexit

for.end.loopexit:                                 ; preds = %if.end46.for.end.loopexit_crit_edge, %if.end41.for.end.loopexit_crit_edge
  %storemerge169.ph = phi i32 [ %storemerge176, %if.end41.for.end.loopexit_crit_edge ], [ %21, %if.end46.for.end.loopexit_crit_edge ]
  %43 = ptrtoint ptr %cp to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %storemerge169.ph, ptr %cp, align 4
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %if.then11.i.i123, %if.then27.i.i103, %land.rhs16.i.i102.for.end_crit_edge, %if.then11.i.i, %if.then27.i.i, %land.rhs16.i.i.for.end_crit_edge
  %err.1 = phi i32 [ -14, %if.then11.i.i ], [ -14, %if.then27.i.i ], [ -14, %land.rhs16.i.i.for.end_crit_edge ], [ -14, %if.then11.i.i123 ], [ -14, %if.then27.i.i103 ], [ -14, %land.rhs16.i.i102.for.end_crit_edge ], [ %call43, %for.end.loopexit ]
  %count49 = getelementptr inbounds %struct.anon.2, ptr %uattr, i32 0, i32 4
  tail call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i132 = tail call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i132, label %for.end.copy_to_user.exit.thread_crit_edge, label %if.end.i.i136

for.end.copy_to_user.exit.thread_crit_edge:       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit.thread

if.end.i.i136:                                    ; preds = %for.end
  %44 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %count49, i32 4, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i134 = extractvalue { i32, i32 } %44, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i134)
  %cmp.i6.i135 = icmp eq i32 %asmresult.i.i134, 0
  br i1 %cmp.i6.i135, label %copy_to_user.exit, label %if.end.i.i136.copy_to_user.exit.thread_crit_edge

if.end.i.i136.copy_to_user.exit.thread_crit_edge: ; preds = %if.end.i.i136
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit.thread

copy_to_user.exit:                                ; preds = %if.end.i.i136
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i137 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %cp, i32 noundef 4) #19
  %call.i12.i.i = call i32 @arm_copy_to_user(ptr noundef %count49, ptr noundef nonnull %cp, i32 noundef 4) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i)
  %tobool51.not = icmp eq i32 %call.i12.i.i, 0
  %spec.select = select i1 %tobool51.not, i32 %err.1, i32 -14
  br label %copy_to_user.exit.thread

copy_to_user.exit.thread:                         ; preds = %copy_to_user.exit, %if.end.i.i136.copy_to_user.exit.thread_crit_edge, %for.end.copy_to_user.exit.thread_crit_edge
  %45 = phi i32 [ -14, %for.end.copy_to_user.exit.thread_crit_edge ], [ -14, %if.end.i.i136.copy_to_user.exit.thread_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  call void @kvfree(ptr noundef nonnull %call.i142) #19
  call void @kvfree(ptr noundef nonnull %call.i) #19
  %and.i = and i32 %call.i143, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %copy_to_user.exit.thread.cleanup_crit_edge, label %if.then.i145

copy_to_user.exit.thread.cleanup_crit_edge:       ; preds = %copy_to_user.exit.thread
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then.i145:                                     ; preds = %copy_to_user.exit.thread
  call void @__sanitizer_cov_trace_pc() #21
  call void @fput(ptr noundef %24) #19
  br label %cleanup

cleanup:                                          ; preds = %if.then.i145, %copy_to_user.exit.thread.cleanup_crit_edge, %if.then27, %if.end20.cleanup_crit_edge, %bpf_map_value_size.exit.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %if.then27 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %land.lhs.true.cleanup_crit_edge ], [ 0, %bpf_map_value_size.exit.cleanup_crit_edge ], [ -12, %if.end20.cleanup_crit_edge ], [ %45, %copy_to_user.exit.thread.cleanup_crit_edge ], [ %45, %if.then.i145 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cp) #19
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_map_value_size(ptr nocapture noundef readonly %map) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %map_type = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 3
  %0 = ptrtoint ptr %map_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %map_type, align 4
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.63)
  switch i32 %1, label %if.else24 [
    i32 5, label %entry.if.then_crit_edge
    i32 10, label %entry.if.then_crit_edge36
    i32 6, label %entry.if.then_crit_edge37
    i32 21, label %entry.if.then_crit_edge38
    i32 4, label %entry.return_crit_edge
    i32 8, label %entry.return_crit_edge39
    i32 12, label %entry.return_crit_edge40
    i32 3, label %entry.return_crit_edge41
    i32 13, label %entry.return_crit_edge42
  ]

entry.return_crit_edge42:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

entry.return_crit_edge41:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

entry.return_crit_edge40:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

entry.return_crit_edge39:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

entry.if.then_crit_edge38:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then

entry.if.then_crit_edge37:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then

entry.if.then_crit_edge36:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then

entry.if.then_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then

if.then:                                          ; preds = %entry.if.then_crit_edge, %entry.if.then_crit_edge36, %entry.if.then_crit_edge37, %entry.if.then_crit_edge38
  %value_size = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 5
  %3 = ptrtoint ptr %value_size to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %value_size, align 4
  %sub = add i32 %4, -1
  %or = or i32 %sub, 7
  %add = add i32 %or, 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %5 = load i32, ptr @nr_cpu_ids, align 4
  %call4.i.i = tail call i32 @__bitmap_weight(ptr noundef nonnull @__cpu_possible_mask, i32 noundef %5) #19
  %mul = mul i32 %call4.i.i, %add
  br label %return

if.else24:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %value_size25 = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 5
  %6 = ptrtoint ptr %value_size25 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %value_size25, align 4
  br label %return

return:                                           ; preds = %if.else24, %if.then, %entry.return_crit_edge, %entry.return_crit_edge39, %entry.return_crit_edge40, %entry.return_crit_edge41, %entry.return_crit_edge42
  %retval.0 = phi i32 [ %mul, %if.then ], [ %7, %if.else24 ], [ 4, %entry.return_crit_edge ], [ 4, %entry.return_crit_edge39 ], [ 4, %entry.return_crit_edge40 ], [ 4, %entry.return_crit_edge41 ], [ 4, %entry.return_crit_edge42 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_map_update_value(ptr noundef %map, [2 x i32] %f.coerce, ptr noundef %key, ptr noundef %value, i64 noundef %flags) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %f.coerce.fca.0.extract = extractvalue [2 x i32] %f.coerce, 0
  %0 = inttoptr i32 %f.coerce.fca.0.extract to ptr
  %1 = ptrtoint ptr %map to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %map, align 128
  %cmp.i = icmp eq ptr %2, @bpf_map_offload_ops
  br i1 %cmp.i, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %call1 = tail call i32 @bpf_map_offload_update_elem(ptr noundef %map, ptr noundef %key, ptr noundef %value, i64 noundef %flags) #19
  br label %cleanup

if.else:                                          ; preds = %entry
  %map_type = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 3
  %3 = ptrtoint ptr %map_type to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %map_type, align 4
  %5 = zext i32 %4 to i64
  call void @__sanitizer_cov_trace_switch(i64 %5, ptr @__sancov_gen_cov_switch_values.64)
  switch i32 %4, label %if.end21 [
    i32 16, label %if.else.if.then4_crit_edge
    i32 26, label %if.else.if.then4_crit_edge186
    i32 18, label %if.else.if.then12_crit_edge
    i32 15, label %if.else.if.then12_crit_edge187
    i32 3, label %if.then17
  ]

if.else.if.then12_crit_edge187:                   ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then12

if.else.if.then12_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then12

if.else.if.then4_crit_edge186:                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then4

if.else.if.then4_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then4

if.then4:                                         ; preds = %if.else.if.then4_crit_edge, %if.else.if.then4_crit_edge186
  %map_update_elem = getelementptr inbounds %struct.bpf_map_ops, ptr %2, i32 0, i32 13
  %6 = ptrtoint ptr %map_update_elem to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %map_update_elem, align 4
  %call5 = tail call i32 %7(ptr noundef %map, ptr noundef %key, ptr noundef %value, i64 noundef %flags) #19
  br label %cleanup

if.then12:                                        ; preds = %if.else.if.then12_crit_edge, %if.else.if.then12_crit_edge187
  %call13 = tail call i32 @sock_map_update_elem_sys(ptr noundef %map, ptr noundef %key, ptr noundef %value, i64 noundef %flags) #19
  br label %cleanup

if.then17:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  %call18 = tail call i32 @bpf_fd_array_map_update_elem(ptr noundef %map, ptr noundef %0, ptr noundef %key, ptr noundef %value, i64 noundef %flags) #19
  br label %cleanup

if.end21:                                         ; preds = %if.else
  tail call void @migrate_disable() #19
  %8 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #19, !srcloc !224
  %9 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %14, ptrtoint (ptr @bpf_prog_active to i32)
  %15 = inttoptr i32 %add.i to ptr
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  %add13.i = add i32 %17, 1
  store i32 %add13.i, ptr %15, align 4
  %18 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #19, !srcloc !225
  %and.i.i.i = and i32 %18, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i175 = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i175, label %if.then.i176, label %if.end21.bpf_disable_instrumentation.exit_crit_edge, !prof !219

if.end21.bpf_disable_instrumentation.exit_crit_edge: ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_disable_instrumentation.exit

if.then.i176:                                     ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @warn_bogus_irq_restore() #19
  br label %bpf_disable_instrumentation.exit

bpf_disable_instrumentation.exit:                 ; preds = %if.then.i176, %if.end21.bpf_disable_instrumentation.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %8) #19, !srcloc !226
  %19 = ptrtoint ptr %map_type to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %map_type, align 4
  %21 = zext i32 %20 to i64
  call void @__sanitizer_cov_trace_switch(i64 %21, ptr @__sancov_gen_cov_switch_values.65)
  switch i32 %20, label %if.else74 [
    i32 5, label %bpf_disable_instrumentation.exit.if.then27_crit_edge
    i32 10, label %bpf_disable_instrumentation.exit.if.then27_crit_edge188
    i32 6, label %if.then32
    i32 21, label %if.then37
    i32 4, label %bpf_disable_instrumentation.exit.if.then48_crit_edge
    i32 8, label %bpf_disable_instrumentation.exit.if.then48_crit_edge189
    i32 12, label %bpf_disable_instrumentation.exit.if.then48_crit_edge190
    i32 13, label %if.then54
    i32 20, label %if.then60
    i32 22, label %bpf_disable_instrumentation.exit.if.then71_crit_edge
    i32 23, label %bpf_disable_instrumentation.exit.if.then71_crit_edge191
    i32 30, label %bpf_disable_instrumentation.exit.if.then71_crit_edge192
  ]

bpf_disable_instrumentation.exit.if.then71_crit_edge192: ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then71

bpf_disable_instrumentation.exit.if.then71_crit_edge191: ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then71

bpf_disable_instrumentation.exit.if.then71_crit_edge: ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then71

bpf_disable_instrumentation.exit.if.then48_crit_edge190: ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then48

bpf_disable_instrumentation.exit.if.then48_crit_edge189: ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then48

bpf_disable_instrumentation.exit.if.then48_crit_edge: ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then48

bpf_disable_instrumentation.exit.if.then27_crit_edge188: ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then27

bpf_disable_instrumentation.exit.if.then27_crit_edge: ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then27

if.then27:                                        ; preds = %bpf_disable_instrumentation.exit.if.then27_crit_edge, %bpf_disable_instrumentation.exit.if.then27_crit_edge188
  %call28 = tail call i32 @bpf_percpu_hash_update(ptr noundef %map, ptr noundef %key, ptr noundef %value, i64 noundef %flags) #19
  br label %if.end84

if.then32:                                        ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  %call33 = tail call i32 @bpf_percpu_array_update(ptr noundef %map, ptr noundef %key, ptr noundef %value, i64 noundef %flags) #19
  br label %if.end84

if.then37:                                        ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  %call38 = tail call i32 @bpf_percpu_cgroup_storage_update(ptr noundef %map, ptr noundef %key, ptr noundef %value, i64 noundef %flags) #19
  br label %if.end84

if.then48:                                        ; preds = %bpf_disable_instrumentation.exit.if.then48_crit_edge, %bpf_disable_instrumentation.exit.if.then48_crit_edge189, %bpf_disable_instrumentation.exit.if.then48_crit_edge190
  %22 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %25, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !238
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #19
  %call.i = tail call zeroext i1 @rcu_is_watching() #19
  br i1 %call.i, label %if.then48.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.then48.rcu_read_lock.exit_crit_edge:           ; preds = %if.then48
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.then48
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.20, i32 noundef 696, ptr noundef nonnull @.str.21) #19
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.then48.rcu_read_lock.exit_crit_edge
  %call50 = tail call i32 @bpf_fd_array_map_update_elem(ptr noundef %map, ptr noundef %0, ptr noundef %key, ptr noundef %value, i64 noundef %flags) #19
  tail call fastcc void @rcu_read_unlock()
  br label %if.end84

if.then54:                                        ; preds = %bpf_disable_instrumentation.exit
  %26 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i153 = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i.i153 to ptr
  %preempt_count.i.i.i.i154 = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i.i154 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i.i154, align 4
  %add.i.i.i155 = add i32 %29, 1
  store volatile i32 %add.i.i.i155, ptr %preempt_count.i.i.i.i154, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !238
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #19
  %call.i156 = tail call zeroext i1 @rcu_is_watching() #19
  br i1 %call.i156, label %if.then54.rcu_read_lock.exit163_crit_edge, label %land.lhs.true.i159

if.then54.rcu_read_lock.exit163_crit_edge:        ; preds = %if.then54
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit163

land.lhs.true.i159:                               ; preds = %if.then54
  %call1.i157 = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i157)
  %tobool.not.i158 = icmp eq i32 %call1.i157, 0
  br i1 %tobool.not.i158, label %land.lhs.true.i159.rcu_read_lock.exit163_crit_edge, label %land.lhs.true2.i161

land.lhs.true.i159.rcu_read_lock.exit163_crit_edge: ; preds = %land.lhs.true.i159
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit163

land.lhs.true2.i161:                              ; preds = %land.lhs.true.i159
  %.b4.i160 = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i160, label %land.lhs.true2.i161.rcu_read_lock.exit163_crit_edge, label %if.then.i162

land.lhs.true2.i161.rcu_read_lock.exit163_crit_edge: ; preds = %land.lhs.true2.i161
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit163

if.then.i162:                                     ; preds = %land.lhs.true2.i161
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.20, i32 noundef 696, ptr noundef nonnull @.str.21) #19
  br label %rcu_read_lock.exit163

rcu_read_lock.exit163:                            ; preds = %if.then.i162, %land.lhs.true2.i161.rcu_read_lock.exit163_crit_edge, %land.lhs.true.i159.rcu_read_lock.exit163_crit_edge, %if.then54.rcu_read_lock.exit163_crit_edge
  %call56 = tail call i32 @bpf_fd_htab_map_update_elem(ptr noundef %map, ptr noundef %0, ptr noundef %key, ptr noundef %value, i64 noundef %flags) #19
  tail call fastcc void @rcu_read_unlock()
  br label %if.end84

if.then60:                                        ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  %call61 = tail call i32 @bpf_fd_reuseport_array_update_elem(ptr noundef %map, ptr noundef %key, ptr noundef %value, i64 noundef %flags) #19
  br label %if.end84

if.then71:                                        ; preds = %bpf_disable_instrumentation.exit.if.then71_crit_edge, %bpf_disable_instrumentation.exit.if.then71_crit_edge191, %bpf_disable_instrumentation.exit.if.then71_crit_edge192
  %30 = ptrtoint ptr %map to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %map, align 128
  %map_push_elem = getelementptr inbounds %struct.bpf_map_ops, ptr %31, i32 0, i32 15
  %32 = ptrtoint ptr %map_push_elem to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %map_push_elem, align 4
  %call73 = tail call i32 %33(ptr noundef %map, ptr noundef %value, i64 noundef %flags) #19
  br label %if.end84

if.else74:                                        ; preds = %bpf_disable_instrumentation.exit
  %34 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i164 = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i.i.i164 to ptr
  %preempt_count.i.i.i.i165 = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %preempt_count.i.i.i.i165 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %preempt_count.i.i.i.i165, align 4
  %add.i.i.i166 = add i32 %37, 1
  store volatile i32 %add.i.i.i166, ptr %preempt_count.i.i.i.i165, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !238
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #19
  %call.i167 = tail call zeroext i1 @rcu_is_watching() #19
  br i1 %call.i167, label %if.else74.rcu_read_lock.exit174_crit_edge, label %land.lhs.true.i170

if.else74.rcu_read_lock.exit174_crit_edge:        ; preds = %if.else74
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit174

land.lhs.true.i170:                               ; preds = %if.else74
  %call1.i168 = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i168)
  %tobool.not.i169 = icmp eq i32 %call1.i168, 0
  br i1 %tobool.not.i169, label %land.lhs.true.i170.rcu_read_lock.exit174_crit_edge, label %land.lhs.true2.i172

land.lhs.true.i170.rcu_read_lock.exit174_crit_edge: ; preds = %land.lhs.true.i170
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit174

land.lhs.true2.i172:                              ; preds = %land.lhs.true.i170
  %.b4.i171 = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i171, label %land.lhs.true2.i172.rcu_read_lock.exit174_crit_edge, label %if.then.i173

land.lhs.true2.i172.rcu_read_lock.exit174_crit_edge: ; preds = %land.lhs.true2.i172
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit174

if.then.i173:                                     ; preds = %land.lhs.true2.i172
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.20, i32 noundef 696, ptr noundef nonnull @.str.21) #19
  br label %rcu_read_lock.exit174

rcu_read_lock.exit174:                            ; preds = %if.then.i173, %land.lhs.true2.i172.rcu_read_lock.exit174_crit_edge, %land.lhs.true.i170.rcu_read_lock.exit174_crit_edge, %if.else74.rcu_read_lock.exit174_crit_edge
  %38 = ptrtoint ptr %map to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %map, align 128
  %map_update_elem76 = getelementptr inbounds %struct.bpf_map_ops, ptr %39, i32 0, i32 13
  %40 = ptrtoint ptr %map_update_elem76 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %map_update_elem76, align 4
  %call77 = tail call i32 %41(ptr noundef %map, ptr noundef %key, ptr noundef %value, i64 noundef %flags) #19
  tail call fastcc void @rcu_read_unlock()
  br label %if.end84

if.end84:                                         ; preds = %rcu_read_lock.exit174, %if.then71, %if.then60, %rcu_read_lock.exit163, %rcu_read_lock.exit, %if.then37, %if.then32, %if.then27
  %err.0 = phi i32 [ %call28, %if.then27 ], [ %call33, %if.then32 ], [ %call38, %if.then37 ], [ %call50, %rcu_read_lock.exit ], [ %call56, %rcu_read_lock.exit163 ], [ %call61, %if.then60 ], [ %call73, %if.then71 ], [ %call77, %rcu_read_lock.exit174 ]
  %42 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #19, !srcloc !224
  %43 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i177 = and i32 %43, -16384
  %44 = inttoptr i32 %and.i.i177 to ptr
  %cpu.i178 = getelementptr inbounds %struct.thread_info, ptr %44, i32 0, i32 3
  %45 = ptrtoint ptr %cpu.i178 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %cpu.i178, align 4
  %arrayidx.i179 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %46
  %47 = ptrtoint ptr %arrayidx.i179 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %arrayidx.i179, align 4
  %add.i180 = add i32 %48, ptrtoint (ptr @bpf_prog_active to i32)
  %49 = inttoptr i32 %add.i180 to ptr
  %50 = ptrtoint ptr %49 to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %49, align 4
  %add13.i181 = add i32 %51, -1
  store i32 %add13.i181, ptr %49, align 4
  %52 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #19, !srcloc !225
  %and.i.i.i182 = and i32 %52, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i182)
  %tobool.not.i183 = icmp eq i32 %and.i.i.i182, 0
  br i1 %tobool.not.i183, label %if.then.i184, label %if.end84.bpf_enable_instrumentation.exit_crit_edge, !prof !219

if.end84.bpf_enable_instrumentation.exit_crit_edge: ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_enable_instrumentation.exit

if.then.i184:                                     ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @warn_bogus_irq_restore() #19
  br label %bpf_enable_instrumentation.exit

bpf_enable_instrumentation.exit:                  ; preds = %if.then.i184, %if.end84.bpf_enable_instrumentation.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %42) #19, !srcloc !226
  tail call void @migrate_enable() #19
  %53 = ptrtoint ptr %map_type to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %map_type, align 4
  %55 = and i32 %54, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %55)
  %switch.i = icmp eq i32 %55, 12
  br i1 %switch.i, label %if.then.i185, label %bpf_enable_instrumentation.exit.cleanup_crit_edge

bpf_enable_instrumentation.exit.cleanup_crit_edge: ; preds = %bpf_enable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then.i185:                                     ; preds = %bpf_enable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @synchronize_rcu() #19
  br label %cleanup

cleanup:                                          ; preds = %if.then.i185, %bpf_enable_instrumentation.exit.cleanup_crit_edge, %if.then17, %if.then12, %if.then4, %if.then
  %retval.0 = phi i32 [ %call1, %if.then ], [ %call5, %if.then4 ], [ %call13, %if.then12 ], [ %call18, %if.then17 ], [ %err.0, %bpf_enable_instrumentation.exit.cleanup_crit_edge ], [ %err.0, %if.then.i185 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @generic_map_lookup_batch(ptr noundef %map, ptr nocapture noundef readonly %attr, ptr noundef %uattr) local_unnamed_addr #0 align 64 {
entry:
  %cp = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %out_batch = getelementptr inbounds %struct.anon.2, ptr %attr, i32 0, i32 1
  %0 = ptrtoint ptr %out_batch to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %out_batch, align 8
  %conv2 = trunc i64 %1 to i32
  %2 = inttoptr i32 %conv2 to ptr
  %3 = ptrtoint ptr %attr to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %attr, align 8
  %conv9 = trunc i64 %4 to i32
  %5 = inttoptr i32 %conv9 to ptr
  %values16 = getelementptr inbounds %struct.anon.2, ptr %attr, i32 0, i32 3
  %6 = ptrtoint ptr %values16 to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %values16, align 8
  %conv17 = trunc i64 %7 to i32
  %8 = inttoptr i32 %conv17 to ptr
  %keys24 = getelementptr inbounds %struct.anon.2, ptr %attr, i32 0, i32 2
  %9 = ptrtoint ptr %keys24 to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %keys24, align 8
  %conv25 = trunc i64 %10 to i32
  %11 = inttoptr i32 %conv25 to ptr
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cp) #19
  %12 = ptrtoint ptr %cp to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 -1, ptr %cp, align 4, !annotation !244
  %elem_flags = getelementptr inbounds %struct.anon.2, ptr %attr, i32 0, i32 6
  %13 = ptrtoint ptr %elem_flags to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %elem_flags, align 8
  %and = and i64 %14, -5
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %and27 = and i64 %14, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and27)
  %tobool28.not = icmp eq i64 %and27, 0
  br i1 %tobool28.not, label %if.end.if.end30_crit_edge, label %land.lhs.true

if.end.if.end30_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end30

land.lhs.true:                                    ; preds = %if.end
  %spin_lock_off.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 9
  %15 = ptrtoint ptr %spin_lock_off.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %spin_lock_off.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %16)
  %cmp.i = icmp sgt i32 %16, -1
  br i1 %cmp.i, label %land.lhs.true.if.end30_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

land.lhs.true.if.end30_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end30

if.end30:                                         ; preds = %land.lhs.true.if.end30_crit_edge, %if.end.if.end30_crit_edge
  %map_type.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 3
  %17 = ptrtoint ptr %map_type.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %map_type.i, align 4
  %19 = zext i32 %18 to i64
  call void @__sanitizer_cov_trace_switch(i64 %19, ptr @__sancov_gen_cov_switch_values.66)
  switch i32 %18, label %if.else24.i [
    i32 5, label %if.end30.if.then.i258_crit_edge
    i32 10, label %if.end30.if.then.i258_crit_edge438
    i32 6, label %if.end30.if.then.i258_crit_edge439
    i32 21, label %if.end30.if.then.i258_crit_edge440
    i32 4, label %if.end30.bpf_map_value_size.exit_crit_edge
    i32 8, label %if.end30.bpf_map_value_size.exit_crit_edge441
    i32 12, label %if.end30.bpf_map_value_size.exit_crit_edge442
    i32 3, label %if.end30.bpf_map_value_size.exit_crit_edge443
    i32 13, label %if.end30.bpf_map_value_size.exit_crit_edge444
  ]

if.end30.bpf_map_value_size.exit_crit_edge444:    ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_value_size.exit

if.end30.bpf_map_value_size.exit_crit_edge443:    ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_value_size.exit

if.end30.bpf_map_value_size.exit_crit_edge442:    ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_value_size.exit

if.end30.bpf_map_value_size.exit_crit_edge441:    ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_value_size.exit

if.end30.bpf_map_value_size.exit_crit_edge:       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_value_size.exit

if.end30.if.then.i258_crit_edge440:               ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i258

if.end30.if.then.i258_crit_edge439:               ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i258

if.end30.if.then.i258_crit_edge438:               ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i258

if.end30.if.then.i258_crit_edge:                  ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i258

if.then.i258:                                     ; preds = %if.end30.if.then.i258_crit_edge, %if.end30.if.then.i258_crit_edge438, %if.end30.if.then.i258_crit_edge439, %if.end30.if.then.i258_crit_edge440
  %value_size.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 5
  %20 = ptrtoint ptr %value_size.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %value_size.i, align 4
  %sub.i = add i32 %21, -1
  %or.i257 = or i32 %sub.i, 7
  %add.i = add i32 %or.i257, 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %22 = load i32, ptr @nr_cpu_ids, align 4
  %call4.i.i.i = tail call i32 @__bitmap_weight(ptr noundef nonnull @__cpu_possible_mask, i32 noundef %22) #19
  %mul.i = mul i32 %call4.i.i.i, %add.i
  br label %bpf_map_value_size.exit

if.else24.i:                                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #21
  %value_size25.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 5
  %23 = ptrtoint ptr %value_size25.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %value_size25.i, align 4
  br label %bpf_map_value_size.exit

bpf_map_value_size.exit:                          ; preds = %if.else24.i, %if.then.i258, %if.end30.bpf_map_value_size.exit_crit_edge, %if.end30.bpf_map_value_size.exit_crit_edge441, %if.end30.bpf_map_value_size.exit_crit_edge442, %if.end30.bpf_map_value_size.exit_crit_edge443, %if.end30.bpf_map_value_size.exit_crit_edge444
  %retval.0.i = phi i32 [ %mul.i, %if.then.i258 ], [ %24, %if.else24.i ], [ 4, %if.end30.bpf_map_value_size.exit_crit_edge ], [ 4, %if.end30.bpf_map_value_size.exit_crit_edge441 ], [ 4, %if.end30.bpf_map_value_size.exit_crit_edge442 ], [ 4, %if.end30.bpf_map_value_size.exit_crit_edge443 ], [ 4, %if.end30.bpf_map_value_size.exit_crit_edge444 ]
  %count = getelementptr inbounds %struct.anon.2, ptr %attr, i32 0, i32 4
  %25 = ptrtoint ptr %count to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %count, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool32.not = icmp eq i32 %26, 0
  br i1 %tobool32.not, label %bpf_map_value_size.exit.cleanup_crit_edge, label %if.end34

bpf_map_value_size.exit.cleanup_crit_edge:        ; preds = %bpf_map_value_size.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end34:                                         ; preds = %bpf_map_value_size.exit
  %count35 = getelementptr inbounds %struct.anon.2, ptr %uattr, i32 0, i32 4
  tail call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 1455) #19
  %27 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 4
  %29 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #10, !srcloc !235
  %and.i = and i32 %29, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %30 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %count35, i32 0, i32 -1226833921) #19, !srcloc !245
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %29) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool39.not = icmp eq i32 %30, 0
  br i1 %tobool39.not, label %if.end41, label %if.end34.cleanup_crit_edge

if.end34.cleanup_crit_edge:                       ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end41:                                         ; preds = %if.end34
  %key_size = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 4
  %31 = ptrtoint ptr %key_size to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %key_size, align 16
  %call.i262 = tail call noalias ptr @kvmalloc_node(i32 noundef %32, i32 noundef 1060032, i32 noundef -1) #22
  %tobool43.not = icmp eq ptr %call.i262, null
  br i1 %tobool43.not, label %if.end41.cleanup_crit_edge, label %if.end45

if.end41.cleanup_crit_edge:                       ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end45:                                         ; preds = %if.end41
  %33 = ptrtoint ptr %key_size to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %key_size, align 16
  %add = add i32 %34, %retval.0.i
  %call.i263 = tail call noalias ptr @kvmalloc_node(i32 noundef %add, i32 noundef 1060032, i32 noundef -1) #22
  %tobool48.not = icmp eq ptr %call.i263, null
  br i1 %tobool48.not, label %if.then49, label %if.end50

if.then49:                                        ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @kvfree(ptr noundef nonnull %call.i262) #19
  br label %cleanup

if.end50:                                         ; preds = %if.end45
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv9)
  %tobool51.not = icmp eq i32 %conv9, 0
  br i1 %tobool51.not, label %if.end50.for.body.lr.ph_crit_edge, label %land.lhs.true52

if.end50.for.body.lr.ph_crit_edge:                ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.body.lr.ph

land.lhs.true52:                                  ; preds = %if.end50
  %35 = ptrtoint ptr %key_size to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %key_size, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %cmp9.i.i = icmp slt i32 %36, 0
  br i1 %cmp9.i.i, label %land.rhs16.i.i, label %if.then.i.i.i

land.rhs16.i.i:                                   ; preds = %land.lhs.true52
  %.b71.i.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i, label %land.rhs16.i.i.free_buf_crit_edge, label %if.then27.i.i, !prof !220

land.rhs16.i.i.free_buf_crit_edge:                ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_buf

if.then27.i.i:                                    ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %free_buf

if.then.i.i.i:                                    ; preds = %land.lhs.true52
  tail call void @__check_object_size(ptr noundef nonnull %call.i262, i32 noundef %36, i1 noundef zeroext false) #19
  tail call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 156) #19
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i, label %if.then.i.i.i.if.end.i.i_crit_edge, label %land.lhs.true.i.i

if.then.i.i.i.if.end.i.i_crit_edge:               ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i.i

land.lhs.true.i.i:                                ; preds = %if.then.i.i.i
  %37 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %5, i32 %36, i32 -1226833920) #23, !srcloc !234
  %asmresult.i.i = extractvalue { i32, i32 } %37, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.then.i7.i, label %land.lhs.true.i.i.if.end.i.i_crit_edge, !prof !220

land.lhs.true.i.i.if.end.i.i_crit_edge:           ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i.i

if.then.i7.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call.i262, i32 noundef %36) #19
  %38 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i.i = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 4
  %40 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #10, !srcloc !235
  %and.i.i.i.i = and i32 %40, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %call1.i.i.i = tail call i32 @arm_copy_from_user(ptr noundef nonnull %call.i262, ptr noundef nonnull %5, i32 noundef %36) #19
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %40) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i7.i, %land.lhs.true.i.i.if.end.i.i_crit_edge, %if.then.i.i.i.if.end.i.i_crit_edge
  %res.0.i.i = phi i32 [ %36, %if.then.i.i.i.if.end.i.i_crit_edge ], [ %call1.i.i.i, %if.then.i7.i ], [ %36, %land.lhs.true.i.i.if.end.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %res.0.i.i)
  %tobool4.not.i.i = icmp eq i32 %res.0.i.i, 0
  br i1 %tobool4.not.i.i, label %if.end.i.i.for.body.lr.ph_crit_edge, label %if.then11.i.i, !prof !220

if.end.i.i.for.body.lr.ph_crit_edge:              ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.body.lr.ph

if.then11.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %sub.i.i = sub i32 %36, %res.0.i.i
  %add.ptr.i.i = getelementptr i8, ptr %call.i262, i32 %sub.i.i
  %41 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i)
  br label %free_buf

for.body.lr.ph:                                   ; preds = %if.end.i.i.for.body.lr.ph_crit_edge, %if.end50.for.body.lr.ph_crit_edge
  %spec.select = phi ptr [ %call.i262, %if.end.i.i.for.body.lr.ph_crit_edge ], [ null, %if.end50.for.body.lr.ph_crit_edge ]
  %42 = ptrtoint ptr %key_size to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %key_size, align 16
  %add.ptr = getelementptr i8, ptr %call.i263, i32 %43
  %44 = ptrtoint ptr %cp to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 0, ptr %cp, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %cmp9.i.i201 = icmp slt i32 %retval.0.i, 0
  br label %for.body

for.body:                                         ; preds = %for.cond.backedge.for.body_crit_edge, %for.body.lr.ph
  %prev_key.1316 = phi ptr [ %spec.select, %for.body.lr.ph ], [ %prev_key.1.be, %for.cond.backedge.for.body_crit_edge ]
  %key.0315 = phi ptr [ %call.i263, %for.body.lr.ph ], [ %key.0.be, %for.cond.backedge.for.body_crit_edge ]
  %retry.0314 = phi i32 [ 3, %for.body.lr.ph ], [ %retry.0.be, %for.cond.backedge.for.body_crit_edge ]
  %inc305313 = phi i32 [ 0, %for.body.lr.ph ], [ %inc304, %for.cond.backedge.for.body_crit_edge ]
  %45 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i = and i32 %45, -16384
  %46 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %46, i32 0, i32 1
  %47 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %48, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !238
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #19
  %call.i = tail call zeroext i1 @rcu_is_watching() #19
  br i1 %call.i, label %for.body.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

for.body.rcu_read_lock.exit_crit_edge:            ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %for.body
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i174

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

if.then.i174:                                     ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.20, i32 noundef 696, ptr noundef nonnull @.str.21) #19
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i174, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %for.body.rcu_read_lock.exit_crit_edge
  %49 = ptrtoint ptr %map to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %map, align 128
  %map_get_next_key = getelementptr inbounds %struct.bpf_map_ops, ptr %50, i32 0, i32 4
  %51 = ptrtoint ptr %map_get_next_key to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %map_get_next_key, align 4
  %call64 = tail call i32 %52(ptr noundef %map, ptr noundef %prev_key.1316, ptr noundef %key.0315) #19
  %call.i264 = tail call zeroext i1 @rcu_is_watching() #19
  br i1 %call.i264, label %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i267

rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_unlock.exit

land.lhs.true.i267:                               ; preds = %rcu_read_lock.exit
  %call1.i265 = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i265)
  %tobool.not.i266 = icmp eq i32 %call1.i265, 0
  br i1 %tobool.not.i266, label %land.lhs.true.i267.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i269

land.lhs.true.i267.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i267
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_unlock.exit

land.lhs.true2.i269:                              ; preds = %land.lhs.true.i267
  %.b4.i268 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i268, label %land.lhs.true2.i269.rcu_read_unlock.exit_crit_edge, label %if.then.i270

land.lhs.true2.i269.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i269
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_unlock.exit

if.then.i270:                                     ; preds = %land.lhs.true2.i269
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.20, i32 noundef 724, ptr noundef nonnull @.str.22) #19
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i270, %land.lhs.true2.i269.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i267.rcu_read_unlock.exit_crit_edge, %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !239
  %53 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i271 = and i32 %53, -16384
  %54 = inttoptr i32 %and.i.i.i.i.i271 to ptr
  %preempt_count.i.i.i.i272 = getelementptr inbounds %struct.thread_info, ptr %54, i32 0, i32 1
  %55 = ptrtoint ptr %preempt_count.i.i.i.i272 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load volatile i32, ptr %preempt_count.i.i.i.i272, align 4
  %sub.i.i.i273 = add i32 %56, -1
  store volatile i32 %sub.i.i.i273, ptr %preempt_count.i.i.i.i272, align 4
  tail call void @rcu_read_unlock_strict() #19
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call64)
  %tobool65.not = icmp eq i32 %call64, 0
  br i1 %tobool65.not, label %if.end67, label %for.end

if.end67:                                         ; preds = %rcu_read_unlock.exit
  %57 = ptrtoint ptr %elem_flags to i32
  call void @__asan_load8_noabort(i32 %57)
  %58 = load i64, ptr %elem_flags, align 8
  %call69 = tail call fastcc i32 @bpf_map_copy_value(ptr noundef %map, ptr noundef %key.0315, ptr noundef %add.ptr, i64 noundef %58)
  %59 = zext i32 %call69 to i64
  call void @__sanitizer_cov_trace_switch(i64 %59, ptr @__sancov_gen_cov_switch_values.67)
  switch i32 %call69, label %if.end67.free_buf.loopexit_crit_edge [
    i32 -2, label %if.then72
    i32 0, label %if.end79
  ]

if.end67.free_buf.loopexit_crit_edge:             ; preds = %if.end67
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_buf.loopexit

if.then72:                                        ; preds = %if.end67
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retry.0314)
  %tobool73.not = icmp eq i32 %retry.0314, 0
  br i1 %tobool73.not, label %if.end8.i.i222.loopexit, label %if.then74

if.then74:                                        ; preds = %if.then72
  call void @__sanitizer_cov_trace_pc() #21
  %dec = add i32 %retry.0314, -1
  br label %for.cond.backedge

for.cond.backedge:                                ; preds = %if.end92, %if.then74
  %inc304 = phi i32 [ %inc305313, %if.then74 ], [ %inc, %if.end92 ]
  %retry.0.be = phi i32 [ %dec, %if.then74 ], [ 3, %if.end92 ]
  %key.0.be = phi ptr [ %key.0315, %if.then74 ], [ %spec.select173, %if.end92 ]
  %prev_key.1.be = phi ptr [ %prev_key.1316, %if.then74 ], [ %key.0315, %if.end92 ]
  %cmp62 = icmp ult i32 %inc304, %26
  br i1 %cmp62, label %for.cond.backedge.for.body_crit_edge, label %for.end.thread

for.cond.backedge.for.body_crit_edge:             ; preds = %for.cond.backedge
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.body

for.end.thread:                                   ; preds = %for.cond.backedge
  call void @__sanitizer_cov_trace_pc() #21
  %60 = ptrtoint ptr %cp to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %inc304, ptr %cp, align 4
  br label %if.end8.i.i222

if.end79:                                         ; preds = %if.end67
  %61 = ptrtoint ptr %key_size to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %key_size, align 16
  %mul = mul i32 %62, %inc305313
  %add.ptr81 = getelementptr i8, ptr %11, i32 %mul
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %cmp9.i.i181 = icmp slt i32 %62, 0
  br i1 %cmp9.i.i181, label %land.rhs16.i.i184, label %if.then.i.i.i187

land.rhs16.i.i184:                                ; preds = %if.end79
  %63 = ptrtoint ptr %cp to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 %inc305313, ptr %cp, align 4
  %.b71.i.i183 = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i183, label %land.rhs16.i.i184.free_buf_crit_edge, label %if.then27.i.i185, !prof !220

land.rhs16.i.i184.free_buf_crit_edge:             ; preds = %land.rhs16.i.i184
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_buf

if.then27.i.i185:                                 ; preds = %land.rhs16.i.i184
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %free_buf

if.then.i.i.i187:                                 ; preds = %if.end79
  tail call void @__check_object_size(ptr noundef %key.0315, i32 noundef %62, i1 noundef zeroext true) #19
  tail call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i188 = tail call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i188, label %if.then.i.i.i187.copy_to_user.exit_crit_edge, label %if.end.i.i192

if.then.i.i.i187.copy_to_user.exit_crit_edge:     ; preds = %if.then.i.i.i187
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit

if.end.i.i192:                                    ; preds = %if.then.i.i.i187
  %64 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %add.ptr81, i32 %62, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i190 = extractvalue { i32, i32 } %64, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i190)
  %cmp.i6.i191 = icmp eq i32 %asmresult.i.i190, 0
  br i1 %cmp.i6.i191, label %if.then2.i.i, label %if.end.i.i192.copy_to_user.exit_crit_edge

if.end.i.i192.copy_to_user.exit_crit_edge:        ; preds = %if.end.i.i192
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit

if.then2.i.i:                                     ; preds = %if.end.i.i192
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i193 = tail call zeroext i1 @__kasan_check_read(ptr noundef %key.0315, i32 noundef %62) #19
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %add.ptr81, ptr noundef %key.0315, i32 noundef %62) #19
  br label %copy_to_user.exit

copy_to_user.exit:                                ; preds = %if.then2.i.i, %if.end.i.i192.copy_to_user.exit_crit_edge, %if.then.i.i.i187.copy_to_user.exit_crit_edge
  %n.addr.0.i194 = phi i32 [ %62, %if.then.i.i.i187.copy_to_user.exit_crit_edge ], [ %call.i12.i.i, %if.then2.i.i ], [ %62, %if.end.i.i192.copy_to_user.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i194)
  %tobool84.not = icmp eq i32 %n.addr.0.i194, 0
  br i1 %tobool84.not, label %if.end86, label %copy_to_user.exit.free_buf.loopexit_crit_edge

copy_to_user.exit.free_buf.loopexit_crit_edge:    ; preds = %copy_to_user.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_buf.loopexit

if.end86:                                         ; preds = %copy_to_user.exit
  %mul87 = mul i32 %inc305313, %retval.0.i
  %add.ptr88 = getelementptr i8, ptr %8, i32 %mul87
  br i1 %cmp9.i.i201, label %land.rhs16.i.i204, label %if.then.i.i.i207

land.rhs16.i.i204:                                ; preds = %if.end86
  %65 = ptrtoint ptr %cp to i32
  call void @__asan_store4_noabort(i32 %65)
  store i32 %inc305313, ptr %cp, align 4
  %.b71.i.i203 = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i203, label %land.rhs16.i.i204.free_buf_crit_edge, label %if.then27.i.i205, !prof !220

land.rhs16.i.i204.free_buf_crit_edge:             ; preds = %land.rhs16.i.i204
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_buf

if.then27.i.i205:                                 ; preds = %land.rhs16.i.i204
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %free_buf

if.then.i.i.i207:                                 ; preds = %if.end86
  tail call void @__check_object_size(ptr noundef %add.ptr, i32 noundef %retval.0.i, i1 noundef zeroext true) #19
  tail call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i208 = tail call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i208, label %if.then.i.i.i207.copy_to_user.exit217_crit_edge, label %if.end.i.i212

if.then.i.i.i207.copy_to_user.exit217_crit_edge:  ; preds = %if.then.i.i.i207
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit217

if.end.i.i212:                                    ; preds = %if.then.i.i.i207
  %66 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %add.ptr88, i32 %retval.0.i, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i210 = extractvalue { i32, i32 } %66, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i210)
  %cmp.i6.i211 = icmp eq i32 %asmresult.i.i210, 0
  br i1 %cmp.i6.i211, label %if.then2.i.i215, label %if.end.i.i212.copy_to_user.exit217_crit_edge

if.end.i.i212.copy_to_user.exit217_crit_edge:     ; preds = %if.end.i.i212
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit217

if.then2.i.i215:                                  ; preds = %if.end.i.i212
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i213 = tail call zeroext i1 @__kasan_check_read(ptr noundef %add.ptr, i32 noundef %retval.0.i) #19
  %call.i12.i.i214 = tail call i32 @arm_copy_to_user(ptr noundef %add.ptr88, ptr noundef %add.ptr, i32 noundef %retval.0.i) #19
  br label %copy_to_user.exit217

copy_to_user.exit217:                             ; preds = %if.then2.i.i215, %if.end.i.i212.copy_to_user.exit217_crit_edge, %if.then.i.i.i207.copy_to_user.exit217_crit_edge
  %n.addr.0.i216 = phi i32 [ %retval.0.i, %if.then.i.i.i207.copy_to_user.exit217_crit_edge ], [ %call.i12.i.i214, %if.then2.i.i215 ], [ %retval.0.i, %if.end.i.i212.copy_to_user.exit217_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i216)
  %tobool90.not = icmp eq i32 %n.addr.0.i216, 0
  br i1 %tobool90.not, label %if.end92, label %copy_to_user.exit217.free_buf.loopexit_crit_edge

copy_to_user.exit217.free_buf.loopexit_crit_edge: ; preds = %copy_to_user.exit217
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_buf.loopexit

if.end92:                                         ; preds = %copy_to_user.exit217
  call void @__sanitizer_cov_trace_pc() #21
  %tobool93.not = icmp eq ptr %prev_key.1316, null
  %spec.select173 = select i1 %tobool93.not, ptr %call.i262, ptr %prev_key.1316
  %inc = add nuw i32 %inc305313, 1
  tail call void @__might_resched(ptr noundef nonnull @.str.1, i32 noundef 1514, i32 noundef 0) #19
  %call.i274 = tail call i32 @__cond_resched() #19
  br label %for.cond.backedge

for.end:                                          ; preds = %rcu_read_unlock.exit
  %67 = ptrtoint ptr %cp to i32
  call void @__asan_store4_noabort(i32 %67)
  store i32 %inc305313, ptr %cp, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -14, i32 %call64)
  %cmp101 = icmp eq i32 %call64, -14
  br i1 %cmp101, label %for.end.free_buf_crit_edge, label %for.end.if.end8.i.i222_crit_edge

for.end.if.end8.i.i222_crit_edge:                 ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end8.i.i222

for.end.free_buf_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_buf

if.end8.i.i222.loopexit:                          ; preds = %if.then72
  call void @__sanitizer_cov_trace_pc() #21
  %68 = ptrtoint ptr %cp to i32
  call void @__asan_store4_noabort(i32 %68)
  store i32 %inc305313, ptr %cp, align 4
  br label %if.end8.i.i222

if.end8.i.i222:                                   ; preds = %if.end8.i.i222.loopexit, %for.end.if.end8.i.i222_crit_edge, %for.end.thread
  %prev_key.1303 = phi ptr [ %prev_key.1316, %for.end.if.end8.i.i222_crit_edge ], [ %prev_key.1316, %if.end8.i.i222.loopexit ], [ %prev_key.1.be, %for.end.thread ]
  %err.1283 = phi i32 [ %call64, %for.end.if.end8.i.i222_crit_edge ], [ -4, %if.end8.i.i222.loopexit ], [ %call69, %for.end.thread ]
  tail call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i224 = tail call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i224, label %if.end8.i.i222.if.then113_crit_edge, label %if.end.i.i228

if.end8.i.i222.if.then113_crit_edge:              ; preds = %if.end8.i.i222
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then113

if.end.i.i228:                                    ; preds = %if.end8.i.i222
  %69 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %count35, i32 4, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i226 = extractvalue { i32, i32 } %69, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i226)
  %cmp.i6.i227 = icmp eq i32 %asmresult.i.i226, 0
  br i1 %cmp.i6.i227, label %copy_to_user.exit233, label %if.end.i.i228.if.then113_crit_edge

if.end.i.i228.if.then113_crit_edge:               ; preds = %if.end.i.i228
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then113

copy_to_user.exit233:                             ; preds = %if.end.i.i228
  %call.i.i.i229 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %cp, i32 noundef 4) #19
  %call.i12.i.i230 = call i32 @arm_copy_to_user(ptr noundef %count35, ptr noundef nonnull %cp, i32 noundef 4) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i230)
  %tobool107.not = icmp eq i32 %call.i12.i.i230, 0
  br i1 %tobool107.not, label %lor.lhs.false, label %copy_to_user.exit233.if.then113_crit_edge

copy_to_user.exit233.if.then113_crit_edge:        ; preds = %copy_to_user.exit233
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then113

lor.lhs.false:                                    ; preds = %copy_to_user.exit233
  %70 = ptrtoint ptr %cp to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %cp, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %tobool108.not = icmp eq i32 %71, 0
  br i1 %tobool108.not, label %lor.lhs.false.free_buf_crit_edge, label %land.lhs.true109

lor.lhs.false.free_buf_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_buf

land.lhs.true109:                                 ; preds = %lor.lhs.false
  %72 = ptrtoint ptr %key_size to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load i32, ptr %key_size, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %73)
  %cmp9.i.i240 = icmp slt i32 %73, 0
  br i1 %cmp9.i.i240, label %land.rhs16.i.i243, label %if.then.i.i.i246

land.rhs16.i.i243:                                ; preds = %land.lhs.true109
  %.b71.i.i242 = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i242, label %land.rhs16.i.i243.if.then113_crit_edge, label %if.then27.i.i244, !prof !220

land.rhs16.i.i243.if.then113_crit_edge:           ; preds = %land.rhs16.i.i243
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then113

if.then27.i.i244:                                 ; preds = %land.rhs16.i.i243
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %if.then113

if.then.i.i.i246:                                 ; preds = %land.lhs.true109
  call void @__check_object_size(ptr noundef %prev_key.1303, i32 noundef %73, i1 noundef zeroext true) #19
  call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i247 = call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i247, label %if.then.i.i.i246.copy_to_user.exit256_crit_edge, label %if.end.i.i251

if.then.i.i.i246.copy_to_user.exit256_crit_edge:  ; preds = %if.then.i.i.i246
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit256

if.end.i.i251:                                    ; preds = %if.then.i.i.i246
  %74 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %2, i32 %73, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i249 = extractvalue { i32, i32 } %74, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i249)
  %cmp.i6.i250 = icmp eq i32 %asmresult.i.i249, 0
  br i1 %cmp.i6.i250, label %if.then2.i.i254, label %if.end.i.i251.copy_to_user.exit256_crit_edge

if.end.i.i251.copy_to_user.exit256_crit_edge:     ; preds = %if.end.i.i251
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit256

if.then2.i.i254:                                  ; preds = %if.end.i.i251
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i252 = call zeroext i1 @__kasan_check_read(ptr noundef %prev_key.1303, i32 noundef %73) #19
  %call.i12.i.i253 = call i32 @arm_copy_to_user(ptr noundef %2, ptr noundef %prev_key.1303, i32 noundef %73) #19
  br label %copy_to_user.exit256

copy_to_user.exit256:                             ; preds = %if.then2.i.i254, %if.end.i.i251.copy_to_user.exit256_crit_edge, %if.then.i.i.i246.copy_to_user.exit256_crit_edge
  %n.addr.0.i255 = phi i32 [ %73, %if.then.i.i.i246.copy_to_user.exit256_crit_edge ], [ %call.i12.i.i253, %if.then2.i.i254 ], [ %73, %if.end.i.i251.copy_to_user.exit256_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i255)
  %tobool112.not = icmp eq i32 %n.addr.0.i255, 0
  br i1 %tobool112.not, label %copy_to_user.exit256.free_buf_crit_edge, label %copy_to_user.exit256.if.then113_crit_edge

copy_to_user.exit256.if.then113_crit_edge:        ; preds = %copy_to_user.exit256
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then113

copy_to_user.exit256.free_buf_crit_edge:          ; preds = %copy_to_user.exit256
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_buf

if.then113:                                       ; preds = %copy_to_user.exit256.if.then113_crit_edge, %if.then27.i.i244, %land.rhs16.i.i243.if.then113_crit_edge, %copy_to_user.exit233.if.then113_crit_edge, %if.end.i.i228.if.then113_crit_edge, %if.end8.i.i222.if.then113_crit_edge
  br label %free_buf

free_buf.loopexit:                                ; preds = %copy_to_user.exit217.free_buf.loopexit_crit_edge, %copy_to_user.exit.free_buf.loopexit_crit_edge, %if.end67.free_buf.loopexit_crit_edge
  %err.2.ph = phi i32 [ -14, %copy_to_user.exit217.free_buf.loopexit_crit_edge ], [ -14, %copy_to_user.exit.free_buf.loopexit_crit_edge ], [ %call69, %if.end67.free_buf.loopexit_crit_edge ]
  %75 = ptrtoint ptr %cp to i32
  call void @__asan_store4_noabort(i32 %75)
  store i32 %inc305313, ptr %cp, align 4
  br label %free_buf

free_buf:                                         ; preds = %free_buf.loopexit, %if.then113, %copy_to_user.exit256.free_buf_crit_edge, %lor.lhs.false.free_buf_crit_edge, %for.end.free_buf_crit_edge, %if.then27.i.i205, %land.rhs16.i.i204.free_buf_crit_edge, %if.then27.i.i185, %land.rhs16.i.i184.free_buf_crit_edge, %if.then11.i.i, %if.then27.i.i, %land.rhs16.i.i.free_buf_crit_edge
  %err.2 = phi i32 [ -14, %for.end.free_buf_crit_edge ], [ -14, %if.then113 ], [ %err.1283, %copy_to_user.exit256.free_buf_crit_edge ], [ %err.1283, %lor.lhs.false.free_buf_crit_edge ], [ -14, %if.then11.i.i ], [ -14, %if.then27.i.i ], [ -14, %land.rhs16.i.i.free_buf_crit_edge ], [ -14, %if.then27.i.i185 ], [ -14, %land.rhs16.i.i184.free_buf_crit_edge ], [ -14, %if.then27.i.i205 ], [ -14, %land.rhs16.i.i204.free_buf_crit_edge ], [ %err.2.ph, %free_buf.loopexit ]
  call void @kvfree(ptr noundef nonnull %call.i262) #19
  call void @kvfree(ptr noundef nonnull %call.i263) #19
  br label %cleanup

cleanup:                                          ; preds = %free_buf, %if.then49, %if.end41.cleanup_crit_edge, %if.end34.cleanup_crit_edge, %bpf_map_value_size.exit.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %err.2, %free_buf ], [ -12, %if.then49 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %land.lhs.true.cleanup_crit_edge ], [ 0, %bpf_map_value_size.exit.cleanup_crit_edge ], [ -14, %if.end34.cleanup_crit_edge ], [ -12, %if.end41.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cp) #19
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_fault(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_map_copy_value(ptr noundef %map, ptr noundef %key, ptr noundef %value, i64 noundef %flags) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %map to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %map, align 128
  %cmp.i = icmp eq ptr %1, @bpf_map_offload_ops
  br i1 %cmp.i, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %call1 = tail call i32 @bpf_map_offload_lookup_elem(ptr noundef %map, ptr noundef %key, ptr noundef %value) #19
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @migrate_disable() #19
  %2 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #19, !srcloc !224
  %3 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %6
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %8, ptrtoint (ptr @bpf_prog_active to i32)
  %9 = inttoptr i32 %add.i to ptr
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 4
  %add13.i = add i32 %11, 1
  store i32 %add13.i, ptr %9, align 4
  %12 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #19, !srcloc !225
  %and.i.i.i = and i32 %12, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i155 = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i155, label %if.then.i156, label %if.end.bpf_disable_instrumentation.exit_crit_edge, !prof !219

if.end.bpf_disable_instrumentation.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_disable_instrumentation.exit

if.then.i156:                                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @warn_bogus_irq_restore() #19
  br label %bpf_disable_instrumentation.exit

bpf_disable_instrumentation.exit:                 ; preds = %if.then.i156, %if.end.bpf_disable_instrumentation.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %2) #19, !srcloc !226
  %map_type = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 3
  %13 = ptrtoint ptr %map_type to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %map_type, align 4
  %15 = zext i32 %14 to i64
  call void @__sanitizer_cov_trace_switch(i64 %15, ptr @__sancov_gen_cov_switch_values.68)
  switch i32 %14, label %if.else60 [
    i32 5, label %bpf_disable_instrumentation.exit.if.then4_crit_edge
    i32 10, label %bpf_disable_instrumentation.exit.if.then4_crit_edge178
    i32 6, label %if.then8
    i32 21, label %if.then13
    i32 7, label %if.then18
    i32 4, label %bpf_disable_instrumentation.exit.if.then32_crit_edge
    i32 8, label %bpf_disable_instrumentation.exit.if.then32_crit_edge179
    i32 12, label %bpf_disable_instrumentation.exit.if.then32_crit_edge180
    i32 3, label %bpf_disable_instrumentation.exit.if.then32_crit_edge181
    i32 13, label %if.then37
    i32 20, label %if.then42
    i32 22, label %bpf_disable_instrumentation.exit.if.then53_crit_edge
    i32 23, label %bpf_disable_instrumentation.exit.if.then53_crit_edge182
    i32 30, label %bpf_disable_instrumentation.exit.if.then53_crit_edge183
    i32 26, label %if.then58
  ]

bpf_disable_instrumentation.exit.if.then53_crit_edge183: ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then53

bpf_disable_instrumentation.exit.if.then53_crit_edge182: ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then53

bpf_disable_instrumentation.exit.if.then53_crit_edge: ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then53

bpf_disable_instrumentation.exit.if.then32_crit_edge181: ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then32

bpf_disable_instrumentation.exit.if.then32_crit_edge180: ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then32

bpf_disable_instrumentation.exit.if.then32_crit_edge179: ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then32

bpf_disable_instrumentation.exit.if.then32_crit_edge: ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then32

bpf_disable_instrumentation.exit.if.then4_crit_edge178: ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then4

bpf_disable_instrumentation.exit.if.then4_crit_edge: ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then4

if.then4:                                         ; preds = %bpf_disable_instrumentation.exit.if.then4_crit_edge, %bpf_disable_instrumentation.exit.if.then4_crit_edge178
  %call5 = tail call i32 @bpf_percpu_hash_copy(ptr noundef %map, ptr noundef %key, ptr noundef %value) #19
  br label %if.end91

if.then8:                                         ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  %call9 = tail call i32 @bpf_percpu_array_copy(ptr noundef %map, ptr noundef %key, ptr noundef %value) #19
  br label %if.end91

if.then13:                                        ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  %call14 = tail call i32 @bpf_percpu_cgroup_storage_copy(ptr noundef %map, ptr noundef %key, ptr noundef %value) #19
  br label %if.end91

if.then18:                                        ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  %call19 = tail call i32 @bpf_stackmap_copy(ptr noundef %map, ptr noundef %key, ptr noundef %value)
  br label %if.end91

if.then32:                                        ; preds = %bpf_disable_instrumentation.exit.if.then32_crit_edge, %bpf_disable_instrumentation.exit.if.then32_crit_edge179, %bpf_disable_instrumentation.exit.if.then32_crit_edge180, %bpf_disable_instrumentation.exit.if.then32_crit_edge181
  %call33 = tail call i32 @bpf_fd_array_map_lookup_elem(ptr noundef %map, ptr noundef %key, ptr noundef %value) #19
  br label %if.end91

if.then37:                                        ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  %call38 = tail call i32 @bpf_fd_htab_map_lookup_elem(ptr noundef %map, ptr noundef %key, ptr noundef %value) #19
  br label %if.end91

if.then42:                                        ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  %call43 = tail call i32 @bpf_fd_reuseport_array_lookup_elem(ptr noundef %map, ptr noundef %key, ptr noundef %value) #19
  br label %if.end91

if.then53:                                        ; preds = %bpf_disable_instrumentation.exit.if.then53_crit_edge, %bpf_disable_instrumentation.exit.if.then53_crit_edge182, %bpf_disable_instrumentation.exit.if.then53_crit_edge183
  %16 = ptrtoint ptr %map to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %map, align 128
  %map_peek_elem = getelementptr inbounds %struct.bpf_map_ops, ptr %17, i32 0, i32 17
  %18 = ptrtoint ptr %map_peek_elem to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %map_peek_elem, align 4
  %call54 = tail call i32 %19(ptr noundef %map, ptr noundef %value) #19
  br label %if.end91

if.then58:                                        ; preds = %bpf_disable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  %call59 = tail call i32 @bpf_struct_ops_map_sys_lookup_elem(ptr noundef %map, ptr noundef %key, ptr noundef %value) #19
  br label %if.end91

if.else60:                                        ; preds = %bpf_disable_instrumentation.exit
  %20 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %23, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !238
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #19
  %call.i = tail call zeroext i1 @rcu_is_watching() #19
  br i1 %call.i, label %if.else60.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.else60.rcu_read_lock.exit_crit_edge:           ; preds = %if.else60
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.else60
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.20, i32 noundef 696, ptr noundef nonnull @.str.21) #19
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.else60.rcu_read_lock.exit_crit_edge
  %24 = ptrtoint ptr %map to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %map, align 128
  %map_lookup_elem_sys_only = getelementptr inbounds %struct.bpf_map_ops, ptr %25, i32 0, i32 6
  %26 = ptrtoint ptr %map_lookup_elem_sys_only to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %map_lookup_elem_sys_only, align 4
  %tobool.not = icmp eq ptr %27, null
  br i1 %tobool.not, label %if.else66, label %rcu_read_lock.exit.if.end69_crit_edge

rcu_read_lock.exit.if.end69_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end69

if.else66:                                        ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #21
  %map_lookup_elem = getelementptr inbounds %struct.bpf_map_ops, ptr %25, i32 0, i32 12
  %28 = ptrtoint ptr %map_lookup_elem to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %map_lookup_elem, align 4
  br label %if.end69

if.end69:                                         ; preds = %if.else66, %rcu_read_lock.exit.if.end69_crit_edge
  %.sink = phi ptr [ %29, %if.else66 ], [ %27, %rcu_read_lock.exit.if.end69_crit_edge ]
  %call68 = tail call ptr %.sink(ptr noundef %map, ptr noundef %key) #19
  %cmp.i157 = icmp ugt ptr %call68, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i157, label %if.then71, label %if.else73

if.then71:                                        ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #21
  %30 = ptrtoint ptr %call68 to i32
  br label %if.end82

if.else73:                                        ; preds = %if.end69
  %tobool74.not = icmp eq ptr %call68, null
  br i1 %tobool74.not, label %if.else73.if.end82_crit_edge, label %if.else76

if.else73.if.end82_crit_edge:                     ; preds = %if.else73
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end82

if.else76:                                        ; preds = %if.else73
  %and = and i64 %flags, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool77.not = icmp eq i64 %and, 0
  br i1 %tobool77.not, label %if.else79, label %if.then78

if.then78:                                        ; preds = %if.else76
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @copy_map_value_locked(ptr noundef %map, ptr noundef %value, ptr noundef nonnull %call68, i1 noundef zeroext true) #19
  br label %if.end80

if.else79:                                        ; preds = %if.else76
  call void @__sanitizer_cov_trace_pc() #21
  tail call fastcc void @copy_map_value(ptr noundef %map, ptr noundef %value, ptr noundef nonnull %call68)
  br label %if.end80

if.end80:                                         ; preds = %if.else79, %if.then78
  %spin_lock_off.i.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 9
  %31 = ptrtoint ptr %spin_lock_off.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %spin_lock_off.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %32)
  %cmp.i.i = icmp sgt i32 %32, -1
  br i1 %cmp.i.i, label %if.then.i158, label %if.end80.if.end.i_crit_edge, !prof !219

if.end80.if.end.i_crit_edge:                      ; preds = %if.end80
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i

if.then.i158:                                     ; preds = %if.end80
  call void @__sanitizer_cov_trace_pc() #21
  %add.ptr.i = getelementptr i8, ptr %value, i32 %32
  %33 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_storeN_noabort(i32 %33, i32 4)
  store i32 0, ptr %add.ptr.i, align 1
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i158, %if.end80.if.end.i_crit_edge
  %timer_off.i.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 10
  %34 = ptrtoint ptr %timer_off.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %timer_off.i.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %35)
  %cmp.i16.i = icmp sgt i32 %35, -1
  br i1 %cmp.i16.i, label %if.then9.i, label %if.end.i.if.end82_crit_edge, !prof !219

if.end.i.if.end82_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end82

if.then9.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  %add.ptr10.i = getelementptr i8, ptr %value, i32 %35
  %36 = call ptr @memset(ptr %add.ptr10.i, i32 0, i32 16)
  br label %if.end82

if.end82:                                         ; preds = %if.then9.i, %if.end.i.if.end82_crit_edge, %if.else73.if.end82_crit_edge, %if.then71
  %err.0 = phi i32 [ %30, %if.then71 ], [ -2, %if.else73.if.end82_crit_edge ], [ 0, %if.end.i.if.end82_crit_edge ], [ 0, %if.then9.i ]
  %call.i159 = tail call zeroext i1 @rcu_is_watching() #19
  br i1 %call.i159, label %if.end82.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i162

if.end82.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_unlock.exit

land.lhs.true.i162:                               ; preds = %if.end82
  %call1.i160 = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i160)
  %tobool.not.i161 = icmp eq i32 %call1.i160, 0
  br i1 %tobool.not.i161, label %land.lhs.true.i162.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i164

land.lhs.true.i162.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i162
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_unlock.exit

land.lhs.true2.i164:                              ; preds = %land.lhs.true.i162
  %.b4.i163 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i163, label %land.lhs.true2.i164.rcu_read_unlock.exit_crit_edge, label %if.then.i165

land.lhs.true2.i164.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i164
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_unlock.exit

if.then.i165:                                     ; preds = %land.lhs.true2.i164
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.20, i32 noundef 724, ptr noundef nonnull @.str.22) #19
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i165, %land.lhs.true2.i164.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i162.rcu_read_unlock.exit_crit_edge, %if.end82.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !239
  %37 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i166 = and i32 %37, -16384
  %38 = inttoptr i32 %and.i.i.i.i.i166 to ptr
  %preempt_count.i.i.i.i167 = getelementptr inbounds %struct.thread_info, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %preempt_count.i.i.i.i167 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load volatile i32, ptr %preempt_count.i.i.i.i167, align 4
  %sub.i.i.i = add i32 %40, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i167, align 4
  tail call void @rcu_read_unlock_strict() #19
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #19
  br label %if.end91

if.end91:                                         ; preds = %rcu_read_unlock.exit, %if.then58, %if.then53, %if.then42, %if.then37, %if.then32, %if.then18, %if.then13, %if.then8, %if.then4
  %err.1 = phi i32 [ %call5, %if.then4 ], [ %call9, %if.then8 ], [ %call14, %if.then13 ], [ %call19, %if.then18 ], [ %call33, %if.then32 ], [ %call38, %if.then37 ], [ %call43, %if.then42 ], [ %call54, %if.then53 ], [ %call59, %if.then58 ], [ %err.0, %rcu_read_unlock.exit ]
  %41 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #19, !srcloc !224
  %42 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i168 = and i32 %42, -16384
  %43 = inttoptr i32 %and.i.i168 to ptr
  %cpu.i169 = getelementptr inbounds %struct.thread_info, ptr %43, i32 0, i32 3
  %44 = ptrtoint ptr %cpu.i169 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %cpu.i169, align 4
  %arrayidx.i170 = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %45
  %46 = ptrtoint ptr %arrayidx.i170 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %arrayidx.i170, align 4
  %add.i171 = add i32 %47, ptrtoint (ptr @bpf_prog_active to i32)
  %48 = inttoptr i32 %add.i171 to ptr
  %49 = ptrtoint ptr %48 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %48, align 4
  %add13.i172 = add i32 %50, -1
  store i32 %add13.i172, ptr %48, align 4
  %51 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #19, !srcloc !225
  %and.i.i.i173 = and i32 %51, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i173)
  %tobool.not.i174 = icmp eq i32 %and.i.i.i173, 0
  br i1 %tobool.not.i174, label %if.then.i175, label %if.end91.bpf_enable_instrumentation.exit_crit_edge, !prof !219

if.end91.bpf_enable_instrumentation.exit_crit_edge: ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_enable_instrumentation.exit

if.then.i175:                                     ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @warn_bogus_irq_restore() #19
  br label %bpf_enable_instrumentation.exit

bpf_enable_instrumentation.exit:                  ; preds = %if.then.i175, %if.end91.bpf_enable_instrumentation.exit_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %41) #19, !srcloc !226
  tail call void @migrate_enable() #19
  %52 = ptrtoint ptr %map_type to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %map_type, align 4
  %54 = and i32 %53, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %54)
  %switch.i = icmp eq i32 %54, 12
  br i1 %switch.i, label %if.then.i176, label %bpf_enable_instrumentation.exit.cleanup_crit_edge

bpf_enable_instrumentation.exit.cleanup_crit_edge: ; preds = %bpf_enable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then.i176:                                     ; preds = %bpf_enable_instrumentation.exit
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @synchronize_rcu() #19
  br label %cleanup

cleanup:                                          ; preds = %if.then.i176, %bpf_enable_instrumentation.exit.cleanup_crit_edge, %if.then
  %retval.0 = phi i32 [ %call1, %if.then ], [ %err.1, %bpf_enable_instrumentation.exit.cleanup_crit_edge ], [ %err.1, %if.then.i176 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @bpf_prog_free_id(ptr nocapture noundef readonly %prog, i1 noundef zeroext %do_idr_lock) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 10
  %0 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %aux, align 4
  %id = getelementptr inbounds %struct.bpf_prog_aux, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %id, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  br i1 %do_idr_lock, label %do.body3, label %if.end.if.end7_crit_edge

if.end.if.end7_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end7

do.body3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %call4 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @prog_idr_lock) #19
  br label %if.end7

if.end7:                                          ; preds = %do.body3, %if.end.if.end7_crit_edge
  %flags.0 = phi i32 [ %call4, %do.body3 ], [ -1, %if.end.if.end7_crit_edge ]
  %4 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %aux, align 4
  %id9 = getelementptr inbounds %struct.bpf_prog_aux, ptr %5, i32 0, i32 7
  %6 = ptrtoint ptr %id9 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %id9, align 8
  %call10 = tail call ptr @idr_remove(ptr noundef nonnull @prog_idr, i32 noundef %7) #19
  %8 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %aux, align 4
  %id12 = getelementptr inbounds %struct.bpf_prog_aux, ptr %9, i32 0, i32 7
  %10 = ptrtoint ptr %id12 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %id12, align 8
  br i1 %do_idr_lock, label %if.then14, label %if.end7.cleanup_crit_edge

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then14:                                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @prog_idr_lock, i32 noundef %flags.0) #19
  br label %cleanup

cleanup:                                          ; preds = %if.then14, %if.end7.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @bpf_prog_put(ptr nocapture noundef readonly %prog) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %aux1.i = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 10
  %0 = ptrtoint ptr %aux1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %aux1.i, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %1, i32 noundef 8) #19
  %call.i.i.i.i = tail call i64 @generic_atomic64_sub_return(i64 noundef 1, ptr noundef %1) #19
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %call.i.i.i.i)
  %cmp.i.i.i = icmp eq i64 %call.i.i.i.i, 0
  br i1 %cmp.i.i.i, label %if.then.i, label %entry.__bpf_prog_put.exit_crit_edge

entry.__bpf_prog_put.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %__bpf_prog_put.exit

if.then.i:                                        ; preds = %entry
  %2 = ptrtoint ptr %aux1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %aux1.i, align 4
  %id.i.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %3, i32 0, i32 7
  %4 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %id.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i.i, label %if.then.i.bpf_prog_free_id.exit.i_crit_edge, label %if.end.i.i

if.then.i.bpf_prog_free_id.exit.i_crit_edge:      ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_free_id.exit.i

if.end.i.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #21
  %call4.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @prog_idr_lock) #19
  %6 = ptrtoint ptr %aux1.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %aux1.i, align 4
  %id9.i.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %7, i32 0, i32 7
  %8 = ptrtoint ptr %id9.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %id9.i.i, align 8
  %call10.i.i = tail call ptr @idr_remove(ptr noundef nonnull @prog_idr, i32 noundef %9) #19
  %10 = ptrtoint ptr %aux1.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %aux1.i, align 4
  %id12.i.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %11, i32 0, i32 7
  %12 = ptrtoint ptr %id12.i.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %id12.i.i, align 8
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @prog_idr_lock, i32 noundef %call4.i.i) #19
  br label %bpf_prog_free_id.exit.i

bpf_prog_free_id.exit.i:                          ; preds = %if.end.i.i, %if.then.i.bpf_prog_free_id.exit.i_crit_edge
  %13 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 1
  %15 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %preempt_count.i.i, align 4
  %and.i = and i32 %16, 983040
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool3.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool3.not.i, label %lor.lhs.false.i, label %bpf_prog_free_id.exit.i.do.body15.i_crit_edge

bpf_prog_free_id.exit.i.do.body15.i_crit_edge:    ; preds = %bpf_prog_free_id.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body15.i

lor.lhs.false.i:                                  ; preds = %bpf_prog_free_id.exit.i
  %17 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #19, !srcloc !225
  %and.i.i = and i32 %17, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool13.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool13.not.i, label %if.else.i, label %lor.lhs.false.i.do.body15.i_crit_edge

lor.lhs.false.i.do.body15.i_crit_edge:            ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body15.i

do.body15.i:                                      ; preds = %lor.lhs.false.i.do.body15.i_crit_edge, %bpf_prog_free_id.exit.i.do.body15.i_crit_edge
  %18 = getelementptr inbounds %struct.bpf_prog_aux, ptr %1, i32 0, i32 59
  tail call void @__init_work(ptr noundef %18, i32 noundef 0) #19
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 -64, ptr %18, align 4
  %lockdep_map.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %1, i32 0, i32 59, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map.i, ptr noundef nonnull @.str.25, ptr noundef nonnull @__bpf_prog_put.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #19
  %entry16.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %1, i32 0, i32 59, i32 0, i32 1
  %20 = ptrtoint ptr %entry16.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %entry16.i, ptr %entry16.i, align 4
  %prev.i.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %1, i32 0, i32 59, i32 0, i32 1, i32 1
  %21 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %entry16.i, ptr %prev.i.i, align 4
  %func.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %1, i32 0, i32 59, i32 0, i32 2
  %22 = ptrtoint ptr %func.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr @bpf_prog_put_deferred, ptr %func.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %23 = load ptr, ptr @system_wq, align 4
  %call.i.i1.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %23, ptr noundef %18) #19
  br label %__bpf_prog_put.exit

if.else.i:                                        ; preds = %lor.lhs.false.i
  %prog1.i.i = getelementptr %struct.bpf_prog_aux, ptr %1, i32 0, i32 41
  %24 = ptrtoint ptr %prog1.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %prog1.i.i, align 4
  tail call void @perf_event_bpf_event(ptr noundef %25, i32 noundef 2, i16 noundef zeroext 0) #19
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @audit_enabled to i32))
  %26 = load i32, ptr @audit_enabled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %cmp38.i.i.i = icmp eq i32 %26, 0
  br i1 %cmp38.i.i.i, label %if.else.i.bpf_prog_put_deferred.exit.i_crit_edge, label %if.end43.i.i.i

if.else.i.bpf_prog_put_deferred.exit.i_crit_edge: ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_put_deferred.exit.i

if.end43.i.i.i:                                   ; preds = %if.else.i
  %call44.i.i.i = tail call ptr @audit_log_start(ptr noundef null, i32 noundef 2592, i32 noundef 1334) #19
  %tobool45.not.i.i.i = icmp eq ptr %call44.i.i.i, null
  br i1 %tobool45.not.i.i.i, label %if.end43.i.i.i.bpf_prog_put_deferred.exit.i_crit_edge, label %if.end55.i.i.i, !prof !219

if.end43.i.i.i.bpf_prog_put_deferred.exit.i_crit_edge: ; preds = %if.end43.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_put_deferred.exit.i

if.end55.i.i.i:                                   ; preds = %if.end43.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %aux.i.i.i = getelementptr inbounds %struct.bpf_prog, ptr %25, i32 0, i32 10
  %27 = ptrtoint ptr %aux.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %aux.i.i.i, align 4
  %id.i.i.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %28, i32 0, i32 7
  %29 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %id.i.i.i, align 8
  tail call void (ptr, ptr, ...) @audit_log_format(ptr noundef nonnull %call44.i.i.i, ptr noundef nonnull @.str.26, i32 noundef %30, ptr noundef nonnull @.str.28) #19
  tail call void @audit_log_end(ptr noundef nonnull %call44.i.i.i) #19
  br label %bpf_prog_put_deferred.exit.i

bpf_prog_put_deferred.exit.i:                     ; preds = %if.end55.i.i.i, %if.end43.i.i.i.bpf_prog_put_deferred.exit.i_crit_edge, %if.else.i.bpf_prog_put_deferred.exit.i_crit_edge
  tail call fastcc void @__bpf_prog_put_noref(ptr noundef %25, i1 noundef zeroext true) #19
  br label %__bpf_prog_put.exit

__bpf_prog_put.exit:                              ; preds = %bpf_prog_put_deferred.exit.i, %do.body15.i, %entry.__bpf_prog_put.exit_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @bpf_prog_release(ptr nocapture noundef readnone %inode, ptr nocapture noundef readonly %filp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %filp, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  tail call void @bpf_prog_put(ptr noundef %1)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bpf_prog_show_fdinfo(ptr noundef %m, ptr nocapture noundef readonly %filp) #0 align 64 {
entry:
  %prog_tag = alloca [17 x i8], align 1
  %stats = alloca %struct.bpf_prog_kstats, align 8
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %filp, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %prog_tag) #19
  %2 = call ptr @memset(ptr %prog_tag, i32 0, i32 17)
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %stats) #19
  %3 = getelementptr inbounds %struct.bpf_prog_kstats, ptr %stats, i32 0, i32 1
  %4 = getelementptr inbounds %struct.bpf_prog_kstats, ptr %stats, i32 0, i32 2
  %5 = call ptr @memset(ptr %stats, i32 255, i32 24)
  call fastcc void @bpf_prog_get_stats(ptr noundef %1, ptr noundef nonnull %stats)
  %tag = getelementptr inbounds %struct.bpf_prog, ptr %1, i32 0, i32 6
  %call = call ptr @bin2hex(ptr noundef nonnull %prog_tag, ptr noundef %tag, i32 noundef 8) #19
  %type = getelementptr inbounds %struct.bpf_prog, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %type, align 4
  %jited = getelementptr inbounds %struct.bpf_prog, ptr %1, i32 0, i32 1
  %8 = ptrtoint ptr %jited to i32
  call void @__asan_load2_noabort(i32 %8)
  %bf.load = load i16, ptr %jited, align 2
  %bf.lshr = lshr i16 %bf.load, 15
  %conv = zext i16 %bf.lshr to i32
  %9 = ptrtoint ptr %1 to i32
  call void @__asan_load2_noabort(i32 %9)
  %10 = load i16, ptr %1, align 4
  %conv3 = zext i16 %10 to i64
  %shl = shl nuw nsw i64 %conv3, 12
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %1, i32 0, i32 10
  %11 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %aux, align 4
  %id = getelementptr inbounds %struct.bpf_prog_aux, ptr %12, i32 0, i32 7
  %13 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %id, align 8
  %15 = ptrtoint ptr %stats to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %stats, align 8
  %17 = ptrtoint ptr %3 to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %3, align 8
  %19 = ptrtoint ptr %4 to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %4, align 8
  %verified_insns = getelementptr inbounds %struct.bpf_prog_aux, ptr %12, i32 0, i32 44
  %21 = ptrtoint ptr %verified_insns to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %verified_insns, align 8
  call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.29, i32 noundef %7, i32 noundef %conv, ptr noundef nonnull %prog_tag, i64 noundef %shl, i32 noundef %14, i64 noundef %16, i64 noundef %18, i64 noundef %20, i32 noundef %22) #19
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %stats) #19
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %prog_tag) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @bpf_prog_new_fd(ptr noundef %prog) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @security_bpf_prog(ptr noundef %prog) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %call1 = tail call i32 @anon_inode_getfd(ptr noundef nonnull @.str.2, ptr noundef nonnull @bpf_prog_fops, ptr noundef %prog, i32 noundef 524290) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_bpf_prog(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @bpf_prog_add(ptr nocapture noundef readonly %prog, i32 noundef %i) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = sext i32 %i to i64
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 10
  %0 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %aux, align 4
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %1, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef %conv, ptr noundef %1) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @bpf_prog_sub(ptr nocapture noundef readonly %prog, i32 noundef %i) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = sext i32 %i to i64
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 10
  %0 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %aux, align 4
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %1, i32 noundef 8) #19
  %call.i = tail call i64 @generic_atomic64_sub_return(i64 noundef %conv, ptr noundef %1) #19
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %call.i)
  %cmp = icmp eq i64 %call.i, 0
  br i1 %cmp, label %do.end, label %entry.if.end_crit_edge, !prof !219

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

do.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1955, i32 noundef 9, ptr noundef null) #19
  br label %if.end

if.end:                                           ; preds = %do.end, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @bpf_prog_inc(ptr nocapture noundef readonly %prog) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 10
  %0 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %aux, align 4
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %1, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %1) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @bpf_prog_inc_not_zero(ptr noundef readonly %prog) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 10
  %0 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %aux, align 4
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %1, i32 noundef 8) #19
  %call.i = tail call i64 @generic_atomic64_fetch_add_unless(ptr noundef %1, i64 noundef 1, i64 noundef 0) #19
  %conv = trunc i64 %call.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv)
  %tobool.not = icmp eq i32 %conv, 0
  %spec.select = select i1 %tobool.not, ptr inttoptr (i32 -2 to ptr), ptr %prog
  ret ptr %spec.select
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @bpf_prog_get_ok(ptr nocapture noundef readonly %prog, ptr noundef readonly %attach_type, i1 noundef zeroext %attach_drv) local_unnamed_addr #8 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not = icmp eq ptr %attach_type, null
  br i1 %tobool.not, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 2
  %0 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %type, align 4
  %2 = ptrtoint ptr %attach_type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %attach_type, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %3)
  %cmp.not = icmp eq i32 %1, %3
  br i1 %cmp.not, label %if.end2, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end2:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 10
  %4 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %aux, align 4
  %offload_requested.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %5, i32 0, i32 22
  %6 = ptrtoint ptr %offload_requested.i to i32
  call void @__asan_load1_noabort(i32 %6)
  %7 = load i8, ptr %offload_requested.i, align 1, !range !227
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %7)
  %tobool.i.not = icmp eq i8 %7, 0
  %brmerge = or i1 %tobool.i.not, %attach_drv
  br label %return

return:                                           ; preds = %if.end2, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i1 [ true, %entry.return_crit_edge ], [ false, %if.end.return_crit_edge ], [ %brmerge, %if.end2 ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @bpf_prog_get(i32 noundef %ufd) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call i32 @__fdget(i32 noundef %ufd) #19, !noalias !246
  %and.i.i.i = and i32 %call.i.i, -4
  %0 = inttoptr i32 %and.i.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %entry.__bpf_prog_get.exit_crit_edge, label %if.end.i.i

entry.__bpf_prog_get.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %__bpf_prog_get.exit

if.end.i.i:                                       ; preds = %entry
  %f_op.i.i = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 3
  %1 = ptrtoint ptr %f_op.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %f_op.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %2, @bpf_prog_fops
  br i1 %cmp.not.i.i, label %____bpf_prog_get.exit.i, label %if.then2.i.i

if.then2.i.i:                                     ; preds = %if.end.i.i
  %and.i.i17.i = and i32 %call.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i17.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i17.i, 0
  br i1 %tobool.not.i.i.i, label %if.then2.i.i.__bpf_prog_get.exit_crit_edge, label %if.then2.i.i.cleanup.sink.split.i_crit_edge

if.then2.i.i.cleanup.sink.split.i_crit_edge:      ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i

if.then2.i.i.__bpf_prog_get.exit_crit_edge:       ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %__bpf_prog_get.exit

____bpf_prog_get.exit.i:                          ; preds = %if.end.i.i
  %private_data.i.i = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 16
  %3 = ptrtoint ptr %private_data.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %private_data.i.i, align 4
  %cmp.i.i = icmp ugt ptr %4, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %____bpf_prog_get.exit.i.__bpf_prog_get.exit_crit_edge, label %if.end.i

____bpf_prog_get.exit.i.__bpf_prog_get.exit_crit_edge: ; preds = %____bpf_prog_get.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %__bpf_prog_get.exit

if.end.i:                                         ; preds = %____bpf_prog_get.exit.i
  %aux.i22.i = getelementptr inbounds %struct.bpf_prog, ptr %4, i32 0, i32 10
  %5 = ptrtoint ptr %aux.i22.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %aux.i22.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %6, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %6) #19
  %and.i.i = and i32 %call.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i23.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i23.i, label %if.end.i.__bpf_prog_get.exit_crit_edge, label %if.end.i.cleanup.sink.split.i_crit_edge

if.end.i.cleanup.sink.split.i_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i

if.end.i.__bpf_prog_get.exit_crit_edge:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %__bpf_prog_get.exit

cleanup.sink.split.i:                             ; preds = %if.end.i.cleanup.sink.split.i_crit_edge, %if.then2.i.i.cleanup.sink.split.i_crit_edge
  %retval.0.ph.i = phi ptr [ inttoptr (i32 -22 to ptr), %if.then2.i.i.cleanup.sink.split.i_crit_edge ], [ %4, %if.end.i.cleanup.sink.split.i_crit_edge ]
  tail call void @fput(ptr noundef nonnull %0) #19
  br label %__bpf_prog_get.exit

__bpf_prog_get.exit:                              ; preds = %cleanup.sink.split.i, %if.end.i.__bpf_prog_get.exit_crit_edge, %____bpf_prog_get.exit.i.__bpf_prog_get.exit_crit_edge, %if.then2.i.i.__bpf_prog_get.exit_crit_edge, %entry.__bpf_prog_get.exit_crit_edge
  %retval.0.i = phi ptr [ %4, %____bpf_prog_get.exit.i.__bpf_prog_get.exit_crit_edge ], [ %4, %if.end.i.__bpf_prog_get.exit_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then2.i.i.__bpf_prog_get.exit_crit_edge ], [ inttoptr (i32 -9 to ptr), %entry.__bpf_prog_get.exit_crit_edge ], [ %retval.0.ph.i, %cleanup.sink.split.i ]
  ret ptr %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @bpf_prog_get_type_dev(i32 noundef %ufd, i32 noundef %type, i1 noundef zeroext %attach_drv) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call i32 @__fdget(i32 noundef %ufd) #19, !noalias !249
  %and.i.i.i = and i32 %call.i.i, -4
  %0 = inttoptr i32 %and.i.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i, label %entry.__bpf_prog_get.exit_crit_edge, label %if.end.i.i

entry.__bpf_prog_get.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %__bpf_prog_get.exit

if.end.i.i:                                       ; preds = %entry
  %f_op.i.i = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 3
  %1 = ptrtoint ptr %f_op.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %f_op.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %2, @bpf_prog_fops
  br i1 %cmp.not.i.i, label %____bpf_prog_get.exit.i, label %if.then2.i.i

if.then2.i.i:                                     ; preds = %if.end.i.i
  %and.i.i17.i = and i32 %call.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i17.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i17.i, 0
  br i1 %tobool.not.i.i.i, label %if.then2.i.i.__bpf_prog_get.exit_crit_edge, label %if.then2.i.i.cleanup.sink.split.i_crit_edge

if.then2.i.i.cleanup.sink.split.i_crit_edge:      ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i

if.then2.i.i.__bpf_prog_get.exit_crit_edge:       ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %__bpf_prog_get.exit

____bpf_prog_get.exit.i:                          ; preds = %if.end.i.i
  %private_data.i.i = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 16
  %3 = ptrtoint ptr %private_data.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %private_data.i.i, align 4
  %cmp.i.i = icmp ugt ptr %4, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %____bpf_prog_get.exit.i.__bpf_prog_get.exit_crit_edge, label %if.end.i

____bpf_prog_get.exit.i.__bpf_prog_get.exit_crit_edge: ; preds = %____bpf_prog_get.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %__bpf_prog_get.exit

if.end.i:                                         ; preds = %____bpf_prog_get.exit.i
  %type.i.i = getelementptr inbounds %struct.bpf_prog, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %type.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %type.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %type)
  %cmp.not.i19.i = icmp eq i32 %6, %type
  br i1 %cmp.not.i19.i, label %bpf_prog_get_ok.exit.i, label %if.end.i.out.i_crit_edge

if.end.i.out.i_crit_edge:                         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %out.i

bpf_prog_get_ok.exit.i:                           ; preds = %if.end.i
  %aux.i.i = getelementptr inbounds %struct.bpf_prog, ptr %4, i32 0, i32 10
  %7 = ptrtoint ptr %aux.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %aux.i.i, align 4
  %offload_requested.i.i.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %8, i32 0, i32 22
  %9 = ptrtoint ptr %offload_requested.i.i.i to i32
  call void @__asan_load1_noabort(i32 %9)
  %10 = load i8, ptr %offload_requested.i.i.i, align 1, !range !227
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %10)
  %tobool.i.not.i.i = icmp eq i8 %10, 0
  %brmerge.i.i = or i1 %tobool.i.not.i.i, %attach_drv
  br i1 %brmerge.i.i, label %if.end5.i, label %bpf_prog_get_ok.exit.i.out.i_crit_edge

bpf_prog_get_ok.exit.i.out.i_crit_edge:           ; preds = %bpf_prog_get_ok.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %out.i

if.end5.i:                                        ; preds = %bpf_prog_get_ok.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %8, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %8) #19
  br label %out.i

out.i:                                            ; preds = %if.end5.i, %bpf_prog_get_ok.exit.i.out.i_crit_edge, %if.end.i.out.i_crit_edge
  %prog.0.i = phi ptr [ %4, %if.end5.i ], [ inttoptr (i32 -22 to ptr), %bpf_prog_get_ok.exit.i.out.i_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end.i.out.i_crit_edge ]
  %and.i.i = and i32 %call.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i23.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i23.i, label %out.i.__bpf_prog_get.exit_crit_edge, label %out.i.cleanup.sink.split.i_crit_edge

out.i.cleanup.sink.split.i_crit_edge:             ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i

out.i.__bpf_prog_get.exit_crit_edge:              ; preds = %out.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %__bpf_prog_get.exit

cleanup.sink.split.i:                             ; preds = %out.i.cleanup.sink.split.i_crit_edge, %if.then2.i.i.cleanup.sink.split.i_crit_edge
  %retval.0.ph.i = phi ptr [ inttoptr (i32 -22 to ptr), %if.then2.i.i.cleanup.sink.split.i_crit_edge ], [ %prog.0.i, %out.i.cleanup.sink.split.i_crit_edge ]
  tail call void @fput(ptr noundef nonnull %0) #19
  br label %__bpf_prog_get.exit

__bpf_prog_get.exit:                              ; preds = %cleanup.sink.split.i, %out.i.__bpf_prog_get.exit_crit_edge, %____bpf_prog_get.exit.i.__bpf_prog_get.exit_crit_edge, %if.then2.i.i.__bpf_prog_get.exit_crit_edge, %entry.__bpf_prog_get.exit_crit_edge
  %retval.0.i = phi ptr [ %4, %____bpf_prog_get.exit.i.__bpf_prog_get.exit_crit_edge ], [ %prog.0.i, %out.i.__bpf_prog_get.exit_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then2.i.i.__bpf_prog_get.exit_crit_edge ], [ inttoptr (i32 -9 to ptr), %entry.__bpf_prog_get.exit_crit_edge ], [ %retval.0.ph.i, %cleanup.sink.split.i ]
  ret ptr %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @bpf_link_init(ptr noundef %link, i32 noundef %type, ptr noundef %ops, ptr noundef %prog) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %link, i32 noundef 8) #19
  tail call void @generic_atomic64_set(ptr noundef %link, i64 noundef 1) #19
  %type1 = getelementptr inbounds %struct.bpf_link, ptr %link, i32 0, i32 2
  %0 = ptrtoint ptr %type1 to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %type, ptr %type1, align 4
  %id = getelementptr inbounds %struct.bpf_link, ptr %link, i32 0, i32 1
  %1 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 0, ptr %id, align 8
  %ops2 = getelementptr inbounds %struct.bpf_link, ptr %link, i32 0, i32 3
  %2 = ptrtoint ptr %ops2 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %ops, ptr %ops2, align 8
  %prog3 = getelementptr inbounds %struct.bpf_link, ptr %link, i32 0, i32 4
  %3 = ptrtoint ptr %prog3 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %prog, ptr %prog3, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @bpf_link_cleanup(ptr nocapture noundef readonly %primer) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %primer to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %primer, align 4
  %prog = getelementptr inbounds %struct.bpf_link, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %prog to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr null, ptr %prog, align 4
  %id = getelementptr inbounds %struct.bpf_link_primer, ptr %primer, i32 0, i32 3
  %3 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %entry.bpf_link_free_id.exit_crit_edge, label %if.end.i

entry.bpf_link_free_id.exit_crit_edge:            ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_link_free_id.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @link_idr_lock) #19
  %call.i = tail call ptr @idr_remove(ptr noundef nonnull @link_idr, i32 noundef %4) #19
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @link_idr_lock) #19
  br label %bpf_link_free_id.exit

bpf_link_free_id.exit:                            ; preds = %if.end.i, %entry.bpf_link_free_id.exit_crit_edge
  %file = getelementptr inbounds %struct.bpf_link_primer, ptr %primer, i32 0, i32 1
  %5 = ptrtoint ptr %file to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %file, align 4
  tail call void @fput(ptr noundef %6) #19
  %fd = getelementptr inbounds %struct.bpf_link_primer, ptr %primer, i32 0, i32 2
  %7 = ptrtoint ptr %fd to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %fd, align 4
  tail call void @put_unused_fd(i32 noundef %8) #19
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @fput(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_unused_fd(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @bpf_link_inc(ptr noundef %link) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %link, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %link) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @bpf_link_put(ptr noundef %link) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %link, i32 noundef 8) #19
  %call.i.i.i = tail call i64 @generic_atomic64_sub_return(i64 noundef 1, ptr noundef %link) #19
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %call.i.i.i)
  %cmp.i.i = icmp eq i64 %call.i.i.i, 0
  br i1 %cmp.i.i, label %if.end, label %entry.if.end10_crit_edge

entry.if.end10_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end10

if.end:                                           ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %cmp.not = icmp eq i32 %3, 0
  br i1 %cmp.not, label %if.else, label %do.body

do.body:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %work = getelementptr inbounds %struct.bpf_link, ptr %link, i32 0, i32 5
  tail call void @__init_work(ptr noundef %work, i32 noundef 0) #19
  %4 = ptrtoint ptr %work to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 -64, ptr %work, align 8
  %lockdep_map = getelementptr inbounds %struct.bpf_link, ptr %link, i32 0, i32 5, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.3, ptr noundef nonnull @bpf_link_put.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #19
  %entry6 = getelementptr inbounds %struct.bpf_link, ptr %link, i32 0, i32 5, i32 1
  %5 = ptrtoint ptr %entry6 to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr %entry6, ptr %entry6, align 4
  %prev.i = getelementptr inbounds %struct.bpf_link, ptr %link, i32 0, i32 5, i32 1, i32 1
  %6 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %entry6, ptr %prev.i, align 4
  %func = getelementptr inbounds %struct.bpf_link, ptr %link, i32 0, i32 5, i32 2
  %7 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr @bpf_link_put_deferred, ptr %func, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @system_wq to i32))
  %8 = load ptr, ptr @system_wq, align 4
  %call.i.i18 = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %8, ptr noundef %work) #19
  br label %if.end10

if.else:                                          ; preds = %if.end
  %id.i = getelementptr inbounds %struct.bpf_link, ptr %link, i32 0, i32 1
  %9 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %id.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool.not.i.i = icmp eq i32 %10, 0
  br i1 %tobool.not.i.i, label %if.else.bpf_link_free_id.exit.i_crit_edge, label %if.end.i.i

if.else.bpf_link_free_id.exit.i_crit_edge:        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_link_free_id.exit.i

if.end.i.i:                                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @link_idr_lock) #19
  %call.i.i19 = tail call ptr @idr_remove(ptr noundef nonnull @link_idr, i32 noundef %10) #19
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @link_idr_lock) #19
  br label %bpf_link_free_id.exit.i

bpf_link_free_id.exit.i:                          ; preds = %if.end.i.i, %if.else.bpf_link_free_id.exit.i_crit_edge
  %prog.i = getelementptr inbounds %struct.bpf_link, ptr %link, i32 0, i32 4
  %11 = ptrtoint ptr %prog.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %prog.i, align 4
  %tobool.not.i = icmp eq ptr %12, null
  br i1 %tobool.not.i, label %bpf_link_free_id.exit.i.bpf_link_free.exit_crit_edge, label %if.then.i

bpf_link_free_id.exit.i.bpf_link_free.exit_crit_edge: ; preds = %bpf_link_free_id.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_link_free.exit

if.then.i:                                        ; preds = %bpf_link_free_id.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  %ops.i = getelementptr inbounds %struct.bpf_link, ptr %link, i32 0, i32 3
  %13 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ops.i, align 8
  %15 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %14, align 4
  tail call void %16(ptr noundef %link) #19
  %17 = ptrtoint ptr %prog.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %prog.i, align 4
  tail call void @bpf_prog_put(ptr noundef %18) #19
  br label %bpf_link_free.exit

bpf_link_free.exit:                               ; preds = %if.then.i, %bpf_link_free_id.exit.i.bpf_link_free.exit_crit_edge
  %ops2.i = getelementptr inbounds %struct.bpf_link, ptr %link, i32 0, i32 3
  %19 = ptrtoint ptr %ops2.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ops2.i, align 8
  %dealloc.i = getelementptr inbounds %struct.bpf_link_ops, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %dealloc.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %dealloc.i, align 4
  tail call void %22(ptr noundef %link) #19
  br label %if.end10

if.end10:                                         ; preds = %bpf_link_free.exit, %do.body, %entry.if.end10_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bpf_link_put_deferred(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -24
  %id.i = getelementptr i8, ptr %work, i32 -16
  %0 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %id.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i.i, label %entry.bpf_link_free_id.exit.i_crit_edge, label %if.end.i.i

entry.bpf_link_free_id.exit.i_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_link_free_id.exit.i

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @link_idr_lock) #19
  %call.i.i = tail call ptr @idr_remove(ptr noundef nonnull @link_idr, i32 noundef %1) #19
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @link_idr_lock) #19
  br label %bpf_link_free_id.exit.i

bpf_link_free_id.exit.i:                          ; preds = %if.end.i.i, %entry.bpf_link_free_id.exit.i_crit_edge
  %prog.i = getelementptr i8, ptr %work, i32 -4
  %2 = ptrtoint ptr %prog.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prog.i, align 4
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %bpf_link_free_id.exit.i.bpf_link_free.exit_crit_edge, label %if.then.i

bpf_link_free_id.exit.i.bpf_link_free.exit_crit_edge: ; preds = %bpf_link_free_id.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_link_free.exit

if.then.i:                                        ; preds = %bpf_link_free_id.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  %ops.i = getelementptr i8, ptr %work, i32 -8
  %4 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %ops.i, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 4
  tail call void %7(ptr noundef %add.ptr) #19
  %8 = ptrtoint ptr %prog.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %prog.i, align 4
  tail call void @bpf_prog_put(ptr noundef %9) #19
  br label %bpf_link_free.exit

bpf_link_free.exit:                               ; preds = %if.then.i, %bpf_link_free_id.exit.i.bpf_link_free.exit_crit_edge
  %ops2.i = getelementptr i8, ptr %work, i32 -8
  %10 = ptrtoint ptr %ops2.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ops2.i, align 8
  %dealloc.i = getelementptr inbounds %struct.bpf_link_ops, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %dealloc.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dealloc.i, align 4
  tail call void %13(ptr noundef %add.ptr) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @bpf_link_prime(ptr noundef %link, ptr nocapture noundef writeonly %primer) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @get_unused_fd_flags(i32 noundef 524288) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @idr_preload(i32 noundef 3264) #19
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @link_idr_lock) #19
  %call.i = tail call i32 @idr_alloc_cyclic(ptr noundef nonnull @link_idr, ptr noundef %link, i32 noundef 1, i32 noundef 2147483647, i32 noundef 2592) #19
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @link_idr_lock) #19
  %0 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %5, ptrtoint (ptr @radix_tree_preloads to i32)
  %6 = inttoptr i32 %add.i.i to ptr
  tail call fastcc void @local_lock_release(ptr noundef %6) #19
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !252
  %7 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %sub.i.i.i = add i32 %10, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp2 = icmp slt i32 %call.i, 0
  br i1 %cmp2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @put_unused_fd(i32 noundef %call) #19
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %call5 = tail call ptr @anon_inode_getfile(ptr noundef nonnull @.str.4, ptr noundef nonnull @bpf_link_fops, ptr noundef %link, i32 noundef 524288) #19
  %cmp.i = icmp ugt ptr %call5, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then7, label %if.end9

if.then7:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %if.then7.bpf_link_free_id.exit_crit_edge, label %if.end.i

if.then7.bpf_link_free_id.exit_crit_edge:         ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_link_free_id.exit

if.end.i:                                         ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @link_idr_lock) #19
  %call.i30 = tail call ptr @idr_remove(ptr noundef nonnull @link_idr, i32 noundef %call.i) #19
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @link_idr_lock) #19
  br label %bpf_link_free_id.exit

bpf_link_free_id.exit:                            ; preds = %if.end.i, %if.then7.bpf_link_free_id.exit_crit_edge
  tail call void @put_unused_fd(i32 noundef %call) #19
  %11 = ptrtoint ptr %call5 to i32
  br label %cleanup

if.end9:                                          ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #21
  %12 = ptrtoint ptr %primer to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %link, ptr %primer, align 4
  %file11 = getelementptr inbounds %struct.bpf_link_primer, ptr %primer, i32 0, i32 1
  %13 = ptrtoint ptr %file11 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %call5, ptr %file11, align 4
  %fd12 = getelementptr inbounds %struct.bpf_link_primer, ptr %primer, i32 0, i32 2
  %14 = ptrtoint ptr %fd12 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %call, ptr %fd12, align 4
  %id13 = getelementptr inbounds %struct.bpf_link_primer, ptr %primer, i32 0, i32 3
  %15 = ptrtoint ptr %id13 to i32
  call void @__asan_store4_noabort(i32 %15)
  store i32 %call.i, ptr %id13, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end9, %bpf_link_free_id.exit, %if.then3, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %if.then3 ], [ %11, %bpf_link_free_id.exit ], [ 0, %if.end9 ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @get_unused_fd_flags(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @anon_inode_getfile(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @bpf_link_settle(ptr nocapture noundef readonly %primer) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @link_idr_lock) #19
  %id = getelementptr inbounds %struct.bpf_link_primer, ptr %primer, i32 0, i32 3
  %0 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %id, align 4
  %2 = ptrtoint ptr %primer to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %primer, align 4
  %id1 = getelementptr inbounds %struct.bpf_link, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %id1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %1, ptr %id1, align 8
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @link_idr_lock) #19
  %fd = getelementptr inbounds %struct.bpf_link_primer, ptr %primer, i32 0, i32 2
  %5 = ptrtoint ptr %fd to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %fd, align 4
  %file = getelementptr inbounds %struct.bpf_link_primer, ptr %primer, i32 0, i32 1
  %7 = ptrtoint ptr %file to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %file, align 4
  tail call void @fd_install(i32 noundef %6, ptr noundef %8) #19
  %9 = ptrtoint ptr %fd to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %fd, align 4
  ret i32 %10
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @fd_install(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @bpf_link_new_fd(ptr noundef %link) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @anon_inode_getfd(ptr noundef nonnull @.str.5, ptr noundef nonnull @bpf_link_fops, ptr noundef %link, i32 noundef 524288) #19
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @bpf_link_get_from_fd(i32 noundef %ufd) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @__fdget(i32 noundef %ufd) #19, !noalias !253
  %and.i.i = and i32 %call.i, -4
  %0 = inttoptr i32 %and.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %f_op = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 3
  %1 = ptrtoint ptr %f_op to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %f_op, align 4
  %cmp.not = icmp eq ptr %2, @bpf_link_fops
  br i1 %cmp.not, label %if.end4, label %if.then2

if.then2:                                         ; preds = %if.end
  %and.i = and i32 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then2.cleanup_crit_edge, label %if.then2.cleanup.sink.split_crit_edge

if.then2.cleanup.sink.split_crit_edge:            ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split

if.then2.cleanup_crit_edge:                       ; preds = %if.then2
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %private_data = getelementptr inbounds %struct.file, ptr %0, i32 0, i32 16
  %3 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %private_data, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %4, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %4) #19
  %and.i14 = and i32 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i14)
  %tobool.not.i15 = icmp eq i32 %and.i14, 0
  br i1 %tobool.not.i15, label %if.end4.cleanup_crit_edge, label %if.end4.cleanup.sink.split_crit_edge

if.end4.cleanup.sink.split_crit_edge:             ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

cleanup.sink.split:                               ; preds = %if.end4.cleanup.sink.split_crit_edge, %if.then2.cleanup.sink.split_crit_edge
  %retval.0.ph = phi ptr [ inttoptr (i32 -22 to ptr), %if.then2.cleanup.sink.split_crit_edge ], [ %4, %if.end4.cleanup.sink.split_crit_edge ]
  tail call void @fput(ptr noundef nonnull %0) #19
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end4.cleanup_crit_edge, %if.then2.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ inttoptr (i32 -9 to ptr), %entry.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then2.cleanup_crit_edge ], [ %4, %if.end4.cleanup_crit_edge ], [ %retval.0.ph, %cleanup.sink.split ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @bpf_map_get_curr_or_next(ptr noundef %id) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @map_idr_lock) #19
  %call9 = tail call ptr @idr_get_next(ptr noundef nonnull @map_idr, ptr noundef %id) #19
  %tobool.not10 = icmp eq ptr %call9, null
  br i1 %tobool.not10, label %entry.if.end4_crit_edge, label %entry.if.then_crit_edge

entry.if.then_crit_edge:                          ; preds = %entry
  br label %if.then

entry.if.end4_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end4

if.then:                                          ; preds = %if.then3.if.then_crit_edge, %entry.if.then_crit_edge
  %call11 = phi ptr [ %call, %if.then3.if.then_crit_edge ], [ %call9, %entry.if.then_crit_edge ]
  %refcnt.i = getelementptr inbounds %struct.bpf_map, ptr %call11, i32 0, i32 22
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 8) #19
  %call.i.i = tail call i64 @generic_atomic64_fetch_add_unless(ptr noundef %refcnt.i, i64 noundef 1, i64 noundef 0) #19
  %conv.i = trunc i64 %call.i.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv.i)
  %tobool.not.i = icmp eq i32 %conv.i, 0
  %.mux.i = select i1 %tobool.not.i, ptr inttoptr (i32 -2 to ptr), ptr %call11
  %cmp.i = icmp ugt ptr %.mux.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then3, label %if.then.if.end4_crit_edge

if.then.if.end4_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end4

if.then3:                                         ; preds = %if.then
  %0 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %id, align 4
  %inc = add i32 %1, 1
  store i32 %inc, ptr %id, align 4
  %call = tail call ptr @idr_get_next(ptr noundef nonnull @map_idr, ptr noundef %id) #19
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.then3.if.end4_crit_edge, label %if.then3.if.then_crit_edge

if.then3.if.then_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then

if.then3.if.end4_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end4

if.end4:                                          ; preds = %if.then3.if.end4_crit_edge, %if.then.if.end4_crit_edge, %entry.if.end4_crit_edge
  %map.0 = phi ptr [ null, %entry.if.end4_crit_edge ], [ %.mux.i, %if.then.if.end4_crit_edge ], [ null, %if.then3.if.end4_crit_edge ]
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @map_idr_lock) #19
  ret ptr %map.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idr_get_next(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @bpf_prog_get_curr_or_next(ptr noundef %id) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @prog_idr_lock) #19
  %call9 = tail call ptr @idr_get_next(ptr noundef nonnull @prog_idr, ptr noundef %id) #19
  %tobool.not10 = icmp eq ptr %call9, null
  br i1 %tobool.not10, label %entry.if.end4_crit_edge, label %entry.if.then_crit_edge

entry.if.then_crit_edge:                          ; preds = %entry
  br label %if.then

entry.if.end4_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end4

if.then:                                          ; preds = %if.then3.if.then_crit_edge, %entry.if.then_crit_edge
  %call11 = phi ptr [ %call, %if.then3.if.then_crit_edge ], [ %call9, %entry.if.then_crit_edge ]
  %aux.i = getelementptr inbounds %struct.bpf_prog, ptr %call11, i32 0, i32 10
  %0 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %aux.i, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %1, i32 noundef 8) #19
  %call.i.i = tail call i64 @generic_atomic64_fetch_add_unless(ptr noundef %1, i64 noundef 1, i64 noundef 0) #19
  %conv.i = trunc i64 %call.i.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv.i)
  %tobool.not.i = icmp eq i32 %conv.i, 0
  %spec.select.i = select i1 %tobool.not.i, ptr inttoptr (i32 -2 to ptr), ptr %call11
  %cmp.i = icmp ugt ptr %spec.select.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then3, label %if.then.if.end4_crit_edge

if.then.if.end4_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end4

if.then3:                                         ; preds = %if.then
  %2 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %id, align 4
  %inc = add i32 %3, 1
  store i32 %inc, ptr %id, align 4
  %call = tail call ptr @idr_get_next(ptr noundef nonnull @prog_idr, ptr noundef %id) #19
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.then3.if.end4_crit_edge, label %if.then3.if.then_crit_edge

if.then3.if.then_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then

if.then3.if.end4_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end4

if.end4:                                          ; preds = %if.then3.if.end4_crit_edge, %if.then.if.end4_crit_edge, %entry.if.end4_crit_edge
  %prog.0 = phi ptr [ null, %entry.if.end4_crit_edge ], [ %spec.select.i, %if.then.if.end4_crit_edge ], [ null, %if.then3.if.end4_crit_edge ]
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @prog_idr_lock) #19
  ret ptr %prog.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @bpf_prog_by_id(i32 noundef %id) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %id)
  %tobool.not = icmp eq i32 %id, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @prog_idr_lock) #19
  %call1 = tail call ptr @idr_find(ptr noundef nonnull @prog_idr, i32 noundef %id) #19
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %if.end.if.end6_crit_edge, label %if.then3

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end6

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %aux.i = getelementptr inbounds %struct.bpf_prog, ptr %call1, i32 0, i32 10
  %0 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %aux.i, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %1, i32 noundef 8) #19
  %call.i.i = tail call i64 @generic_atomic64_fetch_add_unless(ptr noundef %1, i64 noundef 1, i64 noundef 0) #19
  %conv.i = trunc i64 %call.i.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv.i)
  %tobool.not.i = icmp eq i32 %conv.i, 0
  %spec.select.i = select i1 %tobool.not.i, ptr inttoptr (i32 -2 to ptr), ptr %call1
  br label %if.end6

if.end6:                                          ; preds = %if.then3, %if.end.if.end6_crit_edge
  %prog.0 = phi ptr [ %spec.select.i, %if.then3 ], [ inttoptr (i32 -2 to ptr), %if.end.if.end6_crit_edge ]
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @prog_idr_lock) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %prog.0, %if.end6 ], [ inttoptr (i32 -2 to ptr), %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idr_find(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @bpf_link_by_id(i32 noundef %id) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %id)
  %tobool.not = icmp eq i32 %id, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @link_idr_lock) #19
  %call1 = tail call ptr @idr_find(ptr noundef nonnull @link_idr, i32 noundef %id) #19
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %if.end.if.end12_crit_edge, label %if.then3

if.end.if.end12_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end12

if.then3:                                         ; preds = %if.end
  %id4 = getelementptr inbounds %struct.bpf_link, ptr %call1, i32 0, i32 1
  %0 = ptrtoint ptr %id4 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %id4, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool5.not = icmp eq i32 %1, 0
  br i1 %tobool5.not, label %if.then3.if.end12_crit_edge, label %if.then6

if.then3.if.end12_crit_edge:                      ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end12

if.then6:                                         ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call1, i32 noundef 8) #19
  %call.i.i = tail call i64 @generic_atomic64_fetch_add_unless(ptr noundef nonnull %call1, i64 noundef 1, i64 noundef 0) #19
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %call.i.i)
  %tobool.not.i = icmp eq i64 %call.i.i, 0
  %spec.select.i = select i1 %tobool.not.i, ptr inttoptr (i32 -2 to ptr), ptr %call1
  br label %if.end12

if.end12:                                         ; preds = %if.then6, %if.then3.if.end12_crit_edge, %if.end.if.end12_crit_edge
  %link.0 = phi ptr [ %spec.select.i, %if.then6 ], [ inttoptr (i32 -11 to ptr), %if.then3.if.end12_crit_edge ], [ inttoptr (i32 -2 to ptr), %if.end.if.end12_crit_edge ]
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @link_idr_lock) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %link.0, %if.end12 ], [ inttoptr (i32 -2 to ptr), %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__se_sys_bpf(i32 noundef %cmd, i32 noundef %uattr, i32 noundef %size) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %.fca.0.insert.i = insertvalue [2 x i32] poison, i32 %uattr, 0
  %.fca.1.insert.i = insertvalue [2 x i32] %.fca.0.insert.i, i32 0, 1
  %call.i = tail call fastcc i32 @__sys_bpf(i32 noundef %cmd, [2 x i32] %.fca.1.insert.i, i32 noundef %size) #19
  ret i32 %call.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i64 @bpf_sys_bpf(i64 noundef %cmd, i64 noundef %attr, i64 noundef %attr_size, i64 %__ur_1, i64 %__ur_2) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = trunc i64 %cmd to i32
  %0 = zext i32 %conv to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.69)
  switch i32 %conv, label %entry.____bpf_sys_bpf.exit_crit_edge [
    i32 0, label %entry.sw.epilog.i_crit_edge
    i32 2, label %entry.sw.epilog.i_crit_edge3
    i32 22, label %entry.sw.epilog.i_crit_edge4
    i32 5, label %entry.sw.epilog.i_crit_edge5
    i32 18, label %entry.sw.epilog.i_crit_edge6
  ]

entry.sw.epilog.i_crit_edge6:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.epilog.i

entry.sw.epilog.i_crit_edge5:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.epilog.i

entry.sw.epilog.i_crit_edge4:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.epilog.i

entry.sw.epilog.i_crit_edge3:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.epilog.i

entry.sw.epilog.i_crit_edge:                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.epilog.i

entry.____bpf_sys_bpf.exit_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %____bpf_sys_bpf.exit

sw.epilog.i:                                      ; preds = %entry.sw.epilog.i_crit_edge, %entry.sw.epilog.i_crit_edge3, %entry.sw.epilog.i_crit_edge4, %entry.sw.epilog.i_crit_edge5, %entry.sw.epilog.i_crit_edge6
  %conv2 = trunc i64 %attr_size to i32
  %conv1 = trunc i64 %attr to i32
  %.fca.0.insert.i = insertvalue [2 x i32] poison, i32 %conv1, 0
  %.fca.1.insert.i = insertvalue [2 x i32] %.fca.0.insert.i, i32 -16777216, 1
  %call.i = tail call fastcc i32 @__sys_bpf(i32 noundef %conv, [2 x i32] %.fca.1.insert.i, i32 noundef %conv2) #19
  %conv.i = sext i32 %call.i to i64
  br label %____bpf_sys_bpf.exit

____bpf_sys_bpf.exit:                             ; preds = %sw.epilog.i, %entry.____bpf_sys_bpf.exit_crit_edge
  %retval.0.i = phi i64 [ %conv.i, %sw.epilog.i ], [ -22, %entry.____bpf_sys_bpf.exit_crit_edge ]
  ret i64 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define weak dso_local ptr @tracing_prog_func_proto(i32 noundef %func_id, ptr noundef %prog) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @bpf_base_func_proto(i32 noundef %func_id) #19
  ret ptr %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bpf_base_func_proto(i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i64 @bpf_sys_close(i64 noundef %fd, i64 %__ur_1, i64 %__ur_2, i64 %__ur_3, i64 %__ur_4) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = trunc i64 %fd to i32
  %call.i = tail call i32 @close_fd(i32 noundef %conv) #19
  %conv.i = sext i32 %call.i to i64
  ret i64 %conv.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i64 @bpf_kallsyms_lookup_name(i64 noundef %name, i64 noundef %name_sz, i64 noundef %flags, i64 noundef %res, i64 %__ur_1) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %conv = trunc i64 %name to i32
  %0 = inttoptr i32 %conv to ptr
  %conv1 = trunc i64 %name_sz to i32
  %conv2 = trunc i64 %flags to i32
  %conv3 = trunc i64 %res to i32
  %1 = inttoptr i32 %conv3 to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv2)
  %tobool.not.i = icmp ne i32 %conv2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %conv1)
  %cmp.i = icmp slt i32 %conv1, 2
  %or.cond.i = or i1 %cmp.i, %tobool.not.i
  br i1 %or.cond.i, label %entry.____bpf_kallsyms_lookup_name.exit_crit_edge, label %lor.lhs.false.i

entry.____bpf_kallsyms_lookup_name.exit_crit_edge: ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %____bpf_kallsyms_lookup_name.exit

lor.lhs.false.i:                                  ; preds = %entry
  %sub.i = add nsw i32 %conv1, -1
  %arrayidx.i = getelementptr i8, ptr %0, i32 %sub.i
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %arrayidx.i, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool1.not.i = icmp eq i8 %3, 0
  br i1 %tobool1.not.i, label %do.end.i, label %lor.lhs.false.i.____bpf_kallsyms_lookup_name.exit_crit_edge

lor.lhs.false.i.____bpf_kallsyms_lookup_name.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %____bpf_kallsyms_lookup_name.exit

do.end.i:                                         ; preds = %lor.lhs.false.i
  %4 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %7, i32 0, i32 99
  %8 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %cred.i, align 16
  %call.i.i = tail call zeroext i1 @kallsyms_show_value(ptr noundef %9) #19
  br i1 %call.i.i, label %if.end6.i, label %do.end.i.____bpf_kallsyms_lookup_name.exit_crit_edge

do.end.i.____bpf_kallsyms_lookup_name.exit_crit_edge: ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %____bpf_kallsyms_lookup_name.exit

if.end6.i:                                        ; preds = %do.end.i
  call void @__sanitizer_cov_trace_pc() #21
  %call7.i = tail call i32 @kallsyms_lookup_name(ptr noundef %0) #19
  %conv8.i = zext i32 %call7.i to i64
  %10 = ptrtoint ptr %1 to i32
  call void @__asan_store8_noabort(i32 %10)
  store i64 %conv8.i, ptr %1, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool9.not.i = icmp eq i32 %call7.i, 0
  %cond.i = select i1 %tobool9.not.i, i32 -2, i32 0
  %conv10.i = sext i32 %cond.i to i64
  br label %____bpf_kallsyms_lookup_name.exit

____bpf_kallsyms_lookup_name.exit:                ; preds = %if.end6.i, %do.end.i.____bpf_kallsyms_lookup_name.exit_crit_edge, %lor.lhs.false.i.____bpf_kallsyms_lookup_name.exit_crit_edge, %entry.____bpf_kallsyms_lookup_name.exit_crit_edge
  %retval.0.i = phi i64 [ %conv10.i, %if.end6.i ], [ -22, %entry.____bpf_kallsyms_lookup_name.exit_crit_edge ], [ -22, %lor.lhs.false.i.____bpf_kallsyms_lookup_name.exit_crit_edge ], [ -1, %do.end.i.____bpf_kallsyms_lookup_name.exit_crit_edge ]
  ret i64 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @syscall_prog_func_proto(i32 noundef %func_id, ptr noundef %prog) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = zext i32 %func_id to i64
  call void @__sanitizer_cov_trace_switch(i64 %0, ptr @__sancov_gen_cov_switch_values.70)
  switch i32 %func_id, label %sw.default [
    i32 166, label %entry.return_crit_edge
    i32 167, label %sw.bb1
    i32 168, label %sw.bb2
    i32 179, label %sw.bb3
  ]

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

sw.bb1:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

sw.bb2:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

sw.bb3:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

sw.default:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %call = tail call ptr @tracing_prog_func_proto(i32 noundef %func_id, ptr noundef %prog)
  br label %return

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %entry.return_crit_edge
  %retval.0 = phi ptr [ %call, %sw.default ], [ @bpf_kallsyms_lookup_name_proto, %sw.bb3 ], [ @bpf_sys_close_proto, %sw.bb2 ], [ @bpf_btf_find_by_name_kind_proto, %sw.bb1 ], [ @bpf_sys_bpf_proto, %entry.return_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal zeroext i1 @syscall_prog_is_valid_access(i32 noundef %off, i32 noundef %size, i32 noundef %type, ptr nocapture noundef readnone %prog, ptr nocapture noundef readnone %info) #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 65534, i32 %off)
  %0 = icmp ugt i32 %off, 65534
  br i1 %0, label %entry.return_crit_edge, label %if.end

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %rem = srem i32 %off, %size
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %rem)
  %cmp2.not = icmp eq i32 %rem, 0
  br label %return

return:                                           ; preds = %if.end, %entry.return_crit_edge
  %retval.0 = phi i1 [ false, %entry.return_crit_edge ], [ %cmp2.not, %if.end ]
  ret i1 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_prog_test_run_syscall(ptr noundef, ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @generic_atomic64_read(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__vmalloc_node_range(i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #5

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #9

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #10

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @btf_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bpf_map_free_deferred(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -144
  tail call void @security_bpf_map_free(ptr noundef %add.ptr) #19
  %memcg.i = getelementptr i8, ptr %work, i32 -68
  %0 = ptrtoint ptr %memcg.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %memcg.i, align 4
  %tobool.not.i.i = icmp eq ptr %1, null
  br i1 %tobool.not.i.i, label %entry.bpf_map_release_memcg.exit_crit_edge, label %if.then.i.i

entry.bpf_map_release_memcg.exit_crit_edge:       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_release_memcg.exit

if.then.i.i:                                      ; preds = %entry
  %flags.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags.i.i.i, align 4
  %and.i.i.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.then.i.i.bpf_map_release_memcg.exit_crit_edge

if.then.i.i.bpf_map_release_memcg.exit_crit_edge: ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_release_memcg.exit

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %refcnt.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %1, i32 0, i32 2
  %4 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i.i.i.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i.i.i.i = add i32 %7, 1
  store volatile i32 %add.i.i.i.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !238
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #19
  %call.i.i.i.i.i.i = tail call zeroext i1 @rcu_is_watching() #19
  br i1 %call.i.i.i.i.i.i, label %if.then.i.i.i.rcu_read_lock.exit.i.i.i.i.i_crit_edge, label %land.lhs.true.i.i.i.i.i.i

if.then.i.i.i.rcu_read_lock.exit.i.i.i.i.i_crit_edge: ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit.i.i.i.i.i

land.lhs.true.i.i.i.i.i.i:                        ; preds = %if.then.i.i.i
  %call1.i.i.i.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i.i = icmp eq i32 %call1.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i.i, label %land.lhs.true.i.i.i.i.i.i.rcu_read_lock.exit.i.i.i.i.i_crit_edge, label %land.lhs.true2.i.i.i.i.i.i

land.lhs.true.i.i.i.i.i.i.rcu_read_lock.exit.i.i.i.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit.i.i.i.i.i

land.lhs.true2.i.i.i.i.i.i:                       ; preds = %land.lhs.true.i.i.i.i.i.i
  %.b4.i.i.i.i.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i.i.i.i.i, label %land.lhs.true2.i.i.i.i.i.i.rcu_read_lock.exit.i.i.i.i.i_crit_edge, label %if.then.i.i.i.i.i.i

land.lhs.true2.i.i.i.i.i.i.rcu_read_lock.exit.i.i.i.i.i_crit_edge: ; preds = %land.lhs.true2.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %land.lhs.true2.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.20, i32 noundef 696, ptr noundef nonnull @.str.21) #19
  br label %rcu_read_lock.exit.i.i.i.i.i

rcu_read_lock.exit.i.i.i.i.i:                     ; preds = %if.then.i.i.i.i.i.i, %land.lhs.true2.i.i.i.i.i.i.rcu_read_lock.exit.i.i.i.i.i_crit_edge, %land.lhs.true.i.i.i.i.i.i.rcu_read_lock.exit.i.i.i.i.i_crit_edge, %if.then.i.i.i.rcu_read_lock.exit.i.i.i.i.i_crit_edge
  %8 = ptrtoint ptr %refcnt.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %refcnt.i.i.i, align 4
  %and.i.i.i.i.i.i = and i32 %9, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i)
  %tobool.not.i1.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i, 0
  br i1 %tobool.not.i1.i.i.i.i.i, label %do.body1.i.i.i.i.i, label %if.else.i.i.i.i.i, !prof !220

do.body1.i.i.i.i.i:                               ; preds = %rcu_read_lock.exit.i.i.i.i.i
  %10 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #19, !srcloc !224
  %11 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i2.i.i.i.i.i = and i32 %11, -16384
  %12 = inttoptr i32 %and.i2.i.i.i.i.i to ptr
  %cpu.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %cpu.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %cpu.i.i.i.i.i, align 4
  %arrayidx.i.i.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %14
  %15 = ptrtoint ptr %arrayidx.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %arrayidx.i.i.i.i.i, align 4
  %add.i.i.i.i.i = add i32 %16, %9
  %17 = inttoptr i32 %add.i.i.i.i.i to ptr
  %18 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %17, align 4
  %add15.i.i.i.i.i = add i32 %19, -1
  store i32 %add15.i.i.i.i.i, ptr %17, align 4
  %20 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #19, !srcloc !225
  %and.i.i.i.i.i.i.i = and i32 %20, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i.i.i)
  %tobool.not.i.i.i.i.i = icmp eq i32 %and.i.i.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %if.then29.i.i.i.i.i, label %do.body1.i.i.i.i.i.do.end31.i.i.i.i.i_crit_edge, !prof !219

do.body1.i.i.i.i.i.do.end31.i.i.i.i.i_crit_edge:  ; preds = %do.body1.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end31.i.i.i.i.i

if.then29.i.i.i.i.i:                              ; preds = %do.body1.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @warn_bogus_irq_restore() #19
  br label %do.end31.i.i.i.i.i

do.end31.i.i.i.i.i:                               ; preds = %if.then29.i.i.i.i.i, %do.body1.i.i.i.i.i.do.end31.i.i.i.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %10) #19, !srcloc !226
  br label %if.end48.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %rcu_read_lock.exit.i.i.i.i.i
  %data.i.i.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %1, i32 0, i32 2, i32 1
  %21 = ptrtoint ptr %data.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %data.i.i.i.i.i, align 4
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %22, i32 noundef 4) #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !256
  tail call void @llvm.prefetch.p0(ptr %22, i32 1, i32 3, i32 1) #19
  %23 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %22, ptr %22, i32 1, ptr elementtype(i32) %22) #19, !srcloc !257
  %asmresult.i.i.i.i.i.i.i.i.i.i = extractvalue { i32, i32 } %23, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !258
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i.i.i.i.i, label %if.then45.i.i.i.i.i, label %if.else.i.i.i.i.i.if.end48.i.i.i.i.i_crit_edge, !prof !219

if.else.i.i.i.i.i.if.end48.i.i.i.i.i_crit_edge:   ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end48.i.i.i.i.i

if.then45.i.i.i.i.i:                              ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %24 = ptrtoint ptr %data.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %data.i.i.i.i.i, align 4
  %release.i.i.i.i.i = getelementptr inbounds %struct.percpu_ref_data, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %release.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %release.i.i.i.i.i, align 4
  tail call void %27(ptr noundef %refcnt.i.i.i) #19
  br label %if.end48.i.i.i.i.i

if.end48.i.i.i.i.i:                               ; preds = %if.then45.i.i.i.i.i, %if.else.i.i.i.i.i.if.end48.i.i.i.i.i_crit_edge, %do.end31.i.i.i.i.i
  %call.i3.i.i.i.i.i = tail call zeroext i1 @rcu_is_watching() #19
  br i1 %call.i3.i.i.i.i.i, label %if.end48.i.i.i.i.i.percpu_ref_put.exit.i.i.i_crit_edge, label %land.lhs.true.i6.i.i.i.i.i

if.end48.i.i.i.i.i.percpu_ref_put.exit.i.i.i_crit_edge: ; preds = %if.end48.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %percpu_ref_put.exit.i.i.i

land.lhs.true.i6.i.i.i.i.i:                       ; preds = %if.end48.i.i.i.i.i
  %call1.i4.i.i.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i4.i.i.i.i.i)
  %tobool.not.i5.i.i.i.i.i = icmp eq i32 %call1.i4.i.i.i.i.i, 0
  br i1 %tobool.not.i5.i.i.i.i.i, label %land.lhs.true.i6.i.i.i.i.i.percpu_ref_put.exit.i.i.i_crit_edge, label %land.lhs.true2.i8.i.i.i.i.i

land.lhs.true.i6.i.i.i.i.i.percpu_ref_put.exit.i.i.i_crit_edge: ; preds = %land.lhs.true.i6.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %percpu_ref_put.exit.i.i.i

land.lhs.true2.i8.i.i.i.i.i:                      ; preds = %land.lhs.true.i6.i.i.i.i.i
  %.b4.i7.i.i.i.i.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i7.i.i.i.i.i, label %land.lhs.true2.i8.i.i.i.i.i.percpu_ref_put.exit.i.i.i_crit_edge, label %if.then.i9.i.i.i.i.i

land.lhs.true2.i8.i.i.i.i.i.percpu_ref_put.exit.i.i.i_crit_edge: ; preds = %land.lhs.true2.i8.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %percpu_ref_put.exit.i.i.i

if.then.i9.i.i.i.i.i:                             ; preds = %land.lhs.true2.i8.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.20, i32 noundef 724, ptr noundef nonnull @.str.22) #19
  br label %percpu_ref_put.exit.i.i.i

percpu_ref_put.exit.i.i.i:                        ; preds = %if.then.i9.i.i.i.i.i, %land.lhs.true2.i8.i.i.i.i.i.percpu_ref_put.exit.i.i.i_crit_edge, %land.lhs.true.i6.i.i.i.i.i.percpu_ref_put.exit.i.i.i_crit_edge, %if.end48.i.i.i.i.i.percpu_ref_put.exit.i.i.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !239
  %28 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i10.i.i.i.i.i = and i32 %28, -16384
  %29 = inttoptr i32 %and.i.i.i.i.i10.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i11.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %preempt_count.i.i.i.i11.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %preempt_count.i.i.i.i11.i.i.i.i.i, align 4
  %sub.i.i.i.i.i.i.i.i = add i32 %31, -1
  store volatile i32 %sub.i.i.i.i.i.i.i.i, ptr %preempt_count.i.i.i.i11.i.i.i.i.i, align 4
  tail call void @rcu_read_unlock_strict() #19
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #19
  br label %bpf_map_release_memcg.exit

bpf_map_release_memcg.exit:                       ; preds = %percpu_ref_put.exit.i.i.i, %if.then.i.i.bpf_map_release_memcg.exit_crit_edge, %entry.bpf_map_release_memcg.exit_crit_edge
  %32 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %add.ptr, align 128
  %map_free = getelementptr inbounds %struct.bpf_map_ops, ptr %33, i32 0, i32 3
  %34 = ptrtoint ptr %map_free to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %map_free, align 4
  tail call void %35(ptr noundef %add.ptr) #19
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @security_bpf_map_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #12

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @bpf_map_write_active_inc(ptr noundef %map) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %writecnt = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 26
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %writecnt, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %writecnt) #19
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bpf_map_mmap_open(ptr nocapture noundef readonly %vma) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %0 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vm_flags, align 4
  %and = and i32 %1, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %vm_file = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 14
  %2 = ptrtoint ptr %vm_file to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vm_file, align 4
  %private_data = getelementptr inbounds %struct.file, ptr %3, i32 0, i32 16
  %4 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %private_data, align 4
  %writecnt.i = getelementptr inbounds %struct.bpf_map, ptr %5, i32 0, i32 26
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %writecnt.i, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %writecnt.i) #19
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bpf_map_mmap_close(ptr nocapture noundef readonly %vma) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %vm_flags = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 8
  %0 = ptrtoint ptr %vm_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %vm_flags, align 4
  %and = and i32 %1, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %vm_file = getelementptr inbounds %struct.vm_area_struct, ptr %vma, i32 0, i32 14
  %2 = ptrtoint ptr %vm_file to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %vm_file, align 4
  %private_data = getelementptr inbounds %struct.file, ptr %3, i32 0, i32 16
  %4 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %private_data, align 4
  %writecnt.i = getelementptr inbounds %struct.bpf_map, ptr %5, i32 0, i32 26
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %writecnt.i, i32 noundef 8) #19
  tail call void @generic_atomic64_sub(i64 noundef 1, ptr noundef %writecnt.i) #19
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @generic_atomic64_sub(i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @generic_atomic64_add(i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__fdget(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @kvmalloc_node(i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: null_pointer_is_valid
declare dso_local void @__check_object_size(ptr noundef, i32 noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @should_fail_usercopy() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_from_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @migrate_disable() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #19
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #19
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @migrate_enable() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @synchronize_rcu() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__cond_resched() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @arm_copy_to_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__bitmap_weight(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_map_offload_update_elem(ptr noundef, ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_map_update_elem_sys(ptr noundef, ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_fd_array_map_update_elem(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_percpu_hash_update(ptr noundef, ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_percpu_array_update(ptr noundef, ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_percpu_cgroup_storage_update(ptr noundef, ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_fd_htab_map_update_elem(ptr noundef, ptr noundef, ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_fd_reuseport_array_update_elem(ptr noundef, ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_map_offload_lookup_elem(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_percpu_hash_copy(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_percpu_array_copy(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_percpu_cgroup_storage_copy(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_fd_array_map_lookup_elem(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_fd_htab_map_lookup_elem(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_fd_reuseport_array_lookup_elem(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_struct_ops_map_sys_lookup_elem(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @copy_map_value_locked(ptr noundef, ptr noundef, ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly inlinehint mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc void @copy_map_value(ptr nocapture noundef readonly %map, ptr nocapture noundef writeonly %dst, ptr nocapture noundef readonly %src) unnamed_addr #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %spin_lock_off.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 9
  %0 = ptrtoint ptr %spin_lock_off.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %spin_lock_off.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %cmp.i = icmp sgt i32 %1, -1
  %timer_off.i = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 10
  %2 = ptrtoint ptr %timer_off.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %timer_off.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %3)
  %cmp.i69 = icmp sgt i32 %3, -1
  br i1 %cmp.i, label %if.end, label %if.end.thread, !prof !219

if.end:                                           ; preds = %entry
  %4 = lshr i32 %3, 27
  %5 = and i32 %4, 16
  %6 = xor i32 %5, 16
  %spec.select97 = select i1 %cmp.i69, i32 %3, i32 0, !prof !219
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %spec.select97)
  %cmp = icmp uge i32 %1, %spec.select97
  %7 = and i1 %cmp.i, %cmp
  br i1 %7, label %if.end.if.end26_crit_edge, label %if.end.do.body_crit_edge

if.end.do.body_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body

if.end.if.end26_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end26

if.end.thread:                                    ; preds = %entry
  br i1 %cmp.i69, label %if.end.thread.do.body_crit_edge, label %if.else, !prof !219

if.end.thread.do.body_crit_edge:                  ; preds = %if.end.thread
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body

do.body:                                          ; preds = %if.end.thread.do.body_crit_edge, %if.end.do.body_crit_edge
  %t_off.07396 = phi i32 [ %spec.select97, %if.end.do.body_crit_edge ], [ %3, %if.end.thread.do.body_crit_edge ]
  %t_sz.07495 = phi i32 [ %6, %if.end.do.body_crit_edge ], [ 16, %if.end.thread.do.body_crit_edge ]
  %s_sz.08194 = phi i32 [ 4, %if.end.do.body_crit_edge ], [ 0, %if.end.thread.do.body_crit_edge ]
  %s_off.08393 = phi i32 [ %1, %if.end.do.body_crit_edge ], [ 0, %if.end.thread.do.body_crit_edge ]
  br label %if.end26

if.end26:                                         ; preds = %do.body, %if.end.if.end26_crit_edge
  %t_off.1 = phi i32 [ %s_off.08393, %do.body ], [ %spec.select97, %if.end.if.end26_crit_edge ]
  %t_sz.1 = phi i32 [ %s_sz.08194, %do.body ], [ %6, %if.end.if.end26_crit_edge ]
  %s_sz.1 = phi i32 [ %t_sz.07495, %do.body ], [ 4, %if.end.if.end26_crit_edge ]
  %s_off.1 = phi i32 [ %t_off.07396, %do.body ], [ %1, %if.end.if.end26_crit_edge ]
  %8 = call ptr @memcpy(ptr %dst, ptr %src, i32 %t_off.1)
  %add.ptr = getelementptr i8, ptr %dst, i32 %t_off.1
  %add.ptr27 = getelementptr i8, ptr %add.ptr, i32 %t_sz.1
  %add.ptr28 = getelementptr i8, ptr %src, i32 %t_off.1
  %add.ptr29 = getelementptr i8, ptr %add.ptr28, i32 %t_sz.1
  %9 = add i32 %t_sz.1, %t_off.1
  %sub30 = sub i32 %s_off.1, %9
  %10 = call ptr @memcpy(ptr %add.ptr27, ptr %add.ptr29, i32 %sub30)
  %add.ptr31 = getelementptr i8, ptr %dst, i32 %s_off.1
  %add.ptr32 = getelementptr i8, ptr %add.ptr31, i32 %s_sz.1
  %add.ptr33 = getelementptr i8, ptr %src, i32 %s_off.1
  %add.ptr34 = getelementptr i8, ptr %add.ptr33, i32 %s_sz.1
  %value_size = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 5
  %11 = ptrtoint ptr %value_size to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %value_size, align 4
  %13 = add i32 %s_off.1, %s_sz.1
  %sub36 = sub i32 %12, %13
  %14 = call ptr @memcpy(ptr %add.ptr32, ptr %add.ptr34, i32 %sub36)
  br label %if.end38

if.else:                                          ; preds = %if.end.thread
  call void @__sanitizer_cov_trace_pc() #21
  %value_size37 = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 5
  %15 = ptrtoint ptr %value_size37 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %value_size37, align 4
  %17 = call ptr @memcpy(ptr %dst, ptr %src, i32 %16)
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.end26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bpf_prog_put_deferred(ptr nocapture noundef readonly %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %prog1 = getelementptr i8, ptr %work, i32 -96
  %0 = ptrtoint ptr %prog1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %prog1, align 4
  tail call void @perf_event_bpf_event(ptr noundef %1, i32 noundef 2, i16 noundef zeroext 0) #19
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @audit_enabled to i32))
  %2 = load i32, ptr @audit_enabled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp38.i = icmp eq i32 %2, 0
  br i1 %cmp38.i, label %entry.bpf_audit_prog.exit_crit_edge, label %if.end43.i

entry.bpf_audit_prog.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_audit_prog.exit

if.end43.i:                                       ; preds = %entry
  %call44.i = tail call ptr @audit_log_start(ptr noundef null, i32 noundef 2592, i32 noundef 1334) #19
  %tobool45.not.i = icmp eq ptr %call44.i, null
  br i1 %tobool45.not.i, label %if.end43.i.bpf_audit_prog.exit_crit_edge, label %if.end55.i, !prof !219

if.end43.i.bpf_audit_prog.exit_crit_edge:         ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_audit_prog.exit

if.end55.i:                                       ; preds = %if.end43.i
  call void @__sanitizer_cov_trace_pc() #21
  %aux.i = getelementptr inbounds %struct.bpf_prog, ptr %1, i32 0, i32 10
  %3 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %aux.i, align 4
  %id.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %4, i32 0, i32 7
  %5 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %id.i, align 8
  tail call void (ptr, ptr, ...) @audit_log_format(ptr noundef nonnull %call44.i, ptr noundef nonnull @.str.26, i32 noundef %6, ptr noundef nonnull @.str.28) #19
  tail call void @audit_log_end(ptr noundef nonnull %call44.i) #19
  br label %bpf_audit_prog.exit

bpf_audit_prog.exit:                              ; preds = %if.end55.i, %if.end43.i.bpf_audit_prog.exit_crit_edge, %entry.bpf_audit_prog.exit_crit_edge
  tail call fastcc void @__bpf_prog_put_noref(ptr noundef %1, i1 noundef zeroext true)
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_event_bpf_event(ptr noundef, i32 noundef, i16 noundef zeroext) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @bpf_audit_prog(ptr nocapture noundef readonly %prog, i32 noundef %op) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @audit_enabled to i32))
  %0 = load i32, ptr @audit_enabled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %cmp38 = icmp eq i32 %0, 0
  br i1 %cmp38, label %entry.cleanup_crit_edge, label %if.end43

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end43:                                         ; preds = %entry
  %call44 = tail call ptr @audit_log_start(ptr noundef null, i32 noundef 2592, i32 noundef 1334) #19
  %tobool45.not = icmp eq ptr %call44, null
  br i1 %tobool45.not, label %if.end43.cleanup_crit_edge, label %if.end55, !prof !219

if.end43.cleanup_crit_edge:                       ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end55:                                         ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #21
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 10
  %1 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %aux, align 4
  %id = getelementptr inbounds %struct.bpf_prog_aux, ptr %2, i32 0, i32 7
  %3 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %id, align 8
  %arrayidx = getelementptr [2 x ptr], ptr @bpf_audit_str, i32 0, i32 %op
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx, align 4
  tail call void (ptr, ptr, ...) @audit_log_format(ptr noundef nonnull %call44, ptr noundef nonnull @.str.26, i32 noundef %4, ptr noundef %6) #19
  tail call void @audit_log_end(ptr noundef nonnull %call44) #19
  br label %cleanup

cleanup:                                          ; preds = %if.end55, %if.end43.cleanup_crit_edge, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @__bpf_prog_put_noref(ptr noundef %prog, i1 noundef zeroext %deferred) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @bpf_prog_kallsyms_del_all(ptr noundef %prog) #19
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 10
  %0 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %aux, align 4
  %btf = getelementptr inbounds %struct.bpf_prog_aux, ptr %1, i32 0, i32 49
  %2 = ptrtoint ptr %btf to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %btf, align 4
  tail call void @btf_put(ptr noundef %3) #19
  %4 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %aux, align 4
  %jited_linfo = getelementptr inbounds %struct.bpf_prog_aux, ptr %5, i32 0, i32 53
  %6 = ptrtoint ptr %jited_linfo to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %jited_linfo, align 4
  tail call void @kvfree(ptr noundef %7) #19
  %8 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %aux, align 4
  %linfo = getelementptr inbounds %struct.bpf_prog_aux, ptr %9, i32 0, i32 52
  %10 = ptrtoint ptr %linfo to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %linfo, align 8
  tail call void @kvfree(ptr noundef %11) #19
  %12 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %aux, align 4
  %kfunc_tab = getelementptr inbounds %struct.bpf_prog_aux, ptr %13, i32 0, i32 33
  %14 = ptrtoint ptr %kfunc_tab to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %kfunc_tab, align 4
  tail call void @kfree(ptr noundef %15) #19
  %16 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %aux, align 4
  %attach_btf = getelementptr inbounds %struct.bpf_prog_aux, ptr %17, i32 0, i32 14
  %18 = ptrtoint ptr %attach_btf to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %attach_btf, align 4
  %tobool.not = icmp eq ptr %19, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @btf_put(ptr noundef nonnull %19) #19
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %20 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %aux, align 4
  br i1 %deferred, label %if.then8, label %if.else15

if.then8:                                         ; preds = %if.end
  %sleepable = getelementptr inbounds %struct.bpf_prog_aux, ptr %21, i32 0, i32 25
  %22 = ptrtoint ptr %sleepable to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %sleepable, align 4, !range !227
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %23)
  %tobool10.not = icmp eq i8 %23, 0
  %24 = getelementptr inbounds %struct.bpf_prog_aux, ptr %21, i32 0, i32 59
  br i1 %tobool10.not, label %if.else, label %if.then11

if.then11:                                        ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @call_rcu_tasks_trace(ptr noundef %24, ptr noundef nonnull @__bpf_prog_put_rcu) #19
  br label %if.end17

if.else:                                          ; preds = %if.then8
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @call_rcu(ptr noundef %24, ptr noundef nonnull @__bpf_prog_put_rcu) #19
  br label %if.end17

if.else15:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %func_info.i = getelementptr %struct.bpf_prog_aux, ptr %21, i32 0, i32 50
  %25 = ptrtoint ptr %func_info.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %func_info.i, align 8
  tail call void @kvfree(ptr noundef %26) #19
  %func_info_aux.i = getelementptr %struct.bpf_prog_aux, ptr %21, i32 0, i32 51
  %27 = ptrtoint ptr %func_info_aux.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %func_info_aux.i, align 4
  tail call void @kfree(ptr noundef %28) #19
  %user.i = getelementptr %struct.bpf_prog_aux, ptr %21, i32 0, i32 42
  %29 = ptrtoint ptr %user.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %user.i, align 8
  tail call void @free_uid(ptr noundef %30) #19
  tail call void @security_bpf_prog_free(ptr noundef %21) #19
  %prog.i = getelementptr %struct.bpf_prog_aux, ptr %21, i32 0, i32 41
  %31 = ptrtoint ptr %prog.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %prog.i, align 4
  tail call void @bpf_prog_free(ptr noundef %32) #19
  br label %if.end17

if.end17:                                         ; preds = %if.else15, %if.else, %if.then11
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @audit_log_start(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @audit_log_format(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @audit_log_end(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_prog_kallsyms_del_all(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @call_rcu_tasks_trace(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_prog_put_rcu(ptr noundef %rcu) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %rcu, i32 -596
  %func_info = getelementptr i8, ptr %rcu, i32 -36
  %0 = ptrtoint ptr %func_info to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %func_info, align 8
  tail call void @kvfree(ptr noundef %1) #19
  %func_info_aux = getelementptr i8, ptr %rcu, i32 -32
  %2 = ptrtoint ptr %func_info_aux to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %func_info_aux, align 4
  tail call void @kfree(ptr noundef %3) #19
  %user = getelementptr i8, ptr %rcu, i32 -92
  %4 = ptrtoint ptr %user to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %user, align 8
  tail call void @free_uid(ptr noundef %5) #19
  tail call void @security_bpf_prog_free(ptr noundef %add.ptr) #19
  %prog = getelementptr i8, ptr %rcu, i32 -96
  %6 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prog, align 4
  tail call void @bpf_prog_free(ptr noundef %7) #19
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_uid(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @security_bpf_prog_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_prog_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @bpf_prog_get_stats(ptr nocapture noundef readonly %prog, ptr nocapture noundef writeonly %stats) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %call35 = tail call i32 @cpumask_next(i32 noundef -1, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %0 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %call35, i32 %0)
  %cmp36 = icmp ult i32 %call35, %0
  br i1 %cmp36, label %for.body.lr.ph, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %stats1 = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 7
  br label %for.body

for.body:                                         ; preds = %do.end14.for.body_crit_edge, %for.body.lr.ph
  %call40 = phi i32 [ %call35, %for.body.lr.ph ], [ %call, %do.end14.for.body_crit_edge ]
  %nsecs.039 = phi i64 [ 0, %for.body.lr.ph ], [ %add15, %do.end14.for.body_crit_edge ]
  %cnt.038 = phi i64 [ 0, %for.body.lr.ph ], [ %add16, %do.end14.for.body_crit_edge ]
  %misses.037 = phi i64 [ 0, %for.body.lr.ph ], [ %add17, %do.end14.for.body_crit_edge ]
  %1 = ptrtoint ptr %stats1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %stats1, align 4
  %3 = ptrtoint ptr %2 to i32
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %call40
  %4 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx, align 4
  %add = add i32 %5, %3
  %6 = inttoptr i32 %add to ptr
  %syncp = getelementptr inbounds %struct.bpf_prog_stats, ptr %6, i32 0, i32 3
  %dep_map.c48.i.i.i = getelementptr inbounds %struct.bpf_prog_stats, ptr %6, i32 0, i32 3, i32 0, i32 1
  %nsecs5 = getelementptr inbounds %struct.bpf_prog_stats, ptr %6, i32 0, i32 1
  %misses9 = getelementptr inbounds %struct.bpf_prog_stats, ptr %6, i32 0, i32 2
  br label %do.body3

do.body3:                                         ; preds = %u64_stats_fetch_begin_irq.exit.do.body3_crit_edge, %for.body
  %7 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #19, !srcloc !224
  %and.i.i.i.i = and i32 %7, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %do.body24.critedge.i.i.i

if.then.i.i.i:                                    ; preds = %do.body3
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @trace_hardirqs_off() #19
  %8 = tail call ptr @llvm.returnaddress(i32 0) #19
  %9 = ptrtoint ptr %8 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48.i.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %9) #19
  tail call void @lock_release(ptr noundef %dep_map.c48.i.i.i, i32 noundef %9) #19
  tail call void @trace_hardirqs_on() #19
  br label %do.body24.i.i.i

do.body24.critedge.i.i.i:                         ; preds = %do.body3
  call void @__sanitizer_cov_trace_pc() #21
  %10 = tail call ptr @llvm.returnaddress(i32 0) #19
  %11 = ptrtoint ptr %10 to i32
  tail call void @lock_acquire(ptr noundef %dep_map.c48.i.i.i, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 1, ptr noundef null, i32 noundef %11) #19
  tail call void @lock_release(ptr noundef %dep_map.c48.i.i.i, i32 noundef %11) #19
  br label %do.body24.i.i.i

do.body24.i.i.i:                                  ; preds = %do.body24.critedge.i.i.i, %if.then.i.i.i
  %12 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #19, !srcloc !225
  %and.i.i.i.i.i = and i32 %12, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool32.not.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool32.not.i.i.i, label %if.then36.i.i.i, label %do.body24.i.i.i.seqcount_lockdep_reader_access.exit.i.i_crit_edge, !prof !219

do.body24.i.i.i.seqcount_lockdep_reader_access.exit.i.i_crit_edge: ; preds = %do.body24.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %seqcount_lockdep_reader_access.exit.i.i

if.then36.i.i.i:                                  ; preds = %do.body24.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @warn_bogus_irq_restore() #19
  br label %seqcount_lockdep_reader_access.exit.i.i

seqcount_lockdep_reader_access.exit.i.i:          ; preds = %if.then36.i.i.i, %do.body24.i.i.i.seqcount_lockdep_reader_access.exit.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %7) #19, !srcloc !226
  %13 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile i32, ptr %syncp, align 4
  %and18.i.i = and i32 %14, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and18.i.i)
  %tobool.not19.i.i = icmp eq i32 %and18.i.i, 0
  br i1 %tobool.not19.i.i, label %seqcount_lockdep_reader_access.exit.i.i.u64_stats_fetch_begin_irq.exit_crit_edge, label %seqcount_lockdep_reader_access.exit.i.i.do.end.i.i_crit_edge

seqcount_lockdep_reader_access.exit.i.i.do.end.i.i_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit.i.i
  br label %do.end.i.i

seqcount_lockdep_reader_access.exit.i.i.u64_stats_fetch_begin_irq.exit_crit_edge: ; preds = %seqcount_lockdep_reader_access.exit.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %u64_stats_fetch_begin_irq.exit

do.end.i.i:                                       ; preds = %do.end.i.i.do.end.i.i_crit_edge, %seqcount_lockdep_reader_access.exit.i.i.do.end.i.i_crit_edge
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !259
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #19, !srcloc !260
  %15 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile i32, ptr %syncp, align 4
  %and.i.i = and i32 %16, 1
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %do.end.i.i.u64_stats_fetch_begin_irq.exit_crit_edge, label %do.end.i.i.do.end.i.i_crit_edge

do.end.i.i.do.end.i.i_crit_edge:                  ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.end.i.i

do.end.i.i.u64_stats_fetch_begin_irq.exit_crit_edge: ; preds = %do.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %u64_stats_fetch_begin_irq.exit

u64_stats_fetch_begin_irq.exit:                   ; preds = %do.end.i.i.u64_stats_fetch_begin_irq.exit_crit_edge, %seqcount_lockdep_reader_access.exit.i.i.u64_stats_fetch_begin_irq.exit_crit_edge
  %.lcssa.i.i = phi i32 [ %14, %seqcount_lockdep_reader_access.exit.i.i.u64_stats_fetch_begin_irq.exit_crit_edge ], [ %16, %do.end.i.i.u64_stats_fetch_begin_irq.exit_crit_edge ]
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !261
  %17 = ptrtoint ptr %nsecs5 to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %nsecs5, align 8
  %19 = ptrtoint ptr %6 to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %6, align 8
  %21 = ptrtoint ptr %misses9 to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %misses9, align 8
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !262
  %23 = ptrtoint ptr %syncp to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %syncp, align 4
  %cmp.i.i.i.i.not = icmp eq i32 %24, %.lcssa.i.i
  br i1 %cmp.i.i.i.i.not, label %do.end14, label %u64_stats_fetch_begin_irq.exit.do.body3_crit_edge

u64_stats_fetch_begin_irq.exit.do.body3_crit_edge: ; preds = %u64_stats_fetch_begin_irq.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %do.body3

do.end14:                                         ; preds = %u64_stats_fetch_begin_irq.exit
  %add15 = add i64 %18, %nsecs.039
  %add16 = add i64 %20, %cnt.038
  %add17 = add i64 %22, %misses.037
  %call = tail call i32 @cpumask_next(i32 noundef %call40, ptr noundef nonnull @__cpu_possible_mask) #24
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %25 = load i32, ptr @nr_cpu_ids, align 4
  %cmp = icmp ult i32 %call, %25
  br i1 %cmp, label %do.end14.for.body_crit_edge, label %do.end14.for.end_crit_edge

do.end14.for.end_crit_edge:                       ; preds = %do.end14
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end

do.end14.for.body_crit_edge:                      ; preds = %do.end14
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.body

for.end:                                          ; preds = %do.end14.for.end_crit_edge, %entry.for.end_crit_edge
  %misses.0.lcssa = phi i64 [ 0, %entry.for.end_crit_edge ], [ %add17, %do.end14.for.end_crit_edge ]
  %cnt.0.lcssa = phi i64 [ 0, %entry.for.end_crit_edge ], [ %add16, %do.end14.for.end_crit_edge ]
  %nsecs.0.lcssa = phi i64 [ 0, %entry.for.end_crit_edge ], [ %add15, %do.end14.for.end_crit_edge ]
  %26 = ptrtoint ptr %stats to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 %nsecs.0.lcssa, ptr %stats, align 8
  %cnt19 = getelementptr inbounds %struct.bpf_prog_kstats, ptr %stats, i32 0, i32 1
  %27 = ptrtoint ptr %cnt19 to i32
  call void @__asan_store8_noabort(i32 %27)
  store i64 %cnt.0.lcssa, ptr %cnt19, align 8
  %misses20 = getelementptr inbounds %struct.bpf_prog_kstats, ptr %stats, i32 0, i32 2
  %28 = ptrtoint ptr %misses20 to i32
  call void @__asan_store8_noabort(i32 %28)
  store i64 %misses.0.lcssa, ptr %misses20, align 8
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bin2hex(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @cpumask_next(i32 noundef, ptr noundef) local_unnamed_addr #14

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_off() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_hardirqs_on() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @generic_atomic64_sub_return(i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @generic_atomic64_fetch_add_unless(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @generic_atomic64_set(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @idr_preload(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @idr_alloc_cyclic(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_lock_release(ptr noundef %l) #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %0 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end35_crit_edge

entry.if.end35_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end35

land.lhs.true:                                    ; preds = %entry
  %owner = getelementptr inbounds %struct.local_lock_t, ptr %l, i32 0, i32 1
  %1 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %owner, align 4
  %3 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task, align 8
  %cmp.not = icmp eq ptr %2, %6
  br i1 %cmp.not, label %land.lhs.true.if.end35_crit_edge, label %do.end, !prof !220

land.lhs.true.if.end35_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end35

do.end:                                           ; preds = %land.lhs.true
  %call3 = tail call i32 @debug_locks_off() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %do.end.if.end35_crit_edge, label %land.lhs.true5

do.end.if.end35_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end35

land.lhs.true5:                                   ; preds = %do.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %7 = load i32, ptr @debug_locks_silent, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool6.not = icmp eq i32 %7, 0
  br i1 %tobool6.not, label %do.end19, label %land.lhs.true5.if.end35_crit_edge

land.lhs.true5.if.end35_crit_edge:                ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end35

do.end19:                                         ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #21
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.30, i32 noundef 36, i32 noundef 9, ptr noundef nonnull @.str.31, ptr noundef nonnull @.str.32) #19
  br label %if.end35

if.end35:                                         ; preds = %do.end19, %land.lhs.true5.if.end35_crit_edge, %do.end.if.end35_crit_edge, %land.lhs.true.if.end35_crit_edge, %entry.if.end35_crit_edge
  %owner37 = getelementptr inbounds %struct.local_lock_t, ptr %l, i32 0, i32 1
  %8 = ptrtoint ptr %owner37 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %owner37, align 4
  br label %__here

__here:                                           ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @lock_release(ptr noundef %l, i32 noundef ptrtoint (ptr blockaddress(@local_lock_release, %__here) to i32)) #19
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_locks_off() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @bpf_link_release(ptr nocapture noundef readnone %inode, ptr nocapture noundef readonly %filp) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %filp, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  tail call void @bpf_link_put(ptr noundef %1)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bpf_link_show_fdinfo(ptr noundef %m, ptr nocapture noundef readonly %filp) #0 align 64 {
entry:
  %prog_tag = alloca [17 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %private_data = getelementptr inbounds %struct.file, ptr %filp, i32 0, i32 16
  %0 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private_data, align 4
  %prog1 = getelementptr inbounds %struct.bpf_link, ptr %1, i32 0, i32 4
  %2 = ptrtoint ptr %prog1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prog1, align 4
  call void @llvm.lifetime.start.p0(i64 17, ptr nonnull %prog_tag) #19
  %4 = call ptr @memset(ptr %prog_tag, i32 0, i32 17)
  %tag = getelementptr inbounds %struct.bpf_prog, ptr %3, i32 0, i32 6
  %call = call ptr @bin2hex(ptr noundef nonnull %prog_tag, ptr noundef %tag, i32 noundef 8) #19
  %type = getelementptr inbounds %struct.bpf_link, ptr %1, i32 0, i32 2
  %5 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %type, align 4
  %arrayidx = getelementptr [8 x ptr], ptr @bpf_link_type_strs, i32 0, i32 %6
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx, align 4
  %id = getelementptr inbounds %struct.bpf_link, ptr %1, i32 0, i32 1
  %9 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %id, align 8
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %3, i32 0, i32 10
  %11 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %aux, align 4
  %id4 = getelementptr inbounds %struct.bpf_prog_aux, ptr %12, i32 0, i32 7
  %13 = ptrtoint ptr %id4 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %id4, align 8
  call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.33, ptr noundef %8, i32 noundef %10, ptr noundef nonnull %prog_tag, i32 noundef %14) #19
  %ops = getelementptr inbounds %struct.bpf_link, ptr %1, i32 0, i32 3
  %15 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %ops, align 8
  %show_fdinfo = getelementptr inbounds %struct.bpf_link_ops, ptr %16, i32 0, i32 4
  %17 = ptrtoint ptr %show_fdinfo to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %show_fdinfo, align 4
  %tobool.not = icmp eq ptr %18, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  call void %18(ptr noundef %1, ptr noundef %m) #19
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 17, ptr nonnull %prog_tag) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__sys_bpf(i32 noundef %cmd, [2 x i32] %uattr.coerce, i32 noundef %size) unnamed_addr #0 align 64 {
entry:
  %attr = alloca %union.bpf_attr, align 8
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %uattr.coerce.fca.0.extract = extractvalue [2 x i32] %uattr.coerce, 0
  %0 = inttoptr i32 %uattr.coerce.fca.0.extract to ptr
  call void @llvm.lifetime.start.p0(i64 144, ptr nonnull %attr) #19
  %1 = load i32, ptr @sysctl_unprivileged_bpf_disabled, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.lhs.true

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

land.lhs.true:                                    ; preds = %entry
  %call.i = tail call zeroext i1 @capable(i32 noundef 39) #19
  br i1 %call.i, label %land.lhs.true.if.end_crit_edge, label %bpf_capable.exit

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

bpf_capable.exit:                                 ; preds = %land.lhs.true
  %call1.i = tail call zeroext i1 @capable(i32 noundef 21) #19
  br i1 %call1.i, label %bpf_capable.exit.if.end_crit_edge, label %bpf_capable.exit.cleanup_crit_edge

bpf_capable.exit.cleanup_crit_edge:               ; preds = %bpf_capable.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

bpf_capable.exit.if.end_crit_edge:                ; preds = %bpf_capable.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.end:                                           ; preds = %bpf_capable.exit.if.end_crit_edge, %land.lhs.true.if.end_crit_edge, %entry.if.end_crit_edge
  %uaddr.coerce.fca.1.extract.i = extractvalue [2 x i32] %uattr.coerce, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %size)
  %cmp.i = icmp ugt i32 %size, 4096
  br i1 %cmp.i, label %if.end.cleanup_crit_edge, label %if.end.i, !prof !219

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 144, i32 %size)
  %cmp2.not.i = icmp ugt i32 %size, 144
  br i1 %cmp2.not.i, label %if.end4.i, label %if.end.i.if.end4_crit_edge

if.end.i.if.end4_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end4

if.end4.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %uaddr.coerce.fca.1.extract.i)
  %bf.cast.not.i = icmp sgt i32 %uaddr.coerce.fca.1.extract.i, -1
  %add.ptr7.i = getelementptr i8, ptr %0, i32 144
  %sub8.i = add nsw i32 %size, -144
  br i1 %bf.cast.not.i, label %if.end10.i, label %if.end10.thread.i

if.end10.thread.i:                                ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i146 = tail call ptr @memchr_inv(ptr noundef %add.ptr7.i, i32 noundef 0, i32 noundef %sub8.i) #19
  %cmp6.i = icmp eq ptr %call.i146, null
  %conv.i = zext i1 %cmp6.i to i32
  br label %if.end14.i

if.end10.i:                                       ; preds = %if.end4.i
  %call9.i = tail call i32 @check_zeroed_user(ptr noundef %add.ptr7.i, i32 noundef %sub8.i) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %cmp11.i = icmp slt i32 %call9.i, 0
  br i1 %cmp11.i, label %if.end10.i.cleanup_crit_edge, label %if.end10.i.if.end14.i_crit_edge

if.end10.i.if.end14.i_crit_edge:                  ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end14.i

if.end10.i.cleanup_crit_edge:                     ; preds = %if.end10.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end14.i:                                       ; preds = %if.end10.i.if.end14.i_crit_edge, %if.end10.thread.i
  %res.029.i = phi i32 [ %conv.i, %if.end10.thread.i ], [ %call9.i, %if.end10.i.if.end14.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %res.029.i)
  %tobool15.not.i = icmp eq i32 %res.029.i, 0
  br i1 %tobool15.not.i, label %if.end14.i.cleanup_crit_edge, label %if.end14.i.if.end4_crit_edge

if.end14.i.if.end4_crit_edge:                     ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end4

if.end14.i.cleanup_crit_edge:                     ; preds = %if.end14.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end4:                                          ; preds = %if.end14.i.if.end4_crit_edge, %if.end.i.if.end4_crit_edge
  %2 = tail call i32 @llvm.umin.i32(i32 %size, i32 144)
  %3 = call ptr @memset(ptr %attr, i32 0, i32 144)
  %call5 = call fastcc i32 @copy_from_bpfptr(ptr noundef nonnull %attr, [2 x i32] %uattr.coerce, i32 noundef %2)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %cmp6.not = icmp eq i32 %call5, 0
  br i1 %cmp6.not, label %if.end8, label %if.end4.cleanup_crit_edge

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end8:                                          ; preds = %if.end4
  %call9 = call i32 @security_bpf(i32 noundef %cmd, ptr noundef nonnull %attr, i32 noundef %2) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %cmp10 = icmp slt i32 %call9, 0
  br i1 %cmp10, label %if.end8.cleanup_crit_edge, label %if.end12

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end12:                                         ; preds = %if.end8
  %4 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.71)
  switch i32 %cmd, label %if.end12.cleanup_crit_edge [
    i32 0, label %sw.bb
    i32 1, label %sw.bb14
    i32 2, label %sw.bb16
    i32 3, label %sw.bb18
    i32 4, label %sw.bb20
    i32 22, label %sw.bb22
    i32 5, label %sw.bb24
    i32 6, label %sw.bb26
    i32 7, label %sw.bb28
    i32 8, label %sw.bb30
    i32 9, label %sw.bb32
    i32 16, label %sw.bb34
    i32 10, label %sw.bb36
    i32 11, label %sw.bb38
    i32 12, label %sw.bb40
    i32 23, label %sw.bb42
    i32 13, label %sw.bb44
    i32 14, label %sw.bb46
    i32 15, label %sw.bb48
    i32 17, label %sw.bb50
    i32 18, label %sw.bb52
    i32 19, label %sw.bb54
    i32 20, label %sw.bb56
    i32 21, label %sw.bb58
    i32 24, label %sw.bb60
    i32 25, label %sw.bb62
    i32 26, label %sw.bb64
    i32 27, label %sw.bb66
    i32 28, label %sw.bb68
    i32 29, label %sw.bb70
    i32 30, label %sw.bb72
    i32 31, label %sw.bb74
    i32 32, label %sw.bb76
    i32 33, label %sw.bb78
    i32 34, label %sw.bb80
    i32 35, label %sw.bb82
  ]

if.end12.cleanup_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

sw.bb:                                            ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call13 = call fastcc i32 @map_create(ptr noundef nonnull %attr)
  br label %cleanup

sw.bb14:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call15 = call fastcc i32 @map_lookup_elem(ptr noundef nonnull %attr)
  br label %cleanup

sw.bb16:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call17 = call fastcc i32 @map_update_elem(ptr noundef nonnull %attr, [2 x i32] %uattr.coerce)
  br label %cleanup

sw.bb18:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call19 = call fastcc i32 @map_delete_elem(ptr noundef nonnull %attr)
  br label %cleanup

sw.bb20:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call21 = call fastcc i32 @map_get_next_key(ptr noundef nonnull %attr)
  br label %cleanup

sw.bb22:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call23 = call fastcc i32 @map_freeze(ptr noundef nonnull %attr)
  br label %cleanup

sw.bb24:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call25 = call fastcc i32 @bpf_prog_load(ptr noundef nonnull %attr, [2 x i32] %uattr.coerce)
  br label %cleanup

sw.bb26:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call27 = call fastcc i32 @bpf_obj_pin(ptr noundef nonnull %attr)
  br label %cleanup

sw.bb28:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call29 = call fastcc i32 @bpf_obj_get(ptr noundef nonnull %attr)
  br label %cleanup

sw.bb30:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call31 = call fastcc i32 @bpf_prog_attach(ptr noundef nonnull %attr)
  br label %cleanup

sw.bb32:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call33 = call fastcc i32 @bpf_prog_detach(ptr noundef nonnull %attr)
  br label %cleanup

sw.bb34:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call35 = call fastcc i32 @bpf_prog_query(ptr noundef nonnull %attr, ptr noundef %0)
  br label %cleanup

sw.bb36:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call37 = call fastcc i32 @bpf_prog_test_run(ptr noundef nonnull %attr, ptr noundef %0)
  br label %cleanup

sw.bb38:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call39 = call fastcc i32 @bpf_obj_get_next_id(ptr noundef nonnull %attr, ptr noundef %0, ptr noundef nonnull @prog_idr, ptr noundef nonnull @prog_idr_lock)
  br label %cleanup

sw.bb40:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call41 = call fastcc i32 @bpf_obj_get_next_id(ptr noundef nonnull %attr, ptr noundef %0, ptr noundef nonnull @map_idr, ptr noundef nonnull @map_idr_lock)
  br label %cleanup

sw.bb42:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call43 = call fastcc i32 @bpf_obj_get_next_id(ptr noundef nonnull %attr, ptr noundef %0, ptr noundef nonnull @btf_idr, ptr noundef nonnull @btf_idr_lock)
  br label %cleanup

sw.bb44:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call45 = call fastcc i32 @bpf_prog_get_fd_by_id(ptr noundef nonnull %attr)
  br label %cleanup

sw.bb46:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call47 = call fastcc i32 @bpf_map_get_fd_by_id(ptr noundef nonnull %attr)
  br label %cleanup

sw.bb48:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call49 = call fastcc i32 @bpf_obj_get_info_by_fd(ptr noundef nonnull %attr, ptr noundef %0)
  br label %cleanup

sw.bb50:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call51 = call fastcc i32 @bpf_raw_tracepoint_open(ptr noundef nonnull %attr)
  br label %cleanup

sw.bb52:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call53 = call fastcc i32 @bpf_btf_load(ptr noundef nonnull %attr, [2 x i32] %uattr.coerce)
  br label %cleanup

sw.bb54:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call55 = call fastcc i32 @bpf_btf_get_fd_by_id(ptr noundef nonnull %attr)
  br label %cleanup

sw.bb56:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call57 = call fastcc i32 @bpf_task_fd_query(ptr noundef nonnull %attr, ptr noundef %0)
  br label %cleanup

sw.bb58:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call59 = call fastcc i32 @map_lookup_and_delete_elem(ptr noundef nonnull %attr)
  br label %cleanup

sw.bb60:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call61 = call fastcc i32 @bpf_map_do_batch(ptr noundef nonnull %attr, ptr noundef %0, i32 noundef 24)
  br label %cleanup

sw.bb62:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call63 = call fastcc i32 @bpf_map_do_batch(ptr noundef nonnull %attr, ptr noundef %0, i32 noundef 25)
  br label %cleanup

sw.bb64:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call65 = call fastcc i32 @bpf_map_do_batch(ptr noundef nonnull %attr, ptr noundef %0, i32 noundef 26)
  br label %cleanup

sw.bb66:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call67 = call fastcc i32 @bpf_map_do_batch(ptr noundef nonnull %attr, ptr noundef %0, i32 noundef 27)
  br label %cleanup

sw.bb68:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call69 = call fastcc i32 @link_create(ptr noundef nonnull %attr, [2 x i32] %uattr.coerce)
  br label %cleanup

sw.bb70:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call71 = call fastcc i32 @link_update(ptr noundef nonnull %attr)
  br label %cleanup

sw.bb72:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call73 = call fastcc i32 @bpf_link_get_fd_by_id(ptr noundef nonnull %attr)
  br label %cleanup

sw.bb74:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call75 = call fastcc i32 @bpf_obj_get_next_id(ptr noundef nonnull %attr, ptr noundef %0, ptr noundef nonnull @link_idr, ptr noundef nonnull @link_idr_lock)
  br label %cleanup

sw.bb76:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call77 = call fastcc i32 @bpf_enable_stats(ptr noundef nonnull %attr)
  br label %cleanup

sw.bb78:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call79 = call fastcc i32 @bpf_iter_create(ptr noundef nonnull %attr)
  br label %cleanup

sw.bb80:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call81 = call fastcc i32 @link_detach(ptr noundef nonnull %attr)
  br label %cleanup

sw.bb82:                                          ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  %call83 = call fastcc i32 @bpf_prog_bind_map(ptr noundef nonnull %attr)
  br label %cleanup

cleanup:                                          ; preds = %sw.bb82, %sw.bb80, %sw.bb78, %sw.bb76, %sw.bb74, %sw.bb72, %sw.bb70, %sw.bb68, %sw.bb66, %sw.bb64, %sw.bb62, %sw.bb60, %sw.bb58, %sw.bb56, %sw.bb54, %sw.bb52, %sw.bb50, %sw.bb48, %sw.bb46, %sw.bb44, %sw.bb42, %sw.bb40, %sw.bb38, %sw.bb36, %sw.bb34, %sw.bb32, %sw.bb30, %sw.bb28, %sw.bb26, %sw.bb24, %sw.bb22, %sw.bb20, %sw.bb18, %sw.bb16, %sw.bb14, %sw.bb, %if.end12.cleanup_crit_edge, %if.end8.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end14.i.cleanup_crit_edge, %if.end10.i.cleanup_crit_edge, %if.end.cleanup_crit_edge, %bpf_capable.exit.cleanup_crit_edge
  %retval.0 = phi i32 [ -1, %bpf_capable.exit.cleanup_crit_edge ], [ -14, %if.end4.cleanup_crit_edge ], [ %call9, %if.end8.cleanup_crit_edge ], [ %call83, %sw.bb82 ], [ %call81, %sw.bb80 ], [ %call79, %sw.bb78 ], [ %call77, %sw.bb76 ], [ %call75, %sw.bb74 ], [ %call73, %sw.bb72 ], [ %call71, %sw.bb70 ], [ %call69, %sw.bb68 ], [ %call67, %sw.bb66 ], [ %call65, %sw.bb64 ], [ %call63, %sw.bb62 ], [ %call61, %sw.bb60 ], [ %call59, %sw.bb58 ], [ %call57, %sw.bb56 ], [ %call55, %sw.bb54 ], [ %call53, %sw.bb52 ], [ %call51, %sw.bb50 ], [ %call49, %sw.bb48 ], [ %call47, %sw.bb46 ], [ %call45, %sw.bb44 ], [ %call43, %sw.bb42 ], [ %call41, %sw.bb40 ], [ %call39, %sw.bb38 ], [ %call37, %sw.bb36 ], [ %call35, %sw.bb34 ], [ %call33, %sw.bb32 ], [ %call31, %sw.bb30 ], [ %call29, %sw.bb28 ], [ %call27, %sw.bb26 ], [ %call25, %sw.bb24 ], [ %call23, %sw.bb22 ], [ %call21, %sw.bb20 ], [ %call19, %sw.bb18 ], [ %call17, %sw.bb16 ], [ %call15, %sw.bb14 ], [ %call13, %sw.bb ], [ -22, %if.end12.cleanup_crit_edge ], [ %call9.i, %if.end10.i.cleanup_crit_edge ], [ -7, %if.end.cleanup_crit_edge ], [ -7, %if.end14.i.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 144, ptr nonnull %attr) #19
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @bpf_capable() unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %call = tail call zeroext i1 @capable(i32 noundef 39) #19
  br i1 %call, label %entry.lor.end_crit_edge, label %lor.rhs

entry.lor.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %lor.end

lor.rhs:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %call1 = tail call zeroext i1 @capable(i32 noundef 21) #19
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry.lor.end_crit_edge
  %0 = phi i1 [ true, %entry.lor.end_crit_edge ], [ %call1, %lor.rhs ]
  ret i1 %0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @copy_from_bpfptr(ptr noundef %dst, [2 x i32] %src.coerce, i32 noundef %size) unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %src.coerce.fca.0.extract.i.i = extractvalue [2 x i32] %src.coerce, 0
  %0 = inttoptr i32 %src.coerce.fca.0.extract.i.i to ptr
  %sockptr.coerce.fca.1.extract.i.i.i = extractvalue [2 x i32] %src.coerce, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sockptr.coerce.fca.1.extract.i.i.i)
  %bf.cast.i.i.i = icmp slt i32 %sockptr.coerce.fca.1.extract.i.i.i, 0
  br i1 %bf.cast.i.i.i, label %if.end.i.i, label %if.end8.i.i.i.i

if.end8.i.i.i.i:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %size)
  %cmp9.i.i.i.i = icmp slt i32 %size, 0
  br i1 %cmp9.i.i.i.i, label %land.rhs16.i.i.i.i, label %if.then.i.i.i.i.i

land.rhs16.i.i.i.i:                               ; preds = %if.end8.i.i.i.i
  %.b71.i.i.i.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i.i.i, label %land.rhs16.i.i.i.i.copy_from_bpfptr_offset.exit_crit_edge, label %if.then27.i.i.i.i, !prof !220

land.rhs16.i.i.i.i.copy_from_bpfptr_offset.exit_crit_edge: ; preds = %land.rhs16.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_from_bpfptr_offset.exit

if.then27.i.i.i.i:                                ; preds = %land.rhs16.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %copy_from_bpfptr_offset.exit

if.then.i.i.i.i.i:                                ; preds = %if.end8.i.i.i.i
  tail call void @__check_object_size(ptr noundef %dst, i32 noundef %size, i1 noundef zeroext false) #19
  tail call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 156) #19
  %call.i.i.i.i = tail call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i.i.i, label %if.then.i.i.i.i.i.if.end.i.i.i.i_crit_edge, label %land.lhs.true.i.i.i.i

if.then.i.i.i.i.i.if.end.i.i.i.i_crit_edge:       ; preds = %if.then.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %if.then.i.i.i.i.i
  %1 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %0, i32 %size, i32 -1226833920) #23, !srcloc !234
  %asmresult.i.i.i.i = extractvalue { i32, i32 } %1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i)
  %cmp.i6.i.i.i = icmp eq i32 %asmresult.i.i.i.i, 0
  br i1 %cmp.i6.i.i.i, label %if.then.i7.i.i.i, label %land.lhs.true.i.i.i.i.if.end.i.i.i.i_crit_edge, !prof !220

land.lhs.true.i.i.i.i.if.end.i.i.i.i_crit_edge:   ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i.i.i.i

if.then.i7.i.i.i:                                 ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %dst, i32 noundef %size) #19
  %2 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 4
  %4 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i.i) #10, !srcloc !235
  %and.i.i.i.i.i.i = and i32 %4, -13
  %or.i.i.i.i.i.i = or i32 %and.i.i.i.i.i.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i.i) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %call1.i.i.i.i.i = tail call i32 @arm_copy_from_user(ptr noundef %dst, ptr noundef %0, i32 noundef %size) #19
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %4) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  br label %if.end.i.i.i.i

if.end.i.i.i.i:                                   ; preds = %if.then.i7.i.i.i, %land.lhs.true.i.i.i.i.if.end.i.i.i.i_crit_edge, %if.then.i.i.i.i.i.if.end.i.i.i.i_crit_edge
  %res.0.i.i.i.i = phi i32 [ %size, %if.then.i.i.i.i.i.if.end.i.i.i.i_crit_edge ], [ %call1.i.i.i.i.i, %if.then.i7.i.i.i ], [ %size, %land.lhs.true.i.i.i.i.if.end.i.i.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %res.0.i.i.i.i)
  %tobool4.not.i.i.i.i = icmp eq i32 %res.0.i.i.i.i, 0
  br i1 %tobool4.not.i.i.i.i, label %if.end.i.i.i.i.copy_from_bpfptr_offset.exit_crit_edge, label %if.then11.i.i.i.i, !prof !220

if.end.i.i.i.i.copy_from_bpfptr_offset.exit_crit_edge: ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_from_bpfptr_offset.exit

if.then11.i.i.i.i:                                ; preds = %if.end.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %sub.i.i.i.i = sub i32 %size, %res.0.i.i.i.i
  %add.ptr.i.i.i.i = getelementptr i8, ptr %dst, i32 %sub.i.i.i.i
  %5 = call ptr @memset(ptr %add.ptr.i.i.i.i, i32 0, i32 %res.0.i.i.i.i)
  br label %copy_from_bpfptr_offset.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %6 = call ptr @memcpy(ptr %dst, ptr %0, i32 %size)
  br label %copy_from_bpfptr_offset.exit

copy_from_bpfptr_offset.exit:                     ; preds = %if.end.i.i, %if.then11.i.i.i.i, %if.end.i.i.i.i.copy_from_bpfptr_offset.exit_crit_edge, %if.then27.i.i.i.i, %land.rhs16.i.i.i.i.copy_from_bpfptr_offset.exit_crit_edge
  %retval.0.i.i = phi i32 [ 0, %if.end.i.i ], [ 0, %if.end.i.i.i.i.copy_from_bpfptr_offset.exit_crit_edge ], [ %res.0.i.i.i.i, %if.then11.i.i.i.i ], [ %size, %if.then27.i.i.i.i ], [ %size, %land.rhs16.i.i.i.i.copy_from_bpfptr_offset.exit_crit_edge ]
  ret i32 %retval.0.i.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_bpf(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @map_create(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %map_flags.i = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 4
  %0 = ptrtoint ptr %map_flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %map_flags.i, align 8
  %and.i = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.bpf_map_attr_numa_node.exit_crit_edge, label %cond.true.i

entry.bpf_map_attr_numa_node.exit_crit_edge:      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_attr_numa_node.exit

cond.true.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %numa_node.i = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 6
  %2 = ptrtoint ptr %numa_node.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %numa_node.i, align 8
  br label %bpf_map_attr_numa_node.exit

bpf_map_attr_numa_node.exit:                      ; preds = %cond.true.i, %entry.bpf_map_attr_numa_node.exit_crit_edge
  %cond.i = phi i32 [ %3, %cond.true.i ], [ -1, %entry.bpf_map_attr_numa_node.exit_crit_edge ]
  %map_extra = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 13
  %add.ptr = getelementptr %struct.anon, ptr %attr, i32 1
  %call1 = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 72) #19
  %cmp.not = icmp eq ptr %call1, null
  br i1 %cmp.not, label %if.end, label %bpf_map_attr_numa_node.exit.cleanup102_crit_edge

bpf_map_attr_numa_node.exit.cleanup102_crit_edge: ; preds = %bpf_map_attr_numa_node.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup102

if.end:                                           ; preds = %bpf_map_attr_numa_node.exit
  %btf_vmlinux_value_type_id = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 12
  %4 = ptrtoint ptr %btf_vmlinux_value_type_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %btf_vmlinux_value_type_id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool2.not = icmp eq i32 %5, 0
  br i1 %tobool2.not, label %if.else, label %if.then3

if.then3:                                         ; preds = %if.end
  %6 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %attr, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 26, i32 %7)
  %cmp4.not = icmp eq i32 %7, 26
  br i1 %cmp4.not, label %lor.lhs.false, label %if.then3.cleanup102_crit_edge

if.then3.cleanup102_crit_edge:                    ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup102

lor.lhs.false:                                    ; preds = %if.then3
  %btf_key_type_id = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 10
  %8 = ptrtoint ptr %btf_key_type_id to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %btf_key_type_id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %tobool6.not = icmp eq i32 %9, 0
  br i1 %tobool6.not, label %lor.lhs.false7, label %lor.lhs.false.cleanup102_crit_edge

lor.lhs.false.cleanup102_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup102

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %btf_value_type_id = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 11
  %10 = ptrtoint ptr %btf_value_type_id to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %btf_value_type_id, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool8.not = icmp eq i32 %11, 0
  br i1 %tobool8.not, label %lor.lhs.false7.if.end17_crit_edge, label %lor.lhs.false7.cleanup102_crit_edge

lor.lhs.false7.cleanup102_crit_edge:              ; preds = %lor.lhs.false7
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup102

lor.lhs.false7.if.end17_crit_edge:                ; preds = %lor.lhs.false7
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end17

if.else:                                          ; preds = %if.end
  %btf_key_type_id11 = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 10
  %12 = ptrtoint ptr %btf_key_type_id11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %btf_key_type_id11, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool12.not = icmp eq i32 %13, 0
  br i1 %tobool12.not, label %if.else.if.end17_crit_edge, label %land.lhs.true

if.else.if.end17_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end17

land.lhs.true:                                    ; preds = %if.else
  %btf_value_type_id13 = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 11
  %14 = ptrtoint ptr %btf_value_type_id13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %btf_value_type_id13, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool14.not = icmp eq i32 %15, 0
  br i1 %tobool14.not, label %land.lhs.true.cleanup102_crit_edge, label %land.lhs.true.if.end17_crit_edge

land.lhs.true.if.end17_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end17

land.lhs.true.cleanup102_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup102

if.end17:                                         ; preds = %land.lhs.true.if.end17_crit_edge, %if.else.if.end17_crit_edge, %lor.lhs.false7.if.end17_crit_edge
  %16 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %attr, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 30, i32 %17)
  %cmp19.not = icmp eq i32 %17, 30
  br i1 %cmp19.not, label %if.end17.if.end26_crit_edge, label %land.lhs.true21

if.end17.if.end26_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end26

land.lhs.true21:                                  ; preds = %if.end17
  %18 = ptrtoint ptr %map_extra to i32
  call void @__asan_load8_noabort(i32 %18)
  %19 = load i64, ptr %map_extra, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %19)
  %cmp23.not = icmp eq i64 %19, 0
  br i1 %cmp23.not, label %land.lhs.true21.if.end26_crit_edge, label %land.lhs.true21.cleanup102_crit_edge

land.lhs.true21.cleanup102_crit_edge:             ; preds = %land.lhs.true21
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup102

land.lhs.true21.if.end26_crit_edge:               ; preds = %land.lhs.true21
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end26

if.end26:                                         ; preds = %land.lhs.true21.if.end26_crit_edge, %if.end17.if.end26_crit_edge
  %20 = ptrtoint ptr %map_flags.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %map_flags.i, align 8
  %and.i168 = and i32 %21, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i168)
  %tobool.not.not.i = icmp eq i32 %and.i168, 0
  %and1.i = and i32 %21, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool2.not.i = icmp eq i32 %and1.i, 0
  %22 = and i32 %21, 24
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %22)
  %.not.i = icmp eq i32 %22, 24
  %.mux.i = select i1 %.not.i, i32 -22, i32 0
  %..i = select i1 %tobool2.not.i, i32 2, i32 1
  %retval.0.i = select i1 %tobool.not.not.i, i32 %..i, i32 %.mux.i
  %not.tobool.not.not.i = xor i1 %tobool.not.not.i, true
  %cmp28 = select i1 %not.tobool.not.not.i, i1 %.not.i, i1 false
  br i1 %cmp28, label %if.end26.cleanup102_crit_edge, label %if.end31

if.end26.cleanup102_crit_edge:                    ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup102

if.end31:                                         ; preds = %if.end26
  %23 = zext i32 %cond.i to i64
  call void @__sanitizer_cov_trace_switch(i64 %23, ptr @__sancov_gen_cov_switch_values.72)
  switch i32 %cond.i, label %if.end31.cleanup102_crit_edge [
    i32 -1, label %if.end31.if.end41_crit_edge
    i32 0, label %if.end31.if.end41_crit_edge180
  ]

if.end31.if.end41_crit_edge180:                   ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end41

if.end31.if.end41_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end41

if.end31.cleanup102_crit_edge:                    ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup102

if.end41:                                         ; preds = %if.end31.if.end41_crit_edge, %if.end31.if.end41_crit_edge180
  call void @__sanitizer_cov_trace_const_cmp4(i32 30, i32 %17)
  %cmp.i = icmp ugt i32 %17, 30
  br i1 %cmp.i, label %if.end41.if.then44_crit_edge, label %if.end.i

if.end41.if.then44_crit_edge:                     ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then44

if.end.i:                                         ; preds = %if.end41
  %24 = tail call i32 asm sideeffect "cmp\09$1, $2\0A\09sbc\09$0, $1, $1\0A", "=r,r,Ir,~{cc}"(i32 %17, i32 31) #19, !srcloc !263
  %and.i169 = and i32 %24, %17
  %arrayidx.i = getelementptr [31 x ptr], ptr @bpf_map_types, i32 0, i32 %and.i169
  %25 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %arrayidx.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i169)
  %tobool.not.i170 = icmp eq i32 %and.i169, 0
  br i1 %tobool.not.i170, label %if.end.i.if.then44_crit_edge, label %if.end7.i

if.end.i.if.then44_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then44

if.end7.i:                                        ; preds = %if.end.i
  %27 = ptrtoint ptr %26 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %26, align 4
  %tobool8.not.i = icmp eq ptr %28, null
  br i1 %tobool8.not.i, label %if.end7.i.if.end16.i_crit_edge, label %if.then9.i

if.end7.i.if.end16.i_crit_edge:                   ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end16.i

if.then9.i:                                       ; preds = %if.end7.i
  %call11.i = tail call i32 %28(ptr noundef %attr) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11.i)
  %tobool12.not.i = icmp eq i32 %call11.i, 0
  br i1 %tobool12.not.i, label %if.then9.i.if.end16.i_crit_edge, label %if.then13.i

if.then9.i.if.end16.i_crit_edge:                  ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end16.i

if.then13.i:                                      ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #21
  %29 = inttoptr i32 %call11.i to ptr
  br label %find_and_alloc_map.exit

if.end16.i:                                       ; preds = %if.then9.i.if.end16.i_crit_edge, %if.end7.i.if.end16.i_crit_edge
  %map_ifindex.i = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 8
  %30 = ptrtoint ptr %map_ifindex.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %map_ifindex.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool17.not.i = icmp eq i32 %31, 0
  %spec.select.i = select i1 %tobool17.not.i, ptr %26, ptr @bpf_map_offload_ops
  %map_alloc.i = getelementptr inbounds %struct.bpf_map_ops, ptr %spec.select.i, i32 0, i32 1
  %32 = ptrtoint ptr %map_alloc.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %map_alloc.i, align 4
  %call20.i = tail call ptr %33(ptr noundef %attr) #19
  %cmp.i.i = icmp ugt ptr %call20.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.end16.i.find_and_alloc_map.exit_crit_edge, label %if.end23.i

if.end16.i.find_and_alloc_map.exit_crit_edge:     ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %find_and_alloc_map.exit

if.end23.i:                                       ; preds = %if.end16.i
  call void @__sanitizer_cov_trace_pc() #21
  %34 = ptrtoint ptr %call20.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %spec.select.i, ptr %call20.i, align 128
  %map_type25.i = getelementptr inbounds %struct.bpf_map, ptr %call20.i, i32 0, i32 3
  %35 = ptrtoint ptr %map_type25.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 %and.i169, ptr %map_type25.i, align 4
  br label %find_and_alloc_map.exit

find_and_alloc_map.exit:                          ; preds = %if.end23.i, %if.end16.i.find_and_alloc_map.exit_crit_edge, %if.then13.i
  %retval.0.i171 = phi ptr [ %29, %if.then13.i ], [ %call20.i, %if.end23.i ], [ %call20.i, %if.end16.i.find_and_alloc_map.exit_crit_edge ]
  %cmp.i172 = icmp ugt ptr %retval.0.i171, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i172, label %find_and_alloc_map.exit.if.then44_crit_edge, label %if.end46

find_and_alloc_map.exit.if.then44_crit_edge:      ; preds = %find_and_alloc_map.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then44

if.then44:                                        ; preds = %find_and_alloc_map.exit.if.then44_crit_edge, %if.end.i.if.then44_crit_edge, %if.end41.if.then44_crit_edge
  %retval.0.i171176 = phi ptr [ %retval.0.i171, %find_and_alloc_map.exit.if.then44_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end41.if.then44_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end.i.if.then44_crit_edge ]
  %36 = ptrtoint ptr %retval.0.i171176 to i32
  br label %cleanup102

if.end46:                                         ; preds = %find_and_alloc_map.exit
  %name = getelementptr inbounds %struct.bpf_map, ptr %retval.0.i171, i32 0, i32 18
  %map_name = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 7
  %call48 = tail call i32 @bpf_obj_name_cpy(ptr noundef %name, ptr noundef %map_name, i32 noundef 16)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call48)
  %cmp49 = icmp slt i32 %call48, 0
  br i1 %cmp49, label %if.end46.free_map_crit_edge, label %if.end52

if.end46.free_map_crit_edge:                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_map

if.end52:                                         ; preds = %if.end46
  %refcnt = getelementptr inbounds %struct.bpf_map, ptr %retval.0.i171, i32 0, i32 22
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt, i32 noundef 8) #19
  tail call void @generic_atomic64_set(ptr noundef %refcnt, i64 noundef 1) #19
  %usercnt = getelementptr inbounds %struct.bpf_map, ptr %retval.0.i171, i32 0, i32 23
  %call.i.i167 = tail call zeroext i1 @__kasan_check_write(ptr noundef %usercnt, i32 noundef 8) #19
  tail call void @generic_atomic64_set(ptr noundef %usercnt, i64 noundef 1) #19
  %freeze_mutex = getelementptr inbounds %struct.bpf_map, ptr %retval.0.i171, i32 0, i32 25
  tail call void @__mutex_init(ptr noundef %freeze_mutex, ptr noundef nonnull @.str.50, ptr noundef nonnull @map_create.__key) #19
  %spin_lock_off = getelementptr inbounds %struct.bpf_map, ptr %retval.0.i171, i32 0, i32 9
  %37 = ptrtoint ptr %spin_lock_off to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 -22, ptr %spin_lock_off, align 4
  %timer_off = getelementptr inbounds %struct.bpf_map, ptr %retval.0.i171, i32 0, i32 10
  %38 = ptrtoint ptr %timer_off to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 -22, ptr %timer_off, align 16
  %btf_key_type_id53 = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 10
  %39 = ptrtoint ptr %btf_key_type_id53 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %btf_key_type_id53, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool54.not = icmp eq i32 %40, 0
  br i1 %tobool54.not, label %lor.lhs.false55, label %if.end52.if.then61_crit_edge

if.end52.if.then61_crit_edge:                     ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then61

lor.lhs.false55:                                  ; preds = %if.end52
  %btf_value_type_id56 = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 11
  %41 = ptrtoint ptr %btf_value_type_id56 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %btf_value_type_id56, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool57.not = icmp eq i32 %42, 0
  br i1 %tobool57.not, label %lor.lhs.false58, label %lor.lhs.false55.if.then61_crit_edge

lor.lhs.false55.if.then61_crit_edge:              ; preds = %lor.lhs.false55
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then61

lor.lhs.false58:                                  ; preds = %lor.lhs.false55
  %43 = ptrtoint ptr %btf_vmlinux_value_type_id to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %btf_vmlinux_value_type_id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool60.not = icmp eq i32 %44, 0
  br i1 %tobool60.not, label %lor.lhs.false58.if.end87_crit_edge, label %lor.lhs.false58.if.then61_crit_edge

lor.lhs.false58.if.then61_crit_edge:              ; preds = %lor.lhs.false58
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then61

lor.lhs.false58.if.end87_crit_edge:               ; preds = %lor.lhs.false58
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end87

if.then61:                                        ; preds = %lor.lhs.false58.if.then61_crit_edge, %lor.lhs.false55.if.then61_crit_edge, %if.end52.if.then61_crit_edge
  %btf_fd = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 9
  %45 = ptrtoint ptr %btf_fd to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %btf_fd, align 8
  %call62 = tail call ptr @btf_get_by_fd(i32 noundef %46) #19
  %cmp.i173 = icmp ugt ptr %call62, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i173, label %if.then64, label %if.end66

if.then64:                                        ; preds = %if.then61
  call void @__sanitizer_cov_trace_pc() #21
  %47 = ptrtoint ptr %call62 to i32
  br label %free_map

if.end66:                                         ; preds = %if.then61
  %call67 = tail call zeroext i1 @btf_is_kernel(ptr noundef %call62) #19
  br i1 %call67, label %if.then68, label %if.end69

if.then68:                                        ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @btf_put(ptr noundef %call62) #19
  br label %free_map

if.end69:                                         ; preds = %if.end66
  %btf70 = getelementptr inbounds %struct.bpf_map, ptr %retval.0.i171, i32 0, i32 16
  %48 = ptrtoint ptr %btf70 to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %call62, ptr %btf70, align 8
  %btf_value_type_id71 = getelementptr inbounds %struct.anon, ptr %attr, i32 0, i32 11
  %49 = ptrtoint ptr %btf_value_type_id71 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %btf_value_type_id71, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %50)
  %tobool72.not = icmp eq i32 %50, 0
  br i1 %tobool72.not, label %if.end69.cleanup_crit_edge, label %if.then73

if.end69.cleanup_crit_edge:                       ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then73:                                        ; preds = %if.end69
  %51 = ptrtoint ptr %btf_key_type_id53 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load i32, ptr %btf_key_type_id53, align 4
  %call76 = tail call fastcc i32 @map_check_btf(ptr noundef %retval.0.i171, ptr noundef %call62, i32 noundef %52, i32 noundef %50)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call76)
  %tobool77.not = icmp eq i32 %call76, 0
  br i1 %tobool77.not, label %if.then73.cleanup_crit_edge, label %if.then73.free_map_crit_edge

if.then73.free_map_crit_edge:                     ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_map

if.then73.cleanup_crit_edge:                      ; preds = %if.then73
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

cleanup:                                          ; preds = %if.then73.cleanup_crit_edge, %if.end69.cleanup_crit_edge
  %53 = ptrtoint ptr %btf_key_type_id53 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %btf_key_type_id53, align 4
  %btf_key_type_id82 = getelementptr inbounds %struct.bpf_map, ptr %retval.0.i171, i32 0, i32 13
  %55 = ptrtoint ptr %btf_key_type_id82 to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %54, ptr %btf_key_type_id82, align 4
  %56 = ptrtoint ptr %btf_value_type_id71 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load i32, ptr %btf_value_type_id71, align 8
  %btf_value_type_id84 = getelementptr inbounds %struct.bpf_map, ptr %retval.0.i171, i32 0, i32 14
  %58 = ptrtoint ptr %btf_value_type_id84 to i32
  call void @__asan_store4_noabort(i32 %58)
  store i32 %57, ptr %btf_value_type_id84, align 64
  %59 = ptrtoint ptr %btf_vmlinux_value_type_id to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %btf_vmlinux_value_type_id, align 4
  %btf_vmlinux_value_type_id86 = getelementptr inbounds %struct.bpf_map, ptr %retval.0.i171, i32 0, i32 15
  %61 = ptrtoint ptr %btf_vmlinux_value_type_id86 to i32
  call void @__asan_store4_noabort(i32 %61)
  store i32 %60, ptr %btf_vmlinux_value_type_id86, align 4
  br label %if.end87

if.end87:                                         ; preds = %cleanup, %lor.lhs.false58.if.end87_crit_edge
  %call88 = tail call i32 @security_bpf_map_alloc(ptr noundef %retval.0.i171) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call88)
  %tobool89.not = icmp eq i32 %call88, 0
  br i1 %tobool89.not, label %if.end91, label %if.end87.free_map_crit_edge

if.end87.free_map_crit_edge:                      ; preds = %if.end87
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_map

if.end91:                                         ; preds = %if.end87
  %call92 = tail call fastcc i32 @bpf_map_alloc_id(ptr noundef %retval.0.i171)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call92)
  %tobool93.not = icmp eq i32 %call92, 0
  br i1 %tobool93.not, label %if.end95, label %free_map_sec

if.end95:                                         ; preds = %if.end91
  %62 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i = and i32 %62, -16384
  %63 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %63, i32 0, i32 2
  %64 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %task.i, align 8
  %mm.i = getelementptr inbounds %struct.task_struct, ptr %65, i32 0, i32 53
  %66 = ptrtoint ptr %mm.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %mm.i, align 8
  %call1.i = tail call ptr @get_mem_cgroup_from_mm(ptr noundef %67) #19
  %memcg.i = getelementptr inbounds %struct.bpf_map, ptr %retval.0.i171, i32 0, i32 17
  %68 = ptrtoint ptr %memcg.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %call1.i, ptr %memcg.i, align 4
  %call96 = tail call i32 @bpf_map_new_fd(ptr noundef %retval.0.i171, i32 noundef %retval.0.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call96)
  %cmp97 = icmp slt i32 %call96, 0
  br i1 %cmp97, label %if.then99, label %if.end95.cleanup102_crit_edge

if.end95.cleanup102_crit_edge:                    ; preds = %if.end95
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup102

if.then99:                                        ; preds = %if.end95
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @bpf_map_put_with_uref(ptr noundef %retval.0.i171)
  br label %cleanup102

free_map_sec:                                     ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @security_bpf_map_free(ptr noundef %retval.0.i171) #19
  br label %free_map

free_map:                                         ; preds = %free_map_sec, %if.end87.free_map_crit_edge, %if.then73.free_map_crit_edge, %if.then68, %if.then64, %if.end46.free_map_crit_edge
  %err.2 = phi i32 [ %call48, %if.end46.free_map_crit_edge ], [ %call88, %if.end87.free_map_crit_edge ], [ %call92, %free_map_sec ], [ %call76, %if.then73.free_map_crit_edge ], [ -13, %if.then68 ], [ %47, %if.then64 ]
  %btf101 = getelementptr inbounds %struct.bpf_map, ptr %retval.0.i171, i32 0, i32 16
  %69 = ptrtoint ptr %btf101 to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %btf101, align 8
  tail call void @btf_put(ptr noundef %70) #19
  %71 = ptrtoint ptr %retval.0.i171 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %retval.0.i171, align 128
  %map_free = getelementptr inbounds %struct.bpf_map_ops, ptr %72, i32 0, i32 3
  %73 = ptrtoint ptr %map_free to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %map_free, align 4
  tail call void %74(ptr noundef %retval.0.i171) #19
  br label %cleanup102

cleanup102:                                       ; preds = %free_map, %if.then99, %if.end95.cleanup102_crit_edge, %if.then44, %if.end31.cleanup102_crit_edge, %if.end26.cleanup102_crit_edge, %land.lhs.true21.cleanup102_crit_edge, %land.lhs.true.cleanup102_crit_edge, %lor.lhs.false7.cleanup102_crit_edge, %lor.lhs.false.cleanup102_crit_edge, %if.then3.cleanup102_crit_edge, %bpf_map_attr_numa_node.exit.cleanup102_crit_edge
  %retval.0 = phi i32 [ %36, %if.then44 ], [ %err.2, %free_map ], [ %call96, %if.then99 ], [ -22, %bpf_map_attr_numa_node.exit.cleanup102_crit_edge ], [ -22, %lor.lhs.false7.cleanup102_crit_edge ], [ -22, %lor.lhs.false.cleanup102_crit_edge ], [ -22, %if.then3.cleanup102_crit_edge ], [ -22, %land.lhs.true.cleanup102_crit_edge ], [ -22, %land.lhs.true21.cleanup102_crit_edge ], [ %retval.0.i, %if.end26.cleanup102_crit_edge ], [ -22, %if.end31.cleanup102_crit_edge ], [ %call96, %if.end95.cleanup102_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @map_lookup_elem(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %key = getelementptr inbounds %struct.anon.0, ptr %attr, i32 0, i32 1
  %0 = ptrtoint ptr %key to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %key, align 8
  %conv2 = trunc i64 %1 to i32
  %2 = inttoptr i32 %conv2 to ptr
  %3 = getelementptr inbounds %struct.anon.0, ptr %attr, i32 0, i32 2
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %3, align 8
  %conv9 = trunc i64 %5 to i32
  %6 = inttoptr i32 %conv9 to ptr
  %7 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %attr, align 8
  %flags = getelementptr inbounds %struct.anon.0, ptr %attr, i32 0, i32 3
  %add.ptr = getelementptr %struct.anon.0, ptr %attr, i32 1
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 112) #19
  %cmp11.not = icmp eq ptr %call, null
  br i1 %cmp11.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %flags, align 8
  %and = and i64 %10, -5
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.end15, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end15:                                         ; preds = %if.end
  %call.i = tail call i32 @__fdget(i32 noundef %8) #19, !noalias !264
  %and.i.i = and i32 %call.i, -4
  %11 = inttoptr i32 %and.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %if.end15.if.then19_crit_edge, label %if.end.i

if.end15.if.then19_crit_edge:                     ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then19

if.end.i:                                         ; preds = %if.end15
  %f_op.i = getelementptr inbounds %struct.file, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %f_op.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %f_op.i, align 4
  %cmp.not.i = icmp eq ptr %13, @bpf_map_fops
  br i1 %cmp.not.i, label %__bpf_map_get.exit, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  %and.i.i134 = and i32 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i134)
  %tobool.not.i.i = icmp eq i32 %and.i.i134, 0
  br i1 %tobool.not.i.i, label %if.then2.i.if.then19_crit_edge, label %if.then.i.i135

if.then2.i.if.then19_crit_edge:                   ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then19

if.then.i.i135:                                   ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @fput(ptr noundef nonnull %11) #19
  br label %if.then19

__bpf_map_get.exit:                               ; preds = %if.end.i
  %private_data.i = getelementptr inbounds %struct.file, ptr %11, i32 0, i32 16
  %14 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %private_data.i, align 4
  %cmp.i = icmp ugt ptr %15, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %__bpf_map_get.exit.if.then19_crit_edge, label %if.end21

__bpf_map_get.exit.if.then19_crit_edge:           ; preds = %__bpf_map_get.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then19

if.then19:                                        ; preds = %__bpf_map_get.exit.if.then19_crit_edge, %if.then.i.i135, %if.then2.i.if.then19_crit_edge, %if.end15.if.then19_crit_edge
  %retval.0.i152 = phi ptr [ %15, %__bpf_map_get.exit.if.then19_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then.i.i135 ], [ inttoptr (i32 -22 to ptr), %if.then2.i.if.then19_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.end15.if.then19_crit_edge ]
  %16 = ptrtoint ptr %retval.0.i152 to i32
  br label %cleanup

if.end21:                                         ; preds = %__bpf_map_get.exit
  %f_mode.i = getelementptr inbounds %struct.file, ptr %11, i32 0, i32 8
  %17 = ptrtoint ptr %f_mode.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %f_mode.i, align 8
  %frozen.i = getelementptr inbounds %struct.bpf_map, ptr %15, i32 0, i32 20
  %19 = ptrtoint ptr %frozen.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load volatile i8, ptr %frozen.i, align 1, !range !227
  %and23 = and i32 %18, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23)
  %tobool24.not = icmp eq i32 %and23, 0
  br i1 %tobool24.not, label %if.end21.err_put_crit_edge, label %if.end26

if.end21.err_put_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #21
  br label %err_put

if.end26:                                         ; preds = %if.end21
  %21 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %21)
  %22 = load i64, ptr %flags, align 8
  %and28 = and i64 %22, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and28)
  %tobool29.not = icmp eq i64 %and28, 0
  br i1 %tobool29.not, label %if.end26.if.end32_crit_edge, label %land.lhs.true

if.end26.if.end32_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end32

land.lhs.true:                                    ; preds = %if.end26
  %spin_lock_off.i = getelementptr inbounds %struct.bpf_map, ptr %15, i32 0, i32 9
  %23 = ptrtoint ptr %spin_lock_off.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %spin_lock_off.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %24)
  %cmp.i137 = icmp sgt i32 %24, -1
  br i1 %cmp.i137, label %land.lhs.true.if.end32_crit_edge, label %land.lhs.true.err_put_crit_edge

land.lhs.true.err_put_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %err_put

land.lhs.true.if.end32_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end32

if.end32:                                         ; preds = %land.lhs.true.if.end32_crit_edge, %if.end26.if.end32_crit_edge
  %key_size = getelementptr inbounds %struct.bpf_map, ptr %15, i32 0, i32 4
  %25 = ptrtoint ptr %key_size to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %key_size, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.not.i138 = icmp eq i32 %26, 0
  br i1 %tobool.not.i138, label %if.end.i142, label %__bpf_copy_key.exit

if.end.i142:                                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv2)
  %tobool1.not.i = icmp eq i32 %conv2, 0
  br i1 %tobool1.not.i, label %if.end.i142.if.end38_crit_edge, label %if.end.i142.if.then36_crit_edge

if.end.i142.if.then36_crit_edge:                  ; preds = %if.end.i142
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then36

if.end.i142.if.end38_crit_edge:                   ; preds = %if.end.i142
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end38

__bpf_copy_key.exit:                              ; preds = %if.end32
  %call.i139 = tail call ptr @vmemdup_user(ptr noundef %2, i32 noundef %26) #19
  %cmp.i144 = icmp ugt ptr %call.i139, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i144, label %__bpf_copy_key.exit.if.then36_crit_edge, label %__bpf_copy_key.exit.if.end38_crit_edge

__bpf_copy_key.exit.if.end38_crit_edge:           ; preds = %__bpf_copy_key.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end38

__bpf_copy_key.exit.if.then36_crit_edge:          ; preds = %__bpf_copy_key.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then36

if.then36:                                        ; preds = %__bpf_copy_key.exit.if.then36_crit_edge, %if.end.i142.if.then36_crit_edge
  %retval.0.i143157 = phi ptr [ %call.i139, %__bpf_copy_key.exit.if.then36_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end.i142.if.then36_crit_edge ]
  %27 = ptrtoint ptr %retval.0.i143157 to i32
  br label %err_put

if.end38:                                         ; preds = %__bpf_copy_key.exit.if.end38_crit_edge, %if.end.i142.if.end38_crit_edge
  %retval.0.i143161 = phi ptr [ %call.i139, %__bpf_copy_key.exit.if.end38_crit_edge ], [ null, %if.end.i142.if.end38_crit_edge ]
  %call39 = tail call fastcc i32 @bpf_map_value_size(ptr noundef %15)
  %call.i145 = tail call noalias ptr @kvmalloc_node(i32 noundef %call39, i32 noundef 1060032, i32 noundef -1) #22
  %tobool41.not = icmp eq ptr %call.i145, null
  br i1 %tobool41.not, label %if.end38.free_key_crit_edge, label %if.end43

if.end38.free_key_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_key

if.end43:                                         ; preds = %if.end38
  %map_type = getelementptr inbounds %struct.bpf_map, ptr %15, i32 0, i32 3
  %28 = ptrtoint ptr %map_type to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %map_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 30, i32 %29)
  %cmp44 = icmp eq i32 %29, 30
  br i1 %cmp44, label %if.end8.i.i, label %if.end53

if.end8.i.i:                                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call39)
  %cmp9.i.i = icmp slt i32 %call39, 0
  br i1 %cmp9.i.i, label %land.rhs16.i.i, label %if.then.i.i.i

land.rhs16.i.i:                                   ; preds = %if.end8.i.i
  %.b71.i.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i, label %land.rhs16.i.i.free_value_crit_edge, label %if.then27.i.i, !prof !220

land.rhs16.i.i.free_value_crit_edge:              ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_value

if.then27.i.i:                                    ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %free_value

if.then.i.i.i:                                    ; preds = %if.end8.i.i
  tail call void @__check_object_size(ptr noundef nonnull %call.i145, i32 noundef %call39, i1 noundef zeroext false) #19
  tail call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 156) #19
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i, label %if.then.i.i.i.if.end.i.i_crit_edge, label %land.lhs.true.i.i

if.then.i.i.i.if.end.i.i_crit_edge:               ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i.i

land.lhs.true.i.i:                                ; preds = %if.then.i.i.i
  %30 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %6, i32 %call39, i32 -1226833920) #23, !srcloc !234
  %asmresult.i.i = extractvalue { i32, i32 } %30, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.then.i7.i, label %land.lhs.true.i.i.if.end.i.i_crit_edge, !prof !220

land.lhs.true.i.i.if.end.i.i_crit_edge:           ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i.i

if.then.i7.i:                                     ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call.i145, i32 noundef %call39) #19
  %31 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i.i = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 4
  %33 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i) #10, !srcloc !235
  %and.i.i.i.i = and i32 %33, -13
  %or.i.i.i.i = or i32 %and.i.i.i.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %call1.i.i.i = tail call i32 @arm_copy_from_user(ptr noundef nonnull %call.i145, ptr noundef %6, i32 noundef %call39) #19
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %33) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i7.i, %land.lhs.true.i.i.if.end.i.i_crit_edge, %if.then.i.i.i.if.end.i.i_crit_edge
  %res.0.i.i = phi i32 [ %call39, %if.then.i.i.i.if.end.i.i_crit_edge ], [ %call1.i.i.i, %if.then.i7.i ], [ %call39, %land.lhs.true.i.i.if.end.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %res.0.i.i)
  %tobool4.not.i.i = icmp eq i32 %res.0.i.i, 0
  br i1 %tobool4.not.i.i, label %if.else, label %if.then11.i.i, !prof !220

if.then11.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %sub.i.i = sub i32 %call39, %res.0.i.i
  %add.ptr.i.i = getelementptr i8, ptr %call.i145, i32 %sub.i.i
  %34 = call ptr @memset(ptr %add.ptr.i.i, i32 0, i32 %res.0.i.i)
  br label %free_value

if.else:                                          ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %35 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %flags, align 8
  %call51 = tail call fastcc i32 @bpf_map_copy_value(ptr noundef %15, ptr noundef %retval.0.i143161, ptr noundef nonnull %call.i145, i64 noundef %36)
  br label %free_value

if.end53:                                         ; preds = %if.end43
  %37 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %flags, align 8
  %call55 = tail call fastcc i32 @bpf_map_copy_value(ptr noundef %15, ptr noundef %retval.0.i143161, ptr noundef nonnull %call.i145, i64 noundef %38)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call55)
  %tobool56.not = icmp eq i32 %call55, 0
  br i1 %tobool56.not, label %if.end8.i.i121, label %if.end53.free_value_crit_edge

if.end53.free_value_crit_edge:                    ; preds = %if.end53
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_value

if.end8.i.i121:                                   ; preds = %if.end53
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call39)
  %cmp9.i.i120 = icmp slt i32 %call39, 0
  br i1 %cmp9.i.i120, label %land.rhs16.i.i123, label %if.then.i.i.i126

land.rhs16.i.i123:                                ; preds = %if.end8.i.i121
  %.b71.i.i122 = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i122, label %land.rhs16.i.i123.free_value_crit_edge, label %if.then27.i.i124, !prof !220

land.rhs16.i.i123.free_value_crit_edge:           ; preds = %land.rhs16.i.i123
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_value

if.then27.i.i124:                                 ; preds = %land.rhs16.i.i123
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %free_value

if.then.i.i.i126:                                 ; preds = %if.end8.i.i121
  tail call void @__check_object_size(ptr noundef nonnull %call.i145, i32 noundef %call39, i1 noundef zeroext true) #19
  tail call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i127 = tail call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i127, label %if.then.i.i.i126.copy_to_user.exit_crit_edge, label %if.end.i.i131

if.then.i.i.i126.copy_to_user.exit_crit_edge:     ; preds = %if.then.i.i.i126
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit

if.end.i.i131:                                    ; preds = %if.then.i.i.i126
  %39 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %6, i32 %call39, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i129 = extractvalue { i32, i32 } %39, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i129)
  %cmp.i6.i130 = icmp eq i32 %asmresult.i.i129, 0
  br i1 %cmp.i6.i130, label %if.then2.i.i, label %if.end.i.i131.copy_to_user.exit_crit_edge

if.end.i.i131.copy_to_user.exit_crit_edge:        ; preds = %if.end.i.i131
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit

if.then2.i.i:                                     ; preds = %if.end.i.i131
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i132 = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull %call.i145, i32 noundef %call39) #19
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %6, ptr noundef nonnull %call.i145, i32 noundef %call39) #19
  br label %copy_to_user.exit

copy_to_user.exit:                                ; preds = %if.then2.i.i, %if.end.i.i131.copy_to_user.exit_crit_edge, %if.then.i.i.i126.copy_to_user.exit_crit_edge
  %n.addr.0.i133 = phi i32 [ %call39, %if.then.i.i.i126.copy_to_user.exit_crit_edge ], [ %call.i12.i.i, %if.then2.i.i ], [ %call39, %if.end.i.i131.copy_to_user.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i133)
  %cmp60.not = icmp eq i32 %n.addr.0.i133, 0
  %spec.select = select i1 %cmp60.not, i32 0, i32 -14
  br label %free_value

free_value:                                       ; preds = %copy_to_user.exit, %if.then27.i.i124, %land.rhs16.i.i123.free_value_crit_edge, %if.end53.free_value_crit_edge, %if.else, %if.then11.i.i, %if.then27.i.i, %land.rhs16.i.i.free_value_crit_edge
  %err.0 = phi i32 [ %call51, %if.else ], [ %call55, %if.end53.free_value_crit_edge ], [ -14, %if.then11.i.i ], [ -14, %if.then27.i.i ], [ -14, %land.rhs16.i.i.free_value_crit_edge ], [ -14, %if.then27.i.i124 ], [ -14, %land.rhs16.i.i123.free_value_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  tail call void @kvfree(ptr noundef nonnull %call.i145) #19
  br label %free_key

free_key:                                         ; preds = %free_value, %if.end38.free_key_crit_edge
  %err.1 = phi i32 [ %err.0, %free_value ], [ -12, %if.end38.free_key_crit_edge ]
  tail call void @kvfree(ptr noundef %retval.0.i143161) #19
  br label %err_put

err_put:                                          ; preds = %free_key, %if.then36, %land.lhs.true.err_put_crit_edge, %if.end21.err_put_crit_edge
  %err.2 = phi i32 [ %27, %if.then36 ], [ %err.1, %free_key ], [ -1, %if.end21.err_put_crit_edge ], [ -22, %land.lhs.true.err_put_crit_edge ]
  %and.i146 = and i32 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i146)
  %tobool.not.i147 = icmp eq i32 %and.i146, 0
  br i1 %tobool.not.i147, label %err_put.cleanup_crit_edge, label %if.then.i148

err_put.cleanup_crit_edge:                        ; preds = %err_put
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then.i148:                                     ; preds = %err_put
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @fput(ptr noundef nonnull %11) #19
  br label %cleanup

cleanup:                                          ; preds = %if.then.i148, %err_put.cleanup_crit_edge, %if.then19, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %16, %if.then19 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ %err.2, %err_put.cleanup_crit_edge ], [ %err.2, %if.then.i148 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @map_update_elem(ptr noundef %attr, [2 x i32] %uattr.coerce) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %uattr.coerce.fca.1.extract = extractvalue [2 x i32] %uattr.coerce, 1
  %key = getelementptr inbounds %struct.anon.0, ptr %attr, i32 0, i32 1
  %0 = ptrtoint ptr %key to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %key, align 8
  %conv.i = trunc i64 %1 to i32
  %2 = getelementptr inbounds %struct.anon.0, ptr %attr, i32 0, i32 2
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %2, align 8
  %conv.i95 = trunc i64 %4 to i32
  %5 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %attr, align 8
  %flags = getelementptr inbounds %struct.anon.0, ptr %attr, i32 0, i32 3
  %add.ptr = getelementptr %struct.anon.0, ptr %attr, i32 1
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 112) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i = tail call i32 @__fdget(i32 noundef %6) #19, !noalias !267
  %and.i.i = and i32 %call.i, -4
  %7 = inttoptr i32 %and.i.i to ptr
  %and1.i.i = and i32 %call.i, 3
  %.fca.0.insert = insertvalue [2 x i32] poison, i32 %and.i.i, 0
  %.fca.1.insert = insertvalue [2 x i32] %.fca.0.insert, i32 %and1.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %if.end.if.then8_crit_edge, label %if.end.i

if.end.if.then8_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then8

if.end.i:                                         ; preds = %if.end
  %f_op.i = getelementptr inbounds %struct.file, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %f_op.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %f_op.i, align 4
  %cmp.not.i = icmp eq ptr %9, @bpf_map_fops
  br i1 %cmp.not.i, label %__bpf_map_get.exit, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  %and.i.i101 = and i32 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i101)
  %tobool.not.i.i = icmp eq i32 %and.i.i101, 0
  br i1 %tobool.not.i.i, label %if.then2.i.if.then8_crit_edge, label %if.then.i.i

if.then2.i.if.then8_crit_edge:                    ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then8

if.then.i.i:                                      ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @fput(ptr noundef nonnull %7) #19
  br label %if.then8

__bpf_map_get.exit:                               ; preds = %if.end.i
  %private_data.i = getelementptr inbounds %struct.file, ptr %7, i32 0, i32 16
  %10 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %private_data.i, align 4
  %cmp.i = icmp ugt ptr %11, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %__bpf_map_get.exit.if.then8_crit_edge, label %if.end10

__bpf_map_get.exit.if.then8_crit_edge:            ; preds = %__bpf_map_get.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then8

if.then8:                                         ; preds = %__bpf_map_get.exit.if.then8_crit_edge, %if.then.i.i, %if.then2.i.if.then8_crit_edge, %if.end.if.then8_crit_edge
  %retval.0.i122 = phi ptr [ %11, %__bpf_map_get.exit.if.then8_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then.i.i ], [ inttoptr (i32 -22 to ptr), %if.then2.i.if.then8_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.end.if.then8_crit_edge ]
  %12 = ptrtoint ptr %retval.0.i122 to i32
  br label %cleanup

if.end10:                                         ; preds = %__bpf_map_get.exit
  %writecnt.i = getelementptr inbounds %struct.bpf_map, ptr %11, i32 0, i32 26
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %writecnt.i, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %writecnt.i) #19
  %f_mode.i = getelementptr inbounds %struct.file, ptr %7, i32 0, i32 8
  %13 = ptrtoint ptr %f_mode.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %f_mode.i, align 8
  %frozen.i = getelementptr inbounds %struct.bpf_map, ptr %11, i32 0, i32 20
  %15 = ptrtoint ptr %frozen.i to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load volatile i8, ptr %frozen.i, align 1, !range !227
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %tobool.not.i102 = icmp ne i8 %16, 0
  %.op = and i32 %14, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.op)
  %tobool.not132 = icmp eq i32 %.op, 0
  %tobool.not = select i1 %tobool.not.i102, i1 true, i1 %tobool.not132
  br i1 %tobool.not, label %if.end10.err_put_crit_edge, label %if.end13

if.end10.err_put_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #21
  br label %err_put

if.end13:                                         ; preds = %if.end10
  %17 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %17)
  %18 = load i64, ptr %flags, align 8
  %and15 = and i64 %18, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and15)
  %tobool16.not = icmp eq i64 %and15, 0
  br i1 %tobool16.not, label %if.end13.if.end19_crit_edge, label %land.lhs.true

if.end13.if.end19_crit_edge:                      ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end19

land.lhs.true:                                    ; preds = %if.end13
  %spin_lock_off.i = getelementptr inbounds %struct.bpf_map, ptr %11, i32 0, i32 9
  %19 = ptrtoint ptr %spin_lock_off.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %spin_lock_off.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %20)
  %cmp.i103 = icmp sgt i32 %20, -1
  br i1 %cmp.i103, label %land.lhs.true.if.end19_crit_edge, label %land.lhs.true.err_put_crit_edge

land.lhs.true.err_put_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %err_put

land.lhs.true.if.end19_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end19

if.end19:                                         ; preds = %land.lhs.true.if.end19_crit_edge, %if.end13.if.end19_crit_edge
  %key_size = getelementptr inbounds %struct.bpf_map, ptr %11, i32 0, i32 4
  %21 = ptrtoint ptr %key_size to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %key_size, align 16
  %.fca.0.insert85 = insertvalue [2 x i32] poison, i32 %conv.i, 0
  %ukey.sroa.5.sroa.0.0.insert.insert = or i32 %uattr.coerce.fca.1.extract, 2147483647
  %.fca.1.insert88 = insertvalue [2 x i32] %.fca.0.insert85, i32 %ukey.sroa.5.sroa.0.0.insert.insert, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool.not.i104 = icmp eq i32 %22, 0
  br i1 %tobool.not.i104, label %if.end.i108, label %if.then.i

if.then.i:                                        ; preds = %if.end19
  %call.i.i.i105 = tail call noalias ptr @kvmalloc_node(i32 noundef %22, i32 noundef 1060032, i32 noundef -1) #22
  %tobool.not.i.i106 = icmp eq ptr %call.i.i.i105, null
  br i1 %tobool.not.i.i106, label %if.then.i.if.then22_crit_edge, label %if.end.i.i

if.then.i.if.then22_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then22

if.end.i.i:                                       ; preds = %if.then.i
  %call2.i.i = tail call fastcc i32 @copy_from_bpfptr(ptr noundef nonnull %call.i.i.i105, [2 x i32] %.fca.1.insert88, i32 noundef %22) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %tobool3.not.i.i = icmp eq i32 %call2.i.i, 0
  br i1 %tobool3.not.i.i, label %___bpf_copy_key.exit, label %if.then4.i.i

if.then4.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @kvfree(ptr noundef nonnull %call.i.i.i105) #19
  br label %if.then22

if.end.i108:                                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv.i)
  %retval.0.i14.i = icmp eq i32 %conv.i, 0
  br i1 %retval.0.i14.i, label %if.end.i108.if.end24_crit_edge, label %if.end.i108.if.then22_crit_edge

if.end.i108.if.then22_crit_edge:                  ; preds = %if.end.i108
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then22

if.end.i108.if.end24_crit_edge:                   ; preds = %if.end.i108
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end24

___bpf_copy_key.exit:                             ; preds = %if.end.i.i
  %cmp.i110 = icmp ugt ptr %call.i.i.i105, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i110, label %___bpf_copy_key.exit.if.then22_crit_edge, label %___bpf_copy_key.exit.if.end24_crit_edge

___bpf_copy_key.exit.if.end24_crit_edge:          ; preds = %___bpf_copy_key.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end24

___bpf_copy_key.exit.if.then22_crit_edge:         ; preds = %___bpf_copy_key.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then22

if.then22:                                        ; preds = %___bpf_copy_key.exit.if.then22_crit_edge, %if.end.i108.if.then22_crit_edge, %if.then4.i.i, %if.then.i.if.then22_crit_edge
  %retval.0.i109127 = phi ptr [ %call.i.i.i105, %___bpf_copy_key.exit.if.then22_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end.i108.if.then22_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.then.i.if.then22_crit_edge ], [ inttoptr (i32 -14 to ptr), %if.then4.i.i ]
  %23 = ptrtoint ptr %retval.0.i109127 to i32
  br label %err_put

if.end24:                                         ; preds = %___bpf_copy_key.exit.if.end24_crit_edge, %if.end.i108.if.end24_crit_edge
  %retval.0.i109131 = phi ptr [ %call.i.i.i105, %___bpf_copy_key.exit.if.end24_crit_edge ], [ null, %if.end.i108.if.end24_crit_edge ]
  %map_type.i = getelementptr inbounds %struct.bpf_map, ptr %11, i32 0, i32 3
  %24 = ptrtoint ptr %map_type.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %map_type.i, align 4
  %26 = zext i32 %25 to i64
  call void @__sanitizer_cov_trace_switch(i64 %26, ptr @__sancov_gen_cov_switch_values.73)
  switch i32 %25, label %if.else24.i [
    i32 5, label %if.end24.if.then.i111_crit_edge
    i32 10, label %if.end24.if.then.i111_crit_edge133
    i32 6, label %if.end24.if.then.i111_crit_edge134
    i32 21, label %if.end24.if.then.i111_crit_edge135
    i32 4, label %if.end24.bpf_map_value_size.exit_crit_edge
    i32 8, label %if.end24.bpf_map_value_size.exit_crit_edge136
    i32 12, label %if.end24.bpf_map_value_size.exit_crit_edge137
    i32 3, label %if.end24.bpf_map_value_size.exit_crit_edge138
    i32 13, label %if.end24.bpf_map_value_size.exit_crit_edge139
  ]

if.end24.bpf_map_value_size.exit_crit_edge139:    ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_value_size.exit

if.end24.bpf_map_value_size.exit_crit_edge138:    ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_value_size.exit

if.end24.bpf_map_value_size.exit_crit_edge137:    ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_value_size.exit

if.end24.bpf_map_value_size.exit_crit_edge136:    ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_value_size.exit

if.end24.bpf_map_value_size.exit_crit_edge:       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_value_size.exit

if.end24.if.then.i111_crit_edge135:               ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i111

if.end24.if.then.i111_crit_edge134:               ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i111

if.end24.if.then.i111_crit_edge133:               ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i111

if.end24.if.then.i111_crit_edge:                  ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i111

if.then.i111:                                     ; preds = %if.end24.if.then.i111_crit_edge, %if.end24.if.then.i111_crit_edge133, %if.end24.if.then.i111_crit_edge134, %if.end24.if.then.i111_crit_edge135
  %value_size.i = getelementptr inbounds %struct.bpf_map, ptr %11, i32 0, i32 5
  %27 = ptrtoint ptr %value_size.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %value_size.i, align 4
  %sub.i = add i32 %28, -1
  %or.i = or i32 %sub.i, 7
  %add.i = add i32 %or.i, 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %29 = load i32, ptr @nr_cpu_ids, align 4
  %call4.i.i.i = tail call i32 @__bitmap_weight(ptr noundef nonnull @__cpu_possible_mask, i32 noundef %29) #19
  %mul.i = mul i32 %call4.i.i.i, %add.i
  br label %bpf_map_value_size.exit

if.else24.i:                                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #21
  %value_size25.i = getelementptr inbounds %struct.bpf_map, ptr %11, i32 0, i32 5
  %30 = ptrtoint ptr %value_size25.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %value_size25.i, align 4
  br label %bpf_map_value_size.exit

bpf_map_value_size.exit:                          ; preds = %if.else24.i, %if.then.i111, %if.end24.bpf_map_value_size.exit_crit_edge, %if.end24.bpf_map_value_size.exit_crit_edge136, %if.end24.bpf_map_value_size.exit_crit_edge137, %if.end24.bpf_map_value_size.exit_crit_edge138, %if.end24.bpf_map_value_size.exit_crit_edge139
  %retval.0.i112 = phi i32 [ %mul.i, %if.then.i111 ], [ %31, %if.else24.i ], [ 4, %if.end24.bpf_map_value_size.exit_crit_edge ], [ 4, %if.end24.bpf_map_value_size.exit_crit_edge136 ], [ 4, %if.end24.bpf_map_value_size.exit_crit_edge137 ], [ 4, %if.end24.bpf_map_value_size.exit_crit_edge138 ], [ 4, %if.end24.bpf_map_value_size.exit_crit_edge139 ]
  %call.i113 = tail call noalias ptr @kvmalloc_node(i32 noundef %retval.0.i112, i32 noundef 1060032, i32 noundef -1) #22
  %tobool27.not = icmp eq ptr %call.i113, null
  br i1 %tobool27.not, label %bpf_map_value_size.exit.free_key_crit_edge, label %if.end29

bpf_map_value_size.exit.free_key_crit_edge:       ; preds = %bpf_map_value_size.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_key

if.end29:                                         ; preds = %bpf_map_value_size.exit
  %.fca.0.insert81 = insertvalue [2 x i32] poison, i32 %conv.i95, 0
  %.fca.1.insert82 = insertvalue [2 x i32] %.fca.0.insert81, i32 %ukey.sroa.5.sroa.0.0.insert.insert, 1
  %call30 = tail call fastcc i32 @copy_from_bpfptr(ptr noundef nonnull %call.i113, [2 x i32] %.fca.1.insert82, i32 noundef %retval.0.i112)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30)
  %cmp31.not = icmp eq i32 %call30, 0
  br i1 %cmp31.not, label %if.end34, label %if.end29.free_value_crit_edge

if.end29.free_value_crit_edge:                    ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_value

if.end34:                                         ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #21
  %32 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %32)
  %33 = load i64, ptr %flags, align 8
  %call36 = tail call fastcc i32 @bpf_map_update_value(ptr noundef %11, [2 x i32] %.fca.1.insert, ptr noundef %retval.0.i109131, ptr noundef nonnull %call.i113, i64 noundef %33)
  br label %free_value

free_value:                                       ; preds = %if.end34, %if.end29.free_value_crit_edge
  %err.0 = phi i32 [ -14, %if.end29.free_value_crit_edge ], [ %call36, %if.end34 ]
  tail call void @kvfree(ptr noundef nonnull %call.i113) #19
  br label %free_key

free_key:                                         ; preds = %free_value, %bpf_map_value_size.exit.free_key_crit_edge
  %err.1 = phi i32 [ %err.0, %free_value ], [ -12, %bpf_map_value_size.exit.free_key_crit_edge ]
  tail call void @kvfree(ptr noundef %retval.0.i109131) #19
  br label %err_put

err_put:                                          ; preds = %free_key, %if.then22, %land.lhs.true.err_put_crit_edge, %if.end10.err_put_crit_edge
  %err.2 = phi i32 [ %23, %if.then22 ], [ %err.1, %free_key ], [ -1, %if.end10.err_put_crit_edge ], [ -22, %land.lhs.true.err_put_crit_edge ]
  %call.i.i.i115 = tail call zeroext i1 @__kasan_check_write(ptr noundef %writecnt.i, i32 noundef 8) #19
  tail call void @generic_atomic64_sub(i64 noundef 1, ptr noundef %writecnt.i) #19
  %and.i116 = and i32 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i116)
  %tobool.not.i117 = icmp eq i32 %and.i116, 0
  br i1 %tobool.not.i117, label %err_put.cleanup_crit_edge, label %if.then.i118

err_put.cleanup_crit_edge:                        ; preds = %err_put
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then.i118:                                     ; preds = %err_put
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @fput(ptr noundef nonnull %7) #19
  br label %cleanup

cleanup:                                          ; preds = %if.then.i118, %err_put.cleanup_crit_edge, %if.then8, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %12, %if.then8 ], [ -22, %entry.cleanup_crit_edge ], [ %err.2, %err_put.cleanup_crit_edge ], [ %err.2, %if.then.i118 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @map_delete_elem(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %key = getelementptr inbounds %struct.anon.0, ptr %attr, i32 0, i32 1
  %0 = ptrtoint ptr %key to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %key, align 8
  %conv2 = trunc i64 %1 to i32
  %2 = inttoptr i32 %conv2 to ptr
  %3 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %attr, align 8
  %add.ptr = getelementptr %struct.anon.0, ptr %attr, i32 0, i32 2
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 128) #19
  %cmp5.not = icmp eq ptr %call, null
  br i1 %cmp5.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i77 = tail call i32 @__fdget(i32 noundef %4) #19, !noalias !270
  %and.i.i = and i32 %call.i77, -4
  %5 = inttoptr i32 %and.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i78 = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i78, label %if.end.if.then10_crit_edge, label %if.end.i

if.end.if.then10_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then10

if.end.i:                                         ; preds = %if.end
  %f_op.i = getelementptr inbounds %struct.file, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %f_op.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %f_op.i, align 4
  %cmp.not.i = icmp eq ptr %7, @bpf_map_fops
  br i1 %cmp.not.i, label %__bpf_map_get.exit, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  %and.i.i79 = and i32 %call.i77, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i79)
  %tobool.not.i.i = icmp eq i32 %and.i.i79, 0
  br i1 %tobool.not.i.i, label %if.then2.i.if.then10_crit_edge, label %if.then.i.i

if.then2.i.if.then10_crit_edge:                   ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then10

if.then.i.i:                                      ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @fput(ptr noundef nonnull %5) #19
  br label %if.then10

__bpf_map_get.exit:                               ; preds = %if.end.i
  %private_data.i = getelementptr inbounds %struct.file, ptr %5, i32 0, i32 16
  %8 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %private_data.i, align 4
  %cmp.i = icmp ugt ptr %9, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %__bpf_map_get.exit.if.then10_crit_edge, label %if.end12

__bpf_map_get.exit.if.then10_crit_edge:           ; preds = %__bpf_map_get.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then10

if.then10:                                        ; preds = %__bpf_map_get.exit.if.then10_crit_edge, %if.then.i.i, %if.then2.i.if.then10_crit_edge, %if.end.if.then10_crit_edge
  %retval.0.i99 = phi ptr [ %9, %__bpf_map_get.exit.if.then10_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then.i.i ], [ inttoptr (i32 -22 to ptr), %if.then2.i.if.then10_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.end.if.then10_crit_edge ]
  %10 = ptrtoint ptr %retval.0.i99 to i32
  br label %cleanup

if.end12:                                         ; preds = %__bpf_map_get.exit
  %writecnt.i = getelementptr inbounds %struct.bpf_map, ptr %9, i32 0, i32 26
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %writecnt.i, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %writecnt.i) #19
  %f_mode.i = getelementptr inbounds %struct.file, ptr %5, i32 0, i32 8
  %11 = ptrtoint ptr %f_mode.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %f_mode.i, align 8
  %frozen.i = getelementptr inbounds %struct.bpf_map, ptr %9, i32 0, i32 20
  %13 = ptrtoint ptr %frozen.i to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load volatile i8, ptr %frozen.i, align 1, !range !227
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool.not.i80 = icmp ne i8 %14, 0
  %.op = and i32 %12, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.op)
  %tobool.not108 = icmp eq i32 %.op, 0
  %tobool.not = select i1 %tobool.not.i80, i1 true, i1 %tobool.not108
  br i1 %tobool.not, label %if.end12.err_put_crit_edge, label %if.end15

if.end12.err_put_crit_edge:                       ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  br label %err_put

if.end15:                                         ; preds = %if.end12
  %key_size = getelementptr inbounds %struct.bpf_map, ptr %9, i32 0, i32 4
  %15 = ptrtoint ptr %key_size to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %key_size, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not.i81 = icmp eq i32 %16, 0
  br i1 %tobool.not.i81, label %if.end.i85, label %__bpf_copy_key.exit

if.end.i85:                                       ; preds = %if.end15
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv2)
  %tobool1.not.i = icmp eq i32 %conv2, 0
  br i1 %tobool1.not.i, label %if.end.i85.if.end21_crit_edge, label %if.end.i85.if.then19_crit_edge

if.end.i85.if.then19_crit_edge:                   ; preds = %if.end.i85
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then19

if.end.i85.if.end21_crit_edge:                    ; preds = %if.end.i85
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end21

__bpf_copy_key.exit:                              ; preds = %if.end15
  %call.i82 = tail call ptr @vmemdup_user(ptr noundef %2, i32 noundef %16) #19
  %cmp.i87 = icmp ugt ptr %call.i82, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i87, label %__bpf_copy_key.exit.if.then19_crit_edge, label %__bpf_copy_key.exit.if.end21_crit_edge

__bpf_copy_key.exit.if.end21_crit_edge:           ; preds = %__bpf_copy_key.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end21

__bpf_copy_key.exit.if.then19_crit_edge:          ; preds = %__bpf_copy_key.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then19

if.then19:                                        ; preds = %__bpf_copy_key.exit.if.then19_crit_edge, %if.end.i85.if.then19_crit_edge
  %retval.0.i86103 = phi ptr [ %call.i82, %__bpf_copy_key.exit.if.then19_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end.i85.if.then19_crit_edge ]
  %17 = ptrtoint ptr %retval.0.i86103 to i32
  br label %err_put

if.end21:                                         ; preds = %__bpf_copy_key.exit.if.end21_crit_edge, %if.end.i85.if.end21_crit_edge
  %retval.0.i86107 = phi ptr [ %call.i82, %__bpf_copy_key.exit.if.end21_crit_edge ], [ null, %if.end.i85.if.end21_crit_edge ]
  %18 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %9, align 128
  %cmp.i88 = icmp eq ptr %19, @bpf_map_offload_ops
  br i1 %cmp.i88, label %if.then23, label %if.else

if.then23:                                        ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #21
  %call24 = tail call i32 @bpf_map_offload_delete_elem(ptr noundef %9, ptr noundef %retval.0.i86107) #19
  br label %out

if.else:                                          ; preds = %if.end21
  %map_type = getelementptr inbounds %struct.bpf_map, ptr %9, i32 0, i32 3
  %20 = ptrtoint ptr %map_type to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %map_type, align 4
  %22 = zext i32 %21 to i64
  call void @__sanitizer_cov_trace_switch(i64 %22, ptr @__sancov_gen_cov_switch_values.74)
  switch i32 %21, label %if.end33 [
    i32 3, label %if.else.if.then30_crit_edge
    i32 26, label %if.else.if.then30_crit_edge109
  ]

if.else.if.then30_crit_edge109:                   ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then30

if.else.if.then30_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then30

if.then30:                                        ; preds = %if.else.if.then30_crit_edge, %if.else.if.then30_crit_edge109
  %map_delete_elem = getelementptr inbounds %struct.bpf_map_ops, ptr %19, i32 0, i32 14
  %23 = ptrtoint ptr %map_delete_elem to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %map_delete_elem, align 4
  %call31 = tail call i32 %24(ptr noundef %9, ptr noundef %retval.0.i86107) #19
  br label %out

if.end33:                                         ; preds = %if.else
  tail call fastcc void @bpf_disable_instrumentation()
  %25 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i = and i32 %25, -16384
  %26 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %26, i32 0, i32 1
  %27 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %28, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !238
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #19
  %call.i = tail call zeroext i1 @rcu_is_watching() #19
  br i1 %call.i, label %if.end33.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end33.rcu_read_lock.exit_crit_edge:            ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end33
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.20, i32 noundef 696, ptr noundef nonnull @.str.21) #19
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end33.rcu_read_lock.exit_crit_edge
  %29 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %9, align 128
  %map_delete_elem35 = getelementptr inbounds %struct.bpf_map_ops, ptr %30, i32 0, i32 14
  %31 = ptrtoint ptr %map_delete_elem35 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %map_delete_elem35, align 4
  %call36 = tail call i32 %32(ptr noundef %9, ptr noundef %retval.0.i86107) #19
  tail call fastcc void @rcu_read_unlock()
  tail call fastcc void @bpf_enable_instrumentation()
  %33 = ptrtoint ptr %map_type to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %map_type, align 4
  %35 = and i32 %34, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 12, i32 %35)
  %switch.i = icmp eq i32 %35, 12
  br i1 %switch.i, label %if.then.i89, label %rcu_read_lock.exit.out_crit_edge

rcu_read_lock.exit.out_crit_edge:                 ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %out

if.then.i89:                                      ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @synchronize_rcu() #19
  br label %out

out:                                              ; preds = %if.then.i89, %rcu_read_lock.exit.out_crit_edge, %if.then30, %if.then23
  %err.0 = phi i32 [ %call24, %if.then23 ], [ %call31, %if.then30 ], [ %call36, %rcu_read_lock.exit.out_crit_edge ], [ %call36, %if.then.i89 ]
  tail call void @kvfree(ptr noundef %retval.0.i86107) #19
  br label %err_put

err_put:                                          ; preds = %out, %if.then19, %if.end12.err_put_crit_edge
  %err.1 = phi i32 [ %17, %if.then19 ], [ %err.0, %out ], [ -1, %if.end12.err_put_crit_edge ]
  %call.i.i.i92 = tail call zeroext i1 @__kasan_check_write(ptr noundef %writecnt.i, i32 noundef 8) #19
  tail call void @generic_atomic64_sub(i64 noundef 1, ptr noundef %writecnt.i) #19
  %and.i93 = and i32 %call.i77, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i93)
  %tobool.not.i94 = icmp eq i32 %and.i93, 0
  br i1 %tobool.not.i94, label %err_put.cleanup_crit_edge, label %if.then.i95

err_put.cleanup_crit_edge:                        ; preds = %err_put
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then.i95:                                      ; preds = %err_put
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @fput(ptr noundef nonnull %5) #19
  br label %cleanup

cleanup:                                          ; preds = %if.then.i95, %err_put.cleanup_crit_edge, %if.then10, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %10, %if.then10 ], [ -22, %entry.cleanup_crit_edge ], [ %err.1, %err_put.cleanup_crit_edge ], [ %err.1, %if.then.i95 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @map_get_next_key(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %key = getelementptr inbounds %struct.anon.0, ptr %attr, i32 0, i32 1
  %0 = ptrtoint ptr %key to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %key, align 8
  %conv2 = trunc i64 %1 to i32
  %2 = inttoptr i32 %conv2 to ptr
  %3 = getelementptr inbounds %struct.anon.0, ptr %attr, i32 0, i32 2
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %3, align 8
  %conv9 = trunc i64 %5 to i32
  %6 = inttoptr i32 %conv9 to ptr
  %7 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %attr, align 8
  %add.ptr = getelementptr %struct.anon.0, ptr %attr, i32 0, i32 3
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 120) #19
  %cmp11.not = icmp eq ptr %call, null
  br i1 %cmp11.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i94 = tail call i32 @__fdget(i32 noundef %8) #19, !noalias !273
  %and.i.i = and i32 %call.i94, -4
  %9 = inttoptr i32 %and.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i95 = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i95, label %if.end.if.then16_crit_edge, label %if.end.i

if.end.if.then16_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then16

if.end.i:                                         ; preds = %if.end
  %f_op.i = getelementptr inbounds %struct.file, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %f_op.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %f_op.i, align 4
  %cmp.not.i = icmp eq ptr %11, @bpf_map_fops
  br i1 %cmp.not.i, label %__bpf_map_get.exit, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  %and.i.i96 = and i32 %call.i94, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i96)
  %tobool.not.i.i = icmp eq i32 %and.i.i96, 0
  br i1 %tobool.not.i.i, label %if.then2.i.if.then16_crit_edge, label %if.then.i.i97

if.then2.i.if.then16_crit_edge:                   ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then16

if.then.i.i97:                                    ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @fput(ptr noundef nonnull %9) #19
  br label %if.then16

__bpf_map_get.exit:                               ; preds = %if.end.i
  %private_data.i = getelementptr inbounds %struct.file, ptr %9, i32 0, i32 16
  %12 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %private_data.i, align 4
  %cmp.i = icmp ugt ptr %13, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %__bpf_map_get.exit.if.then16_crit_edge, label %if.end18

__bpf_map_get.exit.if.then16_crit_edge:           ; preds = %__bpf_map_get.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then16

if.then16:                                        ; preds = %__bpf_map_get.exit.if.then16_crit_edge, %if.then.i.i97, %if.then2.i.if.then16_crit_edge, %if.end.if.then16_crit_edge
  %retval.0.i123 = phi ptr [ %13, %__bpf_map_get.exit.if.then16_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then.i.i97 ], [ inttoptr (i32 -22 to ptr), %if.then2.i.if.then16_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.end.if.then16_crit_edge ]
  %14 = ptrtoint ptr %retval.0.i123 to i32
  br label %cleanup

if.end18:                                         ; preds = %__bpf_map_get.exit
  %f_mode.i = getelementptr inbounds %struct.file, ptr %9, i32 0, i32 8
  %15 = ptrtoint ptr %f_mode.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %f_mode.i, align 8
  %frozen.i = getelementptr inbounds %struct.bpf_map, ptr %13, i32 0, i32 20
  %17 = ptrtoint ptr %frozen.i to i32
  call void @__asan_load1_noabort(i32 %17)
  %18 = load volatile i8, ptr %frozen.i, align 1, !range !227
  %and = and i32 %16, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end18.err_put_crit_edge, label %if.end21

if.end18.err_put_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #21
  br label %err_put

if.end21:                                         ; preds = %if.end18
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv2)
  %tobool22.not = icmp eq i32 %conv2, 0
  br i1 %tobool22.not, label %if.end21.if.end30_crit_edge, label %if.then23

if.end21.if.end30_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end30

if.then23:                                        ; preds = %if.end21
  %key_size = getelementptr inbounds %struct.bpf_map, ptr %13, i32 0, i32 4
  %19 = ptrtoint ptr %key_size to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %key_size, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %20)
  %tobool.not.i99 = icmp eq i32 %20, 0
  br i1 %tobool.not.i99, label %if.then23.if.then27_crit_edge, label %__bpf_copy_key.exit

if.then23.if.then27_crit_edge:                    ; preds = %if.then23
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then27

__bpf_copy_key.exit:                              ; preds = %if.then23
  %call.i100 = tail call ptr @vmemdup_user(ptr noundef nonnull %2, i32 noundef %20) #19
  %cmp.i105 = icmp ugt ptr %call.i100, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i105, label %__bpf_copy_key.exit.if.then27_crit_edge, label %__bpf_copy_key.exit.if.end30_crit_edge

__bpf_copy_key.exit.if.end30_crit_edge:           ; preds = %__bpf_copy_key.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end30

__bpf_copy_key.exit.if.then27_crit_edge:          ; preds = %__bpf_copy_key.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then27

if.then27:                                        ; preds = %__bpf_copy_key.exit.if.then27_crit_edge, %if.then23.if.then27_crit_edge
  %retval.0.i104126 = phi ptr [ %call.i100, %__bpf_copy_key.exit.if.then27_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then23.if.then27_crit_edge ]
  %21 = ptrtoint ptr %retval.0.i104126 to i32
  br label %err_put

if.end30:                                         ; preds = %__bpf_copy_key.exit.if.end30_crit_edge, %if.end21.if.end30_crit_edge
  %key10.0 = phi ptr [ %call.i100, %__bpf_copy_key.exit.if.end30_crit_edge ], [ null, %if.end21.if.end30_crit_edge ]
  %key_size31 = getelementptr inbounds %struct.bpf_map, ptr %13, i32 0, i32 4
  %22 = ptrtoint ptr %key_size31 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %key_size31, align 16
  %call.i106 = tail call noalias ptr @kvmalloc_node(i32 noundef %23, i32 noundef 1051840, i32 noundef -1) #22
  %tobool33.not = icmp eq ptr %call.i106, null
  br i1 %tobool33.not, label %if.end30.free_key_crit_edge, label %if.end35

if.end30.free_key_crit_edge:                      ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_key

if.end35:                                         ; preds = %if.end30
  %24 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %13, align 128
  %cmp.i107 = icmp eq ptr %25, @bpf_map_offload_ops
  br i1 %cmp.i107, label %if.then37, label %if.end39

if.then37:                                        ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #21
  %call38 = tail call i32 @bpf_map_offload_get_next_key(ptr noundef %13, ptr noundef %key10.0, ptr noundef nonnull %call.i106) #19
  br label %out

if.end39:                                         ; preds = %if.end35
  %26 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %29, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !238
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #19
  %call.i = tail call zeroext i1 @rcu_is_watching() #19
  br i1 %call.i, label %if.end39.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end39.rcu_read_lock.exit_crit_edge:            ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end39
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.20, i32 noundef 696, ptr noundef nonnull @.str.21) #19
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end39.rcu_read_lock.exit_crit_edge
  %30 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %13, align 128
  %map_get_next_key = getelementptr inbounds %struct.bpf_map_ops, ptr %31, i32 0, i32 4
  %32 = ptrtoint ptr %map_get_next_key to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %map_get_next_key, align 4
  %call40 = tail call i32 %33(ptr noundef %13, ptr noundef %key10.0, ptr noundef nonnull %call.i106) #19
  %call.i108 = tail call zeroext i1 @rcu_is_watching() #19
  br i1 %call.i108, label %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i111

rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_unlock.exit

land.lhs.true.i111:                               ; preds = %rcu_read_lock.exit
  %call1.i109 = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i109)
  %tobool.not.i110 = icmp eq i32 %call1.i109, 0
  br i1 %tobool.not.i110, label %land.lhs.true.i111.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i113

land.lhs.true.i111.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i111
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_unlock.exit

land.lhs.true2.i113:                              ; preds = %land.lhs.true.i111
  %.b4.i112 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i112, label %land.lhs.true2.i113.rcu_read_unlock.exit_crit_edge, label %if.then.i114

land.lhs.true2.i113.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i113
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_unlock.exit

if.then.i114:                                     ; preds = %land.lhs.true2.i113
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.20, i32 noundef 724, ptr noundef nonnull @.str.22) #19
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i114, %land.lhs.true2.i113.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i111.rcu_read_unlock.exit_crit_edge, %rcu_read_lock.exit.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !239
  %34 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i115 = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i.i.i115 to ptr
  %preempt_count.i.i.i.i116 = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %preempt_count.i.i.i.i116 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %preempt_count.i.i.i.i116, align 4
  %sub.i.i.i = add i32 %37, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i116, align 4
  tail call void @rcu_read_unlock_strict() #19
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #19
  br label %out

out:                                              ; preds = %rcu_read_unlock.exit, %if.then37
  %err.0 = phi i32 [ %call38, %if.then37 ], [ %call40, %rcu_read_unlock.exit ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0)
  %tobool41.not = icmp eq i32 %err.0, 0
  br i1 %tobool41.not, label %if.end43, label %out.free_next_key_crit_edge

out.free_next_key_crit_edge:                      ; preds = %out
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_next_key

if.end43:                                         ; preds = %out
  %38 = ptrtoint ptr %key_size31 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %key_size31, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %39)
  %cmp9.i.i = icmp slt i32 %39, 0
  br i1 %cmp9.i.i, label %land.rhs16.i.i, label %if.then.i.i.i

land.rhs16.i.i:                                   ; preds = %if.end43
  %.b71.i.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i, label %land.rhs16.i.i.free_next_key_crit_edge, label %if.then27.i.i, !prof !220

land.rhs16.i.i.free_next_key_crit_edge:           ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_next_key

if.then27.i.i:                                    ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %free_next_key

if.then.i.i.i:                                    ; preds = %if.end43
  tail call void @__check_object_size(ptr noundef nonnull %call.i106, i32 noundef %39, i1 noundef zeroext true) #19
  tail call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i, label %if.then.i.i.i.copy_to_user.exit_crit_edge, label %if.end.i.i

if.then.i.i.i.copy_to_user.exit_crit_edge:        ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit

if.end.i.i:                                       ; preds = %if.then.i.i.i
  %40 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %6, i32 %39, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i = extractvalue { i32, i32 } %40, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.then2.i.i, label %if.end.i.i.copy_to_user.exit_crit_edge

if.end.i.i.copy_to_user.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit

if.then2.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull %call.i106, i32 noundef %39) #19
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %6, ptr noundef nonnull %call.i106, i32 noundef %39) #19
  br label %copy_to_user.exit

copy_to_user.exit:                                ; preds = %if.then2.i.i, %if.end.i.i.copy_to_user.exit_crit_edge, %if.then.i.i.i.copy_to_user.exit_crit_edge
  %n.addr.0.i = phi i32 [ %39, %if.then.i.i.i.copy_to_user.exit_crit_edge ], [ %call.i12.i.i, %if.then2.i.i ], [ %39, %if.end.i.i.copy_to_user.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i)
  %cmp46.not = icmp eq i32 %n.addr.0.i, 0
  %spec.select = select i1 %cmp46.not, i32 0, i32 -14
  br label %free_next_key

free_next_key:                                    ; preds = %copy_to_user.exit, %if.then27.i.i, %land.rhs16.i.i.free_next_key_crit_edge, %out.free_next_key_crit_edge
  %err.1 = phi i32 [ %err.0, %out.free_next_key_crit_edge ], [ -14, %if.then27.i.i ], [ -14, %land.rhs16.i.i.free_next_key_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  tail call void @kvfree(ptr noundef nonnull %call.i106) #19
  br label %free_key

free_key:                                         ; preds = %free_next_key, %if.end30.free_key_crit_edge
  %err.2 = phi i32 [ %err.1, %free_next_key ], [ -12, %if.end30.free_key_crit_edge ]
  tail call void @kvfree(ptr noundef %key10.0) #19
  br label %err_put

err_put:                                          ; preds = %free_key, %if.then27, %if.end18.err_put_crit_edge
  %err.3 = phi i32 [ %21, %if.then27 ], [ %err.2, %free_key ], [ -1, %if.end18.err_put_crit_edge ]
  %and.i117 = and i32 %call.i94, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i117)
  %tobool.not.i118 = icmp eq i32 %and.i117, 0
  br i1 %tobool.not.i118, label %err_put.cleanup_crit_edge, label %if.then.i119

err_put.cleanup_crit_edge:                        ; preds = %err_put
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then.i119:                                     ; preds = %err_put
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @fput(ptr noundef nonnull %9) #19
  br label %cleanup

cleanup:                                          ; preds = %if.then.i119, %err_put.cleanup_crit_edge, %if.then16, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %14, %if.then16 ], [ -22, %entry.cleanup_crit_edge ], [ %err.3, %err_put.cleanup_crit_edge ], [ %err.3, %if.then.i119 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @map_freeze(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %attr, align 8
  %add.ptr = getelementptr i8, ptr %attr, i32 4
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 140) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i = tail call i32 @__fdget(i32 noundef %1) #19, !noalias !276
  %and.i.i = and i32 %call.i, -4
  %2 = inttoptr i32 %and.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %if.end.if.then4_crit_edge, label %if.end.i

if.end.if.then4_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then4

if.end.i:                                         ; preds = %if.end
  %f_op.i = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %f_op.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %f_op.i, align 4
  %cmp.not.i = icmp eq ptr %4, @bpf_map_fops
  br i1 %cmp.not.i, label %__bpf_map_get.exit, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  %and.i.i58 = and i32 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i58)
  %tobool.not.i.i = icmp eq i32 %and.i.i58, 0
  br i1 %tobool.not.i.i, label %if.then2.i.if.then4_crit_edge, label %if.then.i.i

if.then2.i.if.then4_crit_edge:                    ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then4

if.then.i.i:                                      ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @fput(ptr noundef nonnull %2) #19
  br label %if.then4

__bpf_map_get.exit:                               ; preds = %if.end.i
  %private_data.i = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 16
  %5 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %private_data.i, align 4
  %cmp.i = icmp ugt ptr %6, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %__bpf_map_get.exit.if.then4_crit_edge, label %if.end6

__bpf_map_get.exit.if.then4_crit_edge:            ; preds = %__bpf_map_get.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then4

if.then4:                                         ; preds = %__bpf_map_get.exit.if.then4_crit_edge, %if.then.i.i, %if.then2.i.if.then4_crit_edge, %if.end.if.then4_crit_edge
  %retval.0.i70 = phi ptr [ %6, %__bpf_map_get.exit.if.then4_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then.i.i ], [ inttoptr (i32 -22 to ptr), %if.then2.i.if.then4_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.end.if.then4_crit_edge ]
  %7 = ptrtoint ptr %retval.0.i70 to i32
  br label %cleanup

if.end6:                                          ; preds = %__bpf_map_get.exit
  %map_type = getelementptr inbounds %struct.bpf_map, ptr %6, i32 0, i32 3
  %8 = ptrtoint ptr %map_type to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %map_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 26, i32 %9)
  %cmp7 = icmp eq i32 %9, 26
  br i1 %cmp7, label %if.end6.if.then9_crit_edge, label %lor.lhs.false

if.end6.if.then9_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then9

lor.lhs.false:                                    ; preds = %if.end6
  %timer_off.i = getelementptr inbounds %struct.bpf_map, ptr %6, i32 0, i32 10
  %10 = ptrtoint ptr %timer_off.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %timer_off.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %11)
  %cmp.i59 = icmp sgt i32 %11, -1
  br i1 %cmp.i59, label %lor.lhs.false.if.then9_crit_edge, label %if.end10

lor.lhs.false.if.then9_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then9

if.then9:                                         ; preds = %lor.lhs.false.if.then9_crit_edge, %if.end6.if.then9_crit_edge
  %and.i = and i32 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i60 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i60, label %if.then9.cleanup_crit_edge, label %if.then.i

if.then9.cleanup_crit_edge:                       ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then.i:                                        ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @fput(ptr noundef nonnull %2) #19
  br label %cleanup

if.end10:                                         ; preds = %lor.lhs.false
  %freeze_mutex = getelementptr inbounds %struct.bpf_map, ptr %6, i32 0, i32 25
  tail call void @mutex_lock_nested(ptr noundef %freeze_mutex, i32 noundef 0) #19
  %writecnt.i = getelementptr inbounds %struct.bpf_map, ptr %6, i32 0, i32 26
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %writecnt.i, i32 noundef 8) #19
  %call.i.i = tail call i64 @generic_atomic64_read(ptr noundef %writecnt.i) #19
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %call.i.i)
  %cmp.i62.not = icmp eq i64 %call.i.i, 0
  br i1 %cmp.i62.not, label %do.end, label %if.end10.err_put_crit_edge

if.end10.err_put_crit_edge:                       ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #21
  br label %err_put

do.end:                                           ; preds = %if.end10
  %frozen = getelementptr inbounds %struct.bpf_map, ptr %6, i32 0, i32 20
  %12 = ptrtoint ptr %frozen to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load volatile i8, ptr %frozen, align 1, !range !227
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %tobool.not = icmp eq i8 %13, 0
  br i1 %tobool.not, label %if.end17, label %do.end.err_put_crit_edge

do.end.err_put_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %err_put

if.end17:                                         ; preds = %do.end
  %call18 = tail call fastcc zeroext i1 @bpf_capable()
  br i1 %call18, label %do.body25, label %if.end17.err_put_crit_edge

if.end17.err_put_crit_edge:                       ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #21
  br label %err_put

do.body25:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #21
  %14 = ptrtoint ptr %frozen to i32
  call void @__asan_store1_noabort(i32 %14)
  store volatile i8 1, ptr %frozen, align 1
  br label %err_put

err_put:                                          ; preds = %do.body25, %if.end17.err_put_crit_edge, %do.end.err_put_crit_edge, %if.end10.err_put_crit_edge
  %err.0 = phi i32 [ 0, %do.body25 ], [ -16, %if.end10.err_put_crit_edge ], [ -16, %do.end.err_put_crit_edge ], [ -1, %if.end17.err_put_crit_edge ]
  tail call void @mutex_unlock(ptr noundef %freeze_mutex) #19
  %and.i63 = and i32 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i63)
  %tobool.not.i64 = icmp eq i32 %and.i63, 0
  br i1 %tobool.not.i64, label %err_put.cleanup_crit_edge, label %if.then.i65

err_put.cleanup_crit_edge:                        ; preds = %err_put
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then.i65:                                      ; preds = %err_put
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @fput(ptr noundef nonnull %2) #19
  br label %cleanup

cleanup:                                          ; preds = %if.then.i65, %err_put.cleanup_crit_edge, %if.then.i, %if.then9.cleanup_crit_edge, %if.then4, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %7, %if.then4 ], [ -22, %entry.cleanup_crit_edge ], [ -524, %if.then9.cleanup_crit_edge ], [ -524, %if.then.i ], [ %err.0, %err_put.cleanup_crit_edge ], [ %err.0, %if.then.i65 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_prog_load(ptr noundef %attr, [2 x i32] %uattr.coerce) unnamed_addr #0 align 64 {
entry:
  %prog = alloca ptr, align 4
  %err = alloca i32, align 4
  %license = alloca [128 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %uattr.coerce.fca.1.extract = extractvalue [2 x i32] %uattr.coerce, 1
  %0 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %attr, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %prog) #19
  %2 = ptrtoint ptr %prog to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr inttoptr (i32 -1 to ptr), ptr %prog, align 4, !annotation !244
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %err) #19
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %license) #19
  %3 = call ptr @memset(ptr %license, i32 255, i32 128)
  %core_relo_rec_size = getelementptr inbounds %struct.anon.3, ptr %attr, i32 0, i32 24
  %add.ptr = getelementptr i8, ptr %core_relo_rec_size, i32 4
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 4) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %prog_flags = getelementptr inbounds %struct.anon.3, ptr %attr, i32 0, i32 8
  %4 = ptrtoint ptr %prog_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %prog_flags, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %5)
  %tobool.not = icmp ult i32 %5, 32
  br i1 %tobool.not, label %if.end2, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %license3 = getelementptr inbounds %struct.anon.3, ptr %attr, i32 0, i32 3
  %6 = ptrtoint ptr %license3 to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %license3, align 8
  %conv.i = trunc i64 %7 to i32
  %8 = inttoptr i32 %conv.i to ptr
  %9 = and i32 %uattr.coerce.fca.1.extract, -2147483648
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %9)
  %bf.cast.i.i.i.not = icmp eq i32 %9, 0
  br i1 %bf.cast.i.i.i.not, label %strncpy_from_bpfptr.exit, label %strncpy_from_bpfptr.exit.thread

strncpy_from_bpfptr.exit.thread:                  ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  %call1.i.i = tail call i32 @strnlen(ptr noundef %8, i32 noundef 126) #25
  %add.i.i = add i32 %call1.i.i, 1
  %10 = tail call i32 @llvm.umin.i32(i32 %add.i.i, i32 127) #19
  %11 = call ptr @memcpy(ptr %license, ptr %8, i32 %10)
  br label %if.end7

strncpy_from_bpfptr.exit:                         ; preds = %if.end2
  %call2.i.i = call i32 @strncpy_from_user(ptr noundef nonnull %license, ptr noundef %8, i32 noundef 127) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2.i.i)
  %cmp5 = icmp slt i32 %call2.i.i, 0
  br i1 %cmp5, label %strncpy_from_bpfptr.exit.cleanup_crit_edge, label %strncpy_from_bpfptr.exit.if.end7_crit_edge

strncpy_from_bpfptr.exit.if.end7_crit_edge:       ; preds = %strncpy_from_bpfptr.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end7

strncpy_from_bpfptr.exit.cleanup_crit_edge:       ; preds = %strncpy_from_bpfptr.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end7:                                          ; preds = %strncpy_from_bpfptr.exit.if.end7_crit_edge, %strncpy_from_bpfptr.exit.thread
  %arrayidx = getelementptr inbounds [128 x i8], ptr %license, i32 0, i32 127
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %12)
  store i8 0, ptr %arrayidx, align 1
  %bcmp = call i32 @bcmp(ptr noundef nonnull dereferenceable(4) %license, ptr noundef nonnull dereferenceable(4) @.str.52, i32 4) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp)
  %cmp.i = icmp eq i32 %bcmp, 0
  br i1 %cmp.i, label %if.end7.license_is_gpl_compatible.exit_crit_edge, label %lor.lhs.false.i

if.end7.license_is_gpl_compatible.exit_crit_edge: ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #21
  br label %license_is_gpl_compatible.exit

lor.lhs.false.i:                                  ; preds = %if.end7
  %bcmp276 = call i32 @bcmp(ptr noundef nonnull dereferenceable(7) %license, ptr noundef nonnull dereferenceable(7) @.str.53, i32 7) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp276)
  %cmp2.i = icmp eq i32 %bcmp276, 0
  br i1 %cmp2.i, label %lor.lhs.false.i.license_is_gpl_compatible.exit_crit_edge, label %lor.lhs.false3.i

lor.lhs.false.i.license_is_gpl_compatible.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %license_is_gpl_compatible.exit

lor.lhs.false3.i:                                 ; preds = %lor.lhs.false.i
  %bcmp277 = call i32 @bcmp(ptr noundef nonnull dereferenceable(26) %license, ptr noundef nonnull dereferenceable(26) @.str.54, i32 26) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp277)
  %cmp5.i = icmp eq i32 %bcmp277, 0
  br i1 %cmp5.i, label %lor.lhs.false3.i.license_is_gpl_compatible.exit_crit_edge, label %lor.lhs.false6.i

lor.lhs.false3.i.license_is_gpl_compatible.exit_crit_edge: ; preds = %lor.lhs.false3.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %license_is_gpl_compatible.exit

lor.lhs.false6.i:                                 ; preds = %lor.lhs.false3.i
  %bcmp278 = call i32 @bcmp(ptr noundef nonnull dereferenceable(13) %license, ptr noundef nonnull dereferenceable(13) @.str.55, i32 13) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp278)
  %cmp8.i = icmp eq i32 %bcmp278, 0
  br i1 %cmp8.i, label %lor.lhs.false6.i.license_is_gpl_compatible.exit_crit_edge, label %lor.lhs.false9.i

lor.lhs.false6.i.license_is_gpl_compatible.exit_crit_edge: ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %license_is_gpl_compatible.exit

lor.lhs.false9.i:                                 ; preds = %lor.lhs.false6.i
  %bcmp279 = call i32 @bcmp(ptr noundef nonnull dereferenceable(13) %license, ptr noundef nonnull dereferenceable(13) @.str.56, i32 13) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp279)
  %cmp11.i = icmp eq i32 %bcmp279, 0
  br i1 %cmp11.i, label %lor.lhs.false9.i.license_is_gpl_compatible.exit_crit_edge, label %lor.rhs.i

lor.lhs.false9.i.license_is_gpl_compatible.exit_crit_edge: ; preds = %lor.lhs.false9.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %license_is_gpl_compatible.exit

lor.rhs.i:                                        ; preds = %lor.lhs.false9.i
  call void @__sanitizer_cov_trace_pc() #21
  %bcmp280 = call i32 @bcmp(ptr noundef nonnull dereferenceable(13) %license, ptr noundef nonnull dereferenceable(13) @.str.57, i32 13) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp280)
  %cmp13.i = icmp eq i32 %bcmp280, 0
  %phi.cast.i = zext i1 %cmp13.i to i32
  br label %license_is_gpl_compatible.exit

license_is_gpl_compatible.exit:                   ; preds = %lor.rhs.i, %lor.lhs.false9.i.license_is_gpl_compatible.exit_crit_edge, %lor.lhs.false6.i.license_is_gpl_compatible.exit_crit_edge, %lor.lhs.false3.i.license_is_gpl_compatible.exit_crit_edge, %lor.lhs.false.i.license_is_gpl_compatible.exit_crit_edge, %if.end7.license_is_gpl_compatible.exit_crit_edge
  %13 = phi i32 [ 1, %lor.lhs.false9.i.license_is_gpl_compatible.exit_crit_edge ], [ 1, %lor.lhs.false6.i.license_is_gpl_compatible.exit_crit_edge ], [ 1, %lor.lhs.false3.i.license_is_gpl_compatible.exit_crit_edge ], [ 1, %lor.lhs.false.i.license_is_gpl_compatible.exit_crit_edge ], [ 1, %if.end7.license_is_gpl_compatible.exit_crit_edge ], [ %phi.cast.i, %lor.rhs.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool10.not.not = icmp eq i32 %13, 0
  %insn_cnt = getelementptr inbounds %struct.anon.3, ptr %attr, i32 0, i32 1
  %14 = ptrtoint ptr %insn_cnt to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %insn_cnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %cmp11 = icmp eq i32 %15, 0
  br i1 %cmp11, label %license_is_gpl_compatible.exit.cleanup_crit_edge, label %lor.lhs.false

license_is_gpl_compatible.exit.cleanup_crit_edge: ; preds = %license_is_gpl_compatible.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

lor.lhs.false:                                    ; preds = %license_is_gpl_compatible.exit
  %call.i250 = call zeroext i1 @capable(i32 noundef 39) #19
  br i1 %call.i250, label %lor.lhs.false.bpf_capable.exit.thread_crit_edge, label %bpf_capable.exit

lor.lhs.false.bpf_capable.exit.thread_crit_edge:  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_capable.exit.thread

bpf_capable.exit:                                 ; preds = %lor.lhs.false
  %call1.i251 = call zeroext i1 @capable(i32 noundef 21) #19
  br i1 %call1.i251, label %bpf_capable.exit.bpf_capable.exit.thread_crit_edge, label %bpf_capable.exit._crit_edge

bpf_capable.exit._crit_edge:                      ; preds = %bpf_capable.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %16

bpf_capable.exit.bpf_capable.exit.thread_crit_edge: ; preds = %bpf_capable.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_capable.exit.thread

bpf_capable.exit.thread:                          ; preds = %bpf_capable.exit.bpf_capable.exit.thread_crit_edge, %lor.lhs.false.bpf_capable.exit.thread_crit_edge
  br label %16

16:                                               ; preds = %bpf_capable.exit.thread, %bpf_capable.exit._crit_edge
  %17 = phi i32 [ 1000000, %bpf_capable.exit.thread ], [ 4096, %bpf_capable.exit._crit_edge ]
  call void @__sanitizer_cov_trace_cmp4(i32 %15, i32 %17)
  %cmp14 = icmp ugt i32 %15, %17
  br i1 %cmp14, label %.cleanup_crit_edge, label %if.end16

.cleanup_crit_edge:                               ; preds = %16
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end16:                                         ; preds = %16
  %18 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %18, ptr @__sancov_gen_cov_switch_values.75)
  switch i32 %1, label %land.lhs.true19 [
    i32 1, label %if.end16.if.end34_crit_edge
    i32 8, label %if.end16.if.end34_crit_edge281
  ]

if.end16.if.end34_crit_edge281:                   ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end34

if.end16.if.end34_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end34

land.lhs.true19:                                  ; preds = %if.end16
  %call20 = call fastcc zeroext i1 @bpf_capable()
  br i1 %call20, label %if.end22, label %land.lhs.true19.cleanup_crit_edge

land.lhs.true19.cleanup_crit_edge:                ; preds = %land.lhs.true19
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end22:                                         ; preds = %land.lhs.true19
  %19 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %19, ptr @__sancov_gen_cov_switch_values.76)
  switch i32 %1, label %if.end22.if.end34_crit_edge [
    i32 3, label %if.end22.land.lhs.true24_crit_edge
    i32 4, label %if.end22.land.lhs.true24_crit_edge282
    i32 6, label %if.end22.land.lhs.true24_crit_edge283
    i32 10, label %if.end22.land.lhs.true24_crit_edge284
    i32 11, label %if.end22.land.lhs.true24_crit_edge285
    i32 12, label %if.end22.land.lhs.true24_crit_edge286
    i32 19, label %if.end22.land.lhs.true24_crit_edge287
    i32 14, label %if.end22.land.lhs.true24_crit_edge288
    i32 16, label %if.end22.land.lhs.true24_crit_edge289
    i32 20, label %if.end22.land.lhs.true24_crit_edge290
    i32 22, label %if.end22.land.lhs.true24_crit_edge291
    i32 15, label %if.end22.land.lhs.true24_crit_edge292
    i32 9, label %if.end22.land.lhs.true24_crit_edge293
    i32 18, label %if.end22.land.lhs.true24_crit_edge294
    i32 25, label %if.end22.land.lhs.true24_crit_edge295
    i32 23, label %if.end22.land.lhs.true24_crit_edge296
    i32 13, label %if.end22.land.lhs.true24_crit_edge297
    i32 28, label %if.end22.land.lhs.true24_crit_edge298
    i32 2, label %if.end22.land.lhs.true31_crit_edge
    i32 5, label %if.end22.land.lhs.true31_crit_edge299
    i32 7, label %if.end22.land.lhs.true31_crit_edge300
    i32 17, label %if.end22.land.lhs.true31_crit_edge301
    i32 24, label %if.end22.land.lhs.true31_crit_edge302
    i32 26, label %if.end22.land.lhs.true31_crit_edge303
    i32 29, label %if.end22.land.lhs.true31_crit_edge304
    i32 27, label %if.end22.land.lhs.true31_crit_edge305
  ]

if.end22.land.lhs.true31_crit_edge305:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true31

if.end22.land.lhs.true31_crit_edge304:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true31

if.end22.land.lhs.true31_crit_edge303:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true31

if.end22.land.lhs.true31_crit_edge302:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true31

if.end22.land.lhs.true31_crit_edge301:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true31

if.end22.land.lhs.true31_crit_edge300:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true31

if.end22.land.lhs.true31_crit_edge299:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true31

if.end22.land.lhs.true31_crit_edge:               ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true31

if.end22.land.lhs.true24_crit_edge298:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true24

if.end22.land.lhs.true24_crit_edge297:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true24

if.end22.land.lhs.true24_crit_edge296:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true24

if.end22.land.lhs.true24_crit_edge295:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true24

if.end22.land.lhs.true24_crit_edge294:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true24

if.end22.land.lhs.true24_crit_edge293:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true24

if.end22.land.lhs.true24_crit_edge292:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true24

if.end22.land.lhs.true24_crit_edge291:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true24

if.end22.land.lhs.true24_crit_edge290:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true24

if.end22.land.lhs.true24_crit_edge289:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true24

if.end22.land.lhs.true24_crit_edge288:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true24

if.end22.land.lhs.true24_crit_edge287:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true24

if.end22.land.lhs.true24_crit_edge286:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true24

if.end22.land.lhs.true24_crit_edge285:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true24

if.end22.land.lhs.true24_crit_edge284:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true24

if.end22.land.lhs.true24_crit_edge283:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true24

if.end22.land.lhs.true24_crit_edge282:            ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true24

if.end22.land.lhs.true24_crit_edge:               ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true24

if.end22.if.end34_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end34

land.lhs.true24:                                  ; preds = %if.end22.land.lhs.true24_crit_edge, %if.end22.land.lhs.true24_crit_edge282, %if.end22.land.lhs.true24_crit_edge283, %if.end22.land.lhs.true24_crit_edge284, %if.end22.land.lhs.true24_crit_edge285, %if.end22.land.lhs.true24_crit_edge286, %if.end22.land.lhs.true24_crit_edge287, %if.end22.land.lhs.true24_crit_edge288, %if.end22.land.lhs.true24_crit_edge289, %if.end22.land.lhs.true24_crit_edge290, %if.end22.land.lhs.true24_crit_edge291, %if.end22.land.lhs.true24_crit_edge292, %if.end22.land.lhs.true24_crit_edge293, %if.end22.land.lhs.true24_crit_edge294, %if.end22.land.lhs.true24_crit_edge295, %if.end22.land.lhs.true24_crit_edge296, %if.end22.land.lhs.true24_crit_edge297, %if.end22.land.lhs.true24_crit_edge298
  %call25 = call zeroext i1 @capable(i32 noundef 12) #19
  br i1 %call25, label %land.lhs.true24.if.end29_crit_edge, label %land.lhs.true26

land.lhs.true24.if.end29_crit_edge:               ; preds = %land.lhs.true24
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end29

land.lhs.true26:                                  ; preds = %land.lhs.true24
  %call27 = call zeroext i1 @capable(i32 noundef 21) #19
  br i1 %call27, label %land.lhs.true26.if.end29_crit_edge, label %land.lhs.true26.cleanup_crit_edge

land.lhs.true26.cleanup_crit_edge:                ; preds = %land.lhs.true26
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

land.lhs.true26.if.end29_crit_edge:               ; preds = %land.lhs.true26
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end29

if.end29:                                         ; preds = %land.lhs.true26.if.end29_crit_edge, %land.lhs.true24.if.end29_crit_edge
  %20 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %20, ptr @__sancov_gen_cov_switch_values.77)
  switch i32 %1, label %if.end29.if.end34_crit_edge [
    i32 28, label %if.end29.land.lhs.true31_crit_edge
    i32 5, label %if.end29.land.lhs.true31_crit_edge306
    i32 7, label %if.end29.land.lhs.true31_crit_edge307
    i32 17, label %if.end29.land.lhs.true31_crit_edge308
    i32 24, label %if.end29.land.lhs.true31_crit_edge309
    i32 26, label %if.end29.land.lhs.true31_crit_edge310
    i32 27, label %if.end29.land.lhs.true31_crit_edge311
  ]

if.end29.land.lhs.true31_crit_edge311:            ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true31

if.end29.land.lhs.true31_crit_edge310:            ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true31

if.end29.land.lhs.true31_crit_edge309:            ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true31

if.end29.land.lhs.true31_crit_edge308:            ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true31

if.end29.land.lhs.true31_crit_edge307:            ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true31

if.end29.land.lhs.true31_crit_edge306:            ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true31

if.end29.land.lhs.true31_crit_edge:               ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true31

if.end29.if.end34_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end34

land.lhs.true31:                                  ; preds = %if.end29.land.lhs.true31_crit_edge, %if.end29.land.lhs.true31_crit_edge306, %if.end29.land.lhs.true31_crit_edge307, %if.end29.land.lhs.true31_crit_edge308, %if.end29.land.lhs.true31_crit_edge309, %if.end29.land.lhs.true31_crit_edge310, %if.end29.land.lhs.true31_crit_edge311, %if.end22.land.lhs.true31_crit_edge, %if.end22.land.lhs.true31_crit_edge299, %if.end22.land.lhs.true31_crit_edge300, %if.end22.land.lhs.true31_crit_edge301, %if.end22.land.lhs.true31_crit_edge302, %if.end22.land.lhs.true31_crit_edge303, %if.end22.land.lhs.true31_crit_edge304, %if.end22.land.lhs.true31_crit_edge305
  %call32 = call fastcc zeroext i1 @perfmon_capable()
  br i1 %call32, label %land.lhs.true31.if.end34_crit_edge, label %land.lhs.true31.cleanup_crit_edge

land.lhs.true31.cleanup_crit_edge:                ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

land.lhs.true31.if.end34_crit_edge:               ; preds = %land.lhs.true31
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end34

if.end34:                                         ; preds = %land.lhs.true31.if.end34_crit_edge, %if.end29.if.end34_crit_edge, %if.end22.if.end34_crit_edge, %if.end16.if.end34_crit_edge, %if.end16.if.end34_crit_edge281
  %21 = getelementptr inbounds %struct.anon.3, ptr %attr, i32 0, i32 20
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %21, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %tobool35.not = icmp eq i32 %23, 0
  br i1 %tobool35.not, label %if.else, label %if.then36

if.then36:                                        ; preds = %if.end34
  %call37 = call ptr @bpf_prog_get(i32 noundef %23)
  %cmp.i255 = icmp ugt ptr %call37, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i255, label %if.then39, label %if.then36.if.end59_crit_edge

if.then36.if.end59_crit_edge:                     ; preds = %if.then36
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end59

if.then39:                                        ; preds = %if.then36
  %24 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %21, align 8
  %call40 = call ptr @btf_get_by_fd(i32 noundef %25) #19
  %cmp.i256 = icmp ugt ptr %call40, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i256, label %if.then39.cleanup_crit_edge, label %if.end43

if.then39.cleanup_crit_edge:                      ; preds = %if.then39
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end43:                                         ; preds = %if.then39
  %call44 = call zeroext i1 @btf_is_kernel(ptr noundef %call40) #19
  br i1 %call44, label %if.end43.if.end59_crit_edge, label %if.then45

if.end43.if.end59_crit_edge:                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end59

if.then45:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #21
  call void @btf_put(ptr noundef %call40) #19
  br label %cleanup

if.else:                                          ; preds = %if.end34
  %attach_btf_id = getelementptr inbounds %struct.anon.3, ptr %attr, i32 0, i32 19
  %26 = ptrtoint ptr %attach_btf_id to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %attach_btf_id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool48.not = icmp eq i32 %27, 0
  br i1 %tobool48.not, label %if.else.if.end59_crit_edge, label %if.then49

if.else.if.end59_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end59

if.then49:                                        ; preds = %if.else
  %call50 = call ptr @bpf_get_btf_vmlinux() #19
  %cmp.i257 = icmp ugt ptr %call50, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i257, label %if.then52, label %if.end54

if.then52:                                        ; preds = %if.then49
  call void @__sanitizer_cov_trace_pc() #21
  %28 = ptrtoint ptr %call50 to i32
  br label %cleanup

if.end54:                                         ; preds = %if.then49
  %tobool55.not = icmp eq ptr %call50, null
  br i1 %tobool55.not, label %if.end54.cleanup_crit_edge, label %if.end57

if.end54.cleanup_crit_edge:                       ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end57:                                         ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #21
  call void @btf_get(ptr noundef nonnull %call50) #19
  br label %if.end59

if.end59:                                         ; preds = %if.end57, %if.else.if.end59_crit_edge, %if.end43.if.end59_crit_edge, %if.then36.if.end59_crit_edge
  %attach_btf.0 = phi ptr [ %call40, %if.end43.if.end59_crit_edge ], [ null, %if.then36.if.end59_crit_edge ], [ %call50, %if.end57 ], [ null, %if.else.if.end59_crit_edge ]
  %dst_prog.0 = phi ptr [ null, %if.end43.if.end59_crit_edge ], [ %call37, %if.then36.if.end59_crit_edge ], [ null, %if.end57 ], [ null, %if.else.if.end59_crit_edge ]
  %29 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %attr, align 8
  %31 = zext i32 %30 to i64
  call void @__sanitizer_cov_trace_switch(i64 %31, ptr @__sancov_gen_cov_switch_values.78)
  switch i32 %30, label %if.end59.bpf_prog_load_fixup_attach_type.exit_crit_edge [
    i32 9, label %sw.bb.i
    i32 21, label %sw.bb2.i
  ]

if.end59.bpf_prog_load_fixup_attach_type.exit_crit_edge: ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_load_fixup_attach_type.exit

sw.bb.i:                                          ; preds = %if.end59
  %expected_attach_type.i = getelementptr inbounds %struct.anon.3, ptr %attr, i32 0, i32 11
  %32 = ptrtoint ptr %expected_attach_type.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %expected_attach_type.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %33)
  %tobool.not.i = icmp eq i32 %33, 0
  br i1 %tobool.not.i, label %if.then.i, label %sw.bb.i.bpf_prog_load_fixup_attach_type.exit_crit_edge

sw.bb.i.bpf_prog_load_fixup_attach_type.exit_crit_edge: ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_load_fixup_attach_type.exit

if.then.i:                                        ; preds = %sw.bb.i
  call void @__sanitizer_cov_trace_pc() #21
  %34 = ptrtoint ptr %expected_attach_type.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 2, ptr %expected_attach_type.i, align 4
  br label %bpf_prog_load_fixup_attach_type.exit

sw.bb2.i:                                         ; preds = %if.end59
  %expected_attach_type3.i = getelementptr inbounds %struct.anon.3, ptr %attr, i32 0, i32 11
  %35 = ptrtoint ptr %expected_attach_type3.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %expected_attach_type3.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool4.not.i = icmp eq i32 %36, 0
  br i1 %tobool4.not.i, label %if.then5.i, label %sw.bb2.i.bpf_prog_load_fixup_attach_type.exit_crit_edge

sw.bb2.i.bpf_prog_load_fixup_attach_type.exit_crit_edge: ; preds = %sw.bb2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_load_fixup_attach_type.exit

if.then5.i:                                       ; preds = %sw.bb2.i
  call void @__sanitizer_cov_trace_pc() #21
  %37 = ptrtoint ptr %expected_attach_type3.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store i32 39, ptr %expected_attach_type3.i, align 4
  br label %bpf_prog_load_fixup_attach_type.exit

bpf_prog_load_fixup_attach_type.exit:             ; preds = %if.then5.i, %sw.bb2.i.bpf_prog_load_fixup_attach_type.exit_crit_edge, %if.then.i, %sw.bb.i.bpf_prog_load_fixup_attach_type.exit_crit_edge, %if.end59.bpf_prog_load_fixup_attach_type.exit_crit_edge
  %expected_attach_type = getelementptr inbounds %struct.anon.3, ptr %attr, i32 0, i32 11
  %38 = ptrtoint ptr %expected_attach_type to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %expected_attach_type, align 4
  %attach_btf_id60 = getelementptr inbounds %struct.anon.3, ptr %attr, i32 0, i32 19
  %40 = ptrtoint ptr %attach_btf_id60 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %attach_btf_id60, align 4
  %call61 = call fastcc i32 @bpf_prog_load_check_attach(i32 noundef %1, i32 noundef %39, ptr noundef %attach_btf.0, i32 noundef %41, ptr noundef %dst_prog.0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call61)
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %if.end70, label %if.then63

if.then63:                                        ; preds = %bpf_prog_load_fixup_attach_type.exit
  %tobool64.not = icmp eq ptr %dst_prog.0, null
  br i1 %tobool64.not, label %if.then63.if.end66_crit_edge, label %if.then65

if.then63.if.end66_crit_edge:                     ; preds = %if.then63
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end66

if.then65:                                        ; preds = %if.then63
  call void @__sanitizer_cov_trace_pc() #21
  call void @bpf_prog_put(ptr noundef nonnull %dst_prog.0)
  br label %if.end66

if.end66:                                         ; preds = %if.then65, %if.then63.if.end66_crit_edge
  %tobool67.not = icmp eq ptr %attach_btf.0, null
  br i1 %tobool67.not, label %if.end66.cleanup_crit_edge, label %if.then68

if.end66.cleanup_crit_edge:                       ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then68:                                        ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #21
  call void @btf_put(ptr noundef nonnull %attach_btf.0) #19
  br label %cleanup

if.end70:                                         ; preds = %bpf_prog_load_fixup_attach_type.exit
  %42 = ptrtoint ptr %insn_cnt to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %insn_cnt, align 4
  %44 = shl i32 %43, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 -49, i32 %44)
  %cmp.i258 = icmp ugt i32 %44, -49
  %45 = add i32 %44, 48
  %cond.i = select i1 %cmp.i258, i32 48, i32 %45
  %call73 = call ptr @bpf_prog_alloc(i32 noundef %cond.i, i32 noundef 1051840) #19
  %46 = ptrtoint ptr %prog to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %call73, ptr %prog, align 4
  %tobool74.not = icmp eq ptr %call73, null
  br i1 %tobool74.not, label %if.then75, label %if.end82

if.then75:                                        ; preds = %if.end70
  %tobool76.not = icmp eq ptr %dst_prog.0, null
  br i1 %tobool76.not, label %if.then75.if.end78_crit_edge, label %if.then77

if.then75.if.end78_crit_edge:                     ; preds = %if.then75
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end78

if.then77:                                        ; preds = %if.then75
  call void @__sanitizer_cov_trace_pc() #21
  call void @bpf_prog_put(ptr noundef nonnull %dst_prog.0)
  br label %if.end78

if.end78:                                         ; preds = %if.then77, %if.then75.if.end78_crit_edge
  %tobool79.not = icmp eq ptr %attach_btf.0, null
  br i1 %tobool79.not, label %if.end78.cleanup_crit_edge, label %if.then80

if.end78.cleanup_crit_edge:                       ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then80:                                        ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #21
  call void @btf_put(ptr noundef nonnull %attach_btf.0) #19
  br label %cleanup

if.end82:                                         ; preds = %if.end70
  %47 = ptrtoint ptr %expected_attach_type to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %expected_attach_type, align 4
  %expected_attach_type84 = getelementptr inbounds %struct.bpf_prog, ptr %call73, i32 0, i32 3
  %49 = ptrtoint ptr %expected_attach_type84 to i32
  call void @__asan_store4_noabort(i32 %49)
  store i32 %48, ptr %expected_attach_type84, align 4
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %call73, i32 0, i32 10
  %50 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %aux, align 4
  %attach_btf85 = getelementptr inbounds %struct.bpf_prog_aux, ptr %51, i32 0, i32 14
  %52 = ptrtoint ptr %attach_btf85 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %attach_btf.0, ptr %attach_btf85, align 4
  %53 = ptrtoint ptr %attach_btf_id60 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load i32, ptr %attach_btf_id60, align 4
  %55 = load ptr, ptr %aux, align 4
  %attach_btf_id88 = getelementptr inbounds %struct.bpf_prog_aux, ptr %55, i32 0, i32 10
  %56 = ptrtoint ptr %attach_btf_id88 to i32
  call void @__asan_store4_noabort(i32 %56)
  store i32 %54, ptr %attach_btf_id88, align 4
  %57 = load ptr, ptr %aux, align 4
  %dst_prog90 = getelementptr inbounds %struct.bpf_prog_aux, ptr %57, i32 0, i32 17
  %58 = ptrtoint ptr %dst_prog90 to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %dst_prog.0, ptr %dst_prog90, align 8
  %prog_ifindex = getelementptr inbounds %struct.anon.3, ptr %attr, i32 0, i32 10
  %59 = ptrtoint ptr %prog_ifindex to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %prog_ifindex, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %tobool91 = icmp ne i32 %60, 0
  %61 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %aux, align 4
  %offload_requested = getelementptr inbounds %struct.bpf_prog_aux, ptr %62, i32 0, i32 22
  %frombool94 = zext i1 %tobool91 to i8
  %63 = ptrtoint ptr %offload_requested to i32
  call void @__asan_store1_noabort(i32 %63)
  store i8 %frombool94, ptr %offload_requested, align 1
  %64 = ptrtoint ptr %prog_flags to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load i32, ptr %prog_flags, align 4
  %66 = load ptr, ptr %aux, align 4
  %sleepable = getelementptr inbounds %struct.bpf_prog_aux, ptr %66, i32 0, i32 25
  %67 = trunc i32 %65 to i8
  %68 = lshr i8 %67, 4
  %69 = and i8 %68, 1
  %70 = ptrtoint ptr %sleepable to i32
  call void @__asan_store1_noabort(i32 %70)
  store i8 %69, ptr %sleepable, align 4
  %71 = load ptr, ptr %aux, align 4
  %call101 = call i32 @security_bpf_prog_alloc(ptr noundef %71) #19
  %72 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %call101, ptr %err, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call101)
  %tobool102.not = icmp eq i32 %call101, 0
  br i1 %tobool102.not, label %if.end104, label %if.end82.free_prog_crit_edge

if.end82.free_prog_crit_edge:                     ; preds = %if.end82
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_prog

if.end104:                                        ; preds = %if.end82
  %73 = call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i = and i32 %73, -16384
  %74 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %74, i32 0, i32 2
  %75 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %task, align 8
  %cred = getelementptr inbounds %struct.task_struct, ptr %76, i32 0, i32 99
  %77 = ptrtoint ptr %cred to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %cred, align 16
  %user = getelementptr inbounds %struct.cred, ptr %78, i32 0, i32 24
  %79 = ptrtoint ptr %user to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %user, align 4
  %call106 = call fastcc ptr @get_uid(ptr noundef %80)
  %81 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %prog, align 4
  %aux108 = getelementptr inbounds %struct.bpf_prog, ptr %82, i32 0, i32 10
  %83 = ptrtoint ptr %aux108 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %aux108, align 4
  %user109 = getelementptr inbounds %struct.bpf_prog_aux, ptr %84, i32 0, i32 42
  %85 = ptrtoint ptr %user109 to i32
  call void @__asan_store4_noabort(i32 %85)
  store ptr %80, ptr %user109, align 8
  %86 = ptrtoint ptr %insn_cnt to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %insn_cnt, align 4
  %len = getelementptr inbounds %struct.bpf_prog, ptr %82, i32 0, i32 4
  %88 = ptrtoint ptr %len to i32
  call void @__asan_store4_noabort(i32 %88)
  store i32 %87, ptr %len, align 4
  %89 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 -14, ptr %err, align 4
  %insns = getelementptr inbounds %struct.bpf_prog, ptr %82, i32 1
  %insns113 = getelementptr inbounds %struct.anon.3, ptr %attr, i32 0, i32 2
  %90 = ptrtoint ptr %insns113 to i32
  call void @__asan_load8_noabort(i32 %90)
  %91 = load i64, ptr %insns113, align 8
  %conv.i259 = trunc i64 %91 to i32
  %mul.i = shl i32 %87, 3
  %.fca.0.insert = insertvalue [2 x i32] poison, i32 %conv.i259, 0
  %.fca.1.insert = insertvalue [2 x i32] %.fca.0.insert, i32 %9, 1
  %call119 = call fastcc i32 @copy_from_bpfptr(ptr noundef %insns, [2 x i32] %.fca.1.insert, i32 noundef %mul.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call119)
  %cmp120.not = icmp eq i32 %call119, 0
  br i1 %cmp120.not, label %if.end122, label %if.end104.free_prog_sec_crit_edge

if.end104.free_prog_sec_crit_edge:                ; preds = %if.end104
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_prog_sec

if.end122:                                        ; preds = %if.end104
  %92 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load ptr, ptr %prog, align 4
  %orig_prog = getelementptr inbounds %struct.bpf_prog, ptr %93, i32 0, i32 11
  %94 = ptrtoint ptr %orig_prog to i32
  call void @__asan_store4_noabort(i32 %94)
  store ptr null, ptr %orig_prog, align 4
  %jited = getelementptr inbounds %struct.bpf_prog, ptr %93, i32 0, i32 1
  %95 = ptrtoint ptr %jited to i32
  call void @__asan_load2_noabort(i32 %95)
  %bf.load123 = load i16, ptr %jited, align 2
  %bf.clear = and i16 %bf.load123, 32767
  store i16 %bf.clear, ptr %jited, align 2
  %96 = load ptr, ptr %prog, align 4
  %aux124 = getelementptr inbounds %struct.bpf_prog, ptr %96, i32 0, i32 10
  %97 = ptrtoint ptr %aux124 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %aux124, align 4
  %call.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %98, i32 noundef 8) #19
  call void @generic_atomic64_set(ptr noundef %98, i64 noundef 1) #19
  %99 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %prog, align 4
  %gpl_compatible = getelementptr inbounds %struct.bpf_prog, ptr %100, i32 0, i32 1
  %101 = ptrtoint ptr %gpl_compatible to i32
  call void @__asan_load2_noabort(i32 %101)
  %bf.load127 = load i16, ptr %gpl_compatible, align 2
  %bf.shl = select i1 %tobool10.not.not, i16 0, i16 8192
  %bf.clear128 = and i16 %bf.load127, -8193
  %bf.set129 = or i16 %bf.clear128, %bf.shl
  store i16 %bf.set129, ptr %gpl_compatible, align 2
  %102 = load ptr, ptr %prog, align 4
  %aux130 = getelementptr inbounds %struct.bpf_prog, ptr %102, i32 0, i32 10
  %103 = ptrtoint ptr %aux130 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %aux130, align 4
  %offload_requested.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %104, i32 0, i32 22
  %105 = ptrtoint ptr %offload_requested.i to i32
  call void @__asan_load1_noabort(i32 %105)
  %106 = load i8, ptr %offload_requested.i, align 1, !range !227
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %106)
  %tobool.i.not = icmp eq i8 %106, 0
  br i1 %tobool.i.not, label %if.end122.if.end137_crit_edge, label %if.then132

if.end122.if.end137_crit_edge:                    ; preds = %if.end122
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end137

if.then132:                                       ; preds = %if.end122
  %call133 = call i32 @bpf_prog_offload_init(ptr noundef %102, ptr noundef %attr) #19
  %107 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %107)
  store i32 %call133, ptr %err, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call133)
  %tobool134.not = icmp eq i32 %call133, 0
  br i1 %tobool134.not, label %if.then132.if.end137_crit_edge, label %if.then132.free_prog_sec_crit_edge

if.then132.free_prog_sec_crit_edge:               ; preds = %if.then132
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_prog_sec

if.then132.if.end137_crit_edge:                   ; preds = %if.then132
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end137

if.end137:                                        ; preds = %if.then132.if.end137_crit_edge, %if.end122.if.end137_crit_edge
  %108 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %108)
  %109 = load ptr, ptr %prog, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 31, i32 %1)
  %cmp.i265 = icmp ugt i32 %1, 31
  br i1 %cmp.i265, label %if.end137.find_prog_type.exit.thread_crit_edge, label %if.end.i

if.end137.find_prog_type.exit.thread_crit_edge:   ; preds = %if.end137
  call void @__sanitizer_cov_trace_pc() #21
  br label %find_prog_type.exit.thread

if.end.i:                                         ; preds = %if.end137
  %110 = call i32 asm sideeffect "cmp\09$1, $2\0A\09sbc\09$0, $1, $1\0A", "=r,r,Ir,~{cc}"(i32 %1, i32 32) #19, !srcloc !263
  %and.i266 = and i32 %110, %1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i266)
  %tobool.not.i267 = icmp eq i32 %and.i266, 0
  br i1 %tobool.not.i267, label %if.end.i.find_prog_type.exit.thread_crit_edge, label %if.end142

if.end.i.find_prog_type.exit.thread_crit_edge:    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %find_prog_type.exit.thread

find_prog_type.exit.thread:                       ; preds = %if.end.i.find_prog_type.exit.thread_crit_edge, %if.end137.find_prog_type.exit.thread_crit_edge
  %111 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %111)
  store i32 -22, ptr %err, align 4
  br label %free_prog_sec

if.end142:                                        ; preds = %if.end.i
  %arrayidx.i = getelementptr [32 x ptr], ptr @bpf_prog_types, i32 0, i32 %and.i266
  %112 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load ptr, ptr %arrayidx.i, align 4
  %aux.i = getelementptr inbounds %struct.bpf_prog, ptr %109, i32 0, i32 10
  %114 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %114)
  %115 = load ptr, ptr %aux.i, align 4
  %offload_requested.i.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %115, i32 0, i32 22
  %116 = ptrtoint ptr %offload_requested.i.i to i32
  call void @__asan_load1_noabort(i32 %116)
  %117 = load i8, ptr %offload_requested.i.i, align 1, !range !227
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %117)
  %tobool.i.not.i = icmp eq i8 %117, 0
  %spec.select.i = select i1 %tobool.i.not.i, ptr %113, ptr @bpf_offload_prog_ops
  %118 = getelementptr inbounds %struct.bpf_prog_aux, ptr %115, i32 0, i32 37
  %119 = ptrtoint ptr %118 to i32
  call void @__asan_store4_noabort(i32 %119)
  store ptr %spec.select.i, ptr %118, align 4
  %type13.i = getelementptr inbounds %struct.bpf_prog, ptr %109, i32 0, i32 2
  %120 = ptrtoint ptr %type13.i to i32
  call void @__asan_store4_noabort(i32 %120)
  store i32 %and.i266, ptr %type13.i, align 4
  %call.i.i269 = call i64 @ktime_get_with_offset(i32 noundef 1) #19
  %121 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %121)
  %122 = load ptr, ptr %prog, align 4
  %aux144 = getelementptr inbounds %struct.bpf_prog, ptr %122, i32 0, i32 10
  %123 = ptrtoint ptr %aux144 to i32
  call void @__asan_load4_noabort(i32 %123)
  %124 = load ptr, ptr %aux144, align 4
  %load_time = getelementptr inbounds %struct.bpf_prog_aux, ptr %124, i32 0, i32 43
  %125 = ptrtoint ptr %load_time to i32
  call void @__asan_store8_noabort(i32 %125)
  store i64 %call.i.i269, ptr %load_time, align 8
  %126 = load ptr, ptr %aux144, align 4
  %name = getelementptr inbounds %struct.bpf_prog_aux, ptr %126, i32 0, i32 46
  %prog_name = getelementptr inbounds %struct.anon.3, ptr %attr, i32 0, i32 9
  %call148 = call i32 @bpf_obj_name_cpy(ptr noundef %name, ptr noundef %prog_name, i32 noundef 16)
  %127 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %127)
  store i32 %call148, ptr %err, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call148)
  %cmp149 = icmp slt i32 %call148, 0
  br i1 %cmp149, label %if.end142.free_prog_sec_crit_edge, label %if.end152

if.end142.free_prog_sec_crit_edge:                ; preds = %if.end142
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_prog_sec

if.end152:                                        ; preds = %if.end142
  %call153 = call i32 @bpf_check(ptr noundef nonnull %prog, ptr noundef %attr, [2 x i32] %uattr.coerce) #19
  %128 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %128)
  store i32 %call153, ptr %err, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call153)
  %cmp154 = icmp slt i32 %call153, 0
  br i1 %cmp154, label %if.end152.free_used_maps_crit_edge, label %if.end157

if.end152.free_used_maps_crit_edge:               ; preds = %if.end152
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_used_maps

if.end157:                                        ; preds = %if.end152
  %129 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %129)
  %130 = load ptr, ptr %prog, align 4
  %call158 = call ptr @bpf_prog_select_runtime(ptr noundef %130, ptr noundef nonnull %err) #19
  %131 = ptrtoint ptr %prog to i32
  call void @__asan_store4_noabort(i32 %131)
  store ptr %call158, ptr %prog, align 4
  %132 = ptrtoint ptr %err to i32
  call void @__asan_load4_noabort(i32 %132)
  %133 = load i32, ptr %err, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %133)
  %cmp159 = icmp slt i32 %133, 0
  br i1 %cmp159, label %if.end157.free_used_maps_crit_edge, label %if.end162

if.end157.free_used_maps_crit_edge:               ; preds = %if.end157
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_used_maps

if.end162:                                        ; preds = %if.end157
  %call163 = call fastcc i32 @bpf_prog_alloc_id(ptr noundef %call158)
  %134 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %134)
  store i32 %call163, ptr %err, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call163)
  %tobool164.not = icmp eq i32 %call163, 0
  br i1 %tobool164.not, label %if.end166, label %if.end162.free_used_maps_crit_edge

if.end162.free_used_maps_crit_edge:               ; preds = %if.end162
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_used_maps

if.end166:                                        ; preds = %if.end162
  %135 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %prog, align 4
  call void @bpf_prog_kallsyms_add(ptr noundef %136) #19
  %137 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %prog, align 4
  call void @perf_event_bpf_event(ptr noundef %138, i32 noundef 1, i16 noundef zeroext 0) #19
  %139 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %139)
  %140 = load ptr, ptr %prog, align 4
  call fastcc void @bpf_audit_prog(ptr noundef %140, i32 noundef 0)
  %141 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %141)
  %142 = load ptr, ptr %prog, align 4
  %call167 = call i32 @bpf_prog_new_fd(ptr noundef %142)
  %143 = ptrtoint ptr %err to i32
  call void @__asan_store4_noabort(i32 %143)
  store i32 %call167, ptr %err, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call167)
  %cmp168 = icmp slt i32 %call167, 0
  br i1 %cmp168, label %if.then170, label %if.end166.if.end171_crit_edge

if.end166.if.end171_crit_edge:                    ; preds = %if.end166
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end171

if.then170:                                       ; preds = %if.end166
  call void @__sanitizer_cov_trace_pc() #21
  %144 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load ptr, ptr %prog, align 4
  call void @bpf_prog_put(ptr noundef %145)
  br label %if.end171

if.end171:                                        ; preds = %if.then170, %if.end166.if.end171_crit_edge
  %146 = ptrtoint ptr %err to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %err, align 4
  br label %cleanup

free_used_maps:                                   ; preds = %if.end162.free_used_maps_crit_edge, %if.end157.free_used_maps_crit_edge, %if.end152.free_used_maps_crit_edge
  %148 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %148)
  %149 = load ptr, ptr %prog, align 4
  %aux172 = getelementptr inbounds %struct.bpf_prog, ptr %149, i32 0, i32 10
  %150 = ptrtoint ptr %aux172 to i32
  call void @__asan_load4_noabort(i32 %150)
  %151 = load ptr, ptr %aux172, align 4
  %func_cnt = getelementptr inbounds %struct.bpf_prog_aux, ptr %151, i32 0, i32 8
  %152 = ptrtoint ptr %func_cnt to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load i32, ptr %func_cnt, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %153)
  %tobool173 = icmp ne i32 %153, 0
  call fastcc void @__bpf_prog_put_noref(ptr noundef %149, i1 noundef zeroext %tobool173)
  %154 = ptrtoint ptr %err to i32
  call void @__asan_load4_noabort(i32 %154)
  %155 = load i32, ptr %err, align 4
  br label %cleanup

free_prog_sec:                                    ; preds = %if.end142.free_prog_sec_crit_edge, %find_prog_type.exit.thread, %if.then132.free_prog_sec_crit_edge, %if.end104.free_prog_sec_crit_edge
  %156 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %156)
  %157 = load ptr, ptr %prog, align 4
  %aux174 = getelementptr inbounds %struct.bpf_prog, ptr %157, i32 0, i32 10
  %158 = ptrtoint ptr %aux174 to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %aux174, align 4
  %user175 = getelementptr inbounds %struct.bpf_prog_aux, ptr %159, i32 0, i32 42
  %160 = ptrtoint ptr %user175 to i32
  call void @__asan_load4_noabort(i32 %160)
  %161 = load ptr, ptr %user175, align 8
  call void @free_uid(ptr noundef %161) #19
  %162 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load ptr, ptr %prog, align 4
  %aux176 = getelementptr inbounds %struct.bpf_prog, ptr %163, i32 0, i32 10
  %164 = ptrtoint ptr %aux176 to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %aux176, align 4
  call void @security_bpf_prog_free(ptr noundef %165) #19
  br label %free_prog

free_prog:                                        ; preds = %free_prog_sec, %if.end82.free_prog_crit_edge
  %166 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %166)
  %167 = load ptr, ptr %prog, align 4
  %aux177 = getelementptr inbounds %struct.bpf_prog, ptr %167, i32 0, i32 10
  %168 = ptrtoint ptr %aux177 to i32
  call void @__asan_load4_noabort(i32 %168)
  %169 = load ptr, ptr %aux177, align 4
  %attach_btf178 = getelementptr inbounds %struct.bpf_prog_aux, ptr %169, i32 0, i32 14
  %170 = ptrtoint ptr %attach_btf178 to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %attach_btf178, align 4
  %tobool179.not = icmp eq ptr %171, null
  br i1 %tobool179.not, label %free_prog.if.end183_crit_edge, label %if.then180

free_prog.if.end183_crit_edge:                    ; preds = %free_prog
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end183

if.then180:                                       ; preds = %free_prog
  call void @__sanitizer_cov_trace_pc() #21
  call void @btf_put(ptr noundef nonnull %171) #19
  br label %if.end183

if.end183:                                        ; preds = %if.then180, %free_prog.if.end183_crit_edge
  %172 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %prog, align 4
  call void @bpf_prog_free(ptr noundef %173) #19
  %174 = ptrtoint ptr %err to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %err, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end183, %free_used_maps, %if.end171, %if.then80, %if.end78.cleanup_crit_edge, %if.then68, %if.end66.cleanup_crit_edge, %if.end54.cleanup_crit_edge, %if.then52, %if.then45, %if.then39.cleanup_crit_edge, %land.lhs.true31.cleanup_crit_edge, %land.lhs.true26.cleanup_crit_edge, %land.lhs.true19.cleanup_crit_edge, %.cleanup_crit_edge, %license_is_gpl_compatible.exit.cleanup_crit_edge, %strncpy_from_bpfptr.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %175, %if.end183 ], [ %155, %free_used_maps ], [ %147, %if.end171 ], [ -524, %if.then45 ], [ %28, %if.then52 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ -14, %strncpy_from_bpfptr.exit.cleanup_crit_edge ], [ -7, %.cleanup_crit_edge ], [ -7, %license_is_gpl_compatible.exit.cleanup_crit_edge ], [ -1, %land.lhs.true19.cleanup_crit_edge ], [ -1, %land.lhs.true26.cleanup_crit_edge ], [ -1, %land.lhs.true31.cleanup_crit_edge ], [ -22, %if.then39.cleanup_crit_edge ], [ -22, %if.end54.cleanup_crit_edge ], [ -22, %if.then68 ], [ -22, %if.end66.cleanup_crit_edge ], [ -12, %if.then80 ], [ -12, %if.end78.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %license) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %err) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %prog) #19
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_obj_pin(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr %struct.anon.5, ptr %attr, i32 1
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 128) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %lor.lhs.false, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %file_flags = getelementptr inbounds %struct.anon.5, ptr %attr, i32 0, i32 2
  %0 = ptrtoint ptr %file_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %file_flags, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp2.not = icmp eq i32 %1, 0
  br i1 %cmp2.not, label %if.end, label %lor.lhs.false.return_crit_edge

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end:                                           ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  %bpf_fd = getelementptr inbounds %struct.anon.5, ptr %attr, i32 0, i32 1
  %2 = ptrtoint ptr %bpf_fd to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %bpf_fd, align 8
  %4 = ptrtoint ptr %attr to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %attr, align 8
  %conv5 = trunc i64 %5 to i32
  %6 = inttoptr i32 %conv5 to ptr
  %call6 = tail call i32 @bpf_obj_pin_user(i32 noundef %3, ptr noundef %6) #19
  br label %return

return:                                           ; preds = %if.end, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call6, %if.end ], [ -22, %lor.lhs.false.return_crit_edge ], [ -22, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_obj_get(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %file_flags = getelementptr inbounds %struct.anon.5, ptr %attr, i32 0, i32 2
  %add.ptr = getelementptr %struct.anon.5, ptr %attr, i32 1
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 128) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %lor.lhs.false, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

lor.lhs.false:                                    ; preds = %entry
  %bpf_fd = getelementptr inbounds %struct.anon.5, ptr %attr, i32 0, i32 1
  %0 = ptrtoint ptr %bpf_fd to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %bpf_fd, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cmp1.not = icmp eq i32 %1, 0
  br i1 %cmp1.not, label %lor.lhs.false2, label %lor.lhs.false.return_crit_edge

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = ptrtoint ptr %file_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %file_flags, align 4
  %and = and i32 %3, -25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %lor.lhs.false2.return_crit_edge

lor.lhs.false2.return_crit_edge:                  ; preds = %lor.lhs.false2
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end:                                           ; preds = %lor.lhs.false2
  call void @__sanitizer_cov_trace_pc() #21
  %4 = ptrtoint ptr %attr to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %attr, align 8
  %conv6 = trunc i64 %5 to i32
  %6 = inttoptr i32 %conv6 to ptr
  %call8 = tail call i32 @bpf_obj_get_user(ptr noundef %6, i32 noundef %3) #19
  br label %return

return:                                           ; preds = %if.end, %lor.lhs.false2.return_crit_edge, %lor.lhs.false.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call8, %if.end ], [ -22, %lor.lhs.false2.return_crit_edge ], [ -22, %lor.lhs.false.return_crit_edge ], [ -22, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_prog_attach(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr %struct.anon.6, ptr %attr, i32 1
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 124) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %attach_flags = getelementptr inbounds %struct.anon.6, ptr %attr, i32 0, i32 3
  %0 = ptrtoint ptr %attach_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %attach_flags, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %1)
  %tobool.not = icmp ult i32 %1, 8
  br i1 %tobool.not, label %if.end2, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %attach_type = getelementptr inbounds %struct.anon.6, ptr %attr, i32 0, i32 2
  %2 = ptrtoint ptr %attach_type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %attach_type, align 8
  %4 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.79)
  switch i32 %3, label %if.end2.cleanup_crit_edge [
    i32 0, label %if.end2.if.end6_crit_edge
    i32 1, label %if.end2.if.end6_crit_edge65
    i32 2, label %if.end2.sw.bb1.i_crit_edge
    i32 34, label %if.end2.sw.bb1.i_crit_edge66
    i32 12, label %if.end2.sw.bb1.i_crit_edge67
    i32 13, label %if.end2.sw.bb1.i_crit_edge68
    i32 8, label %if.end2.sw.bb2.i_crit_edge
    i32 9, label %if.end2.sw.bb2.i_crit_edge69
    i32 10, label %if.end2.sw.bb2.i_crit_edge70
    i32 11, label %if.end2.sw.bb2.i_crit_edge71
    i32 29, label %if.end2.sw.bb2.i_crit_edge72
    i32 30, label %if.end2.sw.bb2.i_crit_edge73
    i32 31, label %if.end2.sw.bb2.i_crit_edge74
    i32 32, label %if.end2.sw.bb2.i_crit_edge75
    i32 14, label %if.end2.sw.bb2.i_crit_edge76
    i32 15, label %if.end2.sw.bb2.i_crit_edge77
    i32 19, label %if.end2.sw.bb2.i_crit_edge78
    i32 20, label %if.end2.sw.bb2.i_crit_edge79
    i32 3, label %sw.bb3.i
    i32 6, label %sw.bb4.i
    i32 7, label %sw.bb5.i
    i32 4, label %if.end2.sw.bb6.i_crit_edge
    i32 5, label %if.end2.sw.bb6.i_crit_edge80
    i32 38, label %if.end2.sw.bb6.i_crit_edge81
    i32 16, label %sw.bb7.i
    i32 17, label %sw.bb8.i
    i32 18, label %sw.bb9.i
    i32 21, label %if.end2.sw.bb10.i_crit_edge
    i32 22, label %if.end2.sw.bb10.i_crit_edge82
    i32 28, label %sw.bb11.i
    i32 36, label %sw.bb12.i
    i32 37, label %sw.bb13.i
  ]

if.end2.sw.bb10.i_crit_edge82:                    ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb10.i

if.end2.sw.bb10.i_crit_edge:                      ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb10.i

if.end2.sw.bb6.i_crit_edge81:                     ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb6.i

if.end2.sw.bb6.i_crit_edge80:                     ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb6.i

if.end2.sw.bb6.i_crit_edge:                       ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb6.i

if.end2.sw.bb2.i_crit_edge79:                     ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end2.sw.bb2.i_crit_edge78:                     ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end2.sw.bb2.i_crit_edge77:                     ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end2.sw.bb2.i_crit_edge76:                     ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end2.sw.bb2.i_crit_edge75:                     ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end2.sw.bb2.i_crit_edge74:                     ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end2.sw.bb2.i_crit_edge73:                     ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end2.sw.bb2.i_crit_edge72:                     ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end2.sw.bb2.i_crit_edge71:                     ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end2.sw.bb2.i_crit_edge70:                     ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end2.sw.bb2.i_crit_edge69:                     ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end2.sw.bb2.i_crit_edge:                       ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end2.sw.bb1.i_crit_edge68:                     ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb1.i

if.end2.sw.bb1.i_crit_edge67:                     ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb1.i

if.end2.sw.bb1.i_crit_edge66:                     ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb1.i

if.end2.sw.bb1.i_crit_edge:                       ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb1.i

if.end2.if.end6_crit_edge65:                      ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end6

if.end2.if.end6_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end6

if.end2.cleanup_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

sw.bb1.i:                                         ; preds = %if.end2.sw.bb1.i_crit_edge, %if.end2.sw.bb1.i_crit_edge66, %if.end2.sw.bb1.i_crit_edge67, %if.end2.sw.bb1.i_crit_edge68
  br label %if.end6

sw.bb2.i:                                         ; preds = %if.end2.sw.bb2.i_crit_edge, %if.end2.sw.bb2.i_crit_edge69, %if.end2.sw.bb2.i_crit_edge70, %if.end2.sw.bb2.i_crit_edge71, %if.end2.sw.bb2.i_crit_edge72, %if.end2.sw.bb2.i_crit_edge73, %if.end2.sw.bb2.i_crit_edge74, %if.end2.sw.bb2.i_crit_edge75, %if.end2.sw.bb2.i_crit_edge76, %if.end2.sw.bb2.i_crit_edge77, %if.end2.sw.bb2.i_crit_edge78, %if.end2.sw.bb2.i_crit_edge79
  br label %if.end6

sw.bb3.i:                                         ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end6

sw.bb4.i:                                         ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end6

sw.bb5.i:                                         ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end6

sw.bb6.i:                                         ; preds = %if.end2.sw.bb6.i_crit_edge, %if.end2.sw.bb6.i_crit_edge80, %if.end2.sw.bb6.i_crit_edge81
  br label %if.end6

sw.bb7.i:                                         ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end6

sw.bb8.i:                                         ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end6

sw.bb9.i:                                         ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end6

sw.bb10.i:                                        ; preds = %if.end2.sw.bb10.i_crit_edge, %if.end2.sw.bb10.i_crit_edge82
  br label %if.end6

sw.bb11.i:                                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end6

sw.bb12.i:                                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end6

sw.bb13.i:                                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end6

if.end6:                                          ; preds = %sw.bb13.i, %sw.bb12.i, %sw.bb11.i, %sw.bb10.i, %sw.bb9.i, %sw.bb8.i, %sw.bb7.i, %sw.bb6.i, %sw.bb5.i, %sw.bb4.i, %sw.bb3.i, %sw.bb2.i, %sw.bb1.i, %if.end2.if.end6_crit_edge, %if.end2.if.end6_crit_edge65
  %retval.0.i.ph = phi i32 [ 8, %if.end2.if.end6_crit_edge ], [ 8, %if.end2.if.end6_crit_edge65 ], [ 9, %sw.bb1.i ], [ 18, %sw.bb2.i ], [ 13, %sw.bb3.i ], [ 15, %sw.bb4.i ], [ 16, %sw.bb5.i ], [ 14, %sw.bb6.i ], [ 20, %sw.bb7.i ], [ 22, %sw.bb8.i ], [ 23, %sw.bb9.i ], [ 25, %sw.bb10.i ], [ 26, %sw.bb11.i ], [ 30, %sw.bb12.i ], [ 6, %sw.bb13.i ]
  %attach_bpf_fd = getelementptr inbounds %struct.anon.6, ptr %attr, i32 0, i32 1
  %5 = ptrtoint ptr %attach_bpf_fd to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %attach_bpf_fd, align 4
  %call.i.i.i.i = tail call i32 @__fdget(i32 noundef %6) #19, !noalias !279
  %and.i.i.i.i.i = and i32 %call.i.i.i.i, -4
  %7 = inttoptr i32 %and.i.i.i.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.end6.if.then9_crit_edge, label %if.end.i.i.i.i

if.end6.if.then9_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then9

if.end.i.i.i.i:                                   ; preds = %if.end6
  %f_op.i.i.i.i = getelementptr inbounds %struct.file, ptr %7, i32 0, i32 3
  %8 = ptrtoint ptr %f_op.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %f_op.i.i.i.i, align 4
  %cmp.not.i.i.i.i = icmp eq ptr %9, @bpf_prog_fops
  br i1 %cmp.not.i.i.i.i, label %____bpf_prog_get.exit.i.i.i, label %if.then2.i.i.i.i

if.then2.i.i.i.i:                                 ; preds = %if.end.i.i.i.i
  %and.i.i17.i.i.i = and i32 %call.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i17.i.i.i)
  %tobool.not.i.i.i.i.i = icmp eq i32 %and.i.i17.i.i.i, 0
  br i1 %tobool.not.i.i.i.i.i, label %if.then2.i.i.i.i.if.then9_crit_edge, label %if.then2.i.i.i.i.cleanup.sink.split.i.i.i_crit_edge

if.then2.i.i.i.i.cleanup.sink.split.i.i.i_crit_edge: ; preds = %if.then2.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i.i.i

if.then2.i.i.i.i.if.then9_crit_edge:              ; preds = %if.then2.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then9

____bpf_prog_get.exit.i.i.i:                      ; preds = %if.end.i.i.i.i
  %private_data.i.i.i.i = getelementptr inbounds %struct.file, ptr %7, i32 0, i32 16
  %10 = ptrtoint ptr %private_data.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %private_data.i.i.i.i, align 4
  %cmp.i.i.i.i = icmp ugt ptr %11, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i.i, label %____bpf_prog_get.exit.i.i.i.bpf_prog_get_type.exit_crit_edge, label %if.end.i.i.i

____bpf_prog_get.exit.i.i.i.bpf_prog_get_type.exit_crit_edge: ; preds = %____bpf_prog_get.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_type.exit

if.end.i.i.i:                                     ; preds = %____bpf_prog_get.exit.i.i.i
  %type.i.i.i.i = getelementptr inbounds %struct.bpf_prog, ptr %11, i32 0, i32 2
  %12 = ptrtoint ptr %type.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %type.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %retval.0.i.ph)
  %cmp.not.i19.i.i.i = icmp eq i32 %13, %retval.0.i.ph
  br i1 %cmp.not.i19.i.i.i, label %bpf_prog_get_ok.exit.i.i.i, label %if.end.i.i.i.out.i.i.i_crit_edge

if.end.i.i.i.out.i.i.i_crit_edge:                 ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %out.i.i.i

bpf_prog_get_ok.exit.i.i.i:                       ; preds = %if.end.i.i.i
  %aux.i.i.i.i = getelementptr inbounds %struct.bpf_prog, ptr %11, i32 0, i32 10
  %14 = ptrtoint ptr %aux.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %aux.i.i.i.i, align 4
  %offload_requested.i.i.i.i.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %15, i32 0, i32 22
  %16 = ptrtoint ptr %offload_requested.i.i.i.i.i to i32
  call void @__asan_load1_noabort(i32 %16)
  %17 = load i8, ptr %offload_requested.i.i.i.i.i, align 1, !range !227
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %17)
  %tobool.i.not.i.i.i.i = icmp eq i8 %17, 0
  br i1 %tobool.i.not.i.i.i.i, label %if.end5.i.i.i, label %bpf_prog_get_ok.exit.i.i.i.out.i.i.i_crit_edge

bpf_prog_get_ok.exit.i.i.i.out.i.i.i_crit_edge:   ; preds = %bpf_prog_get_ok.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %out.i.i.i

if.end5.i.i.i:                                    ; preds = %bpf_prog_get_ok.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %15, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %15) #19
  br label %out.i.i.i

out.i.i.i:                                        ; preds = %if.end5.i.i.i, %bpf_prog_get_ok.exit.i.i.i.out.i.i.i_crit_edge, %if.end.i.i.i.out.i.i.i_crit_edge
  %prog.0.i.i.i = phi ptr [ %11, %if.end5.i.i.i ], [ inttoptr (i32 -22 to ptr), %bpf_prog_get_ok.exit.i.i.i.out.i.i.i_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end.i.i.i.out.i.i.i_crit_edge ]
  %and.i.i.i.i = and i32 %call.i.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i23.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i23.i.i.i, label %out.i.i.i.bpf_prog_get_type.exit_crit_edge, label %out.i.i.i.cleanup.sink.split.i.i.i_crit_edge

out.i.i.i.cleanup.sink.split.i.i.i_crit_edge:     ; preds = %out.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i.i.i

out.i.i.i.bpf_prog_get_type.exit_crit_edge:       ; preds = %out.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_type.exit

cleanup.sink.split.i.i.i:                         ; preds = %out.i.i.i.cleanup.sink.split.i.i.i_crit_edge, %if.then2.i.i.i.i.cleanup.sink.split.i.i.i_crit_edge
  %retval.0.ph.i.i.i = phi ptr [ inttoptr (i32 -22 to ptr), %if.then2.i.i.i.i.cleanup.sink.split.i.i.i_crit_edge ], [ %prog.0.i.i.i, %out.i.i.i.cleanup.sink.split.i.i.i_crit_edge ]
  tail call void @fput(ptr noundef nonnull %7) #19
  br label %bpf_prog_get_type.exit

bpf_prog_get_type.exit:                           ; preds = %cleanup.sink.split.i.i.i, %out.i.i.i.bpf_prog_get_type.exit_crit_edge, %____bpf_prog_get.exit.i.i.i.bpf_prog_get_type.exit_crit_edge
  %retval.0.i.i.i = phi ptr [ %11, %____bpf_prog_get.exit.i.i.i.bpf_prog_get_type.exit_crit_edge ], [ %prog.0.i.i.i, %out.i.i.i.bpf_prog_get_type.exit_crit_edge ], [ %retval.0.ph.i.i.i, %cleanup.sink.split.i.i.i ]
  %cmp.i = icmp ugt ptr %retval.0.i.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %bpf_prog_get_type.exit.if.then9_crit_edge, label %if.end11

bpf_prog_get_type.exit.if.then9_crit_edge:        ; preds = %bpf_prog_get_type.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then9

if.then9:                                         ; preds = %bpf_prog_get_type.exit.if.then9_crit_edge, %if.then2.i.i.i.i.if.then9_crit_edge, %if.end6.if.then9_crit_edge
  %retval.0.i.i.i57 = phi ptr [ %retval.0.i.i.i, %bpf_prog_get_type.exit.if.then9_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.end6.if.then9_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then2.i.i.i.i.if.then9_crit_edge ]
  %18 = ptrtoint ptr %retval.0.i.i.i57 to i32
  br label %cleanup

if.end11:                                         ; preds = %bpf_prog_get_type.exit
  %19 = ptrtoint ptr %attach_type to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %attach_type, align 8
  %type.i = getelementptr inbounds %struct.bpf_prog, ptr %retval.0.i.i.i, i32 0, i32 2
  %21 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %type.i, align 4
  %23 = zext i32 %22 to i64
  call void @__sanitizer_cov_trace_switch(i64 %23, ptr @__sancov_gen_cov_switch_values.80)
  switch i32 %22, label %if.end11.if.end16_crit_edge [
    i32 9, label %if.end11.return.sink.split.i_crit_edge
    i32 18, label %if.end11.return.sink.split.i_crit_edge83
    i32 25, label %if.end11.return.sink.split.i_crit_edge84
    i32 30, label %if.end11.return.sink.split.i_crit_edge85
    i32 8, label %sw.bb1.i49
  ]

if.end11.return.sink.split.i_crit_edge85:         ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #21
  br label %return.sink.split.i

if.end11.return.sink.split.i_crit_edge84:         ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #21
  br label %return.sink.split.i

if.end11.return.sink.split.i_crit_edge83:         ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #21
  br label %return.sink.split.i

if.end11.return.sink.split.i_crit_edge:           ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #21
  br label %return.sink.split.i

if.end11.if.end16_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end16

sw.bb1.i49:                                       ; preds = %if.end11
  %call.i = tail call zeroext i1 @capable(i32 noundef 12) #19
  br i1 %call.i, label %if.end.i, label %sw.bb1.i49.if.then15_crit_edge

sw.bb1.i49.if.then15_crit_edge:                   ; preds = %sw.bb1.i49
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then15

if.end.i:                                         ; preds = %sw.bb1.i49
  %enforce_expected_attach_type.i = getelementptr inbounds %struct.bpf_prog, ptr %retval.0.i.i.i, i32 0, i32 1
  %24 = ptrtoint ptr %enforce_expected_attach_type.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %bf.load.i = load i16, ptr %enforce_expected_attach_type.i, align 2
  %25 = and i16 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %25)
  %tobool.not.i = icmp eq i16 %25, 0
  br i1 %tobool.not.i, label %if.end.i.if.end16_crit_edge, label %if.end.i.return.sink.split.i_crit_edge

if.end.i.return.sink.split.i_crit_edge:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %return.sink.split.i

if.end.i.if.end16_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end16

return.sink.split.i:                              ; preds = %if.end.i.return.sink.split.i_crit_edge, %if.end11.return.sink.split.i_crit_edge, %if.end11.return.sink.split.i_crit_edge83, %if.end11.return.sink.split.i_crit_edge84, %if.end11.return.sink.split.i_crit_edge85
  %expected_attach_type2.i = getelementptr inbounds %struct.bpf_prog, ptr %retval.0.i.i.i, i32 0, i32 3
  %26 = ptrtoint ptr %expected_attach_type2.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %expected_attach_type2.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %27, i32 %20)
  %cmp3.not.i = icmp eq i32 %27, %20
  br i1 %cmp3.not.i, label %return.sink.split.i.if.end16_crit_edge, label %return.sink.split.i.if.then15_crit_edge

return.sink.split.i.if.then15_crit_edge:          ; preds = %return.sink.split.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then15

return.sink.split.i.if.end16_crit_edge:           ; preds = %return.sink.split.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end16

if.then15:                                        ; preds = %return.sink.split.i.if.then15_crit_edge, %sw.bb1.i49.if.then15_crit_edge
  tail call void @bpf_prog_put(ptr noundef %retval.0.i.i.i)
  br label %cleanup

if.end16:                                         ; preds = %return.sink.split.i.if.end16_crit_edge, %if.end.i.if.end16_crit_edge, %if.end11.if.end16_crit_edge
  %28 = zext i32 %retval.0.i.ph to i64
  call void @__sanitizer_cov_trace_switch(i64 %28, ptr @__sancov_gen_cov_switch_values.81)
  switch i32 %retval.0.i.ph, label %if.end16.if.then25_crit_edge [
    i32 14, label %if.end16.sw.bb_crit_edge
    i32 16, label %if.end16.sw.bb_crit_edge86
    i32 20, label %sw.bb18
    i32 22, label %sw.bb20
    i32 15, label %if.end16.sw.bb22_crit_edge
    i32 8, label %if.end16.sw.bb22_crit_edge87
    i32 9, label %if.end16.sw.bb22_crit_edge88
    i32 18, label %if.end16.sw.bb22_crit_edge89
    i32 25, label %if.end16.sw.bb22_crit_edge90
    i32 23, label %if.end16.sw.bb22_crit_edge91
    i32 13, label %if.end16.sw.bb22_crit_edge92
  ]

if.end16.sw.bb22_crit_edge92:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb22

if.end16.sw.bb22_crit_edge91:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb22

if.end16.sw.bb22_crit_edge90:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb22

if.end16.sw.bb22_crit_edge89:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb22

if.end16.sw.bb22_crit_edge88:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb22

if.end16.sw.bb22_crit_edge87:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb22

if.end16.sw.bb22_crit_edge:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb22

if.end16.sw.bb_crit_edge86:                       ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end16.sw.bb_crit_edge:                         ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end16.if.then25_crit_edge:                     ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then25

sw.bb:                                            ; preds = %if.end16.sw.bb_crit_edge, %if.end16.sw.bb_crit_edge86
  %call17 = tail call i32 @sock_map_get_from_fd(ptr noundef %attr, ptr noundef %retval.0.i.i.i) #19
  br label %sw.epilog

sw.bb18:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  %call19 = tail call i32 @lirc_prog_attach(ptr noundef %attr, ptr noundef %retval.0.i.i.i) #19
  br label %sw.epilog

sw.bb20:                                          ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #21
  %call21 = tail call i32 @netns_bpf_prog_attach(ptr noundef %attr, ptr noundef %retval.0.i.i.i) #19
  br label %sw.epilog

sw.bb22:                                          ; preds = %if.end16.sw.bb22_crit_edge, %if.end16.sw.bb22_crit_edge87, %if.end16.sw.bb22_crit_edge88, %if.end16.sw.bb22_crit_edge89, %if.end16.sw.bb22_crit_edge90, %if.end16.sw.bb22_crit_edge91, %if.end16.sw.bb22_crit_edge92
  %call23 = tail call i32 @cgroup_bpf_prog_attach(ptr noundef %attr, i32 noundef %retval.0.i.ph, ptr noundef %retval.0.i.i.i) #19
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb22, %sw.bb20, %sw.bb18, %sw.bb
  %ret.0 = phi i32 [ %call23, %sw.bb22 ], [ %call21, %sw.bb20 ], [ %call19, %sw.bb18 ], [ %call17, %sw.bb ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool24.not = icmp eq i32 %ret.0, 0
  br i1 %tobool24.not, label %sw.epilog.cleanup_crit_edge, label %sw.epilog.if.then25_crit_edge

sw.epilog.if.then25_crit_edge:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then25

sw.epilog.cleanup_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then25:                                        ; preds = %sw.epilog.if.then25_crit_edge, %if.end16.if.then25_crit_edge
  %ret.064 = phi i32 [ %ret.0, %sw.epilog.if.then25_crit_edge ], [ -22, %if.end16.if.then25_crit_edge ]
  tail call void @bpf_prog_put(ptr noundef %retval.0.i.i.i)
  br label %cleanup

cleanup:                                          ; preds = %if.then25, %sw.epilog.cleanup_crit_edge, %if.then15, %if.then9, %if.end2.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %18, %if.then9 ], [ -22, %if.then15 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ %ret.064, %if.then25 ], [ 0, %sw.epilog.cleanup_crit_edge ], [ -22, %if.end2.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_prog_detach(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr %struct.anon.6, ptr %attr, i32 0, i32 3
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 132) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %attach_type = getelementptr inbounds %struct.anon.6, ptr %attr, i32 0, i32 2
  %0 = ptrtoint ptr %attach_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %attach_type, align 8
  %2 = zext i32 %1 to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.82)
  switch i32 %1, label %if.end.cleanup_crit_edge [
    i32 0, label %if.end.sw.bb8_crit_edge
    i32 1, label %if.end.sw.bb8_crit_edge31
    i32 2, label %if.end.sw.bb1.i_crit_edge
    i32 34, label %if.end.sw.bb1.i_crit_edge32
    i32 12, label %if.end.sw.bb1.i_crit_edge33
    i32 13, label %if.end.sw.bb1.i_crit_edge34
    i32 8, label %if.end.sw.bb2.i_crit_edge
    i32 9, label %if.end.sw.bb2.i_crit_edge35
    i32 10, label %if.end.sw.bb2.i_crit_edge36
    i32 11, label %if.end.sw.bb2.i_crit_edge37
    i32 29, label %if.end.sw.bb2.i_crit_edge38
    i32 30, label %if.end.sw.bb2.i_crit_edge39
    i32 31, label %if.end.sw.bb2.i_crit_edge40
    i32 32, label %if.end.sw.bb2.i_crit_edge41
    i32 14, label %if.end.sw.bb2.i_crit_edge42
    i32 15, label %if.end.sw.bb2.i_crit_edge43
    i32 19, label %if.end.sw.bb2.i_crit_edge44
    i32 20, label %if.end.sw.bb2.i_crit_edge45
    i32 3, label %sw.bb3.i
    i32 6, label %sw.bb4.i
    i32 7, label %if.end.sw.bb_crit_edge
    i32 4, label %if.end.sw.bb6.i_crit_edge
    i32 5, label %if.end.sw.bb6.i_crit_edge46
    i32 38, label %if.end.sw.bb6.i_crit_edge47
    i32 16, label %sw.bb4
    i32 17, label %sw.bb6
    i32 18, label %sw.bb9.i
    i32 21, label %if.end.sw.bb10.i_crit_edge
    i32 22, label %if.end.sw.bb10.i_crit_edge48
  ]

if.end.sw.bb10.i_crit_edge48:                     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb10.i

if.end.sw.bb10.i_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb10.i

if.end.sw.bb6.i_crit_edge47:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb6.i

if.end.sw.bb6.i_crit_edge46:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb6.i

if.end.sw.bb6.i_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb6.i

if.end.sw.bb_crit_edge:                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end.sw.bb2.i_crit_edge45:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end.sw.bb2.i_crit_edge44:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end.sw.bb2.i_crit_edge43:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end.sw.bb2.i_crit_edge42:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end.sw.bb2.i_crit_edge41:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end.sw.bb2.i_crit_edge40:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end.sw.bb2.i_crit_edge39:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end.sw.bb2.i_crit_edge38:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end.sw.bb2.i_crit_edge37:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end.sw.bb2.i_crit_edge36:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end.sw.bb2.i_crit_edge35:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end.sw.bb2.i_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb2.i

if.end.sw.bb1.i_crit_edge34:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb1.i

if.end.sw.bb1.i_crit_edge33:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb1.i

if.end.sw.bb1.i_crit_edge32:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb1.i

if.end.sw.bb1.i_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb1.i

if.end.sw.bb8_crit_edge31:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb8

if.end.sw.bb8_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb8

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

sw.bb1.i:                                         ; preds = %if.end.sw.bb1.i_crit_edge, %if.end.sw.bb1.i_crit_edge32, %if.end.sw.bb1.i_crit_edge33, %if.end.sw.bb1.i_crit_edge34
  br label %sw.bb8

sw.bb2.i:                                         ; preds = %if.end.sw.bb2.i_crit_edge, %if.end.sw.bb2.i_crit_edge35, %if.end.sw.bb2.i_crit_edge36, %if.end.sw.bb2.i_crit_edge37, %if.end.sw.bb2.i_crit_edge38, %if.end.sw.bb2.i_crit_edge39, %if.end.sw.bb2.i_crit_edge40, %if.end.sw.bb2.i_crit_edge41, %if.end.sw.bb2.i_crit_edge42, %if.end.sw.bb2.i_crit_edge43, %if.end.sw.bb2.i_crit_edge44, %if.end.sw.bb2.i_crit_edge45
  br label %sw.bb8

sw.bb3.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb8

sw.bb4.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb8

sw.bb6.i:                                         ; preds = %if.end.sw.bb6.i_crit_edge, %if.end.sw.bb6.i_crit_edge46, %if.end.sw.bb6.i_crit_edge47
  br label %sw.bb

sw.bb9.i:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb8

sw.bb10.i:                                        ; preds = %if.end.sw.bb10.i_crit_edge, %if.end.sw.bb10.i_crit_edge48
  br label %sw.bb8

sw.bb:                                            ; preds = %sw.bb6.i, %if.end.sw.bb_crit_edge
  %retval.0.i.ph25 = phi i32 [ 14, %sw.bb6.i ], [ 16, %if.end.sw.bb_crit_edge ]
  %call3 = tail call i32 @sock_map_prog_detach(ptr noundef %attr, i32 noundef %retval.0.i.ph25) #19
  br label %cleanup

sw.bb4:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %call5 = tail call i32 @lirc_prog_detach(ptr noundef %attr) #19
  br label %cleanup

sw.bb6:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %call7 = tail call i32 @netns_bpf_prog_detach(ptr noundef %attr, i32 noundef 22) #19
  br label %cleanup

sw.bb8:                                           ; preds = %sw.bb10.i, %sw.bb9.i, %sw.bb4.i, %sw.bb3.i, %sw.bb2.i, %sw.bb1.i, %if.end.sw.bb8_crit_edge, %if.end.sw.bb8_crit_edge31
  %retval.0.i.ph = phi i32 [ 8, %if.end.sw.bb8_crit_edge ], [ 8, %if.end.sw.bb8_crit_edge31 ], [ 9, %sw.bb1.i ], [ 18, %sw.bb2.i ], [ 13, %sw.bb3.i ], [ 15, %sw.bb4.i ], [ 23, %sw.bb9.i ], [ 25, %sw.bb10.i ]
  %call9 = tail call i32 @cgroup_bpf_prog_detach(ptr noundef %attr, i32 noundef %retval.0.i.ph) #19
  br label %cleanup

cleanup:                                          ; preds = %sw.bb8, %sw.bb6, %sw.bb4, %sw.bb, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call9, %sw.bb8 ], [ %call7, %sw.bb6 ], [ %call5, %sw.bb4 ], [ %call3, %sw.bb ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_prog_query(ptr noundef %attr, ptr noundef %uattr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call zeroext i1 @capable(i32 noundef 12) #19
  br i1 %call, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end:                                           ; preds = %entry
  %prog_cnt = getelementptr inbounds %struct.anon.11, ptr %attr, i32 0, i32 5
  %add.ptr = getelementptr i8, ptr %prog_cnt, i32 4
  %call1 = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 116) #19
  %cmp.not = icmp eq ptr %call1, null
  br i1 %cmp.not, label %if.end3, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end3:                                          ; preds = %if.end
  %query_flags = getelementptr inbounds %struct.anon.11, ptr %attr, i32 0, i32 2
  %0 = ptrtoint ptr %query_flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %query_flags, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %1)
  %tobool.not = icmp ult i32 %1, 2
  br i1 %tobool.not, label %if.end5, label %if.end3.return_crit_edge

if.end3.return_crit_edge:                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end5:                                          ; preds = %if.end3
  %attach_type = getelementptr inbounds %struct.anon.11, ptr %attr, i32 0, i32 1
  %2 = ptrtoint ptr %attach_type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %attach_type, align 4
  %4 = zext i32 %3 to i64
  call void @__sanitizer_cov_trace_switch(i64 %4, ptr @__sancov_gen_cov_switch_values.83)
  switch i32 %3, label %if.end5.return_crit_edge [
    i32 0, label %if.end5.sw.bb_crit_edge
    i32 1, label %if.end5.sw.bb_crit_edge18
    i32 2, label %if.end5.sw.bb_crit_edge19
    i32 34, label %if.end5.sw.bb_crit_edge20
    i32 8, label %if.end5.sw.bb_crit_edge21
    i32 9, label %if.end5.sw.bb_crit_edge22
    i32 12, label %if.end5.sw.bb_crit_edge23
    i32 13, label %if.end5.sw.bb_crit_edge24
    i32 10, label %if.end5.sw.bb_crit_edge25
    i32 11, label %if.end5.sw.bb_crit_edge26
    i32 29, label %if.end5.sw.bb_crit_edge27
    i32 30, label %if.end5.sw.bb_crit_edge28
    i32 31, label %if.end5.sw.bb_crit_edge29
    i32 32, label %if.end5.sw.bb_crit_edge30
    i32 14, label %if.end5.sw.bb_crit_edge31
    i32 15, label %if.end5.sw.bb_crit_edge32
    i32 19, label %if.end5.sw.bb_crit_edge33
    i32 20, label %if.end5.sw.bb_crit_edge34
    i32 3, label %if.end5.sw.bb_crit_edge35
    i32 6, label %if.end5.sw.bb_crit_edge36
    i32 18, label %if.end5.sw.bb_crit_edge37
    i32 21, label %if.end5.sw.bb_crit_edge38
    i32 22, label %if.end5.sw.bb_crit_edge39
    i32 16, label %sw.bb7
    i32 17, label %if.end5.sw.bb9_crit_edge
    i32 36, label %if.end5.sw.bb9_crit_edge40
  ]

if.end5.sw.bb9_crit_edge40:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb9

if.end5.sw.bb9_crit_edge:                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb9

if.end5.sw.bb_crit_edge39:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge38:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge37:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge36:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge35:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge34:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge33:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge32:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge31:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge30:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge29:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge28:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge27:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge26:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge25:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge24:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge23:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge22:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge21:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge20:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge19:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge18:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.sw.bb_crit_edge:                          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end5.return_crit_edge:                         ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

sw.bb:                                            ; preds = %if.end5.sw.bb_crit_edge, %if.end5.sw.bb_crit_edge18, %if.end5.sw.bb_crit_edge19, %if.end5.sw.bb_crit_edge20, %if.end5.sw.bb_crit_edge21, %if.end5.sw.bb_crit_edge22, %if.end5.sw.bb_crit_edge23, %if.end5.sw.bb_crit_edge24, %if.end5.sw.bb_crit_edge25, %if.end5.sw.bb_crit_edge26, %if.end5.sw.bb_crit_edge27, %if.end5.sw.bb_crit_edge28, %if.end5.sw.bb_crit_edge29, %if.end5.sw.bb_crit_edge30, %if.end5.sw.bb_crit_edge31, %if.end5.sw.bb_crit_edge32, %if.end5.sw.bb_crit_edge33, %if.end5.sw.bb_crit_edge34, %if.end5.sw.bb_crit_edge35, %if.end5.sw.bb_crit_edge36, %if.end5.sw.bb_crit_edge37, %if.end5.sw.bb_crit_edge38, %if.end5.sw.bb_crit_edge39
  %call6 = tail call i32 @cgroup_bpf_prog_query(ptr noundef %attr, ptr noundef %uattr) #19
  br label %return

sw.bb7:                                           ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  %call8 = tail call i32 @lirc_prog_query(ptr noundef %attr, ptr noundef %uattr) #19
  br label %return

sw.bb9:                                           ; preds = %if.end5.sw.bb9_crit_edge, %if.end5.sw.bb9_crit_edge40
  %call10 = tail call i32 @netns_bpf_prog_query(ptr noundef %attr, ptr noundef %uattr) #19
  br label %return

return:                                           ; preds = %sw.bb9, %sw.bb7, %sw.bb, %if.end5.return_crit_edge, %if.end3.return_crit_edge, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call10, %sw.bb9 ], [ %call8, %sw.bb7 ], [ %call6, %sw.bb ], [ -1, %entry.return_crit_edge ], [ -22, %if.end.return_crit_edge ], [ -22, %if.end3.return_crit_edge ], [ -22, %if.end5.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_prog_test_run(ptr noundef %attr, ptr noundef %uattr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr %struct.anon.7, ptr %attr, i32 1
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 72) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %ctx_size_in = getelementptr inbounds %struct.anon.7, ptr %attr, i32 0, i32 8
  %0 = ptrtoint ptr %ctx_size_in to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %ctx_size_in, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  %ctx_in5 = getelementptr inbounds %struct.anon.7, ptr %attr, i32 0, i32 10
  %2 = ptrtoint ptr %ctx_in5 to i32
  call void @__asan_load8_noabort(i32 %2)
  %3 = load i64, ptr %ctx_in5, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %3)
  %tobool6.not = icmp eq i64 %3, 0
  br i1 %tobool.not, label %land.lhs.true4, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  br i1 %tobool6.not, label %land.lhs.true.cleanup_crit_edge, label %land.lhs.true.if.end8_crit_edge

land.lhs.true.if.end8_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end8

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

land.lhs.true4:                                   ; preds = %if.end
  br i1 %tobool6.not, label %land.lhs.true4.if.end8_crit_edge, label %land.lhs.true4.cleanup_crit_edge

land.lhs.true4.cleanup_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

land.lhs.true4.if.end8_crit_edge:                 ; preds = %land.lhs.true4
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end8

if.end8:                                          ; preds = %land.lhs.true4.if.end8_crit_edge, %land.lhs.true.if.end8_crit_edge
  %ctx_size_out = getelementptr inbounds %struct.anon.7, ptr %attr, i32 0, i32 9
  %4 = ptrtoint ptr %ctx_size_out to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %ctx_size_out, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool9.not = icmp eq i32 %5, 0
  %ctx_out16 = getelementptr inbounds %struct.anon.7, ptr %attr, i32 0, i32 11
  %6 = ptrtoint ptr %ctx_out16 to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %ctx_out16, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %7)
  %tobool17.not = icmp eq i64 %7, 0
  br i1 %tobool9.not, label %land.lhs.true15, label %land.lhs.true10

land.lhs.true10:                                  ; preds = %if.end8
  br i1 %tobool17.not, label %land.lhs.true10.cleanup_crit_edge, label %land.lhs.true10.if.end19_crit_edge

land.lhs.true10.if.end19_crit_edge:               ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end19

land.lhs.true10.cleanup_crit_edge:                ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

land.lhs.true15:                                  ; preds = %if.end8
  br i1 %tobool17.not, label %land.lhs.true15.if.end19_crit_edge, label %land.lhs.true15.cleanup_crit_edge

land.lhs.true15.cleanup_crit_edge:                ; preds = %land.lhs.true15
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

land.lhs.true15.if.end19_crit_edge:               ; preds = %land.lhs.true15
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end19

if.end19:                                         ; preds = %land.lhs.true15.if.end19_crit_edge, %land.lhs.true10.if.end19_crit_edge
  %8 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %attr, align 8
  %call.i.i.i = tail call i32 @__fdget(i32 noundef %9) #19, !noalias !282
  %and.i.i.i.i = and i32 %call.i.i.i, -4
  %10 = inttoptr i32 %and.i.i.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end19.if.then22_crit_edge, label %if.end.i.i.i

if.end19.if.then22_crit_edge:                     ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then22

if.end.i.i.i:                                     ; preds = %if.end19
  %f_op.i.i.i = getelementptr inbounds %struct.file, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %f_op.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %f_op.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %12, @bpf_prog_fops
  br i1 %cmp.not.i.i.i, label %____bpf_prog_get.exit.i.i, label %if.then2.i.i.i

if.then2.i.i.i:                                   ; preds = %if.end.i.i.i
  %and.i.i17.i.i = and i32 %call.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i17.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i17.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.then2.i.i.i.if.then22_crit_edge, label %if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge

if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge:  ; preds = %if.then2.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i.i

if.then2.i.i.i.if.then22_crit_edge:               ; preds = %if.then2.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then22

____bpf_prog_get.exit.i.i:                        ; preds = %if.end.i.i.i
  %private_data.i.i.i = getelementptr inbounds %struct.file, ptr %10, i32 0, i32 16
  %13 = ptrtoint ptr %private_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %private_data.i.i.i, align 4
  %cmp.i.i.i = icmp ugt ptr %14, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge, label %if.end.i.i

____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge: ; preds = %____bpf_prog_get.exit.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get.exit

if.end.i.i:                                       ; preds = %____bpf_prog_get.exit.i.i
  %aux.i22.i.i = getelementptr inbounds %struct.bpf_prog, ptr %14, i32 0, i32 10
  %15 = ptrtoint ptr %aux.i22.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %aux.i22.i.i, align 4
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %16, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %16) #19
  %and.i.i.i = and i32 %call.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i23.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i23.i.i, label %if.end.i.i.bpf_prog_get.exit_crit_edge, label %if.end.i.i.cleanup.sink.split.i.i_crit_edge

if.end.i.i.cleanup.sink.split.i.i_crit_edge:      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i.i

if.end.i.i.bpf_prog_get.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get.exit

cleanup.sink.split.i.i:                           ; preds = %if.end.i.i.cleanup.sink.split.i.i_crit_edge, %if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge
  %retval.0.ph.i.i = phi ptr [ inttoptr (i32 -22 to ptr), %if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge ], [ %14, %if.end.i.i.cleanup.sink.split.i.i_crit_edge ]
  tail call void @fput(ptr noundef nonnull %10) #19
  br label %bpf_prog_get.exit

bpf_prog_get.exit:                                ; preds = %cleanup.sink.split.i.i, %if.end.i.i.bpf_prog_get.exit_crit_edge, %____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge
  %retval.0.i.i = phi ptr [ %14, %____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge ], [ %14, %if.end.i.i.bpf_prog_get.exit_crit_edge ], [ %retval.0.ph.i.i, %cleanup.sink.split.i.i ]
  %cmp.i = icmp ugt ptr %retval.0.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %bpf_prog_get.exit.if.then22_crit_edge, label %if.end24

bpf_prog_get.exit.if.then22_crit_edge:            ; preds = %bpf_prog_get.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then22

if.then22:                                        ; preds = %bpf_prog_get.exit.if.then22_crit_edge, %if.then2.i.i.i.if.then22_crit_edge, %if.end19.if.then22_crit_edge
  %retval.0.i.i50 = phi ptr [ %retval.0.i.i, %bpf_prog_get.exit.if.then22_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.end19.if.then22_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then2.i.i.i.if.then22_crit_edge ]
  %17 = ptrtoint ptr %retval.0.i.i50 to i32
  br label %cleanup

if.end24:                                         ; preds = %bpf_prog_get.exit
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %retval.0.i.i, i32 0, i32 10
  %18 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %aux, align 4
  %ops = getelementptr inbounds %struct.bpf_prog_aux, ptr %19, i32 0, i32 37
  %20 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %ops, align 4
  %22 = ptrtoint ptr %21 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %21, align 4
  %tobool25.not = icmp eq ptr %23, null
  br i1 %tobool25.not, label %if.end24.if.end31_crit_edge, label %if.then26

if.end24.if.end31_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end31

if.then26:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #21
  %call30 = tail call i32 %23(ptr noundef %retval.0.i.i, ptr noundef %attr, ptr noundef %uattr) #19
  br label %if.end31

if.end31:                                         ; preds = %if.then26, %if.end24.if.end31_crit_edge
  %ret.0 = phi i32 [ %call30, %if.then26 ], [ -524, %if.end24.if.end31_crit_edge ]
  tail call void @bpf_prog_put(ptr noundef %retval.0.i.i)
  br label %cleanup

cleanup:                                          ; preds = %if.end31, %if.then22, %land.lhs.true15.cleanup_crit_edge, %land.lhs.true10.cleanup_crit_edge, %land.lhs.true4.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %17, %if.then22 ], [ %ret.0, %if.end31 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %land.lhs.true4.cleanup_crit_edge ], [ -22, %land.lhs.true.cleanup_crit_edge ], [ -22, %land.lhs.true15.cleanup_crit_edge ], [ -22, %land.lhs.true10.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_obj_get_next_id(ptr noundef %attr, ptr noundef %uattr, ptr noundef %idr, ptr noundef %lock) unnamed_addr #0 align 64 {
entry:
  %next_id = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %next_id) #19
  %0 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %attr, align 8
  %2 = ptrtoint ptr %next_id to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %1, ptr %next_id, align 4
  %add.ptr = getelementptr %struct.anon.8, ptr %attr, i32 0, i32 2
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 136) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %lor.lhs.false, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %3 = ptrtoint ptr %next_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %next_id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2147483646, i32 %4)
  %cmp2 = icmp ugt i32 %4, 2147483646
  br i1 %cmp2, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %call3 = tail call zeroext i1 @capable(i32 noundef 21) #19
  br i1 %call3, label %if.end5, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %5 = ptrtoint ptr %next_id to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %next_id, align 4
  %inc = add i32 %6, 1
  store i32 %inc, ptr %next_id, align 4
  tail call void @_raw_spin_lock_bh(ptr noundef %lock) #19
  %call6 = call ptr @idr_get_next(ptr noundef %idr, ptr noundef nonnull %next_id) #19
  %tobool.not = icmp eq ptr %call6, null
  call void @_raw_spin_unlock_bh(ptr noundef %lock) #19
  br i1 %tobool.not, label %if.end5.cleanup_crit_edge, label %if.then10

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then10:                                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  %next_id11 = getelementptr inbounds %struct.anon.8, ptr %uattr, i32 0, i32 1
  %7 = ptrtoint ptr %next_id to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %next_id, align 4
  call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 3382) #19
  %9 = call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 4
  %11 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #10, !srcloc !235
  %and.i = and i32 %11, -13
  %or.i = or i32 %and.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %12 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %next_id11, i32 %8, i32 -1226833921) #19, !srcloc !285
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %11) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  br label %cleanup

cleanup:                                          ; preds = %if.then10, %if.end5.cleanup_crit_edge, %if.end.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ -1, %if.end.cleanup_crit_edge ], [ -2, %if.end5.cleanup_crit_edge ], [ %12, %if.then10 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %next_id) #19
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_prog_get_fd_by_id(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %attr, align 8
  %add.ptr = getelementptr i8, ptr %attr, i32 4
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 140) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call zeroext i1 @capable(i32 noundef 21) #19
  br i1 %call1, label %if.end3, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i, label %if.end3.if.then6_crit_edge, label %if.end.i

if.end3.if.then6_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then6

if.end.i:                                         ; preds = %if.end3
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @prog_idr_lock) #19
  %call1.i = tail call ptr @idr_find(ptr noundef nonnull @prog_idr, i32 noundef %1) #19
  %tobool2.not.i = icmp eq ptr %call1.i, null
  br i1 %tobool2.not.i, label %if.end.i.bpf_prog_by_id.exit.thread27_crit_edge, label %if.then3.i

if.end.i.bpf_prog_by_id.exit.thread27_crit_edge:  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_by_id.exit.thread27

if.then3.i:                                       ; preds = %if.end.i
  %aux.i.i = getelementptr inbounds %struct.bpf_prog, ptr %call1.i, i32 0, i32 10
  %2 = ptrtoint ptr %aux.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %aux.i.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %3, i32 noundef 8) #19
  %call.i.i.i = tail call i64 @generic_atomic64_fetch_add_unless(ptr noundef %3, i64 noundef 1, i64 noundef 0) #19
  %conv.i.i = trunc i64 %call.i.i.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv.i.i)
  %tobool.not.i.i = icmp eq i32 %conv.i.i, 0
  br i1 %tobool.not.i.i, label %if.then3.i.bpf_prog_by_id.exit.thread27_crit_edge, label %bpf_prog_by_id.exit

if.then3.i.bpf_prog_by_id.exit.thread27_crit_edge: ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_by_id.exit.thread27

bpf_prog_by_id.exit.thread27:                     ; preds = %if.then3.i.bpf_prog_by_id.exit.thread27_crit_edge, %if.end.i.bpf_prog_by_id.exit.thread27_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @prog_idr_lock) #19
  br label %if.then6

bpf_prog_by_id.exit:                              ; preds = %if.then3.i
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @prog_idr_lock) #19
  %cmp.i = icmp ugt ptr %call1.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %bpf_prog_by_id.exit.if.then6_crit_edge, label %if.end8

bpf_prog_by_id.exit.if.then6_crit_edge:           ; preds = %bpf_prog_by_id.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then6

if.then6:                                         ; preds = %bpf_prog_by_id.exit.if.then6_crit_edge, %bpf_prog_by_id.exit.thread27, %if.end3.if.then6_crit_edge
  %retval.0.i26 = phi ptr [ %call1.i, %bpf_prog_by_id.exit.if.then6_crit_edge ], [ inttoptr (i32 -2 to ptr), %bpf_prog_by_id.exit.thread27 ], [ inttoptr (i32 -2 to ptr), %if.end3.if.then6_crit_edge ]
  %4 = ptrtoint ptr %retval.0.i26 to i32
  br label %cleanup

if.end8:                                          ; preds = %bpf_prog_by_id.exit
  %call.i = tail call i32 @security_bpf_prog(ptr noundef nonnull %call1.i) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i20 = icmp slt i32 %call.i, 0
  br i1 %cmp.i20, label %if.end8.if.then11_crit_edge, label %bpf_prog_new_fd.exit

if.end8.if.then11_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then11

bpf_prog_new_fd.exit:                             ; preds = %if.end8
  %call1.i21 = tail call i32 @anon_inode_getfd(ptr noundef nonnull @.str.2, ptr noundef nonnull @bpf_prog_fops, ptr noundef nonnull %call1.i, i32 noundef 524290) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i21)
  %cmp10 = icmp slt i32 %call1.i21, 0
  br i1 %cmp10, label %bpf_prog_new_fd.exit.if.then11_crit_edge, label %bpf_prog_new_fd.exit.cleanup_crit_edge

bpf_prog_new_fd.exit.cleanup_crit_edge:           ; preds = %bpf_prog_new_fd.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

bpf_prog_new_fd.exit.if.then11_crit_edge:         ; preds = %bpf_prog_new_fd.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then11

if.then11:                                        ; preds = %bpf_prog_new_fd.exit.if.then11_crit_edge, %if.end8.if.then11_crit_edge
  %retval.0.i2335 = phi i32 [ %call1.i21, %bpf_prog_new_fd.exit.if.then11_crit_edge ], [ %call.i, %if.end8.if.then11_crit_edge ]
  tail call void @bpf_prog_put(ptr noundef nonnull %call1.i)
  br label %cleanup

cleanup:                                          ; preds = %if.then11, %bpf_prog_new_fd.exit.cleanup_crit_edge, %if.then6, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %4, %if.then6 ], [ -22, %entry.cleanup_crit_edge ], [ -1, %if.end.cleanup_crit_edge ], [ %retval.0.i2335, %if.then11 ], [ %call1.i21, %bpf_prog_new_fd.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_map_get_fd_by_id(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %attr, align 8
  %open_flags = getelementptr inbounds %struct.anon.8, ptr %attr, i32 0, i32 2
  %add.ptr = getelementptr %struct.anon.8, ptr %attr, i32 1
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 132) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %lor.lhs.false, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %2 = ptrtoint ptr %open_flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %open_flags, align 8
  %and = and i32 %3, -25
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %call2 = tail call zeroext i1 @capable(i32 noundef 21) #19
  br i1 %call2, label %if.end4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %4 = ptrtoint ptr %open_flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %open_flags, align 8
  %and.i = and i32 %5, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.not.i = icmp eq i32 %and.i, 0
  %and1.i = and i32 %5, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i)
  %tobool2.not.i = icmp eq i32 %and1.i, 0
  %6 = and i32 %5, 24
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %6)
  %.not.i = icmp eq i32 %6, 24
  %.mux.i = select i1 %.not.i, i32 -22, i32 0
  %..i = select i1 %tobool2.not.i, i32 2, i32 1
  %retval.0.i = select i1 %tobool.not.not.i, i32 %..i, i32 %.mux.i
  %not.tobool.not.not.i = xor i1 %tobool.not.not.i, true
  %cmp7 = select i1 %not.tobool.not.not.i, i1 %.not.i, i1 false
  br i1 %cmp7, label %if.end4.cleanup_crit_edge, label %if.end9

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end9:                                          ; preds = %if.end4
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @map_idr_lock) #19
  %call10 = tail call ptr @idr_find(ptr noundef nonnull @map_idr, i32 noundef %1) #19
  %tobool11.not = icmp eq ptr %call10, null
  br i1 %tobool11.not, label %if.end9.if.then17.sink.split_crit_edge, label %if.then12

if.end9.if.then17.sink.split_crit_edge:           ; preds = %if.end9
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then17.sink.split

if.then12:                                        ; preds = %if.end9
  %refcnt.i = getelementptr inbounds %struct.bpf_map, ptr %call10, i32 0, i32 22
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i, i32 noundef 8) #19
  %call.i.i = tail call i64 @generic_atomic64_fetch_add_unless(ptr noundef %refcnt.i, i64 noundef 1, i64 noundef 0) #19
  %conv.i = trunc i64 %call.i.i to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv.i)
  %tobool.not.i = icmp eq i32 %conv.i, 0
  br i1 %tobool.not.i, label %if.then12.if.then17.sink.split_crit_edge, label %if.end15

if.then12.if.then17.sink.split_crit_edge:         ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then17.sink.split

if.end15:                                         ; preds = %if.then12
  %usercnt.i = getelementptr inbounds %struct.bpf_map, ptr %call10, i32 0, i32 23
  %call.i.i7.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usercnt.i, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %usercnt.i) #19
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @map_idr_lock) #19
  %cmp.i = icmp ugt ptr %call10, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end15.if.then17_crit_edge, label %if.end19

if.end15.if.then17_crit_edge:                     ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then17

if.then17.sink.split:                             ; preds = %if.then12.if.then17.sink.split_crit_edge, %if.end9.if.then17.sink.split_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @map_idr_lock) #19
  br label %if.then17

if.then17:                                        ; preds = %if.then17.sink.split, %if.end15.if.then17_crit_edge
  %map.046 = phi ptr [ %call10, %if.end15.if.then17_crit_edge ], [ inttoptr (i32 -2 to ptr), %if.then17.sink.split ]
  %7 = ptrtoint ptr %map.046 to i32
  br label %cleanup

if.end19:                                         ; preds = %if.end15
  %add.i = add nuw nsw i32 %retval.0.i, 1
  %and1.i41 = and i32 %retval.0.i, 67108864
  %or.i = or i32 %add.i, %and1.i41
  %call.i = tail call i32 @security_bpf_map(ptr noundef nonnull %call10, i32 noundef %or.i) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i42 = icmp slt i32 %call.i, 0
  br i1 %cmp.i42, label %if.end19.if.then22_crit_edge, label %bpf_map_new_fd.exit

if.end19.if.then22_crit_edge:                     ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then22

bpf_map_new_fd.exit:                              ; preds = %if.end19
  %or2.i = or i32 %retval.0.i, 524288
  %call3.i = tail call i32 @anon_inode_getfd(ptr noundef nonnull @.str, ptr noundef nonnull @bpf_map_fops, ptr noundef nonnull %call10, i32 noundef %or2.i) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %cmp21 = icmp slt i32 %call3.i, 0
  br i1 %cmp21, label %bpf_map_new_fd.exit.if.then22_crit_edge, label %bpf_map_new_fd.exit.cleanup_crit_edge

bpf_map_new_fd.exit.cleanup_crit_edge:            ; preds = %bpf_map_new_fd.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

bpf_map_new_fd.exit.if.then22_crit_edge:          ; preds = %bpf_map_new_fd.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then22

if.then22:                                        ; preds = %bpf_map_new_fd.exit.if.then22_crit_edge, %if.end19.if.then22_crit_edge
  %retval.0.i4349 = phi i32 [ %call3.i, %bpf_map_new_fd.exit.if.then22_crit_edge ], [ %call.i, %if.end19.if.then22_crit_edge ]
  tail call void @bpf_map_put_with_uref(ptr noundef nonnull %call10)
  br label %cleanup

cleanup:                                          ; preds = %if.then22, %bpf_map_new_fd.exit.cleanup_crit_edge, %if.then17, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %7, %if.then17 ], [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %entry.cleanup_crit_edge ], [ -1, %if.end.cleanup_crit_edge ], [ %retval.0.i, %if.end4.cleanup_crit_edge ], [ %retval.0.i4349, %if.then22 ], [ %call3.i, %bpf_map_new_fd.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_obj_get_info_by_fd(ptr noundef %attr, ptr noundef %uattr) unnamed_addr #0 align 64 {
entry:
  %info3.i111 = alloca %struct.bpf_link_info, align 8
  %info3.i63 = alloca %struct.bpf_map_info, align 8
  %info3.i = alloca %struct.bpf_prog_info, align 8
  %stats.i = alloca %struct.bpf_prog_kstats, align 8
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %attr, align 8
  %add.ptr = getelementptr %struct.anon.10, ptr %attr, i32 1
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 128) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %call.i = tail call i32 @__fdget(i32 noundef %1) #19, !noalias !286
  %and.i.i = and i32 %call.i, -4
  %2 = inttoptr i32 %and.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %f_op = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %f_op to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %f_op, align 4
  %cmp4 = icmp eq ptr %4, @bpf_prog_fops
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.end2
  %private_data = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 16
  %5 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %private_data, align 4
  %info.i = getelementptr inbounds %struct.anon.10, ptr %attr, i32 0, i32 2
  %7 = ptrtoint ptr %info.i to i32
  call void @__asan_load8_noabort(i32 %7)
  %8 = load i64, ptr %info.i, align 8
  %conv2.i = trunc i64 %8 to i32
  %9 = inttoptr i32 %conv2.i to ptr
  call void @llvm.lifetime.start.p0(i64 224, ptr nonnull %info3.i) #19
  %info_len4.i = getelementptr inbounds %struct.anon.10, ptr %attr, i32 0, i32 1
  %10 = ptrtoint ptr %info_len4.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %info_len4.i, align 4
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %stats.i) #19
  %12 = getelementptr inbounds %struct.bpf_prog_kstats, ptr %stats.i, i32 0, i32 1
  %13 = getelementptr inbounds %struct.bpf_prog_kstats, ptr %stats.i, i32 0, i32 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %11)
  %cmp.i.i = icmp ugt i32 %11, 4096
  %14 = call ptr @memset(ptr %stats.i, i32 255, i32 24)
  br i1 %cmp.i.i, label %if.then5.bpf_prog_get_info_by_fd.exit_crit_edge, label %if.end.i.i, !prof !219

if.then5.bpf_prog_get_info_by_fd.exit_crit_edge:  ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

if.end.i.i:                                       ; preds = %if.then5
  call void @__sanitizer_cov_trace_const_cmp4(i32 224, i32 %11)
  %cmp2.not.i.i = icmp ugt i32 %11, 224
  br i1 %cmp2.not.i.i, label %if.end10.i.i, label %if.end.i.i.if.end.i_crit_edge

if.end.i.i.if.end.i_crit_edge:                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i

if.end10.i.i:                                     ; preds = %if.end.i.i
  %add.ptr7.i.i = getelementptr i8, ptr %9, i32 224
  %sub8.i.i = add nsw i32 %11, -224
  %call9.i.i = tail call i32 @check_zeroed_user(ptr noundef %add.ptr7.i.i, i32 noundef %sub8.i.i) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i.i)
  %cmp11.i.i = icmp slt i32 %call9.i.i, 0
  br i1 %cmp11.i.i, label %if.end10.i.i.bpf_prog_get_info_by_fd.exit_crit_edge, label %if.end14.i.i

if.end10.i.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

if.end14.i.i:                                     ; preds = %if.end10.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i.i)
  %tobool15.not.i.i = icmp eq i32 %call9.i.i, 0
  br i1 %tobool15.not.i.i, label %if.end14.i.i.bpf_prog_get_info_by_fd.exit_crit_edge, label %if.end14.i.i.if.end.i_crit_edge

if.end14.i.i.if.end.i_crit_edge:                  ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i

if.end14.i.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %if.end14.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

if.end.i:                                         ; preds = %if.end14.i.i.if.end.i_crit_edge, %if.end.i.i.if.end.i_crit_edge
  %15 = tail call i32 @llvm.umin.i32(i32 %11, i32 224) #19
  %16 = call ptr @memset(ptr %info3.i, i32 0, i32 224)
  call void @__check_object_size(ptr noundef nonnull %info3.i, i32 noundef %15, i1 noundef zeroext false) #19
  call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 156) #19
  %call.i.i.i = call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i.i, label %if.end.i.if.end.i.i.i_crit_edge, label %land.lhs.true.i.i.i

if.end.i.if.end.i.i.i_crit_edge:                  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end.i
  %17 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %9, i32 %15, i32 -1226833920) #23, !srcloc !234
  %asmresult.i.i.i = extractvalue { i32, i32 } %17, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i)
  %cmp.i6.i.i = icmp eq i32 %asmresult.i.i.i, 0
  br i1 %cmp.i6.i.i, label %if.then.i7.i.i, label %land.lhs.true.i.i.i.if.end.i.i.i_crit_edge, !prof !220

land.lhs.true.i.i.i.if.end.i.i.i_crit_edge:       ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i.i.i

if.then.i7.i.i:                                   ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %info3.i, i32 noundef %15) #19
  %18 = call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i.i.i = and i32 %18, -16384
  %19 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %cpu_domain.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 4
  %20 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i) #10, !srcloc !235
  %and.i.i.i.i.i = and i32 %20, -13
  %or.i.i.i.i.i = or i32 %and.i.i.i.i.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %call1.i.i.i.i = call i32 @arm_copy_from_user(ptr noundef nonnull %info3.i, ptr noundef %9, i32 noundef %15) #19
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %20) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  br label %if.end.i.i.i

if.end.i.i.i:                                     ; preds = %if.then.i7.i.i, %land.lhs.true.i.i.i.if.end.i.i.i_crit_edge, %if.end.i.if.end.i.i.i_crit_edge
  %res.0.i.i.i = phi i32 [ %15, %if.end.i.if.end.i.i.i_crit_edge ], [ %call1.i.i.i.i, %if.then.i7.i.i ], [ %15, %land.lhs.true.i.i.i.if.end.i.i.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %res.0.i.i.i)
  %tobool4.not.i.i.i = icmp eq i32 %res.0.i.i.i, 0
  br i1 %tobool4.not.i.i.i, label %if.end11.i, label %if.then11.i.i.i, !prof !220

if.then11.i.i.i:                                  ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %sub.i.i.i = sub i32 %15, %res.0.i.i.i
  %add.ptr.i.i.i = getelementptr i8, ptr %info3.i, i32 %sub.i.i.i
  %21 = call ptr @memset(ptr %add.ptr.i.i.i, i32 0, i32 %res.0.i.i.i)
  br label %bpf_prog_get_info_by_fd.exit

if.end11.i:                                       ; preds = %if.end.i.i.i
  %type.i = getelementptr inbounds %struct.bpf_prog, ptr %6, i32 0, i32 2
  %22 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %type.i, align 4
  %24 = ptrtoint ptr %info3.i to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %23, ptr %info3.i, align 8
  %aux.i = getelementptr inbounds %struct.bpf_prog, ptr %6, i32 0, i32 10
  %25 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %aux.i, align 4
  %id.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %26, i32 0, i32 7
  %27 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %id.i, align 8
  %id13.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 1
  %29 = ptrtoint ptr %id13.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %id13.i, align 4
  %load_time.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %26, i32 0, i32 43
  %30 = ptrtoint ptr %load_time.i to i32
  call void @__asan_load8_noabort(i32 %30)
  %31 = load i64, ptr %load_time.i, align 8
  %load_time15.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 7
  %32 = ptrtoint ptr %load_time15.i to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %31, ptr %load_time15.i, align 8
  %33 = call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i1044.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i1044.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 2
  %35 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %36, i32 0, i32 99
  %37 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %cred.i, align 16
  %user_ns.i = getelementptr inbounds %struct.cred, ptr %38, i32 0, i32 25
  %39 = ptrtoint ptr %user_ns.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %user_ns.i, align 4
  %user.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %26, i32 0, i32 42
  %41 = ptrtoint ptr %user.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %user.i, align 8
  %uid.i = getelementptr inbounds %struct.user_struct, ptr %42, i32 0, i32 5
  %43 = ptrtoint ptr %uid.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %.unpack.i = load i32, ptr %uid.i, align 8
  %44 = insertvalue [1 x i32] undef, i32 %.unpack.i, 0
  %call20.i = call i32 @from_kuid_munged(ptr noundef %40, [1 x i32] %44) #19
  %created_by_uid.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 8
  %45 = ptrtoint ptr %created_by_uid.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 %call20.i, ptr %created_by_uid.i, align 8
  %gpl_compatible.i = getelementptr inbounds %struct.bpf_prog, ptr %6, i32 0, i32 1
  %46 = ptrtoint ptr %gpl_compatible.i to i32
  call void @__asan_load2_noabort(i32 %46)
  %bf.load.i = load i16, ptr %gpl_compatible.i, align 2
  %bf.lshr.i = lshr i16 %bf.load.i, 13
  %gpl_compatible22.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 13
  %47 = ptrtoint ptr %gpl_compatible22.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %bf.load23.i = load i32, ptr %gpl_compatible22.i, align 4
  %bf.value.i = zext i16 %bf.lshr.i to i32
  %bf.shl.i = shl i32 %bf.value.i, 31
  %bf.clear24.i = and i32 %bf.load23.i, 2147483647
  %bf.set.i = or i32 %bf.shl.i, %bf.clear24.i
  store i32 %bf.set.i, ptr %gpl_compatible22.i, align 4
  %tag.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 2
  %tag25.i = getelementptr inbounds %struct.bpf_prog, ptr %6, i32 0, i32 6
  %48 = ptrtoint ptr %tag25.i to i32
  call void @__asan_loadN_noabort(i32 %48, i32 8)
  %49 = load i64, ptr %tag25.i, align 4
  %50 = ptrtoint ptr %tag.i to i32
  call void @__asan_store8_noabort(i32 %50)
  store i64 %49, ptr %tag.i, align 8
  %name.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 11
  %51 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %aux.i, align 4
  %name29.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %52, i32 0, i32 46
  %53 = call ptr @memcpy(ptr %name.i, ptr %name29.i, i32 16)
  %used_maps_mutex.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %52, i32 0, i32 39
  call void @mutex_lock_nested(ptr noundef %used_maps_mutex.i, i32 noundef 0) #19
  %nr_map_ids.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 9
  %54 = ptrtoint ptr %nr_map_ids.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load i32, ptr %nr_map_ids.i, align 4
  %56 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %aux.i, align 4
  %used_map_cnt.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %57, i32 0, i32 1
  %58 = ptrtoint ptr %used_map_cnt.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %used_map_cnt.i, align 8
  store i32 %59, ptr %nr_map_ids.i, align 4
  %60 = call i32 @llvm.umin.i32(i32 %59, i32 %55) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %tobool42.not.i = icmp eq i32 %60, 0
  br i1 %tobool42.not.i, label %if.end11.i.if.end68.i_crit_edge, label %for.body.preheader.i

if.end11.i.if.end68.i_crit_edge:                  ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end68.i

for.body.preheader.i:                             ; preds = %if.end11.i
  %map_ids.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 10
  %61 = ptrtoint ptr %map_ids.i to i32
  call void @__asan_load8_noabort(i32 %61)
  %62 = load i64, ptr %map_ids.i, align 8
  %conv50.i = trunc i64 %62 to i32
  %63 = inttoptr i32 %conv50.i to ptr
  br label %for.body.i

for.cond.i:                                       ; preds = %for.body.i
  %inc.i = add nuw i32 %i.01107.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, %60
  br i1 %exitcond.not.i, label %for.cond.i.if.end68.i_crit_edge, label %for.cond.i.for.body.i_crit_edge

for.cond.i.for.body.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.body.i

for.cond.i.if.end68.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end68.i

for.body.i:                                       ; preds = %for.cond.i.for.body.i_crit_edge, %for.body.preheader.i
  %i.01107.i = phi i32 [ %inc.i, %for.cond.i.for.body.i_crit_edge ], [ 0, %for.body.preheader.i ]
  %arrayidx.i = getelementptr i32, ptr %63, i32 %i.01107.i
  %64 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %aux.i, align 4
  %used_maps.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %65, i32 0, i32 38
  %66 = ptrtoint ptr %used_maps.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %used_maps.i, align 8
  %arrayidx55.i = getelementptr ptr, ptr %67, i32 %i.01107.i
  %68 = ptrtoint ptr %arrayidx55.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %arrayidx55.i, align 4
  %id56.i = getelementptr inbounds %struct.bpf_map, ptr %69, i32 0, i32 11
  %70 = ptrtoint ptr %id56.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %id56.i, align 4
  call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 3658) #19
  %72 = call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i = and i32 %72, -16384
  %73 = inttoptr i32 %and.i.i.i.i to ptr
  %cpu_domain.i.i.i = getelementptr inbounds %struct.thread_info, ptr %73, i32 0, i32 4
  %74 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i) #10, !srcloc !235
  %and.i.i62 = and i32 %74, -13
  %or.i.i = or i32 %and.i.i62, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %75 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %arrayidx.i, i32 %71, i32 -1226833921) #19, !srcloc !289
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %74) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %75)
  %tobool62.not.i = icmp eq i32 %75, 0
  br i1 %tobool62.not.i, label %for.cond.i, label %if.then63.i

if.then63.i:                                      ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #21
  %76 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %aux.i, align 4
  %used_maps_mutex65.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %77, i32 0, i32 39
  call void @mutex_unlock(ptr noundef %used_maps_mutex65.i) #19
  br label %bpf_prog_get_info_by_fd.exit

if.end68.i:                                       ; preds = %for.cond.i.if.end68.i_crit_edge, %if.end11.i.if.end68.i_crit_edge
  %78 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %aux.i, align 4
  %used_maps_mutex70.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %79, i32 0, i32 39
  call void @mutex_unlock(ptr noundef %used_maps_mutex70.i) #19
  %nr_func_info.i.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 23
  %80 = ptrtoint ptr %nr_func_info.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %nr_func_info.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %81)
  %tobool.not.i.i = icmp eq i32 %81, 0
  br i1 %tobool.not.i.i, label %lor.lhs.false.i.i, label %if.end68.i.land.lhs.true.i.i_crit_edge

if.end68.i.land.lhs.true.i.i_crit_edge:           ; preds = %if.end68.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true.i.i

lor.lhs.false.i.i:                                ; preds = %if.end68.i
  %func_info_rec_size.i.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 21
  %82 = ptrtoint ptr %func_info_rec_size.i.i to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %func_info_rec_size.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %83)
  %tobool1.not.i.i = icmp eq i32 %83, 0
  br i1 %tobool1.not.i.i, label %lor.lhs.false.i.i.if.end.i1045.i_crit_edge, label %lor.lhs.false.i.i.land.lhs.true.i.i_crit_edge

lor.lhs.false.i.i.land.lhs.true.i.i_crit_edge:    ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true.i.i

lor.lhs.false.i.i.if.end.i1045.i_crit_edge:       ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i1045.i

land.lhs.true.i.i:                                ; preds = %lor.lhs.false.i.i.land.lhs.true.i.i_crit_edge, %if.end68.i.land.lhs.true.i.i_crit_edge
  %func_info_rec_size2.i.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 21
  %84 = ptrtoint ptr %func_info_rec_size2.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load i32, ptr %func_info_rec_size2.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %85)
  %cmp.not.i.i = icmp eq i32 %85, 8
  br i1 %cmp.not.i.i, label %land.lhs.true.i.i.if.end.i1045.i_crit_edge, label %land.lhs.true.i.i.bpf_prog_get_info_by_fd.exit_crit_edge

land.lhs.true.i.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

land.lhs.true.i.i.if.end.i1045.i_crit_edge:       ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i1045.i

if.end.i1045.i:                                   ; preds = %land.lhs.true.i.i.if.end.i1045.i_crit_edge, %lor.lhs.false.i.i.if.end.i1045.i_crit_edge
  %nr_line_info.i.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 24
  %86 = ptrtoint ptr %nr_line_info.i.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %nr_line_info.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %87)
  %tobool3.not.i.i = icmp eq i32 %87, 0
  br i1 %tobool3.not.i.i, label %lor.lhs.false4.i.i, label %if.end.i1045.i.land.lhs.true6.i.i_crit_edge

if.end.i1045.i.land.lhs.true6.i.i_crit_edge:      ; preds = %if.end.i1045.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true6.i.i

lor.lhs.false4.i.i:                               ; preds = %if.end.i1045.i
  %line_info_rec_size.i.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 28
  %88 = ptrtoint ptr %line_info_rec_size.i.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %89 = load i32, ptr %line_info_rec_size.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %89)
  %tobool5.not.i.i = icmp eq i32 %89, 0
  br i1 %tobool5.not.i.i, label %lor.lhs.false4.i.i.if.end10.i1046.i_crit_edge, label %lor.lhs.false4.i.i.land.lhs.true6.i.i_crit_edge

lor.lhs.false4.i.i.land.lhs.true6.i.i_crit_edge:  ; preds = %lor.lhs.false4.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true6.i.i

lor.lhs.false4.i.i.if.end10.i1046.i_crit_edge:    ; preds = %lor.lhs.false4.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end10.i1046.i

land.lhs.true6.i.i:                               ; preds = %lor.lhs.false4.i.i.land.lhs.true6.i.i_crit_edge, %if.end.i1045.i.land.lhs.true6.i.i_crit_edge
  %line_info_rec_size7.i.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 28
  %90 = ptrtoint ptr %line_info_rec_size7.i.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load i32, ptr %line_info_rec_size7.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 16, i32 %91)
  %cmp8.not.i.i = icmp eq i32 %91, 16
  br i1 %cmp8.not.i.i, label %land.lhs.true6.i.i.if.end10.i1046.i_crit_edge, label %land.lhs.true6.i.i.bpf_prog_get_info_by_fd.exit_crit_edge

land.lhs.true6.i.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

land.lhs.true6.i.i.if.end10.i1046.i_crit_edge:    ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end10.i1046.i

if.end10.i1046.i:                                 ; preds = %land.lhs.true6.i.i.if.end10.i1046.i_crit_edge, %lor.lhs.false4.i.i.if.end10.i1046.i_crit_edge
  %nr_jited_line_info.i.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 27
  %92 = ptrtoint ptr %nr_jited_line_info.i.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %93 = load i32, ptr %nr_jited_line_info.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %93)
  %tobool11.not.i.i = icmp eq i32 %93, 0
  br i1 %tobool11.not.i.i, label %lor.lhs.false12.i.i, label %if.end10.i1046.i.land.lhs.true14.i.i_crit_edge

if.end10.i1046.i.land.lhs.true14.i.i_crit_edge:   ; preds = %if.end10.i1046.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true14.i.i

lor.lhs.false12.i.i:                              ; preds = %if.end10.i1046.i
  %jited_line_info_rec_size.i.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 29
  %94 = ptrtoint ptr %jited_line_info_rec_size.i.i to i32
  call void @__asan_load4_noabort(i32 %94)
  %95 = load i32, ptr %jited_line_info_rec_size.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %95)
  %tobool13.not.i.i = icmp eq i32 %95, 0
  br i1 %tobool13.not.i.i, label %lor.lhs.false12.i.i.if.end74.i_crit_edge, label %lor.lhs.false12.i.i.land.lhs.true14.i.i_crit_edge

lor.lhs.false12.i.i.land.lhs.true14.i.i_crit_edge: ; preds = %lor.lhs.false12.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true14.i.i

lor.lhs.false12.i.i.if.end74.i_crit_edge:         ; preds = %lor.lhs.false12.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end74.i

land.lhs.true14.i.i:                              ; preds = %lor.lhs.false12.i.i.land.lhs.true14.i.i_crit_edge, %if.end10.i1046.i.land.lhs.true14.i.i_crit_edge
  %jited_line_info_rec_size15.i.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 29
  %96 = ptrtoint ptr %jited_line_info_rec_size15.i.i to i32
  call void @__asan_load4_noabort(i32 %96)
  %97 = load i32, ptr %jited_line_info_rec_size15.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 8, i32 %97)
  %cmp16.not.i.i = icmp eq i32 %97, 8
  br i1 %cmp16.not.i.i, label %land.lhs.true14.i.i.if.end74.i_crit_edge, label %land.lhs.true14.i.i.bpf_prog_get_info_by_fd.exit_crit_edge

land.lhs.true14.i.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %land.lhs.true14.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

land.lhs.true14.i.i.if.end74.i_crit_edge:         ; preds = %land.lhs.true14.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end74.i

if.end74.i:                                       ; preds = %land.lhs.true14.i.i.if.end74.i_crit_edge, %lor.lhs.false12.i.i.if.end74.i_crit_edge
  %func_info_rec_size19.i.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 21
  %98 = ptrtoint ptr %func_info_rec_size19.i.i to i32
  call void @__asan_store4_noabort(i32 %98)
  store i32 8, ptr %func_info_rec_size19.i.i, align 4
  %line_info_rec_size20.i.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 28
  %99 = ptrtoint ptr %line_info_rec_size20.i.i to i32
  call void @__asan_store4_noabort(i32 %99)
  store i32 16, ptr %line_info_rec_size20.i.i, align 4
  %jited_line_info_rec_size21.i.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 29
  %100 = ptrtoint ptr %jited_line_info_rec_size21.i.i to i32
  call void @__asan_store4_noabort(i32 %100)
  store i32 8, ptr %jited_line_info_rec_size21.i.i, align 8
  call fastcc void @bpf_prog_get_stats(ptr noundef %6, ptr noundef nonnull %stats.i) #19
  %101 = ptrtoint ptr %stats.i to i32
  call void @__asan_load8_noabort(i32 %101)
  %102 = load i64, ptr %stats.i, align 8
  %run_time_ns.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 32
  %103 = ptrtoint ptr %run_time_ns.i to i32
  call void @__asan_store8_noabort(i32 %103)
  store i64 %102, ptr %run_time_ns.i, align 8
  %104 = ptrtoint ptr %12 to i32
  call void @__asan_load8_noabort(i32 %104)
  %105 = load i64, ptr %12, align 8
  %run_cnt.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 33
  %106 = ptrtoint ptr %run_cnt.i to i32
  call void @__asan_store8_noabort(i32 %106)
  store i64 %105, ptr %run_cnt.i, align 8
  %107 = ptrtoint ptr %13 to i32
  call void @__asan_load8_noabort(i32 %107)
  %108 = load i64, ptr %13, align 8
  %recursion_misses.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 34
  %109 = ptrtoint ptr %recursion_misses.i to i32
  call void @__asan_store8_noabort(i32 %109)
  store i64 %108, ptr %recursion_misses.i, align 8
  %110 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %110)
  %111 = load ptr, ptr %aux.i, align 4
  %verified_insns.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %111, i32 0, i32 44
  %112 = ptrtoint ptr %verified_insns.i to i32
  call void @__asan_load4_noabort(i32 %112)
  %113 = load i32, ptr %verified_insns.i, align 8
  %verified_insns76.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 35
  %114 = ptrtoint ptr %verified_insns76.i to i32
  call void @__asan_store4_noabort(i32 %114)
  store i32 %113, ptr %verified_insns76.i, align 8
  %call.i1048.i = call zeroext i1 @capable(i32 noundef 39) #19
  br i1 %call.i1048.i, label %if.end74.i.if.end79.i_crit_edge, label %bpf_capable.exit.i

if.end74.i.if.end79.i_crit_edge:                  ; preds = %if.end74.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end79.i

bpf_capable.exit.i:                               ; preds = %if.end74.i
  %call1.i.i = call zeroext i1 @capable(i32 noundef 21) #19
  br i1 %call1.i.i, label %bpf_capable.exit.i.if.end79.i_crit_edge, label %if.then78.i

bpf_capable.exit.i.if.end79.i_crit_edge:          ; preds = %bpf_capable.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end79.i

if.then78.i:                                      ; preds = %bpf_capable.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  %jited_prog_len.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 3
  %115 = ptrtoint ptr %jited_prog_len.i to i32
  call void @__asan_store4_noabort(i32 %115)
  store i32 0, ptr %jited_prog_len.i, align 8
  %xlated_prog_len.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 4
  %116 = ptrtoint ptr %xlated_prog_len.i to i32
  call void @__asan_store4_noabort(i32 %116)
  store i32 0, ptr %xlated_prog_len.i, align 4
  %nr_jited_ksyms.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 16
  %117 = ptrtoint ptr %nr_jited_ksyms.i to i32
  call void @__asan_store4_noabort(i32 %117)
  store i32 0, ptr %nr_jited_ksyms.i, align 8
  %nr_jited_func_lens.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 17
  %118 = ptrtoint ptr %nr_jited_func_lens.i to i32
  call void @__asan_store4_noabort(i32 %118)
  store i32 0, ptr %nr_jited_func_lens.i, align 4
  %119 = ptrtoint ptr %nr_func_info.i.i to i32
  call void @__asan_store4_noabort(i32 %119)
  store i32 0, ptr %nr_func_info.i.i, align 8
  %120 = ptrtoint ptr %nr_line_info.i.i to i32
  call void @__asan_store4_noabort(i32 %120)
  store i32 0, ptr %nr_line_info.i.i, align 4
  %121 = ptrtoint ptr %nr_jited_line_info.i.i to i32
  call void @__asan_store4_noabort(i32 %121)
  store i32 0, ptr %nr_jited_line_info.i.i, align 8
  br label %if.then.i.i.i1029.i

if.end79.i:                                       ; preds = %bpf_capable.exit.i.if.end79.i_crit_edge, %if.end74.i.if.end79.i_crit_edge
  %xlated_prog_len80.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 4
  %122 = ptrtoint ptr %xlated_prog_len80.i to i32
  call void @__asan_load4_noabort(i32 %122)
  %123 = load i32, ptr %xlated_prog_len80.i, align 4
  %len.i.i = getelementptr inbounds %struct.bpf_prog, ptr %6, i32 0, i32 4
  %124 = ptrtoint ptr %len.i.i to i32
  call void @__asan_load4_noabort(i32 %124)
  %125 = load i32, ptr %len.i.i, align 4
  %mul.i.i = shl i32 %125, 3
  store i32 %mul.i.i, ptr %xlated_prog_len80.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mul.i.i)
  %tobool84.not.i = icmp eq i32 %mul.i.i, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %123)
  %tobool85.not.i = icmp eq i32 %123, 0
  %or.cond.i = select i1 %tobool84.not.i, i1 true, i1 %tobool85.not.i
  br i1 %or.cond.i, label %if.end79.i.if.end126.i_crit_edge, label %if.then86.i

if.end79.i.if.end126.i_crit_edge:                 ; preds = %if.end79.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end126.i

if.then86.i:                                      ; preds = %if.end79.i
  %126 = ptrtoint ptr %gpl_compatible.i to i32
  call void @__asan_load2_noabort(i32 %126)
  %bf.load87.i = load i16, ptr %gpl_compatible.i, align 2
  %127 = and i16 %bf.load87.i, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %127)
  %tobool91.not.i = icmp eq i16 %127, 0
  br i1 %tobool91.not.i, label %if.then86.i.if.end95.i_crit_edge, label %land.lhs.true92.i

if.then86.i.if.end95.i_crit_edge:                 ; preds = %if.then86.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end95.i

land.lhs.true92.i:                                ; preds = %if.then86.i
  %f_cred.i = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 12
  %128 = ptrtoint ptr %f_cred.i to i32
  call void @__asan_load4_noabort(i32 %128)
  %129 = load ptr, ptr %f_cred.i, align 8
  %call.i1049.i = call zeroext i1 @kallsyms_show_value(ptr noundef %129) #19
  br i1 %call.i1049.i, label %land.lhs.true92.i.if.end95.i_crit_edge, label %cleanup122.i

land.lhs.true92.i.if.end95.i_crit_edge:           ; preds = %land.lhs.true92.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end95.i

if.end95.i:                                       ; preds = %land.lhs.true92.i.if.end95.i_crit_edge, %if.then86.i.if.end95.i_crit_edge
  %f_cred96.i = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 12
  %130 = ptrtoint ptr %f_cred96.i to i32
  call void @__asan_load4_noabort(i32 %130)
  %131 = load ptr, ptr %f_cred96.i, align 8
  %call97.i = call fastcc ptr @bpf_insn_prepare_dump(ptr noundef %6, ptr noundef %131) #19
  %tobool98.not.i = icmp eq ptr %call97.i, null
  br i1 %tobool98.not.i, label %if.end95.i.bpf_prog_get_info_by_fd.exit_crit_edge, label %if.end100.i

if.end95.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %if.end95.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

if.end100.i:                                      ; preds = %if.end95.i
  %xlated_prog_insns107.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 6
  %132 = ptrtoint ptr %xlated_prog_insns107.i to i32
  call void @__asan_load8_noabort(i32 %132)
  %133 = load i64, ptr %xlated_prog_insns107.i, align 8
  %conv108.i = trunc i64 %133 to i32
  %134 = inttoptr i32 %conv108.i to ptr
  %135 = ptrtoint ptr %xlated_prog_len80.i to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load i32, ptr %xlated_prog_len80.i, align 4
  %137 = call i32 @llvm.umin.i32(i32 %136, i32 %123) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %137)
  %cmp9.i.i.i = icmp slt i32 %137, 0
  br i1 %cmp9.i.i.i, label %land.rhs16.i.i.i, label %if.then.i.i.i869.i

land.rhs16.i.i.i:                                 ; preds = %if.end100.i
  %.b71.i.i.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i.i, label %land.rhs16.i.i.i.copy_to_user.exit.thread.i_crit_edge, label %if.then27.i.i.i, !prof !220

land.rhs16.i.i.i.copy_to_user.exit.thread.i_crit_edge: ; preds = %land.rhs16.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit.thread.i

if.then27.i.i.i:                                  ; preds = %land.rhs16.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %copy_to_user.exit.thread.i

if.then.i.i.i869.i:                               ; preds = %if.end100.i
  call void @__check_object_size(ptr noundef nonnull %call97.i, i32 noundef %137, i1 noundef zeroext true) #19
  call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i870.i = call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i870.i, label %if.then.i.i.i869.i.copy_to_user.exit.i_crit_edge, label %if.end.i.i874.i

if.then.i.i.i869.i.copy_to_user.exit.i_crit_edge: ; preds = %if.then.i.i.i869.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit.i

if.end.i.i874.i:                                  ; preds = %if.then.i.i.i869.i
  %138 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %134, i32 %137, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i872.i = extractvalue { i32, i32 } %138, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i872.i)
  %cmp.i6.i873.i = icmp eq i32 %asmresult.i.i872.i, 0
  br i1 %cmp.i6.i873.i, label %if.then2.i.i.i, label %if.end.i.i874.i.copy_to_user.exit.i_crit_edge

if.end.i.i874.i.copy_to_user.exit.i_crit_edge:    ; preds = %if.end.i.i874.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit.i

if.then2.i.i.i:                                   ; preds = %if.end.i.i874.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i875.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %call97.i, i32 noundef %137) #19
  %call.i12.i.i.i = call i32 @arm_copy_to_user(ptr noundef %134, ptr noundef nonnull %call97.i, i32 noundef %137) #19
  br label %copy_to_user.exit.i

copy_to_user.exit.thread.i:                       ; preds = %if.then27.i.i.i, %land.rhs16.i.i.i.copy_to_user.exit.thread.i_crit_edge
  call void @kfree(ptr noundef nonnull %call97.i) #19
  br label %bpf_prog_get_info_by_fd.exit

copy_to_user.exit.i:                              ; preds = %if.then2.i.i.i, %if.end.i.i874.i.copy_to_user.exit.i_crit_edge, %if.then.i.i.i869.i.copy_to_user.exit.i_crit_edge
  %n.addr.0.i876.i = phi i32 [ %137, %if.then.i.i.i869.i.copy_to_user.exit.i_crit_edge ], [ %call.i12.i.i.i, %if.then2.i.i.i ], [ %137, %if.end.i.i874.i.copy_to_user.exit.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i876.i)
  %tobool118.not.i = icmp eq i32 %n.addr.0.i876.i, 0
  call void @kfree(ptr noundef nonnull %call97.i) #19
  br i1 %tobool118.not.i, label %copy_to_user.exit.i.if.end126.i_crit_edge, label %copy_to_user.exit.i.bpf_prog_get_info_by_fd.exit_crit_edge

copy_to_user.exit.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %copy_to_user.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

copy_to_user.exit.i.if.end126.i_crit_edge:        ; preds = %copy_to_user.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end126.i

cleanup122.i:                                     ; preds = %land.lhs.true92.i
  call void @__sanitizer_cov_trace_pc() #21
  %xlated_prog_insns.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 6
  %139 = ptrtoint ptr %xlated_prog_insns.i to i32
  call void @__asan_store8_noabort(i32 %139)
  store i64 0, ptr %xlated_prog_insns.i, align 8
  br label %if.then.i.i.i1029.i

if.end126.i:                                      ; preds = %copy_to_user.exit.i.if.end126.i_crit_edge, %if.end79.i.if.end126.i_crit_edge
  %140 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load ptr, ptr %aux.i, align 4
  %offload_requested.i.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %141, i32 0, i32 22
  %142 = ptrtoint ptr %offload_requested.i.i to i32
  call void @__asan_load1_noabort(i32 %142)
  %143 = load i8, ptr %offload_requested.i.i, align 1, !range !227
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %143)
  %tobool.i.not.i = icmp eq i8 %143, 0
  br i1 %tobool.i.not.i, label %if.end134.i, label %if.then129.i

if.then129.i:                                     ; preds = %if.end126.i
  %call130.i = call i32 @bpf_prog_offload_info_fill(ptr noundef nonnull %info3.i, ptr noundef %6) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call130.i)
  %tobool131.not.i = icmp eq i32 %call130.i, 0
  br i1 %tobool131.not.i, label %if.then129.i.if.then.i.i.i1029.i_crit_edge, label %if.then129.i.bpf_prog_get_info_by_fd.exit_crit_edge

if.then129.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %if.then129.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

if.then129.i.if.then.i.i.i1029.i_crit_edge:       ; preds = %if.then129.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i.i.i1029.i

if.end134.i:                                      ; preds = %if.end126.i
  %jited_prog_len135.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 3
  %144 = ptrtoint ptr %jited_prog_len135.i to i32
  call void @__asan_load4_noabort(i32 %144)
  %145 = load i32, ptr %jited_prog_len135.i, align 8
  %func_cnt.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %141, i32 0, i32 8
  %146 = ptrtoint ptr %func_cnt.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load i32, ptr %func_cnt.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %147)
  %tobool137.not.i = icmp eq i32 %147, 0
  br i1 %tobool137.not.i, label %if.else.i, label %for.body146.lr.ph.i

for.body146.lr.ph.i:                              ; preds = %if.end134.i
  %148 = ptrtoint ptr %jited_prog_len135.i to i32
  call void @__asan_store4_noabort(i32 %148)
  store i32 0, ptr %jited_prog_len135.i, align 8
  %func.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %141, i32 0, i32 30
  br label %for.body146.i

for.body146.i:                                    ; preds = %for.body146.i.for.body146.i_crit_edge, %for.body146.lr.ph.i
  %i139.01109.i = phi i32 [ 0, %for.body146.lr.ph.i ], [ %inc151.i, %for.body146.i.for.body146.i_crit_edge ]
  %149 = ptrtoint ptr %func.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %func.i, align 8
  %arrayidx148.i = getelementptr ptr, ptr %150, i32 %i139.01109.i
  %151 = ptrtoint ptr %arrayidx148.i to i32
  call void @__asan_load4_noabort(i32 %151)
  %152 = load ptr, ptr %arrayidx148.i, align 4
  %jited_len.i = getelementptr inbounds %struct.bpf_prog, ptr %152, i32 0, i32 5
  %153 = ptrtoint ptr %jited_len.i to i32
  call void @__asan_load4_noabort(i32 %153)
  %154 = load i32, ptr %jited_len.i, align 4
  %155 = ptrtoint ptr %jited_prog_len135.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load i32, ptr %jited_prog_len135.i, align 8
  %add.i = add i32 %156, %154
  store i32 %add.i, ptr %jited_prog_len135.i, align 8
  %inc151.i = add nuw i32 %i139.01109.i, 1
  %157 = ptrtoint ptr %func_cnt.i to i32
  call void @__asan_load4_noabort(i32 %157)
  %158 = load i32, ptr %func_cnt.i, align 4
  %cmp144.i = icmp ult i32 %inc151.i, %158
  br i1 %cmp144.i, label %for.body146.i.for.body146.i_crit_edge, label %for.body146.i.if.end155.i_crit_edge

for.body146.i.if.end155.i_crit_edge:              ; preds = %for.body146.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end155.i

for.body146.i.for.body146.i_crit_edge:            ; preds = %for.body146.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.body146.i

if.else.i:                                        ; preds = %if.end134.i
  call void @__sanitizer_cov_trace_pc() #21
  %jited_len153.i = getelementptr inbounds %struct.bpf_prog, ptr %6, i32 0, i32 5
  %159 = ptrtoint ptr %jited_len153.i to i32
  call void @__asan_load4_noabort(i32 %159)
  %160 = load i32, ptr %jited_len153.i, align 4
  %161 = ptrtoint ptr %jited_prog_len135.i to i32
  call void @__asan_store4_noabort(i32 %161)
  store i32 %160, ptr %jited_prog_len135.i, align 8
  br label %if.end155.i

if.end155.i:                                      ; preds = %if.else.i, %for.body146.i.if.end155.i_crit_edge
  %162 = ptrtoint ptr %jited_prog_len135.i to i32
  call void @__asan_load4_noabort(i32 %162)
  %163 = load i32, ptr %jited_prog_len135.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %163)
  %tobool157.not.i = icmp eq i32 %163, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %145)
  %tobool159.not.i = icmp eq i32 %145, 0
  %or.cond850.i = select i1 %tobool157.not.i, i1 true, i1 %tobool159.not.i
  br i1 %or.cond850.i, label %if.end155.i.if.end230.i_crit_edge, label %if.then160.i

if.end155.i.if.end230.i_crit_edge:                ; preds = %if.end155.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end230.i

if.then160.i:                                     ; preds = %if.end155.i
  %f_cred161.i = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 12
  %164 = ptrtoint ptr %f_cred161.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %f_cred161.i, align 8
  %call.i1050.i = call zeroext i1 @kallsyms_show_value(ptr noundef %165) #19
  %jited_prog_insns.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 5
  br i1 %call.i1050.i, label %if.then163.i, label %if.else227.i

if.then163.i:                                     ; preds = %if.then160.i
  %166 = ptrtoint ptr %jited_prog_insns.i to i32
  call void @__asan_load8_noabort(i32 %166)
  %167 = load i64, ptr %jited_prog_insns.i, align 8
  %conv170.i = trunc i64 %167 to i32
  %168 = inttoptr i32 %conv170.i to ptr
  %169 = ptrtoint ptr %jited_prog_len135.i to i32
  call void @__asan_load4_noabort(i32 %169)
  %170 = load i32, ptr %jited_prog_len135.i, align 8
  %171 = call i32 @llvm.umin.i32(i32 %170, i32 %145) #19
  %172 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %172)
  %173 = load ptr, ptr %aux.i, align 4
  %func_cnt180.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %173, i32 0, i32 8
  %174 = ptrtoint ptr %func_cnt180.i to i32
  call void @__asan_load4_noabort(i32 %174)
  %175 = load i32, ptr %func_cnt180.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %175)
  %tobool181.not.i = icmp eq i32 %175, 0
  br i1 %tobool181.not.i, label %if.else220.i, label %if.then163.i.for.body189.i_crit_edge

if.then163.i.for.body189.i_crit_edge:             ; preds = %if.then163.i
  br label %for.body189.i

for.body189.i:                                    ; preds = %for.inc211.i.for.body189.i_crit_edge, %if.then163.i.for.body189.i_crit_edge
  %176 = phi ptr [ %188, %for.inc211.i.for.body189.i_crit_edge ], [ %173, %if.then163.i.for.body189.i_crit_edge ]
  %uinsns.01115.i = phi ptr [ %add.ptr.i, %for.inc211.i.for.body189.i_crit_edge ], [ %168, %if.then163.i.for.body189.i_crit_edge ]
  %free.01114.i = phi i32 [ %sub.i, %for.inc211.i.for.body189.i_crit_edge ], [ %171, %if.then163.i.for.body189.i_crit_edge ]
  %i183.01113.i = phi i32 [ %inc212.i, %for.inc211.i.for.body189.i_crit_edge ], [ 0, %if.then163.i.for.body189.i_crit_edge ]
  %func191.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %176, i32 0, i32 30
  %177 = ptrtoint ptr %func191.i to i32
  call void @__asan_load4_noabort(i32 %177)
  %178 = load ptr, ptr %func191.i, align 8
  %arrayidx192.i = getelementptr ptr, ptr %178, i32 %i183.01113.i
  %179 = ptrtoint ptr %arrayidx192.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %arrayidx192.i, align 4
  %jited_len193.i = getelementptr inbounds %struct.bpf_prog, ptr %180, i32 0, i32 5
  %181 = ptrtoint ptr %jited_len193.i to i32
  call void @__asan_load4_noabort(i32 %181)
  %182 = load i32, ptr %jited_len193.i, align 4
  %183 = call i32 @llvm.umin.i32(i32 %182, i32 %free.01114.i) #19
  %bpf_func.i = getelementptr inbounds %struct.bpf_prog, ptr %180, i32 0, i32 9
  %184 = ptrtoint ptr %bpf_func.i to i32
  call void @__asan_load4_noabort(i32 %184)
  %185 = load ptr, ptr %bpf_func.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %183)
  %cmp9.i.i883.i = icmp slt i32 %183, 0
  br i1 %cmp9.i.i883.i, label %land.rhs16.i.i886.i, label %if.then.i.i.i889.i

land.rhs16.i.i886.i:                              ; preds = %for.body189.i
  %.b71.i.i885.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i885.i, label %land.rhs16.i.i886.i.bpf_prog_get_info_by_fd.exit_crit_edge, label %if.then27.i.i887.i, !prof !220

land.rhs16.i.i886.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %land.rhs16.i.i886.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

if.then27.i.i887.i:                               ; preds = %land.rhs16.i.i886.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %bpf_prog_get_info_by_fd.exit

if.then.i.i.i889.i:                               ; preds = %for.body189.i
  call void @__check_object_size(ptr noundef %185, i32 noundef %183, i1 noundef zeroext true) #19
  call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i890.i = call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i890.i, label %if.then.i.i.i889.i.copy_to_user.exit899.i_crit_edge, label %if.end.i.i894.i

if.then.i.i.i889.i.copy_to_user.exit899.i_crit_edge: ; preds = %if.then.i.i.i889.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit899.i

if.end.i.i894.i:                                  ; preds = %if.then.i.i.i889.i
  %186 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %uinsns.01115.i, i32 %183, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i892.i = extractvalue { i32, i32 } %186, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i892.i)
  %cmp.i6.i893.i = icmp eq i32 %asmresult.i.i892.i, 0
  br i1 %cmp.i6.i893.i, label %if.then2.i.i897.i, label %if.end.i.i894.i.copy_to_user.exit899.i_crit_edge

if.end.i.i894.i.copy_to_user.exit899.i_crit_edge: ; preds = %if.end.i.i894.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit899.i

if.then2.i.i897.i:                                ; preds = %if.end.i.i894.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i895.i = call zeroext i1 @__kasan_check_read(ptr noundef %185, i32 noundef %183) #19
  %call.i12.i.i896.i = call i32 @arm_copy_to_user(ptr noundef %uinsns.01115.i, ptr noundef %185, i32 noundef %183) #19
  br label %copy_to_user.exit899.i

copy_to_user.exit899.i:                           ; preds = %if.then2.i.i897.i, %if.end.i.i894.i.copy_to_user.exit899.i_crit_edge, %if.then.i.i.i889.i.copy_to_user.exit899.i_crit_edge
  %n.addr.0.i898.i = phi i32 [ %183, %if.then.i.i.i889.i.copy_to_user.exit899.i_crit_edge ], [ %call.i12.i.i896.i, %if.then2.i.i897.i ], [ %183, %if.end.i.i894.i.copy_to_user.exit899.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i898.i)
  %tobool205.not.i = icmp eq i32 %n.addr.0.i898.i, 0
  br i1 %tobool205.not.i, label %if.end207.i, label %copy_to_user.exit899.i.bpf_prog_get_info_by_fd.exit_crit_edge

copy_to_user.exit899.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %copy_to_user.exit899.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

if.end207.i:                                      ; preds = %copy_to_user.exit899.i
  %sub.i = sub i32 %free.01114.i, %183
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub.i)
  %tobool208.not.i = icmp eq i32 %sub.i, 0
  br i1 %tobool208.not.i, label %if.end207.i.if.end230.i_crit_edge, label %for.inc211.i

if.end207.i.if.end230.i_crit_edge:                ; preds = %if.end207.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end230.i

for.inc211.i:                                     ; preds = %if.end207.i
  %add.ptr.i = getelementptr i8, ptr %uinsns.01115.i, i32 %183
  %inc212.i = add nuw i32 %i183.01113.i, 1
  %187 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %187)
  %188 = load ptr, ptr %aux.i, align 4
  %func_cnt186.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %188, i32 0, i32 8
  %189 = ptrtoint ptr %func_cnt186.i to i32
  call void @__asan_load4_noabort(i32 %189)
  %190 = load i32, ptr %func_cnt186.i, align 4
  %cmp187.i = icmp ult i32 %inc212.i, %190
  br i1 %cmp187.i, label %for.inc211.i.for.body189.i_crit_edge, label %for.inc211.i.if.end230.i_crit_edge

for.inc211.i.if.end230.i_crit_edge:               ; preds = %for.inc211.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end230.i

for.inc211.i.for.body189.i_crit_edge:             ; preds = %for.inc211.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.body189.i

if.else220.i:                                     ; preds = %if.then163.i
  %bpf_func221.i = getelementptr inbounds %struct.bpf_prog, ptr %6, i32 0, i32 9
  %191 = ptrtoint ptr %bpf_func221.i to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %bpf_func221.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %171)
  %cmp9.i.i906.i = icmp slt i32 %171, 0
  br i1 %cmp9.i.i906.i, label %land.rhs16.i.i909.i, label %if.then.i.i.i912.i

land.rhs16.i.i909.i:                              ; preds = %if.else220.i
  %.b71.i.i908.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i908.i, label %land.rhs16.i.i909.i.bpf_prog_get_info_by_fd.exit_crit_edge, label %if.then27.i.i910.i, !prof !220

land.rhs16.i.i909.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %land.rhs16.i.i909.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

if.then27.i.i910.i:                               ; preds = %land.rhs16.i.i909.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %bpf_prog_get_info_by_fd.exit

if.then.i.i.i912.i:                               ; preds = %if.else220.i
  call void @__check_object_size(ptr noundef %192, i32 noundef %171, i1 noundef zeroext true) #19
  call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i913.i = call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i913.i, label %if.then.i.i.i912.i.copy_to_user.exit922.i_crit_edge, label %if.end.i.i917.i

if.then.i.i.i912.i.copy_to_user.exit922.i_crit_edge: ; preds = %if.then.i.i.i912.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit922.i

if.end.i.i917.i:                                  ; preds = %if.then.i.i.i912.i
  %193 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %168, i32 %171, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i915.i = extractvalue { i32, i32 } %193, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i915.i)
  %cmp.i6.i916.i = icmp eq i32 %asmresult.i.i915.i, 0
  br i1 %cmp.i6.i916.i, label %if.then2.i.i920.i, label %if.end.i.i917.i.copy_to_user.exit922.i_crit_edge

if.end.i.i917.i.copy_to_user.exit922.i_crit_edge: ; preds = %if.end.i.i917.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit922.i

if.then2.i.i920.i:                                ; preds = %if.end.i.i917.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i918.i = call zeroext i1 @__kasan_check_read(ptr noundef %192, i32 noundef %171) #19
  %call.i12.i.i919.i = call i32 @arm_copy_to_user(ptr noundef %168, ptr noundef %192, i32 noundef %171) #19
  br label %copy_to_user.exit922.i

copy_to_user.exit922.i:                           ; preds = %if.then2.i.i920.i, %if.end.i.i917.i.copy_to_user.exit922.i_crit_edge, %if.then.i.i.i912.i.copy_to_user.exit922.i_crit_edge
  %n.addr.0.i921.i = phi i32 [ %171, %if.then.i.i.i912.i.copy_to_user.exit922.i_crit_edge ], [ %call.i12.i.i919.i, %if.then2.i.i920.i ], [ %171, %if.end.i.i917.i.copy_to_user.exit922.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i921.i)
  %tobool223.not.i = icmp eq i32 %n.addr.0.i921.i, 0
  br i1 %tobool223.not.i, label %copy_to_user.exit922.i.if.end230.i_crit_edge, label %copy_to_user.exit922.i.bpf_prog_get_info_by_fd.exit_crit_edge

copy_to_user.exit922.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %copy_to_user.exit922.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

copy_to_user.exit922.i.if.end230.i_crit_edge:     ; preds = %copy_to_user.exit922.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end230.i

if.else227.i:                                     ; preds = %if.then160.i
  call void @__sanitizer_cov_trace_pc() #21
  %194 = ptrtoint ptr %jited_prog_insns.i to i32
  call void @__asan_store8_noabort(i32 %194)
  store i64 0, ptr %jited_prog_insns.i, align 8
  br label %if.end230.i

if.end230.i:                                      ; preds = %if.else227.i, %copy_to_user.exit922.i.if.end230.i_crit_edge, %for.inc211.i.if.end230.i_crit_edge, %if.end207.i.if.end230.i_crit_edge, %if.end155.i.if.end230.i_crit_edge
  %nr_jited_ksyms231.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 16
  %195 = ptrtoint ptr %nr_jited_ksyms231.i to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load i32, ptr %nr_jited_ksyms231.i, align 8
  %197 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %197)
  %198 = load ptr, ptr %aux.i, align 4
  %func_cnt233.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %198, i32 0, i32 8
  %199 = ptrtoint ptr %func_cnt233.i to i32
  call void @__asan_load4_noabort(i32 %199)
  %200 = load i32, ptr %func_cnt233.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %200)
  %tobool234.not.i = icmp eq i32 %200, 0
  %..i = select i1 %tobool234.not.i, i32 1, i32 %200
  %201 = ptrtoint ptr %nr_jited_ksyms231.i to i32
  call void @__asan_store4_noabort(i32 %201)
  store i32 %..i, ptr %nr_jited_ksyms231.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %196)
  %tobool240.not.i = icmp eq i32 %196, 0
  br i1 %tobool240.not.i, label %if.end230.i.if.end327.i_crit_edge, label %if.then241.i

if.end230.i.if.end327.i_crit_edge:                ; preds = %if.end230.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end327.i

if.then241.i:                                     ; preds = %if.end230.i
  %f_cred242.i = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 12
  %202 = ptrtoint ptr %f_cred242.i to i32
  call void @__asan_load4_noabort(i32 %202)
  %203 = load ptr, ptr %f_cred242.i, align 8
  %call.i1051.i = call zeroext i1 @kallsyms_show_value(ptr noundef %203) #19
  br i1 %call.i1051.i, label %if.then244.i, label %if.else324.i

if.then244.i:                                     ; preds = %if.then241.i
  %204 = ptrtoint ptr %nr_jited_ksyms231.i to i32
  call void @__asan_load4_noabort(i32 %204)
  %205 = load i32, ptr %nr_jited_ksyms231.i, align 8
  %206 = call i32 @llvm.umin.i32(i32 %205, i32 %196) #19
  %jited_ksyms.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 18
  %207 = ptrtoint ptr %jited_ksyms.i to i32
  call void @__asan_load8_noabort(i32 %207)
  %208 = load i64, ptr %jited_ksyms.i, align 8
  %conv260.i = trunc i64 %208 to i32
  %209 = inttoptr i32 %conv260.i to ptr
  %210 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %210)
  %211 = load ptr, ptr %aux.i, align 4
  %func_cnt262.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %211, i32 0, i32 8
  %212 = ptrtoint ptr %func_cnt262.i to i32
  call void @__asan_load4_noabort(i32 %212)
  %213 = load i32, ptr %func_cnt262.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %213)
  %tobool263.not.i = icmp eq i32 %213, 0
  br i1 %tobool263.not.i, label %if.else296.i, label %for.cond265.preheader.i

for.cond265.preheader.i:                          ; preds = %if.then244.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %206)
  %cmp2661117.not.i = icmp eq i32 %206, 0
  br i1 %cmp2661117.not.i, label %for.cond265.preheader.i.if.end327.i_crit_edge, label %for.cond265.preheader.i.for.body268.i_crit_edge

for.cond265.preheader.i.for.body268.i_crit_edge:  ; preds = %for.cond265.preheader.i
  br label %for.body268.i

for.cond265.preheader.i.if.end327.i_crit_edge:    ; preds = %for.cond265.preheader.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end327.i

for.cond265.i:                                    ; preds = %for.body268.i
  %inc294.i = add nuw i32 %i245.01118.i, 1
  %exitcond1136.not.i = icmp eq i32 %inc294.i, %206
  br i1 %exitcond1136.not.i, label %for.cond265.i.if.end327.i_crit_edge, label %for.cond265.i.for.body268.i_crit_edge

for.cond265.i.for.body268.i_crit_edge:            ; preds = %for.cond265.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.body268.i

for.cond265.i.if.end327.i_crit_edge:              ; preds = %for.cond265.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end327.i

for.body268.i:                                    ; preds = %for.cond265.i.for.body268.i_crit_edge, %for.cond265.preheader.i.for.body268.i_crit_edge
  %i245.01118.i = phi i32 [ %inc294.i, %for.cond265.i.for.body268.i_crit_edge ], [ 0, %for.cond265.preheader.i.for.body268.i_crit_edge ]
  %214 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %214)
  %215 = load ptr, ptr %aux.i, align 4
  %func270.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %215, i32 0, i32 30
  %216 = ptrtoint ptr %func270.i to i32
  call void @__asan_load4_noabort(i32 %216)
  %217 = load ptr, ptr %func270.i, align 8
  %arrayidx271.i = getelementptr ptr, ptr %217, i32 %i245.01118.i
  %218 = ptrtoint ptr %arrayidx271.i to i32
  call void @__asan_load4_noabort(i32 %218)
  %219 = load ptr, ptr %arrayidx271.i, align 4
  %bpf_func272.i = getelementptr inbounds %struct.bpf_prog, ptr %219, i32 0, i32 9
  %220 = ptrtoint ptr %bpf_func272.i to i32
  call void @__asan_load4_noabort(i32 %220)
  %221 = load ptr, ptr %bpf_func272.i, align 4
  %222 = ptrtoint ptr %221 to i32
  %arrayidx276.i = getelementptr i64, ptr %209, i32 %i245.01118.i
  %conv278.i = zext i32 %222 to i64
  call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 3781) #19
  %223 = call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i923.i = and i32 %223, -16384
  %224 = inttoptr i32 %and.i.i.i923.i to ptr
  %cpu_domain.i.i924.i = getelementptr inbounds %struct.thread_info, ptr %224, i32 0, i32 4
  %225 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i924.i) #10, !srcloc !235
  %and.i925.i = and i32 %225, -13
  %or.i926.i = or i32 %and.i925.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i926.i) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %226 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_8", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %arrayidx276.i, i64 %conv278.i, i32 -1226833921) #19, !srcloc !290
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %225) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %226)
  %tobool290.not.i = icmp eq i32 %226, 0
  br i1 %tobool290.not.i, label %for.cond265.i, label %for.body268.i.bpf_prog_get_info_by_fd.exit_crit_edge

for.body268.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %for.body268.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

if.else296.i:                                     ; preds = %if.then244.i
  %bpf_func297.i = getelementptr inbounds %struct.bpf_prog, ptr %6, i32 0, i32 9
  %227 = ptrtoint ptr %bpf_func297.i to i32
  call void @__asan_load4_noabort(i32 %227)
  %228 = load ptr, ptr %bpf_func297.i, align 4
  %229 = ptrtoint ptr %228 to i32
  %conv303.i = zext i32 %229 to i64
  call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 3786) #19
  %230 = call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i927.i = and i32 %230, -16384
  %231 = inttoptr i32 %and.i.i.i927.i to ptr
  %cpu_domain.i.i928.i = getelementptr inbounds %struct.thread_info, ptr %231, i32 0, i32 4
  %232 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i928.i) #10, !srcloc !235
  %and.i929.i = and i32 %232, -13
  %or.i930.i = or i32 %and.i929.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i930.i) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %233 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_8", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %209, i64 %conv303.i, i32 -1226833921) #19, !srcloc !291
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %232) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %233)
  %tobool315.not.i = icmp eq i32 %233, 0
  br i1 %tobool315.not.i, label %if.else296.i.if.end327.i_crit_edge, label %if.else296.i.bpf_prog_get_info_by_fd.exit_crit_edge

if.else296.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %if.else296.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

if.else296.i.if.end327.i_crit_edge:               ; preds = %if.else296.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end327.i

if.else324.i:                                     ; preds = %if.then241.i
  call void @__sanitizer_cov_trace_pc() #21
  %jited_ksyms325.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 18
  %234 = ptrtoint ptr %jited_ksyms325.i to i32
  call void @__asan_store8_noabort(i32 %234)
  store i64 0, ptr %jited_ksyms325.i, align 8
  br label %if.end327.i

if.end327.i:                                      ; preds = %if.else324.i, %if.else296.i.if.end327.i_crit_edge, %for.cond265.i.if.end327.i_crit_edge, %for.cond265.preheader.i.if.end327.i_crit_edge, %if.end230.i.if.end327.i_crit_edge
  %nr_jited_func_lens328.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 17
  %235 = ptrtoint ptr %nr_jited_func_lens328.i to i32
  call void @__asan_load4_noabort(i32 %235)
  %236 = load i32, ptr %nr_jited_func_lens328.i, align 4
  %237 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %237)
  %238 = load ptr, ptr %aux.i, align 4
  %func_cnt330.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %238, i32 0, i32 8
  %239 = ptrtoint ptr %func_cnt330.i to i32
  call void @__asan_load4_noabort(i32 %239)
  %240 = load i32, ptr %func_cnt330.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %240)
  %tobool331.not.i = icmp eq i32 %240, 0
  %.668.i = select i1 %tobool331.not.i, i32 1, i32 %240
  %241 = ptrtoint ptr %nr_jited_func_lens328.i to i32
  call void @__asan_store4_noabort(i32 %241)
  store i32 %.668.i, ptr %nr_jited_func_lens328.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %236)
  %tobool337.not.i = icmp eq i32 %236, 0
  br i1 %tobool337.not.i, label %if.end327.i.if.end422.i_crit_edge, label %if.then338.i

if.end327.i.if.end422.i_crit_edge:                ; preds = %if.end327.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end422.i

if.then338.i:                                     ; preds = %if.end327.i
  %f_cred339.i = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 12
  %242 = ptrtoint ptr %f_cred339.i to i32
  call void @__asan_load4_noabort(i32 %242)
  %243 = load ptr, ptr %f_cred339.i, align 8
  %call.i1052.i = call zeroext i1 @kallsyms_show_value(ptr noundef %243) #19
  br i1 %call.i1052.i, label %if.then341.i, label %if.else419.i

if.then341.i:                                     ; preds = %if.then338.i
  %244 = ptrtoint ptr %nr_jited_func_lens328.i to i32
  call void @__asan_load4_noabort(i32 %244)
  %245 = load i32, ptr %nr_jited_func_lens328.i, align 4
  %246 = call i32 @llvm.umin.i32(i32 %245, i32 %236) #19
  %jited_func_lens.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 19
  %247 = ptrtoint ptr %jited_func_lens.i to i32
  call void @__asan_load8_noabort(i32 %247)
  %248 = load i64, ptr %jited_func_lens.i, align 8
  %conv357.i = trunc i64 %248 to i32
  %249 = inttoptr i32 %conv357.i to ptr
  %250 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %250)
  %251 = load ptr, ptr %aux.i, align 4
  %func_cnt359.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %251, i32 0, i32 8
  %252 = ptrtoint ptr %func_cnt359.i to i32
  call void @__asan_load4_noabort(i32 %252)
  %253 = load i32, ptr %func_cnt359.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %253)
  %tobool360.not.i = icmp eq i32 %253, 0
  br i1 %tobool360.not.i, label %if.else392.i, label %for.cond362.preheader.i

for.cond362.preheader.i:                          ; preds = %if.then341.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %246)
  %cmp3631119.not.i = icmp eq i32 %246, 0
  br i1 %cmp3631119.not.i, label %for.cond362.preheader.i.if.end422.i_crit_edge, label %for.cond362.preheader.i.for.body365.i_crit_edge

for.cond362.preheader.i.for.body365.i_crit_edge:  ; preds = %for.cond362.preheader.i
  br label %for.body365.i

for.cond362.preheader.i.if.end422.i_crit_edge:    ; preds = %for.cond362.preheader.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end422.i

for.cond362.i:                                    ; preds = %for.body365.i
  %inc390.i = add nuw i32 %i342.01120.i, 1
  %exitcond1137.not.i = icmp eq i32 %inc390.i, %246
  br i1 %exitcond1137.not.i, label %for.cond362.i.if.end422.i_crit_edge, label %for.cond362.i.for.body365.i_crit_edge

for.cond362.i.for.body365.i_crit_edge:            ; preds = %for.cond362.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.body365.i

for.cond362.i.if.end422.i_crit_edge:              ; preds = %for.cond362.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end422.i

for.body365.i:                                    ; preds = %for.cond362.i.for.body365.i_crit_edge, %for.cond362.preheader.i.for.body365.i_crit_edge
  %i342.01120.i = phi i32 [ %inc390.i, %for.cond362.i.for.body365.i_crit_edge ], [ 0, %for.cond362.preheader.i.for.body365.i_crit_edge ]
  %254 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %254)
  %255 = load ptr, ptr %aux.i, align 4
  %func367.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %255, i32 0, i32 30
  %256 = ptrtoint ptr %func367.i to i32
  call void @__asan_load4_noabort(i32 %256)
  %257 = load ptr, ptr %func367.i, align 8
  %arrayidx368.i = getelementptr ptr, ptr %257, i32 %i342.01120.i
  %258 = ptrtoint ptr %arrayidx368.i to i32
  call void @__asan_load4_noabort(i32 %258)
  %259 = load ptr, ptr %arrayidx368.i, align 4
  %jited_len369.i = getelementptr inbounds %struct.bpf_prog, ptr %259, i32 0, i32 5
  %260 = ptrtoint ptr %jited_len369.i to i32
  call void @__asan_load4_noabort(i32 %260)
  %261 = load i32, ptr %jited_len369.i, align 4
  %arrayidx373.i = getelementptr i32, ptr %249, i32 %i342.01120.i
  call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 3808) #19
  %262 = call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i931.i = and i32 %262, -16384
  %263 = inttoptr i32 %and.i.i.i931.i to ptr
  %cpu_domain.i.i932.i = getelementptr inbounds %struct.thread_info, ptr %263, i32 0, i32 4
  %264 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i932.i) #10, !srcloc !235
  %and.i933.i = and i32 %264, -13
  %or.i934.i = or i32 %and.i933.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i934.i) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %265 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %arrayidx373.i, i32 %261, i32 -1226833921) #19, !srcloc !292
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %264) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %265)
  %tobool386.not.i = icmp eq i32 %265, 0
  br i1 %tobool386.not.i, label %for.cond362.i, label %for.body365.i.bpf_prog_get_info_by_fd.exit_crit_edge

for.body365.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %for.body365.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

if.else392.i:                                     ; preds = %if.then341.i
  %jited_len393.i = getelementptr inbounds %struct.bpf_prog, ptr %6, i32 0, i32 5
  %266 = ptrtoint ptr %jited_len393.i to i32
  call void @__asan_load4_noabort(i32 %266)
  %267 = load i32, ptr %jited_len393.i, align 4
  call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 3813) #19
  %268 = call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i935.i = and i32 %268, -16384
  %269 = inttoptr i32 %and.i.i.i935.i to ptr
  %cpu_domain.i.i936.i = getelementptr inbounds %struct.thread_info, ptr %269, i32 0, i32 4
  %270 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i936.i) #10, !srcloc !235
  %and.i937.i = and i32 %270, -13
  %or.i938.i = or i32 %and.i937.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i938.i) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %271 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %249, i32 %267, i32 -1226833921) #19, !srcloc !293
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %270) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %271)
  %tobool410.not.i = icmp eq i32 %271, 0
  br i1 %tobool410.not.i, label %if.else392.i.if.end422.i_crit_edge, label %if.else392.i.bpf_prog_get_info_by_fd.exit_crit_edge

if.else392.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %if.else392.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

if.else392.i.if.end422.i_crit_edge:               ; preds = %if.else392.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end422.i

if.else419.i:                                     ; preds = %if.then338.i
  call void @__sanitizer_cov_trace_pc() #21
  %jited_func_lens420.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 19
  %272 = ptrtoint ptr %jited_func_lens420.i to i32
  call void @__asan_store8_noabort(i32 %272)
  store i64 0, ptr %jited_func_lens420.i, align 8
  br label %if.end422.i

if.end422.i:                                      ; preds = %if.else419.i, %if.else392.i.if.end422.i_crit_edge, %for.cond362.i.if.end422.i_crit_edge, %for.cond362.preheader.i.if.end422.i_crit_edge, %if.end327.i.if.end422.i_crit_edge
  %273 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %273)
  %274 = load ptr, ptr %aux.i, align 4
  %btf.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %274, i32 0, i32 49
  %275 = ptrtoint ptr %btf.i to i32
  call void @__asan_load4_noabort(i32 %275)
  %276 = load ptr, ptr %btf.i, align 4
  %tobool424.not.i = icmp eq ptr %276, null
  br i1 %tobool424.not.i, label %if.end422.i.if.end429.i_crit_edge, label %if.then425.i

if.end422.i.if.end429.i_crit_edge:                ; preds = %if.end422.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end429.i

if.then425.i:                                     ; preds = %if.end422.i
  call void @__sanitizer_cov_trace_pc() #21
  %call428.i = call i32 @btf_obj_id(ptr noundef nonnull %276) #19
  %btf_id.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 20
  %277 = ptrtoint ptr %btf_id.i to i32
  call void @__asan_store4_noabort(i32 %277)
  store i32 %call428.i, ptr %btf_id.i, align 8
  br label %if.end429.i

if.end429.i:                                      ; preds = %if.then425.i, %if.end422.i.if.end429.i_crit_edge
  %278 = ptrtoint ptr %nr_func_info.i.i to i32
  call void @__asan_load4_noabort(i32 %278)
  %279 = load i32, ptr %nr_func_info.i.i, align 8
  %280 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %280)
  %281 = load ptr, ptr %aux.i, align 4
  %func_info_cnt.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %281, i32 0, i32 54
  %282 = ptrtoint ptr %func_info_cnt.i to i32
  call void @__asan_load4_noabort(i32 %282)
  %283 = load i32, ptr %func_info_cnt.i, align 8
  store i32 %283, ptr %nr_func_info.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %283)
  %tobool434.not.i = icmp eq i32 %283, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %279)
  %tobool436.not.i = icmp eq i32 %279, 0
  %or.cond854.i = select i1 %tobool434.not.i, i1 true, i1 %tobool436.not.i
  br i1 %or.cond854.i, label %if.end429.i.if.end462.i_crit_edge, label %if.then437.i

if.end429.i.if.end462.i_crit_edge:                ; preds = %if.end429.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end462.i

if.then437.i:                                     ; preds = %if.end429.i
  %func_info.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 22
  %284 = ptrtoint ptr %func_info.i to i32
  call void @__asan_load8_noabort(i32 %284)
  %285 = load i64, ptr %func_info.i, align 8
  %conv444.i = trunc i64 %285 to i32
  %286 = inttoptr i32 %conv444.i to ptr
  %287 = call i32 @llvm.umin.i32(i32 %283, i32 %279) #19
  %func_info454.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %281, i32 0, i32 50
  %288 = ptrtoint ptr %func_info454.i to i32
  call void @__asan_load4_noabort(i32 %288)
  %289 = load ptr, ptr %func_info454.i, align 8
  %290 = ptrtoint ptr %func_info_rec_size19.i.i to i32
  call void @__asan_load4_noabort(i32 %290)
  %291 = load i32, ptr %func_info_rec_size19.i.i, align 4
  %mul.i = mul i32 %291, %287
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mul.i)
  %cmp9.i.i945.i = icmp slt i32 %mul.i, 0
  br i1 %cmp9.i.i945.i, label %land.rhs16.i.i948.i, label %if.then.i.i.i951.i

land.rhs16.i.i948.i:                              ; preds = %if.then437.i
  %.b71.i.i947.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i947.i, label %land.rhs16.i.i948.i.bpf_prog_get_info_by_fd.exit_crit_edge, label %if.then27.i.i949.i, !prof !220

land.rhs16.i.i948.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %land.rhs16.i.i948.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

if.then27.i.i949.i:                               ; preds = %land.rhs16.i.i948.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %bpf_prog_get_info_by_fd.exit

if.then.i.i.i951.i:                               ; preds = %if.then437.i
  call void @__check_object_size(ptr noundef %289, i32 noundef %mul.i, i1 noundef zeroext true) #19
  call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i952.i = call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i952.i, label %if.then.i.i.i951.i.copy_to_user.exit961.i_crit_edge, label %if.end.i.i956.i

if.then.i.i.i951.i.copy_to_user.exit961.i_crit_edge: ; preds = %if.then.i.i.i951.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit961.i

if.end.i.i956.i:                                  ; preds = %if.then.i.i.i951.i
  %292 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %286, i32 %mul.i, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i954.i = extractvalue { i32, i32 } %292, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i954.i)
  %cmp.i6.i955.i = icmp eq i32 %asmresult.i.i954.i, 0
  br i1 %cmp.i6.i955.i, label %if.then2.i.i959.i, label %if.end.i.i956.i.copy_to_user.exit961.i_crit_edge

if.end.i.i956.i.copy_to_user.exit961.i_crit_edge: ; preds = %if.end.i.i956.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit961.i

if.then2.i.i959.i:                                ; preds = %if.end.i.i956.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i957.i = call zeroext i1 @__kasan_check_read(ptr noundef %289, i32 noundef %mul.i) #19
  %call.i12.i.i958.i = call i32 @arm_copy_to_user(ptr noundef %286, ptr noundef %289, i32 noundef %mul.i) #19
  br label %copy_to_user.exit961.i

copy_to_user.exit961.i:                           ; preds = %if.then2.i.i959.i, %if.end.i.i956.i.copy_to_user.exit961.i_crit_edge, %if.then.i.i.i951.i.copy_to_user.exit961.i_crit_edge
  %n.addr.0.i960.i = phi i32 [ %mul.i, %if.then.i.i.i951.i.copy_to_user.exit961.i_crit_edge ], [ %call.i12.i.i958.i, %if.then2.i.i959.i ], [ %mul.i, %if.end.i.i956.i.copy_to_user.exit961.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i960.i)
  %tobool456.not.i = icmp eq i32 %n.addr.0.i960.i, 0
  br i1 %tobool456.not.i, label %copy_to_user.exit961.i.if.end462.i_crit_edge, label %copy_to_user.exit961.i.bpf_prog_get_info_by_fd.exit_crit_edge

copy_to_user.exit961.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %copy_to_user.exit961.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

copy_to_user.exit961.i.if.end462.i_crit_edge:     ; preds = %copy_to_user.exit961.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end462.i

if.end462.i:                                      ; preds = %copy_to_user.exit961.i.if.end462.i_crit_edge, %if.end429.i.if.end462.i_crit_edge
  %293 = ptrtoint ptr %nr_line_info.i.i to i32
  call void @__asan_load4_noabort(i32 %293)
  %294 = load i32, ptr %nr_line_info.i.i, align 4
  %295 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %295)
  %296 = load ptr, ptr %aux.i, align 4
  %nr_linfo.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %296, i32 0, i32 55
  %297 = ptrtoint ptr %nr_linfo.i to i32
  call void @__asan_load4_noabort(i32 %297)
  %298 = load i32, ptr %nr_linfo.i, align 4
  store i32 %298, ptr %nr_line_info.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %298)
  %tobool467.not.i = icmp eq i32 %298, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %294)
  %tobool469.not.i = icmp eq i32 %294, 0
  %or.cond856.i = select i1 %tobool467.not.i, i1 true, i1 %tobool469.not.i
  br i1 %or.cond856.i, label %if.end462.i.if.end495.i_crit_edge, label %if.then470.i

if.end462.i.if.end495.i_crit_edge:                ; preds = %if.end462.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end495.i

if.then470.i:                                     ; preds = %if.end462.i
  %line_info.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 25
  %299 = ptrtoint ptr %line_info.i to i32
  call void @__asan_load8_noabort(i32 %299)
  %300 = load i64, ptr %line_info.i, align 8
  %conv477.i = trunc i64 %300 to i32
  %301 = inttoptr i32 %conv477.i to ptr
  %302 = call i32 @llvm.umin.i32(i32 %298, i32 %294) #19
  %linfo.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %296, i32 0, i32 52
  %303 = ptrtoint ptr %linfo.i to i32
  call void @__asan_load4_noabort(i32 %303)
  %304 = load ptr, ptr %linfo.i, align 8
  %305 = ptrtoint ptr %line_info_rec_size20.i.i to i32
  call void @__asan_load4_noabort(i32 %305)
  %306 = load i32, ptr %line_info_rec_size20.i.i, align 4
  %mul487.i = mul i32 %306, %302
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %mul487.i)
  %cmp9.i.i968.i = icmp slt i32 %mul487.i, 0
  br i1 %cmp9.i.i968.i, label %land.rhs16.i.i971.i, label %if.then.i.i.i974.i

land.rhs16.i.i971.i:                              ; preds = %if.then470.i
  %.b71.i.i970.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i970.i, label %land.rhs16.i.i971.i.bpf_prog_get_info_by_fd.exit_crit_edge, label %if.then27.i.i972.i, !prof !220

land.rhs16.i.i971.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %land.rhs16.i.i971.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

if.then27.i.i972.i:                               ; preds = %land.rhs16.i.i971.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %bpf_prog_get_info_by_fd.exit

if.then.i.i.i974.i:                               ; preds = %if.then470.i
  call void @__check_object_size(ptr noundef %304, i32 noundef %mul487.i, i1 noundef zeroext true) #19
  call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i975.i = call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i975.i, label %if.then.i.i.i974.i.copy_to_user.exit984.i_crit_edge, label %if.end.i.i979.i

if.then.i.i.i974.i.copy_to_user.exit984.i_crit_edge: ; preds = %if.then.i.i.i974.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit984.i

if.end.i.i979.i:                                  ; preds = %if.then.i.i.i974.i
  %307 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %301, i32 %mul487.i, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i977.i = extractvalue { i32, i32 } %307, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i977.i)
  %cmp.i6.i978.i = icmp eq i32 %asmresult.i.i977.i, 0
  br i1 %cmp.i6.i978.i, label %if.then2.i.i982.i, label %if.end.i.i979.i.copy_to_user.exit984.i_crit_edge

if.end.i.i979.i.copy_to_user.exit984.i_crit_edge: ; preds = %if.end.i.i979.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit984.i

if.then2.i.i982.i:                                ; preds = %if.end.i.i979.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i980.i = call zeroext i1 @__kasan_check_read(ptr noundef %304, i32 noundef %mul487.i) #19
  %call.i12.i.i981.i = call i32 @arm_copy_to_user(ptr noundef %301, ptr noundef %304, i32 noundef %mul487.i) #19
  br label %copy_to_user.exit984.i

copy_to_user.exit984.i:                           ; preds = %if.then2.i.i982.i, %if.end.i.i979.i.copy_to_user.exit984.i_crit_edge, %if.then.i.i.i974.i.copy_to_user.exit984.i_crit_edge
  %n.addr.0.i983.i = phi i32 [ %mul487.i, %if.then.i.i.i974.i.copy_to_user.exit984.i_crit_edge ], [ %call.i12.i.i981.i, %if.then2.i.i982.i ], [ %mul487.i, %if.end.i.i979.i.copy_to_user.exit984.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i983.i)
  %tobool489.not.i = icmp eq i32 %n.addr.0.i983.i, 0
  br i1 %tobool489.not.i, label %copy_to_user.exit984.i.if.end495.i_crit_edge, label %copy_to_user.exit984.i.bpf_prog_get_info_by_fd.exit_crit_edge

copy_to_user.exit984.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %copy_to_user.exit984.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

copy_to_user.exit984.i.if.end495.i_crit_edge:     ; preds = %copy_to_user.exit984.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end495.i

if.end495.i:                                      ; preds = %copy_to_user.exit984.i.if.end495.i_crit_edge, %if.end462.i.if.end495.i_crit_edge
  %308 = ptrtoint ptr %nr_jited_line_info.i.i to i32
  call void @__asan_load4_noabort(i32 %308)
  %309 = load i32, ptr %nr_jited_line_info.i.i, align 8
  %310 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %310)
  %311 = load ptr, ptr %aux.i, align 4
  %jited_linfo.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %311, i32 0, i32 53
  %312 = ptrtoint ptr %jited_linfo.i to i32
  call void @__asan_load4_noabort(i32 %312)
  %313 = load ptr, ptr %jited_linfo.i, align 4
  %tobool498.not.i = icmp eq ptr %313, null
  br i1 %tobool498.not.i, label %if.end505.thread.i, label %if.end505.i

if.end505.thread.i:                               ; preds = %if.end495.i
  call void @__sanitizer_cov_trace_pc() #21
  %314 = ptrtoint ptr %nr_jited_line_info.i.i to i32
  call void @__asan_store4_noabort(i32 %314)
  store i32 0, ptr %nr_jited_line_info.i.i, align 8
  br label %if.end568.i

if.end505.i:                                      ; preds = %if.end495.i
  %nr_linfo501.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %311, i32 0, i32 55
  %315 = ptrtoint ptr %nr_linfo501.i to i32
  call void @__asan_load4_noabort(i32 %315)
  %316 = load i32, ptr %nr_linfo501.i, align 4
  %317 = ptrtoint ptr %nr_jited_line_info.i.i to i32
  call void @__asan_store4_noabort(i32 %317)
  store i32 %316, ptr %nr_jited_line_info.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %316)
  %tobool507.not.i = icmp eq i32 %316, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %309)
  %tobool509.not.i = icmp eq i32 %309, 0
  %or.cond858.i = select i1 %tobool507.not.i, i1 true, i1 %tobool509.not.i
  br i1 %or.cond858.i, label %if.end505.i.if.end568.i_crit_edge, label %if.then510.i

if.end505.i.if.end568.i_crit_edge:                ; preds = %if.end505.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end568.i

if.then510.i:                                     ; preds = %if.end505.i
  %f_cred511.i = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 12
  %318 = ptrtoint ptr %f_cred511.i to i32
  call void @__asan_load4_noabort(i32 %318)
  %319 = load ptr, ptr %f_cred511.i, align 8
  %call.i1053.i = call zeroext i1 @kallsyms_show_value(ptr noundef %319) #19
  %jited_line_info.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 26
  br i1 %call.i1053.i, label %if.then513.i, label %if.else565.i

if.then513.i:                                     ; preds = %if.then510.i
  %320 = ptrtoint ptr %jited_line_info.i to i32
  call void @__asan_load8_noabort(i32 %320)
  %321 = load i64, ptr %jited_line_info.i, align 8
  %conv522.i = trunc i64 %321 to i32
  %322 = inttoptr i32 %conv522.i to ptr
  %323 = ptrtoint ptr %nr_jited_line_info.i.i to i32
  call void @__asan_load4_noabort(i32 %323)
  %324 = load i32, ptr %nr_jited_line_info.i.i, align 8
  %325 = call i32 @llvm.umin.i32(i32 %324, i32 %309) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %325)
  %cmp5321121.not.i = icmp eq i32 %325, 0
  br i1 %cmp5321121.not.i, label %if.then513.i.if.end568.i_crit_edge, label %if.then513.i.for.body534.i_crit_edge

if.then513.i.for.body534.i_crit_edge:             ; preds = %if.then513.i
  br label %for.body534.i

if.then513.i.if.end568.i_crit_edge:               ; preds = %if.then513.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end568.i

for.cond531.i:                                    ; preds = %for.body534.i
  %inc559.i = add nuw i32 %i515.01122.i, 1
  %exitcond1138.not.i = icmp eq i32 %inc559.i, %325
  br i1 %exitcond1138.not.i, label %for.cond531.i.if.end568.i_crit_edge, label %for.cond531.i.for.body534.i_crit_edge

for.cond531.i.for.body534.i_crit_edge:            ; preds = %for.cond531.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.body534.i

for.cond531.i.if.end568.i_crit_edge:              ; preds = %for.cond531.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end568.i

for.body534.i:                                    ; preds = %for.cond531.i.for.body534.i_crit_edge, %if.then513.i.for.body534.i_crit_edge
  %i515.01122.i = phi i32 [ %inc559.i, %for.cond531.i.for.body534.i_crit_edge ], [ 0, %if.then513.i.for.body534.i_crit_edge ]
  %arrayidx538.i = getelementptr i64, ptr %322, i32 %i515.01122.i
  %326 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %326)
  %327 = load ptr, ptr %aux.i, align 4
  %jited_linfo541.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %327, i32 0, i32 53
  %328 = ptrtoint ptr %jited_linfo541.i to i32
  call void @__asan_load4_noabort(i32 %328)
  %329 = load ptr, ptr %jited_linfo541.i, align 4
  %arrayidx542.i = getelementptr ptr, ptr %329, i32 %i515.01122.i
  %330 = ptrtoint ptr %arrayidx542.i to i32
  call void @__asan_load4_noabort(i32 %330)
  %331 = load ptr, ptr %arrayidx542.i, align 4
  %332 = ptrtoint ptr %331 to i32
  %conv543.i = sext i32 %332 to i64
  call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 3862) #19
  %333 = call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i985.i = and i32 %333, -16384
  %334 = inttoptr i32 %and.i.i.i985.i to ptr
  %cpu_domain.i.i986.i = getelementptr inbounds %struct.thread_info, ptr %334, i32 0, i32 4
  %335 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i986.i) #10, !srcloc !235
  %and.i987.i = and i32 %335, -13
  %or.i988.i = or i32 %and.i987.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i988.i) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %336 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_8", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %arrayidx538.i, i64 %conv543.i, i32 -1226833921) #19, !srcloc !294
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %335) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %336)
  %tobool555.not.i = icmp eq i32 %336, 0
  br i1 %tobool555.not.i, label %for.cond531.i, label %for.body534.i.bpf_prog_get_info_by_fd.exit_crit_edge

for.body534.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %for.body534.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

if.else565.i:                                     ; preds = %if.then510.i
  call void @__sanitizer_cov_trace_pc() #21
  %337 = ptrtoint ptr %jited_line_info.i to i32
  call void @__asan_store8_noabort(i32 %337)
  store i64 0, ptr %jited_line_info.i, align 8
  br label %if.end568.i

if.end568.i:                                      ; preds = %if.else565.i, %for.cond531.i.if.end568.i_crit_edge, %if.then513.i.if.end568.i_crit_edge, %if.end505.i.if.end568.i_crit_edge, %if.end505.thread.i
  %nr_prog_tags.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 30
  %338 = ptrtoint ptr %nr_prog_tags.i to i32
  call void @__asan_load4_noabort(i32 %338)
  %339 = load i32, ptr %nr_prog_tags.i, align 4
  %340 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %340)
  %341 = load ptr, ptr %aux.i, align 4
  %func_cnt570.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %341, i32 0, i32 8
  %342 = ptrtoint ptr %func_cnt570.i to i32
  call void @__asan_load4_noabort(i32 %342)
  %343 = load i32, ptr %func_cnt570.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %343)
  %tobool571.not.i = icmp eq i32 %343, 0
  %.669.i = select i1 %tobool571.not.i, i32 1, i32 %343
  %344 = ptrtoint ptr %nr_prog_tags.i to i32
  call void @__asan_store4_noabort(i32 %344)
  store i32 %.669.i, ptr %nr_prog_tags.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %339)
  %tobool577.not.i = icmp eq i32 %339, 0
  br i1 %tobool577.not.i, label %if.end568.i.if.then.i.i.i1029.i_crit_edge, label %if.then578.i

if.end568.i.if.then.i.i.i1029.i_crit_edge:        ; preds = %if.end568.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i.i.i1029.i

if.then578.i:                                     ; preds = %if.end568.i
  %prog_tags.i = getelementptr inbounds %struct.bpf_prog_info, ptr %info3.i, i32 0, i32 31
  %345 = ptrtoint ptr %prog_tags.i to i32
  call void @__asan_load8_noabort(i32 %345)
  %346 = load i64, ptr %prog_tags.i, align 8
  %conv586.i = trunc i64 %346 to i32
  %347 = inttoptr i32 %conv586.i to ptr
  %348 = call i32 @llvm.umin.i32(i32 %.669.i, i32 %339) #19
  %349 = ptrtoint ptr %func_cnt570.i to i32
  call void @__asan_load4_noabort(i32 %349)
  %350 = load i32, ptr %func_cnt570.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %350)
  %tobool597.not.i = icmp eq i32 %350, 0
  br i1 %tobool597.not.i, label %if.end8.i.i1009.i, label %if.then578.i.for.body602.i_crit_edge

if.then578.i.for.body602.i_crit_edge:             ; preds = %if.then578.i
  br label %for.body602.i

for.cond599.i:                                    ; preds = %copy_to_user.exit1004.i
  %inc615.i = add nuw i32 %i579.01124.i, 1
  %exitcond1139.not.i = icmp eq i32 %inc615.i, %348
  br i1 %exitcond1139.not.i, label %for.cond599.i.if.then.i.i.i1029.i_crit_edge, label %for.cond599.i.for.body602.i_crit_edge

for.cond599.i.for.body602.i_crit_edge:            ; preds = %for.cond599.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.body602.i

for.cond599.i.if.then.i.i.i1029.i_crit_edge:      ; preds = %for.cond599.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i.i.i1029.i

for.body602.i:                                    ; preds = %for.cond599.i.for.body602.i_crit_edge, %if.then578.i.for.body602.i_crit_edge
  %i579.01124.i = phi i32 [ %inc615.i, %for.cond599.i.for.body602.i_crit_edge ], [ 0, %if.then578.i.for.body602.i_crit_edge ]
  %arrayidx603.i = getelementptr [8 x i8], ptr %347, i32 %i579.01124.i
  %351 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %351)
  %352 = load ptr, ptr %aux.i, align 4
  %func606.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %352, i32 0, i32 30
  %353 = ptrtoint ptr %func606.i to i32
  call void @__asan_load4_noabort(i32 %353)
  %354 = load ptr, ptr %func606.i, align 8
  %arrayidx607.i = getelementptr ptr, ptr %354, i32 %i579.01124.i
  %355 = ptrtoint ptr %arrayidx607.i to i32
  call void @__asan_load4_noabort(i32 %355)
  %356 = load ptr, ptr %arrayidx607.i, align 4
  %tag608.i = getelementptr inbounds %struct.bpf_prog, ptr %356, i32 0, i32 6
  call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i995.i = call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i995.i, label %for.body602.i.bpf_prog_get_info_by_fd.exit_crit_edge, label %if.end.i.i999.i

for.body602.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %for.body602.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

if.end.i.i999.i:                                  ; preds = %for.body602.i
  %357 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %arrayidx603.i, i32 8, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i997.i = extractvalue { i32, i32 } %357, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i997.i)
  %cmp.i6.i998.i = icmp eq i32 %asmresult.i.i997.i, 0
  br i1 %cmp.i6.i998.i, label %copy_to_user.exit1004.i, label %if.end.i.i999.i.bpf_prog_get_info_by_fd.exit_crit_edge

if.end.i.i999.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %if.end.i.i999.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

copy_to_user.exit1004.i:                          ; preds = %if.end.i.i999.i
  %call.i.i.i1000.i = call zeroext i1 @__kasan_check_read(ptr noundef %tag608.i, i32 noundef 8) #19
  %call.i12.i.i1001.i = call i32 @arm_copy_to_user(ptr noundef %arrayidx603.i, ptr noundef %tag608.i, i32 noundef 8) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i1001.i)
  %tobool611.not.i = icmp eq i32 %call.i12.i.i1001.i, 0
  br i1 %tobool611.not.i, label %for.cond599.i, label %copy_to_user.exit1004.i.bpf_prog_get_info_by_fd.exit_crit_edge

copy_to_user.exit1004.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %copy_to_user.exit1004.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

if.end8.i.i1009.i:                                ; preds = %if.then578.i
  call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i1011.i = call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i1011.i, label %if.end8.i.i1009.i.bpf_prog_get_info_by_fd.exit_crit_edge, label %if.end.i.i1015.i

if.end8.i.i1009.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %if.end8.i.i1009.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

if.end.i.i1015.i:                                 ; preds = %if.end8.i.i1009.i
  %358 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %347, i32 8, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i1013.i = extractvalue { i32, i32 } %358, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i1013.i)
  %cmp.i6.i1014.i = icmp eq i32 %asmresult.i.i1013.i, 0
  br i1 %cmp.i6.i1014.i, label %copy_to_user.exit1020.i, label %if.end.i.i1015.i.bpf_prog_get_info_by_fd.exit_crit_edge

if.end.i.i1015.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %if.end.i.i1015.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

copy_to_user.exit1020.i:                          ; preds = %if.end.i.i1015.i
  %call.i.i.i1016.i = call zeroext i1 @__kasan_check_read(ptr noundef %tag25.i, i32 noundef 8) #19
  %call.i12.i.i1017.i = call i32 @arm_copy_to_user(ptr noundef %347, ptr noundef %tag25.i, i32 noundef 8) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i12.i.i1017.i)
  %tobool623.not.i = icmp eq i32 %call.i12.i.i1017.i, 0
  br i1 %tobool623.not.i, label %copy_to_user.exit1020.i.if.then.i.i.i1029.i_crit_edge, label %copy_to_user.exit1020.i.bpf_prog_get_info_by_fd.exit_crit_edge

copy_to_user.exit1020.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %copy_to_user.exit1020.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

copy_to_user.exit1020.i.if.then.i.i.i1029.i_crit_edge: ; preds = %copy_to_user.exit1020.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i.i.i1029.i

if.then.i.i.i1029.i:                              ; preds = %copy_to_user.exit1020.i.if.then.i.i.i1029.i_crit_edge, %for.cond599.i.if.then.i.i.i1029.i_crit_edge, %if.end568.i.if.then.i.i.i1029.i_crit_edge, %if.then129.i.if.then.i.i.i1029.i_crit_edge, %cleanup122.i, %if.then78.i
  call void @__check_object_size(ptr noundef nonnull %info3.i, i32 noundef %15, i1 noundef zeroext true) #19
  call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i1030.i = call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i1030.i, label %if.then.i.i.i1029.i.copy_to_user.exit1039.i_crit_edge, label %if.end.i.i1034.i

if.then.i.i.i1029.i.copy_to_user.exit1039.i_crit_edge: ; preds = %if.then.i.i.i1029.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit1039.i

if.end.i.i1034.i:                                 ; preds = %if.then.i.i.i1029.i
  %359 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %9, i32 %15, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i1032.i = extractvalue { i32, i32 } %359, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i1032.i)
  %cmp.i6.i1033.i = icmp eq i32 %asmresult.i.i1032.i, 0
  br i1 %cmp.i6.i1033.i, label %if.then2.i.i1037.i, label %if.end.i.i1034.i.copy_to_user.exit1039.i_crit_edge

if.end.i.i1034.i.copy_to_user.exit1039.i_crit_edge: ; preds = %if.end.i.i1034.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit1039.i

if.then2.i.i1037.i:                               ; preds = %if.end.i.i1034.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i1035.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %info3.i, i32 noundef %15) #19
  %call.i12.i.i1036.i = call i32 @arm_copy_to_user(ptr noundef %9, ptr noundef nonnull %info3.i, i32 noundef %15) #19
  br label %copy_to_user.exit1039.i

copy_to_user.exit1039.i:                          ; preds = %if.then2.i.i1037.i, %if.end.i.i1034.i.copy_to_user.exit1039.i_crit_edge, %if.then.i.i.i1029.i.copy_to_user.exit1039.i_crit_edge
  %n.addr.0.i1038.i = phi i32 [ %15, %if.then.i.i.i1029.i.copy_to_user.exit1039.i_crit_edge ], [ %call.i12.i.i1036.i, %if.then2.i.i1037.i ], [ %15, %if.end.i.i1034.i.copy_to_user.exit1039.i_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i1038.i)
  %tobool633.not.i = icmp eq i32 %n.addr.0.i1038.i, 0
  br i1 %tobool633.not.i, label %lor.lhs.false.i, label %copy_to_user.exit1039.i.bpf_prog_get_info_by_fd.exit_crit_edge

copy_to_user.exit1039.i.bpf_prog_get_info_by_fd.exit_crit_edge: ; preds = %copy_to_user.exit1039.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get_info_by_fd.exit

lor.lhs.false.i:                                  ; preds = %copy_to_user.exit1039.i
  call void @__sanitizer_cov_trace_pc() #21
  %info_len637.i = getelementptr inbounds %struct.anon.10, ptr %uattr, i32 0, i32 1
  call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 3894) #19
  %360 = call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i1040.i = and i32 %360, -16384
  %361 = inttoptr i32 %and.i.i.i1040.i to ptr
  %cpu_domain.i.i1041.i = getelementptr inbounds %struct.thread_info, ptr %361, i32 0, i32 4
  %362 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i1041.i) #10, !srcloc !235
  %and.i1042.i = and i32 %362, -13
  %or.i1043.i = or i32 %and.i1042.i, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i1043.i) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %363 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %info_len637.i, i32 %15, i32 -1226833921) #19, !srcloc !295
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %362) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %363)
  %tobool650.not.i = icmp eq i32 %363, 0
  %spec.select861.i = select i1 %tobool650.not.i, i32 0, i32 -14
  br label %bpf_prog_get_info_by_fd.exit

bpf_prog_get_info_by_fd.exit:                     ; preds = %lor.lhs.false.i, %copy_to_user.exit1039.i.bpf_prog_get_info_by_fd.exit_crit_edge, %copy_to_user.exit1020.i.bpf_prog_get_info_by_fd.exit_crit_edge, %if.end.i.i1015.i.bpf_prog_get_info_by_fd.exit_crit_edge, %if.end8.i.i1009.i.bpf_prog_get_info_by_fd.exit_crit_edge, %copy_to_user.exit1004.i.bpf_prog_get_info_by_fd.exit_crit_edge, %if.end.i.i999.i.bpf_prog_get_info_by_fd.exit_crit_edge, %for.body602.i.bpf_prog_get_info_by_fd.exit_crit_edge, %for.body534.i.bpf_prog_get_info_by_fd.exit_crit_edge, %copy_to_user.exit984.i.bpf_prog_get_info_by_fd.exit_crit_edge, %if.then27.i.i972.i, %land.rhs16.i.i971.i.bpf_prog_get_info_by_fd.exit_crit_edge, %copy_to_user.exit961.i.bpf_prog_get_info_by_fd.exit_crit_edge, %if.then27.i.i949.i, %land.rhs16.i.i948.i.bpf_prog_get_info_by_fd.exit_crit_edge, %if.else392.i.bpf_prog_get_info_by_fd.exit_crit_edge, %for.body365.i.bpf_prog_get_info_by_fd.exit_crit_edge, %if.else296.i.bpf_prog_get_info_by_fd.exit_crit_edge, %for.body268.i.bpf_prog_get_info_by_fd.exit_crit_edge, %copy_to_user.exit922.i.bpf_prog_get_info_by_fd.exit_crit_edge, %if.then27.i.i910.i, %land.rhs16.i.i909.i.bpf_prog_get_info_by_fd.exit_crit_edge, %copy_to_user.exit899.i.bpf_prog_get_info_by_fd.exit_crit_edge, %if.then27.i.i887.i, %land.rhs16.i.i886.i.bpf_prog_get_info_by_fd.exit_crit_edge, %if.then129.i.bpf_prog_get_info_by_fd.exit_crit_edge, %copy_to_user.exit.i.bpf_prog_get_info_by_fd.exit_crit_edge, %copy_to_user.exit.thread.i, %if.end95.i.bpf_prog_get_info_by_fd.exit_crit_edge, %land.lhs.true14.i.i.bpf_prog_get_info_by_fd.exit_crit_edge, %land.lhs.true6.i.i.bpf_prog_get_info_by_fd.exit_crit_edge, %land.lhs.true.i.i.bpf_prog_get_info_by_fd.exit_crit_edge, %if.then63.i, %if.then11.i.i.i, %if.end14.i.i.bpf_prog_get_info_by_fd.exit_crit_edge, %if.end10.i.i.bpf_prog_get_info_by_fd.exit_crit_edge, %if.then5.bpf_prog_get_info_by_fd.exit_crit_edge
  %retval.17.i = phi i32 [ -14, %copy_to_user.exit984.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %copy_to_user.exit961.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %if.then63.i ], [ %call130.i, %if.then129.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %copy_to_user.exit922.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %copy_to_user.exit1039.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ %spec.select861.i, %lor.lhs.false.i ], [ %call9.i.i, %if.end10.i.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -7, %if.then5.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -7, %if.end14.i.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %if.then11.i.i.i ], [ -22, %land.lhs.true.i.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -22, %land.lhs.true6.i.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -22, %land.lhs.true14.i.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %copy_to_user.exit.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -12, %if.end95.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %copy_to_user.exit.thread.i ], [ -14, %if.then27.i.i887.i ], [ -14, %land.rhs16.i.i886.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %if.then27.i.i910.i ], [ -14, %land.rhs16.i.i909.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %if.else296.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %if.else392.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %copy_to_user.exit1020.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %if.end8.i.i1009.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %if.end.i.i1015.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %if.then27.i.i949.i ], [ -14, %land.rhs16.i.i948.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %if.then27.i.i972.i ], [ -14, %land.rhs16.i.i971.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %copy_to_user.exit1004.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %if.end.i.i999.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %for.body602.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %for.body534.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %for.body365.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %for.body268.i.bpf_prog_get_info_by_fd.exit_crit_edge ], [ -14, %copy_to_user.exit899.i.bpf_prog_get_info_by_fd.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %stats.i) #19
  call void @llvm.lifetime.end.p0(i64 224, ptr nonnull %info3.i) #19
  br label %if.end39

if.else:                                          ; preds = %if.end2
  %cmp11 = icmp eq ptr %4, @bpf_map_fops
  br i1 %cmp11, label %if.then12, label %if.else17

if.then12:                                        ; preds = %if.else
  %private_data15 = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 16
  %364 = ptrtoint ptr %private_data15 to i32
  call void @__asan_load4_noabort(i32 %364)
  %365 = load ptr, ptr %private_data15, align 4
  %info.i64 = getelementptr inbounds %struct.anon.10, ptr %attr, i32 0, i32 2
  %366 = ptrtoint ptr %info.i64 to i32
  call void @__asan_load8_noabort(i32 %366)
  %367 = load i64, ptr %info.i64, align 8
  %conv2.i65 = trunc i64 %367 to i32
  %368 = inttoptr i32 %conv2.i65 to ptr
  call void @llvm.lifetime.start.p0(i64 88, ptr nonnull %info3.i63) #19
  %info_len4.i66 = getelementptr inbounds %struct.anon.10, ptr %attr, i32 0, i32 1
  %369 = ptrtoint ptr %info_len4.i66 to i32
  call void @__asan_load4_noabort(i32 %369)
  %370 = load i32, ptr %info_len4.i66, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %370)
  %cmp.i.i67 = icmp ugt i32 %370, 4096
  br i1 %cmp.i.i67, label %if.then12.bpf_map_get_info_by_fd.exit_crit_edge, label %if.end.i.i69, !prof !219

if.then12.bpf_map_get_info_by_fd.exit_crit_edge:  ; preds = %if.then12
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_get_info_by_fd.exit

if.end.i.i69:                                     ; preds = %if.then12
  call void @__sanitizer_cov_trace_const_cmp4(i32 88, i32 %370)
  %cmp2.not.i.i68 = icmp ugt i32 %370, 88
  br i1 %cmp2.not.i.i68, label %if.end10.i.i74, label %if.end.i.i69.if.end.i80_crit_edge

if.end.i.i69.if.end.i80_crit_edge:                ; preds = %if.end.i.i69
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i80

if.end10.i.i74:                                   ; preds = %if.end.i.i69
  %add.ptr7.i.i70 = getelementptr i8, ptr %368, i32 88
  %sub8.i.i71 = add nsw i32 %370, -88
  %call9.i.i72 = tail call i32 @check_zeroed_user(ptr noundef %add.ptr7.i.i70, i32 noundef %sub8.i.i71) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i.i72)
  %cmp11.i.i73 = icmp slt i32 %call9.i.i72, 0
  br i1 %cmp11.i.i73, label %if.end10.i.i74.bpf_map_get_info_by_fd.exit_crit_edge, label %if.end14.i.i76

if.end10.i.i74.bpf_map_get_info_by_fd.exit_crit_edge: ; preds = %if.end10.i.i74
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_get_info_by_fd.exit

if.end14.i.i76:                                   ; preds = %if.end10.i.i74
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i.i72)
  %tobool15.not.i.i75 = icmp eq i32 %call9.i.i72, 0
  br i1 %tobool15.not.i.i75, label %if.end14.i.i76.bpf_map_get_info_by_fd.exit_crit_edge, label %if.end14.i.i76.if.end.i80_crit_edge

if.end14.i.i76.if.end.i80_crit_edge:              ; preds = %if.end14.i.i76
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i80

if.end14.i.i76.bpf_map_get_info_by_fd.exit_crit_edge: ; preds = %if.end14.i.i76
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_get_info_by_fd.exit

if.end.i80:                                       ; preds = %if.end14.i.i76.if.end.i80_crit_edge, %if.end.i.i69.if.end.i80_crit_edge
  %371 = tail call i32 @llvm.umin.i32(i32 %370, i32 88) #19
  %372 = getelementptr inbounds i8, ptr %info3.i63, i32 40
  %373 = call ptr @memset(ptr %372, i32 0, i32 40)
  %map_type.i = getelementptr inbounds %struct.bpf_map, ptr %365, i32 0, i32 3
  %374 = ptrtoint ptr %map_type.i to i32
  call void @__asan_load4_noabort(i32 %374)
  %375 = load i32, ptr %map_type.i, align 4
  %376 = ptrtoint ptr %info3.i63 to i32
  call void @__asan_store4_noabort(i32 %376)
  store i32 %375, ptr %info3.i63, align 8
  %id.i77 = getelementptr inbounds %struct.bpf_map, ptr %365, i32 0, i32 11
  %377 = ptrtoint ptr %id.i77 to i32
  call void @__asan_load4_noabort(i32 %377)
  %378 = load i32, ptr %id.i77, align 4
  %id8.i = getelementptr inbounds %struct.bpf_map_info, ptr %info3.i63, i32 0, i32 1
  %379 = ptrtoint ptr %id8.i to i32
  call void @__asan_store4_noabort(i32 %379)
  store i32 %378, ptr %id8.i, align 4
  %key_size.i = getelementptr inbounds %struct.bpf_map, ptr %365, i32 0, i32 4
  %380 = ptrtoint ptr %key_size.i to i32
  call void @__asan_load4_noabort(i32 %380)
  %381 = load i32, ptr %key_size.i, align 16
  %key_size9.i = getelementptr inbounds %struct.bpf_map_info, ptr %info3.i63, i32 0, i32 2
  %382 = ptrtoint ptr %key_size9.i to i32
  call void @__asan_store4_noabort(i32 %382)
  store i32 %381, ptr %key_size9.i, align 8
  %value_size.i = getelementptr inbounds %struct.bpf_map, ptr %365, i32 0, i32 5
  %383 = ptrtoint ptr %value_size.i to i32
  call void @__asan_load4_noabort(i32 %383)
  %384 = load i32, ptr %value_size.i, align 4
  %value_size10.i = getelementptr inbounds %struct.bpf_map_info, ptr %info3.i63, i32 0, i32 3
  %385 = ptrtoint ptr %value_size10.i to i32
  call void @__asan_store4_noabort(i32 %385)
  store i32 %384, ptr %value_size10.i, align 4
  %max_entries.i = getelementptr inbounds %struct.bpf_map, ptr %365, i32 0, i32 6
  %386 = ptrtoint ptr %max_entries.i to i32
  call void @__asan_load4_noabort(i32 %386)
  %387 = load i32, ptr %max_entries.i, align 8
  %max_entries11.i = getelementptr inbounds %struct.bpf_map_info, ptr %info3.i63, i32 0, i32 4
  %388 = ptrtoint ptr %max_entries11.i to i32
  call void @__asan_store4_noabort(i32 %388)
  store i32 %387, ptr %max_entries11.i, align 8
  %map_flags.i = getelementptr inbounds %struct.bpf_map, ptr %365, i32 0, i32 8
  %389 = ptrtoint ptr %map_flags.i to i32
  call void @__asan_load4_noabort(i32 %389)
  %390 = load i32, ptr %map_flags.i, align 8
  %map_flags12.i = getelementptr inbounds %struct.bpf_map_info, ptr %info3.i63, i32 0, i32 5
  %391 = ptrtoint ptr %map_flags12.i to i32
  call void @__asan_store4_noabort(i32 %391)
  store i32 %390, ptr %map_flags12.i, align 4
  %map_extra.i = getelementptr inbounds %struct.bpf_map, ptr %365, i32 0, i32 7
  %392 = ptrtoint ptr %map_extra.i to i32
  call void @__asan_load8_noabort(i32 %392)
  %393 = load i64, ptr %map_extra.i, align 32
  %map_extra13.i = getelementptr inbounds %struct.bpf_map_info, ptr %info3.i63, i32 0, i32 15
  %394 = ptrtoint ptr %map_extra13.i to i32
  call void @__asan_store8_noabort(i32 %394)
  store i64 %393, ptr %map_extra13.i, align 8
  %name.i78 = getelementptr inbounds %struct.bpf_map_info, ptr %info3.i63, i32 0, i32 6
  %name14.i = getelementptr inbounds %struct.bpf_map, ptr %365, i32 0, i32 18
  %395 = call ptr @memcpy(ptr %name.i78, ptr %name14.i, i32 16)
  %btf.i79 = getelementptr inbounds %struct.bpf_map, ptr %365, i32 0, i32 16
  %396 = ptrtoint ptr %btf.i79 to i32
  call void @__asan_load4_noabort(i32 %396)
  %397 = load ptr, ptr %btf.i79, align 8
  %tobool16.not.i = icmp eq ptr %397, null
  br i1 %tobool16.not.i, label %if.end.i80.if.end22.i_crit_edge, label %if.then17.i

if.end.i80.if.end22.i_crit_edge:                  ; preds = %if.end.i80
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end22.i

if.then17.i:                                      ; preds = %if.end.i80
  call void @__sanitizer_cov_trace_pc() #21
  %call19.i = tail call i32 @btf_obj_id(ptr noundef nonnull %397) #19
  %btf_id.i81 = getelementptr inbounds %struct.bpf_map_info, ptr %info3.i63, i32 0, i32 11
  %398 = ptrtoint ptr %btf_id.i81 to i32
  call void @__asan_store4_noabort(i32 %398)
  store i32 %call19.i, ptr %btf_id.i81, align 8
  %btf_key_type_id.i = getelementptr inbounds %struct.bpf_map, ptr %365, i32 0, i32 13
  %399 = ptrtoint ptr %btf_key_type_id.i to i32
  call void @__asan_load4_noabort(i32 %399)
  %400 = load i32, ptr %btf_key_type_id.i, align 4
  %btf_key_type_id20.i = getelementptr inbounds %struct.bpf_map_info, ptr %info3.i63, i32 0, i32 12
  %401 = ptrtoint ptr %btf_key_type_id20.i to i32
  call void @__asan_store4_noabort(i32 %401)
  store i32 %400, ptr %btf_key_type_id20.i, align 4
  %btf_value_type_id.i = getelementptr inbounds %struct.bpf_map, ptr %365, i32 0, i32 14
  %402 = ptrtoint ptr %btf_value_type_id.i to i32
  call void @__asan_load4_noabort(i32 %402)
  %403 = load i32, ptr %btf_value_type_id.i, align 64
  %btf_value_type_id21.i = getelementptr inbounds %struct.bpf_map_info, ptr %info3.i63, i32 0, i32 13
  %404 = ptrtoint ptr %btf_value_type_id21.i to i32
  call void @__asan_store4_noabort(i32 %404)
  store i32 %403, ptr %btf_value_type_id21.i, align 8
  br label %if.end22.i

if.end22.i:                                       ; preds = %if.then17.i, %if.end.i80.if.end22.i_crit_edge
  %btf_vmlinux_value_type_id.i = getelementptr inbounds %struct.bpf_map, ptr %365, i32 0, i32 15
  %405 = ptrtoint ptr %btf_vmlinux_value_type_id.i to i32
  call void @__asan_load4_noabort(i32 %405)
  %406 = load i32, ptr %btf_vmlinux_value_type_id.i, align 4
  %btf_vmlinux_value_type_id23.i = getelementptr inbounds %struct.bpf_map_info, ptr %info3.i63, i32 0, i32 8
  %407 = ptrtoint ptr %btf_vmlinux_value_type_id23.i to i32
  call void @__asan_store4_noabort(i32 %407)
  store i32 %406, ptr %btf_vmlinux_value_type_id23.i, align 4
  %408 = ptrtoint ptr %365 to i32
  call void @__asan_load4_noabort(i32 %408)
  %409 = load ptr, ptr %365, align 128
  %cmp.i1.i = icmp eq ptr %409, @bpf_map_offload_ops
  br i1 %cmp.i1.i, label %if.then25.i, label %if.end22.i.if.then.i.i.i.i82_crit_edge

if.end22.i.if.then.i.i.i.i82_crit_edge:           ; preds = %if.end22.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i.i.i.i82

if.then25.i:                                      ; preds = %if.end22.i
  %call26.i = call i32 @bpf_map_offload_info_fill(ptr noundef nonnull %info3.i63, ptr noundef %365) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26.i)
  %tobool27.not.i = icmp eq i32 %call26.i, 0
  br i1 %tobool27.not.i, label %if.then25.i.if.then.i.i.i.i82_crit_edge, label %if.then25.i.bpf_map_get_info_by_fd.exit_crit_edge

if.then25.i.bpf_map_get_info_by_fd.exit_crit_edge: ; preds = %if.then25.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_get_info_by_fd.exit

if.then25.i.if.then.i.i.i.i82_crit_edge:          ; preds = %if.then25.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i.i.i.i82

if.then.i.i.i.i82:                                ; preds = %if.then25.i.if.then.i.i.i.i82_crit_edge, %if.end22.i.if.then.i.i.i.i82_crit_edge
  call void @__check_object_size(ptr noundef nonnull %info3.i63, i32 noundef %371, i1 noundef zeroext true) #19
  call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i.i83 = call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i.i83, label %if.then.i.i.i.i82.copy_to_user.exit.i91_crit_edge, label %if.end.i.i.i87

if.then.i.i.i.i82.copy_to_user.exit.i91_crit_edge: ; preds = %if.then.i.i.i.i82
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit.i91

if.end.i.i.i87:                                   ; preds = %if.then.i.i.i.i82
  %410 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %368, i32 %371, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i.i85 = extractvalue { i32, i32 } %410, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i85)
  %cmp.i6.i.i86 = icmp eq i32 %asmresult.i.i.i85, 0
  br i1 %cmp.i6.i.i86, label %if.then2.i.i.i90, label %if.end.i.i.i87.copy_to_user.exit.i91_crit_edge

if.end.i.i.i87.copy_to_user.exit.i91_crit_edge:   ; preds = %if.end.i.i.i87
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit.i91

if.then2.i.i.i90:                                 ; preds = %if.end.i.i.i87
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i.i88 = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %info3.i63, i32 noundef %371) #19
  %call.i12.i.i.i89 = call i32 @arm_copy_to_user(ptr noundef %368, ptr noundef nonnull %info3.i63, i32 noundef %371) #19
  br label %copy_to_user.exit.i91

copy_to_user.exit.i91:                            ; preds = %if.then2.i.i.i90, %if.end.i.i.i87.copy_to_user.exit.i91_crit_edge, %if.then.i.i.i.i82.copy_to_user.exit.i91_crit_edge
  %n.addr.0.i.i = phi i32 [ %371, %if.then.i.i.i.i82.copy_to_user.exit.i91_crit_edge ], [ %call.i12.i.i.i89, %if.then2.i.i.i90 ], [ %371, %if.end.i.i.i87.copy_to_user.exit.i91_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i.i)
  %tobool32.not.i = icmp eq i32 %n.addr.0.i.i, 0
  br i1 %tobool32.not.i, label %lor.lhs.false.i96, label %copy_to_user.exit.i91.bpf_map_get_info_by_fd.exit_crit_edge

copy_to_user.exit.i91.bpf_map_get_info_by_fd.exit_crit_edge: ; preds = %copy_to_user.exit.i91
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_get_info_by_fd.exit

lor.lhs.false.i96:                                ; preds = %copy_to_user.exit.i91
  call void @__sanitizer_cov_trace_pc() #21
  %info_len33.i = getelementptr inbounds %struct.anon.10, ptr %uattr, i32 0, i32 1
  call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 3939) #19
  %411 = call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i92 = and i32 %411, -16384
  %412 = inttoptr i32 %and.i.i.i.i92 to ptr
  %cpu_domain.i.i.i93 = getelementptr inbounds %struct.thread_info, ptr %412, i32 0, i32 4
  %413 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i93) #10, !srcloc !235
  %and.i.i94 = and i32 %413, -13
  %or.i.i95 = or i32 %and.i.i94, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i95) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %414 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %info_len33.i, i32 %371, i32 -1226833921) #19, !srcloc !296
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %413) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %414)
  %tobool37.not.i = icmp eq i32 %414, 0
  %spec.select.i = select i1 %tobool37.not.i, i32 0, i32 -14
  br label %bpf_map_get_info_by_fd.exit

bpf_map_get_info_by_fd.exit:                      ; preds = %lor.lhs.false.i96, %copy_to_user.exit.i91.bpf_map_get_info_by_fd.exit_crit_edge, %if.then25.i.bpf_map_get_info_by_fd.exit_crit_edge, %if.end14.i.i76.bpf_map_get_info_by_fd.exit_crit_edge, %if.end10.i.i74.bpf_map_get_info_by_fd.exit_crit_edge, %if.then12.bpf_map_get_info_by_fd.exit_crit_edge
  %retval.0.i = phi i32 [ %call26.i, %if.then25.i.bpf_map_get_info_by_fd.exit_crit_edge ], [ -14, %copy_to_user.exit.i91.bpf_map_get_info_by_fd.exit_crit_edge ], [ %spec.select.i, %lor.lhs.false.i96 ], [ %call9.i.i72, %if.end10.i.i74.bpf_map_get_info_by_fd.exit_crit_edge ], [ -7, %if.then12.bpf_map_get_info_by_fd.exit_crit_edge ], [ -7, %if.end14.i.i76.bpf_map_get_info_by_fd.exit_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 88, ptr nonnull %info3.i63) #19
  br label %if.end39

if.else17:                                        ; preds = %if.else
  %cmp20 = icmp eq ptr %4, @btf_fops
  br i1 %cmp20, label %if.then21, label %if.else26

if.then21:                                        ; preds = %if.else17
  %private_data24 = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 16
  %415 = ptrtoint ptr %private_data24 to i32
  call void @__asan_load4_noabort(i32 %415)
  %416 = load ptr, ptr %private_data24, align 4
  %info.i97 = getelementptr inbounds %struct.anon.10, ptr %attr, i32 0, i32 2
  %417 = ptrtoint ptr %info.i97 to i32
  call void @__asan_load8_noabort(i32 %417)
  %418 = load i64, ptr %info.i97, align 8
  %conv2.i98 = trunc i64 %418 to i32
  %419 = inttoptr i32 %conv2.i98 to ptr
  %info_len3.i = getelementptr inbounds %struct.anon.10, ptr %attr, i32 0, i32 1
  %420 = ptrtoint ptr %info_len3.i to i32
  call void @__asan_load4_noabort(i32 %420)
  %421 = load i32, ptr %info_len3.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %421)
  %cmp.i.i99 = icmp ugt i32 %421, 4096
  br i1 %cmp.i.i99, label %if.then21.if.end39_crit_edge, label %if.end.i.i101, !prof !219

if.then21.if.end39_crit_edge:                     ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end39

if.end.i.i101:                                    ; preds = %if.then21
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %421)
  %cmp2.not.i.i100 = icmp ugt i32 %421, 32
  br i1 %cmp2.not.i.i100, label %if.end10.i.i106, label %if.end.i.i101.if.end.i109_crit_edge

if.end.i.i101.if.end.i109_crit_edge:              ; preds = %if.end.i.i101
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i109

if.end10.i.i106:                                  ; preds = %if.end.i.i101
  %add.ptr7.i.i102 = getelementptr i8, ptr %419, i32 32
  %sub8.i.i103 = add nsw i32 %421, -32
  %call9.i.i104 = tail call i32 @check_zeroed_user(ptr noundef %add.ptr7.i.i102, i32 noundef %sub8.i.i103) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i.i104)
  %cmp11.i.i105 = icmp slt i32 %call9.i.i104, 0
  br i1 %cmp11.i.i105, label %if.end10.i.i106.if.end39_crit_edge, label %if.end14.i.i108

if.end10.i.i106.if.end39_crit_edge:               ; preds = %if.end10.i.i106
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end39

if.end14.i.i108:                                  ; preds = %if.end10.i.i106
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i.i104)
  %tobool15.not.i.i107 = icmp eq i32 %call9.i.i104, 0
  br i1 %tobool15.not.i.i107, label %if.end14.i.i108.if.end39_crit_edge, label %if.end14.i.i108.if.end.i109_crit_edge

if.end14.i.i108.if.end.i109_crit_edge:            ; preds = %if.end14.i.i108
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i109

if.end14.i.i108.if.end39_crit_edge:               ; preds = %if.end14.i.i108
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end39

if.end.i109:                                      ; preds = %if.end14.i.i108.if.end.i109_crit_edge, %if.end.i.i101.if.end.i109_crit_edge
  %call4.i = tail call i32 @btf_get_info_by_fd(ptr noundef %416, ptr noundef %attr, ptr noundef %uattr) #19
  br label %if.end39

if.else26:                                        ; preds = %if.else17
  %cmp29 = icmp eq ptr %4, @bpf_link_fops
  br i1 %cmp29, label %if.then30, label %if.else26.if.end39_crit_edge

if.else26.if.end39_crit_edge:                     ; preds = %if.else26
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end39

if.then30:                                        ; preds = %if.else26
  %private_data33 = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 16
  %422 = ptrtoint ptr %private_data33 to i32
  call void @__asan_load4_noabort(i32 %422)
  %423 = load ptr, ptr %private_data33, align 4
  %info.i112 = getelementptr inbounds %struct.anon.10, ptr %attr, i32 0, i32 2
  %424 = ptrtoint ptr %info.i112 to i32
  call void @__asan_load8_noabort(i32 %424)
  %425 = load i64, ptr %info.i112, align 8
  %conv2.i113 = trunc i64 %425 to i32
  %426 = inttoptr i32 %conv2.i113 to ptr
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %info3.i111) #19
  %info_len4.i114 = getelementptr inbounds %struct.anon.10, ptr %attr, i32 0, i32 1
  %427 = ptrtoint ptr %info_len4.i114 to i32
  call void @__asan_load4_noabort(i32 %427)
  %428 = load i32, ptr %info_len4.i114, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %428)
  %cmp.i.i115 = icmp ugt i32 %428, 4096
  br i1 %cmp.i.i115, label %if.then30.bpf_link_get_info_by_fd.exit_crit_edge, label %if.end.i.i117, !prof !219

if.then30.bpf_link_get_info_by_fd.exit_crit_edge: ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_link_get_info_by_fd.exit

if.end.i.i117:                                    ; preds = %if.then30
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %428)
  %cmp2.not.i.i116 = icmp ugt i32 %428, 32
  br i1 %cmp2.not.i.i116, label %if.end10.i.i122, label %if.end.i.i117.if.end.i125_crit_edge

if.end.i.i117.if.end.i125_crit_edge:              ; preds = %if.end.i.i117
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i125

if.end10.i.i122:                                  ; preds = %if.end.i.i117
  %add.ptr7.i.i118 = getelementptr i8, ptr %426, i32 32
  %sub8.i.i119 = add nsw i32 %428, -32
  %call9.i.i120 = tail call i32 @check_zeroed_user(ptr noundef %add.ptr7.i.i118, i32 noundef %sub8.i.i119) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i.i120)
  %cmp11.i.i121 = icmp slt i32 %call9.i.i120, 0
  br i1 %cmp11.i.i121, label %if.end10.i.i122.bpf_link_get_info_by_fd.exit_crit_edge, label %if.end14.i.i124

if.end10.i.i122.bpf_link_get_info_by_fd.exit_crit_edge: ; preds = %if.end10.i.i122
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_link_get_info_by_fd.exit

if.end14.i.i124:                                  ; preds = %if.end10.i.i122
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i.i120)
  %tobool15.not.i.i123 = icmp eq i32 %call9.i.i120, 0
  br i1 %tobool15.not.i.i123, label %if.end14.i.i124.bpf_link_get_info_by_fd.exit_crit_edge, label %if.end14.i.i124.if.end.i125_crit_edge

if.end14.i.i124.if.end.i125_crit_edge:            ; preds = %if.end14.i.i124
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i125

if.end14.i.i124.bpf_link_get_info_by_fd.exit_crit_edge: ; preds = %if.end14.i.i124
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_link_get_info_by_fd.exit

if.end.i125:                                      ; preds = %if.end14.i.i124.if.end.i125_crit_edge, %if.end.i.i117.if.end.i125_crit_edge
  %429 = tail call i32 @llvm.umin.i32(i32 %428, i32 32) #19
  %430 = call ptr @memset(ptr %info3.i111, i32 0, i32 32)
  call void @__check_object_size(ptr noundef nonnull %info3.i111, i32 noundef %429, i1 noundef zeroext false) #19
  call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 156) #19
  %call.i.i.i127 = call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i.i127, label %if.end.i125.if.end.i.i.i141_crit_edge, label %land.lhs.true.i.i.i131

if.end.i125.if.end.i.i.i141_crit_edge:            ; preds = %if.end.i125
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i.i.i141

land.lhs.true.i.i.i131:                           ; preds = %if.end.i125
  %431 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %426, i32 %429, i32 -1226833920) #23, !srcloc !234
  %asmresult.i.i.i129 = extractvalue { i32, i32 } %431, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i129)
  %cmp.i6.i.i130 = icmp eq i32 %asmresult.i.i.i129, 0
  br i1 %cmp.i6.i.i130, label %if.then.i7.i.i138, label %land.lhs.true.i.i.i131.if.end.i.i.i141_crit_edge, !prof !220

land.lhs.true.i.i.i131.if.end.i.i.i141_crit_edge: ; preds = %land.lhs.true.i.i.i131
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i.i.i141

if.then.i7.i.i138:                                ; preds = %land.lhs.true.i.i.i131
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i.i132 = call zeroext i1 @__kasan_check_write(ptr noundef nonnull %info3.i111, i32 noundef %429) #19
  %432 = call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i.i.i133 = and i32 %432, -16384
  %433 = inttoptr i32 %and.i.i.i.i.i.i.i133 to ptr
  %cpu_domain.i.i.i.i.i.i134 = getelementptr inbounds %struct.thread_info, ptr %433, i32 0, i32 4
  %434 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i.i.i.i134) #10, !srcloc !235
  %and.i.i.i.i.i135 = and i32 %434, -13
  %or.i.i.i.i.i136 = or i32 %and.i.i.i.i.i135, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i.i.i.i136) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %call1.i.i.i.i137 = call i32 @arm_copy_from_user(ptr noundef nonnull %info3.i111, ptr noundef %426, i32 noundef %429) #19
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %434) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  br label %if.end.i.i.i141

if.end.i.i.i141:                                  ; preds = %if.then.i7.i.i138, %land.lhs.true.i.i.i131.if.end.i.i.i141_crit_edge, %if.end.i125.if.end.i.i.i141_crit_edge
  %res.0.i.i.i139 = phi i32 [ %429, %if.end.i125.if.end.i.i.i141_crit_edge ], [ %call1.i.i.i.i137, %if.then.i7.i.i138 ], [ %429, %land.lhs.true.i.i.i131.if.end.i.i.i141_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %res.0.i.i.i139)
  %tobool4.not.i.i.i140 = icmp eq i32 %res.0.i.i.i139, 0
  br i1 %tobool4.not.i.i.i140, label %if.end11.i149, label %if.then11.i.i.i144, !prof !220

if.then11.i.i.i144:                               ; preds = %if.end.i.i.i141
  call void @__sanitizer_cov_trace_pc() #21
  %sub.i.i.i142 = sub i32 %429, %res.0.i.i.i139
  %add.ptr.i.i.i143 = getelementptr i8, ptr %info3.i111, i32 %sub.i.i.i142
  %435 = call ptr @memset(ptr %add.ptr.i.i.i143, i32 0, i32 %res.0.i.i.i139)
  br label %bpf_link_get_info_by_fd.exit

if.end11.i149:                                    ; preds = %if.end.i.i.i141
  %type.i145 = getelementptr inbounds %struct.bpf_link, ptr %423, i32 0, i32 2
  %436 = ptrtoint ptr %type.i145 to i32
  call void @__asan_load4_noabort(i32 %436)
  %437 = load i32, ptr %type.i145, align 4
  %438 = ptrtoint ptr %info3.i111 to i32
  call void @__asan_store4_noabort(i32 %438)
  store i32 %437, ptr %info3.i111, align 8
  %id.i146 = getelementptr inbounds %struct.bpf_link, ptr %423, i32 0, i32 1
  %439 = ptrtoint ptr %id.i146 to i32
  call void @__asan_load4_noabort(i32 %439)
  %440 = load i32, ptr %id.i146, align 8
  %id13.i147 = getelementptr inbounds %struct.bpf_link_info, ptr %info3.i111, i32 0, i32 1
  %441 = ptrtoint ptr %id13.i147 to i32
  call void @__asan_store4_noabort(i32 %441)
  store i32 %440, ptr %id13.i147, align 4
  %prog.i = getelementptr inbounds %struct.bpf_link, ptr %423, i32 0, i32 4
  %442 = ptrtoint ptr %prog.i to i32
  call void @__asan_load4_noabort(i32 %442)
  %443 = load ptr, ptr %prog.i, align 4
  %aux.i148 = getelementptr inbounds %struct.bpf_prog, ptr %443, i32 0, i32 10
  %444 = ptrtoint ptr %aux.i148 to i32
  call void @__asan_load4_noabort(i32 %444)
  %445 = load ptr, ptr %aux.i148, align 4
  %id14.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %445, i32 0, i32 7
  %446 = ptrtoint ptr %id14.i to i32
  call void @__asan_load4_noabort(i32 %446)
  %447 = load i32, ptr %id14.i, align 8
  %prog_id.i = getelementptr inbounds %struct.bpf_link_info, ptr %info3.i111, i32 0, i32 2
  %448 = ptrtoint ptr %prog_id.i to i32
  call void @__asan_store4_noabort(i32 %448)
  store i32 %447, ptr %prog_id.i, align 8
  %ops.i = getelementptr inbounds %struct.bpf_link, ptr %423, i32 0, i32 3
  %449 = ptrtoint ptr %ops.i to i32
  call void @__asan_load4_noabort(i32 %449)
  %450 = load ptr, ptr %ops.i, align 8
  %fill_link_info.i = getelementptr inbounds %struct.bpf_link_ops, ptr %450, i32 0, i32 5
  %451 = ptrtoint ptr %fill_link_info.i to i32
  call void @__asan_load4_noabort(i32 %451)
  %452 = load ptr, ptr %fill_link_info.i, align 4
  %tobool15.not.i = icmp eq ptr %452, null
  br i1 %tobool15.not.i, label %if.end11.i149.if.then.i.i.i8.i_crit_edge, label %if.then16.i

if.end11.i149.if.then.i.i.i8.i_crit_edge:         ; preds = %if.end11.i149
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i.i.i8.i

if.then16.i:                                      ; preds = %if.end11.i149
  %call19.i150 = call i32 %452(ptr noundef %423, ptr noundef nonnull %info3.i111) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call19.i150)
  %tobool20.not.i = icmp eq i32 %call19.i150, 0
  br i1 %tobool20.not.i, label %if.then16.i.if.then.i.i.i8.i_crit_edge, label %if.then16.i.bpf_link_get_info_by_fd.exit_crit_edge

if.then16.i.bpf_link_get_info_by_fd.exit_crit_edge: ; preds = %if.then16.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_link_get_info_by_fd.exit

if.then16.i.if.then.i.i.i8.i_crit_edge:           ; preds = %if.then16.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then.i.i.i8.i

if.then.i.i.i8.i:                                 ; preds = %if.then16.i.if.then.i.i.i8.i_crit_edge, %if.end11.i149.if.then.i.i.i8.i_crit_edge
  call void @__check_object_size(ptr noundef nonnull %info3.i111, i32 noundef %429, i1 noundef zeroext true) #19
  call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i9.i = call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i9.i, label %if.then.i.i.i8.i.copy_to_user.exit.i153_crit_edge, label %if.end.i.i13.i

if.then.i.i.i8.i.copy_to_user.exit.i153_crit_edge: ; preds = %if.then.i.i.i8.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit.i153

if.end.i.i13.i:                                   ; preds = %if.then.i.i.i8.i
  %453 = call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %426, i32 %429, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i11.i = extractvalue { i32, i32 } %453, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i11.i)
  %cmp.i6.i12.i = icmp eq i32 %asmresult.i.i11.i, 0
  br i1 %cmp.i6.i12.i, label %if.then2.i.i.i152, label %if.end.i.i13.i.copy_to_user.exit.i153_crit_edge

if.end.i.i13.i.copy_to_user.exit.i153_crit_edge:  ; preds = %if.end.i.i13.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit.i153

if.then2.i.i.i152:                                ; preds = %if.end.i.i13.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i14.i = call zeroext i1 @__kasan_check_read(ptr noundef nonnull %info3.i111, i32 noundef %429) #19
  %call.i12.i.i.i151 = call i32 @arm_copy_to_user(ptr noundef %426, ptr noundef nonnull %info3.i111, i32 noundef %429) #19
  br label %copy_to_user.exit.i153

copy_to_user.exit.i153:                           ; preds = %if.then2.i.i.i152, %if.end.i.i13.i.copy_to_user.exit.i153_crit_edge, %if.then.i.i.i8.i.copy_to_user.exit.i153_crit_edge
  %n.addr.0.i15.i = phi i32 [ %429, %if.then.i.i.i8.i.copy_to_user.exit.i153_crit_edge ], [ %call.i12.i.i.i151, %if.then2.i.i.i152 ], [ %429, %if.end.i.i13.i.copy_to_user.exit.i153_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i15.i)
  %tobool25.not.i = icmp eq i32 %n.addr.0.i15.i, 0
  br i1 %tobool25.not.i, label %lor.lhs.false.i159, label %copy_to_user.exit.i153.bpf_link_get_info_by_fd.exit_crit_edge

copy_to_user.exit.i153.bpf_link_get_info_by_fd.exit_crit_edge: ; preds = %copy_to_user.exit.i153
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_link_get_info_by_fd.exit

lor.lhs.false.i159:                               ; preds = %copy_to_user.exit.i153
  call void @__sanitizer_cov_trace_pc() #21
  %info_len26.i = getelementptr inbounds %struct.anon.10, ptr %uattr, i32 0, i32 1
  call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 3991) #19
  %454 = call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i154 = and i32 %454, -16384
  %455 = inttoptr i32 %and.i.i.i.i154 to ptr
  %cpu_domain.i.i.i155 = getelementptr inbounds %struct.thread_info, ptr %455, i32 0, i32 4
  %456 = call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i.i155) #10, !srcloc !235
  %and.i.i156 = and i32 %456, -13
  %or.i.i157 = or i32 %and.i.i156, 4
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i.i157) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %457 = call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %info_len26.i, i32 %429, i32 -1226833921) #19, !srcloc !297
  call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %456) #19, !srcloc !236
  call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %457)
  %tobool30.not.i = icmp eq i32 %457, 0
  %spec.select.i158 = select i1 %tobool30.not.i, i32 0, i32 -14
  br label %bpf_link_get_info_by_fd.exit

bpf_link_get_info_by_fd.exit:                     ; preds = %lor.lhs.false.i159, %copy_to_user.exit.i153.bpf_link_get_info_by_fd.exit_crit_edge, %if.then16.i.bpf_link_get_info_by_fd.exit_crit_edge, %if.then11.i.i.i144, %if.end14.i.i124.bpf_link_get_info_by_fd.exit_crit_edge, %if.end10.i.i122.bpf_link_get_info_by_fd.exit_crit_edge, %if.then30.bpf_link_get_info_by_fd.exit_crit_edge
  %retval.0.i160 = phi i32 [ %call19.i150, %if.then16.i.bpf_link_get_info_by_fd.exit_crit_edge ], [ -14, %copy_to_user.exit.i153.bpf_link_get_info_by_fd.exit_crit_edge ], [ %spec.select.i158, %lor.lhs.false.i159 ], [ %call9.i.i120, %if.end10.i.i122.bpf_link_get_info_by_fd.exit_crit_edge ], [ -7, %if.then30.bpf_link_get_info_by_fd.exit_crit_edge ], [ -7, %if.end14.i.i124.bpf_link_get_info_by_fd.exit_crit_edge ], [ -14, %if.then11.i.i.i144 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %info3.i111) #19
  br label %if.end39

if.end39:                                         ; preds = %bpf_link_get_info_by_fd.exit, %if.else26.if.end39_crit_edge, %if.end.i109, %if.end14.i.i108.if.end39_crit_edge, %if.end10.i.i106.if.end39_crit_edge, %if.then21.if.end39_crit_edge, %bpf_map_get_info_by_fd.exit, %bpf_prog_get_info_by_fd.exit
  %err.0 = phi i32 [ %retval.17.i, %bpf_prog_get_info_by_fd.exit ], [ %retval.0.i, %bpf_map_get_info_by_fd.exit ], [ %retval.0.i160, %bpf_link_get_info_by_fd.exit ], [ -22, %if.else26.if.end39_crit_edge ], [ %call4.i, %if.end.i109 ], [ %call9.i.i104, %if.end10.i.i106.if.end39_crit_edge ], [ -7, %if.then21.if.end39_crit_edge ], [ -7, %if.end14.i.i108.if.end39_crit_edge ]
  %and.i = and i32 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end39.cleanup_crit_edge, label %if.then.i

if.end39.cleanup_crit_edge:                       ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then.i:                                        ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #21
  call void @fput(ptr noundef nonnull %2) #19
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.end39.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ -77, %if.end.cleanup_crit_edge ], [ %err.0, %if.end39.cleanup_crit_edge ], [ %err.0, %if.then.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_raw_tracepoint_open(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  %link_primer = alloca %struct.bpf_link_primer, align 4
  %buf = alloca [128 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %link_primer) #19
  %0 = call ptr @memset(ptr %link_primer, i32 255, i32 16)
  call void @llvm.lifetime.start.p0(i64 128, ptr nonnull %buf) #19
  %1 = call ptr @memset(ptr %buf, i32 255, i32 128)
  %prog_fd = getelementptr inbounds %struct.anon.12, ptr %attr, i32 0, i32 1
  %add.ptr = getelementptr i8, ptr %prog_fd, i32 4
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 132) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %2 = ptrtoint ptr %prog_fd to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %prog_fd, align 8
  %call.i.i.i = tail call i32 @__fdget(i32 noundef %3) #19, !noalias !298
  %and.i.i.i.i = and i32 %call.i.i.i, -4
  %4 = inttoptr i32 %and.i.i.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.if.then4_crit_edge, label %if.end.i.i.i

if.end.if.then4_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then4

if.end.i.i.i:                                     ; preds = %if.end
  %f_op.i.i.i = getelementptr inbounds %struct.file, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %f_op.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %f_op.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %6, @bpf_prog_fops
  br i1 %cmp.not.i.i.i, label %____bpf_prog_get.exit.i.i, label %if.then2.i.i.i

if.then2.i.i.i:                                   ; preds = %if.end.i.i.i
  %and.i.i17.i.i = and i32 %call.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i17.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i17.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.then2.i.i.i.if.then4_crit_edge, label %if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge

if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge:  ; preds = %if.then2.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i.i

if.then2.i.i.i.if.then4_crit_edge:                ; preds = %if.then2.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then4

____bpf_prog_get.exit.i.i:                        ; preds = %if.end.i.i.i
  %private_data.i.i.i = getelementptr inbounds %struct.file, ptr %4, i32 0, i32 16
  %7 = ptrtoint ptr %private_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %private_data.i.i.i, align 4
  %cmp.i.i.i = icmp ugt ptr %8, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge, label %if.end.i.i

____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge: ; preds = %____bpf_prog_get.exit.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get.exit

if.end.i.i:                                       ; preds = %____bpf_prog_get.exit.i.i
  %aux.i22.i.i = getelementptr inbounds %struct.bpf_prog, ptr %8, i32 0, i32 10
  %9 = ptrtoint ptr %aux.i22.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %aux.i22.i.i, align 4
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %10, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %10) #19
  %and.i.i.i = and i32 %call.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i23.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i23.i.i, label %if.end.i.i.bpf_prog_get.exit_crit_edge, label %if.end.i.i.cleanup.sink.split.i.i_crit_edge

if.end.i.i.cleanup.sink.split.i.i_crit_edge:      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i.i

if.end.i.i.bpf_prog_get.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get.exit

cleanup.sink.split.i.i:                           ; preds = %if.end.i.i.cleanup.sink.split.i.i_crit_edge, %if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge
  %retval.0.ph.i.i = phi ptr [ inttoptr (i32 -22 to ptr), %if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge ], [ %8, %if.end.i.i.cleanup.sink.split.i.i_crit_edge ]
  tail call void @fput(ptr noundef nonnull %4) #19
  br label %bpf_prog_get.exit

bpf_prog_get.exit:                                ; preds = %cleanup.sink.split.i.i, %if.end.i.i.bpf_prog_get.exit_crit_edge, %____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge
  %retval.0.i.i = phi ptr [ %8, %____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge ], [ %8, %if.end.i.i.bpf_prog_get.exit_crit_edge ], [ %retval.0.ph.i.i, %cleanup.sink.split.i.i ]
  %cmp.i = icmp ugt ptr %retval.0.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %bpf_prog_get.exit.if.then4_crit_edge, label %if.end6

bpf_prog_get.exit.if.then4_crit_edge:             ; preds = %bpf_prog_get.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then4

if.then4:                                         ; preds = %bpf_prog_get.exit.if.then4_crit_edge, %if.then2.i.i.i.if.then4_crit_edge, %if.end.if.then4_crit_edge
  %retval.0.i.i86 = phi ptr [ %retval.0.i.i, %bpf_prog_get.exit.if.then4_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.end.if.then4_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then2.i.i.i.if.then4_crit_edge ]
  %11 = ptrtoint ptr %retval.0.i.i86 to i32
  br label %cleanup

if.end6:                                          ; preds = %bpf_prog_get.exit
  %type = getelementptr inbounds %struct.bpf_prog, ptr %retval.0.i.i, i32 0, i32 2
  %12 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %type, align 4
  %14 = zext i32 %13 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.84)
  switch i32 %13, label %if.end6.out_put_prog_crit_edge [
    i32 26, label %if.end6.sw.bb_crit_edge
    i32 28, label %if.end6.sw.bb_crit_edge87
    i32 29, label %if.end6.sw.bb_crit_edge88
    i32 17, label %if.end6.sw.bb18_crit_edge
    i32 24, label %if.end6.sw.bb18_crit_edge89
  ]

if.end6.sw.bb18_crit_edge89:                      ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb18

if.end6.sw.bb18_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb18

if.end6.sw.bb_crit_edge88:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end6.sw.bb_crit_edge87:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end6.sw.bb_crit_edge:                          ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb

if.end6.out_put_prog_crit_edge:                   ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #21
  br label %out_put_prog

sw.bb:                                            ; preds = %if.end6.sw.bb_crit_edge, %if.end6.sw.bb_crit_edge87, %if.end6.sw.bb_crit_edge88
  %15 = ptrtoint ptr %attr to i32
  call void @__asan_load8_noabort(i32 %15)
  %16 = load i64, ptr %attr, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %16)
  %tobool.not = icmp eq i64 %16, 0
  br i1 %tobool.not, label %if.end8, label %sw.bb.out_put_prog_crit_edge

sw.bb.out_put_prog_crit_edge:                     ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #21
  br label %out_put_prog

if.end8:                                          ; preds = %sw.bb
  call void @__sanitizer_cov_trace_const_cmp4(i32 26, i32 %13)
  %cmp10 = icmp eq i32 %13, 26
  br i1 %cmp10, label %land.lhs.true, label %if.end8.if.end13_crit_edge

if.end8.if.end13_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end13

land.lhs.true:                                    ; preds = %if.end8
  %expected_attach_type = getelementptr inbounds %struct.bpf_prog, ptr %retval.0.i.i, i32 0, i32 3
  %17 = ptrtoint ptr %expected_attach_type to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %expected_attach_type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 23, i32 %18)
  %cmp11 = icmp eq i32 %18, 23
  br i1 %cmp11, label %if.then12, label %land.lhs.true.if.end13_crit_edge

land.lhs.true.if.end13_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end13

if.then12:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %retval.0.i.i, i32 0, i32 10
  %19 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %aux, align 4
  %attach_func_name = getelementptr inbounds %struct.bpf_prog_aux, ptr %20, i32 0, i32 29
  %21 = ptrtoint ptr %attach_func_name to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %attach_func_name, align 4
  br label %sw.epilog

if.end13:                                         ; preds = %land.lhs.true.if.end13_crit_edge, %if.end8.if.end13_crit_edge
  %call14 = tail call fastcc i32 @bpf_tracing_prog_attach(ptr noundef %retval.0.i.i, i32 noundef 0, i32 noundef 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call14)
  %cmp15 = icmp sgt i32 %call14, -1
  br i1 %cmp15, label %if.end13.cleanup_crit_edge, label %if.end13.out_put_prog_crit_edge

if.end13.out_put_prog_crit_edge:                  ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #21
  br label %out_put_prog

if.end13.cleanup_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

sw.bb18:                                          ; preds = %if.end6.sw.bb18_crit_edge, %if.end6.sw.bb18_crit_edge89
  %23 = ptrtoint ptr %attr to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %attr, align 8
  %conv22 = trunc i64 %24 to i32
  %25 = inttoptr i32 %conv22 to ptr
  %call23 = call i32 @strncpy_from_user(ptr noundef nonnull %buf, ptr noundef %25, i32 noundef 127) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call23)
  %cmp24 = icmp slt i32 %call23, 0
  br i1 %cmp24, label %sw.bb18.out_put_prog_crit_edge, label %if.end27

sw.bb18.out_put_prog_crit_edge:                   ; preds = %sw.bb18
  call void @__sanitizer_cov_trace_pc() #21
  br label %out_put_prog

if.end27:                                         ; preds = %sw.bb18
  call void @__sanitizer_cov_trace_pc() #21
  %arrayidx = getelementptr inbounds [128 x i8], ptr %buf, i32 0, i32 127
  %26 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %26)
  store i8 0, ptr %arrayidx, align 1
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end27, %if.then12
  %tp_name.0 = phi ptr [ %buf, %if.end27 ], [ %22, %if.then12 ]
  %call29 = call ptr @bpf_get_raw_tracepoint(ptr noundef %tp_name.0) #19
  %tobool30.not = icmp eq ptr %call29, null
  br i1 %tobool30.not, label %sw.epilog.out_put_prog_crit_edge, label %if.end32

sw.epilog.out_put_prog_crit_edge:                 ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  br label %out_put_prog

if.end32:                                         ; preds = %sw.epilog
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %27 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %27, i32 noundef 1052096, i32 noundef 80) #27
  %tobool34.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool34.not, label %if.end32.out_put_btp_crit_edge, label %if.end36

if.end32.out_put_btp_crit_edge:                   ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #21
  br label %out_put_btp

if.end36:                                         ; preds = %if.end32
  call void @bpf_link_init(ptr noundef nonnull %call7.i.i, i32 noundef 1, ptr noundef nonnull @bpf_raw_tp_link_lops, ptr noundef %retval.0.i.i)
  %btp38 = getelementptr inbounds %struct.bpf_raw_tp_link, ptr %call7.i.i, i32 0, i32 1
  %28 = ptrtoint ptr %btp38 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %call29, ptr %btp38, align 8
  %call40 = call i32 @bpf_link_prime(ptr noundef nonnull %call7.i.i, ptr noundef nonnull %link_primer)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call40)
  %tobool41.not = icmp eq i32 %call40, 0
  br i1 %tobool41.not, label %if.end43, label %if.then42

if.then42:                                        ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #21
  call void @kfree(ptr noundef nonnull %call7.i.i) #19
  br label %out_put_btp

if.end43:                                         ; preds = %if.end36
  %29 = ptrtoint ptr %btp38 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %btp38, align 8
  %call45 = call i32 @bpf_probe_register(ptr noundef %30, ptr noundef %retval.0.i.i) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45)
  %tobool46.not = icmp eq i32 %call45, 0
  br i1 %tobool46.not, label %if.end48, label %if.then47

if.then47:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #21
  call void @bpf_link_cleanup(ptr noundef nonnull %link_primer)
  br label %out_put_btp

if.end48:                                         ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #21
  %call49 = call i32 @bpf_link_settle(ptr noundef nonnull %link_primer)
  br label %cleanup

out_put_btp:                                      ; preds = %if.then47, %if.then42, %if.end32.out_put_btp_crit_edge
  %err.0 = phi i32 [ %call40, %if.then42 ], [ %call45, %if.then47 ], [ -12, %if.end32.out_put_btp_crit_edge ]
  call void @bpf_put_raw_tracepoint(ptr noundef nonnull %call29) #19
  br label %out_put_prog

out_put_prog:                                     ; preds = %out_put_btp, %sw.epilog.out_put_prog_crit_edge, %sw.bb18.out_put_prog_crit_edge, %if.end13.out_put_prog_crit_edge, %sw.bb.out_put_prog_crit_edge, %if.end6.out_put_prog_crit_edge
  %err.1 = phi i32 [ %err.0, %out_put_btp ], [ %call14, %if.end13.out_put_prog_crit_edge ], [ -22, %sw.bb.out_put_prog_crit_edge ], [ -14, %sw.bb18.out_put_prog_crit_edge ], [ -22, %if.end6.out_put_prog_crit_edge ], [ -2, %sw.epilog.out_put_prog_crit_edge ]
  call void @bpf_prog_put(ptr noundef %retval.0.i.i)
  br label %cleanup

cleanup:                                          ; preds = %out_put_prog, %if.end48, %if.end13.cleanup_crit_edge, %if.then4, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %11, %if.then4 ], [ %err.1, %out_put_prog ], [ %call49, %if.end48 ], [ -22, %entry.cleanup_crit_edge ], [ %call14, %if.end13.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 128, ptr nonnull %buf) #19
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %link_primer) #19
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_btf_load(ptr noundef %attr, [2 x i32] %uattr.coerce) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %btf_log_level = getelementptr inbounds %struct.anon.13, ptr %attr, i32 0, i32 4
  %add.ptr = getelementptr i8, ptr %btf_log_level, i32 4
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 116) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end:                                           ; preds = %entry
  %call.i = tail call zeroext i1 @capable(i32 noundef 39) #19
  br i1 %call.i, label %if.end.if.end3_crit_edge, label %bpf_capable.exit

if.end.if.end3_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end3

bpf_capable.exit:                                 ; preds = %if.end
  %call1.i = tail call zeroext i1 @capable(i32 noundef 21) #19
  br i1 %call1.i, label %bpf_capable.exit.if.end3_crit_edge, label %bpf_capable.exit.return_crit_edge

bpf_capable.exit.return_crit_edge:                ; preds = %bpf_capable.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

bpf_capable.exit.if.end3_crit_edge:               ; preds = %bpf_capable.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end3

if.end3:                                          ; preds = %bpf_capable.exit.if.end3_crit_edge, %if.end.if.end3_crit_edge
  %call4 = tail call i32 @btf_new_fd(ptr noundef %attr, [2 x i32] %uattr.coerce) #19
  br label %return

return:                                           ; preds = %if.end3, %bpf_capable.exit.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end3 ], [ -22, %entry.return_crit_edge ], [ -1, %bpf_capable.exit.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_btf_get_fd_by_id(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %attr, i32 4
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 140) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end:                                           ; preds = %entry
  %call1 = tail call zeroext i1 @capable(i32 noundef 21) #19
  br i1 %call1, label %if.end3, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %0 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %attr, align 8
  %call4 = tail call i32 @btf_get_fd_by_id(i32 noundef %1) #19
  br label %return

return:                                           ; preds = %if.end3, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call4, %if.end3 ], [ -22, %entry.return_crit_edge ], [ -1, %if.end.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_task_fd_query(ptr noundef %attr, ptr noundef %uattr) unnamed_addr #0 align 64 {
entry:
  %probe_offset = alloca i64, align 8
  %probe_addr30 = alloca i64, align 8
  %prog_id = alloca i32, align 4
  %fd_type = alloca i32, align 4
  %buf = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %attr, align 8
  %fd2 = getelementptr inbounds %struct.anon.14, ptr %attr, i32 0, i32 1
  %2 = ptrtoint ptr %fd2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %fd2, align 4
  %add.ptr = getelementptr %struct.anon.14, ptr %attr, i32 1
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 96) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end, label %entry.cleanup43_crit_edge

entry.cleanup43_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup43

if.end:                                           ; preds = %entry
  %call3 = tail call zeroext i1 @capable(i32 noundef 21) #19
  br i1 %call3, label %if.end5, label %if.end.cleanup43_crit_edge

if.end.cleanup43_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup43

if.end5:                                          ; preds = %if.end
  %flags = getelementptr inbounds %struct.anon.14, ptr %attr, i32 0, i32 2
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %cmp6.not = icmp eq i32 %5, 0
  br i1 %cmp6.not, label %if.end8, label %if.end5.cleanup43_crit_edge

if.end5.cleanup43_crit_edge:                      ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup43

if.end8:                                          ; preds = %if.end5
  %call9 = tail call ptr @find_vpid(i32 noundef %1) #19
  %call10 = tail call ptr @get_pid_task(ptr noundef %call9, i32 noundef 0) #19
  %tobool.not = icmp eq ptr %call10, null
  br i1 %tobool.not, label %if.end8.cleanup43_crit_edge, label %if.end12

if.end8.cleanup43_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup43

if.end12:                                         ; preds = %if.end8
  %call13 = tail call ptr @fget_task(ptr noundef nonnull %call10, i32 noundef %3) #19
  %usage.i = getelementptr inbounds %struct.task_struct, ptr %call10, i32 0, i32 2
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage.i, i32 noundef 4) #19
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !301
  tail call void @llvm.prefetch.p0(ptr %usage.i, i32 1, i32 3, i32 1) #19
  %6 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage.i, ptr %usage.i, i32 1, ptr elementtype(i32) %usage.i) #19, !srcloc !302
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %6, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.end12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.put_task_struct.exit_crit_edge, label %if.then10.i.i.i.i, !prof !220

if.end5.i.i.i.i.put_task_struct.exit_crit_edge:   ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %put_task_struct.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @refcount_warn_saturate(ptr noundef %usage.i, i32 noundef 3) #19
  br label %put_task_struct.exit

if.then.i:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #19, !srcloc !303
  tail call void @__put_task_struct(ptr noundef nonnull %call10) #19
  br label %put_task_struct.exit

put_task_struct.exit:                             ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.put_task_struct.exit_crit_edge
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %put_task_struct.exit.cleanup43_crit_edge, label %if.end16

put_task_struct.exit.cleanup43_crit_edge:         ; preds = %put_task_struct.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup43

if.end16:                                         ; preds = %put_task_struct.exit
  %f_op = getelementptr inbounds %struct.file, ptr %call13, i32 0, i32 3
  %7 = ptrtoint ptr %f_op to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %f_op, align 4
  %cmp17 = icmp eq ptr %8, @bpf_link_fops
  br i1 %cmp17, label %if.then18, label %if.end26

if.then18:                                        ; preds = %if.end16
  %private_data = getelementptr inbounds %struct.file, ptr %call13, i32 0, i32 16
  %9 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %private_data, align 4
  %ops = getelementptr inbounds %struct.bpf_link, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ops, align 8
  %cmp19 = icmp eq ptr %12, @bpf_raw_tp_link_lops
  br i1 %cmp19, label %cleanup, label %if.then18.put_file_crit_edge

if.then18.put_file_crit_edge:                     ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #21
  br label %put_file

cleanup:                                          ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #21
  %btp22 = getelementptr inbounds %struct.bpf_raw_tp_link, ptr %10, i32 0, i32 1
  %13 = ptrtoint ptr %btp22 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %btp22, align 8
  %prog = getelementptr inbounds %struct.bpf_link, ptr %10, i32 0, i32 4
  %15 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prog, align 4
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %16, i32 0, i32 10
  %17 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %aux, align 4
  %id = getelementptr inbounds %struct.bpf_prog_aux, ptr %18, i32 0, i32 7
  %19 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %id, align 8
  %21 = ptrtoint ptr %14 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %14, align 32
  %23 = ptrtoint ptr %22 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %22, align 4
  %call24 = tail call fastcc i32 @bpf_task_fd_query_copy(ptr noundef %attr, ptr noundef %uattr, i32 noundef %20, i32 noundef 0, ptr noundef %24, i64 noundef 0, i64 noundef 0)
  br label %put_file

if.end26:                                         ; preds = %if.end16
  %call27 = tail call ptr @perf_get_event(ptr noundef nonnull %call13) #19
  %cmp.i = icmp ugt ptr %call27, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.end26.put_file_crit_edge, label %if.then29

if.end26.put_file_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #21
  br label %put_file

if.then29:                                        ; preds = %if.end26
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %probe_offset) #19
  %25 = ptrtoint ptr %probe_offset to i32
  call void @__asan_store8_noabort(i32 %25)
  store i64 -1, ptr %probe_offset, align 8, !annotation !244
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %probe_addr30) #19
  %26 = ptrtoint ptr %probe_addr30 to i32
  call void @__asan_store8_noabort(i32 %26)
  store i64 -1, ptr %probe_addr30, align 8, !annotation !244
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %prog_id) #19
  %27 = ptrtoint ptr %prog_id to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 -1, ptr %prog_id, align 4, !annotation !244
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %fd_type) #19
  %28 = ptrtoint ptr %fd_type to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 -1, ptr %fd_type, align 4, !annotation !244
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %buf) #19
  %29 = ptrtoint ptr %buf to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr inttoptr (i32 -1 to ptr), ptr %buf, align 4, !annotation !244
  %call31 = call i32 @bpf_get_perf_event_info(ptr noundef %call27, ptr noundef nonnull %prog_id, ptr noundef nonnull %fd_type, ptr noundef nonnull %buf, ptr noundef nonnull %probe_offset, ptr noundef nonnull %probe_addr30) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31)
  %tobool32.not = icmp eq i32 %call31, 0
  br i1 %tobool32.not, label %if.then33, label %if.then29.if.end35_crit_edge

if.then29.if.end35_crit_edge:                     ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end35

if.then33:                                        ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #21
  %30 = ptrtoint ptr %prog_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %prog_id, align 4
  %32 = ptrtoint ptr %fd_type to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %fd_type, align 4
  %34 = ptrtoint ptr %buf to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %buf, align 4
  %36 = ptrtoint ptr %probe_offset to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %probe_offset, align 8
  %38 = ptrtoint ptr %probe_addr30 to i32
  call void @__asan_load8_noabort(i32 %38)
  %39 = load i64, ptr %probe_addr30, align 8
  %call34 = call fastcc i32 @bpf_task_fd_query_copy(ptr noundef %attr, ptr noundef %uattr, i32 noundef %31, i32 noundef %33, ptr noundef %35, i64 noundef %37, i64 noundef %39)
  br label %if.end35

if.end35:                                         ; preds = %if.then33, %if.then29.if.end35_crit_edge
  %err.1 = phi i32 [ %call31, %if.then29.if.end35_crit_edge ], [ %call34, %if.then33 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %buf) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %fd_type) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %prog_id) #19
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %probe_addr30) #19
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %probe_offset) #19
  br label %put_file

put_file:                                         ; preds = %if.end35, %if.end26.put_file_crit_edge, %cleanup, %if.then18.put_file_crit_edge
  %err.2 = phi i32 [ %call24, %cleanup ], [ %err.1, %if.end35 ], [ -524, %if.end26.put_file_crit_edge ], [ -524, %if.then18.put_file_crit_edge ]
  call void @fput(ptr noundef nonnull %call13) #19
  br label %cleanup43

cleanup43:                                        ; preds = %put_file, %put_task_struct.exit.cleanup43_crit_edge, %if.end8.cleanup43_crit_edge, %if.end5.cleanup43_crit_edge, %if.end.cleanup43_crit_edge, %entry.cleanup43_crit_edge
  %retval.0 = phi i32 [ %err.2, %put_file ], [ -22, %entry.cleanup43_crit_edge ], [ -1, %if.end.cleanup43_crit_edge ], [ -22, %if.end5.cleanup43_crit_edge ], [ -2, %if.end8.cleanup43_crit_edge ], [ -9, %put_task_struct.exit.cleanup43_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @map_lookup_and_delete_elem(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %key = getelementptr inbounds %struct.anon.0, ptr %attr, i32 0, i32 1
  %0 = ptrtoint ptr %key to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %key, align 8
  %conv2 = trunc i64 %1 to i32
  %2 = inttoptr i32 %conv2 to ptr
  %3 = getelementptr inbounds %struct.anon.0, ptr %attr, i32 0, i32 2
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %3, align 8
  %conv9 = trunc i64 %5 to i32
  %6 = inttoptr i32 %conv9 to ptr
  %7 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %attr, align 8
  %flags = getelementptr inbounds %struct.anon.0, ptr %attr, i32 0, i32 3
  %add.ptr = getelementptr %struct.anon.0, ptr %attr, i32 1
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 112) #19
  %cmp11.not = icmp eq ptr %call, null
  br i1 %cmp11.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %flags, align 8
  %and = and i64 %10, -5
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %if.end15, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end15:                                         ; preds = %if.end
  %call.i167 = tail call i32 @__fdget(i32 noundef %8) #19, !noalias !304
  %and.i.i = and i32 %call.i167, -4
  %11 = inttoptr i32 %and.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i168 = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i168, label %if.end15.if.then19_crit_edge, label %if.end.i

if.end15.if.then19_crit_edge:                     ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then19

if.end.i:                                         ; preds = %if.end15
  %f_op.i = getelementptr inbounds %struct.file, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %f_op.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %f_op.i, align 4
  %cmp.not.i = icmp eq ptr %13, @bpf_map_fops
  br i1 %cmp.not.i, label %__bpf_map_get.exit, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  %and.i.i169 = and i32 %call.i167, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i169)
  %tobool.not.i.i = icmp eq i32 %and.i.i169, 0
  br i1 %tobool.not.i.i, label %if.then2.i.if.then19_crit_edge, label %if.then.i.i170

if.then2.i.if.then19_crit_edge:                   ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then19

if.then.i.i170:                                   ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @fput(ptr noundef nonnull %11) #19
  br label %if.then19

__bpf_map_get.exit:                               ; preds = %if.end.i
  %private_data.i = getelementptr inbounds %struct.file, ptr %11, i32 0, i32 16
  %14 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %private_data.i, align 4
  %cmp.i = icmp ugt ptr %15, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %__bpf_map_get.exit.if.then19_crit_edge, label %if.end21

__bpf_map_get.exit.if.then19_crit_edge:           ; preds = %__bpf_map_get.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then19

if.then19:                                        ; preds = %__bpf_map_get.exit.if.then19_crit_edge, %if.then.i.i170, %if.then2.i.if.then19_crit_edge, %if.end15.if.then19_crit_edge
  %retval.0.i196 = phi ptr [ %15, %__bpf_map_get.exit.if.then19_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then.i.i170 ], [ inttoptr (i32 -22 to ptr), %if.then2.i.if.then19_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.end15.if.then19_crit_edge ]
  %16 = ptrtoint ptr %retval.0.i196 to i32
  br label %cleanup

if.end21:                                         ; preds = %__bpf_map_get.exit
  %writecnt.i = getelementptr inbounds %struct.bpf_map, ptr %15, i32 0, i32 26
  %call.i.i.i171 = tail call zeroext i1 @__kasan_check_write(ptr noundef %writecnt.i, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %writecnt.i) #19
  %f_mode.i = getelementptr inbounds %struct.file, ptr %11, i32 0, i32 8
  %17 = ptrtoint ptr %f_mode.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %f_mode.i, align 8
  %frozen.i = getelementptr inbounds %struct.bpf_map, ptr %15, i32 0, i32 20
  %19 = ptrtoint ptr %frozen.i to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load volatile i8, ptr %frozen.i, align 1, !range !227
  %and23 = and i32 %18, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and23)
  %tobool24.not = icmp eq i32 %and23, 0
  br i1 %tobool24.not, label %if.end21.err_put_crit_edge, label %lor.lhs.false

if.end21.err_put_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #21
  br label %err_put

lor.lhs.false:                                    ; preds = %if.end21
  %21 = ptrtoint ptr %frozen.i to i32
  call void @__asan_load1_noabort(i32 %21)
  %22 = load volatile i8, ptr %frozen.i, align 1, !range !227
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %22)
  %tobool.not.i175 = icmp ne i8 %22, 0
  %.op = and i32 %18, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.op)
  %tobool27.not212 = icmp eq i32 %.op, 0
  %tobool27.not = select i1 %tobool.not.i175, i1 true, i1 %tobool27.not212
  br i1 %tobool27.not, label %lor.lhs.false.err_put_crit_edge, label %if.end29

lor.lhs.false.err_put_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %err_put

if.end29:                                         ; preds = %lor.lhs.false
  %23 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %23)
  %24 = load i64, ptr %flags, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %24)
  %tobool31.not = icmp eq i64 %24, 0
  br i1 %tobool31.not, label %if.end29.if.end46_crit_edge, label %land.lhs.true

if.end29.if.end46_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end46

land.lhs.true:                                    ; preds = %if.end29
  %map_type = getelementptr inbounds %struct.bpf_map, ptr %15, i32 0, i32 3
  %25 = ptrtoint ptr %map_type to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %map_type, align 4
  %27 = and i32 %26, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 22, i32 %27)
  %switch = icmp eq i32 %27, 22
  br i1 %switch, label %land.lhs.true.err_put_crit_edge, label %if.end39

land.lhs.true.err_put_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %err_put

if.end39:                                         ; preds = %land.lhs.true
  %and41 = and i64 %24, 4
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and41)
  %tobool42.not = icmp eq i64 %and41, 0
  br i1 %tobool42.not, label %if.end39.if.end46_crit_edge, label %land.lhs.true43

if.end39.if.end46_crit_edge:                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end46

land.lhs.true43:                                  ; preds = %if.end39
  %spin_lock_off.i = getelementptr inbounds %struct.bpf_map, ptr %15, i32 0, i32 9
  %28 = ptrtoint ptr %spin_lock_off.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %spin_lock_off.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %29)
  %cmp.i178 = icmp sgt i32 %29, -1
  br i1 %cmp.i178, label %land.lhs.true43.if.end46_crit_edge, label %land.lhs.true43.err_put_crit_edge

land.lhs.true43.err_put_crit_edge:                ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #21
  br label %err_put

land.lhs.true43.if.end46_crit_edge:               ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end46

if.end46:                                         ; preds = %land.lhs.true43.if.end46_crit_edge, %if.end39.if.end46_crit_edge, %if.end29.if.end46_crit_edge
  %key_size = getelementptr inbounds %struct.bpf_map, ptr %15, i32 0, i32 4
  %30 = ptrtoint ptr %key_size to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %key_size, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool.not.i179 = icmp eq i32 %31, 0
  br i1 %tobool.not.i179, label %if.end.i183, label %__bpf_copy_key.exit

if.end.i183:                                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv2)
  %tobool1.not.i = icmp eq i32 %conv2, 0
  br i1 %tobool1.not.i, label %if.end.i183.if.end52_crit_edge, label %if.end.i183.if.then50_crit_edge

if.end.i183.if.then50_crit_edge:                  ; preds = %if.end.i183
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then50

if.end.i183.if.end52_crit_edge:                   ; preds = %if.end.i183
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end52

__bpf_copy_key.exit:                              ; preds = %if.end46
  %call.i180 = tail call ptr @vmemdup_user(ptr noundef %2, i32 noundef %31) #19
  %cmp.i185 = icmp ugt ptr %call.i180, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i185, label %__bpf_copy_key.exit.if.then50_crit_edge, label %__bpf_copy_key.exit.if.end52_crit_edge

__bpf_copy_key.exit.if.end52_crit_edge:           ; preds = %__bpf_copy_key.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end52

__bpf_copy_key.exit.if.then50_crit_edge:          ; preds = %__bpf_copy_key.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then50

if.then50:                                        ; preds = %__bpf_copy_key.exit.if.then50_crit_edge, %if.end.i183.if.then50_crit_edge
  %retval.0.i184203 = phi ptr [ %call.i180, %__bpf_copy_key.exit.if.then50_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end.i183.if.then50_crit_edge ]
  %32 = ptrtoint ptr %retval.0.i184203 to i32
  br label %err_put

if.end52:                                         ; preds = %__bpf_copy_key.exit.if.end52_crit_edge, %if.end.i183.if.end52_crit_edge
  %retval.0.i184207 = phi ptr [ %call.i180, %__bpf_copy_key.exit.if.end52_crit_edge ], [ null, %if.end.i183.if.end52_crit_edge ]
  %call53 = tail call fastcc i32 @bpf_map_value_size(ptr noundef %15)
  %call.i186 = tail call noalias ptr @kvmalloc_node(i32 noundef %call53, i32 noundef 1060032, i32 noundef -1) #22
  %tobool55.not = icmp eq ptr %call.i186, null
  br i1 %tobool55.not, label %if.end52.free_key_crit_edge, label %if.end57

if.end52.free_key_crit_edge:                      ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_key

if.end57:                                         ; preds = %if.end52
  %map_type58 = getelementptr inbounds %struct.bpf_map, ptr %15, i32 0, i32 3
  %33 = ptrtoint ptr %map_type58 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %map_type58, align 4
  %35 = zext i32 %34 to i64
  call void @__sanitizer_cov_trace_switch(i64 %35, ptr @__sancov_gen_cov_switch_values.85)
  switch i32 %34, label %if.end57.free_value_crit_edge [
    i32 22, label %if.end57.if.then65_crit_edge
    i32 23, label %if.end57.if.then65_crit_edge215
    i32 1, label %if.end57.if.then82_crit_edge
    i32 5, label %if.end57.if.then82_crit_edge216
    i32 9, label %if.end57.if.then82_crit_edge217
    i32 10, label %if.end57.if.then82_crit_edge218
  ]

if.end57.if.then82_crit_edge218:                  ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then82

if.end57.if.then82_crit_edge217:                  ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then82

if.end57.if.then82_crit_edge216:                  ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then82

if.end57.if.then82_crit_edge:                     ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then82

if.end57.if.then65_crit_edge215:                  ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then65

if.end57.if.then65_crit_edge:                     ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then65

if.end57.free_value_crit_edge:                    ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_value

if.then65:                                        ; preds = %if.end57.if.then65_crit_edge, %if.end57.if.then65_crit_edge215
  %36 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %15, align 128
  %map_pop_elem = getelementptr inbounds %struct.bpf_map_ops, ptr %37, i32 0, i32 16
  %38 = ptrtoint ptr %map_pop_elem to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %map_pop_elem, align 4
  %call66 = tail call i32 %39(ptr noundef %15, ptr noundef nonnull %call.i186) #19
  br label %if.end90

if.then82:                                        ; preds = %if.end57.if.then82_crit_edge, %if.end57.if.then82_crit_edge216, %if.end57.if.then82_crit_edge217, %if.end57.if.then82_crit_edge218
  %40 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %15, align 128
  %cmp.i187 = icmp eq ptr %41, @bpf_map_offload_ops
  br i1 %cmp.i187, label %if.then82.free_value_crit_edge, label %if.then84

if.then82.free_value_crit_edge:                   ; preds = %if.then82
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_value

if.then84:                                        ; preds = %if.then82
  tail call fastcc void @bpf_disable_instrumentation()
  %42 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i.i = and i32 %42, -16384
  %43 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %43, i32 0, i32 1
  %44 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %45, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !238
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #19
  %call.i = tail call zeroext i1 @rcu_is_watching() #19
  br i1 %call.i, label %if.then84.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.then84.rcu_read_lock.exit_crit_edge:           ; preds = %if.then84
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.then84
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.20, i32 noundef 696, ptr noundef nonnull @.str.21) #19
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.then84.rcu_read_lock.exit_crit_edge
  %46 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %15, align 128
  %map_lookup_and_delete_elem = getelementptr inbounds %struct.bpf_map_ops, ptr %47, i32 0, i32 8
  %48 = ptrtoint ptr %map_lookup_and_delete_elem to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %map_lookup_and_delete_elem, align 4
  %50 = ptrtoint ptr %flags to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %flags, align 8
  %call87 = tail call i32 %49(ptr noundef %15, ptr noundef %retval.0.i184207, ptr noundef nonnull %call.i186, i64 noundef %51) #19
  tail call fastcc void @rcu_read_unlock()
  tail call fastcc void @bpf_enable_instrumentation()
  br label %if.end90

if.end90:                                         ; preds = %rcu_read_lock.exit, %if.then65
  %err.0 = phi i32 [ %call66, %if.then65 ], [ %call87, %rcu_read_lock.exit ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %err.0)
  %tobool91.not = icmp eq i32 %err.0, 0
  br i1 %tobool91.not, label %if.end8.i.i, label %if.end90.free_value_crit_edge

if.end90.free_value_crit_edge:                    ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_value

if.end8.i.i:                                      ; preds = %if.end90
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call53)
  %cmp9.i.i = icmp slt i32 %call53, 0
  br i1 %cmp9.i.i, label %land.rhs16.i.i, label %if.then.i.i.i

land.rhs16.i.i:                                   ; preds = %if.end8.i.i
  %.b71.i.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i, label %land.rhs16.i.i.free_value_crit_edge, label %if.then27.i.i, !prof !220

land.rhs16.i.i.free_value_crit_edge:              ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %free_value

if.then27.i.i:                                    ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %free_value

if.then.i.i.i:                                    ; preds = %if.end8.i.i
  tail call void @__check_object_size(ptr noundef nonnull %call.i186, i32 noundef %call53, i1 noundef zeroext true) #19
  tail call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i, label %if.then.i.i.i.copy_to_user.exit_crit_edge, label %if.end.i.i

if.then.i.i.i.copy_to_user.exit_crit_edge:        ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit

if.end.i.i:                                       ; preds = %if.then.i.i.i
  %52 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %6, i32 %call53, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i = extractvalue { i32, i32 } %52, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.then2.i.i, label %if.end.i.i.copy_to_user.exit_crit_edge

if.end.i.i.copy_to_user.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit

if.then2.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef nonnull %call.i186, i32 noundef %call53) #19
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %6, ptr noundef nonnull %call.i186, i32 noundef %call53) #19
  br label %copy_to_user.exit

copy_to_user.exit:                                ; preds = %if.then2.i.i, %if.end.i.i.copy_to_user.exit_crit_edge, %if.then.i.i.i.copy_to_user.exit_crit_edge
  %n.addr.0.i = phi i32 [ %call53, %if.then.i.i.i.copy_to_user.exit_crit_edge ], [ %call.i12.i.i, %if.then2.i.i ], [ %call53, %if.end.i.i.copy_to_user.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i)
  %cmp95.not = icmp eq i32 %n.addr.0.i, 0
  %spec.select = select i1 %cmp95.not, i32 0, i32 -14
  br label %free_value

free_value:                                       ; preds = %copy_to_user.exit, %if.then27.i.i, %land.rhs16.i.i.free_value_crit_edge, %if.end90.free_value_crit_edge, %if.then82.free_value_crit_edge, %if.end57.free_value_crit_edge
  %err.1 = phi i32 [ %err.0, %if.end90.free_value_crit_edge ], [ -524, %if.then82.free_value_crit_edge ], [ -524, %if.end57.free_value_crit_edge ], [ -14, %if.then27.i.i ], [ -14, %land.rhs16.i.i.free_value_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  tail call void @kvfree(ptr noundef nonnull %call.i186) #19
  br label %free_key

free_key:                                         ; preds = %free_value, %if.end52.free_key_crit_edge
  %err.2 = phi i32 [ %err.1, %free_value ], [ -12, %if.end52.free_key_crit_edge ]
  tail call void @kvfree(ptr noundef %retval.0.i184207) #19
  br label %err_put

err_put:                                          ; preds = %free_key, %if.then50, %land.lhs.true43.err_put_crit_edge, %land.lhs.true.err_put_crit_edge, %lor.lhs.false.err_put_crit_edge, %if.end21.err_put_crit_edge
  %err.3 = phi i32 [ %32, %if.then50 ], [ %err.2, %free_key ], [ -1, %lor.lhs.false.err_put_crit_edge ], [ -1, %if.end21.err_put_crit_edge ], [ -22, %land.lhs.true.err_put_crit_edge ], [ -22, %land.lhs.true43.err_put_crit_edge ]
  %call.i.i.i189 = tail call zeroext i1 @__kasan_check_write(ptr noundef %writecnt.i, i32 noundef 8) #19
  tail call void @generic_atomic64_sub(i64 noundef 1, ptr noundef %writecnt.i) #19
  %and.i190 = and i32 %call.i167, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i190)
  %tobool.not.i191 = icmp eq i32 %and.i190, 0
  br i1 %tobool.not.i191, label %err_put.cleanup_crit_edge, label %if.then.i192

err_put.cleanup_crit_edge:                        ; preds = %err_put
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then.i192:                                     ; preds = %err_put
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @fput(ptr noundef nonnull %11) #19
  br label %cleanup

cleanup:                                          ; preds = %if.then.i192, %err_put.cleanup_crit_edge, %if.then19, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %16, %if.then19 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ %err.3, %err_put.cleanup_crit_edge ], [ %err.3, %if.then.i192 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_map_do_batch(ptr noundef %attr, ptr noundef %uattr, i32 noundef %cmd) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %cmd)
  %cmp2.not = icmp eq i32 %cmd, 24
  %add.ptr = getelementptr %struct.anon.2, ptr %attr, i32 1
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 88) #19
  %cmp4.not = icmp eq ptr %call, null
  br i1 %cmp4.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %map_fd = getelementptr inbounds %struct.anon.2, ptr %attr, i32 0, i32 5
  %0 = ptrtoint ptr %map_fd to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %map_fd, align 4
  %call.i = tail call i32 @__fdget(i32 noundef %1) #19, !noalias !307
  %and.i.i = and i32 %call.i, -4
  %2 = inttoptr i32 %and.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i, label %if.end.if.then7_crit_edge, label %if.end.i

if.end.if.then7_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then7

if.end.i:                                         ; preds = %if.end
  %f_op.i = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %f_op.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %f_op.i, align 4
  %cmp.not.i = icmp eq ptr %4, @bpf_map_fops
  br i1 %cmp.not.i, label %__bpf_map_get.exit, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  %and.i.i135 = and i32 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i135)
  %tobool.not.i.i = icmp eq i32 %and.i.i135, 0
  br i1 %tobool.not.i.i, label %if.then2.i.if.then7_crit_edge, label %if.then.i.i

if.then2.i.if.then7_crit_edge:                    ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then7

if.then.i.i:                                      ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @fput(ptr noundef nonnull %2) #19
  br label %if.then7

__bpf_map_get.exit:                               ; preds = %if.end.i
  %private_data.i = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 16
  %5 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %private_data.i, align 4
  %cmp.i = icmp ugt ptr %6, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %__bpf_map_get.exit.if.then7_crit_edge, label %if.end9

__bpf_map_get.exit.if.then7_crit_edge:            ; preds = %__bpf_map_get.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then7

if.then7:                                         ; preds = %__bpf_map_get.exit.if.then7_crit_edge, %if.then.i.i, %if.then2.i.if.then7_crit_edge, %if.end.if.then7_crit_edge
  %retval.0.i149 = phi ptr [ %6, %__bpf_map_get.exit.if.then7_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then.i.i ], [ inttoptr (i32 -22 to ptr), %if.then2.i.if.then7_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.end.if.then7_crit_edge ]
  %7 = ptrtoint ptr %retval.0.i149 to i32
  br label %cleanup

if.end9:                                          ; preds = %__bpf_map_get.exit
  br i1 %cmp2.not, label %land.lhs.true, label %if.end11

if.end11:                                         ; preds = %if.end9
  %writecnt.i = getelementptr inbounds %struct.bpf_map, ptr %6, i32 0, i32 26
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %writecnt.i, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %writecnt.i) #19
  %8 = and i32 %cmd, -2
  call void @__sanitizer_cov_trace_const_cmp4(i32 24, i32 %8)
  %switch = icmp eq i32 %8, 24
  br i1 %switch, label %land.lhs.true.thread, label %if.end11.land.lhs.true18_crit_edge

if.end11.land.lhs.true18_crit_edge:               ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true18

land.lhs.true:                                    ; preds = %if.end9
  %f_mode.i = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 8
  %9 = ptrtoint ptr %f_mode.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %f_mode.i, align 8
  %frozen.i = getelementptr inbounds %struct.bpf_map, ptr %6, i32 0, i32 20
  %11 = ptrtoint ptr %frozen.i to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load volatile i8, ptr %frozen.i, align 1, !range !227
  %and = and i32 %10, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool14.not = icmp eq i32 %and, 0
  br i1 %tobool14.not, label %land.lhs.true.err_put_crit_edge, label %do.body

land.lhs.true.err_put_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #21
  br label %err_put

land.lhs.true.thread:                             ; preds = %if.end11
  %f_mode.i159 = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 8
  %13 = ptrtoint ptr %f_mode.i159 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %f_mode.i159, align 8
  %frozen.i160 = getelementptr inbounds %struct.bpf_map, ptr %6, i32 0, i32 20
  %15 = ptrtoint ptr %frozen.i160 to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load volatile i8, ptr %frozen.i160, align 1, !range !227
  %and161 = and i32 %14, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and161)
  %tobool14.not162 = icmp eq i32 %and161, 0
  br i1 %tobool14.not162, label %land.lhs.true.thread.if.then72_crit_edge, label %land.lhs.true.thread.land.lhs.true18_crit_edge

land.lhs.true.thread.land.lhs.true18_crit_edge:   ; preds = %land.lhs.true.thread
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true18

land.lhs.true.thread.if.then72_crit_edge:         ; preds = %land.lhs.true.thread
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then72

land.lhs.true18:                                  ; preds = %land.lhs.true.thread.land.lhs.true18_crit_edge, %if.end11.land.lhs.true18_crit_edge
  %f_mode.i137 = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 8
  %17 = ptrtoint ptr %f_mode.i137 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %f_mode.i137, align 8
  %frozen.i138 = getelementptr inbounds %struct.bpf_map, ptr %6, i32 0, i32 20
  %19 = ptrtoint ptr %frozen.i138 to i32
  call void @__asan_load1_noabort(i32 %19)
  %20 = load volatile i8, ptr %frozen.i138, align 1, !range !227
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %20)
  %tobool.not.i139 = icmp ne i8 %20, 0
  %.op = and i32 %18, 262144
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.op)
  %tobool21.not158 = icmp eq i32 %.op, 0
  %tobool21.not = select i1 %tobool.not.i139, i1 true, i1 %tobool21.not158
  br i1 %tobool21.not, label %land.lhs.true18.if.then72_crit_edge, label %if.end23

land.lhs.true18.if.then72_crit_edge:              ; preds = %land.lhs.true18
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then72

if.end23:                                         ; preds = %land.lhs.true18
  %21 = zext i32 %cmd to i64
  call void @__sanitizer_cov_trace_switch(i64 %21, ptr @__sancov_gen_cov_switch_values.86)
  switch i32 %cmd, label %do.body58 [
    i32 26, label %do.body47
    i32 25, label %do.body34
  ]

do.body:                                          ; preds = %land.lhs.true
  %22 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %6, align 128
  %map_lookup_batch = getelementptr inbounds %struct.bpf_map_ops, ptr %23, i32 0, i32 7
  %24 = ptrtoint ptr %map_lookup_batch to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %map_lookup_batch, align 4
  %tobool26.not = icmp eq ptr %25, null
  br i1 %tobool26.not, label %do.body.err_put_crit_edge, label %if.end28

do.body.err_put_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #21
  br label %err_put

if.end28:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #21
  %call31 = tail call i32 %25(ptr noundef %6, ptr noundef %attr, ptr noundef %uattr) #19
  br label %err_put

do.body34:                                        ; preds = %if.end23
  %26 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %6, align 128
  %map_lookup_and_delete_batch = getelementptr inbounds %struct.bpf_map_ops, ptr %27, i32 0, i32 9
  %28 = ptrtoint ptr %map_lookup_and_delete_batch to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %map_lookup_and_delete_batch, align 4
  %tobool36.not = icmp eq ptr %29, null
  br i1 %tobool36.not, label %do.body34.if.then72_crit_edge, label %do.body34.if.then72.sink.split_crit_edge

do.body34.if.then72.sink.split_crit_edge:         ; preds = %do.body34
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then72.sink.split

do.body34.if.then72_crit_edge:                    ; preds = %do.body34
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then72

do.body47:                                        ; preds = %if.end23
  %30 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %6, align 128
  %map_update_batch = getelementptr inbounds %struct.bpf_map_ops, ptr %31, i32 0, i32 10
  %32 = ptrtoint ptr %map_update_batch to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %map_update_batch, align 4
  %tobool49.not = icmp eq ptr %33, null
  br i1 %tobool49.not, label %do.body47.if.then72_crit_edge, label %do.body47.if.then72.sink.split_crit_edge

do.body47.if.then72.sink.split_crit_edge:         ; preds = %do.body47
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then72.sink.split

do.body47.if.then72_crit_edge:                    ; preds = %do.body47
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then72

do.body58:                                        ; preds = %if.end23
  %34 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %6, align 128
  %map_delete_batch = getelementptr inbounds %struct.bpf_map_ops, ptr %35, i32 0, i32 11
  %36 = ptrtoint ptr %map_delete_batch to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %map_delete_batch, align 4
  %tobool60.not = icmp eq ptr %37, null
  br i1 %tobool60.not, label %do.body58.if.then72_crit_edge, label %do.body58.if.then72.sink.split_crit_edge

do.body58.if.then72.sink.split_crit_edge:         ; preds = %do.body58
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then72.sink.split

do.body58.if.then72_crit_edge:                    ; preds = %do.body58
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then72

err_put:                                          ; preds = %if.end28, %do.body.err_put_crit_edge, %land.lhs.true.err_put_crit_edge
  %err.0 = phi i32 [ %call31, %if.end28 ], [ -1, %land.lhs.true.err_put_crit_edge ], [ -524, %do.body.err_put_crit_edge ]
  br i1 %cmp2.not, label %err_put.if.end73_crit_edge, label %err_put.if.then72_crit_edge

err_put.if.then72_crit_edge:                      ; preds = %err_put
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then72

err_put.if.end73_crit_edge:                       ; preds = %err_put
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end73

if.then72.sink.split:                             ; preds = %do.body58.if.then72.sink.split_crit_edge, %do.body47.if.then72.sink.split_crit_edge, %do.body34.if.then72.sink.split_crit_edge
  %.sink = phi ptr [ %29, %do.body34.if.then72.sink.split_crit_edge ], [ %33, %do.body47.if.then72.sink.split_crit_edge ], [ %37, %do.body58.if.then72.sink.split_crit_edge ]
  %call41 = tail call i32 %.sink(ptr noundef %6, ptr noundef %attr, ptr noundef %uattr) #19
  br label %if.then72

if.then72:                                        ; preds = %if.then72.sink.split, %err_put.if.then72_crit_edge, %do.body58.if.then72_crit_edge, %do.body47.if.then72_crit_edge, %do.body34.if.then72_crit_edge, %land.lhs.true18.if.then72_crit_edge, %land.lhs.true.thread.if.then72_crit_edge
  %err.0156 = phi i32 [ %err.0, %err_put.if.then72_crit_edge ], [ -524, %do.body58.if.then72_crit_edge ], [ -524, %do.body47.if.then72_crit_edge ], [ -524, %do.body34.if.then72_crit_edge ], [ -1, %land.lhs.true18.if.then72_crit_edge ], [ -1, %land.lhs.true.thread.if.then72_crit_edge ], [ %call41, %if.then72.sink.split ]
  %writecnt.i142 = getelementptr inbounds %struct.bpf_map, ptr %6, i32 0, i32 26
  %call.i.i.i143 = tail call zeroext i1 @__kasan_check_write(ptr noundef %writecnt.i142, i32 noundef 8) #19
  tail call void @generic_atomic64_sub(i64 noundef 1, ptr noundef %writecnt.i142) #19
  br label %if.end73

if.end73:                                         ; preds = %if.then72, %err_put.if.end73_crit_edge
  %err.0157 = phi i32 [ %err.0156, %if.then72 ], [ %err.0, %err_put.if.end73_crit_edge ]
  %and.i144 = and i32 %call.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i144)
  %tobool.not.i145 = icmp eq i32 %and.i144, 0
  br i1 %tobool.not.i145, label %if.end73.cleanup_crit_edge, label %if.then.i

if.end73.cleanup_crit_edge:                       ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then.i:                                        ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @fput(ptr noundef nonnull %2) #19
  br label %cleanup

cleanup:                                          ; preds = %if.then.i, %if.end73.cleanup_crit_edge, %if.then7, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %7, %if.then7 ], [ -22, %entry.cleanup_crit_edge ], [ %err.0157, %if.end73.cleanup_crit_edge ], [ %err.0157, %if.then.i ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @link_create(ptr noundef %attr, [2 x i32] %uattr.coerce) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %iter_info_len = getelementptr inbounds %struct.anon.15, ptr %attr, i32 0, i32 4, i32 0, i32 1
  %add.ptr = getelementptr i8, ptr %iter_info_len, i32 4
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 116) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %attr, align 8
  %call.i.i.i = tail call i32 @__fdget(i32 noundef %1) #19, !noalias !310
  %and.i.i.i.i = and i32 %call.i.i.i, -4
  %2 = inttoptr i32 %and.i.i.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end.if.then3_crit_edge, label %if.end.i.i.i

if.end.if.then3_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then3

if.end.i.i.i:                                     ; preds = %if.end
  %f_op.i.i.i = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %f_op.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %f_op.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %4, @bpf_prog_fops
  br i1 %cmp.not.i.i.i, label %____bpf_prog_get.exit.i.i, label %if.then2.i.i.i

if.then2.i.i.i:                                   ; preds = %if.end.i.i.i
  %and.i.i17.i.i = and i32 %call.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i17.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i17.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.then2.i.i.i.if.then3_crit_edge, label %if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge

if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge:  ; preds = %if.then2.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i.i

if.then2.i.i.i.if.then3_crit_edge:                ; preds = %if.then2.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then3

____bpf_prog_get.exit.i.i:                        ; preds = %if.end.i.i.i
  %private_data.i.i.i = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 16
  %5 = ptrtoint ptr %private_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %private_data.i.i.i, align 4
  %cmp.i.i.i = icmp ugt ptr %6, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge, label %if.end.i.i

____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge: ; preds = %____bpf_prog_get.exit.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get.exit

if.end.i.i:                                       ; preds = %____bpf_prog_get.exit.i.i
  %aux.i22.i.i = getelementptr inbounds %struct.bpf_prog, ptr %6, i32 0, i32 10
  %7 = ptrtoint ptr %aux.i22.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %aux.i22.i.i, align 4
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %8, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %8) #19
  %and.i.i.i = and i32 %call.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i23.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i23.i.i, label %if.end.i.i.bpf_prog_get.exit_crit_edge, label %if.end.i.i.cleanup.sink.split.i.i_crit_edge

if.end.i.i.cleanup.sink.split.i.i_crit_edge:      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i.i

if.end.i.i.bpf_prog_get.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get.exit

cleanup.sink.split.i.i:                           ; preds = %if.end.i.i.cleanup.sink.split.i.i_crit_edge, %if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge
  %retval.0.ph.i.i = phi ptr [ inttoptr (i32 -22 to ptr), %if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge ], [ %6, %if.end.i.i.cleanup.sink.split.i.i_crit_edge ]
  tail call void @fput(ptr noundef nonnull %2) #19
  br label %bpf_prog_get.exit

bpf_prog_get.exit:                                ; preds = %cleanup.sink.split.i.i, %if.end.i.i.bpf_prog_get.exit_crit_edge, %____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge
  %retval.0.i.i = phi ptr [ %6, %____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge ], [ %6, %if.end.i.i.bpf_prog_get.exit_crit_edge ], [ %retval.0.ph.i.i, %cleanup.sink.split.i.i ]
  %cmp.i = icmp ugt ptr %retval.0.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %bpf_prog_get.exit.if.then3_crit_edge, label %if.end5

bpf_prog_get.exit.if.then3_crit_edge:             ; preds = %bpf_prog_get.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then3

if.then3:                                         ; preds = %bpf_prog_get.exit.if.then3_crit_edge, %if.then2.i.i.i.if.then3_crit_edge, %if.end.if.then3_crit_edge
  %retval.0.i.i77 = phi ptr [ %retval.0.i.i, %bpf_prog_get.exit.if.then3_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.end.if.then3_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then2.i.i.i.if.then3_crit_edge ]
  %9 = ptrtoint ptr %retval.0.i.i77 to i32
  br label %cleanup

if.end5:                                          ; preds = %bpf_prog_get.exit
  %attach_type = getelementptr inbounds %struct.anon.15, ptr %attr, i32 0, i32 2
  %10 = ptrtoint ptr %attach_type to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %attach_type, align 8
  %type.i = getelementptr inbounds %struct.bpf_prog, ptr %retval.0.i.i, i32 0, i32 2
  %12 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %type.i, align 4
  %14 = zext i32 %13 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.87)
  switch i32 %13, label %if.end5.if.end8_crit_edge [
    i32 9, label %if.end5.return.sink.split.i_crit_edge
    i32 18, label %if.end5.return.sink.split.i_crit_edge85
    i32 25, label %if.end5.return.sink.split.i_crit_edge86
    i32 30, label %if.end5.return.sink.split.i_crit_edge87
    i32 8, label %sw.bb1.i
  ]

if.end5.return.sink.split.i_crit_edge87:          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %return.sink.split.i

if.end5.return.sink.split.i_crit_edge86:          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %return.sink.split.i

if.end5.return.sink.split.i_crit_edge85:          ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %return.sink.split.i

if.end5.return.sink.split.i_crit_edge:            ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %return.sink.split.i

if.end5.if.end8_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end8

sw.bb1.i:                                         ; preds = %if.end5
  %call.i = tail call zeroext i1 @capable(i32 noundef 12) #19
  br i1 %call.i, label %if.end.i, label %sw.bb1.i.if.then36_crit_edge

sw.bb1.i.if.then36_crit_edge:                     ; preds = %sw.bb1.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then36

if.end.i:                                         ; preds = %sw.bb1.i
  %enforce_expected_attach_type.i = getelementptr inbounds %struct.bpf_prog, ptr %retval.0.i.i, i32 0, i32 1
  %15 = ptrtoint ptr %enforce_expected_attach_type.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %bf.load.i = load i16, ptr %enforce_expected_attach_type.i, align 2
  %16 = and i16 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %16)
  %tobool.not.i = icmp eq i16 %16, 0
  br i1 %tobool.not.i, label %if.end.i.if.end8thread-pre-split_crit_edge, label %if.end.i.return.sink.split.i_crit_edge

if.end.i.return.sink.split.i_crit_edge:           ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %return.sink.split.i

if.end.i.if.end8thread-pre-split_crit_edge:       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end8thread-pre-split

return.sink.split.i:                              ; preds = %if.end.i.return.sink.split.i_crit_edge, %if.end5.return.sink.split.i_crit_edge, %if.end5.return.sink.split.i_crit_edge85, %if.end5.return.sink.split.i_crit_edge86, %if.end5.return.sink.split.i_crit_edge87
  %expected_attach_type2.i = getelementptr inbounds %struct.bpf_prog, ptr %retval.0.i.i, i32 0, i32 3
  %17 = ptrtoint ptr %expected_attach_type2.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %expected_attach_type2.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %18, i32 %11)
  %cmp3.not.i = icmp eq i32 %18, %11
  br i1 %cmp3.not.i, label %return.sink.split.i.if.end8thread-pre-split_crit_edge, label %return.sink.split.i.if.then36_crit_edge

return.sink.split.i.if.then36_crit_edge:          ; preds = %return.sink.split.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then36

return.sink.split.i.if.end8thread-pre-split_crit_edge: ; preds = %return.sink.split.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end8thread-pre-split

if.end8thread-pre-split:                          ; preds = %return.sink.split.i.if.end8thread-pre-split_crit_edge, %if.end.i.if.end8thread-pre-split_crit_edge
  %19 = ptrtoint ptr %type.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %.pr = load i32, ptr %type.i, align 4
  br label %if.end8

if.end8:                                          ; preds = %if.end8thread-pre-split, %if.end5.if.end8_crit_edge
  %20 = phi i32 [ %.pr, %if.end8thread-pre-split ], [ %13, %if.end5.if.end8_crit_edge ]
  %21 = zext i32 %20 to i64
  call void @__sanitizer_cov_trace_switch(i64 %21, ptr @__sancov_gen_cov_switch_values.88)
  switch i32 %20, label %sw.default [
    i32 28, label %sw.bb
    i32 7, label %if.end8.sw.bb10_crit_edge
    i32 2, label %if.end8.sw.bb10_crit_edge88
    i32 5, label %if.end8.sw.bb10_crit_edge89
  ]

if.end8.sw.bb10_crit_edge89:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb10

if.end8.sw.bb10_crit_edge88:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb10

if.end8.sw.bb10_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb10

sw.bb:                                            ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #21
  %call9 = tail call fastcc i32 @tracing_bpf_link_attach(ptr noundef %attr, [2 x i32] %uattr.coerce, ptr noundef %retval.0.i.i)
  br label %out

sw.bb10:                                          ; preds = %if.end8.sw.bb10_crit_edge, %if.end8.sw.bb10_crit_edge88, %if.end8.sw.bb10_crit_edge89
  %22 = ptrtoint ptr %attach_type to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %attach_type, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 41, i32 %23)
  %cmp12.not = icmp eq i32 %23, 41
  br i1 %cmp12.not, label %sw.bb10.sw.epilog_crit_edge, label %sw.bb10.if.then36_crit_edge

sw.bb10.if.then36_crit_edge:                      ; preds = %sw.bb10
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then36

sw.bb10.sw.epilog_crit_edge:                      ; preds = %sw.bb10
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.epilog

sw.default:                                       ; preds = %if.end8
  %24 = ptrtoint ptr %attach_type to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %attach_type, align 8
  %call17 = tail call fastcc i32 @attach_type_to_prog_type(i32 noundef %25)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17)
  %cmp18 = icmp ne i32 %call17, 0
  call void @__sanitizer_cov_trace_cmp4(i32 %call17, i32 %20)
  %cmp20.not = icmp eq i32 %call17, %20
  %or.cond = select i1 %cmp18, i1 %cmp20.not, i1 false
  br i1 %or.cond, label %sw.default.sw.epilog_crit_edge, label %sw.default.if.then36_crit_edge

sw.default.if.then36_crit_edge:                   ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then36

sw.default.sw.epilog_crit_edge:                   ; preds = %sw.default
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default.sw.epilog_crit_edge, %sw.bb10.sw.epilog_crit_edge
  %26 = zext i32 %20 to i64
  call void @__sanitizer_cov_trace_switch(i64 %26, ptr @__sancov_gen_cov_switch_values.89)
  switch i32 %20, label %sw.epilog.if.then36_crit_edge [
    i32 8, label %sw.epilog.sw.bb23_crit_edge
    i32 9, label %sw.epilog.sw.bb23_crit_edge90
    i32 18, label %sw.epilog.sw.bb23_crit_edge91
    i32 13, label %sw.epilog.sw.bb23_crit_edge92
    i32 15, label %sw.epilog.sw.bb23_crit_edge93
    i32 23, label %sw.epilog.sw.bb23_crit_edge94
    i32 25, label %sw.epilog.sw.bb23_crit_edge95
    i32 26, label %sw.bb25
    i32 22, label %sw.epilog.sw.bb27_crit_edge
    i32 30, label %sw.epilog.sw.bb27_crit_edge96
    i32 6, label %sw.bb29
    i32 7, label %sw.epilog.sw.bb31_crit_edge
    i32 5, label %sw.epilog.sw.bb31_crit_edge97
    i32 2, label %sw.epilog.sw.bb31_crit_edge98
  ]

sw.epilog.sw.bb31_crit_edge98:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb31

sw.epilog.sw.bb31_crit_edge97:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb31

sw.epilog.sw.bb31_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb31

sw.epilog.sw.bb27_crit_edge96:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb27

sw.epilog.sw.bb27_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb27

sw.epilog.sw.bb23_crit_edge95:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb23

sw.epilog.sw.bb23_crit_edge94:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb23

sw.epilog.sw.bb23_crit_edge93:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb23

sw.epilog.sw.bb23_crit_edge92:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb23

sw.epilog.sw.bb23_crit_edge91:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb23

sw.epilog.sw.bb23_crit_edge90:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb23

sw.epilog.sw.bb23_crit_edge:                      ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb23

sw.epilog.if.then36_crit_edge:                    ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then36

sw.bb23:                                          ; preds = %sw.epilog.sw.bb23_crit_edge, %sw.epilog.sw.bb23_crit_edge90, %sw.epilog.sw.bb23_crit_edge91, %sw.epilog.sw.bb23_crit_edge92, %sw.epilog.sw.bb23_crit_edge93, %sw.epilog.sw.bb23_crit_edge94, %sw.epilog.sw.bb23_crit_edge95
  %call24 = tail call i32 @cgroup_bpf_link_attach(ptr noundef %attr, ptr noundef %retval.0.i.i) #19
  br label %out

sw.bb25:                                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  %call26 = tail call fastcc i32 @tracing_bpf_link_attach(ptr noundef %attr, [2 x i32] %uattr.coerce, ptr noundef %retval.0.i.i)
  br label %out

sw.bb27:                                          ; preds = %sw.epilog.sw.bb27_crit_edge, %sw.epilog.sw.bb27_crit_edge96
  %call28 = tail call i32 @netns_bpf_link_create(ptr noundef %attr, ptr noundef %retval.0.i.i) #19
  br label %out

sw.bb29:                                          ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  %call30 = tail call i32 @bpf_xdp_link_attach(ptr noundef %attr, ptr noundef %retval.0.i.i) #19
  br label %out

sw.bb31:                                          ; preds = %sw.epilog.sw.bb31_crit_edge, %sw.epilog.sw.bb31_crit_edge97, %sw.epilog.sw.bb31_crit_edge98
  %call32 = tail call fastcc i32 @bpf_perf_link_attach(ptr noundef %attr, ptr noundef %retval.0.i.i)
  br label %out

out:                                              ; preds = %sw.bb31, %sw.bb29, %sw.bb27, %sw.bb25, %sw.bb23, %sw.bb
  %ret.0 = phi i32 [ %call32, %sw.bb31 ], [ %call30, %sw.bb29 ], [ %call28, %sw.bb27 ], [ %call26, %sw.bb25 ], [ %call24, %sw.bb23 ], [ %call9, %sw.bb ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %cmp35 = icmp slt i32 %ret.0, 0
  br i1 %cmp35, label %out.if.then36_crit_edge, label %out.cleanup_crit_edge

out.cleanup_crit_edge:                            ; preds = %out
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

out.if.then36_crit_edge:                          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then36

if.then36:                                        ; preds = %out.if.then36_crit_edge, %sw.epilog.if.then36_crit_edge, %sw.default.if.then36_crit_edge, %sw.bb10.if.then36_crit_edge, %return.sink.split.i.if.then36_crit_edge, %sw.bb1.i.if.then36_crit_edge
  %ret.084 = phi i32 [ %ret.0, %out.if.then36_crit_edge ], [ -22, %return.sink.split.i.if.then36_crit_edge ], [ -1, %sw.bb1.i.if.then36_crit_edge ], [ -22, %sw.epilog.if.then36_crit_edge ], [ -22, %sw.default.if.then36_crit_edge ], [ -22, %sw.bb10.if.then36_crit_edge ]
  tail call void @bpf_prog_put(ptr noundef %retval.0.i.i)
  br label %cleanup

cleanup:                                          ; preds = %if.then36, %out.cleanup_crit_edge, %if.then3, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %9, %if.then3 ], [ -22, %entry.cleanup_crit_edge ], [ %ret.084, %if.then36 ], [ %ret.0, %out.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @link_update(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %old_prog_fd = getelementptr inbounds %struct.anon.20, ptr %attr, i32 0, i32 3
  %add.ptr = getelementptr %struct.anon.20, ptr %attr, i32 1
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 128) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %flags1 = getelementptr inbounds %struct.anon.20, ptr %attr, i32 0, i32 2
  %0 = ptrtoint ptr %flags1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags1, align 8
  %and = and i32 %1, -5
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.end3, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %2 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %attr, align 8
  %call.i.i = tail call i32 @__fdget(i32 noundef %3) #19, !noalias !313
  %and.i.i.i = and i32 %call.i.i, -4
  %4 = inttoptr i32 %and.i.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %if.end3.if.then6_crit_edge, label %if.end.i

if.end3.if.then6_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then6

if.end.i:                                         ; preds = %if.end3
  %f_op.i = getelementptr inbounds %struct.file, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %f_op.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %f_op.i, align 4
  %cmp.not.i = icmp eq ptr %6, @bpf_link_fops
  br i1 %cmp.not.i, label %if.end4.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  %and.i.i = and i32 %call.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then2.i.if.then6_crit_edge, label %if.then2.i.cleanup.sink.split.i_crit_edge

if.then2.i.cleanup.sink.split.i_crit_edge:        ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i

if.then2.i.if.then6_crit_edge:                    ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then6

if.end4.i:                                        ; preds = %if.end.i
  %private_data.i = getelementptr inbounds %struct.file, ptr %4, i32 0, i32 16
  %7 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %private_data.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %8, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %8) #19
  %and.i14.i = and i32 %call.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i14.i)
  %tobool.not.i15.i = icmp eq i32 %and.i14.i, 0
  br i1 %tobool.not.i15.i, label %if.end4.i.bpf_link_get_from_fd.exit_crit_edge, label %if.end4.i.cleanup.sink.split.i_crit_edge

if.end4.i.cleanup.sink.split.i_crit_edge:         ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i

if.end4.i.bpf_link_get_from_fd.exit_crit_edge:    ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_link_get_from_fd.exit

cleanup.sink.split.i:                             ; preds = %if.end4.i.cleanup.sink.split.i_crit_edge, %if.then2.i.cleanup.sink.split.i_crit_edge
  %retval.0.ph.i = phi ptr [ inttoptr (i32 -22 to ptr), %if.then2.i.cleanup.sink.split.i_crit_edge ], [ %8, %if.end4.i.cleanup.sink.split.i_crit_edge ]
  tail call void @fput(ptr noundef nonnull %4) #19
  br label %bpf_link_get_from_fd.exit

bpf_link_get_from_fd.exit:                        ; preds = %cleanup.sink.split.i, %if.end4.i.bpf_link_get_from_fd.exit_crit_edge
  %retval.0.i = phi ptr [ %8, %if.end4.i.bpf_link_get_from_fd.exit_crit_edge ], [ %retval.0.ph.i, %cleanup.sink.split.i ]
  %cmp.i = icmp ugt ptr %retval.0.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %bpf_link_get_from_fd.exit.if.then6_crit_edge, label %if.end8

bpf_link_get_from_fd.exit.if.then6_crit_edge:     ; preds = %bpf_link_get_from_fd.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then6

if.then6:                                         ; preds = %bpf_link_get_from_fd.exit.if.then6_crit_edge, %if.then2.i.if.then6_crit_edge, %if.end3.if.then6_crit_edge
  %retval.0.i71 = phi ptr [ %retval.0.i, %bpf_link_get_from_fd.exit.if.then6_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then2.i.if.then6_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.end3.if.then6_crit_edge ]
  %9 = ptrtoint ptr %retval.0.i71 to i32
  br label %cleanup

if.end8:                                          ; preds = %bpf_link_get_from_fd.exit
  %new_prog_fd = getelementptr inbounds %struct.anon.20, ptr %attr, i32 0, i32 1
  %10 = ptrtoint ptr %new_prog_fd to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %new_prog_fd, align 4
  %call.i.i.i = tail call i32 @__fdget(i32 noundef %11) #19, !noalias !316
  %and.i.i.i.i = and i32 %call.i.i.i, -4
  %12 = inttoptr i32 %and.i.i.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end8.if.then11_crit_edge, label %if.end.i.i.i

if.end8.if.then11_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then11

if.end.i.i.i:                                     ; preds = %if.end8
  %f_op.i.i.i = getelementptr inbounds %struct.file, ptr %12, i32 0, i32 3
  %13 = ptrtoint ptr %f_op.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %f_op.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %14, @bpf_prog_fops
  br i1 %cmp.not.i.i.i, label %____bpf_prog_get.exit.i.i, label %if.then2.i.i.i

if.then2.i.i.i:                                   ; preds = %if.end.i.i.i
  %and.i.i17.i.i = and i32 %call.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i17.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i17.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.then2.i.i.i.if.then11_crit_edge, label %if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge

if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge:  ; preds = %if.then2.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i.i

if.then2.i.i.i.if.then11_crit_edge:               ; preds = %if.then2.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then11

____bpf_prog_get.exit.i.i:                        ; preds = %if.end.i.i.i
  %private_data.i.i.i = getelementptr inbounds %struct.file, ptr %12, i32 0, i32 16
  %15 = ptrtoint ptr %private_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %private_data.i.i.i, align 4
  %cmp.i.i.i = icmp ugt ptr %16, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge, label %if.end.i.i

____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge: ; preds = %____bpf_prog_get.exit.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get.exit

if.end.i.i:                                       ; preds = %____bpf_prog_get.exit.i.i
  %aux.i22.i.i = getelementptr inbounds %struct.bpf_prog, ptr %16, i32 0, i32 10
  %17 = ptrtoint ptr %aux.i22.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %aux.i22.i.i, align 4
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %18, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %18) #19
  %and.i.i.i64 = and i32 %call.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i64)
  %tobool.not.i23.i.i = icmp eq i32 %and.i.i.i64, 0
  br i1 %tobool.not.i23.i.i, label %if.end.i.i.bpf_prog_get.exit_crit_edge, label %if.end.i.i.cleanup.sink.split.i.i_crit_edge

if.end.i.i.cleanup.sink.split.i.i_crit_edge:      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i.i

if.end.i.i.bpf_prog_get.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get.exit

cleanup.sink.split.i.i:                           ; preds = %if.end.i.i.cleanup.sink.split.i.i_crit_edge, %if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge
  %retval.0.ph.i.i = phi ptr [ inttoptr (i32 -22 to ptr), %if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge ], [ %16, %if.end.i.i.cleanup.sink.split.i.i_crit_edge ]
  tail call void @fput(ptr noundef nonnull %12) #19
  br label %bpf_prog_get.exit

bpf_prog_get.exit:                                ; preds = %cleanup.sink.split.i.i, %if.end.i.i.bpf_prog_get.exit_crit_edge, %____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge
  %retval.0.i.i = phi ptr [ %16, %____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge ], [ %16, %if.end.i.i.bpf_prog_get.exit_crit_edge ], [ %retval.0.ph.i.i, %cleanup.sink.split.i.i ]
  %cmp.i65 = icmp ugt ptr %retval.0.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i65, label %bpf_prog_get.exit.if.then11_crit_edge, label %if.end13

bpf_prog_get.exit.if.then11_crit_edge:            ; preds = %bpf_prog_get.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then11

if.then11:                                        ; preds = %bpf_prog_get.exit.if.then11_crit_edge, %if.then2.i.i.i.if.then11_crit_edge, %if.end8.if.then11_crit_edge
  %retval.0.i.i75 = phi ptr [ %retval.0.i.i, %bpf_prog_get.exit.if.then11_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.end8.if.then11_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then2.i.i.i.if.then11_crit_edge ]
  %19 = ptrtoint ptr %retval.0.i.i75 to i32
  br label %out_put_link

if.end13:                                         ; preds = %bpf_prog_get.exit
  %and14 = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and14)
  %tobool15.not = icmp eq i32 %and14, 0
  %20 = ptrtoint ptr %old_prog_fd to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %old_prog_fd, align 4
  br i1 %tobool15.not, label %if.else, label %if.then16

if.then16:                                        ; preds = %if.end13
  %call18 = tail call ptr @bpf_prog_get(i32 noundef %21)
  %cmp.i66 = icmp ugt ptr %call18, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i66, label %if.then20, label %if.then16.if.end27_crit_edge

if.then16.if.end27_crit_edge:                     ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end27

if.then20:                                        ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #21
  %22 = ptrtoint ptr %call18 to i32
  br label %if.end37

if.else:                                          ; preds = %if.end13
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %21)
  %tobool24.not = icmp eq i32 %21, 0
  br i1 %tobool24.not, label %if.else.if.end27_crit_edge, label %if.else.if.then39_crit_edge

if.else.if.then39_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then39

if.else.if.end27_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end27

if.end27:                                         ; preds = %if.else.if.end27_crit_edge, %if.then16.if.end27_crit_edge
  %old_prog.0 = phi ptr [ %call18, %if.then16.if.end27_crit_edge ], [ null, %if.else.if.end27_crit_edge ]
  %ops = getelementptr inbounds %struct.bpf_link, ptr %retval.0.i, i32 0, i32 3
  %23 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %ops, align 8
  %update_prog = getelementptr inbounds %struct.bpf_link_ops, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %update_prog to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %update_prog, align 4
  %tobool28.not = icmp eq ptr %26, null
  br i1 %tobool28.not, label %if.end27.out_put_progs_crit_edge, label %if.then29

if.end27.out_put_progs_crit_edge:                 ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #21
  br label %out_put_progs

if.then29:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #21
  %call32 = tail call i32 %26(ptr noundef %retval.0.i, ptr noundef %retval.0.i.i, ptr noundef %old_prog.0) #19
  br label %out_put_progs

out_put_progs:                                    ; preds = %if.then29, %if.end27.out_put_progs_crit_edge
  %ret.0 = phi i32 [ %call32, %if.then29 ], [ -22, %if.end27.out_put_progs_crit_edge ]
  %tobool35.not = icmp eq ptr %old_prog.0, null
  br i1 %tobool35.not, label %out_put_progs.if.end37_crit_edge, label %if.then36

out_put_progs.if.end37_crit_edge:                 ; preds = %out_put_progs
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end37

if.then36:                                        ; preds = %out_put_progs
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @bpf_prog_put(ptr noundef nonnull %old_prog.0)
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %out_put_progs.if.end37_crit_edge, %if.then20
  %ret.083 = phi i32 [ %ret.0, %if.then36 ], [ %ret.0, %out_put_progs.if.end37_crit_edge ], [ %22, %if.then20 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.083)
  %tobool38.not = icmp eq i32 %ret.083, 0
  br i1 %tobool38.not, label %if.end37.out_put_link_crit_edge, label %if.end37.if.then39_crit_edge

if.end37.if.then39_crit_edge:                     ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then39

if.end37.out_put_link_crit_edge:                  ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #21
  br label %out_put_link

if.then39:                                        ; preds = %if.end37.if.then39_crit_edge, %if.else.if.then39_crit_edge
  %ret.08388 = phi i32 [ %ret.083, %if.end37.if.then39_crit_edge ], [ -22, %if.else.if.then39_crit_edge ]
  tail call void @bpf_prog_put(ptr noundef %retval.0.i.i)
  br label %out_put_link

out_put_link:                                     ; preds = %if.then39, %if.end37.out_put_link_crit_edge, %if.then11
  %ret.1 = phi i32 [ %19, %if.then11 ], [ %ret.08388, %if.then39 ], [ 0, %if.end37.out_put_link_crit_edge ]
  tail call void @bpf_link_put(ptr noundef %retval.0.i)
  br label %cleanup

cleanup:                                          ; preds = %out_put_link, %if.then6, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %9, %if.then6 ], [ %ret.1, %out_put_link ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_link_get_fd_by_id(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %attr, align 8
  %add.ptr = getelementptr i8, ptr %attr, i32 4
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 140) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call zeroext i1 @capable(i32 noundef 21) #19
  br i1 %call1, label %if.end3, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end3:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i, label %if.end3.if.then6_crit_edge, label %if.end.i

if.end3.if.then6_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then6

if.end.i:                                         ; preds = %if.end3
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @link_idr_lock) #19
  %call1.i = tail call ptr @idr_find(ptr noundef nonnull @link_idr, i32 noundef %1) #19
  %tobool2.not.i = icmp eq ptr %call1.i, null
  br i1 %tobool2.not.i, label %if.end.i.bpf_link_by_id.exit.thread23_crit_edge, label %if.then3.i

if.end.i.bpf_link_by_id.exit.thread23_crit_edge:  ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_link_by_id.exit.thread23

if.then3.i:                                       ; preds = %if.end.i
  %id4.i = getelementptr inbounds %struct.bpf_link, ptr %call1.i, i32 0, i32 1
  %2 = ptrtoint ptr %id4.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %id4.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool5.not.i = icmp eq i32 %3, 0
  br i1 %tobool5.not.i, label %if.then3.i.bpf_link_by_id.exit.thread23_crit_edge, label %if.then6.i

if.then3.i.bpf_link_by_id.exit.thread23_crit_edge: ; preds = %if.then3.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_link_by_id.exit.thread23

if.then6.i:                                       ; preds = %if.then3.i
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call1.i, i32 noundef 8) #19
  %call.i.i.i = tail call i64 @generic_atomic64_fetch_add_unless(ptr noundef nonnull %call1.i, i64 noundef 1, i64 noundef 0) #19
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %call.i.i.i)
  %tobool.not.i.i = icmp eq i64 %call.i.i.i, 0
  br i1 %tobool.not.i.i, label %if.then6.i.bpf_link_by_id.exit.thread23_crit_edge, label %bpf_link_by_id.exit

if.then6.i.bpf_link_by_id.exit.thread23_crit_edge: ; preds = %if.then6.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_link_by_id.exit.thread23

bpf_link_by_id.exit.thread23:                     ; preds = %if.then6.i.bpf_link_by_id.exit.thread23_crit_edge, %if.then3.i.bpf_link_by_id.exit.thread23_crit_edge, %if.end.i.bpf_link_by_id.exit.thread23_crit_edge
  %link.0.i.ph = phi ptr [ inttoptr (i32 -2 to ptr), %if.end.i.bpf_link_by_id.exit.thread23_crit_edge ], [ inttoptr (i32 -11 to ptr), %if.then3.i.bpf_link_by_id.exit.thread23_crit_edge ], [ inttoptr (i32 -2 to ptr), %if.then6.i.bpf_link_by_id.exit.thread23_crit_edge ]
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @link_idr_lock) #19
  br label %if.then6

bpf_link_by_id.exit:                              ; preds = %if.then6.i
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @link_idr_lock) #19
  %cmp.i = icmp ugt ptr %call1.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %bpf_link_by_id.exit.if.then6_crit_edge, label %if.end8

bpf_link_by_id.exit.if.then6_crit_edge:           ; preds = %bpf_link_by_id.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then6

if.then6:                                         ; preds = %bpf_link_by_id.exit.if.then6_crit_edge, %bpf_link_by_id.exit.thread23, %if.end3.if.then6_crit_edge
  %retval.0.i22 = phi ptr [ %call1.i, %bpf_link_by_id.exit.if.then6_crit_edge ], [ %link.0.i.ph, %bpf_link_by_id.exit.thread23 ], [ inttoptr (i32 -2 to ptr), %if.end3.if.then6_crit_edge ]
  %4 = ptrtoint ptr %retval.0.i22 to i32
  br label %cleanup

if.end8:                                          ; preds = %bpf_link_by_id.exit
  %call.i = tail call i32 @anon_inode_getfd(ptr noundef nonnull @.str.5, ptr noundef nonnull @bpf_link_fops, ptr noundef nonnull %call1.i, i32 noundef 524288) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp10 = icmp slt i32 %call.i, 0
  br i1 %cmp10, label %if.then11, label %if.end8.cleanup_crit_edge

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then11:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @bpf_link_put(ptr noundef nonnull %call1.i)
  br label %cleanup

cleanup:                                          ; preds = %if.then11, %if.end8.cleanup_crit_edge, %if.then6, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %4, %if.then6 ], [ -22, %entry.cleanup_crit_edge ], [ -1, %if.end.cleanup_crit_edge ], [ %call.i, %if.then11 ], [ %call.i, %if.end8.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_enable_stats(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %attr, i32 4
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 140) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end:                                           ; preds = %entry
  %call1 = tail call zeroext i1 @capable(i32 noundef 21) #19
  br i1 %call1, label %if.end3, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end3:                                          ; preds = %if.end
  %0 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %attr, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %cond = icmp eq i32 %1, 0
  br i1 %cond, label %sw.bb, label %if.end3.return_crit_edge

if.end3.return_crit_edge:                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

sw.bb:                                            ; preds = %if.end3
  tail call void @mutex_lock_nested(ptr noundef nonnull @bpf_stats_enabled_mutex, i32 noundef 0) #19
  %call.i = tail call i32 @static_key_count(ptr noundef nonnull @bpf_stats_enabled_key) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 1073741823, i32 %call.i)
  %cmp.i = icmp sgt i32 %call.i, 1073741823
  br i1 %cmp.i, label %sw.bb.bpf_enable_runtime_stats.exit_crit_edge, label %if.end.i

sw.bb.bpf_enable_runtime_stats.exit_crit_edge:    ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_enable_runtime_stats.exit

if.end.i:                                         ; preds = %sw.bb
  %call1.i = tail call i32 @anon_inode_getfd(ptr noundef nonnull @.str.60, ptr noundef nonnull @bpf_stats_fops, ptr noundef null, i32 noundef 524288) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call1.i)
  %cmp2.i = icmp sgt i32 %call1.i, -1
  br i1 %cmp2.i, label %if.then3.i, label %if.end.i.bpf_enable_runtime_stats.exit_crit_edge

if.end.i.bpf_enable_runtime_stats.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_enable_runtime_stats.exit

if.then3.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @static_key_slow_inc(ptr noundef nonnull @bpf_stats_enabled_key) #19
  br label %bpf_enable_runtime_stats.exit

bpf_enable_runtime_stats.exit:                    ; preds = %if.then3.i, %if.end.i.bpf_enable_runtime_stats.exit_crit_edge, %sw.bb.bpf_enable_runtime_stats.exit_crit_edge
  %retval.0.i = phi i32 [ -16, %sw.bb.bpf_enable_runtime_stats.exit_crit_edge ], [ %call1.i, %if.then3.i ], [ %call1.i, %if.end.i.bpf_enable_runtime_stats.exit_crit_edge ]
  tail call void @mutex_unlock(ptr noundef nonnull @bpf_stats_enabled_mutex) #19
  br label %return

return:                                           ; preds = %bpf_enable_runtime_stats.exit, %if.end3.return_crit_edge, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ %retval.0.i, %bpf_enable_runtime_stats.exit ], [ -22, %entry.return_crit_edge ], [ -1, %if.end.return_crit_edge ], [ -22, %if.end3.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_iter_create(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr %struct.anon.23, ptr %attr, i32 1
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 136) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %flags = getelementptr inbounds %struct.anon.23, ptr %attr, i32 0, i32 1
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.end3, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %2 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %attr, align 8
  %call.i.i = tail call i32 @__fdget(i32 noundef %3) #19, !noalias !319
  %and.i.i.i = and i32 %call.i.i, -4
  %4 = inttoptr i32 %and.i.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %if.end3.if.then6_crit_edge, label %if.end.i

if.end3.if.then6_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then6

if.end.i:                                         ; preds = %if.end3
  %f_op.i = getelementptr inbounds %struct.file, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %f_op.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %f_op.i, align 4
  %cmp.not.i = icmp eq ptr %6, @bpf_link_fops
  br i1 %cmp.not.i, label %if.end4.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  %and.i.i = and i32 %call.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then2.i.if.then6_crit_edge, label %if.then2.i.cleanup.sink.split.i_crit_edge

if.then2.i.cleanup.sink.split.i_crit_edge:        ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i

if.then2.i.if.then6_crit_edge:                    ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then6

if.end4.i:                                        ; preds = %if.end.i
  %private_data.i = getelementptr inbounds %struct.file, ptr %4, i32 0, i32 16
  %7 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %private_data.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %8, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %8) #19
  %and.i14.i = and i32 %call.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i14.i)
  %tobool.not.i15.i = icmp eq i32 %and.i14.i, 0
  br i1 %tobool.not.i15.i, label %if.end4.i.bpf_link_get_from_fd.exit_crit_edge, label %if.end4.i.cleanup.sink.split.i_crit_edge

if.end4.i.cleanup.sink.split.i_crit_edge:         ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i

if.end4.i.bpf_link_get_from_fd.exit_crit_edge:    ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_link_get_from_fd.exit

cleanup.sink.split.i:                             ; preds = %if.end4.i.cleanup.sink.split.i_crit_edge, %if.then2.i.cleanup.sink.split.i_crit_edge
  %retval.0.ph.i = phi ptr [ inttoptr (i32 -22 to ptr), %if.then2.i.cleanup.sink.split.i_crit_edge ], [ %8, %if.end4.i.cleanup.sink.split.i_crit_edge ]
  tail call void @fput(ptr noundef nonnull %4) #19
  br label %bpf_link_get_from_fd.exit

bpf_link_get_from_fd.exit:                        ; preds = %cleanup.sink.split.i, %if.end4.i.bpf_link_get_from_fd.exit_crit_edge
  %retval.0.i = phi ptr [ %8, %if.end4.i.bpf_link_get_from_fd.exit_crit_edge ], [ %retval.0.ph.i, %cleanup.sink.split.i ]
  %cmp.i = icmp ugt ptr %retval.0.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %bpf_link_get_from_fd.exit.if.then6_crit_edge, label %if.end8

bpf_link_get_from_fd.exit.if.then6_crit_edge:     ; preds = %bpf_link_get_from_fd.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then6

if.then6:                                         ; preds = %bpf_link_get_from_fd.exit.if.then6_crit_edge, %if.then2.i.if.then6_crit_edge, %if.end3.if.then6_crit_edge
  %retval.0.i18 = phi ptr [ %retval.0.i, %bpf_link_get_from_fd.exit.if.then6_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then2.i.if.then6_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.end3.if.then6_crit_edge ]
  %9 = ptrtoint ptr %retval.0.i18 to i32
  br label %cleanup

if.end8:                                          ; preds = %bpf_link_get_from_fd.exit
  call void @__sanitizer_cov_trace_pc() #21
  %call9 = tail call i32 @bpf_iter_new_fd(ptr noundef %retval.0.i) #19
  tail call void @bpf_link_put(ptr noundef %retval.0.i)
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.then6, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %9, %if.then6 ], [ %call9, %if.end8 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @link_detach(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %attr, i32 4
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 140) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %attr, align 8
  %call.i.i = tail call i32 @__fdget(i32 noundef %1) #19, !noalias !322
  %and.i.i.i = and i32 %call.i.i, -4
  %2 = inttoptr i32 %and.i.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %if.end.if.then4_crit_edge, label %if.end.i

if.end.if.then4_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then4

if.end.i:                                         ; preds = %if.end
  %f_op.i = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %f_op.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %f_op.i, align 4
  %cmp.not.i = icmp eq ptr %4, @bpf_link_fops
  br i1 %cmp.not.i, label %if.end4.i, label %if.then2.i

if.then2.i:                                       ; preds = %if.end.i
  %and.i.i = and i32 %call.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then2.i.if.then4_crit_edge, label %if.then2.i.cleanup.sink.split.i_crit_edge

if.then2.i.cleanup.sink.split.i_crit_edge:        ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i

if.then2.i.if.then4_crit_edge:                    ; preds = %if.then2.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then4

if.end4.i:                                        ; preds = %if.end.i
  %private_data.i = getelementptr inbounds %struct.file, ptr %2, i32 0, i32 16
  %5 = ptrtoint ptr %private_data.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %private_data.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %6, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %6) #19
  %and.i14.i = and i32 %call.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i14.i)
  %tobool.not.i15.i = icmp eq i32 %and.i14.i, 0
  br i1 %tobool.not.i15.i, label %if.end4.i.bpf_link_get_from_fd.exit_crit_edge, label %if.end4.i.cleanup.sink.split.i_crit_edge

if.end4.i.cleanup.sink.split.i_crit_edge:         ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i

if.end4.i.bpf_link_get_from_fd.exit_crit_edge:    ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_link_get_from_fd.exit

cleanup.sink.split.i:                             ; preds = %if.end4.i.cleanup.sink.split.i_crit_edge, %if.then2.i.cleanup.sink.split.i_crit_edge
  %retval.0.ph.i = phi ptr [ inttoptr (i32 -22 to ptr), %if.then2.i.cleanup.sink.split.i_crit_edge ], [ %6, %if.end4.i.cleanup.sink.split.i_crit_edge ]
  tail call void @fput(ptr noundef nonnull %2) #19
  br label %bpf_link_get_from_fd.exit

bpf_link_get_from_fd.exit:                        ; preds = %cleanup.sink.split.i, %if.end4.i.bpf_link_get_from_fd.exit_crit_edge
  %retval.0.i = phi ptr [ %6, %if.end4.i.bpf_link_get_from_fd.exit_crit_edge ], [ %retval.0.ph.i, %cleanup.sink.split.i ]
  %cmp.i = icmp ugt ptr %retval.0.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %bpf_link_get_from_fd.exit.if.then4_crit_edge, label %if.end6

bpf_link_get_from_fd.exit.if.then4_crit_edge:     ; preds = %bpf_link_get_from_fd.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then4

if.then4:                                         ; preds = %bpf_link_get_from_fd.exit.if.then4_crit_edge, %if.then2.i.if.then4_crit_edge, %if.end.if.then4_crit_edge
  %retval.0.i21 = phi ptr [ %retval.0.i, %bpf_link_get_from_fd.exit.if.then4_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then2.i.if.then4_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.end.if.then4_crit_edge ]
  %7 = ptrtoint ptr %retval.0.i21 to i32
  br label %cleanup

if.end6:                                          ; preds = %bpf_link_get_from_fd.exit
  %ops = getelementptr inbounds %struct.bpf_link, ptr %retval.0.i, i32 0, i32 3
  %8 = ptrtoint ptr %ops to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ops, align 8
  %detach = getelementptr inbounds %struct.bpf_link_ops, ptr %9, i32 0, i32 2
  %10 = ptrtoint ptr %detach to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %detach, align 4
  %tobool.not = icmp eq ptr %11, null
  br i1 %tobool.not, label %if.end6.if.end11_crit_edge, label %if.then7

if.end6.if.end11_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end11

if.then7:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #21
  %call10 = tail call i32 %11(ptr noundef %retval.0.i) #19
  br label %if.end11

if.end11:                                         ; preds = %if.then7, %if.end6.if.end11_crit_edge
  %ret.0 = phi i32 [ %call10, %if.then7 ], [ -95, %if.end6.if.end11_crit_edge ]
  tail call void @bpf_link_put(ptr noundef %retval.0.i)
  br label %cleanup

cleanup:                                          ; preds = %if.end11, %if.then4, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %7, %if.then4 ], [ %ret.0, %if.end11 ], [ -22, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_prog_bind_map(ptr noundef %attr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr %struct.anon.24, ptr %attr, i32 1
  %call = tail call ptr @memchr_inv(ptr noundef %add.ptr, i32 noundef 0, i32 noundef 132) #19
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %flags = getelementptr inbounds %struct.anon.24, ptr %attr, i32 0, i32 2
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.end3, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %2 = ptrtoint ptr %attr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %attr, align 8
  %call.i.i.i = tail call i32 @__fdget(i32 noundef %3) #19, !noalias !325
  %and.i.i.i.i = and i32 %call.i.i.i, -4
  %4 = inttoptr i32 %and.i.i.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end3.if.then6_crit_edge, label %if.end.i.i.i

if.end3.if.then6_crit_edge:                       ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then6

if.end.i.i.i:                                     ; preds = %if.end3
  %f_op.i.i.i = getelementptr inbounds %struct.file, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %f_op.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %f_op.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %6, @bpf_prog_fops
  br i1 %cmp.not.i.i.i, label %____bpf_prog_get.exit.i.i, label %if.then2.i.i.i

if.then2.i.i.i:                                   ; preds = %if.end.i.i.i
  %and.i.i17.i.i = and i32 %call.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i17.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i17.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.then2.i.i.i.if.then6_crit_edge, label %if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge

if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge:  ; preds = %if.then2.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i.i

if.then2.i.i.i.if.then6_crit_edge:                ; preds = %if.then2.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then6

____bpf_prog_get.exit.i.i:                        ; preds = %if.end.i.i.i
  %private_data.i.i.i = getelementptr inbounds %struct.file, ptr %4, i32 0, i32 16
  %7 = ptrtoint ptr %private_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %private_data.i.i.i, align 4
  %cmp.i.i.i = icmp ugt ptr %8, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge, label %if.end.i.i

____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge: ; preds = %____bpf_prog_get.exit.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get.exit

if.end.i.i:                                       ; preds = %____bpf_prog_get.exit.i.i
  %aux.i22.i.i = getelementptr inbounds %struct.bpf_prog, ptr %8, i32 0, i32 10
  %9 = ptrtoint ptr %aux.i22.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %aux.i22.i.i, align 4
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %10, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %10) #19
  %and.i.i.i = and i32 %call.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i23.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i23.i.i, label %if.end.i.i.bpf_prog_get.exit_crit_edge, label %if.end.i.i.cleanup.sink.split.i.i_crit_edge

if.end.i.i.cleanup.sink.split.i.i_crit_edge:      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i.i

if.end.i.i.bpf_prog_get.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get.exit

cleanup.sink.split.i.i:                           ; preds = %if.end.i.i.cleanup.sink.split.i.i_crit_edge, %if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge
  %retval.0.ph.i.i = phi ptr [ inttoptr (i32 -22 to ptr), %if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge ], [ %8, %if.end.i.i.cleanup.sink.split.i.i_crit_edge ]
  tail call void @fput(ptr noundef nonnull %4) #19
  br label %bpf_prog_get.exit

bpf_prog_get.exit:                                ; preds = %cleanup.sink.split.i.i, %if.end.i.i.bpf_prog_get.exit_crit_edge, %____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge
  %retval.0.i.i = phi ptr [ %8, %____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge ], [ %8, %if.end.i.i.bpf_prog_get.exit_crit_edge ], [ %retval.0.ph.i.i, %cleanup.sink.split.i.i ]
  %cmp.i = icmp ugt ptr %retval.0.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %bpf_prog_get.exit.if.then6_crit_edge, label %if.end8

bpf_prog_get.exit.if.then6_crit_edge:             ; preds = %bpf_prog_get.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then6

if.then6:                                         ; preds = %bpf_prog_get.exit.if.then6_crit_edge, %if.then2.i.i.i.if.then6_crit_edge, %if.end3.if.then6_crit_edge
  %retval.0.i.i86 = phi ptr [ %retval.0.i.i, %bpf_prog_get.exit.if.then6_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.end3.if.then6_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then2.i.i.i.if.then6_crit_edge ]
  %11 = ptrtoint ptr %retval.0.i.i86 to i32
  br label %cleanup

if.end8:                                          ; preds = %bpf_prog_get.exit
  %map_fd = getelementptr inbounds %struct.anon.24, ptr %attr, i32 0, i32 1
  %12 = ptrtoint ptr %map_fd to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %map_fd, align 4
  %call.i.i = tail call i32 @__fdget(i32 noundef %13) #19, !noalias !328
  %and.i.i.i73 = and i32 %call.i.i, -4
  %14 = inttoptr i32 %and.i.i.i73 to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i73)
  %tobool.not.i.i = icmp eq i32 %and.i.i.i73, 0
  br i1 %tobool.not.i.i, label %if.end8.if.then11_crit_edge, label %if.end.i.i74

if.end8.if.then11_crit_edge:                      ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then11

if.end.i.i74:                                     ; preds = %if.end8
  %f_op.i.i = getelementptr inbounds %struct.file, ptr %14, i32 0, i32 3
  %15 = ptrtoint ptr %f_op.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %f_op.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %16, @bpf_map_fops
  br i1 %cmp.not.i.i, label %__bpf_map_get.exit.i, label %if.then2.i.i

if.then2.i.i:                                     ; preds = %if.end.i.i74
  %and.i.i12.i = and i32 %call.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i12.i)
  %tobool.not.i.i.i75 = icmp eq i32 %and.i.i12.i, 0
  br i1 %tobool.not.i.i.i75, label %if.then2.i.i.if.then11_crit_edge, label %if.then2.i.i.cleanup.sink.split.i_crit_edge

if.then2.i.i.cleanup.sink.split.i_crit_edge:      ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i

if.then2.i.i.if.then11_crit_edge:                 ; preds = %if.then2.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then11

__bpf_map_get.exit.i:                             ; preds = %if.end.i.i74
  %private_data.i.i = getelementptr inbounds %struct.file, ptr %14, i32 0, i32 16
  %17 = ptrtoint ptr %private_data.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %private_data.i.i, align 4
  %cmp.i.i = icmp ugt ptr %18, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %__bpf_map_get.exit.i.bpf_map_get.exit_crit_edge, label %if.end.i

__bpf_map_get.exit.i.bpf_map_get.exit_crit_edge:  ; preds = %__bpf_map_get.exit.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_get.exit

if.end.i:                                         ; preds = %__bpf_map_get.exit.i
  %refcnt.i.i = getelementptr inbounds %struct.bpf_map, ptr %18, i32 0, i32 22
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcnt.i.i, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %refcnt.i.i) #19
  %and.i.i = and i32 %call.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i13.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i13.i, label %if.end.i.bpf_map_get.exit_crit_edge, label %if.end.i.cleanup.sink.split.i_crit_edge

if.end.i.cleanup.sink.split.i_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i

if.end.i.bpf_map_get.exit_crit_edge:              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_get.exit

cleanup.sink.split.i:                             ; preds = %if.end.i.cleanup.sink.split.i_crit_edge, %if.then2.i.i.cleanup.sink.split.i_crit_edge
  %retval.0.i18.ph.i = phi ptr [ inttoptr (i32 -22 to ptr), %if.then2.i.i.cleanup.sink.split.i_crit_edge ], [ %18, %if.end.i.cleanup.sink.split.i_crit_edge ]
  tail call void @fput(ptr noundef nonnull %14) #19
  br label %bpf_map_get.exit

bpf_map_get.exit:                                 ; preds = %cleanup.sink.split.i, %if.end.i.bpf_map_get.exit_crit_edge, %__bpf_map_get.exit.i.bpf_map_get.exit_crit_edge
  %retval.0.i18.i = phi ptr [ %18, %__bpf_map_get.exit.i.bpf_map_get.exit_crit_edge ], [ %18, %if.end.i.bpf_map_get.exit_crit_edge ], [ %retval.0.i18.ph.i, %cleanup.sink.split.i ]
  %cmp.i76 = icmp ugt ptr %retval.0.i18.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i76, label %bpf_map_get.exit.if.then11_crit_edge, label %if.end13

bpf_map_get.exit.if.then11_crit_edge:             ; preds = %bpf_map_get.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then11

if.then11:                                        ; preds = %bpf_map_get.exit.if.then11_crit_edge, %if.then2.i.i.if.then11_crit_edge, %if.end8.if.then11_crit_edge
  %retval.0.i18.i90 = phi ptr [ %retval.0.i18.i, %bpf_map_get.exit.if.then11_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.end8.if.then11_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then2.i.i.if.then11_crit_edge ]
  %19 = ptrtoint ptr %retval.0.i18.i90 to i32
  br label %out_prog_put

if.end13:                                         ; preds = %bpf_map_get.exit
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %retval.0.i.i, i32 0, i32 10
  %20 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %aux, align 4
  %used_maps_mutex = getelementptr inbounds %struct.bpf_prog_aux, ptr %21, i32 0, i32 39
  tail call void @mutex_lock_nested(ptr noundef %used_maps_mutex, i32 noundef 0) #19
  %22 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %aux, align 4
  %used_maps = getelementptr inbounds %struct.bpf_prog_aux, ptr %23, i32 0, i32 38
  %24 = ptrtoint ptr %used_maps to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %used_maps, align 8
  %used_map_cnt = getelementptr inbounds %struct.bpf_prog_aux, ptr %23, i32 0, i32 1
  %26 = ptrtoint ptr %used_map_cnt to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %used_map_cnt, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %cmp16102.not = icmp eq i32 %27, 0
  br i1 %cmp16102.not, label %if.end13.for.end_crit_edge, label %if.end13.for.body_crit_edge

if.end13.for.body_crit_edge:                      ; preds = %if.end13
  br label %for.body

if.end13.for.end_crit_edge:                       ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end

for.cond:                                         ; preds = %for.body
  %inc = add nuw i32 %i.0103, 1
  %exitcond.not = icmp eq i32 %inc, %27
  br i1 %exitcond.not, label %for.cond.for.end_crit_edge, label %for.cond.for.body_crit_edge

for.cond.for.body_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.body

for.cond.for.end_crit_edge:                       ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.end

for.body:                                         ; preds = %for.cond.for.body_crit_edge, %if.end13.for.body_crit_edge
  %i.0103 = phi i32 [ %inc, %for.cond.for.body_crit_edge ], [ 0, %if.end13.for.body_crit_edge ]
  %arrayidx = getelementptr ptr, ptr %25, i32 %i.0103
  %28 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx, align 4
  %cmp17 = icmp eq ptr %29, %retval.0.i18.i
  br i1 %cmp17, label %if.then18, label %for.cond

if.then18:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @bpf_map_put(ptr noundef %retval.0.i18.i)
  br label %out_unlock.thread

for.end:                                          ; preds = %for.cond.for.end_crit_edge, %if.end13.for.end_crit_edge
  %add = add i32 %27, 1
  %30 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %add, i32 4) #19
  %31 = extractvalue { i32, i1 } %30, 1
  br i1 %31, label %for.end.if.then39_crit_edge, label %if.end7.i, !prof !219

for.end.if.then39_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then39

if.end7.i:                                        ; preds = %for.end
  %32 = extractvalue { i32, i1 } %30, 0
  %call8.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %32, i32 noundef 3264) #22
  %tobool23.not = icmp eq ptr %call8.i, null
  br i1 %tobool23.not, label %if.end7.i.if.then39_crit_edge, label %if.end25

if.end7.i.if.then39_crit_edge:                    ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then39

if.end25:                                         ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #21
  %33 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %aux, align 4
  %used_map_cnt27 = getelementptr inbounds %struct.bpf_prog_aux, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %used_map_cnt27 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %used_map_cnt27, align 8
  %mul = shl i32 %36, 2
  %37 = call ptr @memcpy(ptr %call8.i, ptr %25, i32 %mul)
  %38 = load ptr, ptr %aux, align 4
  %used_map_cnt29 = getelementptr inbounds %struct.bpf_prog_aux, ptr %38, i32 0, i32 1
  %39 = ptrtoint ptr %used_map_cnt29 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %used_map_cnt29, align 8
  %arrayidx30 = getelementptr ptr, ptr %call8.i, i32 %40
  %41 = ptrtoint ptr %arrayidx30 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %retval.0.i18.i, ptr %arrayidx30, align 4
  %42 = load ptr, ptr %aux, align 4
  %used_map_cnt32 = getelementptr inbounds %struct.bpf_prog_aux, ptr %42, i32 0, i32 1
  %43 = ptrtoint ptr %used_map_cnt32 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %used_map_cnt32, align 8
  %inc33 = add i32 %44, 1
  store i32 %inc33, ptr %used_map_cnt32, align 8
  %45 = load ptr, ptr %aux, align 4
  %used_maps35 = getelementptr inbounds %struct.bpf_prog_aux, ptr %45, i32 0, i32 38
  %46 = ptrtoint ptr %used_maps35 to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %call8.i, ptr %used_maps35, align 8
  tail call void @kfree(ptr noundef %25) #19
  br label %out_unlock.thread

out_unlock.thread:                                ; preds = %if.end25, %if.then18
  %47 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %aux, align 4
  %used_maps_mutex37100 = getelementptr inbounds %struct.bpf_prog_aux, ptr %48, i32 0, i32 39
  tail call void @mutex_unlock(ptr noundef %used_maps_mutex37100) #19
  br label %out_prog_put

if.then39:                                        ; preds = %if.end7.i.if.then39_crit_edge, %for.end.if.then39_crit_edge
  %49 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %aux, align 4
  %used_maps_mutex37 = getelementptr inbounds %struct.bpf_prog_aux, ptr %50, i32 0, i32 39
  tail call void @mutex_unlock(ptr noundef %used_maps_mutex37) #19
  tail call void @bpf_map_put(ptr noundef %retval.0.i18.i)
  br label %out_prog_put

out_prog_put:                                     ; preds = %if.then39, %out_unlock.thread, %if.then11
  %ret.1 = phi i32 [ %19, %if.then11 ], [ -12, %if.then39 ], [ 0, %out_unlock.thread ]
  tail call void @bpf_prog_put(ptr noundef %retval.0.i.i)
  br label %cleanup

cleanup:                                          ; preds = %out_prog_put, %if.then6, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %11, %if.then6 ], [ %ret.1, %out_prog_put ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @capable(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btf_get_by_fd(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @btf_is_kernel(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @map_check_btf(ptr noundef %map, ptr noundef %btf, i32 noundef %btf_key_id, i32 noundef %btf_value_id) unnamed_addr #0 align 64 {
entry:
  %btf_key_id.addr = alloca i32, align 4
  %btf_value_id.addr = alloca i32, align 4
  %key_size = alloca i32, align 4
  %value_size = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %btf_key_id.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %btf_key_id, ptr %btf_key_id.addr, align 4
  %1 = ptrtoint ptr %btf_value_id.addr to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %btf_value_id, ptr %btf_value_id.addr, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %key_size) #19
  %2 = ptrtoint ptr %key_size to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 -1, ptr %key_size, align 4, !annotation !244
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %value_size) #19
  %3 = ptrtoint ptr %value_size to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 -1, ptr %value_size, align 4, !annotation !244
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %btf_key_id)
  %tobool.not = icmp eq i32 %btf_key_id, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %call = call ptr @btf_type_id_size(ptr noundef %btf, ptr noundef nonnull %btf_key_id.addr, ptr noundef nonnull %key_size) #19
  %tobool1.not = icmp eq ptr %call, null
  br i1 %tobool1.not, label %if.then.cleanup_crit_edge, label %lor.lhs.false

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

lor.lhs.false:                                    ; preds = %if.then
  %4 = ptrtoint ptr %key_size to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %key_size, align 4
  %key_size2 = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 4
  %6 = ptrtoint ptr %key_size2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %key_size2, align 16
  call void @__sanitizer_cov_trace_cmp4(i32 %5, i32 %7)
  %cmp.not = icmp eq i32 %5, %7
  br i1 %cmp.not, label %lor.lhs.false.if.end8_crit_edge, label %lor.lhs.false.cleanup_crit_edge

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

lor.lhs.false.if.end8_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end8

if.else:                                          ; preds = %entry
  %call4 = tail call ptr @btf_type_by_id(ptr noundef %btf, i32 noundef 0) #19
  %8 = ptrtoint ptr %map to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %map, align 128
  %map_check_btf = getelementptr inbounds %struct.bpf_map_ops, ptr %9, i32 0, i32 23
  %10 = ptrtoint ptr %map_check_btf to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %map_check_btf, align 4
  %tobool5.not = icmp eq ptr %11, null
  br i1 %tobool5.not, label %if.else.cleanup_crit_edge, label %if.else.if.end8_crit_edge

if.else.if.end8_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end8

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end8:                                          ; preds = %if.else.if.end8_crit_edge, %lor.lhs.false.if.end8_crit_edge
  %key_type.0 = phi ptr [ %call, %lor.lhs.false.if.end8_crit_edge ], [ %call4, %if.else.if.end8_crit_edge ]
  %call9 = call ptr @btf_type_id_size(ptr noundef %btf, ptr noundef nonnull %btf_value_id.addr, ptr noundef nonnull %value_size) #19
  %tobool10.not = icmp eq ptr %call9, null
  br i1 %tobool10.not, label %if.end8.cleanup_crit_edge, label %lor.lhs.false11

if.end8.cleanup_crit_edge:                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

lor.lhs.false11:                                  ; preds = %if.end8
  %12 = ptrtoint ptr %value_size to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %value_size, align 4
  %value_size12 = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 5
  %14 = ptrtoint ptr %value_size12 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %value_size12, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %13, i32 %15)
  %cmp13.not = icmp eq i32 %13, %15
  br i1 %cmp13.not, label %if.end15, label %lor.lhs.false11.cleanup_crit_edge

lor.lhs.false11.cleanup_crit_edge:                ; preds = %lor.lhs.false11
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end15:                                         ; preds = %lor.lhs.false11
  %call16 = call i32 @btf_find_spin_lock(ptr noundef %btf, ptr noundef nonnull %call9) #19
  %spin_lock_off = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 9
  %16 = ptrtoint ptr %spin_lock_off to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %call16, ptr %spin_lock_off, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call16)
  %cmp.i = icmp sgt i32 %call16, -1
  br i1 %cmp.i, label %if.then18, label %if.end15.if.end81_crit_edge

if.end15.if.end81_crit_edge:                      ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end81

if.then18:                                        ; preds = %if.end15
  %map_flags = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 8
  %17 = ptrtoint ptr %map_flags to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %map_flags, align 8
  %and = and i32 %18, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool19.not = icmp eq i32 %and, 0
  br i1 %tobool19.not, label %if.end21, label %if.then18.cleanup_crit_edge

if.then18.cleanup_crit_edge:                      ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end21:                                         ; preds = %if.then18
  %map_type = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 3
  %19 = ptrtoint ptr %map_type to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %map_type, align 4
  %21 = zext i32 %20 to i64
  call void @__sanitizer_cov_trace_switch(i64 %21, ptr @__sancov_gen_cov_switch_values.90)
  switch i32 %20, label %if.end21.cleanup_crit_edge [
    i32 1, label %if.end21.if.end38_crit_edge
    i32 2, label %if.end21.if.end38_crit_edge152
    i32 19, label %if.end21.if.end38_crit_edge153
    i32 24, label %if.end21.if.end38_crit_edge154
    i32 28, label %if.end21.if.end38_crit_edge155
    i32 29, label %if.end21.if.end38_crit_edge156
  ]

if.end21.if.end38_crit_edge156:                   ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end38

if.end21.if.end38_crit_edge155:                   ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end38

if.end21.if.end38_crit_edge154:                   ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end38

if.end21.if.end38_crit_edge153:                   ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end38

if.end21.if.end38_crit_edge152:                   ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end38

if.end21.if.end38_crit_edge:                      ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end38

if.end21.cleanup_crit_edge:                       ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end38:                                         ; preds = %if.end21.if.end38_crit_edge, %if.end21.if.end38_crit_edge152, %if.end21.if.end38_crit_edge153, %if.end21.if.end38_crit_edge154, %if.end21.if.end38_crit_edge155, %if.end21.if.end38_crit_edge156
  %add = add nuw i32 %call16, 4
  %22 = ptrtoint ptr %value_size12 to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %value_size12, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %add, i32 %23)
  %cmp41 = icmp ugt i32 %add, %23
  br i1 %cmp41, label %land.end, label %if.end38.if.end81_crit_edge

if.end38.if.end81_crit_edge:                      ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end81

land.end:                                         ; preds = %if.end38
  %.b150 = load i1, ptr @map_check_btf.__already_done, align 1
  br i1 %.b150, label %land.end.cleanup_crit_edge, label %if.then48, !prof !220

land.end.cleanup_crit_edge:                       ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then48:                                        ; preds = %land.end
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @map_check_btf.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 809, i32 noundef 9, ptr noundef nonnull @.str.51, i32 noundef %call16, i32 noundef %23) #19
  br label %cleanup

if.end81:                                         ; preds = %if.end38.if.end81_crit_edge, %if.end15.if.end81_crit_edge
  %call82 = call i32 @btf_find_timer(ptr noundef %btf, ptr noundef nonnull %call9) #19
  %timer_off = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 10
  %24 = ptrtoint ptr %timer_off to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 %call82, ptr %timer_off, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %call82)
  %cmp.i151 = icmp sgt i32 %call82, -1
  br i1 %cmp.i151, label %if.then84, label %if.end81.if.end100_crit_edge

if.end81.if.end100_crit_edge:                     ; preds = %if.end81
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end100

if.then84:                                        ; preds = %if.end81
  %map_flags85 = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 8
  %25 = ptrtoint ptr %map_flags85 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %map_flags85, align 8
  %and86 = and i32 %26, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and86)
  %tobool87.not = icmp eq i32 %and86, 0
  br i1 %tobool87.not, label %if.end89, label %if.then84.cleanup_crit_edge

if.then84.cleanup_crit_edge:                      ; preds = %if.then84
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end89:                                         ; preds = %if.then84
  %map_type90 = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 3
  %27 = ptrtoint ptr %map_type90 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %map_type90, align 4
  %29 = zext i32 %28 to i64
  call void @__sanitizer_cov_trace_switch(i64 %29, ptr @__sancov_gen_cov_switch_values.91)
  switch i32 %28, label %if.end89.cleanup_crit_edge [
    i32 1, label %if.end89.if.end100_crit_edge
    i32 9, label %if.end89.if.end100_crit_edge157
    i32 2, label %if.end89.if.end100_crit_edge158
  ]

if.end89.if.end100_crit_edge158:                  ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end100

if.end89.if.end100_crit_edge157:                  ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end100

if.end89.if.end100_crit_edge:                     ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end100

if.end89.cleanup_crit_edge:                       ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end100:                                        ; preds = %if.end89.if.end100_crit_edge, %if.end89.if.end100_crit_edge157, %if.end89.if.end100_crit_edge158, %if.end81.if.end100_crit_edge
  %30 = ptrtoint ptr %map to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %map, align 128
  %map_check_btf102 = getelementptr inbounds %struct.bpf_map_ops, ptr %31, i32 0, i32 23
  %32 = ptrtoint ptr %map_check_btf102 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %map_check_btf102, align 4
  %tobool103.not = icmp eq ptr %33, null
  br i1 %tobool103.not, label %if.end100.cleanup_crit_edge, label %if.then104

if.end100.cleanup_crit_edge:                      ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then104:                                       ; preds = %if.end100
  call void @__sanitizer_cov_trace_pc() #21
  %call107 = call i32 %33(ptr noundef %map, ptr noundef %btf, ptr noundef %key_type.0, ptr noundef nonnull %call9) #19
  br label %cleanup

cleanup:                                          ; preds = %if.then104, %if.end100.cleanup_crit_edge, %if.end89.cleanup_crit_edge, %if.then84.cleanup_crit_edge, %if.then48, %land.end.cleanup_crit_edge, %if.end21.cleanup_crit_edge, %if.then18.cleanup_crit_edge, %lor.lhs.false11.cleanup_crit_edge, %if.end8.cleanup_crit_edge, %if.else.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %if.then.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %lor.lhs.false.cleanup_crit_edge ], [ -22, %if.then.cleanup_crit_edge ], [ -22, %if.else.cleanup_crit_edge ], [ -22, %lor.lhs.false11.cleanup_crit_edge ], [ -22, %if.end8.cleanup_crit_edge ], [ -13, %if.then18.cleanup_crit_edge ], [ -524, %if.end21.cleanup_crit_edge ], [ -14, %if.then48 ], [ -14, %land.end.cleanup_crit_edge ], [ -13, %if.then84.cleanup_crit_edge ], [ -95, %if.end89.cleanup_crit_edge ], [ %call107, %if.then104 ], [ 0, %if.end100.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %value_size) #19
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %key_size) #19
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_bpf_map_alloc(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_map_alloc_id(ptr noundef %map) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @idr_preload(i32 noundef 3264) #19
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @map_idr_lock) #19
  %call = tail call i32 @idr_alloc_cyclic(ptr noundef nonnull @map_idr, ptr noundef %map, i32 noundef 1, i32 noundef 2147483647, i32 noundef 2592) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp sgt i32 %call, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %id1 = getelementptr inbounds %struct.bpf_map, ptr %map, i32 0, i32 11
  %0 = ptrtoint ptr %id1 to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %call, ptr %id1, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @map_idr_lock) #19
  %1 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 3
  %3 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %4
  %5 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %6, ptrtoint (ptr @radix_tree_preloads to i32)
  %7 = inttoptr i32 %add.i to ptr
  tail call fastcc void @local_lock_release(ptr noundef %7) #19
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !252
  %8 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %11, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %if.end42

land.rhs:                                         ; preds = %if.end
  %.b51 = load i1, ptr @bpf_map_alloc_id.__already_done, align 1
  br i1 %.b51, label %land.rhs.cleanup_crit_edge, label %if.then10, !prof !220

land.rhs.cleanup_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then10:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @bpf_map_alloc_id.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 384, i32 noundef 9, ptr noundef null) #19
  br label %cleanup

if.end42:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %12 = tail call i32 @llvm.smin.i32(i32 %call, i32 0)
  br label %cleanup

cleanup:                                          ; preds = %if.end42, %if.then10, %land.rhs.cleanup_crit_edge
  %retval.0 = phi i32 [ %12, %if.end42 ], [ -28, %if.then10 ], [ -28, %land.rhs.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btf_type_id_size(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @btf_type_by_id(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btf_find_spin_lock(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btf_find_timer(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_mem_cgroup_from_mm(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @vmemdup_user(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_map_offload_get_next_key(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @perfmon_capable() unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %call = tail call zeroext i1 @capable(i32 noundef 38) #19
  br i1 %call, label %entry.lor.end_crit_edge, label %lor.rhs

entry.lor.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %lor.end

lor.rhs:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %call1 = tail call zeroext i1 @capable(i32 noundef 21) #19
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry.lor.end_crit_edge
  %0 = phi i1 [ true, %entry.lor.end_crit_edge ], [ %call1, %lor.rhs ]
  ret i1 %0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bpf_get_btf_vmlinux() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @btf_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @bpf_prog_load_check_attach(i32 noundef %prog_type, i32 noundef %expected_attach_type, ptr noundef readnone %attach_btf, i32 noundef %btf_id, ptr noundef readnone %dst_prog) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %btf_id)
  %tobool.not = icmp eq i32 %btf_id, 0
  br i1 %tobool.not, label %entry.if.end6_crit_edge, label %if.then

entry.if.end6_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end6

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 1048575, i32 %btf_id)
  %cmp = icmp ugt i32 %btf_id, 1048575
  br i1 %cmp, label %if.then.return_crit_edge, label %if.end

if.then.return_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end:                                           ; preds = %if.then
  %tobool2.not = icmp ne ptr %attach_btf, null
  %tobool3.not = icmp ne ptr %dst_prog, null
  %or.cond.not = or i1 %tobool2.not, %tobool3.not
  %prog_type.off = add i32 %prog_type, -26
  call void @__sanitizer_cov_trace_const_cmp4(i32 4, i32 %prog_type.off)
  %switch = icmp ult i32 %prog_type.off, 4
  %or.cond68 = and i1 %switch, %or.cond.not
  br i1 %or.cond68, label %if.end.if.end6_crit_edge, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end.if.end6_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end6

if.end6:                                          ; preds = %if.end.if.end6_crit_edge, %entry.if.end6_crit_edge
  %tobool7.not = icmp eq ptr %attach_btf, null
  br i1 %tobool7.not, label %if.end12, label %land.lhs.true8

land.lhs.true8:                                   ; preds = %if.end6
  %tobool10.not = icmp ne ptr %dst_prog, null
  %0 = or i1 %tobool.not, %tobool10.not
  br i1 %0, label %land.lhs.true8.return_crit_edge, label %land.lhs.true8.if.end19_crit_edge

land.lhs.true8.if.end19_crit_edge:                ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end19

land.lhs.true8.return_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end12:                                         ; preds = %if.end6
  %tobool13.not = icmp eq ptr %dst_prog, null
  br i1 %tobool13.not, label %if.end12.if.end19_crit_edge, label %switch.early.test

if.end12.if.end19_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end19

switch.early.test:                                ; preds = %if.end12
  %1 = zext i32 %prog_type to i64
  call void @__sanitizer_cov_trace_switch(i64 %1, ptr @__sancov_gen_cov_switch_values.92)
  switch i32 %prog_type, label %switch.early.test.return_crit_edge [
    i32 28, label %switch.early.test.sw.bb39_crit_edge
    i32 26, label %switch.early.test.sw.default43_crit_edge
  ]

switch.early.test.sw.default43_crit_edge:         ; preds = %switch.early.test
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.default43

switch.early.test.sw.bb39_crit_edge:              ; preds = %switch.early.test
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb39

switch.early.test.return_crit_edge:               ; preds = %switch.early.test
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end19:                                         ; preds = %if.end12.if.end19_crit_edge, %land.lhs.true8.if.end19_crit_edge
  %2 = zext i32 %prog_type to i64
  call void @__sanitizer_cov_trace_switch(i64 %2, ptr @__sancov_gen_cov_switch_values.93)
  switch i32 %prog_type, label %if.end19.sw.default43_crit_edge [
    i32 9, label %sw.bb20
    i32 18, label %sw.bb23
    i32 8, label %sw.bb26
    i32 25, label %sw.bb29
    i32 30, label %sw.bb32
    i32 21, label %sw.bb36
    i32 31, label %if.end19.sw.bb39_crit_edge
    i32 28, label %if.end19.sw.bb39_crit_edge74
  ]

if.end19.sw.bb39_crit_edge74:                     ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb39

if.end19.sw.bb39_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.bb39

if.end19.sw.default43_crit_edge:                  ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.default43

sw.bb20:                                          ; preds = %if.end19
  %3 = zext i32 %expected_attach_type to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.94)
  switch i32 %expected_attach_type, label %sw.default22 [
    i32 2, label %sw.bb20.return_crit_edge
    i32 34, label %sw.bb20.return_crit_edge75
    i32 12, label %sw.bb20.return_crit_edge76
    i32 13, label %sw.bb20.return_crit_edge77
  ]

sw.bb20.return_crit_edge77:                       ; preds = %sw.bb20
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

sw.bb20.return_crit_edge76:                       ; preds = %sw.bb20
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

sw.bb20.return_crit_edge75:                       ; preds = %sw.bb20
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

sw.bb20.return_crit_edge:                         ; preds = %sw.bb20
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

sw.default22:                                     ; preds = %sw.bb20
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

sw.bb23:                                          ; preds = %if.end19
  %switch.tableidx = add i32 %expected_attach_type, -8
  call void @__sanitizer_cov_trace_const_cmp4(i32 25, i32 %switch.tableidx)
  %4 = icmp ult i32 %switch.tableidx, 25
  br i1 %4, label %switch.lookup, label %sw.bb23.return_crit_edge

sw.bb23.return_crit_edge:                         ; preds = %sw.bb23
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

sw.bb26:                                          ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %expected_attach_type)
  %switch61 = icmp ult i32 %expected_attach_type, 2
  %. = select i1 %switch61, i32 0, i32 -22
  br label %return

sw.bb29:                                          ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #21
  %expected_attach_type.off = add i32 %expected_attach_type, -21
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %expected_attach_type.off)
  %switch62 = icmp ult i32 %expected_attach_type.off, 2
  %.63 = select i1 %switch62, i32 0, i32 -22
  br label %return

sw.bb32:                                          ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #21
  call void @__sanitizer_cov_trace_const_cmp4(i32 36, i32 %expected_attach_type)
  %cmp33 = icmp eq i32 %expected_attach_type, 36
  %.64 = select i1 %cmp33, i32 0, i32 -22
  br label %return

sw.bb36:                                          ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #21
  %expected_attach_type.off65 = add i32 %expected_attach_type, -39
  call void @__sanitizer_cov_trace_const_cmp4(i32 2, i32 %expected_attach_type.off65)
  %switch66 = icmp ult i32 %expected_attach_type.off65, 2
  %.67 = select i1 %switch66, i32 0, i32 -22
  br label %return

sw.bb39:                                          ; preds = %if.end19.sw.bb39_crit_edge, %if.end19.sw.bb39_crit_edge74, %switch.early.test.sw.bb39_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %expected_attach_type)
  %tobool40.not = icmp eq i32 %expected_attach_type, 0
  br i1 %tobool40.not, label %sw.bb39.sw.default43_crit_edge, label %sw.bb39.return_crit_edge

sw.bb39.return_crit_edge:                         ; preds = %sw.bb39
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

sw.bb39.sw.default43_crit_edge:                   ; preds = %sw.bb39
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.default43

sw.default43:                                     ; preds = %sw.bb39.sw.default43_crit_edge, %if.end19.sw.default43_crit_edge, %switch.early.test.sw.default43_crit_edge
  br label %return

switch.lookup:                                    ; preds = %sw.bb23
  call void @__sanitizer_cov_trace_pc() #21
  %switch.gep = getelementptr inbounds [25 x i32], ptr @switch.table.bpf_prog_load_check_attach, i32 0, i32 %switch.tableidx
  %5 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %5)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %return

return:                                           ; preds = %switch.lookup, %sw.default43, %sw.bb39.return_crit_edge, %sw.bb36, %sw.bb32, %sw.bb29, %sw.bb26, %sw.bb23.return_crit_edge, %sw.default22, %sw.bb20.return_crit_edge, %sw.bb20.return_crit_edge75, %sw.bb20.return_crit_edge76, %sw.bb20.return_crit_edge77, %switch.early.test.return_crit_edge, %land.lhs.true8.return_crit_edge, %if.end.return_crit_edge, %if.then.return_crit_edge
  %retval.0 = phi i32 [ 0, %sw.default43 ], [ -22, %sw.default22 ], [ -22, %if.then.return_crit_edge ], [ -22, %if.end.return_crit_edge ], [ -22, %land.lhs.true8.return_crit_edge ], [ -22, %switch.early.test.return_crit_edge ], [ 0, %sw.bb20.return_crit_edge ], [ 0, %sw.bb20.return_crit_edge75 ], [ 0, %sw.bb20.return_crit_edge76 ], [ 0, %sw.bb20.return_crit_edge77 ], [ %., %sw.bb26 ], [ %.63, %sw.bb29 ], [ %.64, %sw.bb32 ], [ %.67, %sw.bb36 ], [ -22, %sw.bb39.return_crit_edge ], [ %switch.load, %switch.lookup ], [ -22, %sw.bb23.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bpf_prog_alloc(i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @security_bpf_prog_alloc(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @get_uid(ptr noundef returned %u) unnamed_addr #7 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %u, i32 noundef 4) #19
  tail call void @llvm.prefetch.p0(ptr %u, i32 1, i32 3, i32 1) #19
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %u, ptr %u, i32 1, ptr elementtype(i32) %u) #19, !srcloc !331
  %asmresult.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %tobool1.not.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i, label %entry.if.end15.sink.split.i.i.i_crit_edge, label %if.else.i.i.i, !prof !219

entry.if.end15.sink.split.i.i.i_crit_edge:        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i:                                    ; preds = %entry
  %add.i.i.i = add i32 %asmresult.i.i.i.i.i, 1
  %1 = or i32 %add.i.i.i, %asmresult.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %1)
  %.not.i.i.i = icmp sgt i32 %1, -1
  br i1 %.not.i.i.i, label %if.else.i.i.i.refcount_inc.exit_crit_edge, label %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, !prof !220

if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end15.sink.split.i.i.i

if.else.i.i.i.refcount_inc.exit_crit_edge:        ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %refcount_inc.exit

if.end15.sink.split.i.i.i:                        ; preds = %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge, %entry.if.end15.sink.split.i.i.i_crit_edge
  %.sink.i.i.i = phi i32 [ 2, %entry.if.end15.sink.split.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.if.end15.sink.split.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %u, i32 noundef %.sink.i.i.i) #19
  br label %refcount_inc.exit

refcount_inc.exit:                                ; preds = %if.end15.sink.split.i.i.i, %if.else.i.i.i.refcount_inc.exit_crit_edge
  ret ptr %u
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_prog_offload_init(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_check(ptr noundef, ptr noundef, [2 x i32]) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bpf_prog_select_runtime(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_prog_alloc_id(ptr noundef %prog) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @idr_preload(i32 noundef 3264) #19
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @prog_idr_lock) #19
  %call = tail call i32 @idr_alloc_cyclic(ptr noundef nonnull @prog_idr, ptr noundef %prog, i32 noundef 1, i32 noundef 2147483647, i32 noundef 2592) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp sgt i32 %call, 0
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 10
  %0 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %aux, align 4
  %id1 = getelementptr inbounds %struct.bpf_prog_aux, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %id1 to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 %call, ptr %id1, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @prog_idr_lock) #19
  %3 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 3
  %5 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %6
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %8, ptrtoint (ptr @radix_tree_preloads to i32)
  %9 = inttoptr i32 %add.i to ptr
  tail call fastcc void @local_lock_release(ptr noundef %9) #19
  tail call void asm sideeffect "", "~{memory}"() #19, !srcloc !252
  %10 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %13, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %if.end42

land.rhs:                                         ; preds = %if.end
  %.b51 = load i1, ptr @bpf_prog_alloc_id.__already_done, align 1
  br i1 %.b51, label %land.rhs.cleanup_crit_edge, label %if.then10, !prof !220

land.rhs.cleanup_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.then10:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @bpf_prog_alloc_id.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 1739, i32 noundef 9, ptr noundef null) #19
  br label %cleanup

if.end42:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %14 = tail call i32 @llvm.smin.i32(i32 %call, i32 0)
  br label %cleanup

cleanup:                                          ; preds = %if.end42, %if.then10, %land.rhs.cleanup_crit_edge
  %retval.0 = phi i32 [ %14, %if.end42 ], [ -28, %if.then10 ], [ -28, %land.rhs.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_prog_kallsyms_add(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strnlen(ptr nocapture noundef, i32 noundef) local_unnamed_addr #15

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @strncpy_from_user(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i64 @ktime_get_with_offset(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_obj_pin_user(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_obj_get_user(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc i32 @attach_type_to_prog_type(i32 noundef %attach_type) unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 39, i32 %attach_type)
  %0 = icmp ult i32 %attach_type, 39
  br i1 %0, label %switch.lookup, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

switch.lookup:                                    ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %switch.gep = getelementptr inbounds [39 x i32], ptr @switch.table.attach_type_to_prog_type, i32 0, i32 %attach_type
  %1 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %1)
  %switch.load = load i32, ptr %switch.gep, align 4
  br label %return

return:                                           ; preds = %switch.lookup, %entry.return_crit_edge
  %retval.0 = phi i32 [ %switch.load, %switch.lookup ], [ 0, %entry.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_map_get_from_fd(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lirc_prog_attach(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netns_bpf_prog_attach(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @cgroup_bpf_prog_attach(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sock_map_prog_detach(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lirc_prog_detach(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netns_bpf_prog_detach(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @cgroup_bpf_prog_detach(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @cgroup_bpf_prog_query(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lirc_prog_query(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netns_bpf_prog_query(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @from_kuid_munged(ptr noundef, [1 x i32]) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @bpf_insn_prepare_dump(ptr noundef %prog, ptr noundef %f_cred) unnamed_addr #0 align 64 {
entry:
  %off = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %off) #19
  %0 = ptrtoint ptr %off to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %off, align 4, !annotation !244
  %insnsi = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 1
  %len.i = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 4
  %1 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %len.i, align 4
  %mul.i = shl i32 %2, 3
  %call1 = tail call ptr @kmemdup(ptr noundef %insnsi, i32 noundef %mul.i, i32 noundef 1051840) #19
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %for.cond.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

for.cond.preheader:                               ; preds = %entry
  %3 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %len.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %cmp120.not = icmp eq i32 %4, 0
  br i1 %cmp120.not, label %for.cond.preheader.cleanup_crit_edge, label %for.body.lr.ph

for.cond.preheader.cleanup_crit_edge:             ; preds = %for.cond.preheader
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %aux.i = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 10
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.0122 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc.for.body_crit_edge ]
  %type.0121 = phi i32 [ -1, %for.body.lr.ph ], [ %type.2, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr %struct.bpf_insn, ptr %call1, i32 %i.0122
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load1_noabort(i32 %5)
  %6 = load i8, ptr %arrayidx, align 4
  %7 = zext i8 %6 to i64
  call void @__sanitizer_cov_trace_switch(i64 %7, ptr @__sancov_gen_cov_switch_values.95)
  switch i8 %6, label %if.end30 [
    i8 -11, label %if.end45.thread
    i8 -27, label %if.then21
    i8 -123, label %for.body.if.end24_crit_edge
  ]

for.body.if.end24_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end24

if.end45.thread:                                  ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #21
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %8)
  store i8 -123, ptr %arrayidx, align 4
  %imm9 = getelementptr %struct.bpf_insn, ptr %call1, i32 %i.0122, i32 3
  %9 = ptrtoint ptr %imm9 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 12, ptr %imm9, align 4
  br label %for.inc

if.then21:                                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #21
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %10)
  store i8 -123, ptr %arrayidx, align 4
  br label %if.end24

if.end24:                                         ; preds = %if.then21, %for.body.if.end24_crit_edge
  %call.i = call zeroext i1 @kallsyms_show_value(ptr noundef %f_cred) #19
  br i1 %call.i, label %if.end24.for.inc_crit_edge, label %if.then26

if.end24.for.inc_crit_edge:                       ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.inc

if.then26:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #21
  %imm28 = getelementptr %struct.bpf_insn, ptr %call1, i32 %i.0122, i32 3
  %11 = ptrtoint ptr %imm28 to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %imm28, align 4
  br label %for.inc

if.end30:                                         ; preds = %for.body
  %12 = and i8 %6, -25
  call void @__sanitizer_cov_trace_const_cmp1(i8 33, i8 %12)
  %13 = icmp eq i8 %12, 33
  br i1 %13, label %if.then38, label %if.end45

if.then38:                                        ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #21
  %and40 = and i8 %6, 24
  %or41 = or i8 %and40, 97
  %14 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 %or41, ptr %arrayidx, align 4
  br label %for.inc

if.end45:                                         ; preds = %if.end30
  call void @__sanitizer_cov_trace_const_cmp1(i8 24, i8 %6)
  %cmp47.not = icmp eq i8 %6, 24
  br i1 %cmp47.not, label %if.end50, label %if.end45.for.inc_crit_edge

if.end45.for.inc_crit_edge:                       ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.inc

if.end50:                                         ; preds = %if.end45
  %imm55 = getelementptr %struct.bpf_insn, ptr %call1, i32 %i.0122, i32 3
  %15 = ptrtoint ptr %imm55 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %imm55, align 4
  %17 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %aux.i, align 4
  %used_maps_mutex.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %18, i32 0, i32 39
  call void @mutex_lock_nested(ptr noundef %used_maps_mutex.i, i32 noundef 0) #19
  %19 = ptrtoint ptr %off to i32
  call void @__asan_store4_noabort(i32 %19)
  store i32 0, ptr %off, align 4
  %20 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %aux.i, align 4
  %used_map_cnt27.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %used_map_cnt27.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %used_map_cnt27.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %23)
  %cmp28.not.i = icmp eq i32 %23, 0
  br i1 %cmp28.not.i, label %if.end50.bpf_map_from_imm.exit_crit_edge, label %for.body.lr.ph.i

if.end50.bpf_map_from_imm.exit_crit_edge:         ; preds = %if.end50
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_from_imm.exit

for.body.lr.ph.i:                                 ; preds = %if.end50
  %24 = inttoptr i32 %16 to ptr
  %conv.i = zext i32 %16 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %25 = phi ptr [ %21, %for.body.lr.ph.i ], [ %35, %for.inc.i.for.body.i_crit_edge ]
  %i.029.i = phi i32 [ 0, %for.body.lr.ph.i ], [ %inc.i, %for.inc.i.for.body.i_crit_edge ]
  %used_maps.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %25, i32 0, i32 38
  %26 = ptrtoint ptr %used_maps.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %used_maps.i, align 8
  %arrayidx.i = getelementptr ptr, ptr %27, i32 %i.029.i
  %28 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %arrayidx.i, align 4
  %cmp3.i = icmp eq ptr %29, %24
  br i1 %cmp3.i, label %for.body.i.bpf_map_from_imm.exit_crit_edge, label %if.end.i

for.body.i.bpf_map_from_imm.exit_crit_edge:       ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_from_imm.exit

if.end.i:                                         ; preds = %for.body.i
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %29, align 128
  %map_direct_value_meta.i = getelementptr inbounds %struct.bpf_map_ops, ptr %31, i32 0, i32 28
  %32 = ptrtoint ptr %map_direct_value_meta.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %map_direct_value_meta.i, align 4
  %tobool.not.i = icmp eq ptr %33, null
  br i1 %tobool.not.i, label %if.end.i.for.inc.i_crit_edge, label %if.end5.i

if.end.i.for.inc.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.inc.i

if.end5.i:                                        ; preds = %if.end.i
  %call.i113 = call i32 %33(ptr noundef %29, i64 noundef %conv.i, ptr noundef nonnull %off) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i113)
  %tobool8.not.i = icmp eq i32 %call.i113, 0
  br i1 %tobool8.not.i, label %if.end5.i.bpf_map_from_imm.exit_crit_edge, label %if.end5.i.for.inc.i_crit_edge

if.end5.i.for.inc.i_crit_edge:                    ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.inc.i

if.end5.i.bpf_map_from_imm.exit_crit_edge:        ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_from_imm.exit

for.inc.i:                                        ; preds = %if.end5.i.for.inc.i_crit_edge, %if.end.i.for.inc.i_crit_edge
  %inc.i = add nuw i32 %i.029.i, 1
  %34 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %aux.i, align 4
  %used_map_cnt.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %used_map_cnt.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %used_map_cnt.i, align 8
  %cmp.i = icmp ult i32 %inc.i, %37
  br i1 %cmp.i, label %for.inc.i.for.body.i_crit_edge, label %for.inc.i.bpf_map_from_imm.exit_crit_edge

for.inc.i.bpf_map_from_imm.exit_crit_edge:        ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_map_from_imm.exit

for.inc.i.for.body.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.body.i

bpf_map_from_imm.exit:                            ; preds = %for.inc.i.bpf_map_from_imm.exit_crit_edge, %if.end5.i.bpf_map_from_imm.exit_crit_edge, %for.body.i.bpf_map_from_imm.exit_crit_edge, %if.end50.bpf_map_from_imm.exit_crit_edge
  %type.1 = phi i32 [ %type.0121, %if.end50.bpf_map_from_imm.exit_crit_edge ], [ 2, %if.end5.i.bpf_map_from_imm.exit_crit_edge ], [ 1, %for.body.i.bpf_map_from_imm.exit_crit_edge ], [ %type.0121, %for.inc.i.bpf_map_from_imm.exit_crit_edge ]
  %map.0.i = phi ptr [ null, %if.end50.bpf_map_from_imm.exit_crit_edge ], [ %29, %if.end5.i.bpf_map_from_imm.exit_crit_edge ], [ %24, %for.body.i.bpf_map_from_imm.exit_crit_edge ], [ null, %for.inc.i.bpf_map_from_imm.exit_crit_edge ]
  %38 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %aux.i, align 4
  %used_maps_mutex12.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %39, i32 0, i32 39
  call void @mutex_unlock(ptr noundef %used_maps_mutex12.i) #19
  %tobool60.not = icmp eq ptr %map.0.i, null
  br i1 %tobool60.not, label %bpf_map_from_imm.exit.for.inc_crit_edge, label %if.then61

bpf_map_from_imm.exit.for.inc_crit_edge:          ; preds = %bpf_map_from_imm.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.inc

if.then61:                                        ; preds = %bpf_map_from_imm.exit
  call void @__sanitizer_cov_trace_pc() #21
  %add = add nuw i32 %i.0122, 1
  %imm52 = getelementptr %struct.bpf_insn, ptr %call1, i32 %add, i32 3
  %conv62 = trunc i32 %type.1 to i8
  %src_reg = getelementptr %struct.bpf_insn, ptr %call1, i32 %i.0122, i32 1
  %40 = ptrtoint ptr %src_reg to i32
  call void @__asan_load1_noabort(i32 %40)
  %bf.load = load i8, ptr %src_reg, align 1
  %bf.value = and i8 %conv62, 15
  %bf.clear = and i8 %bf.load, -16
  %bf.set = or i8 %bf.clear, %bf.value
  store i8 %bf.set, ptr %src_reg, align 1
  %id = getelementptr inbounds %struct.bpf_map, ptr %map.0.i, i32 0, i32 11
  %41 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %id, align 4
  %43 = ptrtoint ptr %imm55 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %42, ptr %imm55, align 4
  %44 = ptrtoint ptr %off to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load i32, ptr %off, align 4
  %46 = ptrtoint ptr %imm52 to i32
  call void @__asan_store4_noabort(i32 %46)
  store i32 %45, ptr %imm52, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then61, %bpf_map_from_imm.exit.for.inc_crit_edge, %if.end45.for.inc_crit_edge, %if.then38, %if.then26, %if.end24.for.inc_crit_edge, %if.end45.thread
  %type.2 = phi i32 [ %type.0121, %if.then38 ], [ %type.1, %bpf_map_from_imm.exit.for.inc_crit_edge ], [ %type.1, %if.then61 ], [ %type.0121, %if.end45.for.inc_crit_edge ], [ %type.0121, %if.end24.for.inc_crit_edge ], [ %type.0121, %if.then26 ], [ %type.0121, %if.end45.thread ]
  %inc = add nuw i32 %i.0122, 1
  %47 = ptrtoint ptr %len.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %len.i, align 4
  %cmp = icmp ult i32 %inc, %48
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.cleanup_crit_edge

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #21
  br label %for.body

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %for.cond.preheader.cleanup_crit_edge, %entry.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %off) #19
  ret ptr %call1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_prog_offload_info_fill(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btf_obj_id(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @kallsyms_show_value(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmemdup(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_map_offload_info_fill(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btf_get_info_by_fd(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_tracing_prog_attach(ptr noundef %prog, i32 noundef %tgt_prog_fd, i32 noundef %btf_id) unnamed_addr #0 align 64 {
entry:
  %link_primer = alloca %struct.bpf_link_primer, align 4
  %tgt_info = alloca %struct.bpf_attach_target_info, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %link_primer) #19
  %type = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 2
  %0 = call ptr @memset(ptr %link_primer, i32 255, i32 16)
  %1 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %type, align 4
  %3 = zext i32 %2 to i64
  call void @__sanitizer_cov_trace_switch(i64 %3, ptr @__sancov_gen_cov_switch_values.96)
  switch i32 %2, label %entry.cleanup136_crit_edge [
    i32 26, label %sw.bb
    i32 28, label %sw.bb6
    i32 29, label %sw.bb11
  ]

entry.cleanup136_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup136

sw.bb:                                            ; preds = %entry
  %expected_attach_type = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 3
  %4 = ptrtoint ptr %expected_attach_type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %expected_attach_type, align 4
  %.off = add i32 %5, -24
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %.off)
  %switch212 = icmp ult i32 %.off, 3
  br i1 %switch212, label %sw.bb.sw.epilog_crit_edge, label %sw.bb.cleanup136_crit_edge

sw.bb.cleanup136_crit_edge:                       ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup136

sw.bb.sw.epilog_crit_edge:                        ; preds = %sw.bb
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.epilog

sw.bb6:                                           ; preds = %entry
  %expected_attach_type7 = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 3
  %6 = ptrtoint ptr %expected_attach_type7 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %expected_attach_type7, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %cmp8.not = icmp eq i32 %7, 0
  br i1 %cmp8.not, label %sw.bb6.sw.epilog_crit_edge, label %sw.bb6.cleanup136_crit_edge

sw.bb6.cleanup136_crit_edge:                      ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup136

sw.bb6.sw.epilog_crit_edge:                       ; preds = %sw.bb6
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.epilog

sw.bb11:                                          ; preds = %entry
  %expected_attach_type12 = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 3
  %8 = ptrtoint ptr %expected_attach_type12 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %expected_attach_type12, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 27, i32 %9)
  %cmp13.not = icmp eq i32 %9, 27
  br i1 %cmp13.not, label %sw.bb11.sw.epilog_crit_edge, label %sw.bb11.cleanup136_crit_edge

sw.bb11.cleanup136_crit_edge:                     ; preds = %sw.bb11
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup136

sw.bb11.sw.epilog_crit_edge:                      ; preds = %sw.bb11
  call void @__sanitizer_cov_trace_pc() #21
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb11.sw.epilog_crit_edge, %sw.bb6.sw.epilog_crit_edge, %sw.bb.sw.epilog_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %tgt_prog_fd)
  %tobool = icmp ne i32 %tgt_prog_fd, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %btf_id)
  %tobool17 = icmp eq i32 %btf_id, 0
  %cmp22.not = xor i1 %tobool, %tobool17
  br i1 %cmp22.not, label %if.end24, label %sw.epilog.cleanup136_crit_edge

sw.epilog.cleanup136_crit_edge:                   ; preds = %sw.epilog
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup136

if.end24:                                         ; preds = %sw.epilog
  br i1 %tobool, label %if.then26, label %if.end24.if.end36_crit_edge

if.end24.if.end36_crit_edge:                      ; preds = %if.end24
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end36

if.then26:                                        ; preds = %if.end24
  call void @__sanitizer_cov_trace_const_cmp4(i32 28, i32 %2)
  %cmp28.not = icmp eq i32 %2, 28
  br i1 %cmp28.not, label %if.end30, label %if.then26.cleanup136_crit_edge

if.then26.cleanup136_crit_edge:                   ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup136

if.end30:                                         ; preds = %if.then26
  %call.i.i.i = tail call i32 @__fdget(i32 noundef %tgt_prog_fd) #19, !noalias !332
  %and.i.i.i.i = and i32 %call.i.i.i, -4
  %10 = inttoptr i32 %and.i.i.i.i to ptr
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.end30.if.then32_crit_edge, label %if.end.i.i.i

if.end30.if.then32_crit_edge:                     ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then32

if.end.i.i.i:                                     ; preds = %if.end30
  %f_op.i.i.i = getelementptr inbounds %struct.file, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %f_op.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %f_op.i.i.i, align 4
  %cmp.not.i.i.i = icmp eq ptr %12, @bpf_prog_fops
  br i1 %cmp.not.i.i.i, label %____bpf_prog_get.exit.i.i, label %if.then2.i.i.i

if.then2.i.i.i:                                   ; preds = %if.end.i.i.i
  %and.i.i17.i.i = and i32 %call.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i17.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %and.i.i17.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %if.then2.i.i.i.if.then32_crit_edge, label %if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge

if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge:  ; preds = %if.then2.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i.i

if.then2.i.i.i.if.then32_crit_edge:               ; preds = %if.then2.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then32

____bpf_prog_get.exit.i.i:                        ; preds = %if.end.i.i.i
  %private_data.i.i.i = getelementptr inbounds %struct.file, ptr %10, i32 0, i32 16
  %13 = ptrtoint ptr %private_data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %private_data.i.i.i, align 4
  %cmp.i.i.i = icmp ugt ptr %14, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge, label %if.end.i.i

____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge: ; preds = %____bpf_prog_get.exit.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get.exit

if.end.i.i:                                       ; preds = %____bpf_prog_get.exit.i.i
  %aux.i22.i.i = getelementptr inbounds %struct.bpf_prog, ptr %14, i32 0, i32 10
  %15 = ptrtoint ptr %aux.i22.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %aux.i22.i.i, align 4
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %16, i32 noundef 8) #19
  tail call void @generic_atomic64_add(i64 noundef 1, ptr noundef %16) #19
  %and.i.i.i = and i32 %call.i.i.i, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i23.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i23.i.i, label %if.end.i.i.bpf_prog_get.exit_crit_edge, label %if.end.i.i.cleanup.sink.split.i.i_crit_edge

if.end.i.i.cleanup.sink.split.i.i_crit_edge:      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.sink.split.i.i

if.end.i.i.bpf_prog_get.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_prog_get.exit

cleanup.sink.split.i.i:                           ; preds = %if.end.i.i.cleanup.sink.split.i.i_crit_edge, %if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge
  %retval.0.ph.i.i = phi ptr [ inttoptr (i32 -22 to ptr), %if.then2.i.i.i.cleanup.sink.split.i.i_crit_edge ], [ %14, %if.end.i.i.cleanup.sink.split.i.i_crit_edge ]
  tail call void @fput(ptr noundef nonnull %10) #19
  br label %bpf_prog_get.exit

bpf_prog_get.exit:                                ; preds = %cleanup.sink.split.i.i, %if.end.i.i.bpf_prog_get.exit_crit_edge, %____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge
  %retval.0.i.i = phi ptr [ %14, %____bpf_prog_get.exit.i.i.bpf_prog_get.exit_crit_edge ], [ %14, %if.end.i.i.bpf_prog_get.exit_crit_edge ], [ %retval.0.ph.i.i, %cleanup.sink.split.i.i ]
  %cmp.i = icmp ugt ptr %retval.0.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %bpf_prog_get.exit.if.then32_crit_edge, label %if.end34

bpf_prog_get.exit.if.then32_crit_edge:            ; preds = %bpf_prog_get.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then32

if.then32:                                        ; preds = %bpf_prog_get.exit.if.then32_crit_edge, %if.then2.i.i.i.if.then32_crit_edge, %if.end30.if.then32_crit_edge
  %retval.0.i.i227 = phi ptr [ %retval.0.i.i, %bpf_prog_get.exit.if.then32_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.end30.if.then32_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then2.i.i.i.if.then32_crit_edge ]
  %17 = ptrtoint ptr %retval.0.i.i227 to i32
  br label %cleanup136

if.end34:                                         ; preds = %bpf_prog_get.exit
  %tobool.not.i = icmp eq ptr %retval.0.i.i, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #21
  %aux.i = getelementptr inbounds %struct.bpf_prog, ptr %retval.0.i.i, i32 0, i32 10
  %18 = ptrtoint ptr %aux.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %aux.i, align 4
  %id.i = getelementptr inbounds %struct.bpf_prog_aux, ptr %19, i32 0, i32 7
  %20 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %id.i, align 8
  %conv.i = zext i32 %21 to i64
  %shl.i = shl nuw i64 %conv.i, 32
  %conv1.i = zext i32 %btf_id to i64
  %or.i = or i64 %shl.i, %conv1.i
  br label %if.end36

if.else.i:                                        ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #21
  %call.i = tail call i32 @btf_obj_id(ptr noundef null) #19
  %conv2.i = zext i32 %call.i to i64
  %shl3.i = shl nuw i64 %conv2.i, 32
  %conv5.i = zext i32 %btf_id to i64
  %or4.i = or i64 %shl3.i, %conv5.i
  %or6.i = or i64 %or4.i, 2147483648
  br label %if.end36

if.end36:                                         ; preds = %if.else.i, %if.then.i, %if.end24.if.end36_crit_edge
  %tgt_prog.0 = phi ptr [ null, %if.end24.if.end36_crit_edge ], [ %retval.0.i.i, %if.then.i ], [ null, %if.else.i ]
  %key.0 = phi i64 [ 0, %if.end24.if.end36_crit_edge ], [ %or.i, %if.then.i ], [ %or6.i, %if.else.i ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %22 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %22, i32 noundef 1052096, i32 noundef 88) #27
  %tobool38.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool38.not, label %if.end36.out_put_prog_crit_edge, label %if.end40

if.end36.out_put_prog_crit_edge:                  ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #21
  br label %out_put_prog

if.end40:                                         ; preds = %if.end36
  %call.i.i.i215 = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call7.i.i, i32 noundef 8) #19
  tail call void @generic_atomic64_set(ptr noundef nonnull %call7.i.i, i64 noundef 1) #19
  %type1.i = getelementptr inbounds %struct.bpf_link, ptr %call7.i.i, i32 0, i32 2
  %23 = ptrtoint ptr %type1.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 2, ptr %type1.i, align 4
  %id.i216 = getelementptr inbounds %struct.bpf_link, ptr %call7.i.i, i32 0, i32 1
  %24 = ptrtoint ptr %id.i216 to i32
  call void @__asan_store4_noabort(i32 %24)
  store i32 0, ptr %id.i216, align 8
  %ops2.i = getelementptr inbounds %struct.bpf_link, ptr %call7.i.i, i32 0, i32 3
  %25 = ptrtoint ptr %ops2.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr @bpf_tracing_link_lops, ptr %ops2.i, align 8
  %prog3.i = getelementptr inbounds %struct.bpf_link, ptr %call7.i.i, i32 0, i32 4
  %26 = ptrtoint ptr %prog3.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %prog, ptr %prog3.i, align 4
  %expected_attach_type42 = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 3
  %27 = ptrtoint ptr %expected_attach_type42 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %expected_attach_type42, align 4
  %attach_type = getelementptr inbounds %struct.bpf_tracing_link, ptr %call7.i.i, i32 0, i32 1
  %29 = ptrtoint ptr %attach_type to i32
  call void @__asan_store4_noabort(i32 %29)
  store i32 %28, ptr %attach_type, align 8
  %aux = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 10
  %30 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %aux, align 4
  %dst_mutex = getelementptr inbounds %struct.bpf_prog_aux, ptr %31, i32 0, i32 16
  tail call void @mutex_lock_nested(ptr noundef %dst_mutex, i32 noundef 0) #19
  %32 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %aux, align 4
  %dst_trampoline = getelementptr inbounds %struct.bpf_prog_aux, ptr %33, i32 0, i32 18
  %34 = ptrtoint ptr %dst_trampoline to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %dst_trampoline, align 4
  %tobool44.not = icmp eq ptr %35, null
  %tobool46.not = icmp eq ptr %tgt_prog.0, null
  %or.cond = and i1 %tobool46.not, %tobool44.not
  br i1 %or.cond, label %if.then47, label %if.end40.if.end58_crit_edge

if.end40.if.end58_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end58

if.then47:                                        ; preds = %if.end40
  %36 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %type, align 4
  %38 = zext i32 %37 to i64
  call void @__sanitizer_cov_trace_switch(i64 %38, ptr @__sancov_gen_cov_switch_values.97)
  switch i32 %37, label %if.then47.if.end128_crit_edge [
    i32 26, label %if.then47.if.end54_crit_edge
    i32 29, label %if.then47.if.end54_crit_edge245
  ]

if.then47.if.end54_crit_edge245:                  ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end54

if.then47.if.end54_crit_edge:                     ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end54

if.then47.if.end128_crit_edge:                    ; preds = %if.then47
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end128

if.end54:                                         ; preds = %if.then47.if.end54_crit_edge, %if.then47.if.end54_crit_edge245
  %attach_btf_id = getelementptr inbounds %struct.bpf_prog_aux, ptr %33, i32 0, i32 10
  %39 = ptrtoint ptr %attach_btf_id to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %attach_btf_id, align 4
  %attach_btf = getelementptr inbounds %struct.bpf_prog_aux, ptr %33, i32 0, i32 14
  %41 = ptrtoint ptr %attach_btf to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %attach_btf, align 4
  %call.i217 = tail call i32 @btf_obj_id(ptr noundef %42) #19
  %conv2.i218 = zext i32 %call.i217 to i64
  %shl3.i219 = shl nuw i64 %conv2.i218, 32
  %conv5.i220 = zext i32 %40 to i64
  %or4.i221 = or i64 %shl3.i219, %conv5.i220
  %or6.i222 = or i64 %or4.i221, 2147483648
  br label %if.end58

if.end58:                                         ; preds = %if.end54, %if.end40.if.end58_crit_edge
  %btf_id.addr.0 = phi i32 [ %btf_id, %if.end40.if.end58_crit_edge ], [ %40, %if.end54 ]
  %key.1 = phi i64 [ %key.0, %if.end40.if.end58_crit_edge ], [ %or6.i222, %if.end54 ]
  %43 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %aux, align 4
  %dst_trampoline60 = getelementptr inbounds %struct.bpf_prog_aux, ptr %44, i32 0, i32 18
  %45 = ptrtoint ptr %dst_trampoline60 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %dst_trampoline60, align 4
  %tobool61.not = icmp eq ptr %46, null
  br i1 %tobool61.not, label %if.end58.if.then68_crit_edge, label %lor.lhs.false

if.end58.if.then68_crit_edge:                     ; preds = %if.end58
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then68

lor.lhs.false:                                    ; preds = %if.end58
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %key.1)
  %tobool62.not = icmp eq i64 %key.1, 0
  br i1 %tobool62.not, label %lor.lhs.false.if.else_crit_edge, label %land.lhs.true63

lor.lhs.false.if.else_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.else

land.lhs.true63:                                  ; preds = %lor.lhs.false
  %key66 = getelementptr inbounds %struct.bpf_trampoline, ptr %46, i32 0, i32 3
  %47 = ptrtoint ptr %key66 to i32
  call void @__asan_load8_noabort(i32 %47)
  %48 = load i64, ptr %key66, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %key.1, i64 %48)
  %cmp67.not = icmp eq i64 %key.1, %48
  br i1 %cmp67.not, label %land.lhs.true63.if.else_crit_edge, label %land.lhs.true63.if.then68_crit_edge

land.lhs.true63.if.then68_crit_edge:              ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then68

land.lhs.true63.if.else_crit_edge:                ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.else

if.then68:                                        ; preds = %land.lhs.true63.if.then68_crit_edge, %if.end58.if.then68_crit_edge
  call void @llvm.lifetime.start.p0(i64 28, ptr nonnull %tgt_info) #19
  %49 = call ptr @memset(ptr %tgt_info, i32 0, i32 28)
  %call69 = call i32 @bpf_check_attach_target(ptr noundef null, ptr noundef %prog, ptr noundef %tgt_prog.0, i32 noundef %btf_id.addr.0, ptr noundef nonnull %tgt_info) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call69)
  %tobool70.not = icmp eq i32 %call69, 0
  br i1 %tobool70.not, label %if.end72, label %if.then68.cleanup.thread_crit_edge

if.then68.cleanup.thread_crit_edge:               ; preds = %if.then68
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.thread

if.end72:                                         ; preds = %if.then68
  %call73 = call ptr @bpf_trampoline_get(i64 noundef %key.1, ptr noundef nonnull %tgt_info) #19
  %tobool74.not = icmp eq ptr %call73, null
  br i1 %tobool74.not, label %if.end72.cleanup.thread_crit_edge, label %cleanup

if.end72.cleanup.thread_crit_edge:                ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup.thread

cleanup.thread:                                   ; preds = %if.end72.cleanup.thread_crit_edge, %if.then68.cleanup.thread_crit_edge
  %err.0.ph = phi i32 [ %call69, %if.then68.cleanup.thread_crit_edge ], [ -12, %if.end72.cleanup.thread_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %tgt_info) #19
  br label %if.end128

cleanup:                                          ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.lifetime.end.p0(i64 28, ptr nonnull %tgt_info) #19
  br label %if.end80

if.else:                                          ; preds = %land.lhs.true63.if.else_crit_edge, %lor.lhs.false.if.else_crit_edge
  %dst_prog = getelementptr inbounds %struct.bpf_prog_aux, ptr %44, i32 0, i32 17
  %50 = ptrtoint ptr %dst_prog to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %dst_prog, align 8
  br label %if.end80

if.end80:                                         ; preds = %if.else, %cleanup
  %tgt_prog.1 = phi ptr [ %tgt_prog.0, %cleanup ], [ %51, %if.else ]
  %tr.1 = phi ptr [ %call73, %cleanup ], [ %46, %if.else ]
  %call82 = call i32 @bpf_link_prime(ptr noundef nonnull %call7.i.i, ptr noundef nonnull %link_primer)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call82)
  %tobool83.not = icmp eq i32 %call82, 0
  br i1 %tobool83.not, label %if.end85, label %if.end80.land.lhs.true123_crit_edge

if.end80.land.lhs.true123_crit_edge:              ; preds = %if.end80
  call void @__sanitizer_cov_trace_pc() #21
  br label %land.lhs.true123

if.end85:                                         ; preds = %if.end80
  %call86 = call i32 @bpf_trampoline_link_prog(ptr noundef %prog, ptr noundef nonnull %tr.1) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call86)
  %tobool87.not = icmp eq i32 %call86, 0
  br i1 %tobool87.not, label %if.end89, label %if.then88

if.then88:                                        ; preds = %if.end85
  call void @__sanitizer_cov_trace_pc() #21
  call void @bpf_link_cleanup(ptr noundef nonnull %link_primer)
  br label %land.lhs.true123

if.end89:                                         ; preds = %if.end85
  %tgt_prog90 = getelementptr inbounds %struct.bpf_tracing_link, ptr %call7.i.i, i32 0, i32 3
  %52 = ptrtoint ptr %tgt_prog90 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %tgt_prog.1, ptr %tgt_prog90, align 8
  %trampoline = getelementptr inbounds %struct.bpf_tracing_link, ptr %call7.i.i, i32 0, i32 2
  %53 = ptrtoint ptr %trampoline to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %tr.1, ptr %trampoline, align 4
  %54 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %aux, align 4
  %dst_prog92 = getelementptr inbounds %struct.bpf_prog_aux, ptr %55, i32 0, i32 17
  %56 = ptrtoint ptr %dst_prog92 to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %dst_prog92, align 8
  %tobool93.not = icmp eq ptr %57, null
  br i1 %tobool93.not, label %if.end89.if.end103_crit_edge, label %land.lhs.true94

if.end89.if.end103_crit_edge:                     ; preds = %if.end89
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end103

land.lhs.true94:                                  ; preds = %if.end89
  br i1 %tobool, label %land.lhs.true94.if.then100_crit_edge, label %lor.lhs.false96

land.lhs.true94.if.then100_crit_edge:             ; preds = %land.lhs.true94
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then100

lor.lhs.false96:                                  ; preds = %land.lhs.true94
  %dst_trampoline98 = getelementptr inbounds %struct.bpf_prog_aux, ptr %55, i32 0, i32 18
  %58 = ptrtoint ptr %dst_trampoline98 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %dst_trampoline98, align 4
  %cmp99.not = icmp eq ptr %tr.1, %59
  br i1 %cmp99.not, label %lor.lhs.false96.if.end103_crit_edge, label %lor.lhs.false96.if.then100_crit_edge

lor.lhs.false96.if.then100_crit_edge:             ; preds = %lor.lhs.false96
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.then100

lor.lhs.false96.if.end103_crit_edge:              ; preds = %lor.lhs.false96
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end103

if.then100:                                       ; preds = %lor.lhs.false96.if.then100_crit_edge, %land.lhs.true94.if.then100_crit_edge
  call void @bpf_prog_put(ptr noundef nonnull %57)
  br label %if.end103

if.end103:                                        ; preds = %if.then100, %lor.lhs.false96.if.end103_crit_edge, %if.end89.if.end103_crit_edge
  %60 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %aux, align 4
  %dst_trampoline105 = getelementptr inbounds %struct.bpf_prog_aux, ptr %61, i32 0, i32 18
  %62 = ptrtoint ptr %dst_trampoline105 to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %dst_trampoline105, align 4
  %tobool106.not = icmp eq ptr %63, null
  %cmp110.not = icmp eq ptr %tr.1, %63
  %or.cond210 = select i1 %tobool106.not, i1 true, i1 %cmp110.not
  br i1 %or.cond210, label %if.end103.if.end114_crit_edge, label %if.then111

if.end103.if.end114_crit_edge:                    ; preds = %if.end103
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end114

if.then111:                                       ; preds = %if.end103
  call void @__sanitizer_cov_trace_pc() #21
  call void @bpf_trampoline_put(ptr noundef nonnull %63) #19
  br label %if.end114

if.end114:                                        ; preds = %if.then111, %if.end103.if.end114_crit_edge
  %64 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %aux, align 4
  %dst_prog116 = getelementptr inbounds %struct.bpf_prog_aux, ptr %65, i32 0, i32 17
  %66 = ptrtoint ptr %dst_prog116 to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr null, ptr %dst_prog116, align 8
  %67 = load ptr, ptr %aux, align 4
  %dst_trampoline118 = getelementptr inbounds %struct.bpf_prog_aux, ptr %67, i32 0, i32 18
  %68 = ptrtoint ptr %dst_trampoline118 to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr null, ptr %dst_trampoline118, align 4
  %69 = load ptr, ptr %aux, align 4
  %dst_mutex120 = getelementptr inbounds %struct.bpf_prog_aux, ptr %69, i32 0, i32 16
  call void @mutex_unlock(ptr noundef %dst_mutex120) #19
  %call121 = call i32 @bpf_link_settle(ptr noundef nonnull %link_primer)
  br label %cleanup136

land.lhs.true123:                                 ; preds = %if.then88, %if.end80.land.lhs.true123_crit_edge
  %link.0 = phi ptr [ %call7.i.i, %if.end80.land.lhs.true123_crit_edge ], [ null, %if.then88 ]
  %err.1 = phi i32 [ %call82, %if.end80.land.lhs.true123_crit_edge ], [ %call86, %if.then88 ]
  %70 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load ptr, ptr %aux, align 4
  %dst_trampoline125 = getelementptr inbounds %struct.bpf_prog_aux, ptr %71, i32 0, i32 18
  %72 = ptrtoint ptr %dst_trampoline125 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %dst_trampoline125, align 4
  %cmp126.not = icmp eq ptr %tr.1, %73
  br i1 %cmp126.not, label %land.lhs.true123.if.end128_crit_edge, label %if.then127

land.lhs.true123.if.end128_crit_edge:             ; preds = %land.lhs.true123
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end128

if.then127:                                       ; preds = %land.lhs.true123
  call void @__sanitizer_cov_trace_pc() #21
  call void @bpf_trampoline_put(ptr noundef nonnull %tr.1) #19
  br label %if.end128

if.end128:                                        ; preds = %if.then127, %land.lhs.true123.if.end128_crit_edge, %cleanup.thread, %if.then47.if.end128_crit_edge
  %err.1239 = phi i32 [ %err.1, %if.then127 ], [ %err.1, %land.lhs.true123.if.end128_crit_edge ], [ %err.0.ph, %cleanup.thread ], [ -22, %if.then47.if.end128_crit_edge ]
  %link.0238 = phi ptr [ %link.0, %if.then127 ], [ %link.0, %land.lhs.true123.if.end128_crit_edge ], [ %call7.i.i, %cleanup.thread ], [ %call7.i.i, %if.then47.if.end128_crit_edge ]
  %tgt_prog.2237 = phi ptr [ %tgt_prog.1, %if.then127 ], [ %tgt_prog.1, %land.lhs.true123.if.end128_crit_edge ], [ %tgt_prog.0, %cleanup.thread ], [ null, %if.then47.if.end128_crit_edge ]
  %74 = ptrtoint ptr %aux to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %aux, align 4
  %dst_mutex130 = getelementptr inbounds %struct.bpf_prog_aux, ptr %75, i32 0, i32 16
  call void @mutex_unlock(ptr noundef %dst_mutex130) #19
  call void @kfree(ptr noundef %link.0238) #19
  br label %out_put_prog

out_put_prog:                                     ; preds = %if.end128, %if.end36.out_put_prog_crit_edge
  %tgt_prog.3 = phi ptr [ %tgt_prog.2237, %if.end128 ], [ %tgt_prog.0, %if.end36.out_put_prog_crit_edge ]
  %err.2 = phi i32 [ %err.1239, %if.end128 ], [ -12, %if.end36.out_put_prog_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %tgt_prog_fd)
  %tobool131.not = icmp eq i32 %tgt_prog_fd, 0
  %tobool133.not = icmp eq ptr %tgt_prog.3, null
  %or.cond211 = select i1 %tobool131.not, i1 true, i1 %tobool133.not
  br i1 %or.cond211, label %out_put_prog.cleanup136_crit_edge, label %if.then134

out_put_prog.cleanup136_crit_edge:                ; preds = %out_put_prog
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup136

if.then134:                                       ; preds = %out_put_prog
  call void @__sanitizer_cov_trace_pc() #21
  call void @bpf_prog_put(ptr noundef nonnull %tgt_prog.3)
  br label %cleanup136

cleanup136:                                       ; preds = %if.then134, %out_put_prog.cleanup136_crit_edge, %if.end114, %if.then32, %if.then26.cleanup136_crit_edge, %sw.epilog.cleanup136_crit_edge, %sw.bb11.cleanup136_crit_edge, %sw.bb6.cleanup136_crit_edge, %sw.bb.cleanup136_crit_edge, %entry.cleanup136_crit_edge
  %retval.0 = phi i32 [ %call121, %if.end114 ], [ %err.2, %if.then134 ], [ %err.2, %out_put_prog.cleanup136_crit_edge ], [ -22, %if.then26.cleanup136_crit_edge ], [ -22, %sw.epilog.cleanup136_crit_edge ], [ -22, %entry.cleanup136_crit_edge ], [ -22, %sw.bb11.cleanup136_crit_edge ], [ -22, %sw.bb6.cleanup136_crit_edge ], [ -22, %sw.bb.cleanup136_crit_edge ], [ %17, %if.then32 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %link_primer) #19
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bpf_get_raw_tracepoint(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_probe_register(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_put_raw_tracepoint(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_check_attach_target(ptr noundef, ptr noundef, ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @bpf_trampoline_get(i64 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_trampoline_link_prog(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trampoline_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bpf_tracing_link_release(ptr nocapture noundef readonly %link) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %prog = getelementptr inbounds %struct.bpf_link, ptr %link, i32 0, i32 4
  %0 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %prog, align 4
  %trampoline = getelementptr inbounds %struct.bpf_tracing_link, ptr %link, i32 0, i32 2
  %2 = ptrtoint ptr %trampoline to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %trampoline, align 4
  %call = tail call i32 @bpf_trampoline_unlink_prog(ptr noundef %1, ptr noundef %3) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.if.end29_crit_edge, label %land.rhs

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b48 = load i1, ptr @bpf_tracing_link_release.__already_done, align 1
  br i1 %.b48, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !220

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @bpf_tracing_link_release.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.1, i32 noundef 2650, i32 noundef 9, ptr noundef null) #19
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %4 = ptrtoint ptr %trampoline to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %trampoline, align 4
  tail call void @bpf_trampoline_put(ptr noundef %5) #19
  %tgt_prog = getelementptr inbounds %struct.bpf_tracing_link, ptr %link, i32 0, i32 3
  %6 = ptrtoint ptr %tgt_prog to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tgt_prog, align 8
  %tobool38.not = icmp eq ptr %7, null
  br i1 %tobool38.not, label %if.end29.if.end41_crit_edge, label %if.then39

if.end29.if.end41_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end41

if.then39:                                        ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @bpf_prog_put(ptr noundef nonnull %7)
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %if.end29.if.end41_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bpf_tracing_link_dealloc(ptr noundef %link) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @kfree(ptr noundef %link) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bpf_tracing_link_show_fdinfo(ptr nocapture noundef readonly %link, ptr noundef %seq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %attach_type = getelementptr inbounds %struct.bpf_tracing_link, ptr %link, i32 0, i32 1
  %0 = ptrtoint ptr %attach_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %attach_type, align 8
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.58, i32 noundef %1) #19
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @bpf_tracing_link_fill_link_info(ptr nocapture noundef readonly %link, ptr noundef writeonly %info) #16 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %attach_type = getelementptr inbounds %struct.bpf_tracing_link, ptr %link, i32 0, i32 1
  %0 = ptrtoint ptr %attach_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %attach_type, align 8
  %2 = getelementptr inbounds %struct.bpf_link_info, ptr %info, i32 0, i32 3
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %1, ptr %2, align 8
  %trampoline = getelementptr inbounds %struct.bpf_tracing_link, ptr %link, i32 0, i32 2
  %4 = ptrtoint ptr %trampoline to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %trampoline, align 4
  %key = getelementptr inbounds %struct.bpf_trampoline, ptr %5, i32 0, i32 3
  %6 = ptrtoint ptr %key to i32
  call void @__asan_load8_noabort(i32 %6)
  %7 = load i64, ptr %key, align 8
  %target_obj_id = getelementptr inbounds %struct.anon.210, ptr %2, i32 0, i32 1
  %target_btf_id = getelementptr inbounds %struct.bpf_link_info, ptr %info, i32 0, i32 3, i32 0, i32 1
  %tobool.not.i = icmp eq ptr %target_obj_id, null
  br i1 %tobool.not.i, label %entry.if.end.i_crit_edge, label %if.then.i

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %shr.i = lshr i64 %7, 32
  %conv.i = trunc i64 %shr.i to i32
  %8 = ptrtoint ptr %target_obj_id to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %conv.i, ptr %target_obj_id, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %entry.if.end.i_crit_edge
  %tobool1.not.i = icmp eq ptr %target_btf_id, null
  br i1 %tobool1.not.i, label %if.end.i.bpf_trampoline_unpack_key.exit_crit_edge, label %if.then2.i

if.end.i.bpf_trampoline_unpack_key.exit_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_trampoline_unpack_key.exit

if.then2.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #21
  %9 = trunc i64 %7 to i32
  %conv3.i = and i32 %9, 2147483647
  %10 = ptrtoint ptr %target_btf_id to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %conv3.i, ptr %target_btf_id, align 4
  br label %bpf_trampoline_unpack_key.exit

bpf_trampoline_unpack_key.exit:                   ; preds = %if.then2.i, %if.end.i.bpf_trampoline_unpack_key.exit_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_trampoline_unlink_prog(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bpf_raw_tp_link_release(ptr nocapture noundef readonly %link) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %btp = getelementptr inbounds %struct.bpf_raw_tp_link, ptr %link, i32 0, i32 1
  %0 = ptrtoint ptr %btp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %btp, align 8
  %prog = getelementptr inbounds %struct.bpf_link, ptr %link, i32 0, i32 4
  %2 = ptrtoint ptr %prog to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prog, align 4
  %call = tail call i32 @bpf_probe_unregister(ptr noundef %1, ptr noundef %3) #19
  %4 = ptrtoint ptr %btp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %btp, align 8
  tail call void @bpf_put_raw_tracepoint(ptr noundef %5) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bpf_raw_tp_link_dealloc(ptr noundef %link) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @kfree(ptr noundef %link) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bpf_raw_tp_link_show_fdinfo(ptr nocapture noundef readonly %link, ptr noundef %seq) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %btp = getelementptr inbounds %struct.bpf_raw_tp_link, ptr %link, i32 0, i32 1
  %0 = ptrtoint ptr %btp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %btp, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 32
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.59, ptr noundef %5) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @bpf_raw_tp_link_fill_link_info(ptr nocapture noundef readonly %link, ptr nocapture noundef %info) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = getelementptr inbounds %struct.bpf_link_info, ptr %info, i32 0, i32 3
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_load8_noabort(i32 %1)
  %2 = load i64, ptr %0, align 8
  %conv3 = trunc i64 %2 to i32
  %3 = inttoptr i32 %conv3 to ptr
  %btp = getelementptr inbounds %struct.bpf_raw_tp_link, ptr %link, i32 0, i32 1
  %4 = ptrtoint ptr %btp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %btp, align 8
  %6 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %5, align 32
  %8 = ptrtoint ptr %7 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %7, align 4
  %tp_name_len = getelementptr inbounds %struct.bpf_link_info, ptr %info, i32 0, i32 3, i32 0, i32 1
  %10 = ptrtoint ptr %tp_name_len to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %tp_name_len, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.not = icmp eq i32 %11, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv3)
  %tobool5.not = icmp eq i32 %conv3, 0
  %xor54 = xor i1 %tobool5.not, %tobool.not
  br i1 %xor54, label %entry.cleanup35_crit_edge, label %if.end

entry.cleanup35_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup35

if.end:                                           ; preds = %entry
  %call = tail call i32 @strlen(ptr noundef %9) #26
  %add = add i32 %call, 1
  %12 = ptrtoint ptr %tp_name_len to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 %add, ptr %tp_name_len, align 8
  br i1 %tobool5.not, label %if.end.cleanup35_crit_edge, label %if.end12

if.end.cleanup35_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup35

if.end12:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_cmp4(i32 %11, i32 %add)
  %cmp14.not = icmp ult i32 %11, %add
  br i1 %cmp14.not, label %if.else, label %if.end8.i.i

if.end8.i.i:                                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add)
  %cmp9.i.i = icmp slt i32 %add, 0
  br i1 %cmp9.i.i, label %land.rhs16.i.i, label %if.then.i.i.i

land.rhs16.i.i:                                   ; preds = %if.end8.i.i
  %.b71.i.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i, label %land.rhs16.i.i.cleanup35_crit_edge, label %if.then27.i.i, !prof !220

land.rhs16.i.i.cleanup35_crit_edge:               ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup35

if.then27.i.i:                                    ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %cleanup35

if.then.i.i.i:                                    ; preds = %if.end8.i.i
  tail call void @__check_object_size(ptr noundef %9, i32 noundef %add, i1 noundef zeroext true) #19
  tail call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i, label %if.then.i.i.i.copy_to_user.exit_crit_edge, label %if.end.i.i

if.then.i.i.i.copy_to_user.exit_crit_edge:        ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit

if.end.i.i:                                       ; preds = %if.then.i.i.i
  %13 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %3, i32 %add, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i = extractvalue { i32, i32 } %13, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.then2.i.i, label %if.end.i.i.copy_to_user.exit_crit_edge

if.end.i.i.copy_to_user.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit

if.then2.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %9, i32 noundef %add) #19
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef nonnull %3, ptr noundef %9, i32 noundef %add) #19
  br label %copy_to_user.exit

copy_to_user.exit:                                ; preds = %if.then2.i.i, %if.end.i.i.copy_to_user.exit_crit_edge, %if.then.i.i.i.copy_to_user.exit_crit_edge
  %n.addr.0.i = phi i32 [ %add, %if.then.i.i.i.copy_to_user.exit_crit_edge ], [ %call.i12.i.i, %if.then2.i.i ], [ %add, %if.end.i.i.copy_to_user.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i)
  %tobool19.not = icmp eq i32 %n.addr.0.i, 0
  %spec.select = select i1 %tobool19.not, i32 0, i32 -14
  br label %cleanup35

if.else:                                          ; preds = %if.end12
  %sub = add i32 %11, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp9.i.i62 = icmp slt i32 %sub, 0
  br i1 %cmp9.i.i62, label %land.rhs16.i.i65, label %if.then.i.i.i68

land.rhs16.i.i65:                                 ; preds = %if.else
  %.b71.i.i64 = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i64, label %land.rhs16.i.i65.cleanup35_crit_edge, label %if.then27.i.i66, !prof !220

land.rhs16.i.i65.cleanup35_crit_edge:             ; preds = %land.rhs16.i.i65
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup35

if.then27.i.i66:                                  ; preds = %land.rhs16.i.i65
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %cleanup35

if.then.i.i.i68:                                  ; preds = %if.else
  tail call void @__check_object_size(ptr noundef %9, i32 noundef %sub, i1 noundef zeroext true) #19
  tail call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i69 = tail call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i69, label %if.then.i.i.i68.copy_to_user.exit78_crit_edge, label %if.end.i.i73

if.then.i.i.i68.copy_to_user.exit78_crit_edge:    ; preds = %if.then.i.i.i68
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit78

if.end.i.i73:                                     ; preds = %if.then.i.i.i68
  %14 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr nonnull %3, i32 %sub, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i71 = extractvalue { i32, i32 } %14, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i71)
  %cmp.i6.i72 = icmp eq i32 %asmresult.i.i71, 0
  br i1 %cmp.i6.i72, label %if.then2.i.i76, label %if.end.i.i73.copy_to_user.exit78_crit_edge

if.end.i.i73.copy_to_user.exit78_crit_edge:       ; preds = %if.end.i.i73
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit78

if.then2.i.i76:                                   ; preds = %if.end.i.i73
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i74 = tail call zeroext i1 @__kasan_check_read(ptr noundef %9, i32 noundef %sub) #19
  %call.i12.i.i75 = tail call i32 @arm_copy_to_user(ptr noundef nonnull %3, ptr noundef %9, i32 noundef %sub) #19
  br label %copy_to_user.exit78

copy_to_user.exit78:                              ; preds = %if.then2.i.i76, %if.end.i.i73.copy_to_user.exit78_crit_edge, %if.then.i.i.i68.copy_to_user.exit78_crit_edge
  %n.addr.0.i77 = phi i32 [ %sub, %if.then.i.i.i68.copy_to_user.exit78_crit_edge ], [ %call.i12.i.i75, %if.then2.i.i76 ], [ %sub, %if.end.i.i73.copy_to_user.exit78_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i77)
  %tobool23.not = icmp eq i32 %n.addr.0.i77, 0
  br i1 %tobool23.not, label %if.end25, label %copy_to_user.exit78.cleanup35_crit_edge

copy_to_user.exit78.cleanup35_crit_edge:          ; preds = %copy_to_user.exit78
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup35

if.end25:                                         ; preds = %copy_to_user.exit78
  call void @__sanitizer_cov_trace_pc() #21
  %add.ptr26 = getelementptr i8, ptr %3, i32 %11
  %add.ptr27 = getelementptr i8, ptr %add.ptr26, i32 -1
  tail call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 2934) #19
  %15 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 4
  %17 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #10, !srcloc !235
  %and.i = and i32 %17, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %18 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_1", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %add.ptr27, i8 0, i32 -1226833921) #19, !srcloc !335
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %17) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool31.not = icmp eq i32 %18, 0
  %.55 = select i1 %tobool31.not, i32 -28, i32 -14
  br label %cleanup35

cleanup35:                                        ; preds = %if.end25, %copy_to_user.exit78.cleanup35_crit_edge, %if.then27.i.i66, %land.rhs16.i.i65.cleanup35_crit_edge, %copy_to_user.exit, %if.then27.i.i, %land.rhs16.i.i.cleanup35_crit_edge, %if.end.cleanup35_crit_edge, %entry.cleanup35_crit_edge
  %retval.1 = phi i32 [ -22, %entry.cleanup35_crit_edge ], [ 0, %if.end.cleanup35_crit_edge ], [ -14, %copy_to_user.exit78.cleanup35_crit_edge ], [ %.55, %if.end25 ], [ -14, %if.then27.i.i66 ], [ -14, %land.rhs16.i.i65.cleanup35_crit_edge ], [ -14, %if.then27.i.i ], [ -14, %land.rhs16.i.i.cleanup35_crit_edge ], [ %spec.select, %copy_to_user.exit ]
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_probe_unregister(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #15

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btf_new_fd(ptr noundef, [2 x i32]) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @btf_get_fd_by_id(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_pid_task(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @find_vpid(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @fget_task(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_task_fd_query_copy(ptr nocapture noundef readonly %attr, ptr noundef %uattr, i32 noundef %prog_id, i32 noundef %fd_type, ptr noundef %buf, i64 noundef %probe_offset, i64 noundef %probe_addr) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %buf2 = getelementptr inbounds %struct.anon.14, ptr %attr, i32 0, i32 4
  %0 = ptrtoint ptr %buf2 to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %buf2, align 8
  %conv3 = trunc i64 %1 to i32
  %2 = inttoptr i32 %conv3 to ptr
  %tobool.not = icmp eq ptr %buf, null
  br i1 %tobool.not, label %entry.cond.end_crit_edge, label %cond.true

entry.cond.end_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cond.end

cond.true:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  %call = tail call i32 @strlen(ptr noundef nonnull %buf) #26
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry.cond.end_crit_edge
  %cond = phi i32 [ %call, %cond.true ], [ 0, %entry.cond.end_crit_edge ]
  %buf_len = getelementptr inbounds %struct.anon.14, ptr %uattr, i32 0, i32 3
  tail call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 4068) #19
  %3 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i.i.i to ptr
  %cpu_domain.i.i = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 4
  %5 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i) #10, !srcloc !235
  %and.i = and i32 %5, -13
  %or.i = or i32 %and.i, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %6 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %buf_len, i32 %cond, i32 -1226833921) #19, !srcloc !336
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %5) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool7.not = icmp eq i32 %6, 0
  br i1 %tobool7.not, label %if.end, label %cond.end.cleanup143_crit_edge

cond.end.cleanup143_crit_edge:                    ; preds = %cond.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup143

if.end:                                           ; preds = %cond.end
  %buf_len8 = getelementptr inbounds %struct.anon.14, ptr %attr, i32 0, i32 3
  %7 = ptrtoint ptr %buf_len8 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %buf_len8, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool9.not = icmp eq i32 %8, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %conv3)
  %tobool10.not = icmp eq i32 %conv3, 0
  %or.cond = select i1 %tobool9.not, i1 true, i1 %tobool10.not
  br i1 %or.cond, label %if.end.if.end70_crit_edge, label %if.then11

if.end.if.end70_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end70

if.then11:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %cond)
  %tobool12.not = icmp eq i32 %cond, 0
  br i1 %tobool12.not, label %if.then13, label %if.else

if.then13:                                        ; preds = %if.then11
  tail call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 4076) #19
  %9 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i169 = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i169 to ptr
  %cpu_domain.i.i170 = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 4
  %11 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i170) #10, !srcloc !235
  %and.i171 = and i32 %11, -13
  %or.i172 = or i32 %and.i171, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i172) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %12 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_1", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr nonnull %2, i8 0, i32 -1226833921) #19, !srcloc !337
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %11) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool29.not = icmp eq i32 %12, 0
  br i1 %tobool29.not, label %if.then13.if.end70_crit_edge, label %if.then13.cleanup143_crit_edge

if.then13.cleanup143_crit_edge:                   ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup143

if.then13.if.end70_crit_edge:                     ; preds = %if.then13
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end70

if.else:                                          ; preds = %if.then11
  %add = add i32 %cond, 1
  call void @__sanitizer_cov_trace_cmp4(i32 %8, i32 %add)
  %cmp32.not = icmp ult i32 %8, %add
  br i1 %cmp32.not, label %if.else40, label %if.end8.i.i

if.end8.i.i:                                      ; preds = %if.else
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %add)
  %cmp9.i.i = icmp slt i32 %add, 0
  br i1 %cmp9.i.i, label %land.rhs16.i.i, label %if.then.i.i.i

land.rhs16.i.i:                                   ; preds = %if.end8.i.i
  %.b71.i.i = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i, label %land.rhs16.i.i.cleanup143_crit_edge, label %if.then27.i.i, !prof !220

land.rhs16.i.i.cleanup143_crit_edge:              ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup143

if.then27.i.i:                                    ; preds = %land.rhs16.i.i
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %cleanup143

if.then.i.i.i:                                    ; preds = %if.end8.i.i
  tail call void @__check_object_size(ptr noundef %buf, i32 noundef %add, i1 noundef zeroext true) #19
  tail call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i = tail call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i, label %if.then.i.i.i.copy_to_user.exit_crit_edge, label %if.end.i.i

if.then.i.i.i.copy_to_user.exit_crit_edge:        ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit

if.end.i.i:                                       ; preds = %if.then.i.i.i
  %13 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %2, i32 %add, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i = extractvalue { i32, i32 } %13, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i)
  %cmp.i6.i = icmp eq i32 %asmresult.i.i, 0
  br i1 %cmp.i6.i, label %if.then2.i.i, label %if.end.i.i.copy_to_user.exit_crit_edge

if.end.i.i.copy_to_user.exit_crit_edge:           ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit

if.then2.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %buf, i32 noundef %add) #19
  %call.i12.i.i = tail call i32 @arm_copy_to_user(ptr noundef %2, ptr noundef %buf, i32 noundef %add) #19
  br label %copy_to_user.exit

copy_to_user.exit:                                ; preds = %if.then2.i.i, %if.end.i.i.copy_to_user.exit_crit_edge, %if.then.i.i.i.copy_to_user.exit_crit_edge
  %n.addr.0.i = phi i32 [ %add, %if.then.i.i.i.copy_to_user.exit_crit_edge ], [ %call.i12.i.i, %if.then2.i.i ], [ %add, %if.end.i.i.copy_to_user.exit_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i)
  %tobool37.not = icmp eq i32 %n.addr.0.i, 0
  br i1 %tobool37.not, label %copy_to_user.exit.if.end70_crit_edge, label %copy_to_user.exit.cleanup143_crit_edge

copy_to_user.exit.cleanup143_crit_edge:           ; preds = %copy_to_user.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup143

copy_to_user.exit.if.end70_crit_edge:             ; preds = %copy_to_user.exit
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end70

if.else40:                                        ; preds = %if.else
  %sub = add i32 %8, -1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub)
  %cmp9.i.i179 = icmp slt i32 %sub, 0
  br i1 %cmp9.i.i179, label %land.rhs16.i.i182, label %if.then.i.i.i185

land.rhs16.i.i182:                                ; preds = %if.else40
  %.b71.i.i181 = load i1, ptr @check_copy_size.__already_done, align 1
  br i1 %.b71.i.i181, label %land.rhs16.i.i182.cleanup143_crit_edge, label %if.then27.i.i183, !prof !220

land.rhs16.i.i182.cleanup143_crit_edge:           ; preds = %land.rhs16.i.i182
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup143

if.then27.i.i183:                                 ; preds = %land.rhs16.i.i182
  call void @__sanitizer_cov_trace_pc() #21
  store i1 true, ptr @check_copy_size.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.17, i32 noundef 230, i32 noundef 9, ptr noundef null) #19
  br label %cleanup143

if.then.i.i.i185:                                 ; preds = %if.else40
  tail call void @__check_object_size(ptr noundef %buf, i32 noundef %sub, i1 noundef zeroext true) #19
  tail call void @__might_fault(ptr noundef nonnull @.str.19, i32 noundef 174) #19
  %call.i.i186 = tail call zeroext i1 @should_fail_usercopy() #19
  br i1 %call.i.i186, label %if.then.i.i.i185.copy_to_user.exit195_crit_edge, label %if.end.i.i190

if.then.i.i.i185.copy_to_user.exit195_crit_edge:  ; preds = %if.then.i.i.i185
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit195

if.end.i.i190:                                    ; preds = %if.then.i.i.i185
  %14 = tail call { i32, i32 } asm ".syntax unified\0Aadds $1, $2, $3; sbcscc $1, $1, $0; movcc $0, #0", "=&r,=&r,r,Ir,0,~{cc}"(ptr %2, i32 %sub, i32 -1226833920) #23, !srcloc !240
  %asmresult.i.i188 = extractvalue { i32, i32 } %14, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i188)
  %cmp.i6.i189 = icmp eq i32 %asmresult.i.i188, 0
  br i1 %cmp.i6.i189, label %if.then2.i.i193, label %if.end.i.i190.copy_to_user.exit195_crit_edge

if.end.i.i190.copy_to_user.exit195_crit_edge:     ; preds = %if.end.i.i190
  call void @__sanitizer_cov_trace_pc() #21
  br label %copy_to_user.exit195

if.then2.i.i193:                                  ; preds = %if.end.i.i190
  call void @__sanitizer_cov_trace_pc() #21
  %call.i.i.i191 = tail call zeroext i1 @__kasan_check_read(ptr noundef %buf, i32 noundef %sub) #19
  %call.i12.i.i192 = tail call i32 @arm_copy_to_user(ptr noundef %2, ptr noundef %buf, i32 noundef %sub) #19
  br label %copy_to_user.exit195

copy_to_user.exit195:                             ; preds = %if.then2.i.i193, %if.end.i.i190.copy_to_user.exit195_crit_edge, %if.then.i.i.i185.copy_to_user.exit195_crit_edge
  %n.addr.0.i194 = phi i32 [ %sub, %if.then.i.i.i185.copy_to_user.exit195_crit_edge ], [ %call.i12.i.i192, %if.then2.i.i193 ], [ %sub, %if.end.i.i190.copy_to_user.exit195_crit_edge ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %n.addr.0.i194)
  %tobool43.not = icmp eq i32 %n.addr.0.i194, 0
  br i1 %tobool43.not, label %if.end45, label %copy_to_user.exit195.cleanup143_crit_edge

copy_to_user.exit195.cleanup143_crit_edge:        ; preds = %copy_to_user.exit195
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup143

if.end45:                                         ; preds = %copy_to_user.exit195
  %add.ptr = getelementptr i8, ptr %2, i32 %8
  %add.ptr49 = getelementptr i8, ptr %add.ptr, i32 -1
  tail call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 4091) #19
  %15 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i196 = and i32 %15, -16384
  %16 = inttoptr i32 %and.i.i.i196 to ptr
  %cpu_domain.i.i197 = getelementptr inbounds %struct.thread_info, ptr %16, i32 0, i32 4
  %17 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i197) #10, !srcloc !235
  %and.i198 = and i32 %17, -13
  %or.i199 = or i32 %and.i198, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i199) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %18 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_1", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %add.ptr49, i8 0, i32 -1226833921) #19, !srcloc !338
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %17) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool62.not = icmp eq i32 %18, 0
  br i1 %tobool62.not, label %if.end45.if.end70_crit_edge, label %if.end45.cleanup143_crit_edge

if.end45.cleanup143_crit_edge:                    ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup143

if.end45.if.end70_crit_edge:                      ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #21
  br label %if.end70

if.end70:                                         ; preds = %if.end45.if.end70_crit_edge, %copy_to_user.exit.if.end70_crit_edge, %if.then13.if.end70_crit_edge, %if.end.if.end70_crit_edge
  %err.0 = phi i32 [ 0, %copy_to_user.exit.if.end70_crit_edge ], [ -28, %if.end45.if.end70_crit_edge ], [ 0, %if.then13.if.end70_crit_edge ], [ 0, %if.end.if.end70_crit_edge ]
  %prog_id74 = getelementptr inbounds %struct.anon.14, ptr %uattr, i32 0, i32 5
  tail call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 4096) #19
  %19 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i200 = and i32 %19, -16384
  %20 = inttoptr i32 %and.i.i.i200 to ptr
  %cpu_domain.i.i201 = getelementptr inbounds %struct.thread_info, ptr %20, i32 0, i32 4
  %21 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i201) #10, !srcloc !235
  %and.i202 = and i32 %21, -13
  %or.i203 = or i32 %and.i202, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i203) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %22 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %prog_id74, i32 %prog_id, i32 -1226833921) #19, !srcloc !339
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %21) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %22)
  %tobool87.not = icmp eq i32 %22, 0
  br i1 %tobool87.not, label %lor.lhs.false, label %if.end70.cleanup143_crit_edge

if.end70.cleanup143_crit_edge:                    ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup143

lor.lhs.false:                                    ; preds = %if.end70
  %fd_type91 = getelementptr inbounds %struct.anon.14, ptr %uattr, i32 0, i32 6
  tail call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 4097) #19
  %23 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i204 = and i32 %23, -16384
  %24 = inttoptr i32 %and.i.i.i204 to ptr
  %cpu_domain.i.i205 = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 4
  %25 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i205) #10, !srcloc !235
  %and.i206 = and i32 %25, -13
  %or.i207 = or i32 %and.i206, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i207) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %26 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_4", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %fd_type91, i32 %fd_type, i32 -1226833921) #19, !srcloc !340
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %25) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool104.not = icmp eq i32 %26, 0
  br i1 %tobool104.not, label %lor.lhs.false105, label %lor.lhs.false.cleanup143_crit_edge

lor.lhs.false.cleanup143_crit_edge:               ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup143

lor.lhs.false105:                                 ; preds = %lor.lhs.false
  %probe_offset109 = getelementptr inbounds %struct.anon.14, ptr %uattr, i32 0, i32 7
  tail call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 4098) #19
  %27 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i208 = and i32 %27, -16384
  %28 = inttoptr i32 %and.i.i.i208 to ptr
  %cpu_domain.i.i209 = getelementptr inbounds %struct.thread_info, ptr %28, i32 0, i32 4
  %29 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i209) #10, !srcloc !235
  %and.i210 = and i32 %29, -13
  %or.i211 = or i32 %and.i210, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i211) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %30 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_8", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %probe_offset109, i64 %probe_offset, i32 -1226833921) #19, !srcloc !341
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %29) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %30)
  %tobool122.not = icmp eq i32 %30, 0
  br i1 %tobool122.not, label %lor.lhs.false123, label %lor.lhs.false105.cleanup143_crit_edge

lor.lhs.false105.cleanup143_crit_edge:            ; preds = %lor.lhs.false105
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup143

lor.lhs.false123:                                 ; preds = %lor.lhs.false105
  call void @__sanitizer_cov_trace_pc() #21
  %probe_addr127 = getelementptr inbounds %struct.anon.14, ptr %uattr, i32 0, i32 8
  tail call void @__might_fault(ptr noundef nonnull @.str.1, i32 noundef 4099) #19
  %31 = tail call i32 @llvm.read_register.i32(metadata !209) #19
  %and.i.i.i212 = and i32 %31, -16384
  %32 = inttoptr i32 %and.i.i.i212 to ptr
  %cpu_domain.i.i213 = getelementptr inbounds %struct.thread_info, ptr %32, i32 0, i32 4
  %33 = tail call i32 asm "mrc\09p15, 0, $0, c3, c0\09@ get domain", "=r,*m"(ptr elementtype(i32) %cpu_domain.i.i213) #10, !srcloc !235
  %and.i214 = and i32 %33, -13
  %or.i215 = or i32 %and.i214, 4
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %or.i215) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  %34 = tail call i32 asm sideeffect ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r2; .ifnc $2r2,fpr11; .ifnc $2r2,r11fp; .ifnc $2r2,ipr12; .ifnc $2r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $3,r1; .ifnc $3r1,fpr11; .ifnc $3r1,r11fp; .ifnc $3r1,ipr12; .ifnc $3r1,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__put_user_8", "=&{r0},{r0},{r2},{r1},~{r12},~{lr},~{cc}"(ptr %probe_addr127, i64 %probe_addr, i32 -1226833921) #19, !srcloc !342
  tail call void asm sideeffect "mcr\09p15, 0, $0, c3, c0\09@ set domain", "r,~{memory}"(i32 %33) #19, !srcloc !236
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c5, 4", "r,~{memory}"(i32 0) #19, !srcloc !237
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %34)
  %tobool140.not = icmp eq i32 %34, 0
  %spec.select = select i1 %tobool140.not, i32 %err.0, i32 -14
  br label %cleanup143

cleanup143:                                       ; preds = %lor.lhs.false123, %lor.lhs.false105.cleanup143_crit_edge, %lor.lhs.false.cleanup143_crit_edge, %if.end70.cleanup143_crit_edge, %if.end45.cleanup143_crit_edge, %copy_to_user.exit195.cleanup143_crit_edge, %if.then27.i.i183, %land.rhs16.i.i182.cleanup143_crit_edge, %copy_to_user.exit.cleanup143_crit_edge, %if.then27.i.i, %land.rhs16.i.i.cleanup143_crit_edge, %if.then13.cleanup143_crit_edge, %cond.end.cleanup143_crit_edge
  %retval.2 = phi i32 [ -14, %if.end45.cleanup143_crit_edge ], [ -14, %if.then13.cleanup143_crit_edge ], [ -14, %cond.end.cleanup143_crit_edge ], [ -14, %copy_to_user.exit.cleanup143_crit_edge ], [ -14, %lor.lhs.false105.cleanup143_crit_edge ], [ -14, %lor.lhs.false.cleanup143_crit_edge ], [ -14, %if.end70.cleanup143_crit_edge ], [ -14, %copy_to_user.exit195.cleanup143_crit_edge ], [ %spec.select, %lor.lhs.false123 ], [ -14, %if.then27.i.i ], [ -14, %land.rhs16.i.i.cleanup143_crit_edge ], [ -14, %if.then27.i.i183 ], [ -14, %land.rhs16.i.i182.cleanup143_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_get_event(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_get_perf_event_info(ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_task_struct(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @tracing_bpf_link_attach(ptr noundef %attr, [2 x i32] %uattr.coerce, ptr noundef %prog) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %attach_type = getelementptr inbounds %struct.anon.15, ptr %attr, i32 0, i32 2
  %0 = ptrtoint ptr %attach_type to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %attach_type, align 8
  %expected_attach_type = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 3
  %2 = ptrtoint ptr %expected_attach_type to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %expected_attach_type, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %1, i32 %3)
  %cmp.not = icmp eq i32 %1, %3
  br i1 %cmp.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 28, i32 %1)
  %cmp2 = icmp eq i32 %1, 28
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %call = tail call i32 @bpf_iter_link_attach(ptr noundef %attr, [2 x i32] %uattr.coerce, ptr noundef %prog) #19
  br label %return

if.else:                                          ; preds = %if.end
  %type = getelementptr inbounds %struct.bpf_prog, ptr %prog, i32 0, i32 2
  %4 = ptrtoint ptr %type to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %type, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 28, i32 %5)
  %cmp4 = icmp eq i32 %5, 28
  br i1 %cmp4, label %if.then5, label %if.else.return_crit_edge

if.else.return_crit_edge:                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  br label %return

if.then5:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #21
  %6 = getelementptr inbounds %struct.anon.15, ptr %attr, i32 0, i32 1
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %6, align 4
  %9 = getelementptr inbounds %struct.anon.15, ptr %attr, i32 0, i32 4
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %9, align 8
  %call6 = tail call fastcc i32 @bpf_tracing_prog_attach(ptr noundef %prog, i32 noundef %8, i32 noundef %11)
  br label %return

return:                                           ; preds = %if.then5, %if.else.return_crit_edge, %if.then3, %entry.return_crit_edge
  %retval.0 = phi i32 [ %call, %if.then3 ], [ %call6, %if.then5 ], [ -22, %entry.return_crit_edge ], [ -22, %if.else.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @cgroup_bpf_link_attach(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @netns_bpf_link_create(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_xdp_link_attach(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @bpf_perf_link_attach(ptr nocapture noundef readonly %attr, ptr noundef %prog) unnamed_addr #0 align 64 {
entry:
  %link_primer = alloca %struct.bpf_link_primer, align 4
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %link_primer) #19
  %0 = getelementptr inbounds %struct.bpf_link_primer, ptr %link_primer, i32 0, i32 1
  %1 = getelementptr inbounds %struct.bpf_link_primer, ptr %link_primer, i32 0, i32 2
  %2 = getelementptr inbounds %struct.bpf_link_primer, ptr %link_primer, i32 0, i32 3
  %flags = getelementptr inbounds %struct.anon.15, ptr %attr, i32 0, i32 3
  %3 = call ptr @memset(ptr %link_primer, i32 255, i32 16)
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #21
  br label %cleanup

if.end:                                           ; preds = %entry
  %6 = getelementptr inbounds %struct.anon.15, ptr %attr, i32 0, i32 1
  %7 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %6, align 4
  %call = tail call ptr @perf_event_get(i32 noundef %8) #19
  %cmp.i = icmp ugt ptr %call, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #21
  %9 = ptrtoint ptr %call to i32
  br label %cleanup

if.end4:                                          ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %10 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %10, i32 noundef 1052096, i32 noundef 80) #27
  %tobool6.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool6.not, label %if.end4.out_put_file_crit_edge, label %if.end8

if.end4.out_put_file_crit_edge:                   ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #21
  br label %out_put_file

if.end8:                                          ; preds = %if.end4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef nonnull %call7.i.i, i32 noundef 8) #19
  tail call void @generic_atomic64_set(ptr noundef nonnull %call7.i.i, i64 noundef 1) #19
  %type1.i = getelementptr inbounds %struct.bpf_link, ptr %call7.i.i, i32 0, i32 2
  %11 = ptrtoint ptr %type1.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 7, ptr %type1.i, align 4
  %id.i = getelementptr inbounds %struct.bpf_link, ptr %call7.i.i, i32 0, i32 1
  %12 = ptrtoint ptr %id.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 0, ptr %id.i, align 8
  %ops2.i = getelementptr inbounds %struct.bpf_link, ptr %call7.i.i, i32 0, i32 3
  %13 = ptrtoint ptr %ops2.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr @bpf_perf_link_lops, ptr %ops2.i, align 8
  %prog3.i = getelementptr inbounds %struct.bpf_link, ptr %call7.i.i, i32 0, i32 4
  %14 = ptrtoint ptr %prog3.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %prog, ptr %prog3.i, align 4
  %perf_file10 = getelementptr inbounds %struct.bpf_perf_link, ptr %call7.i.i, i32 0, i32 1
  %15 = ptrtoint ptr %perf_file10 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %call, ptr %perf_file10, align 8
  %call12 = call i32 @bpf_link_prime(ptr noundef nonnull %call7.i.i, ptr noundef nonnull %link_primer)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call12)
  %tobool13.not = icmp eq i32 %call12, 0
  br i1 %tobool13.not, label %if.end15, label %if.then14

if.then14:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #19
  br label %out_put_file

if.end15:                                         ; preds = %if.end8
  %private_data = getelementptr inbounds %struct.file, ptr %call, i32 0, i32 16
  %16 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %private_data, align 4
  %18 = getelementptr inbounds %struct.anon.15, ptr %attr, i32 0, i32 4
  %19 = ptrtoint ptr %18 to i32
  call void @__asan_load8_noabort(i32 %19)
  %20 = load i64, ptr %18, align 8
  %call16 = tail call i32 @perf_event_set_bpf_prog(ptr noundef %17, ptr noundef %prog, i64 noundef %20) #19
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %if.end19, label %if.then18

if.then18:                                        ; preds = %if.end15
  %21 = ptrtoint ptr %link_primer to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %link_primer, align 4
  %prog.i = getelementptr inbounds %struct.bpf_link, ptr %22, i32 0, i32 4
  %23 = ptrtoint ptr %prog.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %prog.i, align 4
  %24 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %2, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %25)
  %tobool.not.i.i = icmp eq i32 %25, 0
  br i1 %tobool.not.i.i, label %if.then18.bpf_link_cleanup.exit_crit_edge, label %if.end.i.i

if.then18.bpf_link_cleanup.exit_crit_edge:        ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #21
  br label %bpf_link_cleanup.exit

if.end.i.i:                                       ; preds = %if.then18
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @link_idr_lock) #19
  %call.i.i = tail call ptr @idr_remove(ptr noundef nonnull @link_idr, i32 noundef %25) #19
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @link_idr_lock) #19
  br label %bpf_link_cleanup.exit

bpf_link_cleanup.exit:                            ; preds = %if.end.i.i, %if.then18.bpf_link_cleanup.exit_crit_edge
  %26 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %0, align 4
  tail call void @fput(ptr noundef %27) #19
  %28 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %1, align 4
  tail call void @put_unused_fd(i32 noundef %29) #19
  br label %out_put_file

if.end19:                                         ; preds = %if.end15
  call void @__sanitizer_cov_trace_pc() #21
  tail call void @bpf_prog_inc(ptr noundef %prog)
  %call20 = call i32 @bpf_link_settle(ptr noundef nonnull %link_primer)
  br label %cleanup

out_put_file:                                     ; preds = %bpf_link_cleanup.exit, %if.then14, %if.end4.out_put_file_crit_edge
  %err.0 = phi i32 [ %call12, %if.then14 ], [ %call16, %bpf_link_cleanup.exit ], [ -12, %if.end4.out_put_file_crit_edge ]
  tail call void @fput(ptr noundef %call) #19
  br label %cleanup

cleanup:                                          ; preds = %out_put_file, %if.end19, %if.then2, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %9, %if.then2 ], [ %err.0, %out_put_file ], [ %call20, %if.end19 ], [ -22, %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %link_primer) #19
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_iter_link_attach(ptr noundef, [2 x i32], ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_event_get(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @perf_event_set_bpf_prog(ptr noundef, ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bpf_perf_link_release(ptr nocapture noundef readonly %link) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  %perf_file = getelementptr inbounds %struct.bpf_perf_link, ptr %link, i32 0, i32 1
  %0 = ptrtoint ptr %perf_file to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %perf_file, align 8
  %private_data = getelementptr inbounds %struct.file, ptr %1, i32 0, i32 16
  %2 = ptrtoint ptr %private_data to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %private_data, align 4
  tail call void @perf_event_free_bpf_prog(ptr noundef %3) #19
  %4 = ptrtoint ptr %perf_file to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %perf_file, align 8
  tail call void @fput(ptr noundef %5) #19
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @bpf_perf_link_dealloc(ptr noundef %link) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @kfree(ptr noundef %link) #19
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_event_free_bpf_prog(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @static_key_count(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @static_key_slow_inc(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @bpf_stats_release(ptr nocapture noundef readnone %inode, ptr nocapture noundef readnone %file) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #21
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @bpf_stats_enabled_mutex, i32 noundef 0) #19
  tail call void @static_key_slow_dec(ptr noundef nonnull @bpf_stats_enabled_key) #19
  tail call void @mutex_unlock(ptr noundef nonnull @bpf_stats_enabled_mutex) #19
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @static_key_slow_dec(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @bpf_iter_new_fd(ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #17

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @close_fd(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kallsyms_lookup_name(ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smin.i32(i32, i32) #17

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umin.i32(i32, i32) #17

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #18

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #19

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_loadN_noabort(i32, i32)

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_storeN_noabort(i32, i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #20 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 94)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #20 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 94)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readnone sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #6 = { nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #9 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #10 = { nounwind readonly }
attributes #11 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #13 = { argmemonly inlinehint mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #15 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #17 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #18 = { argmemonly nofree nounwind readonly willreturn }
attributes #19 = { nounwind }
attributes #20 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #21 = { nomerge }
attributes #22 = { nounwind allocsize(0) }
attributes #23 = { nounwind readnone }
attributes #24 = { nounwind readonly willreturn }
attributes #25 = { nobuiltin nounwind }
attributes #26 = { nobuiltin }
attributes #27 = { nounwind allocsize(2) }

!llvm.asan.globals = !{!0, !2, !4, !6, !8, !10, !12, !14, !16, !18, !20, !22, !24, !26, !28, !30, !32, !34, !36, !37, !39, !41, !43, !44, !45, !47, !48, !49, !50, !51, !52, !53, !54, !55, !57, !59, !61, !63, !64, !65, !67, !68, !70, !71, !73, !74, !76, !78, !80, !82, !84, !85, !87, !89, !91, !92, !93, !95, !96, !98, !99, !101, !102, !104, !105, !107, !109, !111, !113, !115, !117, !119, !120, !121, !123, !125, !127, !129, !131, !133, !135, !137, !139, !141, !143, !145, !146, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !159, !160, !162, !164, !165, !167, !169, !171, !173, !175, !177, !179, !181, !183, !185, !187, !189, !191, !193, !195, !197, !199, !201, !203, !205, !207}
!llvm.named.register.sp = !{!209}
!llvm.module.flags = !{!210, !211, !212, !213, !214, !215, !216, !217}
!llvm.ident = !{!218}

!0 = !{ptr @sysctl_unprivileged_bpf_disabled, !1, !"sysctl_unprivileged_bpf_disabled", i1 false, i1 false}
!1 = !{!"../kernel/bpf/syscall.c", i32 54, i32 5}
!2 = !{ptr @bpf_map_offload_ops, !3, !"bpf_map_offload_ops", i1 false, i1 false}
!3 = !{!"../kernel/bpf/syscall.c", i32 100, i32 26}
!4 = !{ptr @__ksymtab_bpf_map_put, !5, !"__ksymtab_bpf_map_put", i1 false, i1 false}
!5 = !{!"../kernel/bpf/syscall.c", i32 512, i32 1}
!6 = !{ptr @bpf_map_fops, !7, !"bpf_map_fops", i1 false, i1 false}
!7 = !{!"../kernel/bpf/syscall.c", i32 697, i32 30}
!8 = !{ptr @.str, !9, !"<string literal>", i1 false, i1 false}
!9 = !{!"../kernel/bpf/syscall.c", i32 716, i32 26}
!10 = !{ptr @__ksymtab_bpf_map_inc, !11, !"__ksymtab_bpf_map_inc", i1 false, i1 false}
!11 = !{!"../kernel/bpf/syscall.c", i32 966, i32 1}
!12 = !{ptr @__ksymtab_bpf_map_inc_with_uref, !13, !"__ksymtab_bpf_map_inc_with_uref", i1 false, i1 false}
!13 = !{!"../kernel/bpf/syscall.c", i32 973, i32 1}
!14 = !{ptr @__ksymtab_bpf_map_inc_not_zero, !15, !"__ksymtab_bpf_map_inc_not_zero", i1 false, i1 false}
!15 = !{!"../kernel/bpf/syscall.c", i32 1027, i32 1}
!16 = !{ptr @.str.1, !17, !"<string literal>", i1 false, i1 false}
!17 = !{!"../kernel/bpf/syscall.c", i32 1358, i32 3}
!18 = !{ptr @__ksymtab_bpf_prog_put, !19, !"__ksymtab_bpf_prog_put", i1 false, i1 false}
!19 = !{!"../kernel/bpf/syscall.c", i32 1835, i32 1}
!20 = !{ptr @bpf_prog_fops, !21, !"bpf_prog_fops", i1 false, i1 false}
!21 = !{!"../kernel/bpf/syscall.c", i32 1909, i32 30}
!22 = !{ptr @.str.2, !23, !"<string literal>", i1 false, i1 false}
!23 = !{!"../kernel/bpf/syscall.c", i32 1926, i32 26}
!24 = !{ptr @__ksymtab_bpf_prog_add, !25, !"__ksymtab_bpf_prog_add", i1 false, i1 false}
!25 = !{!"../kernel/bpf/syscall.c", i32 1946, i32 1}
!26 = !{ptr @__ksymtab_bpf_prog_sub, !27, !"__ksymtab_bpf_prog_sub", i1 false, i1 false}
!27 = !{!"../kernel/bpf/syscall.c", i32 1957, i32 1}
!28 = !{ptr @__ksymtab_bpf_prog_inc, !29, !"__ksymtab_bpf_prog_inc", i1 false, i1 false}
!29 = !{!"../kernel/bpf/syscall.c", i32 1963, i32 1}
!30 = !{ptr @__ksymtab_bpf_prog_inc_not_zero, !31, !"__ksymtab_bpf_prog_inc_not_zero", i1 false, i1 false}
!31 = !{!"../kernel/bpf/syscall.c", i32 1977, i32 1}
!32 = !{ptr @__ksymtab_bpf_prog_get_type_dev, !33, !"__ksymtab_bpf_prog_get_type_dev", i1 false, i1 false}
!33 = !{!"../kernel/bpf/syscall.c", i32 2024, i32 1}
!34 = !{ptr @bpf_link_put.__key, !35, !"__key", i1 false, i1 false}
!35 = !{!"../kernel/bpf/syscall.c", i32 2488, i32 3}
!36 = !{ptr @.str.3, !35, !"<string literal>", i1 false, i1 false}
!37 = !{ptr @.str.4, !38, !"<string literal>", i1 false, i1 false}
!38 = !{!"../kernel/bpf/syscall.c", i32 2587, i32 28}
!39 = !{ptr @.str.5, !40, !"<string literal>", i1 false, i1 false}
!40 = !{!"../kernel/bpf/syscall.c", i32 2615, i32 26}
!41 = !{ptr @.str.6, !42, !"<string literal>", i1 false, i1 false}
!42 = !{!"../kernel/bpf/syscall.c", i32 4456, i32 1}
!43 = !{ptr @.str.7, !42, !"<string literal>", i1 false, i1 false}
!44 = !{ptr @bpf_stats_enabled_mutex, !42, !"bpf_stats_enabled_mutex", i1 false, i1 false}
!45 = !{ptr @.str.8, !46, !"<string literal>", i1 false, i1 false}
!46 = !{!"../kernel/bpf/syscall.c", i32 4739, i32 1}
!47 = !{ptr @event_enter__bpf, !46, !"event_enter__bpf", i1 false, i1 false}
!48 = !{ptr @__event_enter__bpf, !46, !"__event_enter__bpf", i1 false, i1 false}
!49 = !{ptr @.str.9, !46, !"<string literal>", i1 false, i1 false}
!50 = !{ptr @event_exit__bpf, !46, !"event_exit__bpf", i1 false, i1 false}
!51 = !{ptr @__event_exit__bpf, !46, !"__event_exit__bpf", i1 false, i1 false}
!52 = !{ptr @.str.10, !46, !"<string literal>", i1 false, i1 false}
!53 = !{ptr @__syscall_meta__bpf, !46, !"__syscall_meta__bpf", i1 false, i1 false}
!54 = !{ptr @__p_syscall_meta__bpf, !46, !"__p_syscall_meta__bpf", i1 false, i1 false}
!55 = !{ptr @bpf_kallsyms_lookup_name_proto, !56, !"bpf_kallsyms_lookup_name_proto", i1 false, i1 false}
!56 = !{!"../kernel/bpf/syscall.c", i32 4821, i32 29}
!57 = !{ptr @bpf_syscall_verifier_ops, !58, !"bpf_syscall_verifier_ops", i1 false, i1 false}
!58 = !{!"../kernel/bpf/syscall.c", i32 4848, i32 31}
!59 = !{ptr @bpf_syscall_prog_ops, !60, !"bpf_syscall_prog_ops", i1 false, i1 false}
!60 = !{!"../kernel/bpf/syscall.c", i32 4853, i32 27}
!61 = !{ptr @__pcpu_scope_bpf_prog_active, !62, !"__pcpu_scope_bpf_prog_active", i1 false, i1 false}
!62 = !{!"../kernel/bpf/syscall.c", i32 46, i32 1}
!63 = !{ptr @__pcpu_unique_bpf_prog_active, !62, !"__pcpu_unique_bpf_prog_active", i1 false, i1 false}
!64 = !{ptr @bpf_prog_active, !62, !"bpf_prog_active", i1 false, i1 false}
!65 = !{ptr @.str.11, !66, !"<string literal>", i1 false, i1 false}
!66 = !{!"../kernel/bpf/syscall.c", i32 50, i32 8}
!67 = !{ptr @map_idr_lock, !66, !"map_idr_lock", i1 false, i1 false}
!68 = !{ptr @.str.12, !69, !"<string literal>", i1 false, i1 false}
!69 = !{!"../kernel/bpf/syscall.c", i32 49, i32 8}
!70 = !{ptr @map_idr, !69, !"map_idr", i1 false, i1 false}
!71 = !{ptr @__bpf_map_put.__key, !72, !"__key", i1 false, i1 false}
!72 = !{!"../kernel/bpf/syscall.c", i32 503, i32 3}
!73 = !{ptr @.str.13, !72, !"<string literal>", i1 false, i1 false}
!74 = !{ptr @bpf_map_default_vmops, !75, !"bpf_map_default_vmops", i1 false, i1 false}
!75 = !{!"../kernel/bpf/syscall.c", i32 633, i32 42}
!76 = !{ptr @.str.14, !77, !"<string literal>", i1 false, i1 false}
!77 = !{!"../kernel/bpf/syscall.c", i32 572, i32 6}
!78 = !{ptr @.str.15, !79, !"<string literal>", i1 false, i1 false}
!79 = !{!"../kernel/bpf/syscall.c", i32 591, i32 17}
!80 = !{ptr @.str.16, !81, !"<string literal>", i1 false, i1 false}
!81 = !{!"../kernel/bpf/syscall.c", i32 592, i32 17}
!82 = distinct !{null, !83, !"__already_done", i1 false, i1 false}
!83 = !{!"../include/linux/thread_info.h", i32 230, i32 6}
!84 = !{ptr @.str.17, !83, !"<string literal>", i1 false, i1 false}
!85 = !{ptr @.str.18, !86, !"<string literal>", i1 false, i1 false}
!86 = !{!"../include/linux/thread_info.h", i32 214, i32 2}
!87 = !{ptr @.str.19, !88, !"<string literal>", i1 false, i1 false}
!88 = !{!"../include/linux/uaccess.h", i32 156, i32 2}
!89 = distinct !{null, !90, !"__warned", i1 false, i1 false}
!90 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!91 = !{ptr @.str.20, !90, !"<string literal>", i1 false, i1 false}
!92 = !{ptr @.str.21, !90, !"<string literal>", i1 false, i1 false}
!93 = distinct !{null, !94, !"__warned", i1 false, i1 false}
!94 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!95 = !{ptr @.str.22, !94, !"<string literal>", i1 false, i1 false}
!96 = !{ptr @.str.23, !97, !"<string literal>", i1 false, i1 false}
!97 = !{!"../kernel/bpf/syscall.c", i32 48, i32 8}
!98 = !{ptr @prog_idr_lock, !97, !"prog_idr_lock", i1 false, i1 false}
!99 = !{ptr @.str.24, !100, !"<string literal>", i1 false, i1 false}
!100 = !{!"../kernel/bpf/syscall.c", i32 47, i32 8}
!101 = !{ptr @prog_idr, !100, !"prog_idr", i1 false, i1 false}
!102 = !{ptr @__bpf_prog_put.__key, !103, !"__key", i1 false, i1 false}
!103 = !{!"../kernel/bpf/syscall.c", i32 1823, i32 4}
!104 = !{ptr @.str.25, !103, !"<string literal>", i1 false, i1 false}
!105 = distinct !{null, !106, !"__already_done", i1 false, i1 false}
!106 = !{!"../kernel/bpf/syscall.c", i32 1712, i32 6}
!107 = !{ptr @.str.26, !108, !"<string literal>", i1 false, i1 false}
!108 = !{!"../kernel/bpf/syscall.c", i32 1721, i32 23}
!109 = !{ptr @.str.27, !110, !"<string literal>", i1 false, i1 false}
!110 = !{!"../kernel/bpf/syscall.c", i32 1703, i32 23}
!111 = !{ptr @.str.28, !112, !"<string literal>", i1 false, i1 false}
!112 = !{!"../kernel/bpf/syscall.c", i32 1704, i32 23}
!113 = !{ptr @bpf_audit_str, !114, !"bpf_audit_str", i1 false, i1 false}
!114 = !{!"../kernel/bpf/syscall.c", i32 1702, i32 27}
!115 = !{ptr @.str.29, !116, !"<string literal>", i1 false, i1 false}
!116 = !{!"../kernel/bpf/syscall.c", i32 1888, i32 6}
!117 = !{ptr @.str.30, !118, !"<string literal>", i1 false, i1 false}
!118 = !{!"../include/linux/local_lock_internal.h", i32 36, i32 2}
!119 = !{ptr @.str.31, !118, !"<string literal>", i1 false, i1 false}
!120 = !{ptr @.str.32, !118, !"<string literal>", i1 false, i1 false}
!121 = !{ptr @bpf_link_fops, !122, !"bpf_link_fops", i1 false, i1 false}
!122 = !{!"../kernel/bpf/syscall.c", i32 2536, i32 37}
!123 = !{ptr @.str.33, !124, !"<string literal>", i1 false, i1 false}
!124 = !{!"../kernel/bpf/syscall.c", i32 2523, i32 6}
!125 = !{ptr @.str.34, !126, !"<string literal>", i1 false, i1 false}
!126 = !{!"../kernel/bpf/syscall.c", i32 2508, i32 27}
!127 = !{ptr @.str.35, !128, !"<string literal>", i1 false, i1 false}
!128 = !{!"../include/linux/bpf_types.h", i32 130, i32 1}
!129 = !{ptr @.str.36, !130, !"<string literal>", i1 false, i1 false}
!130 = !{!"../include/linux/bpf_types.h", i32 131, i32 1}
!131 = !{ptr @.str.37, !132, !"<string literal>", i1 false, i1 false}
!132 = !{!"../include/linux/bpf_types.h", i32 133, i32 1}
!133 = !{ptr @.str.38, !134, !"<string literal>", i1 false, i1 false}
!134 = !{!"../include/linux/bpf_types.h", i32 135, i32 1}
!135 = !{ptr @.str.39, !136, !"<string literal>", i1 false, i1 false}
!136 = !{!"../include/linux/bpf_types.h", i32 137, i32 1}
!137 = !{ptr @.str.40, !138, !"<string literal>", i1 false, i1 false}
!138 = !{!"../include/linux/bpf_types.h", i32 138, i32 1}
!139 = !{ptr @.str.41, !140, !"<string literal>", i1 false, i1 false}
!140 = !{!"../include/linux/bpf_types.h", i32 141, i32 1}
!141 = !{ptr @bpf_link_type_strs, !142, !"bpf_link_type_strs", i1 false, i1 false}
!142 = !{!"../kernel/bpf/syscall.c", i32 2507, i32 20}
!143 = !{ptr @.str.42, !144, !"<string literal>", i1 false, i1 false}
!144 = !{!"../kernel/bpf/syscall.c", i32 52, i32 8}
!145 = !{ptr @link_idr_lock, !144, !"link_idr_lock", i1 false, i1 false}
!146 = !{ptr @.str.43, !147, !"<string literal>", i1 false, i1 false}
!147 = !{!"../kernel/bpf/syscall.c", i32 51, i32 8}
!148 = !{ptr @link_idr, !147, !"link_idr", i1 false, i1 false}
!149 = !{ptr @.str.44, !46, !"<string literal>", i1 false, i1 false}
!150 = !{ptr @.str.45, !46, !"<string literal>", i1 false, i1 false}
!151 = !{ptr @.str.46, !46, !"<string literal>", i1 false, i1 false}
!152 = !{ptr @types__bpf, !46, !"types__bpf", i1 false, i1 false}
!153 = !{ptr @.str.47, !46, !"<string literal>", i1 false, i1 false}
!154 = !{ptr @.str.48, !46, !"<string literal>", i1 false, i1 false}
!155 = !{ptr @.str.49, !46, !"<string literal>", i1 false, i1 false}
!156 = !{ptr @args__bpf, !46, !"args__bpf", i1 false, i1 false}
!157 = !{ptr @map_create.__key, !158, !"__key", i1 false, i1 false}
!158 = !{!"../kernel/bpf/syscall.c", i32 876, i32 2}
!159 = !{ptr @.str.50, !158, !"<string literal>", i1 false, i1 false}
!160 = !{ptr @bpf_map_types, !161, !"bpf_map_types", i1 false, i1 false}
!161 = !{!"../kernel/bpf/syscall.c", i32 57, i32 41}
!162 = distinct !{null, !163, !"__already_done", i1 false, i1 false}
!163 = !{!"../kernel/bpf/syscall.c", i32 807, i32 4}
!164 = !{ptr @.str.51, !163, !"<string literal>", i1 false, i1 false}
!165 = distinct !{null, !166, !"__already_done", i1 false, i1 false}
!166 = !{!"../kernel/bpf/syscall.c", i32 384, i32 6}
!167 = distinct !{null, !168, !"__warned", i1 false, i1 false}
!168 = !{!"../kernel/bpf/syscall.c", i32 2314, i32 20}
!169 = !{ptr @.str.52, !170, !"<string literal>", i1 false, i1 false}
!170 = !{!"../include/linux/license.h", i32 7, i32 26}
!171 = !{ptr @.str.53, !172, !"<string literal>", i1 false, i1 false}
!172 = !{!"../include/linux/license.h", i32 8, i32 22}
!173 = !{ptr @.str.54, !174, !"<string literal>", i1 false, i1 false}
!174 = !{!"../include/linux/license.h", i32 9, i32 22}
!175 = !{ptr @.str.55, !176, !"<string literal>", i1 false, i1 false}
!176 = !{!"../include/linux/license.h", i32 10, i32 22}
!177 = !{ptr @.str.56, !178, !"<string literal>", i1 false, i1 false}
!178 = !{!"../include/linux/license.h", i32 11, i32 22}
!179 = !{ptr @.str.57, !180, !"<string literal>", i1 false, i1 false}
!180 = !{!"../include/linux/license.h", i32 12, i32 22}
!181 = !{ptr @bpf_prog_types, !182, !"bpf_prog_types", i1 false, i1 false}
!182 = !{!"../kernel/bpf/syscall.c", i32 1666, i32 42}
!183 = distinct !{null, !184, !"__already_done", i1 false, i1 false}
!184 = !{!"../kernel/bpf/syscall.c", i32 1739, i32 6}
!185 = distinct !{null, !186, !"__warned", i1 false, i1 false}
!186 = !{!"../kernel/bpf/syscall.c", i32 3641, i32 41}
!187 = !{ptr @bpf_tracing_link_lops, !188, !"bpf_tracing_link_lops", i1 false, i1 false}
!188 = !{!"../kernel/bpf/syscall.c", i32 2692, i32 34}
!189 = distinct !{null, !190, !"__already_done", i1 false, i1 false}
!190 = !{!"../kernel/bpf/syscall.c", i32 2649, i32 2}
!191 = !{ptr @.str.58, !192, !"<string literal>", i1 false, i1 false}
!192 = !{!"../kernel/bpf/syscall.c", i32 2674, i32 6}
!193 = !{ptr @bpf_raw_tp_link_lops, !194, !"bpf_raw_tp_link_lops", i1 false, i1 false}
!194 = !{!"../kernel/bpf/syscall.c", i32 2942, i32 34}
!195 = !{ptr @.str.59, !196, !"<string literal>", i1 false, i1 false}
!196 = !{!"../kernel/bpf/syscall.c", i32 2904, i32 6}
!197 = !{ptr @bpf_perf_link_lops, !198, !"bpf_perf_link_lops", i1 false, i1 false}
!198 = !{!"../kernel/bpf/syscall.c", i32 2971, i32 34}
!199 = !{ptr @.str.60, !200, !"<string literal>", i1 false, i1 false}
!200 = !{!"../kernel/bpf/syscall.c", i32 4482, i32 24}
!201 = !{ptr @bpf_stats_fops, !202, !"bpf_stats_fops", i1 false, i1 false}
!202 = !{!"../kernel/bpf/syscall.c", i32 4466, i32 37}
!203 = distinct !{null, !204, !"__warned", i1 false, i1 false}
!204 = !{!"../kernel/bpf/syscall.c", i32 4814, i32 23}
!205 = !{ptr @bpf_sys_bpf_proto, !206, !"bpf_sys_bpf_proto", i1 false, i1 false}
!206 = !{!"../kernel/bpf/syscall.c", i32 4774, i32 36}
!207 = !{ptr @bpf_sys_close_proto, !208, !"bpf_sys_close_proto", i1 false, i1 false}
!208 = !{!"../kernel/bpf/syscall.c", i32 4799, i32 36}
!209 = !{!"sp"}
!210 = !{i32 1, !"wchar_size", i32 2}
!211 = !{i32 1, !"min_enum_size", i32 4}
!212 = !{i32 8, !"branch-target-enforcement", i32 0}
!213 = !{i32 8, !"sign-return-address", i32 0}
!214 = !{i32 8, !"sign-return-address-all", i32 0}
!215 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!216 = !{i32 7, !"uwtable", i32 1}
!217 = !{i32 7, !"frame-pointer", i32 2}
!218 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!219 = !{!"branch_weights", i32 1, i32 2000}
!220 = !{!"branch_weights", i32 2000, i32 1}
!221 = !{i64 2158832356, i64 2158832841, i64 2158832393, i64 2158832449, i64 2158832483, i64 2158832507, i64 2158832548, i64 2158832569, i64 2158832597, i64 2158832631}
!222 = !{i64 2154005206}
!223 = !{i64 2154021979}
!224 = !{i64 1203964, i64 1204025}
!225 = !{i64 1206696}
!226 = !{i64 1206981}
!227 = !{i8 0, i8 2}
!228 = !{!229}
!229 = distinct !{!229, !230, !"fdget: %agg.result"}
!230 = distinct !{!230, !"fdget"}
!231 = !{!232}
!232 = distinct !{!232, !233, !"fdget: %agg.result"}
!233 = distinct !{!233, !"fdget"}
!234 = !{i64 2153431211, i64 2153431236}
!235 = !{i64 5926766}
!236 = !{i64 5926963}
!237 = !{i64 2153412196}
!238 = !{i64 2149791585}
!239 = !{i64 2149791851}
!240 = !{i64 2153431892, i64 2153431917}
!241 = !{!242}
!242 = distinct !{!242, !243, !"fdget: %agg.result"}
!243 = distinct !{!243, !"fdget"}
!244 = !{!"auto-init"}
!245 = !{i64 2158866909, i64 2158867189, i64 2158867523, i64 2158867857}
!246 = !{!247}
!247 = distinct !{!247, !248, !"fdget: %agg.result"}
!248 = distinct !{!248, !"fdget"}
!249 = !{!250}
!250 = distinct !{!250, !251, !"fdget: %agg.result"}
!251 = distinct !{!251, !"fdget"}
!252 = !{i64 2151923004}
!253 = !{!254}
!254 = distinct !{!254, !255, !"fdget: %agg.result"}
!255 = distinct !{!255, !"fdget"}
!256 = !{i64 2148888740}
!257 = !{i64 2148803449, i64 2148803481, i64 2148803510, i64 2148803544, i64 2148803575, i64 2148803598}
!258 = !{i64 2148888969}
!259 = !{i64 2154559261}
!260 = !{i64 2154559103}
!261 = !{i64 2154559431}
!262 = !{i64 2150271491}
!263 = !{i64 1064870, i64 1064887}
!264 = !{!265}
!265 = distinct !{!265, !266, !"fdget: %agg.result"}
!266 = distinct !{!266, !"fdget"}
!267 = !{!268}
!268 = distinct !{!268, !269, !"fdget: %agg.result"}
!269 = distinct !{!269, !"fdget"}
!270 = !{!271}
!271 = distinct !{!271, !272, !"fdget: %agg.result"}
!272 = distinct !{!272, !"fdget"}
!273 = !{!274}
!274 = distinct !{!274, !275, !"fdget: %agg.result"}
!275 = distinct !{!275, !"fdget"}
!276 = !{!277}
!277 = distinct !{!277, !278, !"fdget: %agg.result"}
!278 = distinct !{!278, !"fdget"}
!279 = !{!280}
!280 = distinct !{!280, !281, !"fdget: %agg.result"}
!281 = distinct !{!281, !"fdget"}
!282 = !{!283}
!283 = distinct !{!283, !284, !"fdget: %agg.result"}
!284 = distinct !{!284, !"fdget"}
!285 = !{i64 2158959967, i64 2158960247, i64 2158960581, i64 2158960915}
!286 = !{!287}
!287 = distinct !{!287, !288, !"fdget: %agg.result"}
!288 = distinct !{!288, !"fdget"}
!289 = !{i64 2158975405, i64 2158975685, i64 2158976019, i64 2158976353}
!290 = !{i64 2158993804, i64 2158994084, i64 2158994418, i64 2158994752}
!291 = !{i64 2159002655, i64 2159002935, i64 2159003269, i64 2159003603}
!292 = !{i64 2159011580, i64 2159011860, i64 2159012194, i64 2159012528}
!293 = !{i64 2159020412, i64 2159020692, i64 2159021026, i64 2159021360}
!294 = !{i64 2159037250, i64 2159037530, i64 2159037864, i64 2159038198}
!295 = !{i64 2159046131, i64 2159046411, i64 2159046745, i64 2159047079}
!296 = !{i64 2159056952, i64 2159057232, i64 2159057566, i64 2159057900}
!297 = !{i64 2159072062, i64 2159072342, i64 2159072676, i64 2159073010}
!298 = !{!299}
!299 = distinct !{!299, !300, !"fdget: %agg.result"}
!300 = distinct !{!300, !"fdget"}
!301 = !{i64 2148889819}
!302 = !{i64 2148804259, i64 2148804291, i64 2148804320, i64 2148804354, i64 2148804385, i64 2148804408}
!303 = !{i64 2150353135}
!304 = !{!305}
!305 = distinct !{!305, !306, !"fdget: %agg.result"}
!306 = distinct !{!306, !"fdget"}
!307 = !{!308}
!308 = distinct !{!308, !309, !"fdget: %agg.result"}
!309 = distinct !{!309, !"fdget"}
!310 = !{!311}
!311 = distinct !{!311, !312, !"fdget: %agg.result"}
!312 = distinct !{!312, !"fdget"}
!313 = !{!314}
!314 = distinct !{!314, !315, !"fdget: %agg.result"}
!315 = distinct !{!315, !"fdget"}
!316 = !{!317}
!317 = distinct !{!317, !318, !"fdget: %agg.result"}
!318 = distinct !{!318, !"fdget"}
!319 = !{!320}
!320 = distinct !{!320, !321, !"fdget: %agg.result"}
!321 = distinct !{!321, !"fdget"}
!322 = !{!323}
!323 = distinct !{!323, !324, !"fdget: %agg.result"}
!324 = distinct !{!324, !"fdget"}
!325 = !{!326}
!326 = distinct !{!326, !327, !"fdget: %agg.result"}
!327 = distinct !{!327, !"fdget"}
!328 = !{!329}
!329 = distinct !{!329, !330, !"fdget: %agg.result"}
!330 = distinct !{!330, !"fdget"}
!331 = !{i64 2148801794, i64 2148801826, i64 2148801855, i64 2148801889, i64 2148801920, i64 2148801943}
!332 = !{!333}
!333 = distinct !{!333, !334, !"fdget: %agg.result"}
!334 = distinct !{!334, !"fdget"}
!335 = !{i64 2158936331, i64 2158936611, i64 2158936945, i64 2158937279}
!336 = !{i64 2159082942, i64 2159083222, i64 2159083556, i64 2159083890}
!337 = !{i64 2159087797, i64 2159088077, i64 2159088411, i64 2159088745}
!338 = !{i64 2159096665, i64 2159096945, i64 2159097279, i64 2159097613}
!339 = !{i64 2159109499, i64 2159109779, i64 2159110113, i64 2159110447}
!340 = !{i64 2159118406, i64 2159118686, i64 2159119020, i64 2159119354}
!341 = !{i64 2159129310, i64 2159129590, i64 2159129924, i64 2159130258}
!342 = !{i64 2159138238, i64 2159138518, i64 2159138852, i64 2159139186}
