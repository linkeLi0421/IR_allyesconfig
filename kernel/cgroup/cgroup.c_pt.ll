; ModuleID = '/llk/IR_all_yes/kernel/cgroup/cgroup.c_pt.bc'
source_filename = "../kernel/cgroup/cgroup.c"
target datalayout = "E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "armebv6k-unknown-linux-gnueabi"

module asm ".syntax unified"
module asm "\09.section \22___kcrctab_gpl+cgroup_mutex\22, \22a\22\09"
module asm "\09.weak\09__crc_cgroup_mutex\09\09\09\09"
module asm "\09.long\09__crc_cgroup_mutex\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cgroup_mutex:\09\09\09\09\09"
module asm "\09.asciz \09\22cgroup_mutex\22\09\09\09\09\09"
module asm "__kstrtabns_cgroup_mutex:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+css_set_lock\22, \22a\22\09"
module asm "\09.weak\09__crc_css_set_lock\09\09\09\09"
module asm "\09.long\09__crc_css_set_lock\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_css_set_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22css_set_lock\22\09\09\09\09\09"
module asm "__kstrtabns_css_set_lock:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cpuset_cgrp_subsys_enabled_key\22, \22a\22\09"
module asm "\09.weak\09__crc_cpuset_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.long\09__crc_cpuset_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cpuset_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22cpuset_cgrp_subsys_enabled_key\22\09\09\09\09\09"
module asm "__kstrtabns_cpuset_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cpuset_cgrp_subsys_on_dfl_key\22, \22a\22\09"
module asm "\09.weak\09__crc_cpuset_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.long\09__crc_cpuset_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cpuset_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22cpuset_cgrp_subsys_on_dfl_key\22\09\09\09\09\09"
module asm "__kstrtabns_cpuset_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cpu_cgrp_subsys_enabled_key\22, \22a\22\09"
module asm "\09.weak\09__crc_cpu_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.long\09__crc_cpu_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cpu_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22cpu_cgrp_subsys_enabled_key\22\09\09\09\09\09"
module asm "__kstrtabns_cpu_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cpu_cgrp_subsys_on_dfl_key\22, \22a\22\09"
module asm "\09.weak\09__crc_cpu_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.long\09__crc_cpu_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cpu_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22cpu_cgrp_subsys_on_dfl_key\22\09\09\09\09\09"
module asm "__kstrtabns_cpu_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cpuacct_cgrp_subsys_enabled_key\22, \22a\22\09"
module asm "\09.weak\09__crc_cpuacct_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.long\09__crc_cpuacct_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cpuacct_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22cpuacct_cgrp_subsys_enabled_key\22\09\09\09\09\09"
module asm "__kstrtabns_cpuacct_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cpuacct_cgrp_subsys_on_dfl_key\22, \22a\22\09"
module asm "\09.weak\09__crc_cpuacct_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.long\09__crc_cpuacct_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cpuacct_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22cpuacct_cgrp_subsys_on_dfl_key\22\09\09\09\09\09"
module asm "__kstrtabns_cpuacct_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+io_cgrp_subsys_enabled_key\22, \22a\22\09"
module asm "\09.weak\09__crc_io_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.long\09__crc_io_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_io_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22io_cgrp_subsys_enabled_key\22\09\09\09\09\09"
module asm "__kstrtabns_io_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+io_cgrp_subsys_on_dfl_key\22, \22a\22\09"
module asm "\09.weak\09__crc_io_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.long\09__crc_io_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_io_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22io_cgrp_subsys_on_dfl_key\22\09\09\09\09\09"
module asm "__kstrtabns_io_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+memory_cgrp_subsys_enabled_key\22, \22a\22\09"
module asm "\09.weak\09__crc_memory_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.long\09__crc_memory_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_memory_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22memory_cgrp_subsys_enabled_key\22\09\09\09\09\09"
module asm "__kstrtabns_memory_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+memory_cgrp_subsys_on_dfl_key\22, \22a\22\09"
module asm "\09.weak\09__crc_memory_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.long\09__crc_memory_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_memory_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22memory_cgrp_subsys_on_dfl_key\22\09\09\09\09\09"
module asm "__kstrtabns_memory_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+devices_cgrp_subsys_enabled_key\22, \22a\22\09"
module asm "\09.weak\09__crc_devices_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.long\09__crc_devices_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devices_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22devices_cgrp_subsys_enabled_key\22\09\09\09\09\09"
module asm "__kstrtabns_devices_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+devices_cgrp_subsys_on_dfl_key\22, \22a\22\09"
module asm "\09.weak\09__crc_devices_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.long\09__crc_devices_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_devices_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22devices_cgrp_subsys_on_dfl_key\22\09\09\09\09\09"
module asm "__kstrtabns_devices_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+freezer_cgrp_subsys_enabled_key\22, \22a\22\09"
module asm "\09.weak\09__crc_freezer_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.long\09__crc_freezer_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_freezer_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22freezer_cgrp_subsys_enabled_key\22\09\09\09\09\09"
module asm "__kstrtabns_freezer_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+freezer_cgrp_subsys_on_dfl_key\22, \22a\22\09"
module asm "\09.weak\09__crc_freezer_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.long\09__crc_freezer_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_freezer_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22freezer_cgrp_subsys_on_dfl_key\22\09\09\09\09\09"
module asm "__kstrtabns_freezer_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+net_cls_cgrp_subsys_enabled_key\22, \22a\22\09"
module asm "\09.weak\09__crc_net_cls_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.long\09__crc_net_cls_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_net_cls_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22net_cls_cgrp_subsys_enabled_key\22\09\09\09\09\09"
module asm "__kstrtabns_net_cls_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+net_cls_cgrp_subsys_on_dfl_key\22, \22a\22\09"
module asm "\09.weak\09__crc_net_cls_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.long\09__crc_net_cls_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_net_cls_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22net_cls_cgrp_subsys_on_dfl_key\22\09\09\09\09\09"
module asm "__kstrtabns_net_cls_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+perf_event_cgrp_subsys_enabled_key\22, \22a\22\09"
module asm "\09.weak\09__crc_perf_event_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.long\09__crc_perf_event_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_perf_event_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22perf_event_cgrp_subsys_enabled_key\22\09\09\09\09\09"
module asm "__kstrtabns_perf_event_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+perf_event_cgrp_subsys_on_dfl_key\22, \22a\22\09"
module asm "\09.weak\09__crc_perf_event_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.long\09__crc_perf_event_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_perf_event_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22perf_event_cgrp_subsys_on_dfl_key\22\09\09\09\09\09"
module asm "__kstrtabns_perf_event_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+net_prio_cgrp_subsys_enabled_key\22, \22a\22\09"
module asm "\09.weak\09__crc_net_prio_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.long\09__crc_net_prio_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_net_prio_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22net_prio_cgrp_subsys_enabled_key\22\09\09\09\09\09"
module asm "__kstrtabns_net_prio_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+net_prio_cgrp_subsys_on_dfl_key\22, \22a\22\09"
module asm "\09.weak\09__crc_net_prio_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.long\09__crc_net_prio_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_net_prio_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22net_prio_cgrp_subsys_on_dfl_key\22\09\09\09\09\09"
module asm "__kstrtabns_net_prio_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pids_cgrp_subsys_enabled_key\22, \22a\22\09"
module asm "\09.weak\09__crc_pids_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.long\09__crc_pids_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pids_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22pids_cgrp_subsys_enabled_key\22\09\09\09\09\09"
module asm "__kstrtabns_pids_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+pids_cgrp_subsys_on_dfl_key\22, \22a\22\09"
module asm "\09.weak\09__crc_pids_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.long\09__crc_pids_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_pids_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22pids_cgrp_subsys_on_dfl_key\22\09\09\09\09\09"
module asm "__kstrtabns_pids_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rdma_cgrp_subsys_enabled_key\22, \22a\22\09"
module asm "\09.weak\09__crc_rdma_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.long\09__crc_rdma_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rdma_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22rdma_cgrp_subsys_enabled_key\22\09\09\09\09\09"
module asm "__kstrtabns_rdma_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+rdma_cgrp_subsys_on_dfl_key\22, \22a\22\09"
module asm "\09.weak\09__crc_rdma_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.long\09__crc_rdma_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_rdma_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22rdma_cgrp_subsys_on_dfl_key\22\09\09\09\09\09"
module asm "__kstrtabns_rdma_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+misc_cgrp_subsys_enabled_key\22, \22a\22\09"
module asm "\09.weak\09__crc_misc_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.long\09__crc_misc_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_misc_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22misc_cgrp_subsys_enabled_key\22\09\09\09\09\09"
module asm "__kstrtabns_misc_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+misc_cgrp_subsys_on_dfl_key\22, \22a\22\09"
module asm "\09.weak\09__crc_misc_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.long\09__crc_misc_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_misc_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22misc_cgrp_subsys_on_dfl_key\22\09\09\09\09\09"
module asm "__kstrtabns_misc_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+debug_cgrp_subsys_enabled_key\22, \22a\22\09"
module asm "\09.weak\09__crc_debug_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.long\09__crc_debug_cgrp_subsys_enabled_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_debug_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22debug_cgrp_subsys_enabled_key\22\09\09\09\09\09"
module asm "__kstrtabns_debug_cgrp_subsys_enabled_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+debug_cgrp_subsys_on_dfl_key\22, \22a\22\09"
module asm "\09.weak\09__crc_debug_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.long\09__crc_debug_cgrp_subsys_on_dfl_key\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_debug_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22debug_cgrp_subsys_on_dfl_key\22\09\09\09\09\09"
module asm "__kstrtabns_debug_cgrp_subsys_on_dfl_key:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cgrp_dfl_root\22, \22a\22\09"
module asm "\09.weak\09__crc_cgrp_dfl_root\09\09\09\09"
module asm "\09.long\09__crc_cgrp_dfl_root\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cgrp_dfl_root:\09\09\09\09\09"
module asm "\09.asciz \09\22cgrp_dfl_root\22\09\09\09\09\09"
module asm "__kstrtabns_cgrp_dfl_root:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cgroup_get_e_css\22, \22a\22\09"
module asm "\09.weak\09__crc_cgroup_get_e_css\09\09\09\09"
module asm "\09.long\09__crc_cgroup_get_e_css\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cgroup_get_e_css:\09\09\09\09\09"
module asm "\09.asciz \09\22cgroup_get_e_css\22\09\09\09\09\09"
module asm "__kstrtabns_cgroup_get_e_css:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+of_css\22, \22a\22\09"
module asm "\09.weak\09__crc_of_css\09\09\09\09"
module asm "\09.long\09__crc_of_css\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_of_css:\09\09\09\09\09"
module asm "\09.asciz \09\22of_css\22\09\09\09\09\09"
module asm "__kstrtabns_of_css:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cgroup_path_ns\22, \22a\22\09"
module asm "\09.weak\09__crc_cgroup_path_ns\09\09\09\09"
module asm "\09.long\09__crc_cgroup_path_ns\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cgroup_path_ns:\09\09\09\09\09"
module asm "\09.asciz \09\22cgroup_path_ns\22\09\09\09\09\09"
module asm "__kstrtabns_cgroup_path_ns:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+task_cgroup_path\22, \22a\22\09"
module asm "\09.weak\09__crc_task_cgroup_path\09\09\09\09"
module asm "\09.long\09__crc_task_cgroup_path\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_task_cgroup_path:\09\09\09\09\09"
module asm "\09.asciz \09\22task_cgroup_path\22\09\09\09\09\09"
module asm "__kstrtabns_task_cgroup_path:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+css_next_descendant_pre\22, \22a\22\09"
module asm "\09.weak\09__crc_css_next_descendant_pre\09\09\09\09"
module asm "\09.long\09__crc_css_next_descendant_pre\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_css_next_descendant_pre:\09\09\09\09\09"
module asm "\09.asciz \09\22css_next_descendant_pre\22\09\09\09\09\09"
module asm "__kstrtabns_css_next_descendant_pre:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cgroup_get_from_id\22, \22a\22\09"
module asm "\09.weak\09__crc_cgroup_get_from_id\09\09\09\09"
module asm "\09.long\09__crc_cgroup_get_from_id\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cgroup_get_from_id:\09\09\09\09\09"
module asm "\09.asciz \09\22cgroup_get_from_id\22\09\09\09\09\09"
module asm "__kstrtabns_cgroup_get_from_id:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cgroup_get_from_path\22, \22a\22\09"
module asm "\09.weak\09__crc_cgroup_get_from_path\09\09\09\09"
module asm "\09.long\09__crc_cgroup_get_from_path\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cgroup_get_from_path:\09\09\09\09\09"
module asm "\09.asciz \09\22cgroup_get_from_path\22\09\09\09\09\09"
module asm "__kstrtabns_cgroup_get_from_path:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"
module asm "\09.section \22___kcrctab_gpl+cgroup_get_from_fd\22, \22a\22\09"
module asm "\09.weak\09__crc_cgroup_get_from_fd\09\09\09\09"
module asm "\09.long\09__crc_cgroup_get_from_fd\09\09\09\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22__ksymtab_strings\22,\22aMS\22,%progbits,1\09"
module asm "__kstrtab_cgroup_get_from_fd:\09\09\09\09\09"
module asm "\09.asciz \09\22cgroup_get_from_fd\22\09\09\09\09\09"
module asm "__kstrtabns_cgroup_get_from_fd:\09\09\09\09\09"
module asm "\09.asciz \09\22\22\09\09\09\09\09"
module asm "\09.previous\09\09\09\09\09\09"

%struct.static_call_key = type { ptr }
%struct.atomic_t = type { i32 }
%struct.trace_event_fields = type { ptr, %union.anon.202 }
%union.anon.202 = type { %struct.anon.203 }
%struct.anon.203 = type { ptr, i32, i32, i32, i32 }
%struct.trace_event_class = type { ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head, ptr }
%struct.list_head = type { ptr, ptr }
%struct.trace_event_functions = type { ptr, ptr, ptr, ptr }
%struct.trace_event_call = type { %struct.list_head, ptr, %union.anon.204, %struct.trace_event, ptr, ptr, %union.anon.205, ptr, i32, i32, ptr, ptr, ptr }
%union.anon.204 = type { ptr }
%struct.trace_event = type { %struct.hlist_node, %struct.list_head, i32, ptr }
%struct.hlist_node = type { ptr, ptr }
%union.anon.205 = type { ptr }
%union.anon.206 = type { %struct.bpf_raw_event_map }
%struct.bpf_raw_event_map = type { ptr, ptr, i32, i32, [16 x i8] }
%union.anon.207 = type { %struct.bpf_raw_event_map }
%union.anon.208 = type { %struct.bpf_raw_event_map }
%union.anon.209 = type { %struct.bpf_raw_event_map }
%union.anon.210 = type { %struct.bpf_raw_event_map }
%union.anon.211 = type { %struct.bpf_raw_event_map }
%union.anon.212 = type { %struct.bpf_raw_event_map }
%union.anon.213 = type { %struct.bpf_raw_event_map }
%union.anon.214 = type { %struct.bpf_raw_event_map }
%union.anon.215 = type { %struct.bpf_raw_event_map }
%union.anon.216 = type { %struct.bpf_raw_event_map }
%union.anon.217 = type { %struct.bpf_raw_event_map }
%union.anon.218 = type { %struct.bpf_raw_event_map }
%struct.mutex = type { %struct.atomic_t, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.list_head, ptr, %struct.lockdep_map }
%struct.raw_spinlock = type { %struct.arch_spinlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_spinlock_t = type { %union.anon.4 }
%union.anon.4 = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.lockdep_map = type { ptr, [2 x ptr], ptr, i8, i8, i8, i32, i32 }
%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.kernel_symbol = type { i32, ptr, ptr }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, ptr, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t, %struct.lockdep_map }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.callback_head = type { ptr, ptr }
%struct.rcuwait = type { ptr }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.cgroup_subsys = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i8, i32, ptr, ptr, ptr, %struct.idr, %struct.list_head, ptr, ptr, i32 }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.xarray = type { %struct.spinlock, i32, ptr }
%struct.cgroup_rstat_cpu = type { %struct.u64_stats_sync, %struct.cgroup_base_stat, %struct.cgroup_base_stat, ptr, ptr }
%struct.u64_stats_sync = type { %struct.seqcount }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.cgroup_base_stat = type { %struct.task_cputime }
%struct.task_cputime = type { i64, i64, i64 }
%struct.cgroup_root = type { ptr, i32, i32, %struct.cgroup, i64, %struct.atomic_t, %struct.list_head, i32, [4096 x i8], [64 x i8] }
%struct.cgroup = type { %struct.cgroup_subsys_state, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, %struct.cgroup_file, %struct.cgroup_file, i16, i16, i16, i16, [14 x ptr], ptr, %struct.list_head, [14 x %struct.list_head], ptr, ptr, ptr, %struct.list_head, %struct.cgroup_base_stat, %struct.cgroup_base_stat, %struct.prev_cputime, %struct.list_head, %struct.mutex, %struct.wait_queue_head, %struct.work_struct, %struct.psi_group, %struct.cgroup_bpf, %struct.atomic_t, %struct.cgroup_freezer_state, [0 x i64] }
%struct.cgroup_subsys_state = type { ptr, ptr, %struct.percpu_ref, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i64, %struct.atomic_t, %struct.work_struct, %struct.rcu_work, ptr }
%struct.percpu_ref = type { i32, ptr }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, ptr }
%struct.cgroup_file = type { ptr, i32, %struct.timer_list }
%struct.timer_list = type { %struct.hlist_node, i32, ptr, i32, %struct.lockdep_map }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.work_struct = type { %struct.atomic_t, %struct.list_head, ptr, %struct.lockdep_map }
%struct.psi_group = type { %struct.mutex, ptr, [6 x i64], i64, i64, %struct.delayed_work, [2 x [6 x i64]], [6 x [3 x i32]], ptr, %struct.timer_list, %struct.wait_queue_head, %struct.atomic_t, %struct.mutex, %struct.list_head, [6 x i32], i32, i64, [6 x i64], i64, i64 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, ptr, i32 }
%struct.cgroup_bpf = type { [23 x ptr], [23 x %struct.list_head], [23 x i32], %struct.list_head, ptr, %struct.percpu_ref, %struct.work_struct }
%struct.cgroup_freezer_state = type { i8, i32, i32, i32 }
%struct.proc_ns_operations = type { ptr, ptr, i32, ptr, ptr, ptr, ptr, ptr }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i32, i8, %struct.list_head, ptr, %struct.rw_semaphore, ptr, %struct.work_struct, %struct.ctl_table_set, ptr, ptr, [16 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.7 }
%union.anon.7 = type { [5 x %struct.uid_gid_extent] }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.ns_common = type { %struct.atomic_t, ptr, i32, %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.rw_semaphore = type { %struct.atomic_t, %struct.atomic_t, %struct.optimistic_spin_queue, %struct.raw_spinlock, %struct.list_head, ptr, %struct.lockdep_map }
%struct.ctl_table_set = type { ptr, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.115, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head }
%union.anon.115 = type { %struct.anon.116 }
%struct.anon.116 = type { ptr, i32, i32, i32 }
%struct.hlist_head = type { ptr }
%struct.rb_root = type { ptr }
%struct.css_set = type { [14 x ptr], %struct.refcount_struct, ptr, ptr, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, [14 x %struct.list_head], %struct.list_head, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, ptr, ptr, ptr, i8, %struct.callback_head }
%struct.cgroup_namespace = type { %struct.ns_common, ptr, ptr, ptr }
%struct.pi_entry = type { ptr, ptr, ptr, i32, ptr, ptr }
%struct.kernfs_syscall_ops = type { ptr, ptr, ptr, ptr, ptr }
%struct.file_system_type = type { ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.lock_class_key = type { %union.anon.0 }
%union.anon.0 = type { %struct.hlist_node }
%struct.fs_parameter_spec = type { ptr, ptr, i8, i16, ptr }
%struct.cgroup_fs_context = type { %struct.kernfs_fs_context, ptr, ptr, i32, i8, i8, i8, i16, ptr, ptr }
%struct.kernfs_fs_context = type { ptr, ptr, i32, i8 }
%struct.task_struct = type { i32, ptr, %struct.refcount_struct, i32, i32, i32, %struct.__call_single_node, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, [56 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, ptr, %struct.rb_node, i32, i32, ptr, [2 x %struct.uclamp_se], [2 x %struct.uclamp_se], [116 x i8], %struct.sched_statistics, i32, i32, i32, ptr, ptr, %struct.cpumask, ptr, i16, i16, i32, i8, i8, i32, %struct.list_head, i32, i32, %union.rcu_special, i8, %struct.list_head, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, ptr, ptr, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i16, i32, %struct.restart_block, i32, i32, i32, ptr, ptr, %struct.list_head, %struct.list_head, ptr, %struct.list_head, %struct.list_head, ptr, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, ptr, ptr, ptr, ptr, i64, i64, i64, %struct.prev_cputime, i32, i32, i64, i64, i32, i32, %struct.posix_cputimers, ptr, ptr, ptr, ptr, [16 x i8], ptr, %struct.sysv_sem, %struct.sysv_shm, i32, i32, ptr, ptr, ptr, ptr, ptr, ptr, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i32, i32, i32, ptr, %struct.kuid_t, i32, %struct.seccomp, %struct.syscall_user_dispatch, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, ptr, ptr, ptr, i32, %struct.irqtrace_events, i32, i64, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, ptr, %struct.task_io_accounting, i32, i64, i64, i64, %struct.nodemask_t, %struct.seqcount_spinlock, i32, i32, ptr, %struct.list_head, ptr, %struct.list_head, ptr, %struct.mutex, i32, [2 x ptr], %struct.mutex, %struct.list_head, ptr, i32, i32, %struct.tlbflush_unmap_batch, %union.anon.111, ptr, %struct.page_frag, ptr, i32, i32, i32, i32, i32, i32, [32 x %struct.latency_record], i64, i64, i32, ptr, i32, i32, i32, i32, ptr, ptr, i64, i32, i32, ptr, i32, i32, i32, ptr, ptr, ptr, i32, i32, %struct.kmap_ctrl, i32, i32, ptr, ptr, ptr, ptr, %struct.llist_head, %struct.thread_struct, [84 x i8] }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.9 }
%struct.llist_node = type { ptr }
%union.anon.9 = type { i32 }
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, i32, ptr, ptr, ptr, i32, [36 x i8], %struct.sched_avg }
%struct.load_weight = type { i32, i32 }
%struct.sched_avg = type { i64, i64, i64, i32, i32, i32, i32, i32, [4 x i8], %struct.util_est, [72 x i8] }
%struct.util_est = type { i32, i32 }
%struct.sched_rt_entity = type { %struct.list_head, i32, i32, i32, i16, i16, ptr, ptr, ptr, ptr }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, ptr }
%struct.hrtimer = type { %struct.timerqueue_node, i64, ptr, ptr, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.uclamp_se = type { i16, [2 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [24 x i8] }
%struct.cpumask = type { [1 x i32] }
%union.rcu_special = type { i32 }
%struct.sched_info = type { i32, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.rb_node = type { i32, ptr, ptr }
%struct.vmacache = type { i64, [4 x ptr] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i32, ptr, %union.anon.86 }
%union.anon.86 = type { %struct.anon.87 }
%struct.anon.87 = type { ptr, i32, i32, i32, i64, ptr }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.sysv_sem = type { ptr }
%struct.sysv_shm = type { %struct.list_head }
%struct.sigset_t = type { [2 x i32] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, ptr }
%struct.syscall_user_dispatch = type {}
%struct.wake_q_node = type { ptr }
%struct.rb_root_cached = type { %struct.rb_root, ptr }
%struct.irqtrace_events = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.held_lock = type { i64, i32, ptr, ptr, i64, i64, i32, i32 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i32] }
%struct.seqcount_spinlock = type { %struct.seqcount, ptr }
%struct.tlbflush_unmap_batch = type {}
%union.anon.111 = type { %struct.callback_head }
%struct.page_frag = type { ptr, i16, i16 }
%struct.latency_record = type { [12 x i32], i32, i32, i32 }
%struct.kmap_ctrl = type { i32, [33 x i32] }
%struct.llist_head = type { ptr }
%struct.thread_struct = type { i32, i32, i32, %struct.debug_info }
%struct.debug_info = type { [32 x ptr] }
%struct.cftype = type { [64 x i8], i32, i32, i32, i32, ptr, %struct.list_head, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.lock_class_key }
%struct.obs_kernel_param = type { ptr, ptr, i32 }
%struct.fs_context_operations = type { ptr, ptr, ptr, ptr, ptr, ptr }
%struct.kernfs_ops = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i8, ptr, ptr, ptr }
%struct.radix_tree_preload = type { %struct.local_lock_t, i32, ptr }
%struct.local_lock_t = type { %struct.lockdep_map, ptr }
%struct.attribute_group = type { ptr, ptr, ptr, ptr, ptr }
%struct.kobj_attribute = type { %struct.attribute, ptr, ptr }
%struct.attribute = type { ptr, i16, i8, ptr, %struct.lock_class_key }
%struct.tracepoint_func = type { ptr, ptr, i32 }
%struct.trace_event_buffer = type { ptr, ptr, ptr, ptr, i32, ptr }
%struct.trace_event_file = type { %struct.list_head, ptr, ptr, ptr, ptr, ptr, %struct.list_head, i32, %struct.atomic_t, %struct.atomic_t }
%struct.trace_event_raw_cgroup_root = type { %struct.trace_entry, i32, i16, i32, [0 x i8] }
%struct.trace_entry = type { i16, i8, i8, i32 }
%struct.thread_info = type { i32, i32, ptr, i32, i32, %struct.cpu_context_save, i32, [16 x i8], [2 x i32], %union.fp_state, %union.vfp_state, i32 }
%struct.cpu_context_save = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%union.fp_state = type { %struct.iwmmxt_struct }
%struct.iwmmxt_struct = type { [38 x i32] }
%union.vfp_state = type { %struct.vfp_hard_struct }
%struct.vfp_hard_struct = type { [32 x i64], i32, i32, i32, i32, i32 }
%struct.trace_event_raw_cgroup = type { %struct.trace_entry, i32, i32, i64, i32, [0 x i8] }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.lockdep_map, ptr, ptr, %struct.rb_node, ptr, i32, %union.anon.1, ptr, i64, i16, i16, ptr }
%union.anon.1 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { ptr, ptr, i64, ptr }
%struct.trace_event_raw_cgroup_migrate = type { %struct.trace_entry, i32, i32, i64, i32, i32, i32, [0 x i8] }
%struct.trace_event_raw_cgroup_event = type { %struct.trace_entry, i32, i32, i64, i32, i32, [0 x i8] }
%struct.wait_queue_entry = type { i32, ptr, ptr, %struct.list_head }
%struct.cgroup_mgctx = type { %struct.list_head, %struct.list_head, %struct.cgroup_taskset, i16 }
%struct.cgroup_taskset = type { %struct.list_head, %struct.list_head, i32, i32, ptr, ptr, ptr }
%struct.nsproxy = type { %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }
%struct.cgrp_cset_link = type { ptr, ptr, %struct.list_head, %struct.list_head }
%struct.fs_context = type { ptr, %struct.mutex, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.p_log, ptr, ptr, ptr, i32, i32, i32, i32, i24 }
%struct.p_log = type { ptr, ptr }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, ptr, %struct.qstr, ptr, [36 x i8], %struct.lockref, ptr, ptr, i32, ptr, %union.anon.125, %struct.list_head, %struct.list_head, %union.anon.126 }
%struct.hlist_bl_node = type { ptr, ptr }
%struct.qstr = type { %union.anon.5, ptr }
%union.anon.5 = type { i64 }
%struct.lockref = type { %union.anon.123 }
%union.anon.123 = type { %struct.anon.124 }
%struct.anon.124 = type { %struct.spinlock, i32 }
%union.anon.125 = type { %struct.list_head }
%union.anon.126 = type { %struct.hlist_node }
%struct.css_task_iter = type { ptr, i32, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %struct.list_head }
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, ptr, %struct.sigpending, %struct.hlist_head, i32, i32, ptr, i32, i32, ptr, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x ptr], ptr, i32, ptr, ptr, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.task_io_accounting, i64, [16 x %struct.rlimit], %struct.pacct_struct, ptr, i32, ptr, i8, i16, i16, ptr, %struct.mutex, %struct.rw_semaphore }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.atomic64_t = type { i64 }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i32, i32 }
%struct.pacct_struct = type { i32, i32, i32, i64, i64, i32, i32 }
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, ptr }
%struct.timespec64 = type { i64, i32 }
%struct.cred = type { %struct.atomic_t, %struct.atomic_t, ptr, i32, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, %union.anon.71 }
%struct.kernel_cap_struct = type { [2 x i32] }
%union.anon.71 = type { %struct.callback_head }
%struct.kernel_clone_args = type { i64, ptr, ptr, ptr, i32, i32, i32, i32, ptr, i32, i32, i32, ptr, ptr }
%struct.file = type { %union.anon.2, %struct.path, ptr, ptr, %struct.spinlock, i32, %struct.atomic_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, ptr, %struct.file_ra_state, i64, ptr, ptr, ptr, ptr, i32, i32 }
%union.anon.2 = type { %struct.callback_head }
%struct.path = type { ptr, ptr }
%struct.fown_struct = type { %struct.rwlock_t, ptr, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t, i32, i32, ptr, %struct.lockdep_map }
%struct.arch_rwlock_t = type { i32 }
%struct.file_ra_state = type { i32, i32, i32, i32, i32, i64 }
%struct.super_block = type { %struct.list_head, i32, i8, i32, i64, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, ptr, %struct.rw_semaphore, i32, %struct.atomic_t, ptr, ptr, ptr, ptr, ptr, ptr, i16, %struct.hlist_bl_head, %struct.list_head, ptr, ptr, ptr, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, ptr, i32, i64, i64, i32, ptr, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, ptr, ptr, %struct.shrinker, %struct.atomic_t, %struct.atomic_t, i32, i32, ptr, %struct.hlist_head, ptr, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [24 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [24 x i8] }
%struct.hlist_bl_head = type { ptr }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x ptr], [3 x %struct.mem_dqinfo], [3 x ptr] }
%struct.mem_dqinfo = type { ptr, i32, %struct.list_head, i32, i32, i32, i64, i64, ptr }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { ptr, ptr, i32, i32, i32, %struct.list_head, i32, ptr }
%struct.list_lru = type { ptr, %struct.list_head, i32, i8 }
%struct.trace_iterator = type { ptr, ptr, ptr, ptr, i32, %struct.mutex, ptr, i32, ptr, i32, ptr, i32, %struct.trace_seq, ptr, i8, %struct.trace_seq, ptr, i32, i32, i32, i32, i64, i64, i32 }
%struct.trace_seq = type { [4096 x i8], %struct.seq_buf, i32 }
%struct.seq_buf = type { ptr, i32, i32, i64 }
%struct.percpu_ref_data = type { %struct.atomic_t, ptr, ptr, i8, %struct.callback_head, ptr }
%struct.fs_parse_result = type { i8, %union.anon.92 }
%union.anon.92 = type { i64 }
%struct.kernfs_open_file = type { ptr, ptr, ptr, ptr, %struct.mutex, %struct.mutex, i32, %struct.list_head, ptr, i32, i8, ptr }
%struct.seq_file = type { ptr, i32, i32, i32, i32, i64, i64, %struct.mutex, ptr, i32, ptr, ptr }
%struct.cgroup_file_ctx = type { ptr, %struct.anon.220, %struct.anon.221, %struct.anon.222 }
%struct.anon.220 = type { ptr }
%struct.anon.221 = type { i8, %struct.css_task_iter }
%struct.anon.222 = type { ptr }

@__tpstrtab_cgroup_setup_root = internal constant [18 x i8] c"cgroup_setup_root\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cgroup_setup_root = dso_local global %struct.static_call_key { ptr @__traceiter_cgroup_setup_root }, align 4
@__tracepoint_cgroup_setup_root = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_cgroup_setup_root, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_cgroup_setup_root, ptr null, ptr @__traceiter_cgroup_setup_root, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cgroup_setup_root = internal constant ptr @__tracepoint_cgroup_setup_root, section "__tracepoints_ptrs", align 4
@__tpstrtab_cgroup_destroy_root = internal constant [20 x i8] c"cgroup_destroy_root\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cgroup_destroy_root = dso_local global %struct.static_call_key { ptr @__traceiter_cgroup_destroy_root }, align 4
@__tracepoint_cgroup_destroy_root = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_cgroup_destroy_root, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_cgroup_destroy_root, ptr null, ptr @__traceiter_cgroup_destroy_root, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cgroup_destroy_root = internal constant ptr @__tracepoint_cgroup_destroy_root, section "__tracepoints_ptrs", align 4
@__tpstrtab_cgroup_remount = internal constant [15 x i8] c"cgroup_remount\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cgroup_remount = dso_local global %struct.static_call_key { ptr @__traceiter_cgroup_remount }, align 4
@__tracepoint_cgroup_remount = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_cgroup_remount, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_cgroup_remount, ptr null, ptr @__traceiter_cgroup_remount, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cgroup_remount = internal constant ptr @__tracepoint_cgroup_remount, section "__tracepoints_ptrs", align 4
@__tpstrtab_cgroup_mkdir = internal constant [13 x i8] c"cgroup_mkdir\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cgroup_mkdir = dso_local global %struct.static_call_key { ptr @__traceiter_cgroup_mkdir }, align 4
@__tracepoint_cgroup_mkdir = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_cgroup_mkdir, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_cgroup_mkdir, ptr null, ptr @__traceiter_cgroup_mkdir, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cgroup_mkdir = internal constant ptr @__tracepoint_cgroup_mkdir, section "__tracepoints_ptrs", align 4
@__tpstrtab_cgroup_rmdir = internal constant [13 x i8] c"cgroup_rmdir\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cgroup_rmdir = dso_local global %struct.static_call_key { ptr @__traceiter_cgroup_rmdir }, align 4
@__tracepoint_cgroup_rmdir = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_cgroup_rmdir, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_cgroup_rmdir, ptr null, ptr @__traceiter_cgroup_rmdir, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cgroup_rmdir = internal constant ptr @__tracepoint_cgroup_rmdir, section "__tracepoints_ptrs", align 4
@__tpstrtab_cgroup_release = internal constant [15 x i8] c"cgroup_release\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cgroup_release = dso_local global %struct.static_call_key { ptr @__traceiter_cgroup_release }, align 4
@__tracepoint_cgroup_release = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_cgroup_release, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_cgroup_release, ptr null, ptr @__traceiter_cgroup_release, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cgroup_release = internal constant ptr @__tracepoint_cgroup_release, section "__tracepoints_ptrs", align 4
@__tpstrtab_cgroup_rename = internal constant [14 x i8] c"cgroup_rename\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cgroup_rename = dso_local global %struct.static_call_key { ptr @__traceiter_cgroup_rename }, align 4
@__tracepoint_cgroup_rename = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_cgroup_rename, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_cgroup_rename, ptr null, ptr @__traceiter_cgroup_rename, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cgroup_rename = internal constant ptr @__tracepoint_cgroup_rename, section "__tracepoints_ptrs", align 4
@__tpstrtab_cgroup_freeze = internal constant [14 x i8] c"cgroup_freeze\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cgroup_freeze = dso_local global %struct.static_call_key { ptr @__traceiter_cgroup_freeze }, align 4
@__tracepoint_cgroup_freeze = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_cgroup_freeze, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_cgroup_freeze, ptr null, ptr @__traceiter_cgroup_freeze, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cgroup_freeze = internal constant ptr @__tracepoint_cgroup_freeze, section "__tracepoints_ptrs", align 4
@__tpstrtab_cgroup_unfreeze = internal constant [16 x i8] c"cgroup_unfreeze\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cgroup_unfreeze = dso_local global %struct.static_call_key { ptr @__traceiter_cgroup_unfreeze }, align 4
@__tracepoint_cgroup_unfreeze = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_cgroup_unfreeze, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_cgroup_unfreeze, ptr null, ptr @__traceiter_cgroup_unfreeze, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cgroup_unfreeze = internal constant ptr @__tracepoint_cgroup_unfreeze, section "__tracepoints_ptrs", align 4
@__tpstrtab_cgroup_attach_task = internal constant [19 x i8] c"cgroup_attach_task\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cgroup_attach_task = dso_local global %struct.static_call_key { ptr @__traceiter_cgroup_attach_task }, align 4
@__tracepoint_cgroup_attach_task = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_cgroup_attach_task, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_cgroup_attach_task, ptr null, ptr @__traceiter_cgroup_attach_task, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cgroup_attach_task = internal constant ptr @__tracepoint_cgroup_attach_task, section "__tracepoints_ptrs", align 4
@__tpstrtab_cgroup_transfer_tasks = internal constant [22 x i8] c"cgroup_transfer_tasks\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cgroup_transfer_tasks = dso_local global %struct.static_call_key { ptr @__traceiter_cgroup_transfer_tasks }, align 4
@__tracepoint_cgroup_transfer_tasks = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_cgroup_transfer_tasks, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_cgroup_transfer_tasks, ptr null, ptr @__traceiter_cgroup_transfer_tasks, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cgroup_transfer_tasks = internal constant ptr @__tracepoint_cgroup_transfer_tasks, section "__tracepoints_ptrs", align 4
@__tpstrtab_cgroup_notify_populated = internal constant [24 x i8] c"cgroup_notify_populated\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cgroup_notify_populated = dso_local global %struct.static_call_key { ptr @__traceiter_cgroup_notify_populated }, align 4
@__tracepoint_cgroup_notify_populated = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_cgroup_notify_populated, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_cgroup_notify_populated, ptr null, ptr @__traceiter_cgroup_notify_populated, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cgroup_notify_populated = internal constant ptr @__tracepoint_cgroup_notify_populated, section "__tracepoints_ptrs", align 4
@__tpstrtab_cgroup_notify_frozen = internal constant [21 x i8] c"cgroup_notify_frozen\00", section "__tracepoints_strings", align 1
@__SCK__tp_func_cgroup_notify_frozen = dso_local global %struct.static_call_key { ptr @__traceiter_cgroup_notify_frozen }, align 4
@__tracepoint_cgroup_notify_frozen = dso_local global { ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr } { ptr @__tpstrtab_cgroup_notify_frozen, { %struct.atomic_t, { ptr } } zeroinitializer, ptr @__SCK__tp_func_cgroup_notify_frozen, ptr null, ptr @__traceiter_cgroup_notify_frozen, ptr null, ptr null, ptr null }, section "__tracepoints", align 4
@__tracepoint_ptr_cgroup_notify_frozen = internal constant ptr @__tracepoint_cgroup_notify_frozen, section "__tracepoints_ptrs", align 4
@str__cgroup__trace_system_name = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"cgroup\00", [25 x i8] zeroinitializer }, align 32
@trace_event_fields_cgroup_root = internal global { [4 x %struct.trace_event_fields], [32 x i8] } { [4 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.33, %union.anon.202 { %struct.anon.203 { ptr @.str.34, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.35, %union.anon.202 { %struct.anon.203 { ptr @.str.36, i32 2, i32 2, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.37, %union.anon.202 { %struct.anon.203 { ptr @.str.38, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [32 x i8] zeroinitializer }, align 32
@event_class_cgroup_root = internal global %struct.trace_event_class { ptr @str__cgroup__trace_system_name, ptr @trace_event_raw_event_cgroup_root, ptr @perf_trace_cgroup_root, ptr @trace_event_reg, ptr @trace_event_fields_cgroup_root, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_cgroup_root, i64 24), ptr getelementptr (i8, ptr @event_class_cgroup_root, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_cgroup_root = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_cgroup_root, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_cgroup_root = internal global { [72 x i8], [56 x i8] } { [72 x i8] c"\22root=%d ss_mask=%#x name=%s\22, REC->root, REC->ss_mask, __get_str(name)\00", [56 x i8] zeroinitializer }, align 32
@event_cgroup_setup_root = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cgroup_root, %union.anon.204 { ptr @__tracepoint_cgroup_setup_root }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cgroup_root }, ptr @print_fmt_cgroup_root, ptr null, %union.anon.205 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_cgroup_setup_root = internal global ptr @event_cgroup_setup_root, section "_ftrace_events", align 4
@event_cgroup_destroy_root = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cgroup_root, %union.anon.204 { ptr @__tracepoint_cgroup_destroy_root }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cgroup_root }, ptr @print_fmt_cgroup_root, ptr null, %union.anon.205 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_cgroup_destroy_root = internal global ptr @event_cgroup_destroy_root, section "_ftrace_events", align 4
@event_cgroup_remount = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cgroup_root, %union.anon.204 { ptr @__tracepoint_cgroup_remount }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cgroup_root }, ptr @print_fmt_cgroup_root, ptr null, %union.anon.205 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_cgroup_remount = internal global ptr @event_cgroup_remount, section "_ftrace_events", align 4
@trace_event_fields_cgroup = internal global { [5 x %struct.trace_event_fields], [40 x i8] } { [5 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.33, %union.anon.202 { %struct.anon.203 { ptr @.str.34, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.33, %union.anon.202 { %struct.anon.203 { ptr @.str.40, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.41, %union.anon.202 { %struct.anon.203 { ptr @.str.42, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.37, %union.anon.202 { %struct.anon.203 { ptr @.str.43, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [40 x i8] zeroinitializer }, align 32
@event_class_cgroup = internal global %struct.trace_event_class { ptr @str__cgroup__trace_system_name, ptr @trace_event_raw_event_cgroup, ptr @perf_trace_cgroup, ptr @trace_event_reg, ptr @trace_event_fields_cgroup, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_cgroup, i64 24), ptr getelementptr (i8, ptr @event_class_cgroup, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_cgroup = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_cgroup, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_cgroup = internal global { [84 x i8], [44 x i8] } { [84 x i8] c"\22root=%d id=%llu level=%d path=%s\22, REC->root, REC->id, REC->level, __get_str(path)\00", [44 x i8] zeroinitializer }, align 32
@event_cgroup_mkdir = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cgroup, %union.anon.204 { ptr @__tracepoint_cgroup_mkdir }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cgroup }, ptr @print_fmt_cgroup, ptr null, %union.anon.205 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_cgroup_mkdir = internal global ptr @event_cgroup_mkdir, section "_ftrace_events", align 4
@event_cgroup_rmdir = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cgroup, %union.anon.204 { ptr @__tracepoint_cgroup_rmdir }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cgroup }, ptr @print_fmt_cgroup, ptr null, %union.anon.205 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_cgroup_rmdir = internal global ptr @event_cgroup_rmdir, section "_ftrace_events", align 4
@event_cgroup_release = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cgroup, %union.anon.204 { ptr @__tracepoint_cgroup_release }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cgroup }, ptr @print_fmt_cgroup, ptr null, %union.anon.205 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_cgroup_release = internal global ptr @event_cgroup_release, section "_ftrace_events", align 4
@event_cgroup_rename = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cgroup, %union.anon.204 { ptr @__tracepoint_cgroup_rename }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cgroup }, ptr @print_fmt_cgroup, ptr null, %union.anon.205 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_cgroup_rename = internal global ptr @event_cgroup_rename, section "_ftrace_events", align 4
@event_cgroup_freeze = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cgroup, %union.anon.204 { ptr @__tracepoint_cgroup_freeze }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cgroup }, ptr @print_fmt_cgroup, ptr null, %union.anon.205 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_cgroup_freeze = internal global ptr @event_cgroup_freeze, section "_ftrace_events", align 4
@event_cgroup_unfreeze = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cgroup, %union.anon.204 { ptr @__tracepoint_cgroup_unfreeze }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cgroup }, ptr @print_fmt_cgroup, ptr null, %union.anon.205 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_cgroup_unfreeze = internal global ptr @event_cgroup_unfreeze, section "_ftrace_events", align 4
@trace_event_fields_cgroup_migrate = internal global { [7 x %struct.trace_event_fields], [56 x i8] } { [7 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.33, %union.anon.202 { %struct.anon.203 { ptr @.str.45, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.33, %union.anon.202 { %struct.anon.203 { ptr @.str.46, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.41, %union.anon.202 { %struct.anon.203 { ptr @.str.47, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.33, %union.anon.202 { %struct.anon.203 { ptr @.str.48, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.37, %union.anon.202 { %struct.anon.203 { ptr @.str.49, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.37, %union.anon.202 { %struct.anon.203 { ptr @.str.50, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [56 x i8] zeroinitializer }, align 32
@event_class_cgroup_migrate = internal global %struct.trace_event_class { ptr @str__cgroup__trace_system_name, ptr @trace_event_raw_event_cgroup_migrate, ptr @perf_trace_cgroup_migrate, ptr @trace_event_reg, ptr @trace_event_fields_cgroup_migrate, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_cgroup_migrate, i64 24), ptr getelementptr (i8, ptr @event_class_cgroup_migrate, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_cgroup_migrate = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_cgroup_migrate, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_cgroup_migrate = internal global { [158 x i8], [34 x i8] } { [158 x i8] c"\22dst_root=%d dst_id=%llu dst_level=%d dst_path=%s pid=%d comm=%s\22, REC->dst_root, REC->dst_id, REC->dst_level, __get_str(dst_path), REC->pid, __get_str(comm)\00", [34 x i8] zeroinitializer }, align 32
@event_cgroup_attach_task = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cgroup_migrate, %union.anon.204 { ptr @__tracepoint_cgroup_attach_task }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cgroup_migrate }, ptr @print_fmt_cgroup_migrate, ptr null, %union.anon.205 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_cgroup_attach_task = internal global ptr @event_cgroup_attach_task, section "_ftrace_events", align 4
@event_cgroup_transfer_tasks = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cgroup_migrate, %union.anon.204 { ptr @__tracepoint_cgroup_transfer_tasks }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cgroup_migrate }, ptr @print_fmt_cgroup_migrate, ptr null, %union.anon.205 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_cgroup_transfer_tasks = internal global ptr @event_cgroup_transfer_tasks, section "_ftrace_events", align 4
@trace_event_fields_cgroup_event = internal global { [6 x %struct.trace_event_fields], [48 x i8] } { [6 x %struct.trace_event_fields] [%struct.trace_event_fields { ptr @.str.33, %union.anon.202 { %struct.anon.203 { ptr @.str.34, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.33, %union.anon.202 { %struct.anon.203 { ptr @.str.40, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields { ptr @.str.41, %union.anon.202 { %struct.anon.203 { ptr @.str.42, i32 8, i32 8, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.37, %union.anon.202 { %struct.anon.203 { ptr @.str.43, i32 4, i32 4, i32 0, i32 0 } } }, %struct.trace_event_fields { ptr @.str.33, %union.anon.202 { %struct.anon.203 { ptr @.str.52, i32 4, i32 4, i32 1, i32 0 } } }, %struct.trace_event_fields zeroinitializer], [48 x i8] zeroinitializer }, align 32
@event_class_cgroup_event = internal global %struct.trace_event_class { ptr @str__cgroup__trace_system_name, ptr @trace_event_raw_event_cgroup_event, ptr @perf_trace_cgroup_event, ptr @trace_event_reg, ptr @trace_event_fields_cgroup_event, ptr null, %struct.list_head { ptr getelementptr (i8, ptr @event_class_cgroup_event, i64 24), ptr getelementptr (i8, ptr @event_class_cgroup_event, i64 24) }, ptr @trace_event_raw_init }, section ".ref.data", align 4
@trace_event_type_funcs_cgroup_event = internal global { %struct.trace_event_functions, [16 x i8] } { %struct.trace_event_functions { ptr @trace_raw_output_cgroup_event, ptr null, ptr null, ptr null }, [16 x i8] zeroinitializer }, align 32
@print_fmt_cgroup_event = internal global { [101 x i8], [59 x i8] } { [101 x i8] c"\22root=%d id=%llu level=%d path=%s val=%d\22, REC->root, REC->id, REC->level, __get_str(path), REC->val\00", [59 x i8] zeroinitializer }, align 32
@event_cgroup_notify_populated = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cgroup_event, %union.anon.204 { ptr @__tracepoint_cgroup_notify_populated }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cgroup_event }, ptr @print_fmt_cgroup_event, ptr null, %union.anon.205 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_cgroup_notify_populated = internal global ptr @event_cgroup_notify_populated, section "_ftrace_events", align 4
@event_cgroup_notify_frozen = internal global { %struct.trace_event_call, [52 x i8] } { %struct.trace_event_call { %struct.list_head zeroinitializer, ptr @event_class_cgroup_event, %union.anon.204 { ptr @__tracepoint_cgroup_notify_frozen }, %struct.trace_event { %struct.hlist_node zeroinitializer, %struct.list_head zeroinitializer, i32 0, ptr @trace_event_type_funcs_cgroup_event }, ptr @print_fmt_cgroup_event, ptr null, %union.anon.205 zeroinitializer, ptr null, i32 16, i32 0, ptr null, ptr null, ptr null }, [52 x i8] zeroinitializer }, align 32
@__event_cgroup_notify_frozen = internal global ptr @event_cgroup_notify_frozen, section "_ftrace_events", align 4
@__bpf_trace_tp_map_cgroup_setup_root = internal global %union.anon.206 { %struct.bpf_raw_event_map { ptr @__tracepoint_cgroup_setup_root, ptr @__bpf_trace_cgroup_root, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_cgroup_destroy_root = internal global %union.anon.207 { %struct.bpf_raw_event_map { ptr @__tracepoint_cgroup_destroy_root, ptr @__bpf_trace_cgroup_root, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_cgroup_remount = internal global %union.anon.208 { %struct.bpf_raw_event_map { ptr @__tracepoint_cgroup_remount, ptr @__bpf_trace_cgroup_root, i32 1, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_cgroup_mkdir = internal global %union.anon.209 { %struct.bpf_raw_event_map { ptr @__tracepoint_cgroup_mkdir, ptr @__bpf_trace_cgroup, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_cgroup_rmdir = internal global %union.anon.210 { %struct.bpf_raw_event_map { ptr @__tracepoint_cgroup_rmdir, ptr @__bpf_trace_cgroup, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_cgroup_release = internal global %union.anon.211 { %struct.bpf_raw_event_map { ptr @__tracepoint_cgroup_release, ptr @__bpf_trace_cgroup, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_cgroup_rename = internal global %union.anon.212 { %struct.bpf_raw_event_map { ptr @__tracepoint_cgroup_rename, ptr @__bpf_trace_cgroup, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_cgroup_freeze = internal global %union.anon.213 { %struct.bpf_raw_event_map { ptr @__tracepoint_cgroup_freeze, ptr @__bpf_trace_cgroup, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_cgroup_unfreeze = internal global %union.anon.214 { %struct.bpf_raw_event_map { ptr @__tracepoint_cgroup_unfreeze, ptr @__bpf_trace_cgroup, i32 2, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_cgroup_attach_task = internal global %union.anon.215 { %struct.bpf_raw_event_map { ptr @__tracepoint_cgroup_attach_task, ptr @__bpf_trace_cgroup_migrate, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_cgroup_transfer_tasks = internal global %union.anon.216 { %struct.bpf_raw_event_map { ptr @__tracepoint_cgroup_transfer_tasks, ptr @__bpf_trace_cgroup_migrate, i32 4, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_cgroup_notify_populated = internal global %union.anon.217 { %struct.bpf_raw_event_map { ptr @__tracepoint_cgroup_notify_populated, ptr @__bpf_trace_cgroup_event, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@__bpf_trace_tp_map_cgroup_notify_frozen = internal global %union.anon.218 { %struct.bpf_raw_event_map { ptr @__tracepoint_cgroup_notify_frozen, ptr @__bpf_trace_cgroup_event, i32 3, i32 0, [16 x i8] undef } }, section "__bpf_raw_tp_map", align 32
@.str = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"cgroup_mutex.wait_lock\00", [41 x i8] zeroinitializer }, align 32
@cgroup_mutex = dso_local global { %struct.mutex, [36 x i8] } { %struct.mutex { %struct.atomic_t zeroinitializer, %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str, i8 0, i8 2, i8 0, i32 0, i32 0 } }, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @cgroup_mutex, i64 52), ptr getelementptr (i8, ptr @cgroup_mutex, i64 52) }, ptr @cgroup_mutex, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.1, i8 0, i8 4, i8 0, i32 0, i32 0 } }, [36 x i8] zeroinitializer }, align 32
@.str.1 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"cgroup_mutex\00", [19 x i8] zeroinitializer }, align 32
@.str.2 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"css_set_lock\00", [19 x i8] zeroinitializer }, align 32
@css_set_lock = dso_local global { %struct.spinlock, [52 x i8] } { %struct.spinlock { %union.anon.3 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.2, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, [52 x i8] zeroinitializer }, align 32
@__kstrtab_cgroup_mutex = external dso_local constant [0 x i8], align 1
@__kstrtabns_cgroup_mutex = external dso_local constant [0 x i8], align 1
@__ksymtab_cgroup_mutex = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cgroup_mutex to i32), ptr @__kstrtab_cgroup_mutex, ptr @__kstrtabns_cgroup_mutex }, section "___ksymtab_gpl+cgroup_mutex", align 4
@__kstrtab_css_set_lock = external dso_local constant [0 x i8], align 1
@__kstrtabns_css_set_lock = external dso_local constant [0 x i8], align 1
@__ksymtab_css_set_lock = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @css_set_lock to i32), ptr @__kstrtab_css_set_lock, ptr @__kstrtabns_css_set_lock }, section "___ksymtab_gpl+css_set_lock", align 4
@.str.3 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"trace_cgroup_path_lock\00", [41 x i8] zeroinitializer }, align 32
@trace_cgroup_path_lock = dso_local global { %struct.spinlock, [52 x i8] } { %struct.spinlock { %union.anon.3 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.3, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, [52 x i8] zeroinitializer }, align 32
@.str.4 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"cgroup_threadgroup_rwsem.rss.gp_wait.lock\00", [54 x i8] zeroinitializer }, align 32
@cgroup_threadgroup_rwsem = dso_local global { %struct.percpu_rw_semaphore, [32 x i8] } { %struct.percpu_rw_semaphore { %struct.rcu_sync { i32 0, i32 0, %struct.wait_queue_head { %struct.spinlock { %union.anon.3 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.4, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, %struct.list_head { ptr getelementptr (i8, ptr @cgroup_threadgroup_rwsem, i64 52), ptr getelementptr (i8, ptr @cgroup_threadgroup_rwsem, i64 52) } }, %struct.callback_head zeroinitializer }, ptr @__percpu_rwsem_rc_cgroup_threadgroup_rwsem, %struct.rcuwait zeroinitializer, %struct.wait_queue_head { %struct.spinlock { %union.anon.3 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.5, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, %struct.list_head { ptr getelementptr (i8, ptr @cgroup_threadgroup_rwsem, i64 120), ptr getelementptr (i8, ptr @cgroup_threadgroup_rwsem, i64 120) } }, %struct.atomic_t zeroinitializer, %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.6, i8 0, i8 0, i8 0, i32 0, i32 0 } }, [32 x i8] zeroinitializer }, align 32
@__percpu_rwsem_rc_cgroup_threadgroup_rwsem = weak dso_local global i32 0, section ".data..percpu", align 4
@.str.5 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"cgroup_threadgroup_rwsem.waiters.lock\00", [58 x i8] zeroinitializer }, align 32
@.str.6 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"cgroup_threadgroup_rwsem\00", [39 x i8] zeroinitializer }, align 32
@cpuset_cgrp_subsys = external dso_local global %struct.cgroup_subsys, align 4
@cpu_cgrp_subsys = external dso_local global %struct.cgroup_subsys, align 4
@cpuacct_cgrp_subsys = external dso_local global %struct.cgroup_subsys, align 4
@io_cgrp_subsys = external dso_local global %struct.cgroup_subsys, align 4
@memory_cgrp_subsys = external dso_local global %struct.cgroup_subsys, align 4
@devices_cgrp_subsys = external dso_local global %struct.cgroup_subsys, align 4
@freezer_cgrp_subsys = external dso_local global %struct.cgroup_subsys, align 4
@net_cls_cgrp_subsys = external dso_local global %struct.cgroup_subsys, align 4
@perf_event_cgrp_subsys = external dso_local global %struct.cgroup_subsys, align 4
@net_prio_cgrp_subsys = external dso_local global %struct.cgroup_subsys, align 4
@pids_cgrp_subsys = external dso_local global %struct.cgroup_subsys, align 4
@rdma_cgrp_subsys = external dso_local global %struct.cgroup_subsys, align 4
@misc_cgrp_subsys = external dso_local global %struct.cgroup_subsys, align 4
@debug_cgrp_subsys = external dso_local global %struct.cgroup_subsys, align 4
@cgroup_subsys = dso_local global { [14 x ptr], [40 x i8] } { [14 x ptr] [ptr @cpuset_cgrp_subsys, ptr @cpu_cgrp_subsys, ptr @cpuacct_cgrp_subsys, ptr @io_cgrp_subsys, ptr @memory_cgrp_subsys, ptr @devices_cgrp_subsys, ptr @freezer_cgrp_subsys, ptr @net_cls_cgrp_subsys, ptr @perf_event_cgrp_subsys, ptr @net_prio_cgrp_subsys, ptr @pids_cgrp_subsys, ptr @rdma_cgrp_subsys, ptr @misc_cgrp_subsys, ptr @debug_cgrp_subsys], [40 x i8] zeroinitializer }, align 32
@cpuset_cgrp_subsys_enabled_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@cpuset_cgrp_subsys_on_dfl_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_cpuset_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_cpuset_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__ksymtab_cpuset_cgrp_subsys_enabled_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cpuset_cgrp_subsys_enabled_key to i32), ptr @__kstrtab_cpuset_cgrp_subsys_enabled_key, ptr @__kstrtabns_cpuset_cgrp_subsys_enabled_key }, section "___ksymtab_gpl+cpuset_cgrp_subsys_enabled_key", align 4
@__kstrtab_cpuset_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_cpuset_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__ksymtab_cpuset_cgrp_subsys_on_dfl_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cpuset_cgrp_subsys_on_dfl_key to i32), ptr @__kstrtab_cpuset_cgrp_subsys_on_dfl_key, ptr @__kstrtabns_cpuset_cgrp_subsys_on_dfl_key }, section "___ksymtab_gpl+cpuset_cgrp_subsys_on_dfl_key", align 4
@cpu_cgrp_subsys_enabled_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@cpu_cgrp_subsys_on_dfl_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_cpu_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_cpu_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__ksymtab_cpu_cgrp_subsys_enabled_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cpu_cgrp_subsys_enabled_key to i32), ptr @__kstrtab_cpu_cgrp_subsys_enabled_key, ptr @__kstrtabns_cpu_cgrp_subsys_enabled_key }, section "___ksymtab_gpl+cpu_cgrp_subsys_enabled_key", align 4
@__kstrtab_cpu_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_cpu_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__ksymtab_cpu_cgrp_subsys_on_dfl_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cpu_cgrp_subsys_on_dfl_key to i32), ptr @__kstrtab_cpu_cgrp_subsys_on_dfl_key, ptr @__kstrtabns_cpu_cgrp_subsys_on_dfl_key }, section "___ksymtab_gpl+cpu_cgrp_subsys_on_dfl_key", align 4
@cpuacct_cgrp_subsys_enabled_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@cpuacct_cgrp_subsys_on_dfl_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_cpuacct_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_cpuacct_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__ksymtab_cpuacct_cgrp_subsys_enabled_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cpuacct_cgrp_subsys_enabled_key to i32), ptr @__kstrtab_cpuacct_cgrp_subsys_enabled_key, ptr @__kstrtabns_cpuacct_cgrp_subsys_enabled_key }, section "___ksymtab_gpl+cpuacct_cgrp_subsys_enabled_key", align 4
@__kstrtab_cpuacct_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_cpuacct_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__ksymtab_cpuacct_cgrp_subsys_on_dfl_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cpuacct_cgrp_subsys_on_dfl_key to i32), ptr @__kstrtab_cpuacct_cgrp_subsys_on_dfl_key, ptr @__kstrtabns_cpuacct_cgrp_subsys_on_dfl_key }, section "___ksymtab_gpl+cpuacct_cgrp_subsys_on_dfl_key", align 4
@io_cgrp_subsys_enabled_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@io_cgrp_subsys_on_dfl_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_io_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_io_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__ksymtab_io_cgrp_subsys_enabled_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @io_cgrp_subsys_enabled_key to i32), ptr @__kstrtab_io_cgrp_subsys_enabled_key, ptr @__kstrtabns_io_cgrp_subsys_enabled_key }, section "___ksymtab_gpl+io_cgrp_subsys_enabled_key", align 4
@__kstrtab_io_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_io_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__ksymtab_io_cgrp_subsys_on_dfl_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @io_cgrp_subsys_on_dfl_key to i32), ptr @__kstrtab_io_cgrp_subsys_on_dfl_key, ptr @__kstrtabns_io_cgrp_subsys_on_dfl_key }, section "___ksymtab_gpl+io_cgrp_subsys_on_dfl_key", align 4
@memory_cgrp_subsys_enabled_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@memory_cgrp_subsys_on_dfl_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_memory_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_memory_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__ksymtab_memory_cgrp_subsys_enabled_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @memory_cgrp_subsys_enabled_key to i32), ptr @__kstrtab_memory_cgrp_subsys_enabled_key, ptr @__kstrtabns_memory_cgrp_subsys_enabled_key }, section "___ksymtab_gpl+memory_cgrp_subsys_enabled_key", align 4
@__kstrtab_memory_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_memory_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__ksymtab_memory_cgrp_subsys_on_dfl_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @memory_cgrp_subsys_on_dfl_key to i32), ptr @__kstrtab_memory_cgrp_subsys_on_dfl_key, ptr @__kstrtabns_memory_cgrp_subsys_on_dfl_key }, section "___ksymtab_gpl+memory_cgrp_subsys_on_dfl_key", align 4
@devices_cgrp_subsys_enabled_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@devices_cgrp_subsys_on_dfl_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_devices_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_devices_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__ksymtab_devices_cgrp_subsys_enabled_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devices_cgrp_subsys_enabled_key to i32), ptr @__kstrtab_devices_cgrp_subsys_enabled_key, ptr @__kstrtabns_devices_cgrp_subsys_enabled_key }, section "___ksymtab_gpl+devices_cgrp_subsys_enabled_key", align 4
@__kstrtab_devices_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_devices_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__ksymtab_devices_cgrp_subsys_on_dfl_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @devices_cgrp_subsys_on_dfl_key to i32), ptr @__kstrtab_devices_cgrp_subsys_on_dfl_key, ptr @__kstrtabns_devices_cgrp_subsys_on_dfl_key }, section "___ksymtab_gpl+devices_cgrp_subsys_on_dfl_key", align 4
@freezer_cgrp_subsys_enabled_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@freezer_cgrp_subsys_on_dfl_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_freezer_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_freezer_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__ksymtab_freezer_cgrp_subsys_enabled_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @freezer_cgrp_subsys_enabled_key to i32), ptr @__kstrtab_freezer_cgrp_subsys_enabled_key, ptr @__kstrtabns_freezer_cgrp_subsys_enabled_key }, section "___ksymtab_gpl+freezer_cgrp_subsys_enabled_key", align 4
@__kstrtab_freezer_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_freezer_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__ksymtab_freezer_cgrp_subsys_on_dfl_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @freezer_cgrp_subsys_on_dfl_key to i32), ptr @__kstrtab_freezer_cgrp_subsys_on_dfl_key, ptr @__kstrtabns_freezer_cgrp_subsys_on_dfl_key }, section "___ksymtab_gpl+freezer_cgrp_subsys_on_dfl_key", align 4
@net_cls_cgrp_subsys_enabled_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@net_cls_cgrp_subsys_on_dfl_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_net_cls_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_net_cls_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__ksymtab_net_cls_cgrp_subsys_enabled_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @net_cls_cgrp_subsys_enabled_key to i32), ptr @__kstrtab_net_cls_cgrp_subsys_enabled_key, ptr @__kstrtabns_net_cls_cgrp_subsys_enabled_key }, section "___ksymtab_gpl+net_cls_cgrp_subsys_enabled_key", align 4
@__kstrtab_net_cls_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_net_cls_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__ksymtab_net_cls_cgrp_subsys_on_dfl_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @net_cls_cgrp_subsys_on_dfl_key to i32), ptr @__kstrtab_net_cls_cgrp_subsys_on_dfl_key, ptr @__kstrtabns_net_cls_cgrp_subsys_on_dfl_key }, section "___ksymtab_gpl+net_cls_cgrp_subsys_on_dfl_key", align 4
@perf_event_cgrp_subsys_enabled_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@perf_event_cgrp_subsys_on_dfl_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_perf_event_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_perf_event_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__ksymtab_perf_event_cgrp_subsys_enabled_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @perf_event_cgrp_subsys_enabled_key to i32), ptr @__kstrtab_perf_event_cgrp_subsys_enabled_key, ptr @__kstrtabns_perf_event_cgrp_subsys_enabled_key }, section "___ksymtab_gpl+perf_event_cgrp_subsys_enabled_key", align 4
@__kstrtab_perf_event_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_perf_event_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__ksymtab_perf_event_cgrp_subsys_on_dfl_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @perf_event_cgrp_subsys_on_dfl_key to i32), ptr @__kstrtab_perf_event_cgrp_subsys_on_dfl_key, ptr @__kstrtabns_perf_event_cgrp_subsys_on_dfl_key }, section "___ksymtab_gpl+perf_event_cgrp_subsys_on_dfl_key", align 4
@net_prio_cgrp_subsys_enabled_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@net_prio_cgrp_subsys_on_dfl_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_net_prio_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_net_prio_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__ksymtab_net_prio_cgrp_subsys_enabled_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @net_prio_cgrp_subsys_enabled_key to i32), ptr @__kstrtab_net_prio_cgrp_subsys_enabled_key, ptr @__kstrtabns_net_prio_cgrp_subsys_enabled_key }, section "___ksymtab_gpl+net_prio_cgrp_subsys_enabled_key", align 4
@__kstrtab_net_prio_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_net_prio_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__ksymtab_net_prio_cgrp_subsys_on_dfl_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @net_prio_cgrp_subsys_on_dfl_key to i32), ptr @__kstrtab_net_prio_cgrp_subsys_on_dfl_key, ptr @__kstrtabns_net_prio_cgrp_subsys_on_dfl_key }, section "___ksymtab_gpl+net_prio_cgrp_subsys_on_dfl_key", align 4
@pids_cgrp_subsys_enabled_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@pids_cgrp_subsys_on_dfl_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_pids_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_pids_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__ksymtab_pids_cgrp_subsys_enabled_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pids_cgrp_subsys_enabled_key to i32), ptr @__kstrtab_pids_cgrp_subsys_enabled_key, ptr @__kstrtabns_pids_cgrp_subsys_enabled_key }, section "___ksymtab_gpl+pids_cgrp_subsys_enabled_key", align 4
@__kstrtab_pids_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_pids_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__ksymtab_pids_cgrp_subsys_on_dfl_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @pids_cgrp_subsys_on_dfl_key to i32), ptr @__kstrtab_pids_cgrp_subsys_on_dfl_key, ptr @__kstrtabns_pids_cgrp_subsys_on_dfl_key }, section "___ksymtab_gpl+pids_cgrp_subsys_on_dfl_key", align 4
@rdma_cgrp_subsys_enabled_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@rdma_cgrp_subsys_on_dfl_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_rdma_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_rdma_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__ksymtab_rdma_cgrp_subsys_enabled_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rdma_cgrp_subsys_enabled_key to i32), ptr @__kstrtab_rdma_cgrp_subsys_enabled_key, ptr @__kstrtabns_rdma_cgrp_subsys_enabled_key }, section "___ksymtab_gpl+rdma_cgrp_subsys_enabled_key", align 4
@__kstrtab_rdma_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_rdma_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__ksymtab_rdma_cgrp_subsys_on_dfl_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @rdma_cgrp_subsys_on_dfl_key to i32), ptr @__kstrtab_rdma_cgrp_subsys_on_dfl_key, ptr @__kstrtabns_rdma_cgrp_subsys_on_dfl_key }, section "___ksymtab_gpl+rdma_cgrp_subsys_on_dfl_key", align 4
@misc_cgrp_subsys_enabled_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@misc_cgrp_subsys_on_dfl_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_misc_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_misc_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__ksymtab_misc_cgrp_subsys_enabled_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @misc_cgrp_subsys_enabled_key to i32), ptr @__kstrtab_misc_cgrp_subsys_enabled_key, ptr @__kstrtabns_misc_cgrp_subsys_enabled_key }, section "___ksymtab_gpl+misc_cgrp_subsys_enabled_key", align 4
@__kstrtab_misc_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_misc_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__ksymtab_misc_cgrp_subsys_on_dfl_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @misc_cgrp_subsys_on_dfl_key to i32), ptr @__kstrtab_misc_cgrp_subsys_on_dfl_key, ptr @__kstrtabns_misc_cgrp_subsys_on_dfl_key }, section "___ksymtab_gpl+misc_cgrp_subsys_on_dfl_key", align 4
@debug_cgrp_subsys_enabled_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@debug_cgrp_subsys_on_dfl_key = dso_local global { { { %struct.atomic_t, { ptr } } }, [24 x i8] } { { { %struct.atomic_t, { ptr } } } { { %struct.atomic_t, { ptr } } { %struct.atomic_t { i32 1 }, { ptr } { ptr inttoptr (i32 1 to ptr) } } }, [24 x i8] zeroinitializer }, align 32
@__kstrtab_debug_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_debug_cgrp_subsys_enabled_key = external dso_local constant [0 x i8], align 1
@__ksymtab_debug_cgrp_subsys_enabled_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @debug_cgrp_subsys_enabled_key to i32), ptr @__kstrtab_debug_cgrp_subsys_enabled_key, ptr @__kstrtabns_debug_cgrp_subsys_enabled_key }, section "___ksymtab_gpl+debug_cgrp_subsys_enabled_key", align 4
@__kstrtab_debug_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__kstrtabns_debug_cgrp_subsys_on_dfl_key = external dso_local constant [0 x i8], align 1
@__ksymtab_debug_cgrp_subsys_on_dfl_key = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @debug_cgrp_subsys_on_dfl_key to i32), ptr @__kstrtab_debug_cgrp_subsys_on_dfl_key, ptr @__kstrtabns_debug_cgrp_subsys_on_dfl_key }, section "___ksymtab_gpl+debug_cgrp_subsys_on_dfl_key", align 4
@cgrp_dfl_root_rstat_cpu = weak dso_local global %struct.cgroup_rstat_cpu zeroinitializer, section ".data..percpu", align 8
@cgrp_dfl_root = dso_local global { %struct.cgroup_root, [1560 x i8] } { %struct.cgroup_root { ptr null, i32 0, i32 0, %struct.cgroup { %struct.cgroup_subsys_state zeroinitializer, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, ptr null, %struct.cgroup_file zeroinitializer, %struct.cgroup_file zeroinitializer, i16 0, i16 0, i16 0, i16 0, [14 x ptr] zeroinitializer, ptr null, %struct.list_head zeroinitializer, [14 x %struct.list_head] zeroinitializer, ptr null, ptr null, ptr @cgrp_dfl_root_rstat_cpu, %struct.list_head zeroinitializer, %struct.cgroup_base_stat zeroinitializer, %struct.cgroup_base_stat zeroinitializer, %struct.prev_cputime zeroinitializer, %struct.list_head zeroinitializer, %struct.mutex zeroinitializer, %struct.wait_queue_head zeroinitializer, %struct.work_struct zeroinitializer, %struct.psi_group zeroinitializer, %struct.cgroup_bpf zeroinitializer, %struct.atomic_t zeroinitializer, %struct.cgroup_freezer_state zeroinitializer, [0 x i64] zeroinitializer }, i64 0, %struct.atomic_t zeroinitializer, %struct.list_head zeroinitializer, i32 0, [4096 x i8] zeroinitializer, [64 x i8] zeroinitializer }, [1560 x i8] zeroinitializer }, align 32
@__kstrtab_cgrp_dfl_root = external dso_local constant [0 x i8], align 1
@__kstrtabns_cgrp_dfl_root = external dso_local constant [0 x i8], align 1
@__ksymtab_cgrp_dfl_root = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cgrp_dfl_root to i32), ptr @__kstrtab_cgrp_dfl_root, ptr @__kstrtabns_cgrp_dfl_root }, section "___ksymtab_gpl+cgrp_dfl_root", align 4
@cgroup_roots = dso_local global { %struct.list_head, [24 x i8] } { %struct.list_head { ptr @cgroup_roots, ptr @cgroup_roots }, [24 x i8] zeroinitializer }, align 32
@cgroupns_operations = external dso_local constant %struct.proc_ns_operations, align 4
@init_user_ns = external dso_local global %struct.user_namespace, align 4
@init_css_set = dso_local global { %struct.css_set, [64 x i8] } { %struct.css_set { [14 x ptr] zeroinitializer, %struct.refcount_struct { %struct.atomic_t { i32 1 } }, ptr @init_css_set, ptr getelementptr (i8, ptr @cgrp_dfl_root, i64 16), i32 0, %struct.list_head { ptr getelementptr (i8, ptr @init_css_set, i64 72), ptr getelementptr (i8, ptr @init_css_set, i64 72) }, %struct.list_head { ptr getelementptr (i8, ptr @init_css_set, i64 80), ptr getelementptr (i8, ptr @init_css_set, i64 80) }, %struct.list_head { ptr getelementptr (i8, ptr @init_css_set, i64 88), ptr getelementptr (i8, ptr @init_css_set, i64 88) }, %struct.list_head { ptr getelementptr (i8, ptr @init_css_set, i64 96), ptr getelementptr (i8, ptr @init_css_set, i64 96) }, [14 x %struct.list_head] zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @init_css_set, i64 216), ptr getelementptr (i8, ptr @init_css_set, i64 216) }, %struct.list_head zeroinitializer, %struct.hlist_node zeroinitializer, %struct.list_head { ptr getelementptr (i8, ptr @init_css_set, i64 240), ptr getelementptr (i8, ptr @init_css_set, i64 240) }, %struct.list_head { ptr getelementptr (i8, ptr @init_css_set, i64 248), ptr getelementptr (i8, ptr @init_css_set, i64 248) }, %struct.list_head { ptr getelementptr (i8, ptr @init_css_set, i64 256), ptr getelementptr (i8, ptr @init_css_set, i64 256) }, ptr null, ptr null, ptr null, i8 0, %struct.callback_head zeroinitializer }, [64 x i8] zeroinitializer }, align 32
@init_cgroup_ns = dso_local global { %struct.cgroup_namespace, [36 x i8] } { %struct.cgroup_namespace { %struct.ns_common { %struct.atomic_t zeroinitializer, ptr @cgroupns_operations, i32 -268435461, %struct.refcount_struct { %struct.atomic_t { i32 2 } } }, ptr @init_user_ns, ptr null, ptr @init_css_set }, [36 x i8] zeroinitializer }, align 32
@cgroup_subsys_enabled_key = internal constant { [14 x ptr], [40 x i8] } { [14 x ptr] [ptr @cpuset_cgrp_subsys_enabled_key, ptr @cpu_cgrp_subsys_enabled_key, ptr @cpuacct_cgrp_subsys_enabled_key, ptr @io_cgrp_subsys_enabled_key, ptr @memory_cgrp_subsys_enabled_key, ptr @devices_cgrp_subsys_enabled_key, ptr @freezer_cgrp_subsys_enabled_key, ptr @net_cls_cgrp_subsys_enabled_key, ptr @perf_event_cgrp_subsys_enabled_key, ptr @net_prio_cgrp_subsys_enabled_key, ptr @pids_cgrp_subsys_enabled_key, ptr @rdma_cgrp_subsys_enabled_key, ptr @misc_cgrp_subsys_enabled_key, ptr @debug_cgrp_subsys_enabled_key], [40 x i8] zeroinitializer }, align 32
@cgrp_dfl_threaded_ss_mask = internal global { i16, [30 x i8] } zeroinitializer, align 32
@__kstrtab_cgroup_get_e_css = external dso_local constant [0 x i8], align 1
@__kstrtabns_cgroup_get_e_css = external dso_local constant [0 x i8], align 1
@__ksymtab_cgroup_get_e_css = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cgroup_get_e_css to i32), ptr @__kstrtab_cgroup_get_e_css, ptr @__kstrtabns_cgroup_get_e_css }, section "___ksymtab_gpl+cgroup_get_e_css", align 4
@debug_locks = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@.str.7 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"kernel/cgroup/cgroup.c\00", [41 x i8] zeroinitializer }, align 32
@__kstrtab_of_css = external dso_local constant [0 x i8], align 1
@__kstrtabns_of_css = external dso_local constant [0 x i8], align 1
@__ksymtab_of_css = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @of_css to i32), ptr @__kstrtab_of_css, ptr @__kstrtabns_of_css }, section "___ksymtab_gpl+of_css", align 4
@put_css_set_locked.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@css_set_count = internal global { i32, [28 x i8] } { i32 1, [28 x i8] zeroinitializer }, align 32
@css_set_table = internal global { [128 x %struct.hlist_head], [128 x i8] } zeroinitializer, align 32
@cgroup_subsys_on_dfl_key = internal constant { [14 x ptr], [40 x i8] } { [14 x ptr] [ptr @cpuset_cgrp_subsys_on_dfl_key, ptr @cpu_cgrp_subsys_on_dfl_key, ptr @cpuacct_cgrp_subsys_on_dfl_key, ptr @io_cgrp_subsys_on_dfl_key, ptr @memory_cgrp_subsys_on_dfl_key, ptr @devices_cgrp_subsys_on_dfl_key, ptr @freezer_cgrp_subsys_on_dfl_key, ptr @net_cls_cgrp_subsys_on_dfl_key, ptr @perf_event_cgrp_subsys_on_dfl_key, ptr @net_prio_cgrp_subsys_on_dfl_key, ptr @pids_cgrp_subsys_on_dfl_key, ptr @rdma_cgrp_subsys_on_dfl_key, ptr @misc_cgrp_subsys_on_dfl_key, ptr @debug_cgrp_subsys_on_dfl_key], [40 x i8] zeroinitializer }, align 32
@rebind_subsystems._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.8, ptr @.str.9, ptr @.str.7, i32 1828, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.8 = internal constant { [60 x i8], [36 x i8] } { [60 x i8] c"\014cgroup: partial failure to rebind %s controller (err=%d)\0A\00", [36 x i8] zeroinitializer }, align 32
@.str.9 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"rebind_subsystems\00", [46 x i8] zeroinitializer }, align 32
@rebind_subsystems._entry_ptr = internal global ptr @rebind_subsystems._entry, section ".printk_index", align 4
@.str.10 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c" \09\0A\\\00", [27 x i8] zeroinitializer }, align 32
@cgroup_kf_syscall_ops = internal global { %struct.kernfs_syscall_ops, [44 x i8] } { %struct.kernfs_syscall_ops { ptr @cgroup_show_options, ptr @cgroup_mkdir, ptr @cgroup_rmdir, ptr null, ptr @cgroup_show_path }, [44 x i8] zeroinitializer }, align 32
@cgroup1_kf_syscall_ops = external dso_local global %struct.kernfs_syscall_ops, align 4
@cgroup_setup_root.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@cgroup_setup_root.__already_done.11 = internal unnamed_addr global i1 false, section ".data.once", align 1
@cgroup_root_count = internal global { i32, [28 x i8] } zeroinitializer, align 32
@cgroup2_fs_type = internal global { %struct.file_system_type, [44 x i8] } { %struct.file_system_type { ptr @.str.75, i32 8, ptr @cgroup_init_fs_context, ptr @cgroup2_fs_parameters, ptr null, ptr @cgroup_kill_sb, ptr null, ptr null, %struct.hlist_head zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, [3 x %struct.lock_class_key] zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer }, [44 x i8] zeroinitializer }, align 32
@.str.12 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"cgroup\00", [25 x i8] zeroinitializer }, align 32
@cgroup1_fs_parameters = external dso_local constant [0 x %struct.fs_parameter_spec], align 4
@cgroup_fs_type = dso_local global { %struct.file_system_type, [44 x i8] } { %struct.file_system_type { ptr @.str.12, i32 8, ptr @cgroup_init_fs_context, ptr @cgroup1_fs_parameters, ptr null, ptr @cgroup_kill_sb, ptr null, ptr null, %struct.hlist_head zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, [3 x %struct.lock_class_key] zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer }, [44 x i8] zeroinitializer }, align 32
@__kstrtab_cgroup_path_ns = external dso_local constant [0 x i8], align 1
@__kstrtabns_cgroup_path_ns = external dso_local constant [0 x i8], align 1
@__ksymtab_cgroup_path_ns = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cgroup_path_ns to i32), ptr @__kstrtab_cgroup_path_ns, ptr @__kstrtabns_cgroup_path_ns }, section "___ksymtab_gpl+cgroup_path_ns", align 4
@cgroup_hierarchy_idr = internal global { %struct.idr, [36 x i8] } { %struct.idr { %struct.xarray { %struct.spinlock { %union.anon.3 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.76, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, i32 67108868, ptr null }, i32 0, i32 0 }, [36 x i8] zeroinitializer }, align 32
@.str.13 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c"/\00", [30 x i8] zeroinitializer }, align 32
@__kstrtab_task_cgroup_path = external dso_local constant [0 x i8], align 1
@__kstrtabns_task_cgroup_path = external dso_local constant [0 x i8], align 1
@__ksymtab_task_cgroup_path = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @task_cgroup_path to i32), ptr @__kstrtab_task_cgroup_path, ptr @__kstrtabns_task_cgroup_path }, section "___ksymtab_gpl+task_cgroup_path", align 4
@cgroup_migrate_prepare_dst.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@trace_cgroup_path = dso_local global { [1024 x i8], [256 x i8] } zeroinitializer, align 32
@cgroup_feature_disable_mask = internal unnamed_addr global i16 0, section ".data..read_mostly", align 2
@cgroup_file_kn_lock = internal global { %struct.spinlock, [52 x i8] } { %struct.spinlock { %union.anon.3 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.78, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, [52 x i8] zeroinitializer }, align 32
@jiffies = external dso_local global i32, section ".data..cacheline_aligned", align 128
@css_next_child.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.14 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"cgroup_mutex or RCU read lock required\00", [57 x i8] zeroinitializer }, align 32
@css_next_child.__warned.15 = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.16 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"RCU-list traversed in non-reader section!\00", [54 x i8] zeroinitializer }, align 32
@css_next_descendant_pre.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_css_next_descendant_pre = external dso_local constant [0 x i8], align 1
@__kstrtabns_css_next_descendant_pre = external dso_local constant [0 x i8], align 1
@__ksymtab_css_next_descendant_pre = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @css_next_descendant_pre to i32), ptr @__kstrtab_css_next_descendant_pre, ptr @__kstrtabns_css_next_descendant_pre }, section "___ksymtab_gpl+css_next_descendant_pre", align 4
@css_rightmost_descendant.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@css_next_descendant_post.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@cgroup_init_early.ctx = internal global %struct.cgroup_fs_context zeroinitializer, section ".init.data", align 4
@init_task = external dso_local global %struct.task_struct, align 128
@.str.17 = internal constant { [68 x i8], [60 x i8] } { [68 x i8] c"invalid cgroup_subsys %d:%s css_alloc=%p css_free=%p id:name=%d:%s\0A\00", [60 x i8] zeroinitializer }, align 32
@cgroup_subsys_name = internal constant { [14 x ptr], [40 x i8] } { [14 x ptr] [ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98], [40 x i8] zeroinitializer }, align 32
@.str.18 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"cgroup_subsys_name %s too long\0A\00", [32 x i8] zeroinitializer }, align 32
@cgroup_base_files = internal global { [16 x %struct.cftype], [608 x i8] } { [16 x %struct.cftype] [%struct.cftype { [64 x i8] c"cgroup.type\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0, i32 2, i32 0, ptr null, %struct.list_head zeroinitializer, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @cgroup_type_show, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @cgroup_type_write, ptr null, %struct.lock_class_key zeroinitializer }, %struct.cftype { [64 x i8] c"cgroup.procs\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0, i32 4, i32 212, ptr null, %struct.list_head zeroinitializer, ptr null, ptr null, ptr @cgroup_procs_release, ptr null, ptr null, ptr @cgroup_procs_show, ptr @cgroup_procs_start, ptr @cgroup_procs_next, ptr null, ptr null, ptr null, ptr @cgroup_procs_write, ptr null, %struct.lock_class_key zeroinitializer }, %struct.cftype { [64 x i8] c"cgroup.threads\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0, i32 4, i32 0, ptr null, %struct.list_head zeroinitializer, ptr null, ptr null, ptr @cgroup_procs_release, ptr null, ptr null, ptr @cgroup_procs_show, ptr @cgroup_threads_start, ptr @cgroup_procs_next, ptr null, ptr null, ptr null, ptr @cgroup_threads_write, ptr null, %struct.lock_class_key zeroinitializer }, %struct.cftype { [64 x i8] c"cgroup.controllers\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0, i32 0, i32 0, ptr null, %struct.list_head zeroinitializer, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @cgroup_controllers_show, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, %struct.lock_class_key zeroinitializer }, %struct.cftype { [64 x i8] c"cgroup.subtree_control\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0, i32 4, i32 0, ptr null, %struct.list_head zeroinitializer, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @cgroup_subtree_control_show, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @cgroup_subtree_control_write, ptr null, %struct.lock_class_key zeroinitializer }, %struct.cftype { [64 x i8] c"cgroup.events\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0, i32 2, i32 268, ptr null, %struct.list_head zeroinitializer, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @cgroup_events_show, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, %struct.lock_class_key zeroinitializer }, %struct.cftype { [64 x i8] c"cgroup.max.descendants\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0, i32 0, i32 0, ptr null, %struct.list_head zeroinitializer, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @cgroup_max_descendants_show, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @cgroup_max_descendants_write, ptr null, %struct.lock_class_key zeroinitializer }, %struct.cftype { [64 x i8] c"cgroup.max.depth\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0, i32 0, i32 0, ptr null, %struct.list_head zeroinitializer, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @cgroup_max_depth_show, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @cgroup_max_depth_write, ptr null, %struct.lock_class_key zeroinitializer }, %struct.cftype { [64 x i8] c"cgroup.stat\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0, i32 0, i32 0, ptr null, %struct.list_head zeroinitializer, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @cgroup_stat_show, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, %struct.lock_class_key zeroinitializer }, %struct.cftype { [64 x i8] c"cgroup.freeze\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0, i32 2, i32 0, ptr null, %struct.list_head zeroinitializer, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @cgroup_freeze_show, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @cgroup_freeze_write, ptr null, %struct.lock_class_key zeroinitializer }, %struct.cftype { [64 x i8] c"cgroup.kill\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0, i32 2, i32 0, ptr null, %struct.list_head zeroinitializer, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @cgroup_kill_write, ptr null, %struct.lock_class_key zeroinitializer }, %struct.cftype { [64 x i8] c"cpu.stat\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0, i32 0, i32 0, ptr null, %struct.list_head zeroinitializer, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @cpu_stat_show, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, ptr null, %struct.lock_class_key zeroinitializer }, %struct.cftype { [64 x i8] c"io.pressure\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0, i32 64, i32 0, ptr null, %struct.list_head zeroinitializer, ptr null, ptr null, ptr @cgroup_pressure_release, ptr null, ptr null, ptr @cgroup_io_pressure_show, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @cgroup_io_pressure_write, ptr @cgroup_pressure_poll, %struct.lock_class_key zeroinitializer }, %struct.cftype { [64 x i8] c"memory.pressure\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0, i32 64, i32 0, ptr null, %struct.list_head zeroinitializer, ptr null, ptr null, ptr @cgroup_pressure_release, ptr null, ptr null, ptr @cgroup_memory_pressure_show, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @cgroup_memory_pressure_write, ptr @cgroup_pressure_poll, %struct.lock_class_key zeroinitializer }, %struct.cftype { [64 x i8] c"cpu.pressure\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0, i32 64, i32 0, ptr null, %struct.list_head zeroinitializer, ptr null, ptr null, ptr @cgroup_pressure_release, ptr null, ptr null, ptr @cgroup_cpu_pressure_show, ptr null, ptr null, ptr null, ptr null, ptr null, ptr @cgroup_cpu_pressure_write, ptr @cgroup_pressure_poll, %struct.lock_class_key zeroinitializer }, %struct.cftype zeroinitializer], [608 x i8] zeroinitializer }, align 32
@cgroup1_base_files = external dso_local global [0 x %struct.cftype], align 4
@cgroup_init._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.19, ptr @.str.20, ptr @.str.7, i32 5891, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.19 = internal constant { [53 x i8], [43 x i8] } { [53 x i8] c"\016Disabling %s control group subsystem in v1 mounts\0A\00", [43 x i8] zeroinitializer }, align 32
@.str.20 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"cgroup_init\00", [20 x i8] zeroinitializer }, align 32
@cgroup_init._entry_ptr = internal global ptr @cgroup_init._entry, section ".printk_index", align 4
@cgrp_dfl_implicit_ss_mask = internal global { i16, [30 x i8] } zeroinitializer, align 32
@cgrp_dfl_inhibit_ss_mask = internal global { i16, [30 x i8] } zeroinitializer, align 32
@fs_kobj = external dso_local local_unnamed_addr global ptr, align 4
@.str.21 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"cgroups\00", [24 x i8] zeroinitializer }, align 32
@cpuset_fs_type = internal global { %struct.file_system_type, [44 x i8] } { %struct.file_system_type { ptr @.str.85, i32 8, ptr @cpuset_init_fs_context, ptr null, ptr null, ptr null, ptr null, ptr null, %struct.hlist_head zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, [3 x %struct.lock_class_key] zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer, %struct.lock_class_key zeroinitializer }, [44 x i8] zeroinitializer }, align 32
@__initcall__kmod_cgroup__580_5951_cgroup_wq_init1 = internal global ptr @cgroup_wq_init, section ".initcall1.init", align 4
@cgroup_get_from_id.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.22 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"suspicious rcu_dereference_check() usage\00", [55 x i8] zeroinitializer }, align 32
@__kstrtab_cgroup_get_from_id = external dso_local constant [0 x i8], align 1
@__kstrtabns_cgroup_get_from_id = external dso_local constant [0 x i8], align 1
@__ksymtab_cgroup_get_from_id = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cgroup_get_from_id to i32), ptr @__kstrtab_cgroup_get_from_id, ptr @__kstrtabns_cgroup_get_from_id }, section "___ksymtab_gpl+cgroup_get_from_id", align 4
@cgrp_dfl_visible = internal global { i1, [31 x i8] } zeroinitializer, align 32
@.str.23 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%d:\00", [28 x i8] zeroinitializer }, align 32
@.str.24 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"%s%s\00", [27 x i8] zeroinitializer }, align 32
@.str.25 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c",\00", [30 x i8] zeroinitializer }, align 32
@.str.26 = internal constant { [1 x i8], [31 x i8] } zeroinitializer, align 32
@.str.27 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"%sname=%s\00", [22 x i8] zeroinitializer }, align 32
@.str.28 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c" (deleted)\0A\00", [20 x i8] zeroinitializer }, align 32
@have_canfork_callback = internal unnamed_addr global i16 0, section ".data..read_mostly", align 2
@cgroup_post_fork.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@cgroup_post_fork.__already_done.29 = internal unnamed_addr global i1 false, section ".data.once", align 1
@have_fork_callback = internal unnamed_addr global i16 0, section ".data..read_mostly", align 2
@cgroup_exit.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@cgroup_exit.__already_done.30 = internal unnamed_addr global i1 false, section ".data.once", align 1
@have_exit_callback = internal unnamed_addr global i16 0, section ".data..read_mostly", align 2
@have_release_callback = internal unnamed_addr global i16 0, section ".data..read_mostly", align 2
@__setup_str_cgroup_disable = internal constant [16 x i8] c"cgroup_disable=\00", section ".init.rodata", align 1
@__setup_cgroup_disable = internal global %struct.obs_kernel_param { ptr @__setup_str_cgroup_disable, ptr @cgroup_disable, i32 0 }, section ".init.setup", align 4
@__setup_str_enable_cgroup_debug = internal constant [13 x i8] c"cgroup_debug\00", section ".init.rodata", align 1
@__setup_enable_cgroup_debug = internal global %struct.obs_kernel_param { ptr @__setup_str_enable_cgroup_debug, ptr @enable_cgroup_debug, i32 0 }, section ".init.setup", align 4
@css_tryget_online_from_dir.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@css_from_id.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@cgroup_get_from_path.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__kstrtab_cgroup_get_from_path = external dso_local constant [0 x i8], align 1
@__kstrtabns_cgroup_get_from_path = external dso_local constant [0 x i8], align 1
@__ksymtab_cgroup_get_from_path = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cgroup_get_from_path to i32), ptr @__kstrtab_cgroup_get_from_path, ptr @__kstrtabns_cgroup_get_from_path }, section "___ksymtab_gpl+cgroup_get_from_path", align 4
@__kstrtab_cgroup_get_from_fd = external dso_local constant [0 x i8], align 1
@__kstrtabns_cgroup_get_from_fd = external dso_local constant [0 x i8], align 1
@__ksymtab_cgroup_get_from_fd = internal constant %struct.kernel_symbol { i32 ptrtoint (ptr @cgroup_get_from_fd to i32), ptr @__kstrtab_cgroup_get_from_fd, ptr @__kstrtabns_cgroup_get_from_fd }, section "___ksymtab_gpl+cgroup_get_from_fd", align 4
@.str.31 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"%lld.%n%lld%n\00", [18 x i8] zeroinitializer }, align 32
@__initcall__kmod_cgroup__588_6780_cgroup_sysfs_init4 = internal global ptr @cgroup_sysfs_init, section ".initcall4.init", align 4
@cgroup_debug = dso_local local_unnamed_addr global i8 0, section ".data..read_mostly", align 1
@__pcpu_unique___percpu_rwsem_rc_cgroup_threadgroup_rwsem = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@__pcpu_unique_cgrp_dfl_root_rstat_cpu = dso_local local_unnamed_addr global i8 0, section ".discard", align 1
@.str.32 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"(null)\00", [25 x i8] zeroinitializer }, align 32
@.str.33 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"int\00", [28 x i8] zeroinitializer }, align 32
@.str.34 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"root\00", [27 x i8] zeroinitializer }, align 32
@.str.35 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"u16\00", [28 x i8] zeroinitializer }, align 32
@.str.36 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"ss_mask\00", [24 x i8] zeroinitializer }, align 32
@.str.37 = internal constant { [18 x i8], [46 x i8] } { [18 x i8] c"__data_loc char[]\00", [46 x i8] zeroinitializer }, align 32
@.str.38 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"name\00", [27 x i8] zeroinitializer }, align 32
@.str.39 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"root=%d ss_mask=%#x name=%s\0A\00", [35 x i8] zeroinitializer }, align 32
@.str.40 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"level\00", [26 x i8] zeroinitializer }, align 32
@.str.41 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"u64\00", [28 x i8] zeroinitializer }, align 32
@.str.42 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"id\00", [29 x i8] zeroinitializer }, align 32
@.str.43 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"path\00", [27 x i8] zeroinitializer }, align 32
@.str.44 = internal constant { [34 x i8], [62 x i8] } { [34 x i8] c"root=%d id=%llu level=%d path=%s\0A\00", [62 x i8] zeroinitializer }, align 32
@.str.45 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"dst_root\00", [23 x i8] zeroinitializer }, align 32
@.str.46 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"dst_level\00", [22 x i8] zeroinitializer }, align 32
@.str.47 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"dst_id\00", [25 x i8] zeroinitializer }, align 32
@.str.48 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"pid\00", [28 x i8] zeroinitializer }, align 32
@.str.49 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"dst_path\00", [23 x i8] zeroinitializer }, align 32
@.str.50 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"comm\00", [27 x i8] zeroinitializer }, align 32
@.str.51 = internal constant { [65 x i8], [63 x i8] } { [65 x i8] c"dst_root=%d dst_id=%llu dst_level=%d dst_path=%s pid=%d comm=%s\0A\00", [63 x i8] zeroinitializer }, align 32
@.str.52 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"val\00", [28 x i8] zeroinitializer }, align 32
@.str.53 = internal constant { [41 x i8], [55 x i8] } { [41 x i8] c"root=%d id=%llu level=%d path=%s val=%d\0A\00", [55 x i8] zeroinitializer }, align 32
@__per_cpu_offset = external dso_local local_unnamed_addr global [4 x i32], align 4
@cgroup_css.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@rcu_lock_map = external dso_local global %struct.lockdep_map, align 4
@rcu_read_lock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.54 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcupdate.h\00", [39 x i8] zeroinitializer }, align 32
@.str.55 = internal constant { [42 x i8], [54 x i8] } { [42 x i8] c"rcu_read_lock() used illegally while idle\00", [54 x i8] zeroinitializer }, align 32
@percpu_ref_tryget_live_rcu.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.56 = internal constant { [32 x i8], [32 x i8] } { [32 x i8] c"include/linux/percpu-refcount.h\00", [32 x i8] zeroinitializer }, align 32
@rcu_read_unlock.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.57 = internal constant { [44 x i8], [52 x i8] } { [44 x i8] c"rcu_read_unlock() used illegally while idle\00", [52 x i8] zeroinitializer }, align 32
@task_css_set.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.58 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"include/linux/cgroup.h\00", [41 x i8] zeroinitializer }, align 32
@kmalloc_caches = external dso_local local_unnamed_addr global [4 x [14 x ptr]], align 4
@init_cgroup_housekeeping.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.59 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&cgrp->pidlist_mutex\00", [43 x i8] zeroinitializer }, align 32
@init_cgroup_housekeeping.__key.60 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.61 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"&cgrp->offline_waitq\00", [43 x i8] zeroinitializer }, align 32
@init_cgroup_housekeeping.__key.62 = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.63 = internal constant { [45 x i8], [51 x i8] } { [45 x i8] c"(work_completion)(&cgrp->release_agent_work)\00", [51 x i8] zeroinitializer }, align 32
@prev_cputime_init.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.64 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c"&prev->lock\00", [20 x i8] zeroinitializer }, align 32
@cgroup_addrm_files._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.65, ptr @.str.66, ptr @.str.7, i32 4071, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.65 = internal constant { [40 x i8], [56 x i8] } { [40 x i8] c"\014cgroup: %s: failed to add %s, err=%d\0A\00", [56 x i8] zeroinitializer }, align 32
@.str.66 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"cgroup_addrm_files\00", [45 x i8] zeroinitializer }, align 32
@cgroup_addrm_files._entry_ptr = internal global ptr @cgroup_addrm_files._entry, section ".printk_index", align 4
@cgroup_add_file.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.67 = internal constant { [23 x i8], [41 x i8] } { [23 x i8] c"(&cfile->notify_timer)\00", [41 x i8] zeroinitializer }, align 32
@.str.68 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c".__DEBUG__.\00", [20 x i8] zeroinitializer }, align 32
@.str.69 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"%s%s.%s\00", [24 x i8] zeroinitializer }, align 32
@.str.70 = internal constant { [30 x i8], [34 x i8] } { [30 x i8] c"include/trace/events/cgroup.h\00", [34 x i8] zeroinitializer }, align 32
@trace_cgroup_setup_root.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@__cpu_online_mask = external dso_local global %struct.cpumask, align 4
@nr_cpu_ids = external dso_local local_unnamed_addr global i32, align 4
@cpu_max_bits_warn.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.71 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"include/linux/cpumask.h\00", [40 x i8] zeroinitializer }, align 32
@trace_cgroup_notify_populated.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@cgroup_fs_context_ops = internal constant { %struct.fs_context_operations, [40 x i8] } { %struct.fs_context_operations { ptr @cgroup_fs_context_free, ptr null, ptr @cgroup2_parse_param, ptr null, ptr @cgroup_get_tree, ptr @cgroup_reconfigure }, [40 x i8] zeroinitializer }, align 32
@cgroup1_fs_context_ops = internal constant { %struct.fs_context_operations, [40 x i8] } { %struct.fs_context_operations { ptr @cgroup_fs_context_free, ptr null, ptr @cgroup1_parse_param, ptr null, ptr @cgroup1_get_tree, ptr @cgroup1_reconfigure }, [40 x i8] zeroinitializer }, align 32
@cgroup2_fs_parameters = internal constant { [4 x %struct.fs_parameter_spec], [32 x i8] } { [4 x %struct.fs_parameter_spec] [%struct.fs_parameter_spec { ptr @.str.72, ptr null, i8 0, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.73, ptr null, i8 1, i16 0, ptr null }, %struct.fs_parameter_spec { ptr @.str.74, ptr null, i8 2, i16 0, ptr null }, %struct.fs_parameter_spec zeroinitializer], [32 x i8] zeroinitializer }, align 32
@.str.72 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"nsdelegate\00", [21 x i8] zeroinitializer }, align 32
@.str.73 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"memory_localevents\00", [45 x i8] zeroinitializer }, align 32
@.str.74 = internal constant { [21 x i8], [43 x i8] } { [21 x i8] c"memory_recursiveprot\00", [43 x i8] zeroinitializer }, align 32
@.str.75 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"cgroup2\00", [24 x i8] zeroinitializer }, align 32
@.str.76 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"cgroup_hierarchy_idr.xa_lock\00", [35 x i8] zeroinitializer }, align 32
@cgroup_migrate_add_task.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@trace_cgroup_attach_task.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@cgroup_get_live.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@cgroup_apply_control_disable.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@css_killed_ref_fn.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.77 = internal constant { [38 x i8], [58 x i8] } { [38 x i8] c"(work_completion)(&css->destroy_work)\00", [58 x i8] zeroinitializer }, align 32
@cgroup_destroy_wq = internal global { ptr, [28 x i8] } zeroinitializer, align 32
@.str.78 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"cgroup_file_kn_lock\00", [44 x i8] zeroinitializer }, align 32
@css_release.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@css_release_work_fn.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.79 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"(work_completion)(&(&css->destroy_rwork)->work)\00", [48 x i8] zeroinitializer }, align 32
@cgroup_idr_lock = internal global { %struct.spinlock, [52 x i8] } { %struct.spinlock { %union.anon.3 { %struct.raw_spinlock { %struct.arch_spinlock_t zeroinitializer, i32 -559067475, i32 -1, ptr inttoptr (i32 -1 to ptr), %struct.lockdep_map { ptr null, [2 x ptr] zeroinitializer, ptr @.str.80, i8 0, i8 3, i8 0, i32 0, i32 0 } } } }, [52 x i8] zeroinitializer }, align 32
@.str.80 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"cgroup_idr_lock\00", [16 x i8] zeroinitializer }, align 32
@trace_cgroup_release.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_cgroup_destroy_root.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@css_serial_nr_next = internal global { i64, [24 x i8] } { i64 1, [24 x i8] zeroinitializer }, align 32
@cgroup_apply_control_enable.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@css_create.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@trace_cgroup_mkdir.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@cgroup_destroy_locked.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@trace_cgroup_rmdir.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.82 = internal constant { [12 x i8], [20 x i8] } { [12 x i8] c",nsdelegate\00", [20 x i8] zeroinitializer }, align 32
@.str.83 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c",memory_localevents\00", [44 x i8] zeroinitializer }, align 32
@.str.84 = internal constant { [22 x i8], [42 x i8] } { [22 x i8] c",memory_recursiveprot\00", [42 x i8] zeroinitializer }, align 32
@.str.85 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"cpuset\00", [25 x i8] zeroinitializer }, align 32
@.str.86 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"cpu\00", [28 x i8] zeroinitializer }, align 32
@.str.87 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"cpuacct\00", [24 x i8] zeroinitializer }, align 32
@.str.88 = internal constant { [3 x i8], [29 x i8] } { [3 x i8] c"io\00", [29 x i8] zeroinitializer }, align 32
@.str.89 = internal constant { [7 x i8], [25 x i8] } { [7 x i8] c"memory\00", [25 x i8] zeroinitializer }, align 32
@.str.90 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"devices\00", [24 x i8] zeroinitializer }, align 32
@.str.91 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"freezer\00", [24 x i8] zeroinitializer }, align 32
@.str.92 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"net_cls\00", [24 x i8] zeroinitializer }, align 32
@.str.93 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"perf_event\00", [21 x i8] zeroinitializer }, align 32
@.str.94 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"net_prio\00", [23 x i8] zeroinitializer }, align 32
@.str.95 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"pids\00", [27 x i8] zeroinitializer }, align 32
@.str.96 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"rdma\00", [27 x i8] zeroinitializer }, align 32
@.str.97 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"misc\00", [27 x i8] zeroinitializer }, align 32
@.str.98 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"debug\00", [26 x i8] zeroinitializer }, align 32
@cgroup_init_subsys.__UNIQUE_ID_ddebug577 = internal global { ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] } { ptr @.str.12, ptr @.str.99, ptr @.str.7, ptr @.str.100, i8 5, i8 -101, i8 -128, i8 0, { { { %struct.atomic_t, { ptr } } } } zeroinitializer, [4 x i8] undef }, section "__dyndbg", align 8
@.str.99 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"cgroup_init_subsys\00", [45 x i8] zeroinitializer }, align 32
@.str.100 = internal constant { [31 x i8], [33 x i8] } { [31 x i8] c"Initializing cgroup subsys %s\0A\00", [33 x i8] zeroinitializer }, align 32
@.str.101 = internal constant { [39 x i8], [57 x i8] } { [39 x i8] c"cgroup: Initializing cgroup subsys %s\0A\00", [57 x i8] zeroinitializer }, align 32
@xa_init_flags.__key = internal global { %struct.lock_class_key, [24 x i8] } zeroinitializer, align 32
@.str.102 = internal constant { [13 x i8], [19 x i8] } { [13 x i8] c"&xa->xa_lock\00", [19 x i8] zeroinitializer }, align 32
@cgroup_kf_ops = internal global { %struct.kernfs_ops, [48 x i8] } { %struct.kernfs_ops { ptr @cgroup_file_open, ptr @cgroup_file_release, ptr @cgroup_seqfile_show, ptr @cgroup_seqfile_start, ptr @cgroup_seqfile_next, ptr @cgroup_seqfile_stop, ptr null, i32 4096, i8 0, ptr @cgroup_file_write, ptr @cgroup_file_poll, ptr null }, [48 x i8] zeroinitializer }, align 32
@cgroup_kf_single_ops = internal global { %struct.kernfs_ops, [48 x i8] } { %struct.kernfs_ops { ptr @cgroup_file_open, ptr @cgroup_file_release, ptr @cgroup_seqfile_show, ptr null, ptr null, ptr null, ptr null, i32 4096, i8 0, ptr @cgroup_file_write, ptr @cgroup_file_poll, ptr null }, [48 x i8] zeroinitializer }, align 32
@.str.103 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%llu\0A\00", [26 x i8] zeroinitializer }, align 32
@.str.104 = internal constant { [6 x i8], [26 x i8] } { [6 x i8] c"%lld\0A\00", [26 x i8] zeroinitializer }, align 32
@.str.105 = internal constant { [10 x i8], [22 x i8] } { [10 x i8] c"threaded\0A\00", [22 x i8] zeroinitializer }, align 32
@.str.106 = internal constant { [16 x i8], [16 x i8] } { [16 x i8] c"domain invalid\0A\00", [16 x i8] zeroinitializer }, align 32
@.str.107 = internal constant { [17 x i8], [47 x i8] } { [17 x i8] c"domain threaded\0A\00", [47 x i8] zeroinitializer }, align 32
@.str.108 = internal constant { [8 x i8], [24 x i8] } { [8 x i8] c"domain\0A\00", [24 x i8] zeroinitializer }, align 32
@.str.109 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"threaded\00", [23 x i8] zeroinitializer }, align 32
@.str.110 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%d\0A\00", [28 x i8] zeroinitializer }, align 32
@__cgroup_procs_start.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@.str.111 = internal constant { [2 x i8], [30 x i8] } { [2 x i8] c" \00", [30 x i8] zeroinitializer }, align 32
@.str.112 = internal constant { [14 x i8], [18 x i8] } { [14 x i8] c"populated %d\0A\00", [18 x i8] zeroinitializer }, align 32
@.str.113 = internal constant { [11 x i8], [21 x i8] } { [11 x i8] c"frozen %d\0A\00", [21 x i8] zeroinitializer }, align 32
@.str.114 = internal constant { [5 x i8], [27 x i8] } { [5 x i8] c"max\0A\00", [27 x i8] zeroinitializer }, align 32
@.str.115 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"max\00", [28 x i8] zeroinitializer }, align 32
@.str.116 = internal constant { [19 x i8], [45 x i8] } { [19 x i8] c"nr_descendants %d\0A\00", [45 x i8] zeroinitializer }, align 32
@.str.117 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"nr_dying_descendants %d\0A\00", [39 x i8] zeroinitializer }, align 32
@psi_system = external dso_local global %struct.psi_group, align 8
@radix_tree_preloads = external dso_local global %struct.radix_tree_preload, section ".data..percpu", align 4
@oops_in_progress = external dso_local local_unnamed_addr global i32, align 4
@debug_locks_silent = external dso_local local_unnamed_addr global i32, section ".data..read_mostly", align 4
@.str.118 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"include/linux/local_lock_internal.h\00", [60 x i8] zeroinitializer }, align 32
@.str.119 = internal constant { [24 x i8], [40 x i8] } { [24 x i8] c"DEBUG_LOCKS_WARN_ON(%s)\00", [40 x i8] zeroinitializer }, align 32
@.str.120 = internal constant { [20 x i8], [44 x i8] } { [20 x i8] c"l->owner != current\00", [44 x i8] zeroinitializer }, align 32
@.str.121 = internal constant { [27 x i8], [37 x i8] } { [27 x i8] c"/sbin/cpuset_release_agent\00", [37 x i8] zeroinitializer }, align 32
@cpuset_fs_context_ops = internal constant { %struct.fs_context_operations, [40 x i8] } { %struct.fs_context_operations { ptr @cgroup_fs_context_free, ptr null, ptr null, ptr null, ptr @cgroup1_get_tree, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.122 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"cgroup_destroy\00", [17 x i8] zeroinitializer }, align 32
@.str.123 = internal constant { [29 x i8], [35 x i8] } { [29 x i8] c"include/linux/percpu-rwsem.h\00", [35 x i8] zeroinitializer }, align 32
@rcu_sync_is_idle.__warned = internal unnamed_addr global i1 false, section ".data.unlikely", align 1
@.str.124 = internal constant { [25 x i8], [39 x i8] } { [25 x i8] c"include/linux/rcu_sync.h\00", [39 x i8] zeroinitializer }, align 32
@.str.125 = internal constant { [36 x i8], [60 x i8] } { [36 x i8] c"suspicious rcu_sync_is_idle() usage\00", [60 x i8] zeroinitializer }, align 32
@css_set_move_task.__already_done = internal unnamed_addr global i1 false, section ".data.once", align 1
@css_set_move_task.__already_done.126 = internal unnamed_addr global i1 false, section ".data.once", align 1
@css_set_move_task.__already_done.127 = internal unnamed_addr global i1 false, section ".data.once", align 1
@cgroup_disable._entry = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.128, ptr @.str.129, ptr @.str.7, i32 6469, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.128 = internal constant { [48 x i8], [48 x i8] } { [48 x i8] c"\016cgroup: Disabling %s control group subsystem\0A\00", [48 x i8] zeroinitializer }, align 32
@.str.129 = internal constant { [15 x i8], [17 x i8] } { [15 x i8] c"cgroup_disable\00", [17 x i8] zeroinitializer }, align 32
@cgroup_disable._entry_ptr = internal global ptr @cgroup_disable._entry, section ".printk_index", align 4
@cgroup_disable._entry.130 = internal constant { %struct.pi_entry, [40 x i8] } { %struct.pi_entry { ptr @.str.131, ptr @.str.129, ptr @.str.7, i32 6477, ptr null, ptr null }, [40 x i8] zeroinitializer }, align 32
@.str.131 = internal constant { [46 x i8], [50 x i8] } { [46 x i8] c"\016cgroup: Disabling %s control group feature\0A\00", [50 x i8] zeroinitializer }, align 32
@cgroup_disable._entry_ptr.132 = internal global ptr @cgroup_disable._entry.130, section ".printk_index", align 4
@.str.133 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"pressure\00", [23 x i8] zeroinitializer }, align 32
@kernel_kobj = external dso_local local_unnamed_addr global ptr, align 4
@cgroup_sysfs_attr_group = internal constant { %struct.attribute_group, [44 x i8] } { %struct.attribute_group { ptr @.str.12, ptr null, ptr null, ptr @cgroup_sysfs_attrs, ptr null }, [44 x i8] zeroinitializer }, align 32
@cgroup_sysfs_attrs = internal global { [3 x ptr], [20 x i8] } { [3 x ptr] [ptr @cgroup_delegate_attr, ptr @cgroup_features_attr, ptr null], [20 x i8] zeroinitializer }, align 32
@cgroup_delegate_attr = internal global { %struct.kobj_attribute, [36 x i8] } { %struct.kobj_attribute { %struct.attribute { ptr @.str.134, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @delegate_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@cgroup_features_attr = internal global { %struct.kobj_attribute, [36 x i8] } { %struct.kobj_attribute { %struct.attribute { ptr @.str.137, i16 292, i8 0, ptr null, %struct.lock_class_key zeroinitializer }, ptr @features_show, ptr null }, [36 x i8] zeroinitializer }, align 32
@.str.134 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"delegate\00", [23 x i8] zeroinitializer }, align 32
@.str.135 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%s.\00", [28 x i8] zeroinitializer }, align 32
@.str.136 = internal constant { [4 x i8], [28 x i8] } { [4 x i8] c"%s\0A\00", [28 x i8] zeroinitializer }, align 32
@.str.137 = internal constant { [9 x i8], [23 x i8] } { [9 x i8] c"features\00", [23 x i8] zeroinitializer }, align 32
@.str.138 = internal constant { [52 x i8], [44 x i8] } { [52 x i8] c"nsdelegate\0Amemory_localevents\0Amemory_recursiveprot\0A\00", [44 x i8] zeroinitializer }, align 32
@switch.table.cgroup2_parse_param = internal constant { [3 x i32], [20 x i8] } { [3 x i32] [i32 8, i32 32, i32 64], [20 x i8] zeroinitializer }, align 32
@__sancov_gen_cov_switch_values = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4096]
@__sancov_gen_cov_switch_values.139 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4096]
@__sancov_gen_cov_switch_values.140 = internal global [4 x i64] [i64 2, i64 32, i64 0, i64 4096]
@__sancov_gen_cov_switch_values.141 = internal global [4 x i64] [i64 2, i64 8, i64 43, i64 45]
@___asan_gen_.142 = private unnamed_addr constant [31 x i8] c"str__cgroup__trace_system_name\00", align 1
@___asan_gen_.143 = private unnamed_addr constant [32 x i8] c"../include/trace/trace_events.h\00", align 1
@___asan_gen_.144 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.143, i32 36, i32 1 }
@___asan_gen_.145 = private unnamed_addr constant [31 x i8] c"trace_event_fields_cgroup_root\00", align 1
@___asan_gen_.148 = private unnamed_addr constant [35 x i8] c"trace_event_type_funcs_cgroup_root\00", align 1
@___asan_gen_.151 = private unnamed_addr constant [22 x i8] c"print_fmt_cgroup_root\00", align 1
@___asan_gen_.154 = private unnamed_addr constant [24 x i8] c"event_cgroup_setup_root\00", align 1
@___asan_gen_.157 = private unnamed_addr constant [26 x i8] c"event_cgroup_destroy_root\00", align 1
@___asan_gen_.159 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.600, i32 40, i32 1 }
@___asan_gen_.160 = private unnamed_addr constant [21 x i8] c"event_cgroup_remount\00", align 1
@___asan_gen_.162 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.600, i32 47, i32 1 }
@___asan_gen_.163 = private unnamed_addr constant [26 x i8] c"trace_event_fields_cgroup\00", align 1
@___asan_gen_.166 = private unnamed_addr constant [30 x i8] c"trace_event_type_funcs_cgroup\00", align 1
@___asan_gen_.169 = private unnamed_addr constant [17 x i8] c"print_fmt_cgroup\00", align 1
@___asan_gen_.172 = private unnamed_addr constant [19 x i8] c"event_cgroup_mkdir\00", align 1
@___asan_gen_.174 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.600, i32 78, i32 1 }
@___asan_gen_.175 = private unnamed_addr constant [19 x i8] c"event_cgroup_rmdir\00", align 1
@___asan_gen_.177 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.600, i32 85, i32 1 }
@___asan_gen_.178 = private unnamed_addr constant [21 x i8] c"event_cgroup_release\00", align 1
@___asan_gen_.180 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.600, i32 92, i32 1 }
@___asan_gen_.181 = private unnamed_addr constant [20 x i8] c"event_cgroup_rename\00", align 1
@___asan_gen_.183 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.600, i32 99, i32 1 }
@___asan_gen_.184 = private unnamed_addr constant [20 x i8] c"event_cgroup_freeze\00", align 1
@___asan_gen_.186 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.600, i32 106, i32 1 }
@___asan_gen_.187 = private unnamed_addr constant [22 x i8] c"event_cgroup_unfreeze\00", align 1
@___asan_gen_.189 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.600, i32 113, i32 1 }
@___asan_gen_.190 = private unnamed_addr constant [34 x i8] c"trace_event_fields_cgroup_migrate\00", align 1
@___asan_gen_.193 = private unnamed_addr constant [38 x i8] c"trace_event_type_funcs_cgroup_migrate\00", align 1
@___asan_gen_.196 = private unnamed_addr constant [25 x i8] c"print_fmt_cgroup_migrate\00", align 1
@___asan_gen_.199 = private unnamed_addr constant [25 x i8] c"event_cgroup_attach_task\00", align 1
@___asan_gen_.201 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.600, i32 150, i32 1 }
@___asan_gen_.202 = private unnamed_addr constant [28 x i8] c"event_cgroup_transfer_tasks\00", align 1
@___asan_gen_.204 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.600, i32 158, i32 1 }
@___asan_gen_.205 = private unnamed_addr constant [32 x i8] c"trace_event_fields_cgroup_event\00", align 1
@___asan_gen_.208 = private unnamed_addr constant [36 x i8] c"trace_event_type_funcs_cgroup_event\00", align 1
@___asan_gen_.211 = private unnamed_addr constant [23 x i8] c"print_fmt_cgroup_event\00", align 1
@___asan_gen_.214 = private unnamed_addr constant [30 x i8] c"event_cgroup_notify_populated\00", align 1
@___asan_gen_.216 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.600, i32 193, i32 1 }
@___asan_gen_.217 = private unnamed_addr constant [27 x i8] c"event_cgroup_notify_frozen\00", align 1
@___asan_gen_.219 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.600, i32 200, i32 1 }
@___asan_gen_.223 = private unnamed_addr constant [13 x i8] c"cgroup_mutex\00", align 1
@___asan_gen_.228 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 89, i32 1 }
@___asan_gen_.232 = private unnamed_addr constant [13 x i8] c"css_set_lock\00", align 1
@___asan_gen_.234 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 90, i32 1 }
@___asan_gen_.238 = private unnamed_addr constant [23 x i8] c"trace_cgroup_path_lock\00", align 1
@___asan_gen_.240 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 97, i32 1 }
@___asan_gen_.244 = private unnamed_addr constant [25 x i8] c"cgroup_threadgroup_rwsem\00", align 1
@___asan_gen_.252 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 113, i32 1 }
@___asan_gen_.253 = private unnamed_addr constant [14 x i8] c"cgroup_subsys\00", align 1
@___asan_gen_.255 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 130, i32 23 }
@___asan_gen_.256 = private unnamed_addr constant [31 x i8] c"cpuset_cgrp_subsys_enabled_key\00", align 1
@___asan_gen_.259 = private unnamed_addr constant [30 x i8] c"cpuset_cgrp_subsys_on_dfl_key\00", align 1
@___asan_gen_.262 = private unnamed_addr constant [28 x i8] c"cpu_cgrp_subsys_enabled_key\00", align 1
@___asan_gen_.265 = private unnamed_addr constant [27 x i8] c"cpu_cgrp_subsys_on_dfl_key\00", align 1
@___asan_gen_.268 = private unnamed_addr constant [32 x i8] c"cpuacct_cgrp_subsys_enabled_key\00", align 1
@___asan_gen_.271 = private unnamed_addr constant [31 x i8] c"cpuacct_cgrp_subsys_on_dfl_key\00", align 1
@___asan_gen_.274 = private unnamed_addr constant [27 x i8] c"io_cgrp_subsys_enabled_key\00", align 1
@___asan_gen_.277 = private unnamed_addr constant [26 x i8] c"io_cgrp_subsys_on_dfl_key\00", align 1
@___asan_gen_.280 = private unnamed_addr constant [31 x i8] c"memory_cgrp_subsys_enabled_key\00", align 1
@___asan_gen_.283 = private unnamed_addr constant [30 x i8] c"memory_cgrp_subsys_on_dfl_key\00", align 1
@___asan_gen_.286 = private unnamed_addr constant [32 x i8] c"devices_cgrp_subsys_enabled_key\00", align 1
@___asan_gen_.289 = private unnamed_addr constant [31 x i8] c"devices_cgrp_subsys_on_dfl_key\00", align 1
@___asan_gen_.292 = private unnamed_addr constant [32 x i8] c"freezer_cgrp_subsys_enabled_key\00", align 1
@___asan_gen_.295 = private unnamed_addr constant [31 x i8] c"freezer_cgrp_subsys_on_dfl_key\00", align 1
@___asan_gen_.298 = private unnamed_addr constant [32 x i8] c"net_cls_cgrp_subsys_enabled_key\00", align 1
@___asan_gen_.301 = private unnamed_addr constant [31 x i8] c"net_cls_cgrp_subsys_on_dfl_key\00", align 1
@___asan_gen_.304 = private unnamed_addr constant [35 x i8] c"perf_event_cgrp_subsys_enabled_key\00", align 1
@___asan_gen_.307 = private unnamed_addr constant [34 x i8] c"perf_event_cgrp_subsys_on_dfl_key\00", align 1
@___asan_gen_.310 = private unnamed_addr constant [33 x i8] c"net_prio_cgrp_subsys_enabled_key\00", align 1
@___asan_gen_.313 = private unnamed_addr constant [32 x i8] c"net_prio_cgrp_subsys_on_dfl_key\00", align 1
@___asan_gen_.316 = private unnamed_addr constant [29 x i8] c"pids_cgrp_subsys_enabled_key\00", align 1
@___asan_gen_.319 = private unnamed_addr constant [28 x i8] c"pids_cgrp_subsys_on_dfl_key\00", align 1
@___asan_gen_.322 = private unnamed_addr constant [29 x i8] c"rdma_cgrp_subsys_enabled_key\00", align 1
@___asan_gen_.325 = private unnamed_addr constant [28 x i8] c"rdma_cgrp_subsys_on_dfl_key\00", align 1
@___asan_gen_.328 = private unnamed_addr constant [29 x i8] c"misc_cgrp_subsys_enabled_key\00", align 1
@___asan_gen_.331 = private unnamed_addr constant [28 x i8] c"misc_cgrp_subsys_on_dfl_key\00", align 1
@___asan_gen_.334 = private unnamed_addr constant [30 x i8] c"debug_cgrp_subsys_enabled_key\00", align 1
@___asan_gen_.337 = private unnamed_addr constant [29 x i8] c"debug_cgrp_subsys_on_dfl_key\00", align 1
@___asan_gen_.340 = private unnamed_addr constant [14 x i8] c"cgrp_dfl_root\00", align 1
@___asan_gen_.342 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 166, i32 20 }
@___asan_gen_.343 = private unnamed_addr constant [13 x i8] c"cgroup_roots\00", align 1
@___asan_gen_.345 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 185, i32 1 }
@___asan_gen_.346 = private unnamed_addr constant [13 x i8] c"init_css_set\00", align 1
@___asan_gen_.348 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 759, i32 16 }
@___asan_gen_.349 = private unnamed_addr constant [15 x i8] c"init_cgroup_ns\00", align 1
@___asan_gen_.351 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 210, i32 25 }
@___asan_gen_.352 = private unnamed_addr constant [26 x i8] c"cgroup_subsys_enabled_key\00", align 1
@___asan_gen_.354 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 152, i32 32 }
@___asan_gen_.355 = private unnamed_addr constant [26 x i8] c"cgrp_dfl_threaded_ss_mask\00", align 1
@___asan_gen_.357 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 182, i32 12 }
@___asan_gen_.360 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 629, i32 2 }
@___asan_gen_.361 = private unnamed_addr constant [14 x i8] c"css_set_count\00", align 1
@___asan_gen_.363 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 780, i32 12 }
@___asan_gen_.364 = private unnamed_addr constant [14 x i8] c"css_set_table\00", align 1
@___asan_gen_.366 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 940, i32 8 }
@___asan_gen_.367 = private unnamed_addr constant [25 x i8] c"cgroup_subsys_on_dfl_key\00", align 1
@___asan_gen_.369 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 158, i32 32 }
@___asan_gen_.378 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 1827, i32 4 }
@___asan_gen_.381 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 1858, i32 23 }
@___asan_gen_.382 = private unnamed_addr constant [22 x i8] c"cgroup_kf_syscall_ops\00", align 1
@___asan_gen_.384 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 5731, i32 34 }
@___asan_gen_.385 = private unnamed_addr constant [18 x i8] c"cgroup_root_count\00", align 1
@___asan_gen_.387 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 186, i32 12 }
@___asan_gen_.388 = private unnamed_addr constant [16 x i8] c"cgroup2_fs_type\00", align 1
@___asan_gen_.390 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 2230, i32 32 }
@___asan_gen_.393 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 2223, i32 12 }
@___asan_gen_.394 = private unnamed_addr constant [15 x i8] c"cgroup_fs_type\00", align 1
@___asan_gen_.396 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 2222, i32 25 }
@___asan_gen_.397 = private unnamed_addr constant [21 x i8] c"cgroup_hierarchy_idr\00", align 1
@___asan_gen_.402 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 2337, i32 22 }
@___asan_gen_.403 = private unnamed_addr constant [18 x i8] c"trace_cgroup_path\00", align 1
@___asan_gen_.405 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 98, i32 6 }
@___asan_gen_.406 = private unnamed_addr constant [20 x i8] c"cgroup_file_kn_lock\00", align 1
@___asan_gen_.411 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 4316, i32 2 }
@___asan_gen_.414 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 4343, i32 3 }
@___asan_gen_.417 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 5810, i32 3 }
@___asan_gen_.418 = private unnamed_addr constant [19 x i8] c"cgroup_subsys_name\00", align 1
@___asan_gen_.420 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 137, i32 20 }
@___asan_gen_.423 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 5814, i32 3 }
@___asan_gen_.424 = private unnamed_addr constant [18 x i8] c"cgroup_base_files\00", align 1
@___asan_gen_.426 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 4983, i32 22 }
@___asan_gen_.435 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 5890, i32 4 }
@___asan_gen_.436 = private unnamed_addr constant [26 x i8] c"cgrp_dfl_implicit_ss_mask\00", align 1
@___asan_gen_.438 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 179, i32 12 }
@___asan_gen_.439 = private unnamed_addr constant [25 x i8] c"cgrp_dfl_inhibit_ss_mask\00", align 1
@___asan_gen_.441 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 176, i32 12 }
@___asan_gen_.444 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 5929, i32 2 }
@___asan_gen_.445 = private unnamed_addr constant [15 x i8] c"cpuset_fs_type\00", align 1
@___asan_gen_.447 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 2275, i32 32 }
@___asan_gen_.450 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 5980, i32 9 }
@___asan_gen_.451 = private unnamed_addr constant [17 x i8] c"cgrp_dfl_visible\00", align 1
@___asan_gen_.454 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 6020, i32 17 }
@___asan_gen_.457 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 6024, i32 20 }
@___asan_gen_.460 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 6024, i32 38 }
@___asan_gen_.463 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 6024, i32 44 }
@___asan_gen_.466 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 6027, i32 18 }
@___asan_gen_.469 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 6056, i32 16 }
@___asan_gen_.472 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 6638, i32 21 }
@___asan_gen_.496 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.600, i32 11, i32 1 }
@___asan_gen_.511 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.600, i32 54, i32 1 }
@___asan_gen_.532 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.600, i32 120, i32 1 }
@___asan_gen_.538 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.600, i32 166, i32 1 }
@___asan_gen_.544 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.549, i32 695, i32 2 }
@___asan_gen_.546 = private unnamed_addr constant [35 x i8] c"../include/linux/percpu-refcount.h\00", align 1
@___asan_gen_.547 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.546, i32 280, i32 2 }
@___asan_gen_.549 = private unnamed_addr constant [28 x i8] c"../include/linux/rcupdate.h\00", align 1
@___asan_gen_.550 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.549, i32 723, i32 2 }
@___asan_gen_.552 = private unnamed_addr constant [26 x i8] c"../include/linux/cgroup.h\00", align 1
@___asan_gen_.553 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.552, i32 481, i32 9 }
@___asan_gen_.559 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 1951, i32 2 }
@___asan_gen_.565 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 1963, i32 2 }
@___asan_gen_.571 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 1964, i32 2 }
@___asan_gen_.576 = private unnamed_addr constant [33 x i8] c"../include/linux/sched/cputime.h\00", align 1
@___asan_gen_.577 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.576, i32 185, i32 2 }
@___asan_gen_.586 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 4070, i32 5 }
@___asan_gen_.592 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 4023, i32 3 }
@___asan_gen_.595 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 1495, i32 51 }
@___asan_gen_.598 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 1497, i32 39 }
@___asan_gen_.600 = private unnamed_addr constant [33 x i8] c"../include/trace/events/cgroup.h\00", align 1
@___asan_gen_.601 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.600, i32 33, i32 1 }
@___asan_gen_.603 = private unnamed_addr constant [27 x i8] c"../include/linux/cpumask.h\00", align 1
@___asan_gen_.604 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.603, i32 108, i32 2 }
@___asan_gen_.605 = private unnamed_addr constant [22 x i8] c"cgroup_fs_context_ops\00", align 1
@___asan_gen_.607 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 2163, i32 43 }
@___asan_gen_.608 = private unnamed_addr constant [23 x i8] c"cgroup1_fs_context_ops\00", align 1
@___asan_gen_.610 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 2170, i32 43 }
@___asan_gen_.611 = private unnamed_addr constant [22 x i8] c"cgroup2_fs_parameters\00", align 1
@___asan_gen_.613 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 1872, i32 39 }
@___asan_gen_.616 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 1873, i32 2 }
@___asan_gen_.619 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 1874, i32 2 }
@___asan_gen_.622 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 1875, i32 2 }
@___asan_gen_.625 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 2231, i32 12 }
@___asan_gen_.628 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 189, i32 8 }
@___asan_gen_.634 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 5570, i32 3 }
@___asan_gen_.635 = private unnamed_addr constant [18 x i8] c"cgroup_destroy_wq\00", align 1
@___asan_gen_.637 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 126, i32 33 }
@___asan_gen_.640 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 111, i32 8 }
@___asan_gen_.643 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 5213, i32 2 }
@___asan_gen_.649 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 5204, i32 2 }
@___asan_gen_.650 = private unnamed_addr constant [16 x i8] c"cgroup_idr_lock\00", align 1
@___asan_gen_.655 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 105, i32 8 }
@___asan_gen_.656 = private unnamed_addr constant [19 x i8] c"css_serial_nr_next\00", align 1
@___asan_gen_.658 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 198, i32 12 }
@___asan_gen_.661 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 5335, i32 2 }
@___asan_gen_.664 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 1926, i32 17 }
@___asan_gen_.667 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 1928, i32 17 }
@___asan_gen_.670 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 1930, i32 17 }
@___asan_gen_.673 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 13, i32 1 }
@___asan_gen_.676 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 17, i32 1 }
@___asan_gen_.679 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 21, i32 1 }
@___asan_gen_.682 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 25, i32 1 }
@___asan_gen_.685 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 29, i32 1 }
@___asan_gen_.688 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 33, i32 1 }
@___asan_gen_.691 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 37, i32 1 }
@___asan_gen_.694 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 41, i32 1 }
@___asan_gen_.697 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 45, i32 1 }
@___asan_gen_.700 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 49, i32 1 }
@___asan_gen_.703 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 57, i32 1 }
@___asan_gen_.706 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 61, i32 1 }
@___asan_gen_.709 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 65, i32 1 }
@___asan_gen_.711 = private unnamed_addr constant [33 x i8] c"../include/linux/cgroup_subsys.h\00", align 1
@___asan_gen_.712 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.711, i32 72, i32 1 }
@___asan_gen_.721 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 5742, i32 2 }
@___asan_gen_.722 = private unnamed_addr constant [6 x i8] c"__key\00", align 1
@___asan_gen_.726 = private unnamed_addr constant [26 x i8] c"../include/linux/xarray.h\00", align 1
@___asan_gen_.727 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.726, i32 378, i32 2 }
@___asan_gen_.728 = private unnamed_addr constant [14 x i8] c"cgroup_kf_ops\00", align 1
@___asan_gen_.730 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 3963, i32 26 }
@___asan_gen_.731 = private unnamed_addr constant [21 x i8] c"cgroup_kf_single_ops\00", align 1
@___asan_gen_.733 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 3954, i32 26 }
@___asan_gen_.736 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 3946, i32 17 }
@___asan_gen_.739 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 3948, i32 17 }
@___asan_gen_.742 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 3436, i32 17 }
@___asan_gen_.745 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 3438, i32 17 }
@___asan_gen_.748 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 3440, i32 17 }
@___asan_gen_.751 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 3442, i32 17 }
@___asan_gen_.754 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 3454, i32 28 }
@___asan_gen_.757 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 4846, i32 16 }
@___asan_gen_.760 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 3295, i32 29 }
@___asan_gen_.763 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 3559, i32 18 }
@___asan_gen_.766 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 3560, i32 18 }
@___asan_gen_.769 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 3475, i32 17 }
@___asan_gen_.772 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 3490, i32 19 }
@___asan_gen_.775 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 3569, i32 18 }
@___asan_gen_.778 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 3571, i32 18 }
@___asan_gen_.786 = private unnamed_addr constant [39 x i8] c"../include/linux/local_lock_internal.h\00", align 1
@___asan_gen_.787 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.786, i32 36, i32 2 }
@___asan_gen_.790 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 2251, i32 24 }
@___asan_gen_.791 = private unnamed_addr constant [22 x i8] c"cpuset_fs_context_ops\00", align 1
@___asan_gen_.793 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 2239, i32 43 }
@___asan_gen_.796 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 5947, i32 38 }
@___asan_gen_.798 = private unnamed_addr constant [32 x i8] c"../include/linux/percpu-rwsem.h\00", align 1
@___asan_gen_.799 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.798, i32 49, i32 2 }
@___asan_gen_.804 = private unnamed_addr constant [28 x i8] c"../include/linux/rcu_sync.h\00", align 1
@___asan_gen_.805 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.804, i32 34, i32 2 }
@___asan_gen_.814 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 6468, i32 4 }
@___asan_gen_.815 = private unnamed_addr constant [7 x i8] c"_entry\00", align 1
@___asan_gen_.820 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 6476, i32 4 }
@___asan_gen_.823 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 231, i32 2 }
@___asan_gen_.824 = private unnamed_addr constant [24 x i8] c"cgroup_sysfs_attr_group\00", align 1
@___asan_gen_.826 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 6771, i32 37 }
@___asan_gen_.827 = private unnamed_addr constant [19 x i8] c"cgroup_sysfs_attrs\00", align 1
@___asan_gen_.829 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 6765, i32 26 }
@___asan_gen_.830 = private unnamed_addr constant [21 x i8] c"cgroup_delegate_attr\00", align 1
@___asan_gen_.832 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 6753, i32 30 }
@___asan_gen_.833 = private unnamed_addr constant [21 x i8] c"cgroup_features_attr\00", align 1
@___asan_gen_.835 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 6763, i32 30 }
@___asan_gen_.838 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 6753, i32 53 }
@___asan_gen_.841 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 6725, i32 43 }
@___asan_gen_.844 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 6727, i32 42 }
@___asan_gen_.847 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 6763, i32 53 }
@___asan_gen_.848 = private unnamed_addr constant [17 x i8] c"<string literal>\00", align 1
@___asan_gen_.849 = private constant [26 x i8] c"../kernel/cgroup/cgroup.c\00", align 1
@___asan_gen_.850 = private unnamed_addr constant { ptr, i32, i32 } { ptr @___asan_gen_.849, i32 6759, i32 4 }
@___asan_gen_.851 = private unnamed_addr constant [33 x i8] c"switch.table.cgroup2_parse_param\00", align 1
@llvm.compiler.used = appending global [342 x ptr] [ptr @__bpf_trace_tp_map_cgroup_attach_task, ptr @__bpf_trace_tp_map_cgroup_destroy_root, ptr @__bpf_trace_tp_map_cgroup_freeze, ptr @__bpf_trace_tp_map_cgroup_mkdir, ptr @__bpf_trace_tp_map_cgroup_notify_frozen, ptr @__bpf_trace_tp_map_cgroup_notify_populated, ptr @__bpf_trace_tp_map_cgroup_release, ptr @__bpf_trace_tp_map_cgroup_remount, ptr @__bpf_trace_tp_map_cgroup_rename, ptr @__bpf_trace_tp_map_cgroup_rmdir, ptr @__bpf_trace_tp_map_cgroup_setup_root, ptr @__bpf_trace_tp_map_cgroup_transfer_tasks, ptr @__bpf_trace_tp_map_cgroup_unfreeze, ptr @__event_cgroup_attach_task, ptr @__event_cgroup_destroy_root, ptr @__event_cgroup_freeze, ptr @__event_cgroup_mkdir, ptr @__event_cgroup_notify_frozen, ptr @__event_cgroup_notify_populated, ptr @__event_cgroup_release, ptr @__event_cgroup_remount, ptr @__event_cgroup_rename, ptr @__event_cgroup_rmdir, ptr @__event_cgroup_setup_root, ptr @__event_cgroup_transfer_tasks, ptr @__event_cgroup_unfreeze, ptr @__initcall__kmod_cgroup__580_5951_cgroup_wq_init1, ptr @__initcall__kmod_cgroup__588_6780_cgroup_sysfs_init4, ptr @__ksymtab_cgroup_get_e_css, ptr @__ksymtab_cgroup_get_from_fd, ptr @__ksymtab_cgroup_get_from_id, ptr @__ksymtab_cgroup_get_from_path, ptr @__ksymtab_cgroup_mutex, ptr @__ksymtab_cgroup_path_ns, ptr @__ksymtab_cgrp_dfl_root, ptr @__ksymtab_cpu_cgrp_subsys_enabled_key, ptr @__ksymtab_cpu_cgrp_subsys_on_dfl_key, ptr @__ksymtab_cpuacct_cgrp_subsys_enabled_key, ptr @__ksymtab_cpuacct_cgrp_subsys_on_dfl_key, ptr @__ksymtab_cpuset_cgrp_subsys_enabled_key, ptr @__ksymtab_cpuset_cgrp_subsys_on_dfl_key, ptr @__ksymtab_css_next_descendant_pre, ptr @__ksymtab_css_set_lock, ptr @__ksymtab_debug_cgrp_subsys_enabled_key, ptr @__ksymtab_debug_cgrp_subsys_on_dfl_key, ptr @__ksymtab_devices_cgrp_subsys_enabled_key, ptr @__ksymtab_devices_cgrp_subsys_on_dfl_key, ptr @__ksymtab_freezer_cgrp_subsys_enabled_key, ptr @__ksymtab_freezer_cgrp_subsys_on_dfl_key, ptr @__ksymtab_io_cgrp_subsys_enabled_key, ptr @__ksymtab_io_cgrp_subsys_on_dfl_key, ptr @__ksymtab_memory_cgrp_subsys_enabled_key, ptr @__ksymtab_memory_cgrp_subsys_on_dfl_key, ptr @__ksymtab_misc_cgrp_subsys_enabled_key, ptr @__ksymtab_misc_cgrp_subsys_on_dfl_key, ptr @__ksymtab_net_cls_cgrp_subsys_enabled_key, ptr @__ksymtab_net_cls_cgrp_subsys_on_dfl_key, ptr @__ksymtab_net_prio_cgrp_subsys_enabled_key, ptr @__ksymtab_net_prio_cgrp_subsys_on_dfl_key, ptr @__ksymtab_of_css, ptr @__ksymtab_perf_event_cgrp_subsys_enabled_key, ptr @__ksymtab_perf_event_cgrp_subsys_on_dfl_key, ptr @__ksymtab_pids_cgrp_subsys_enabled_key, ptr @__ksymtab_pids_cgrp_subsys_on_dfl_key, ptr @__ksymtab_rdma_cgrp_subsys_enabled_key, ptr @__ksymtab_rdma_cgrp_subsys_on_dfl_key, ptr @__ksymtab_task_cgroup_path, ptr @__setup_cgroup_disable, ptr @__setup_enable_cgroup_debug, ptr @__tracepoint_cgroup_attach_task, ptr @__tracepoint_cgroup_destroy_root, ptr @__tracepoint_cgroup_freeze, ptr @__tracepoint_cgroup_mkdir, ptr @__tracepoint_cgroup_notify_frozen, ptr @__tracepoint_cgroup_notify_populated, ptr @__tracepoint_cgroup_release, ptr @__tracepoint_cgroup_remount, ptr @__tracepoint_cgroup_rename, ptr @__tracepoint_cgroup_rmdir, ptr @__tracepoint_cgroup_setup_root, ptr @__tracepoint_cgroup_transfer_tasks, ptr @__tracepoint_cgroup_unfreeze, ptr @__tracepoint_ptr_cgroup_attach_task, ptr @__tracepoint_ptr_cgroup_destroy_root, ptr @__tracepoint_ptr_cgroup_freeze, ptr @__tracepoint_ptr_cgroup_mkdir, ptr @__tracepoint_ptr_cgroup_notify_frozen, ptr @__tracepoint_ptr_cgroup_notify_populated, ptr @__tracepoint_ptr_cgroup_release, ptr @__tracepoint_ptr_cgroup_remount, ptr @__tracepoint_ptr_cgroup_rename, ptr @__tracepoint_ptr_cgroup_rmdir, ptr @__tracepoint_ptr_cgroup_setup_root, ptr @__tracepoint_ptr_cgroup_transfer_tasks, ptr @__tracepoint_ptr_cgroup_unfreeze, ptr @cgroup_addrm_files._entry, ptr @cgroup_addrm_files._entry_ptr, ptr @cgroup_disable._entry, ptr @cgroup_disable._entry.130, ptr @cgroup_disable._entry_ptr, ptr @cgroup_disable._entry_ptr.132, ptr @cgroup_init._entry, ptr @cgroup_init._entry_ptr, ptr @event_cgroup_attach_task, ptr @event_cgroup_destroy_root, ptr @event_cgroup_freeze, ptr @event_cgroup_mkdir, ptr @event_cgroup_notify_frozen, ptr @event_cgroup_notify_populated, ptr @event_cgroup_release, ptr @event_cgroup_remount, ptr @event_cgroup_rename, ptr @event_cgroup_rmdir, ptr @event_cgroup_setup_root, ptr @event_cgroup_transfer_tasks, ptr @event_cgroup_unfreeze, ptr @event_class_cgroup, ptr @event_class_cgroup_event, ptr @event_class_cgroup_migrate, ptr @event_class_cgroup_root, ptr @rebind_subsystems._entry, ptr @rebind_subsystems._entry_ptr, ptr @str__cgroup__trace_system_name, ptr @trace_event_fields_cgroup_root, ptr @trace_event_type_funcs_cgroup_root, ptr @print_fmt_cgroup_root, ptr @trace_event_fields_cgroup, ptr @trace_event_type_funcs_cgroup, ptr @print_fmt_cgroup, ptr @trace_event_fields_cgroup_migrate, ptr @trace_event_type_funcs_cgroup_migrate, ptr @print_fmt_cgroup_migrate, ptr @trace_event_fields_cgroup_event, ptr @trace_event_type_funcs_cgroup_event, ptr @print_fmt_cgroup_event, ptr @.str, ptr @cgroup_mutex, ptr @.str.1, ptr @.str.2, ptr @css_set_lock, ptr @.str.3, ptr @trace_cgroup_path_lock, ptr @.str.4, ptr @cgroup_threadgroup_rwsem, ptr @.str.5, ptr @.str.6, ptr @cgroup_subsys, ptr @cpuset_cgrp_subsys_enabled_key, ptr @cpuset_cgrp_subsys_on_dfl_key, ptr @cpu_cgrp_subsys_enabled_key, ptr @cpu_cgrp_subsys_on_dfl_key, ptr @cpuacct_cgrp_subsys_enabled_key, ptr @cpuacct_cgrp_subsys_on_dfl_key, ptr @io_cgrp_subsys_enabled_key, ptr @io_cgrp_subsys_on_dfl_key, ptr @memory_cgrp_subsys_enabled_key, ptr @memory_cgrp_subsys_on_dfl_key, ptr @devices_cgrp_subsys_enabled_key, ptr @devices_cgrp_subsys_on_dfl_key, ptr @freezer_cgrp_subsys_enabled_key, ptr @freezer_cgrp_subsys_on_dfl_key, ptr @net_cls_cgrp_subsys_enabled_key, ptr @net_cls_cgrp_subsys_on_dfl_key, ptr @perf_event_cgrp_subsys_enabled_key, ptr @perf_event_cgrp_subsys_on_dfl_key, ptr @net_prio_cgrp_subsys_enabled_key, ptr @net_prio_cgrp_subsys_on_dfl_key, ptr @pids_cgrp_subsys_enabled_key, ptr @pids_cgrp_subsys_on_dfl_key, ptr @rdma_cgrp_subsys_enabled_key, ptr @rdma_cgrp_subsys_on_dfl_key, ptr @misc_cgrp_subsys_enabled_key, ptr @misc_cgrp_subsys_on_dfl_key, ptr @debug_cgrp_subsys_enabled_key, ptr @debug_cgrp_subsys_on_dfl_key, ptr @cgrp_dfl_root, ptr @cgroup_roots, ptr @init_css_set, ptr @init_cgroup_ns, ptr @cgroup_subsys_enabled_key, ptr @cgrp_dfl_threaded_ss_mask, ptr @.str.7, ptr @css_set_count, ptr @css_set_table, ptr @cgroup_subsys_on_dfl_key, ptr @.str.8, ptr @.str.9, ptr @.str.10, ptr @cgroup_kf_syscall_ops, ptr @cgroup_root_count, ptr @cgroup2_fs_type, ptr @.str.12, ptr @cgroup_fs_type, ptr @cgroup_hierarchy_idr, ptr @.str.13, ptr @trace_cgroup_path, ptr @cgroup_file_kn_lock, ptr @.str.14, ptr @.str.16, ptr @.str.17, ptr @cgroup_subsys_name, ptr @.str.18, ptr @cgroup_base_files, ptr @.str.19, ptr @.str.20, ptr @cgrp_dfl_implicit_ss_mask, ptr @cgrp_dfl_inhibit_ss_mask, ptr @.str.21, ptr @cpuset_fs_type, ptr @.str.22, ptr @cgrp_dfl_visible, ptr @.str.23, ptr @.str.24, ptr @.str.25, ptr @.str.26, ptr @.str.27, ptr @.str.28, ptr @.str.31, ptr @.str.32, ptr @.str.33, ptr @.str.34, ptr @.str.35, ptr @.str.36, ptr @.str.37, ptr @.str.38, ptr @.str.39, ptr @.str.40, ptr @.str.41, ptr @.str.42, ptr @.str.43, ptr @.str.44, ptr @.str.45, ptr @.str.46, ptr @.str.47, ptr @.str.48, ptr @.str.49, ptr @.str.50, ptr @.str.51, ptr @.str.52, ptr @.str.53, ptr @.str.54, ptr @.str.55, ptr @.str.56, ptr @.str.57, ptr @.str.58, ptr @init_cgroup_housekeeping.__key, ptr @.str.59, ptr @init_cgroup_housekeeping.__key.60, ptr @.str.61, ptr @init_cgroup_housekeeping.__key.62, ptr @.str.63, ptr @prev_cputime_init.__key, ptr @.str.64, ptr @.str.65, ptr @.str.66, ptr @cgroup_add_file.__key, ptr @.str.67, ptr @.str.68, ptr @.str.69, ptr @.str.70, ptr @.str.71, ptr @cgroup_fs_context_ops, ptr @cgroup1_fs_context_ops, ptr @cgroup2_fs_parameters, ptr @.str.72, ptr @.str.73, ptr @.str.74, ptr @.str.75, ptr @.str.76, ptr @css_killed_ref_fn.__key, ptr @.str.77, ptr @cgroup_destroy_wq, ptr @.str.78, ptr @css_release.__key, ptr @css_release_work_fn.__key, ptr @.str.79, ptr @cgroup_idr_lock, ptr @.str.80, ptr @css_serial_nr_next, ptr @css_create.__key, ptr @.str.82, ptr @.str.83, ptr @.str.84, ptr @.str.85, ptr @.str.86, ptr @.str.87, ptr @.str.88, ptr @.str.89, ptr @.str.90, ptr @.str.91, ptr @.str.92, ptr @.str.93, ptr @.str.94, ptr @.str.95, ptr @.str.96, ptr @.str.97, ptr @.str.98, ptr @.str.99, ptr @.str.100, ptr @.str.101, ptr @xa_init_flags.__key, ptr @.str.102, ptr @cgroup_kf_ops, ptr @cgroup_kf_single_ops, ptr @.str.103, ptr @.str.104, ptr @.str.105, ptr @.str.106, ptr @.str.107, ptr @.str.108, ptr @.str.109, ptr @.str.110, ptr @.str.111, ptr @.str.112, ptr @.str.113, ptr @.str.114, ptr @.str.115, ptr @.str.116, ptr @.str.117, ptr @.str.118, ptr @.str.119, ptr @.str.120, ptr @.str.121, ptr @cpuset_fs_context_ops, ptr @.str.122, ptr @.str.123, ptr @.str.124, ptr @.str.125, ptr @.str.128, ptr @.str.129, ptr @.str.131, ptr @.str.133, ptr @cgroup_sysfs_attr_group, ptr @cgroup_sysfs_attrs, ptr @cgroup_delegate_attr, ptr @cgroup_features_attr, ptr @.str.134, ptr @.str.135, ptr @.str.136, ptr @.str.137, ptr @.str.138, ptr @switch.table.cgroup2_parse_param], section "llvm.metadata"
@0 = internal global [238 x { i32, i32, i32, i32, i32, i32, i32, i32 }] [{ i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @str__cgroup__trace_system_name to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.142 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.144 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_cgroup_root to i32), i32 96, i32 128, i32 ptrtoint (ptr @___asan_gen_.145 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_cgroup_root to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.148 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_cgroup_root to i32), i32 72, i32 128, i32 ptrtoint (ptr @___asan_gen_.151 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_cgroup_setup_root to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.154 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_cgroup_destroy_root to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.157 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.159 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_cgroup_remount to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.160 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.162 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_cgroup to i32), i32 120, i32 160, i32 ptrtoint (ptr @___asan_gen_.163 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_cgroup to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.166 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_cgroup to i32), i32 84, i32 128, i32 ptrtoint (ptr @___asan_gen_.169 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_cgroup_mkdir to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.172 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.174 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_cgroup_rmdir to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.175 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.177 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_cgroup_release to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.178 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.180 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_cgroup_rename to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.181 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.183 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_cgroup_freeze to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.184 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.186 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_cgroup_unfreeze to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.187 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.189 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_cgroup_migrate to i32), i32 168, i32 224, i32 ptrtoint (ptr @___asan_gen_.190 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_cgroup_migrate to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.193 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_cgroup_migrate to i32), i32 158, i32 192, i32 ptrtoint (ptr @___asan_gen_.196 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_cgroup_attach_task to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.199 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.201 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_cgroup_transfer_tasks to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.202 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.204 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_fields_cgroup_event to i32), i32 144, i32 192, i32 ptrtoint (ptr @___asan_gen_.205 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_event_type_funcs_cgroup_event to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.208 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @print_fmt_cgroup_event to i32), i32 101, i32 160, i32 ptrtoint (ptr @___asan_gen_.211 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_cgroup_notify_populated to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.214 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.216 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @event_cgroup_notify_frozen to i32), i32 76, i32 128, i32 ptrtoint (ptr @___asan_gen_.217 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.219 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.228 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_mutex to i32), i32 92, i32 128, i32 ptrtoint (ptr @___asan_gen_.223 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.228 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.1 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.228 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.2 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.234 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @css_set_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.232 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.234 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.3 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.240 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_cgroup_path_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.238 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.240 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.4 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.252 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_threadgroup_rwsem to i32), i32 160, i32 192, i32 ptrtoint (ptr @___asan_gen_.244 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.252 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.5 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.252 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.6 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.252 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_subsys to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.253 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.255 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cpuset_cgrp_subsys_enabled_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.256 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cpuset_cgrp_subsys_on_dfl_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.259 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cpu_cgrp_subsys_enabled_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.262 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cpu_cgrp_subsys_on_dfl_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.265 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cpuacct_cgrp_subsys_enabled_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.268 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.679 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cpuacct_cgrp_subsys_on_dfl_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.271 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.679 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @io_cgrp_subsys_enabled_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.274 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @io_cgrp_subsys_on_dfl_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.277 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @memory_cgrp_subsys_enabled_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.280 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @memory_cgrp_subsys_on_dfl_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.283 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @devices_cgrp_subsys_enabled_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.286 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @devices_cgrp_subsys_on_dfl_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.289 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @freezer_cgrp_subsys_enabled_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.292 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @freezer_cgrp_subsys_on_dfl_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.295 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @net_cls_cgrp_subsys_enabled_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.298 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @net_cls_cgrp_subsys_on_dfl_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.301 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @perf_event_cgrp_subsys_enabled_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.304 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @perf_event_cgrp_subsys_on_dfl_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.307 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @net_prio_cgrp_subsys_enabled_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.310 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.700 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @net_prio_cgrp_subsys_on_dfl_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.313 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.700 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pids_cgrp_subsys_enabled_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.316 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @pids_cgrp_subsys_on_dfl_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.319 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rdma_cgrp_subsys_enabled_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.322 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rdma_cgrp_subsys_on_dfl_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.325 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @misc_cgrp_subsys_enabled_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.328 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @misc_cgrp_subsys_on_dfl_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.331 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @debug_cgrp_subsys_enabled_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.334 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @debug_cgrp_subsys_on_dfl_key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.337 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgrp_dfl_root to i32), i32 6248, i32 7808, i32 ptrtoint (ptr @___asan_gen_.340 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.342 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_roots to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.343 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.345 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_css_set to i32), i32 288, i32 352, i32 ptrtoint (ptr @___asan_gen_.346 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.348 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_cgroup_ns to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.349 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.351 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_subsys_enabled_key to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.352 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.354 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgrp_dfl_threaded_ss_mask to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.355 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.357 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.7 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.360 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @css_set_count to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.361 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.363 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @css_set_table to i32), i32 512, i32 640, i32 ptrtoint (ptr @___asan_gen_.364 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.366 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_subsys_on_dfl_key to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.367 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.369 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @rebind_subsystems._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.378 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.8 to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.378 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.9 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.378 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.10 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.381 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_kf_syscall_ops to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.382 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.384 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_root_count to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.385 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.387 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup2_fs_type to i32), i32 116, i32 160, i32 ptrtoint (ptr @___asan_gen_.388 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.390 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.12 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.393 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_fs_type to i32), i32 116, i32 160, i32 ptrtoint (ptr @___asan_gen_.394 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.396 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_hierarchy_idr to i32), i32 60, i32 96, i32 ptrtoint (ptr @___asan_gen_.397 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.13 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.402 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @trace_cgroup_path to i32), i32 1024, i32 1280, i32 ptrtoint (ptr @___asan_gen_.403 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.405 to i32), i32 0 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_file_kn_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.406 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.14 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.411 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.16 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.414 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.17 to i32), i32 68, i32 128, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.417 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_subsys_name to i32), i32 56, i32 96, i32 ptrtoint (ptr @___asan_gen_.418 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.420 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.18 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.423 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_base_files to i32), i32 2432, i32 3040, i32 ptrtoint (ptr @___asan_gen_.424 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.426 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_init._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.19 to i32), i32 53, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.20 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.435 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgrp_dfl_implicit_ss_mask to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.436 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.438 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgrp_dfl_inhibit_ss_mask to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.439 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.441 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.21 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.444 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cpuset_fs_type to i32), i32 116, i32 160, i32 ptrtoint (ptr @___asan_gen_.445 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.447 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.22 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.450 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgrp_dfl_visible to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.451 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 0, i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.23 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.454 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.24 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.457 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.25 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.460 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.26 to i32), i32 1, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.463 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.27 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.466 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.28 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.469 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.31 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.472 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.32 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.33 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.34 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.35 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.36 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.37 to i32), i32 18, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.38 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.39 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.496 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.40 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.41 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.42 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.43 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.44 to i32), i32 34, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.511 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.45 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.46 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.47 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.48 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.49 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.50 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.51 to i32), i32 65, i32 128, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.532 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.52 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.53 to i32), i32 41, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.538 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.54 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.55 to i32), i32 42, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.544 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.56 to i32), i32 32, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.547 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.57 to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.550 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.58 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.553 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_cgroup_housekeeping.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.59 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.559 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_cgroup_housekeeping.__key.60 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.61 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.565 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @init_cgroup_housekeeping.__key.62 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.63 to i32), i32 45, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.571 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @prev_cputime_init.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.64 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.577 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_addrm_files._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.65 to i32), i32 40, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.66 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.586 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_add_file.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.67 to i32), i32 23, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.592 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.68 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.595 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.69 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.598 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.70 to i32), i32 30, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.601 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.71 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.604 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_fs_context_ops to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.605 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.607 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup1_fs_context_ops to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.608 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.610 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup2_fs_parameters to i32), i32 64, i32 96, i32 ptrtoint (ptr @___asan_gen_.611 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.613 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.72 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.616 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.73 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.619 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.74 to i32), i32 21, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.622 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.75 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.625 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.76 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.628 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @css_killed_ref_fn.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.634 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.77 to i32), i32 38, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.634 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_destroy_wq to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.635 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.637 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.78 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.640 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @css_release.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.643 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @css_release_work_fn.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.79 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.649 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_idr_lock to i32), i32 44, i32 96, i32 ptrtoint (ptr @___asan_gen_.650 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.80 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.655 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @css_serial_nr_next to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.656 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.658 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @css_create.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.661 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.82 to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.664 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.83 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.667 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.84 to i32), i32 22, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.670 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.85 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.673 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.86 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.676 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.87 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.679 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.88 to i32), i32 3, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.682 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.89 to i32), i32 7, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.685 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.90 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.688 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.91 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.691 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.92 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.694 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.93 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.697 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.94 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.700 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.95 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.703 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.96 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.706 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.97 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.709 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.98 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.712 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.99 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.721 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.100 to i32), i32 31, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.721 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.101 to i32), i32 39, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.721 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @xa_init_flags.__key to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.722 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.102 to i32), i32 13, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.727 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_kf_ops to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.728 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.730 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_kf_single_ops to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.731 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.733 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.103 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.736 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.104 to i32), i32 6, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.739 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.105 to i32), i32 10, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.742 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.106 to i32), i32 16, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.745 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.107 to i32), i32 17, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.748 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.108 to i32), i32 8, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.751 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.109 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.754 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.110 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.757 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.111 to i32), i32 2, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.760 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.112 to i32), i32 14, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.763 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.113 to i32), i32 11, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.766 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.114 to i32), i32 5, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.769 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.115 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.772 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.116 to i32), i32 19, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.775 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.117 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.778 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.118 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.787 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.119 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.787 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.120 to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.787 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.121 to i32), i32 27, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.790 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cpuset_fs_context_ops to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.791 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.793 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.122 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.796 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.123 to i32), i32 29, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.799 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.124 to i32), i32 25, i32 64, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.125 to i32), i32 36, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.805 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_disable._entry to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.128 to i32), i32 48, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.129 to i32), i32 15, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.814 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_disable._entry.130 to i32), i32 24, i32 64, i32 ptrtoint (ptr @___asan_gen_.815 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.131 to i32), i32 46, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.820 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.133 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.823 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_sysfs_attr_group to i32), i32 20, i32 64, i32 ptrtoint (ptr @___asan_gen_.824 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.826 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_sysfs_attrs to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.827 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.829 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_delegate_attr to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.830 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.832 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @cgroup_features_attr to i32), i32 28, i32 64, i32 ptrtoint (ptr @___asan_gen_.833 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.835 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.134 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.838 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.135 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.841 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.136 to i32), i32 4, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.844 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.137 to i32), i32 9, i32 32, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.847 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @.str.138 to i32), i32 52, i32 96, i32 ptrtoint (ptr @___asan_gen_.848 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 ptrtoint (ptr @___asan_gen_.850 to i32), i32 -1 }, { i32, i32, i32, i32, i32, i32, i32, i32 } { i32 ptrtoint (ptr @switch.table.cgroup2_parse_param to i32), i32 12, i32 32, i32 ptrtoint (ptr @___asan_gen_.851 to i32), i32 ptrtoint (ptr @___asan_gen_.849 to i32), i32 0, i32 0, i32 -1 }]
@llvm.used = appending global [2 x ptr] [ptr @asan.module_ctor, ptr @asan.module_dtor], section "llvm.metadata"
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_ctor, ptr null }]
@llvm.global_dtors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 1, ptr @asan.module_dtor, ptr null }]

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cgroup_setup_root(ptr nocapture readnone %__data, ptr noundef %root) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_setup_root, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %root) #26
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cgroup_destroy_root(ptr nocapture readnone %__data, ptr noundef %root) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_destroy_root, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %root) #26
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cgroup_remount(ptr nocapture readnone %__data, ptr noundef %root) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_remount, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %root) #26
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cgroup_mkdir(ptr nocapture readnone %__data, ptr noundef %cgrp, ptr noundef %path) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_mkdir, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cgrp, ptr noundef %path) #26
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cgroup_rmdir(ptr nocapture readnone %__data, ptr noundef %cgrp, ptr noundef %path) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_rmdir, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cgrp, ptr noundef %path) #26
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cgroup_release(ptr nocapture readnone %__data, ptr noundef %cgrp, ptr noundef %path) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_release, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cgrp, ptr noundef %path) #26
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cgroup_rename(ptr nocapture readnone %__data, ptr noundef %cgrp, ptr noundef %path) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_rename, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cgrp, ptr noundef %path) #26
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cgroup_freeze(ptr nocapture readnone %__data, ptr noundef %cgrp, ptr noundef %path) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_freeze, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cgrp, ptr noundef %path) #26
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cgroup_unfreeze(ptr nocapture readnone %__data, ptr noundef %cgrp, ptr noundef %path) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_unfreeze, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cgrp, ptr noundef %path) #26
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cgroup_attach_task(ptr nocapture readnone %__data, ptr noundef %dst_cgrp, ptr noundef %path, ptr noundef %task, i1 noundef zeroext %threadgroup) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_attach_task, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %dst_cgrp, ptr noundef %path, ptr noundef %task, i1 noundef zeroext %threadgroup) #26
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool10.not = icmp eq ptr %6, null
  br i1 %tobool10.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cgroup_transfer_tasks(ptr nocapture readnone %__data, ptr noundef %dst_cgrp, ptr noundef %path, ptr noundef %task, i1 noundef zeroext %threadgroup) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_transfer_tasks, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %dst_cgrp, ptr noundef %path, ptr noundef %task, i1 noundef zeroext %threadgroup) #26
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool10.not = icmp eq ptr %6, null
  br i1 %tobool10.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cgroup_notify_populated(ptr nocapture readnone %__data, ptr noundef %cgrp, ptr noundef %path, i32 noundef %val) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_notify_populated, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cgrp, ptr noundef %path, i32 noundef %val) #26
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__traceiter_cgroup_notify_frozen(ptr nocapture readnone %__data, ptr noundef %cgrp, ptr noundef %path, i32 noundef %val) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_notify_frozen, i32 0, i32 7), align 4
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %entry.do.body2_crit_edge

entry.do.body2_crit_edge:                         ; preds = %entry
  br label %do.body2

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.body2:                                         ; preds = %do.body2.do.body2_crit_edge, %entry.do.body2_crit_edge
  %it_func_ptr.0 = phi ptr [ %incdec.ptr, %do.body2.do.body2_crit_edge ], [ %0, %entry.do.body2_crit_edge ]
  %1 = ptrtoint ptr %it_func_ptr.0 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load volatile ptr, ptr %it_func_ptr.0, align 4
  %data = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0, i32 0, i32 1
  %3 = ptrtoint ptr %data to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %data, align 4
  tail call void %2(ptr noundef %4, ptr noundef %cgrp, ptr noundef %path, i32 noundef %val) #26
  %incdec.ptr = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0, i32 1
  %5 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %incdec.ptr, align 4
  %tobool9.not = icmp eq ptr %6, null
  br i1 %tobool9.not, label %do.body2.if.end_crit_edge, label %do.body2.do.body2_crit_edge

do.body2.do.body2_crit_edge:                      ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2

do.body2.if.end_crit_edge:                        ; preds = %do.body2
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.end:                                           ; preds = %do.body2.if.end_crit_edge, %entry.if.end_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_cgroup_root(ptr noundef %__data, ptr noundef readonly %root) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #26
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !636

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !637

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #26
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %name.i = getelementptr inbounds %struct.cgroup_root, ptr %root, i32 0, i32 9
  %call.i27 = tail call i32 @strlen(ptr noundef nonnull %name.i) #29
  %add = add i32 %call.i27, 21
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #26
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  %add.i = shl i32 %call.i27, 16
  %or.i = add i32 %add.i, 65556
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_cgroup_root, ptr %call3, i32 0, i32 3
  %3 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %hierarchy_id = getelementptr inbounds %struct.cgroup_root, ptr %root, i32 0, i32 2
  %4 = ptrtoint ptr %hierarchy_id to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %hierarchy_id, align 8
  %root6 = getelementptr inbounds %struct.trace_event_raw_cgroup_root, ptr %call3, i32 0, i32 1
  %6 = ptrtoint ptr %root6 to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %5, ptr %root6, align 4
  %subsys_mask = getelementptr inbounds %struct.cgroup_root, ptr %root, i32 0, i32 1
  %7 = ptrtoint ptr %subsys_mask to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %subsys_mask, align 4
  %conv = trunc i32 %8 to i16
  %ss_mask = getelementptr inbounds %struct.trace_event_raw_cgroup_root, ptr %call3, i32 0, i32 2
  %9 = ptrtoint ptr %ss_mask to i32
  call void @__asan_store2_noabort(i32 %9)
  store i16 %conv, ptr %ss_mask, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 20
  %tobool9.not = icmp eq ptr %name.i, null
  %spec.select = select i1 %tobool9.not, ptr @.str.32, ptr %name.i
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #30
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #26
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_cgroup_root(ptr noundef %__data, ptr noundef readonly %root) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #26
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !638
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #26
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !638
  %name.i = getelementptr inbounds %struct.cgroup_root, ptr %root, i32 0, i32 9
  %call.i = tail call i32 @strlen(ptr noundef nonnull %name.i) #29
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65556
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i.not = icmp eq ptr %15, null
  br i1 %tobool.not.i.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 32
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #26
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #26
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !626) #26
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_cgroup_root, ptr %call13, i32 0, i32 3
  %27 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_name, align 4
  %hierarchy_id = getelementptr inbounds %struct.cgroup_root, ptr %root, i32 0, i32 2
  %28 = ptrtoint ptr %hierarchy_id to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %hierarchy_id, align 8
  %root17 = getelementptr inbounds %struct.trace_event_raw_cgroup_root, ptr %call13, i32 0, i32 1
  %30 = ptrtoint ptr %root17 to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %root17, align 4
  %subsys_mask = getelementptr inbounds %struct.cgroup_root, ptr %root, i32 0, i32 1
  %31 = ptrtoint ptr %subsys_mask to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %subsys_mask, align 4
  %conv = trunc i32 %32 to i16
  %ss_mask = getelementptr inbounds %struct.trace_event_raw_cgroup_root, ptr %call13, i32 0, i32 2
  %33 = ptrtoint ptr %ss_mask to i32
  call void @__asan_store2_noabort(i32 %33)
  store i16 %conv, ptr %ss_mask, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 20
  %tobool21.not = icmp eq ptr %name.i, null
  %spec.select = select i1 %tobool21.not, ptr @.str.32, ptr %name.i
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select) #30
  %34 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %rctx, align 4
  %36 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %35, ptr noundef %__data, i64 noundef 1, ptr noundef %37, ptr noundef %11, ptr noundef null) #26
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #26
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_reg(ptr noundef, i32 noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_event_raw_init(ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_cgroup(ptr noundef %__data, ptr nocapture noundef readonly %cgrp, ptr noundef readonly %path) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #26
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !636

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !637

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #26
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i29 = icmp eq ptr %path, null
  %spec.select.i = select i1 %tobool.not.i29, ptr @.str.32, ptr %path
  %call.i30 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #29
  %add = add i32 %call.i30, 33
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #26
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  %add.i = shl i32 %call.i30, 16
  %or.i = add i32 %add.i, 65564
  %__data_loc_path = getelementptr inbounds %struct.trace_event_raw_cgroup, ptr %call3, i32 0, i32 4
  %3 = ptrtoint ptr %__data_loc_path to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_path, align 8
  %root = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 19
  %4 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %root, align 4
  %hierarchy_id = getelementptr inbounds %struct.cgroup_root, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %hierarchy_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %hierarchy_id, align 8
  %root7 = getelementptr inbounds %struct.trace_event_raw_cgroup, ptr %call3, i32 0, i32 1
  %8 = ptrtoint ptr %root7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %root7, align 8
  %kn.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 11
  %9 = ptrtoint ptr %kn.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %kn.i, align 8
  %id.i = getelementptr inbounds %struct.kernfs_node, ptr %10, i32 0, i32 10
  %11 = ptrtoint ptr %id.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %id.i, align 8
  %id = getelementptr inbounds %struct.trace_event_raw_cgroup, ptr %call3, i32 0, i32 3
  %13 = ptrtoint ptr %id to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %12, ptr %id, align 8
  %level = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 2
  %14 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %level, align 4
  %level9 = getelementptr inbounds %struct.trace_event_raw_cgroup, ptr %call3, i32 0, i32 2
  %16 = ptrtoint ptr %level9 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %level9, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 28
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #30
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #26
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_cgroup(ptr noundef %__data, ptr nocapture noundef readonly %cgrp, ptr noundef readonly %path) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #26
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !638
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #26
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !638
  %tobool.not.i = icmp eq ptr %path, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.32, ptr %path
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #29
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65564
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i53.not = icmp eq ptr %15, null
  br i1 %tobool.not.i53.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 44
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #26
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #26
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !626) #26
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_path = getelementptr inbounds %struct.trace_event_raw_cgroup, ptr %call13, i32 0, i32 4
  %27 = ptrtoint ptr %__data_loc_path to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_path, align 8
  %root = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 19
  %28 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %root, align 4
  %hierarchy_id = getelementptr inbounds %struct.cgroup_root, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %hierarchy_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %hierarchy_id, align 8
  %root18 = getelementptr inbounds %struct.trace_event_raw_cgroup, ptr %call13, i32 0, i32 1
  %32 = ptrtoint ptr %root18 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %root18, align 8
  %kn.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 11
  %33 = ptrtoint ptr %kn.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %kn.i, align 8
  %id.i = getelementptr inbounds %struct.kernfs_node, ptr %34, i32 0, i32 10
  %35 = ptrtoint ptr %id.i to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %id.i, align 8
  %id = getelementptr inbounds %struct.trace_event_raw_cgroup, ptr %call13, i32 0, i32 3
  %37 = ptrtoint ptr %id to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %36, ptr %id, align 8
  %level = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 2
  %38 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %level, align 4
  %level20 = getelementptr inbounds %struct.trace_event_raw_cgroup, ptr %call13, i32 0, i32 2
  %40 = ptrtoint ptr %level20 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %level20, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 28
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #30
  %41 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %rctx, align 4
  %43 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %42, ptr noundef %__data, i64 noundef 1, ptr noundef %44, ptr noundef %11, ptr noundef null) #26
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_cgroup_migrate(ptr noundef %__data, ptr nocapture noundef readonly %dst_cgrp, ptr noundef readonly %path, ptr noundef readonly %task, i1 noundef zeroext %threadgroup) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #26
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !636

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !637

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #26
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i47 = icmp eq ptr %path, null
  %spec.select.i = select i1 %tobool.not.i47, ptr @.str.32, ptr %path
  %call.i48 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #29
  %comm.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 101
  %call12.i = tail call i32 @strlen(ptr noundef nonnull %comm.i) #29
  %add13.i = add i32 %call12.i, 1
  %add20.i = add i32 %call.i48, 41
  %add = add i32 %add20.i, %add13.i
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #26
  %tobool4.not = icmp eq ptr %call3, null
  br i1 %tobool4.not, label %if.end.cleanup_crit_edge, label %if.end6

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  %shl17.i = shl i32 %add13.i, 16
  %add15.i = add i32 %call.i48, 37
  %or19.i = or i32 %shl17.i, %add15.i
  %add.i = shl i32 %call.i48, 16
  %or.i = add i32 %add.i, 65572
  %__data_loc_dst_path = getelementptr inbounds %struct.trace_event_raw_cgroup_migrate, ptr %call3, i32 0, i32 5
  %3 = ptrtoint ptr %__data_loc_dst_path to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_dst_path, align 4
  %__data_loc_comm = getelementptr inbounds %struct.trace_event_raw_cgroup_migrate, ptr %call3, i32 0, i32 6
  %4 = ptrtoint ptr %__data_loc_comm to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %or19.i, ptr %__data_loc_comm, align 8
  %root = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 19
  %5 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %root, align 4
  %hierarchy_id = getelementptr inbounds %struct.cgroup_root, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %hierarchy_id to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %hierarchy_id, align 8
  %dst_root = getelementptr inbounds %struct.trace_event_raw_cgroup_migrate, ptr %call3, i32 0, i32 1
  %9 = ptrtoint ptr %dst_root to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %8, ptr %dst_root, align 8
  %kn.i = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 11
  %10 = ptrtoint ptr %kn.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %kn.i, align 8
  %id.i = getelementptr inbounds %struct.kernfs_node, ptr %11, i32 0, i32 10
  %12 = ptrtoint ptr %id.i to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %id.i, align 8
  %dst_id = getelementptr inbounds %struct.trace_event_raw_cgroup_migrate, ptr %call3, i32 0, i32 3
  %14 = ptrtoint ptr %dst_id to i32
  call void @__asan_store8_noabort(i32 %14)
  store i64 %13, ptr %dst_id, align 8
  %level = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 2
  %15 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %level, align 4
  %dst_level = getelementptr inbounds %struct.trace_event_raw_cgroup_migrate, ptr %call3, i32 0, i32 2
  %17 = ptrtoint ptr %dst_level to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %16, ptr %dst_level, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 36
  %call10 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #30
  %pid = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 68
  %18 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %pid, align 8
  %pid11 = getelementptr inbounds %struct.trace_event_raw_cgroup_migrate, ptr %call3, i32 0, i32 4
  %20 = ptrtoint ptr %pid11 to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %pid11, align 8
  %and13 = and i32 %add15.i, 65535
  %add.ptr14 = getelementptr i8, ptr %call3, i32 %and13
  %tobool16.not = icmp eq ptr %comm.i, null
  %cond22 = select i1 %tobool16.not, ptr @.str.32, ptr %comm.i
  %call23 = call ptr @strcpy(ptr noundef %add.ptr14, ptr noundef nonnull %cond22) #30
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #26
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_cgroup_migrate(ptr noundef %__data, ptr nocapture noundef readonly %dst_cgrp, ptr noundef readonly %path, ptr noundef readonly %task, i1 noundef zeroext %threadgroup) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #26
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !638
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #26
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !638
  %tobool.not.i = icmp eq ptr %path, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.32, ptr %path
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #29
  %add.i = shl i32 %call.i, 16
  %shl.i = add i32 %add.i, 65536
  %or.i = or i32 %shl.i, 36
  %comm.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 101
  %call12.i = tail call i32 @strlen(ptr noundef nonnull %comm.i) #29
  %add13.i = add i32 %call12.i, 1
  %add15.i = add i32 %call.i, 37
  %shl17.i = shl i32 %add13.i, 16
  %or19.i = or i32 %shl17.i, %add15.i
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true8, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.lhs.true8:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i71.not = icmp eq ptr %15, null
  br i1 %tobool.not.i71.not, label %land.lhs.true8.cleanup_crit_edge, label %land.lhs.true8.if.end_crit_edge

land.lhs.true8.if.end_crit_edge:                  ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.lhs.true8.cleanup_crit_edge:                 ; preds = %land.lhs.true8
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true8.if.end_crit_edge, %entry.if.end_crit_edge
  %add20.i = add i32 %call.i, 52
  %add13 = add i32 %add20.i, %add13.i
  %and = and i32 %add13, -8
  %sub = add i32 %and, -4
  %call14 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #26
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end.cleanup_crit_edge, label %if.end17

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end17:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #26
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !626) #26
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_dst_path = getelementptr inbounds %struct.trace_event_raw_cgroup_migrate, ptr %call14, i32 0, i32 5
  %27 = ptrtoint ptr %__data_loc_dst_path to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_dst_path, align 4
  %__data_loc_comm = getelementptr inbounds %struct.trace_event_raw_cgroup_migrate, ptr %call14, i32 0, i32 6
  %28 = ptrtoint ptr %__data_loc_comm to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %or19.i, ptr %__data_loc_comm, align 8
  %root = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 19
  %29 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %root, align 4
  %hierarchy_id = getelementptr inbounds %struct.cgroup_root, ptr %30, i32 0, i32 2
  %31 = ptrtoint ptr %hierarchy_id to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %hierarchy_id, align 8
  %dst_root = getelementptr inbounds %struct.trace_event_raw_cgroup_migrate, ptr %call14, i32 0, i32 1
  %33 = ptrtoint ptr %dst_root to i32
  call void @__asan_store4_noabort(i32 %33)
  store i32 %32, ptr %dst_root, align 8
  %kn.i = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 11
  %34 = ptrtoint ptr %kn.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %kn.i, align 8
  %id.i = getelementptr inbounds %struct.kernfs_node, ptr %35, i32 0, i32 10
  %36 = ptrtoint ptr %id.i to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %id.i, align 8
  %dst_id = getelementptr inbounds %struct.trace_event_raw_cgroup_migrate, ptr %call14, i32 0, i32 3
  %38 = ptrtoint ptr %dst_id to i32
  call void @__asan_store8_noabort(i32 %38)
  store i64 %37, ptr %dst_id, align 8
  %level = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 2
  %39 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %level, align 4
  %dst_level = getelementptr inbounds %struct.trace_event_raw_cgroup_migrate, ptr %call14, i32 0, i32 2
  %41 = ptrtoint ptr %dst_level to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %40, ptr %dst_level, align 4
  %add.ptr = getelementptr i8, ptr %call14, i32 36
  %call22 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #30
  %pid = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 68
  %42 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %pid, align 8
  %pid23 = getelementptr inbounds %struct.trace_event_raw_cgroup_migrate, ptr %call14, i32 0, i32 4
  %44 = ptrtoint ptr %pid23 to i32
  call void @__asan_store4_noabort(i32 %44)
  store i32 %43, ptr %pid23, align 8
  %and25 = and i32 %add15.i, 65535
  %add.ptr26 = getelementptr i8, ptr %call14, i32 %and25
  %tobool28.not = icmp eq ptr %comm.i, null
  %cond34 = select i1 %tobool28.not, ptr @.str.32, ptr %comm.i
  %call35 = call ptr @strcpy(ptr noundef %add.ptr26, ptr noundef nonnull %cond34) #30
  %45 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %rctx, align 4
  %47 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call14, i32 noundef %sub, i32 noundef %46, ptr noundef %__data, i64 noundef 1, ptr noundef %48, ptr noundef %11, ptr noundef null) #26
  br label %cleanup

cleanup:                                          ; preds = %if.end17, %if.end.cleanup_crit_edge, %land.lhs.true8.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @trace_event_raw_event_cgroup_event(ptr noundef %__data, ptr nocapture noundef readonly %cgrp, ptr noundef readonly %path, i32 noundef %val) #0 align 64 {
entry:
  %fbuffer = alloca %struct.trace_event_buffer, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %fbuffer) #26
  %flags.i = getelementptr inbounds %struct.trace_event_file, ptr %__data, i32 0, i32 7
  %0 = call ptr @memset(ptr %fbuffer, i32 255, i32 24)
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %2, 704
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end_crit_edge, label %if.end.i, !prof !636

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.end.i:                                         ; preds = %entry
  %and4.i = and i32 %2, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %trace_trigger_soft_disabled.exit, label %if.end.i.if.end_crit_edge, !prof !637

if.end.i.if.end_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

trace_trigger_soft_disabled.exit:                 ; preds = %if.end.i
  %call.i = tail call zeroext i1 @__trace_trigger_soft_disabled(ptr noundef %__data) #26
  br i1 %call.i, label %trace_trigger_soft_disabled.exit.cleanup_crit_edge, label %trace_trigger_soft_disabled.exit.if.end_crit_edge

trace_trigger_soft_disabled.exit.if.end_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

trace_trigger_soft_disabled.exit.cleanup_crit_edge: ; preds = %trace_trigger_soft_disabled.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %trace_trigger_soft_disabled.exit.if.end_crit_edge, %if.end.i.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i32 = icmp eq ptr %path, null
  %spec.select.i = select i1 %tobool.not.i32, ptr @.str.32, ptr %path
  %call.i33 = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #29
  %add = add i32 %call.i33, 33
  %call3 = call ptr @trace_event_buffer_reserve(ptr noundef nonnull %fbuffer, ptr noundef %__data, i32 noundef %add) #26
  %tobool.not = icmp eq ptr %call3, null
  br i1 %tobool.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end5:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  %add.i = shl i32 %call.i33, 16
  %or.i = add i32 %add.i, 65568
  %__data_loc_path = getelementptr inbounds %struct.trace_event_raw_cgroup_event, ptr %call3, i32 0, i32 4
  %3 = ptrtoint ptr %__data_loc_path to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or.i, ptr %__data_loc_path, align 8
  %root = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 19
  %4 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %root, align 4
  %hierarchy_id = getelementptr inbounds %struct.cgroup_root, ptr %5, i32 0, i32 2
  %6 = ptrtoint ptr %hierarchy_id to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %hierarchy_id, align 8
  %root7 = getelementptr inbounds %struct.trace_event_raw_cgroup_event, ptr %call3, i32 0, i32 1
  %8 = ptrtoint ptr %root7 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %root7, align 8
  %kn.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 11
  %9 = ptrtoint ptr %kn.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %kn.i, align 8
  %id.i = getelementptr inbounds %struct.kernfs_node, ptr %10, i32 0, i32 10
  %11 = ptrtoint ptr %id.i to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %id.i, align 8
  %id = getelementptr inbounds %struct.trace_event_raw_cgroup_event, ptr %call3, i32 0, i32 3
  %13 = ptrtoint ptr %id to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %12, ptr %id, align 8
  %level = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 2
  %14 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %level, align 4
  %level9 = getelementptr inbounds %struct.trace_event_raw_cgroup_event, ptr %call3, i32 0, i32 2
  %16 = ptrtoint ptr %level9 to i32
  call void @__asan_store4_noabort(i32 %16)
  store i32 %15, ptr %level9, align 4
  %add.ptr = getelementptr i8, ptr %call3, i32 32
  %call12 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #30
  %val13 = getelementptr inbounds %struct.trace_event_raw_cgroup_event, ptr %call3, i32 0, i32 5
  %17 = ptrtoint ptr %val13 to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 %val, ptr %val13, align 4
  call void @trace_event_buffer_commit(ptr noundef nonnull %fbuffer) #26
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end.cleanup_crit_edge, %trace_trigger_soft_disabled.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %fbuffer) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @perf_trace_cgroup_event(ptr noundef %__data, ptr nocapture noundef readonly %cgrp, ptr noundef readonly %path, i32 noundef %val) #0 align 64 {
entry:
  %__regs = alloca ptr, align 4
  %rctx = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__regs) #26
  %0 = ptrtoint ptr %__regs to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr inttoptr (i32 -1 to ptr), ptr %__regs, align 4, !annotation !638
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %rctx) #26
  %1 = ptrtoint ptr %rctx to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %rctx, align 4, !annotation !638
  %tobool.not.i = icmp eq ptr %path, null
  %spec.select.i = select i1 %tobool.not.i, ptr @.str.32, ptr %path
  %call.i = tail call i32 @strlen(ptr noundef nonnull %spec.select.i) #29
  %add.i = shl i32 %call.i, 16
  %or.i = add i32 %add.i, 65568
  %perf_events = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 10
  %2 = ptrtoint ptr %perf_events to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %perf_events, align 4
  %4 = ptrtoint ptr %3 to i32
  %5 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 3
  %7 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %cpu, align 4
  %arrayidx = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %8
  %9 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %arrayidx, align 4
  %add = add i32 %10, %4
  %11 = inttoptr i32 %add to ptr
  %prog_array.i = getelementptr inbounds %struct.trace_event_call, ptr %__data, i32 0, i32 11
  %12 = ptrtoint ptr %prog_array.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %prog_array.i, align 4
  %tobool.i.not = icmp eq ptr %13, null
  br i1 %tobool.i.not, label %land.lhs.true7, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.lhs.true7:                                   ; preds = %entry
  %14 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %11, align 4
  %tobool.not.i56.not = icmp eq ptr %15, null
  br i1 %tobool.not.i56.not, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end_crit_edge

land.lhs.true7.if.end_crit_edge:                  ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %land.lhs.true7.if.end_crit_edge, %entry.if.end_crit_edge
  %add12 = add i32 %call.i, 44
  %and = and i32 %add12, -8
  %sub = add i32 %and, -4
  %call13 = call ptr @perf_trace_buf_alloc(i32 noundef %sub, ptr noundef nonnull %__regs, ptr noundef nonnull %rctx) #26
  %tobool14.not = icmp eq ptr %call13, null
  br i1 %tobool14.not, label %if.end.cleanup_crit_edge, label %if.end16

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end16:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  %16 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %__regs, align 4
  %18 = call ptr @llvm.returnaddress(i32 0) #26
  %19 = ptrtoint ptr %18 to i32
  %arrayidx.i = getelementptr [18 x i32], ptr %17, i32 0, i32 15
  %20 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 %19, ptr %arrayidx.i, align 4
  %21 = call ptr @llvm.frameaddress.p0(i32 0) #26
  %22 = ptrtoint ptr %21 to i32
  %arrayidx2.i = getelementptr [18 x i32], ptr %17, i32 0, i32 11
  %23 = ptrtoint ptr %arrayidx2.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store i32 %22, ptr %arrayidx2.i, align 4
  %24 = call i32 @llvm.read_register.i32(metadata !626) #26
  %arrayidx4.i = getelementptr [18 x i32], ptr %17, i32 0, i32 13
  %25 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %arrayidx4.i, align 4
  %arrayidx6.i = getelementptr [18 x i32], ptr %17, i32 0, i32 16
  %26 = ptrtoint ptr %arrayidx6.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store i32 19, ptr %arrayidx6.i, align 4
  %__data_loc_path = getelementptr inbounds %struct.trace_event_raw_cgroup_event, ptr %call13, i32 0, i32 4
  %27 = ptrtoint ptr %__data_loc_path to i32
  call void @__asan_store4_noabort(i32 %27)
  store i32 %or.i, ptr %__data_loc_path, align 8
  %root = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 19
  %28 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %root, align 4
  %hierarchy_id = getelementptr inbounds %struct.cgroup_root, ptr %29, i32 0, i32 2
  %30 = ptrtoint ptr %hierarchy_id to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %hierarchy_id, align 8
  %root18 = getelementptr inbounds %struct.trace_event_raw_cgroup_event, ptr %call13, i32 0, i32 1
  %32 = ptrtoint ptr %root18 to i32
  call void @__asan_store4_noabort(i32 %32)
  store i32 %31, ptr %root18, align 8
  %kn.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 11
  %33 = ptrtoint ptr %kn.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %kn.i, align 8
  %id.i = getelementptr inbounds %struct.kernfs_node, ptr %34, i32 0, i32 10
  %35 = ptrtoint ptr %id.i to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %id.i, align 8
  %id = getelementptr inbounds %struct.trace_event_raw_cgroup_event, ptr %call13, i32 0, i32 3
  %37 = ptrtoint ptr %id to i32
  call void @__asan_store8_noabort(i32 %37)
  store i64 %36, ptr %id, align 8
  %level = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 2
  %38 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %level, align 4
  %level20 = getelementptr inbounds %struct.trace_event_raw_cgroup_event, ptr %call13, i32 0, i32 2
  %40 = ptrtoint ptr %level20 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %39, ptr %level20, align 4
  %add.ptr = getelementptr i8, ptr %call13, i32 32
  %call24 = call ptr @strcpy(ptr noundef %add.ptr, ptr noundef nonnull %spec.select.i) #30
  %val25 = getelementptr inbounds %struct.trace_event_raw_cgroup_event, ptr %call13, i32 0, i32 5
  %41 = ptrtoint ptr %val25 to i32
  call void @__asan_store4_noabort(i32 %41)
  store i32 %val, ptr %val25, align 4
  %42 = ptrtoint ptr %rctx to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %rctx, align 4
  %44 = ptrtoint ptr %__regs to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %__regs, align 4
  call void @perf_trace_run_bpf_submit(ptr noundef nonnull %call13, i32 noundef %sub, i32 noundef %43, ptr noundef %__data, i64 noundef 1, ptr noundef %45, ptr noundef %11, ptr noundef null) #26
  br label %cleanup

cleanup:                                          ; preds = %if.end16, %if.end.cleanup_crit_edge, %land.lhs.true7.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %rctx) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__regs) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_cgroup_root(ptr noundef %__data, ptr noundef %root) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  %0 = ptrtoint ptr %root to i32
  %conv = zext i32 %0 to i64
  tail call void @bpf_trace_run1(ptr noundef %__data, i64 noundef %conv) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_cgroup(ptr noundef %__data, ptr noundef %cgrp, ptr noundef %path) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  %0 = ptrtoint ptr %cgrp to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %path to i32
  %conv4 = zext i32 %1 to i64
  tail call void @bpf_trace_run2(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_cgroup_migrate(ptr noundef %__data, ptr noundef %dst_cgrp, ptr noundef %path, ptr noundef %task, i1 noundef zeroext %threadgroup) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  %0 = ptrtoint ptr %dst_cgrp to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %path to i32
  %conv4 = zext i32 %1 to i64
  %2 = ptrtoint ptr %task to i32
  %conv8 = zext i32 %2 to i64
  %conv13 = zext i1 %threadgroup to i64
  tail call void @bpf_trace_run4(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8, i64 noundef %conv13) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @__bpf_trace_cgroup_event(ptr noundef %__data, ptr noundef %cgrp, ptr noundef %path, i32 noundef %val) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  %0 = ptrtoint ptr %cgrp to i32
  %conv = zext i32 %0 to i64
  %1 = ptrtoint ptr %path to i32
  %conv4 = zext i32 %1 to i64
  %conv8 = zext i32 %val to i64
  tail call void @bpf_trace_run3(ptr noundef %__data, i64 noundef %conv, i64 noundef %conv4, i64 noundef %conv8) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @cgroup_ssid_enabled(i32 noundef %ssid) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %arrayidx = getelementptr [14 x ptr], ptr @cgroup_subsys_enabled_key, i32 0, i32 %ssid
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  %call = tail call i32 @static_key_count(ptr noundef %1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %cmp = icmp sgt i32 %call, 0
  ret i1 %cmp
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @static_key_count(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @cgroup_on_dfl(ptr nocapture noundef readonly %cgrp) local_unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %root = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 19
  %0 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root, align 4
  %cmp = icmp eq ptr %1, @cgrp_dfl_root
  ret i1 %cmp
}

; Function Attrs: argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @cgroup_is_threaded(ptr noundef readonly %cgrp) local_unnamed_addr #3 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %dom_cgrp = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 22
  %0 = ptrtoint ptr %dom_cgrp to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dom_cgrp, align 8
  %cmp = icmp ne ptr %1, %cgrp
  ret i1 %cmp
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @cgroup_is_thread_root(ptr noundef readonly %cgrp) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %dom_cgrp.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 22
  %0 = ptrtoint ptr %dom_cgrp.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dom_cgrp.i, align 8
  %cmp.i.not = icmp eq ptr %1, %cgrp
  br i1 %cmp.i.not, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %return

if.end:                                           ; preds = %entry
  %nr_threaded_children = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 10
  %2 = ptrtoint ptr %nr_threaded_children to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %nr_threaded_children, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %if.end2, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %return

if.end2:                                          ; preds = %if.end
  %nr_populated_csets.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 7
  %4 = ptrtoint ptr %nr_populated_csets.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_populated_csets.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.i.not = icmp eq i32 %5, 0
  br i1 %tobool.i.not, label %if.end2.if.end7_crit_edge, label %land.lhs.true

if.end2.if.end7_crit_edge:                        ; preds = %if.end2
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end7

land.lhs.true:                                    ; preds = %if.end2
  %subtree_control = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 14
  %6 = ptrtoint ptr %subtree_control to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %subtree_control, align 4
  %8 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %and11 = and i16 %8, %7
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %and11)
  %tobool5.not = icmp eq i16 %and11, 0
  br i1 %tobool5.not, label %land.lhs.true.if.end7_crit_edge, label %land.lhs.true.return_crit_edge

land.lhs.true.return_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %return

land.lhs.true.if.end7_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end7

if.end7:                                          ; preds = %land.lhs.true.if.end7_crit_edge, %if.end2.if.end7_crit_edge
  br label %return

return:                                           ; preds = %if.end7, %land.lhs.true.return_crit_edge, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i1 [ false, %if.end7 ], [ false, %entry.return_crit_edge ], [ true, %if.end.return_crit_edge ], [ true, %land.lhs.true.return_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @cgroup_e_css(ptr noundef %cgrp, ptr noundef readonly %ss) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not.i = icmp eq ptr %ss, null
  %id.i = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 19
  br label %do.body

do.body:                                          ; preds = %if.end.do.body_crit_edge, %entry
  %cgrp.addr.0 = phi ptr [ %cgrp, %entry ], [ %5, %if.end.do.body_crit_edge ]
  br i1 %tobool.not.i, label %do.body.cgroup_css.exit_crit_edge, label %if.then.i

do.body.cgroup_css.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

if.then.i:                                        ; preds = %do.body
  %0 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %id.i, align 4
  %arrayidx.i = getelementptr %struct.cgroup, ptr %cgrp.addr.0, i32 0, i32 18, i32 %1
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %arrayidx.i, align 4
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool2.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool2.not.i, label %lor.lhs.false.i, label %if.then.i.cgroup_css.exit_crit_edge

if.then.i.cgroup_css.exit_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

lor.lhs.false.i:                                  ; preds = %if.then.i
  %call3.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %land.lhs.true.i, label %lor.lhs.false.i.cgroup_css.exit_crit_edge

lor.lhs.false.i.cgroup_css.exit_crit_edge:        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

land.lhs.true.i:                                  ; preds = %lor.lhs.false.i
  %call5.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %land.lhs.true.i.cgroup_css.exit_crit_edge, label %land.lhs.true7.i

land.lhs.true.i.cgroup_css.exit_crit_edge:        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i
  %.b15.i = load i1, ptr @cgroup_css.__warned, align 1
  br i1 %.b15.i, label %land.lhs.true7.i.cgroup_css.exit_crit_edge, label %if.then9.i

land.lhs.true7.i.cgroup_css.exit_crit_edge:       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

if.then9.i:                                       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_css.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 486, ptr noundef nonnull @.str.22) #26
  br label %cgroup_css.exit

cgroup_css.exit:                                  ; preds = %if.then9.i, %land.lhs.true7.i.cgroup_css.exit_crit_edge, %land.lhs.true.i.cgroup_css.exit_crit_edge, %lor.lhs.false.i.cgroup_css.exit_crit_edge, %if.then.i.cgroup_css.exit_crit_edge, %do.body.cgroup_css.exit_crit_edge
  %retval.0.i = phi ptr [ %3, %if.then9.i ], [ %3, %land.lhs.true7.i.cgroup_css.exit_crit_edge ], [ %3, %land.lhs.true.i.cgroup_css.exit_crit_edge ], [ %3, %lor.lhs.false.i.cgroup_css.exit_crit_edge ], [ %3, %if.then.i.cgroup_css.exit_crit_edge ], [ %cgrp.addr.0, %do.body.cgroup_css.exit_crit_edge ]
  %tobool.not = icmp eq ptr %retval.0.i, null
  br i1 %tobool.not, label %if.end, label %cgroup_css.exit.cleanup_crit_edge

cgroup_css.exit.cleanup_crit_edge:                ; preds = %cgroup_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %cgroup_css.exit
  %parent.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.addr.0, i32 0, i32 12
  %4 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i, align 8
  %tobool2.not = icmp eq ptr %5, null
  br i1 %tobool2.not, label %do.end, label %if.end.do.body_crit_edge

if.end.do.body_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body

do.end:                                           ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  %6 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %id.i, align 4
  %arrayidx = getelementptr [14 x ptr], ptr @init_css_set, i32 0, i32 %7
  %8 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %arrayidx, align 4
  br label %cleanup

cleanup:                                          ; preds = %do.end, %cgroup_css.exit.cleanup_crit_edge
  %retval.0 = phi ptr [ %9, %do.end ], [ %retval.0.i, %cgroup_css.exit.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @cgroup_get_e_css(ptr noundef %cgrp, ptr noundef readonly %ss) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !639
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #26
  %call.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 696, ptr noundef nonnull @.str.55) #26
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %tobool.not.i10 = icmp eq ptr %ss, null
  %id.i = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 19
  br label %do.body

do.body:                                          ; preds = %if.end.do.body_crit_edge, %rcu_read_lock.exit
  %cgrp.addr.0 = phi ptr [ %cgrp, %rcu_read_lock.exit ], [ %9, %if.end.do.body_crit_edge ]
  br i1 %tobool.not.i10, label %do.body.cgroup_css.exit_crit_edge, label %if.then.i11

do.body.cgroup_css.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

if.then.i11:                                      ; preds = %do.body
  %4 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %id.i, align 4
  %arrayidx.i = getelementptr %struct.cgroup, ptr %cgrp.addr.0, i32 0, i32 18, i32 %5
  %6 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %arrayidx.i, align 4
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool2.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool2.not.i, label %lor.lhs.false.i, label %if.then.i11.cgroup_css.exit_crit_edge

if.then.i11.cgroup_css.exit_crit_edge:            ; preds = %if.then.i11
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

lor.lhs.false.i:                                  ; preds = %if.then.i11
  %call3.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %land.lhs.true.i12, label %lor.lhs.false.i.cgroup_css.exit_crit_edge

lor.lhs.false.i.cgroup_css.exit_crit_edge:        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

land.lhs.true.i12:                                ; preds = %lor.lhs.false.i
  %call5.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %land.lhs.true.i12.cgroup_css.exit_crit_edge, label %land.lhs.true7.i

land.lhs.true.i12.cgroup_css.exit_crit_edge:      ; preds = %land.lhs.true.i12
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i12
  %.b15.i = load i1, ptr @cgroup_css.__warned, align 1
  br i1 %.b15.i, label %land.lhs.true7.i.cgroup_css.exit_crit_edge, label %if.then9.i

land.lhs.true7.i.cgroup_css.exit_crit_edge:       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

if.then9.i:                                       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_css.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 486, ptr noundef nonnull @.str.22) #26
  br label %cgroup_css.exit

cgroup_css.exit:                                  ; preds = %if.then9.i, %land.lhs.true7.i.cgroup_css.exit_crit_edge, %land.lhs.true.i12.cgroup_css.exit_crit_edge, %lor.lhs.false.i.cgroup_css.exit_crit_edge, %if.then.i11.cgroup_css.exit_crit_edge, %do.body.cgroup_css.exit_crit_edge
  %retval.0.i = phi ptr [ %7, %if.then9.i ], [ %7, %land.lhs.true7.i.cgroup_css.exit_crit_edge ], [ %7, %land.lhs.true.i12.cgroup_css.exit_crit_edge ], [ %7, %lor.lhs.false.i.cgroup_css.exit_crit_edge ], [ %7, %if.then.i11.cgroup_css.exit_crit_edge ], [ %cgrp.addr.0, %do.body.cgroup_css.exit_crit_edge ]
  %tobool.not = icmp eq ptr %retval.0.i, null
  br i1 %tobool.not, label %cgroup_css.exit.if.end_crit_edge, label %land.lhs.true

cgroup_css.exit.if.end_crit_edge:                 ; preds = %cgroup_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.lhs.true:                                    ; preds = %cgroup_css.exit
  %call1 = tail call fastcc zeroext i1 @css_tryget_online(ptr noundef nonnull %retval.0.i)
  br i1 %call1, label %land.lhs.true.out_unlock_crit_edge, label %land.lhs.true.if.end_crit_edge

land.lhs.true.if.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.lhs.true.out_unlock_crit_edge:               ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

if.end:                                           ; preds = %land.lhs.true.if.end_crit_edge, %cgroup_css.exit.if.end_crit_edge
  %parent.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.addr.0, i32 0, i32 12
  %8 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %parent.i, align 8
  %tobool3.not = icmp eq ptr %9, null
  br i1 %tobool3.not, label %do.end, label %if.end.do.body_crit_edge

if.end.do.body_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body

do.end:                                           ; preds = %if.end
  %10 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %id.i, align 4
  %arrayidx = getelementptr [14 x ptr], ptr @init_css_set, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx, align 4
  %flags.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %13, i32 0, i32 7
  %14 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i13 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i13, label %if.then.i14, label %do.end.out_unlock_crit_edge

do.end.out_unlock_crit_edge:                      ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

if.then.i14:                                      ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %13, i32 0, i32 2
  tail call fastcc void @percpu_ref_get(ptr noundef %refcnt.i) #26
  br label %out_unlock

out_unlock:                                       ; preds = %if.then.i14, %do.end.out_unlock_crit_edge, %land.lhs.true.out_unlock_crit_edge
  %css.0 = phi ptr [ %13, %do.end.out_unlock_crit_edge ], [ %13, %if.then.i14 ], [ %retval.0.i, %land.lhs.true.out_unlock_crit_edge ]
  %call.i15 = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i15, label %out_unlock.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i18

out_unlock.rcu_read_unlock.exit_crit_edge:        ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true.i18:                                ; preds = %out_unlock
  %call1.i16 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i16)
  %tobool.not.i17 = icmp eq i32 %call1.i16, 0
  br i1 %tobool.not.i17, label %land.lhs.true.i18.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i20

land.lhs.true.i18.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i18
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true2.i20:                               ; preds = %land.lhs.true.i18
  %.b4.i19 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i19, label %land.lhs.true2.i20.rcu_read_unlock.exit_crit_edge, label %if.then.i21

land.lhs.true2.i20.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i20
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

if.then.i21:                                      ; preds = %land.lhs.true2.i20
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 724, ptr noundef nonnull @.str.57) #26
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i21, %land.lhs.true2.i20.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i18.rcu_read_unlock.exit_crit_edge, %out_unlock.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !640
  %16 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i22 = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i.i.i.i22 to ptr
  %preempt_count.i.i.i.i23 = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %preempt_count.i.i.i.i23 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %preempt_count.i.i.i.i23, align 4
  %sub.i.i.i = add i32 %19, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i23, align 4
  tail call void @rcu_read_unlock_strict() #26
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #26
  ret ptr %css.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @css_tryget_online(ptr noundef %css) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  %flags = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 7
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %if.then, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %return

if.then:                                          ; preds = %entry
  %refcnt = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 2
  %2 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %5, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !639
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #26
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i.i, label %if.then.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

if.then.rcu_read_lock.exit.i_crit_edge:           ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %if.then
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 696, ptr noundef nonnull @.str.55) #26
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %if.then.rcu_read_lock.exit.i_crit_edge
  %call.i1.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i1.i)
  %tobool.not.i2.i = icmp eq i32 %call.i1.i, 0
  br i1 %tobool.not.i2.i, label %land.rhs.i.i, label %rcu_read_lock.exit.i.if.end29.i.i_crit_edge

rcu_read_lock.exit.i.if.end29.i.i_crit_edge:      ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end29.i.i

land.rhs.i.i:                                     ; preds = %rcu_read_lock.exit.i
  %.b104.i.i = load i1, ptr @percpu_ref_tryget_live_rcu.__already_done, align 1
  br i1 %.b104.i.i, label %land.rhs.i.i.if.end29.i.i_crit_edge, label %if.then.i3.i, !prof !636

land.rhs.i.i.if.end29.i.i_crit_edge:              ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end29.i.i

if.then.i3.i:                                     ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @percpu_ref_tryget_live_rcu.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.56, i32 noundef 280, i32 noundef 9, ptr noundef null) #26
  br label %if.end29.i.i

if.end29.i.i:                                     ; preds = %if.then.i3.i, %land.rhs.i.i.if.end29.i.i_crit_edge, %rcu_read_lock.exit.i.if.end29.i.i_crit_edge
  %6 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %refcnt, align 4
  %and.i.i.i = and i32 %7, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %do.body46.i.i, label %if.else.i.i, !prof !636

do.body46.i.i:                                    ; preds = %if.end29.i.i
  %8 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #26, !srcloc !641
  %9 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i105.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i105.i.i to ptr
  %cpu.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu.i.i, align 4
  %arrayidx.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i.i, align 4
  %add.i.i = add i32 %14, %7
  %15 = inttoptr i32 %add.i.i to ptr
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  %add63.i.i = add i32 %17, 1
  store i32 %add63.i.i, ptr %15, align 4
  %18 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #26, !srcloc !642
  %and.i.i.i.i = and i32 %18, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool74.not.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool74.not.i.i, label %if.then83.i.i, label %do.body46.i.i.do.end86.i.i_crit_edge, !prof !637

do.body46.i.i.do.end86.i.i_crit_edge:             ; preds = %do.body46.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end86.i.i

if.then83.i.i:                                    ; preds = %do.body46.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @warn_bogus_irq_restore() #26
  br label %do.end86.i.i

do.end86.i.i:                                     ; preds = %if.then83.i.i, %do.body46.i.i.do.end86.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %8) #26, !srcloc !643
  br label %percpu_ref_tryget_live_rcu.exit.i

if.else.i.i:                                      ; preds = %if.end29.i.i
  %and.i.i = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool93.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool93.not.i.i, label %if.then94.i.i, label %if.else.i.i.percpu_ref_tryget_live_rcu.exit.i_crit_edge

if.else.i.i.percpu_ref_tryget_live_rcu.exit.i_crit_edge: ; preds = %if.else.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %percpu_ref_tryget_live_rcu.exit.i

if.then94.i.i:                                    ; preds = %if.else.i.i
  %data.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 2, i32 1
  %19 = ptrtoint ptr %data.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %data.i.i, align 4
  %call.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %20, i32 noundef 4) #26
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !644
  tail call void @llvm.prefetch.p0(ptr %20, i32 1, i32 3, i32 1) #26
  %21 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %20, ptr %20, i32 0, i32 1, ptr elementtype(i32) %20) #26, !srcloc !645
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %21, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.not.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i.i.i, label %if.then94.i.i.atomic_long_inc_not_zero.exit.i.i_crit_edge, label %do.end11.i.i.i.i.i.i.i

if.then94.i.i.atomic_long_inc_not_zero.exit.i.i_crit_edge: ; preds = %if.then94.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %atomic_long_inc_not_zero.exit.i.i

do.end11.i.i.i.i.i.i.i:                           ; preds = %if.then94.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !646
  br label %atomic_long_inc_not_zero.exit.i.i

atomic_long_inc_not_zero.exit.i.i:                ; preds = %do.end11.i.i.i.i.i.i.i, %if.then94.i.i.atomic_long_inc_not_zero.exit.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp ne i32 %asmresult.i.i.i.i.i.i.i, 0
  br label %percpu_ref_tryget_live_rcu.exit.i

percpu_ref_tryget_live_rcu.exit.i:                ; preds = %atomic_long_inc_not_zero.exit.i.i, %if.else.i.i.percpu_ref_tryget_live_rcu.exit.i_crit_edge, %do.end86.i.i
  %ret.0.off0.i.i = phi i1 [ true, %do.end86.i.i ], [ false, %if.else.i.i.percpu_ref_tryget_live_rcu.exit.i_crit_edge ], [ %cmp.i.i.i.i.i.i, %atomic_long_inc_not_zero.exit.i.i ]
  %call.i4.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i4.i, label %percpu_ref_tryget_live_rcu.exit.i.percpu_ref_tryget_live.exit_crit_edge, label %land.lhs.true.i7.i

percpu_ref_tryget_live_rcu.exit.i.percpu_ref_tryget_live.exit_crit_edge: ; preds = %percpu_ref_tryget_live_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %percpu_ref_tryget_live.exit

land.lhs.true.i7.i:                               ; preds = %percpu_ref_tryget_live_rcu.exit.i
  %call1.i5.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i5.i)
  %tobool.not.i6.i = icmp eq i32 %call1.i5.i, 0
  br i1 %tobool.not.i6.i, label %land.lhs.true.i7.i.percpu_ref_tryget_live.exit_crit_edge, label %land.lhs.true2.i9.i

land.lhs.true.i7.i.percpu_ref_tryget_live.exit_crit_edge: ; preds = %land.lhs.true.i7.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %percpu_ref_tryget_live.exit

land.lhs.true2.i9.i:                              ; preds = %land.lhs.true.i7.i
  %.b4.i8.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i8.i, label %land.lhs.true2.i9.i.percpu_ref_tryget_live.exit_crit_edge, label %if.then.i10.i

land.lhs.true2.i9.i.percpu_ref_tryget_live.exit_crit_edge: ; preds = %land.lhs.true2.i9.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %percpu_ref_tryget_live.exit

if.then.i10.i:                                    ; preds = %land.lhs.true2.i9.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 724, ptr noundef nonnull @.str.57) #26
  br label %percpu_ref_tryget_live.exit

percpu_ref_tryget_live.exit:                      ; preds = %if.then.i10.i, %land.lhs.true2.i9.i.percpu_ref_tryget_live.exit_crit_edge, %land.lhs.true.i7.i.percpu_ref_tryget_live.exit_crit_edge, %percpu_ref_tryget_live_rcu.exit.i.percpu_ref_tryget_live.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !640
  %22 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i11.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i.i.i11.i to ptr
  %preempt_count.i.i.i.i12.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i.i.i12.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i.i.i12.i, align 4
  %sub.i.i.i.i = add i32 %25, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i12.i, align 4
  tail call void @rcu_read_unlock_strict() #26
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #26
  br label %return

return:                                           ; preds = %percpu_ref_tryget_live.exit, %entry.return_crit_edge
  %retval.0 = phi i1 [ %ret.0.off0.i.i, %percpu_ref_tryget_live.exit ], [ true, %entry.return_crit_edge ]
  ret i1 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @__cgroup_task_count(ptr noundef readonly %cgrp) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 629, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %cset_links = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 20
  %1 = ptrtoint ptr %cset_links to i32
  call void @__asan_load4_noabort(i32 %1)
  %.pn39 = load ptr, ptr %cset_links, align 4
  %cmp26.not40 = icmp eq ptr %.pn39, %cset_links
  br i1 %cmp26.not40, label %if.end.for.end_crit_edge, label %if.end.for.body_crit_edge

if.end.for.body_crit_edge:                        ; preds = %if.end
  br label %for.body

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end.for.body_crit_edge
  %.pn42 = phi ptr [ %.pn, %for.body.for.body_crit_edge ], [ %.pn39, %if.end.for.body_crit_edge ]
  %count.041 = phi i32 [ %add, %for.body.for.body_crit_edge ], [ 0, %if.end.for.body_crit_edge ]
  %cset = getelementptr i8, ptr %.pn42, i32 -4
  %2 = ptrtoint ptr %cset to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cset, align 4
  %nr_tasks = getelementptr inbounds %struct.css_set, ptr %3, i32 0, i32 4
  %4 = ptrtoint ptr %nr_tasks to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_tasks, align 4
  %add = add i32 %5, %count.041
  %6 = ptrtoint ptr %.pn42 to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn = load ptr, ptr %.pn42, align 4
  %cmp26.not = icmp eq ptr %.pn, %cset_links
  br i1 %cmp26.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end.for.end_crit_edge
  %count.0.lcssa = phi i32 [ 0, %if.end.for.end_crit_edge ], [ %add, %for.body.for.end_crit_edge ]
  ret i32 %count.0.lcssa
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_slowpath_fmt(ptr noundef, i32 noundef, i32 noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_task_count(ptr noundef readonly %cgrp) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %entry.if.end.i_crit_edge, label %land.rhs.i

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

land.rhs.i:                                       ; preds = %entry
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !637

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 629, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %entry.if.end.i_crit_edge
  %cset_links.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 20
  %1 = ptrtoint ptr %cset_links.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %.pn39.i = load ptr, ptr %cset_links.i, align 4
  %cmp26.not40.i = icmp eq ptr %.pn39.i, %cset_links.i
  br i1 %cmp26.not40.i, label %if.end.i.__cgroup_task_count.exit_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  br label %for.body.i

if.end.i.__cgroup_task_count.exit_crit_edge:      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %__cgroup_task_count.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end.i.for.body.i_crit_edge
  %.pn42.i = phi ptr [ %.pn.i, %for.body.i.for.body.i_crit_edge ], [ %.pn39.i, %if.end.i.for.body.i_crit_edge ]
  %count.041.i = phi i32 [ %add.i, %for.body.i.for.body.i_crit_edge ], [ 0, %if.end.i.for.body.i_crit_edge ]
  %cset.i = getelementptr i8, ptr %.pn42.i, i32 -4
  %2 = ptrtoint ptr %cset.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cset.i, align 4
  %nr_tasks.i = getelementptr inbounds %struct.css_set, ptr %3, i32 0, i32 4
  %4 = ptrtoint ptr %nr_tasks.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %nr_tasks.i, align 4
  %add.i = add i32 %5, %count.041.i
  %6 = ptrtoint ptr %.pn42.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn.i = load ptr, ptr %.pn42.i, align 4
  %cmp26.not.i = icmp eq ptr %.pn.i, %cset_links.i
  br i1 %cmp26.not.i, label %for.body.i.__cgroup_task_count.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body.i

for.body.i.__cgroup_task_count.exit_crit_edge:    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %__cgroup_task_count.exit

__cgroup_task_count.exit:                         ; preds = %for.body.i.__cgroup_task_count.exit_crit_edge, %if.end.i.__cgroup_task_count.exit_crit_edge
  %count.0.lcssa.i = phi i32 [ 0, %if.end.i.__cgroup_task_count.exit_crit_edge ], [ %add.i, %for.body.i.__cgroup_task_count.exit_crit_edge ]
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  ret i32 %count.0.lcssa.i
}

; Function Attrs: mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @of_css(ptr nocapture noundef readonly %of) #6 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of, align 4
  %parent = getelementptr inbounds %struct.kernfs_node, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent, align 4
  %priv = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %4 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %priv, align 8
  %priv.i = getelementptr inbounds %struct.kernfs_node, ptr %1, i32 0, i32 9
  %6 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %priv.i, align 8
  %ss = getelementptr inbounds %struct.cftype, ptr %7, i32 0, i32 5
  %8 = ptrtoint ptr %ss to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %ss, align 4
  %tobool.not = icmp eq ptr %9, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.then

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %id = getelementptr inbounds %struct.cgroup_subsys, ptr %9, i32 0, i32 19
  %10 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %id, align 4
  %arrayidx = getelementptr %struct.cgroup, ptr %5, i32 0, i32 18, i32 %11
  %12 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile ptr, ptr %arrayidx, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.then, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %13, %if.then ], [ %5, %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @put_css_set_locked(ptr noundef %cset) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 961, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %refcount = getelementptr inbounds %struct.css_set, ptr %cset, i32 0, i32 1
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #26
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !647
  tail call void @llvm.prefetch.p0(ptr %refcount, i32 1, i32 3, i32 1) #26
  %1 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount, ptr %refcount, i32 1, ptr elementtype(i32) %refcount) #26, !srcloc !648
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i, label %if.end26, label %if.end5.i.i.i

if.end5.i.i.i:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %.not.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i, label %if.end5.i.i.i.cleanup_crit_edge, label %if.then10.i.i.i, !prof !636

if.end5.i.i.i.cleanup_crit_edge:                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then10.i.i.i:                                  ; preds = %if.end5.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @refcount_warn_saturate(ptr noundef %refcount, i32 noundef 3) #26
  br label %cleanup

if.end26:                                         ; preds = %if.end
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !649
  %threaded_csets = getelementptr inbounds %struct.css_set, ptr %cset, i32 0, i32 10
  %2 = ptrtoint ptr %threaded_csets to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %threaded_csets, align 4
  %cmp.i.not = icmp eq ptr %3, %threaded_csets
  br i1 %cmp.i.not, label %if.end26.land.rhs83.preheader_crit_edge, label %land.rhs36

if.end26.land.rhs83.preheader_crit_edge:          ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs83.preheader

land.rhs36:                                       ; preds = %if.end26
  %.b153 = load i1, ptr @put_css_set_locked.__already_done, align 1
  br i1 %.b153, label %land.rhs36.land.rhs83.preheader_crit_edge, label %if.then47, !prof !636

land.rhs36.land.rhs83.preheader_crit_edge:        ; preds = %land.rhs36
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs83.preheader

if.then47:                                        ; preds = %land.rhs36
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @put_css_set_locked.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 966, i32 noundef 9, ptr noundef null) #26
  br label %land.rhs83.preheader

land.rhs83.preheader:                             ; preds = %if.then47, %land.rhs36.land.rhs83.preheader_crit_edge, %if.end26.land.rhs83.preheader_crit_edge
  br label %land.rhs83

land.rhs83:                                       ; preds = %css_put.exit.land.rhs83_crit_edge, %land.rhs83.preheader
  %ssid.0175 = phi i32 [ %inc, %css_put.exit.land.rhs83_crit_edge ], [ 0, %land.rhs83.preheader ]
  %arrayidx86 = getelementptr %struct.css_set, ptr %cset, i32 0, i32 9, i32 %ssid.0175
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %arrayidx86) #26
  br i1 %call.i.i, label %if.end.i.i, label %land.rhs83.list_del.exit_crit_edge

land.rhs83.list_del.exit_crit_edge:               ; preds = %land.rhs83
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del.exit

if.end.i.i:                                       ; preds = %land.rhs83
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i = getelementptr %struct.css_set, ptr %cset, i32 0, i32 9, i32 %ssid.0175, i32 1
  %4 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %prev.i.i, align 4
  %6 = ptrtoint ptr %arrayidx86 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx86, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %prev1.i.i.i, align 4
  %9 = ptrtoint ptr %5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store volatile ptr %7, ptr %5, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %land.rhs83.list_del.exit_crit_edge
  %10 = ptrtoint ptr %arrayidx86 to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 256 to ptr), ptr %arrayidx86, align 4
  %prev.i = getelementptr %struct.css_set, ptr %cset, i32 0, i32 9, i32 %ssid.0175, i32 1
  %11 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %arrayidx87 = getelementptr [14 x ptr], ptr %cset, i32 0, i32 %ssid.0175
  %12 = ptrtoint ptr %arrayidx87 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx87, align 4
  %flags.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %13, i32 0, i32 7
  %14 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %list_del.exit.css_put.exit_crit_edge

list_del.exit.css_put.exit_crit_edge:             ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_put.exit

if.then.i:                                        ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %13, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i) #26
  br label %css_put.exit

css_put.exit:                                     ; preds = %if.then.i, %list_del.exit.css_put.exit_crit_edge
  %inc = add nuw nsw i32 %ssid.0175, 1
  %exitcond.not = icmp eq i32 %inc, 14
  br i1 %exitcond.not, label %for.end, label %css_put.exit.land.rhs83_crit_edge

css_put.exit.land.rhs83_crit_edge:                ; preds = %css_put.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs83

for.end:                                          ; preds = %css_put.exit
  %hlist = getelementptr inbounds %struct.css_set, ptr %cset, i32 0, i32 12
  %pprev.i.i.i = getelementptr inbounds %struct.css_set, ptr %cset, i32 0, i32 12, i32 1
  %16 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %pprev.i.i.i, align 4
  %tobool.not.i.not.i.i = icmp eq ptr %17, null
  br i1 %tobool.not.i.not.i.i, label %for.end.hash_del.exit_crit_edge, label %if.then.i.i

for.end.hash_del.exit_crit_edge:                  ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %hash_del.exit

if.then.i.i:                                      ; preds = %for.end
  %18 = ptrtoint ptr %hlist to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %hlist, align 4
  %20 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %19, ptr %17, align 4
  %tobool.not.i3.i.i = icmp eq ptr %19, null
  br i1 %tobool.not.i3.i.i, label %if.then.i.i.__hlist_del.exit.i.i_crit_edge, label %do.body13.i.i.i

if.then.i.i.__hlist_del.exit.i.i_crit_edge:       ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %__hlist_del.exit.i.i

do.body13.i.i.i:                                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %pprev14.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %19, i32 0, i32 1
  %21 = ptrtoint ptr %pprev14.i.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %17, ptr %pprev14.i.i.i, align 4
  br label %__hlist_del.exit.i.i

__hlist_del.exit.i.i:                             ; preds = %do.body13.i.i.i, %if.then.i.i.__hlist_del.exit.i.i_crit_edge
  %22 = ptrtoint ptr %hlist to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr null, ptr %hlist, align 4
  %23 = ptrtoint ptr %pprev.i.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %pprev.i.i.i, align 4
  br label %hash_del.exit

hash_del.exit:                                    ; preds = %__hlist_del.exit.i.i, %for.end.hash_del.exit_crit_edge
  %24 = load i32, ptr @css_set_count, align 4
  %dec = add i32 %24, -1
  store i32 %dec, ptr @css_set_count, align 4
  %cgrp_links = getelementptr inbounds %struct.css_set, ptr %cset, i32 0, i32 13
  %25 = ptrtoint ptr %cgrp_links to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %cgrp_links, align 4
  %cmp96.not179 = icmp eq ptr %26, %cgrp_links
  br i1 %cmp96.not179, label %hash_del.exit.for.end112_crit_edge, label %hash_del.exit.for.body99_crit_edge

hash_del.exit.for.body99_crit_edge:               ; preds = %hash_del.exit
  br label %for.body99

hash_del.exit.for.end112_crit_edge:               ; preds = %hash_del.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end112

for.body99:                                       ; preds = %if.end105.for.body99_crit_edge, %hash_del.exit.for.body99_crit_edge
  %.pn.in180 = phi ptr [ %.pn184, %if.end105.for.body99_crit_edge ], [ %26, %hash_del.exit.for.body99_crit_edge ]
  %link.0183 = getelementptr i8, ptr %.pn.in180, i32 -16
  %27 = ptrtoint ptr %.pn.in180 to i32
  call void @__asan_load4_noabort(i32 %27)
  %.pn184 = load ptr, ptr %.pn.in180, align 4
  %cset_link = getelementptr i8, ptr %.pn.in180, i32 -8
  %call.i.i155 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %cset_link) #26
  br i1 %call.i.i155, label %if.end.i.i158, label %for.body99.list_del.exit160_crit_edge

for.body99.list_del.exit160_crit_edge:            ; preds = %for.body99
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del.exit160

if.end.i.i158:                                    ; preds = %for.body99
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i156 = getelementptr i8, ptr %.pn.in180, i32 -4
  %28 = ptrtoint ptr %prev.i.i156 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %prev.i.i156, align 4
  %30 = ptrtoint ptr %cset_link to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %cset_link, align 4
  %prev1.i.i.i157 = getelementptr inbounds %struct.list_head, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %prev1.i.i.i157 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %29, ptr %prev1.i.i.i157, align 4
  %33 = ptrtoint ptr %29 to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %31, ptr %29, align 4
  br label %list_del.exit160

list_del.exit160:                                 ; preds = %if.end.i.i158, %for.body99.list_del.exit160_crit_edge
  %34 = ptrtoint ptr %cset_link to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr inttoptr (i32 256 to ptr), ptr %cset_link, align 4
  %prev.i159 = getelementptr i8, ptr %.pn.in180, i32 -4
  %35 = ptrtoint ptr %prev.i159 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i159, align 4
  %call.i.i161 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in180) #26
  br i1 %call.i.i161, label %if.end.i.i164, label %list_del.exit160.list_del.exit166_crit_edge

list_del.exit160.list_del.exit166_crit_edge:      ; preds = %list_del.exit160
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del.exit166

if.end.i.i164:                                    ; preds = %list_del.exit160
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i162 = getelementptr inbounds %struct.list_head, ptr %.pn.in180, i32 0, i32 1
  %36 = ptrtoint ptr %prev.i.i162 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %prev.i.i162, align 4
  %38 = ptrtoint ptr %.pn.in180 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %.pn.in180, align 4
  %prev1.i.i.i163 = getelementptr inbounds %struct.list_head, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %prev1.i.i.i163 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %37, ptr %prev1.i.i.i163, align 4
  %41 = ptrtoint ptr %37 to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile ptr %39, ptr %37, align 4
  br label %list_del.exit166

list_del.exit166:                                 ; preds = %if.end.i.i164, %list_del.exit160.list_del.exit166_crit_edge
  %42 = ptrtoint ptr %.pn.in180 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in180, align 4
  %prev.i165 = getelementptr inbounds %struct.list_head, ptr %.pn.in180, i32 0, i32 1
  %43 = ptrtoint ptr %prev.i165 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i165, align 4
  %44 = ptrtoint ptr %link.0183 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %link.0183, align 4
  %parent.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %45, i32 0, i32 12
  %46 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %parent.i, align 8
  %tobool102.not = icmp eq ptr %47, null
  br i1 %tobool102.not, label %list_del.exit166.if.end105_crit_edge, label %if.then103

list_del.exit166.if.end105_crit_edge:             ; preds = %list_del.exit166
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end105

if.then103:                                       ; preds = %list_del.exit166
  %flags.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %45, i32 0, i32 7
  %48 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %49, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i167, label %if.then103.if.end105_crit_edge

if.then103.if.end105_crit_edge:                   ; preds = %if.then103
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end105

if.then.i.i167:                                   ; preds = %if.then103
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %45, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i) #26
  br label %if.end105

if.end105:                                        ; preds = %if.then.i.i167, %if.then103.if.end105_crit_edge, %list_del.exit166.if.end105_crit_edge
  tail call void @kfree(ptr noundef %link.0183) #26
  %cmp96.not = icmp eq ptr %.pn184, %cgrp_links
  br i1 %cmp96.not, label %if.end105.for.end112_crit_edge, label %if.end105.for.body99_crit_edge

if.end105.for.body99_crit_edge:                   ; preds = %if.end105
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body99

if.end105.for.end112_crit_edge:                   ; preds = %if.end105
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end112

for.end112:                                       ; preds = %if.end105.for.end112_crit_edge, %hash_del.exit.for.end112_crit_edge
  %dom_cset.i = getelementptr inbounds %struct.css_set, ptr %cset, i32 0, i32 2
  %50 = ptrtoint ptr %dom_cset.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %dom_cset.i, align 4
  %cmp.i168.not = icmp eq ptr %51, %cset
  br i1 %cmp.i168.not, label %for.end112.do.body116_crit_edge, label %if.then114

for.end112.do.body116_crit_edge:                  ; preds = %for.end112
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body116

if.then114:                                       ; preds = %for.end112
  %threaded_csets_node = getelementptr inbounds %struct.css_set, ptr %cset, i32 0, i32 11
  %call.i.i169 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %threaded_csets_node) #26
  br i1 %call.i.i169, label %if.end.i.i172, label %if.then114.list_del.exit174_crit_edge

if.then114.list_del.exit174_crit_edge:            ; preds = %if.then114
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del.exit174

if.end.i.i172:                                    ; preds = %if.then114
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i170 = getelementptr inbounds %struct.css_set, ptr %cset, i32 0, i32 11, i32 1
  %52 = ptrtoint ptr %prev.i.i170 to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %prev.i.i170, align 4
  %54 = ptrtoint ptr %threaded_csets_node to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %threaded_csets_node, align 4
  %prev1.i.i.i171 = getelementptr inbounds %struct.list_head, ptr %55, i32 0, i32 1
  %56 = ptrtoint ptr %prev1.i.i.i171 to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %53, ptr %prev1.i.i.i171, align 4
  %57 = ptrtoint ptr %53 to i32
  call void @__asan_store4_noabort(i32 %57)
  store volatile ptr %55, ptr %53, align 4
  br label %list_del.exit174

list_del.exit174:                                 ; preds = %if.end.i.i172, %if.then114.list_del.exit174_crit_edge
  %58 = ptrtoint ptr %threaded_csets_node to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr inttoptr (i32 256 to ptr), ptr %threaded_csets_node, align 4
  %prev.i173 = getelementptr inbounds %struct.css_set, ptr %cset, i32 0, i32 11, i32 1
  %59 = ptrtoint ptr %prev.i173 to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i173, align 4
  %60 = ptrtoint ptr %dom_cset.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %dom_cset.i, align 4
  tail call void @put_css_set_locked(ptr noundef %61)
  br label %do.body116

do.body116:                                       ; preds = %list_del.exit174, %for.end112.do.body116_crit_edge
  %tobool117.not = icmp eq ptr %cset, null
  br i1 %tobool117.not, label %do.body116.cleanup_crit_edge, label %do.end121

do.body116.cleanup_crit_edge:                     ; preds = %do.body116
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

do.end121:                                        ; preds = %do.body116
  call void @__sanitizer_cov_trace_pc() #28
  %callback_head = getelementptr inbounds %struct.css_set, ptr %cset, i32 0, i32 20
  tail call void @kvfree_call_rcu(ptr noundef %callback_head, ptr noundef nonnull inttoptr (i32 280 to ptr)) #26
  br label %cleanup

cleanup:                                          ; preds = %do.end121, %do.body116.cleanup_crit_edge, %if.then10.i.i.i, %if.end5.i.i.i.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kfree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kvfree_call_rcu(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local ptr @cgroup_root_from_kf(ptr nocapture noundef readonly %kf_root) local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %kf_root to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %kf_root, align 4
  %priv = getelementptr inbounds %struct.kernfs_node, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %priv, align 8
  %root = getelementptr inbounds %struct.cgroup, ptr %3, i32 0, i32 19
  %4 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %root, align 4
  ret ptr %5
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cgroup_free_root(ptr noundef %root) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @kfree(ptr noundef %root) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @task_cgroup_from_root(ptr noundef %task, ptr noundef %root) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %cgroups.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 164
  %0 = ptrtoint ptr %cgroups.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %cgroups.i, align 16
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %entry.task_css_set.exit_crit_edge

entry.task_css_set.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false.i:                                  ; preds = %entry
  %call.i18.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i18.i)
  %tobool3.not.i = icmp eq i32 %call.i18.i, 0
  br i1 %tobool3.not.i, label %lor.lhs.false4.i, label %lor.lhs.false.i.task_css_set.exit_crit_edge

lor.lhs.false.i.task_css_set.exit_crit_edge:      ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false4.i:                                 ; preds = %lor.lhs.false.i
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 3
  %2 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool5.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool5.not.i, label %lor.lhs.false6.i, label %lor.lhs.false4.i.task_css_set.exit_crit_edge

lor.lhs.false4.i.task_css_set.exit_crit_edge:     ; preds = %lor.lhs.false4.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false6.i:                                 ; preds = %lor.lhs.false4.i
  %call7.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %land.lhs.true.i, label %lor.lhs.false6.i.task_css_set.exit_crit_edge

lor.lhs.false6.i.task_css_set.exit_crit_edge:     ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

land.lhs.true.i:                                  ; preds = %lor.lhs.false6.i
  %call9.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool10.not.i = icmp eq i32 %call9.i, 0
  br i1 %tobool10.not.i, label %land.lhs.true.i.task_css_set.exit_crit_edge, label %land.lhs.true11.i

land.lhs.true.i.task_css_set.exit_crit_edge:      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

land.lhs.true11.i:                                ; preds = %land.lhs.true.i
  %.b17.i = load i1, ptr @task_css_set.__warned, align 1
  br i1 %.b17.i, label %land.lhs.true11.i.task_css_set.exit_crit_edge, label %if.then.i

land.lhs.true11.i.task_css_set.exit_crit_edge:    ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

if.then.i:                                        ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @task_css_set.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 481, ptr noundef nonnull @.str.22) #26
  br label %task_css_set.exit

task_css_set.exit:                                ; preds = %if.then.i, %land.lhs.true11.i.task_css_set.exit_crit_edge, %land.lhs.true.i.task_css_set.exit_crit_edge, %lor.lhs.false6.i.task_css_set.exit_crit_edge, %lor.lhs.false4.i.task_css_set.exit_crit_edge, %lor.lhs.false.i.task_css_set.exit_crit_edge, %entry.task_css_set.exit_crit_edge
  %call1 = tail call fastcc ptr @cset_cgroup_from_root(ptr noundef %1, ptr noundef %root)
  ret ptr %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @cset_cgroup_from_root(ptr noundef readonly %cset, ptr noundef readnone %root) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end54_crit_edge, label %land.rhs

entry.if.end54_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end54

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 1422, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %.pr = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %tobool26.not = icmp eq i32 %.pr, 0
  br i1 %tobool26.not, label %if.end.if.end54_crit_edge, label %land.rhs27

if.end.if.end54_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end54

land.rhs27:                                       ; preds = %if.end
  %call.i118 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i118)
  %cmp29.not = icmp eq i32 %call.i118, 0
  br i1 %cmp29.not, label %do.end48, label %land.rhs27.if.end54_crit_edge, !prof !637

land.rhs27.if.end54_crit_edge:                    ; preds = %land.rhs27
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end54

do.end48:                                         ; preds = %land.rhs27
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 1423, i32 noundef 9, ptr noundef null) #26
  br label %if.end54

if.end54:                                         ; preds = %do.end48, %land.rhs27.if.end54_crit_edge, %if.end.if.end54_crit_edge, %entry.if.end54_crit_edge
  %cmp64 = icmp eq ptr %cset, @init_css_set
  br i1 %cmp64, label %if.then65, label %if.else

if.then65:                                        ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #28
  %cgrp = getelementptr inbounds %struct.cgroup_root, ptr %root, i32 0, i32 3
  br label %do.body86

if.else:                                          ; preds = %if.end54
  %cmp66 = icmp eq ptr %root, @cgrp_dfl_root
  br i1 %cmp66, label %if.then67, label %if.else68

if.then67:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  %dfl_cgrp = getelementptr inbounds %struct.css_set, ptr %cset, i32 0, i32 3
  %1 = ptrtoint ptr %dfl_cgrp to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %dfl_cgrp, align 4
  br label %do.body86

if.else68:                                        ; preds = %if.else
  %cgrp_links = getelementptr inbounds %struct.css_set, ptr %cset, i32 0, i32 13
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.else68
  %.pn.in = phi ptr [ %cgrp_links, %if.else68 ], [ %.pn, %for.body.for.cond_crit_edge ]
  %3 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %3)
  %.pn = load ptr, ptr %.pn.in, align 4
  %cmp71.not = icmp eq ptr %.pn, %cgrp_links
  br i1 %cmp71.not, label %for.cond.do.body97_crit_edge, label %for.body

for.cond.do.body97_crit_edge:                     ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body97

for.body:                                         ; preds = %for.cond
  %link.0 = getelementptr i8, ptr %.pn, i32 -16
  %4 = ptrtoint ptr %link.0 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %link.0, align 4
  %root75 = getelementptr inbounds %struct.cgroup, ptr %5, i32 0, i32 19
  %6 = ptrtoint ptr %root75 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %root75, align 4
  %cmp76 = icmp eq ptr %7, %root
  br i1 %cmp76, label %for.body.do.body86_crit_edge, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.cond

for.body.do.body86_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body86

do.body86:                                        ; preds = %for.body.do.body86_crit_edge, %if.then67, %if.then65
  %res.3 = phi ptr [ %cgrp, %if.then65 ], [ %2, %if.then67 ], [ %5, %for.body.do.body86_crit_edge ]
  %tobool87.not = icmp eq ptr %res.3, null
  br i1 %tobool87.not, label %do.body86.do.body97_crit_edge, label %do.end105, !prof !637

do.body86.do.body97_crit_edge:                    ; preds = %do.body86
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body97

do.body97:                                        ; preds = %do.body86.do.body97_crit_edge, %for.cond.do.body97_crit_edge
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1442, 0\0A.popsection", ""() #26, !srcloc !650
  unreachable

do.end105:                                        ; preds = %do.body86
  call void @__sanitizer_cov_trace_pc() #28
  ret ptr %res.3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cgroup_kn_unlock(ptr noundef %kn) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %flags.i = getelementptr inbounds %struct.kernfs_node, ptr %kn, i32 0, i32 11
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %flags.i, align 8
  %2 = and i16 %1, 15
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %2)
  %cmp = icmp eq i16 %2, 1
  br i1 %cmp, label %entry.if.end_crit_edge, label %if.else

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %parent = getelementptr inbounds %struct.kernfs_node, ptr %kn, i32 0, i32 3
  %3 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %parent, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %entry.if.end_crit_edge
  %kn.pn = phi ptr [ %4, %if.else ], [ %kn, %entry.if.end_crit_edge ]
  %cgrp.0.in = getelementptr inbounds %struct.kernfs_node, ptr %kn.pn, i32 0, i32 9
  %5 = ptrtoint ptr %cgrp.0.in to i32
  call void @__asan_load4_noabort(i32 %5)
  %cgrp.0 = load ptr, ptr %cgrp.0.in, align 8
  tail call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  tail call void @kernfs_unbreak_active_protection(ptr noundef %kn) #26
  %flags.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0, i32 0, i32 7
  %6 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.end.cgroup_put.exit_crit_edge

if.end.cgroup_put.exit_crit_edge:                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_put.exit

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i) #26
  br label %cgroup_put.exit

cgroup_put.exit:                                  ; preds = %if.then.i.i, %if.end.cgroup_put.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_unlock(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kernfs_unbreak_active_protection(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @cgroup_kn_lock_live(ptr noundef %kn, i1 noundef zeroext %drain_offline) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %flags.i = getelementptr inbounds %struct.kernfs_node, ptr %kn, i32 0, i32 11
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load2_noabort(i32 %0)
  %1 = load i16, ptr %flags.i, align 8
  %2 = and i16 %1, 15
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %2)
  %cmp = icmp eq i16 %2, 1
  br i1 %cmp, label %entry.if.end_crit_edge, label %if.else

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %parent = getelementptr inbounds %struct.kernfs_node, ptr %kn, i32 0, i32 3
  %3 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %parent, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %entry.if.end_crit_edge
  %kn.pn = phi ptr [ %4, %if.else ], [ %kn, %entry.if.end_crit_edge ]
  %cgrp.0.in = getelementptr inbounds %struct.kernfs_node, ptr %kn.pn, i32 0, i32 9
  %5 = ptrtoint ptr %cgrp.0.in to i32
  call void @__asan_load4_noabort(i32 %5)
  %cgrp.0 = load ptr, ptr %cgrp.0.in, align 8
  %call2 = tail call fastcc zeroext i1 @cgroup_tryget(ptr noundef %cgrp.0)
  br i1 %call2, label %if.end4, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end4:                                          ; preds = %if.end
  tail call void @kernfs_break_active_protection(ptr noundef %kn) #26
  br i1 %drain_offline, label %if.then5, label %if.else6

if.then5:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @cgroup_lock_and_drain_offline(ptr noundef %cgrp.0)
  br label %if.end7

if.else6:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @mutex_lock_nested(ptr noundef nonnull @cgroup_mutex, i32 noundef 0) #26
  br label %if.end7

if.end7:                                          ; preds = %if.else6, %if.then5
  %flags.i18 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0, i32 0, i32 7
  %6 = ptrtoint ptr %flags.i18 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags.i18, align 4
  %and.i19 = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i19)
  %tobool.not.i = icmp eq i32 %and.i19, 0
  br i1 %tobool.not.i, label %if.end10, label %if.end7.cleanup_crit_edge

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end10:                                         ; preds = %if.end7
  %8 = ptrtoint ptr %flags.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %flags.i, align 8
  %10 = and i16 %9, 15
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %10)
  %cmp.i = icmp eq i16 %10, 1
  br i1 %cmp.i, label %if.end10.if.end.i_crit_edge, label %if.else.i

if.end10.if.end.i_crit_edge:                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

if.else.i:                                        ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #28
  %parent.i = getelementptr inbounds %struct.kernfs_node, ptr %kn, i32 0, i32 3
  %11 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %parent.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.end10.if.end.i_crit_edge
  %kn.pn.i = phi ptr [ %12, %if.else.i ], [ %kn, %if.end10.if.end.i_crit_edge ]
  %cgrp.0.in.i = getelementptr inbounds %struct.kernfs_node, ptr %kn.pn.i, i32 0, i32 9
  %13 = ptrtoint ptr %cgrp.0.in.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %cgrp.0.i = load ptr, ptr %cgrp.0.in.i, align 8
  tail call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  tail call void @kernfs_unbreak_active_protection(ptr noundef %kn) #26
  %flags.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 7
  %14 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags.i.i.i, align 4
  %and.i.i.i = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then.i.i.i:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i.i) #26
  br label %cleanup

cleanup:                                          ; preds = %if.then.i.i.i, %if.end.i.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %if.end.cleanup_crit_edge
  %retval.0 = phi ptr [ null, %if.end.cleanup_crit_edge ], [ %cgrp.0, %if.end7.cleanup_crit_edge ], [ null, %if.end.i.cleanup_crit_edge ], [ null, %if.then.i.i.i ]
  ret ptr %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc zeroext i1 @cgroup_tryget(ptr noundef %cgrp) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  %flags.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 7
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %1, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %entry.css_tryget.exit_crit_edge

entry.css_tryget.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_tryget.exit

if.then.i:                                        ; preds = %entry
  %refcnt.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 2
  %2 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i.i = add i32 %5, 1
  store volatile i32 %add.i.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !639
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #26
  %call.i.i.i.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i.i.i.i, label %if.then.i.rcu_read_lock.exit.i.i.i_crit_edge, label %land.lhs.true.i.i.i.i

if.then.i.rcu_read_lock.exit.i.i.i_crit_edge:     ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %if.then.i
  %call1.i.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %land.lhs.true.i.i.i.i.rcu_read_lock.exit.i.i.i_crit_edge, label %land.lhs.true2.i.i.i.i

land.lhs.true.i.i.i.i.rcu_read_lock.exit.i.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit.i.i.i

land.lhs.true2.i.i.i.i:                           ; preds = %land.lhs.true.i.i.i.i
  %.b4.i.i.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i.i.i, label %land.lhs.true2.i.i.i.i.rcu_read_lock.exit.i.i.i_crit_edge, label %if.then.i.i.i.i

land.lhs.true2.i.i.i.i.rcu_read_lock.exit.i.i.i_crit_edge: ; preds = %land.lhs.true2.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %land.lhs.true2.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 696, ptr noundef nonnull @.str.55) #26
  br label %rcu_read_lock.exit.i.i.i

rcu_read_lock.exit.i.i.i:                         ; preds = %if.then.i.i.i.i, %land.lhs.true2.i.i.i.i.rcu_read_lock.exit.i.i.i_crit_edge, %land.lhs.true.i.i.i.i.rcu_read_lock.exit.i.i.i_crit_edge, %if.then.i.rcu_read_lock.exit.i.i.i_crit_edge
  %6 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %refcnt.i, align 4
  %and.i.i.i.i = and i32 %7, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i)
  %tobool.not.i1.i.i.i = icmp eq i32 %and.i.i.i.i, 0
  br i1 %tobool.not.i1.i.i.i, label %do.body1.i.i.i, label %if.else.i.i.i, !prof !636

do.body1.i.i.i:                                   ; preds = %rcu_read_lock.exit.i.i.i
  %8 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #26, !srcloc !641
  %9 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i2.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i2.i.i.i to ptr
  %cpu.i.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 3
  %11 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %cpu.i.i.i, align 4
  %arrayidx.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %arrayidx.i.i.i, align 4
  %add.i.i.i = add i32 %14, %7
  %15 = inttoptr i32 %add.i.i.i to ptr
  %16 = ptrtoint ptr %15 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %15, align 4
  %add15.i.i.i = add i32 %17, 1
  store i32 %add15.i.i.i, ptr %15, align 4
  %18 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #26, !srcloc !642
  %and.i.i.i.i.i = and i32 %18, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then29.i.i.i, label %do.body1.i.i.i.do.end31.i.i.i_crit_edge, !prof !637

do.body1.i.i.i.do.end31.i.i.i_crit_edge:          ; preds = %do.body1.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end31.i.i.i

if.then29.i.i.i:                                  ; preds = %do.body1.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @warn_bogus_irq_restore() #26
  br label %do.end31.i.i.i

do.end31.i.i.i:                                   ; preds = %if.then29.i.i.i, %do.body1.i.i.i.do.end31.i.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %8) #26, !srcloc !643
  br label %if.end39.i.i.i

if.else.i.i.i:                                    ; preds = %rcu_read_lock.exit.i.i.i
  %data.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 2, i32 1
  %19 = ptrtoint ptr %data.i.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %data.i.i.i, align 4
  %call.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %20, i32 noundef 4) #26
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !644
  tail call void @llvm.prefetch.p0(ptr %20, i32 1, i32 3, i32 1) #26
  %21 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_add_unless\0A1:\09ldrex\09$0, [$4]\0A\09teq\09$0, $5\0A\09beq\092f\0A\09add\09$1, $0, $6\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b\0A2:", "=&r,=&r,=&r,=*Qo,r,r,r,*Qo,~{cc}"(ptr elementtype(i32) %20, ptr %20, i32 0, i32 1, ptr elementtype(i32) %20) #26, !srcloc !645
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %21, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.not.i.i.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %cmp.not.i.i.i.i.i.i.i, label %if.else.i.i.i.atomic_long_add_unless.exit.i.i.i_crit_edge, label %do.end11.i.i.i.i.i.i.i

if.else.i.i.i.atomic_long_add_unless.exit.i.i.i_crit_edge: ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %atomic_long_add_unless.exit.i.i.i

do.end11.i.i.i.i.i.i.i:                           ; preds = %if.else.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !646
  br label %atomic_long_add_unless.exit.i.i.i

atomic_long_add_unless.exit.i.i.i:                ; preds = %do.end11.i.i.i.i.i.i.i, %if.else.i.i.i.atomic_long_add_unless.exit.i.i.i_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i.i.i = icmp ne i32 %asmresult.i.i.i.i.i.i.i, 0
  br label %if.end39.i.i.i

if.end39.i.i.i:                                   ; preds = %atomic_long_add_unless.exit.i.i.i, %do.end31.i.i.i
  %ret.0.off0.i.i.i = phi i1 [ true, %do.end31.i.i.i ], [ %cmp.i.i.i.i.i.i, %atomic_long_add_unless.exit.i.i.i ]
  %call.i3.i.i.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i3.i.i.i, label %if.end39.i.i.i.percpu_ref_tryget.exit.i_crit_edge, label %land.lhs.true.i6.i.i.i

if.end39.i.i.i.percpu_ref_tryget.exit.i_crit_edge: ; preds = %if.end39.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %percpu_ref_tryget.exit.i

land.lhs.true.i6.i.i.i:                           ; preds = %if.end39.i.i.i
  %call1.i4.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i4.i.i.i)
  %tobool.not.i5.i.i.i = icmp eq i32 %call1.i4.i.i.i, 0
  br i1 %tobool.not.i5.i.i.i, label %land.lhs.true.i6.i.i.i.percpu_ref_tryget.exit.i_crit_edge, label %land.lhs.true2.i8.i.i.i

land.lhs.true.i6.i.i.i.percpu_ref_tryget.exit.i_crit_edge: ; preds = %land.lhs.true.i6.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %percpu_ref_tryget.exit.i

land.lhs.true2.i8.i.i.i:                          ; preds = %land.lhs.true.i6.i.i.i
  %.b4.i7.i.i.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i7.i.i.i, label %land.lhs.true2.i8.i.i.i.percpu_ref_tryget.exit.i_crit_edge, label %if.then.i9.i.i.i

land.lhs.true2.i8.i.i.i.percpu_ref_tryget.exit.i_crit_edge: ; preds = %land.lhs.true2.i8.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %percpu_ref_tryget.exit.i

if.then.i9.i.i.i:                                 ; preds = %land.lhs.true2.i8.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 724, ptr noundef nonnull @.str.57) #26
  br label %percpu_ref_tryget.exit.i

percpu_ref_tryget.exit.i:                         ; preds = %if.then.i9.i.i.i, %land.lhs.true2.i8.i.i.i.percpu_ref_tryget.exit.i_crit_edge, %land.lhs.true.i6.i.i.i.percpu_ref_tryget.exit.i_crit_edge, %if.end39.i.i.i.percpu_ref_tryget.exit.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !640
  %22 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i10.i.i.i = and i32 %22, -16384
  %23 = inttoptr i32 %and.i.i.i.i.i10.i.i.i to ptr
  %preempt_count.i.i.i.i11.i.i.i = getelementptr inbounds %struct.thread_info, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %preempt_count.i.i.i.i11.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %preempt_count.i.i.i.i11.i.i.i, align 4
  %sub.i.i.i.i.i.i = add i32 %25, -1
  store volatile i32 %sub.i.i.i.i.i.i, ptr %preempt_count.i.i.i.i11.i.i.i, align 4
  tail call void @rcu_read_unlock_strict() #26
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #26
  br label %css_tryget.exit

css_tryget.exit:                                  ; preds = %percpu_ref_tryget.exit.i, %entry.css_tryget.exit_crit_edge
  %retval.0.i = phi i1 [ %ret.0.off0.i.i.i, %percpu_ref_tryget.exit.i ], [ true, %entry.css_tryget.exit_crit_edge ]
  ret i1 %retval.0.i
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kernfs_break_active_protection(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cgroup_lock_and_drain_offline(ptr noundef %cgrp) local_unnamed_addr #0 align 64 {
entry:
  %wait = alloca %struct.wait_queue_entry, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @mutex_lock_nested(ptr noundef nonnull @cgroup_mutex, i32 noundef 0) #26
  %call182 = call ptr @css_next_descendant_post(ptr noundef null, ptr noundef %cgrp)
  %tobool.not8083 = icmp eq ptr %call182, null
  br i1 %tobool.not8083, label %entry.for.end52_crit_edge, label %do.body.lr.ph.lr.ph

entry.for.end52_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end52

do.body.lr.ph.lr.ph:                              ; preds = %entry
  %0 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 1
  %1 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 2
  %2 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3
  %3 = getelementptr inbounds %struct.wait_queue_entry, ptr %wait, i32 0, i32 3, i32 1
  %4 = getelementptr inbounds i8, ptr %wait, i32 4
  br label %do.body

do.body:                                          ; preds = %do.body.backedge, %do.body.lr.ph.lr.ph
  %d_css.081 = phi ptr [ %call182, %do.body.lr.ph.lr.ph ], [ %d_css.081.be, %do.body.backedge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %5 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool2.not = icmp eq i32 %5, 0
  br i1 %tobool2.not, label %do.body.if.end_crit_edge, label %land.rhs

do.body.if.end_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %do.body
  %call.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 3001, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %do.body.if.end_crit_edge
  %6 = ptrtoint ptr %d_css.081 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %d_css.081, align 8
  %flags.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %7, i32 0, i32 7
  %8 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end.for.inc49_crit_edge, label %if.end.land.rhs33_crit_edge

if.end.land.rhs33_crit_edge:                      ; preds = %if.end
  br label %land.rhs33

if.end.for.inc49_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc49

land.rhs33:                                       ; preds = %for.inc.land.rhs33_crit_edge, %if.end.land.rhs33_crit_edge
  %ssid.078 = phi i32 [ %inc, %for.inc.land.rhs33_crit_edge ], [ 0, %if.end.land.rhs33_crit_edge ]
  %arrayidx = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %ssid.078
  %10 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx, align 4
  %tobool.not.i65 = icmp eq ptr %11, null
  br i1 %tobool.not.i65, label %land.rhs33.cgroup_css.exit_crit_edge, label %if.then.i

land.rhs33.cgroup_css.exit_crit_edge:             ; preds = %land.rhs33
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

if.then.i:                                        ; preds = %land.rhs33
  %id.i = getelementptr inbounds %struct.cgroup_subsys, ptr %11, i32 0, i32 19
  %12 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %id.i, align 4
  %arrayidx.i = getelementptr %struct.cgroup, ptr %7, i32 0, i32 18, i32 %13
  %14 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %arrayidx.i, align 4
  %call.i.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool2.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool2.not.i, label %lor.lhs.false.i, label %if.then.i.cgroup_css.exit_crit_edge

if.then.i.cgroup_css.exit_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

lor.lhs.false.i:                                  ; preds = %if.then.i
  %call3.i = call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %land.lhs.true.i, label %lor.lhs.false.i.cgroup_css.exit_crit_edge

lor.lhs.false.i.cgroup_css.exit_crit_edge:        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

land.lhs.true.i:                                  ; preds = %lor.lhs.false.i
  %call5.i = call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %land.lhs.true.i.cgroup_css.exit_crit_edge, label %land.lhs.true7.i

land.lhs.true.i.cgroup_css.exit_crit_edge:        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i
  %.b15.i = load i1, ptr @cgroup_css.__warned, align 1
  br i1 %.b15.i, label %land.lhs.true7.i.cgroup_css.exit_crit_edge, label %if.then9.i

land.lhs.true7.i.cgroup_css.exit_crit_edge:       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

if.then9.i:                                       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_css.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 486, ptr noundef nonnull @.str.22) #26
  br label %cgroup_css.exit

cgroup_css.exit:                                  ; preds = %if.then9.i, %land.lhs.true7.i.cgroup_css.exit_crit_edge, %land.lhs.true.i.cgroup_css.exit_crit_edge, %lor.lhs.false.i.cgroup_css.exit_crit_edge, %if.then.i.cgroup_css.exit_crit_edge, %land.rhs33.cgroup_css.exit_crit_edge
  %retval.0.i = phi ptr [ %15, %if.then9.i ], [ %15, %land.lhs.true7.i.cgroup_css.exit_crit_edge ], [ %15, %land.lhs.true.i.cgroup_css.exit_crit_edge ], [ %15, %lor.lhs.false.i.cgroup_css.exit_crit_edge ], [ %15, %if.then.i.cgroup_css.exit_crit_edge ], [ %7, %land.rhs33.cgroup_css.exit_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 20, ptr nonnull %wait) #26
  %16 = call ptr @memset(ptr %4, i32 255, i32 16)
  %17 = ptrtoint ptr %wait to i32
  call void @__asan_store4_noabort(i32 %17)
  store i32 0, ptr %wait, align 4
  %18 = call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i66 = and i32 %18, -16384
  %19 = inttoptr i32 %and.i66 to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %19, i32 0, i32 2
  %20 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %task, align 8
  %22 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %21, ptr %0, align 4
  %23 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr @autoremove_wake_function, ptr %1, align 4
  %24 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %2, ptr %2, align 4
  %25 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %2, ptr %3, align 4
  %tobool42.not = icmp eq ptr %retval.0.i, null
  br i1 %tobool42.not, label %cgroup_css.exit.for.inc_crit_edge, label %lor.lhs.false

cgroup_css.exit.for.inc_crit_edge:                ; preds = %cgroup_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

lor.lhs.false:                                    ; preds = %cgroup_css.exit
  %refcnt = getelementptr inbounds %struct.cgroup_subsys_state, ptr %retval.0.i, i32 0, i32 2
  %26 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %refcnt, align 4
  %and.i67 = and i32 %27, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i67)
  %tobool.i.not = icmp eq i32 %and.i67, 0
  br i1 %tobool.i.not, label %lor.lhs.false.for.inc_crit_edge, label %if.end45

lor.lhs.false.for.inc_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

if.end45:                                         ; preds = %lor.lhs.false
  %flags.i.le = getelementptr inbounds %struct.cgroup_subsys_state, ptr %7, i32 0, i32 7
  %28 = ptrtoint ptr %flags.i.le to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %flags.i.le, align 4
  %and.i.i = and i32 %29, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %land.rhs.i, label %if.end45.if.end27.i_crit_edge

if.end45.if.end27.i_crit_edge:                    ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end27.i

land.rhs.i:                                       ; preds = %if.end45
  %.b38.i = load i1, ptr @cgroup_get_live.__already_done, align 1
  br i1 %.b38.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i68, !prof !636

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end27.i

if.then.i68:                                      ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_get_live.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 615, i32 noundef 9, ptr noundef null) #26
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i68, %land.rhs.i.if.end27.i_crit_edge, %if.end45.if.end27.i_crit_edge
  %30 = ptrtoint ptr %flags.i.le to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %flags.i.le, align 4
  %and.i40.i = and i32 %31, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i40.i)
  %tobool.not.i41.i = icmp eq i32 %and.i40.i, 0
  br i1 %tobool.not.i41.i, label %if.then.i.i, label %if.end27.i.cgroup_get_live.exit_crit_edge

if.end27.i.cgroup_get_live.exit_crit_edge:        ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_get_live.exit

if.then.i.i:                                      ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %7, i32 0, i32 2
  call fastcc void @percpu_ref_get(ptr noundef %refcnt.i.i) #26
  br label %cgroup_get_live.exit

cgroup_get_live.exit:                             ; preds = %if.then.i.i, %if.end27.i.cgroup_get_live.exit_crit_edge
  %offline_waitq = getelementptr inbounds %struct.cgroup, ptr %7, i32 0, i32 31
  call void @prepare_to_wait(ptr noundef %offline_waitq, ptr noundef nonnull %wait, i32 noundef 2) #26
  call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  call void @schedule() #26
  call void @finish_wait(ptr noundef %offline_waitq, ptr noundef nonnull %wait) #26
  %32 = ptrtoint ptr %flags.i.le to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %flags.i.le, align 4
  %and.i.i70 = and i32 %33, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i70)
  %tobool.not.i.i71 = icmp eq i32 %and.i.i70, 0
  br i1 %tobool.not.i.i71, label %if.then.i.i73, label %cgroup_get_live.exit.cleanup_crit_edge

cgroup_get_live.exit.cleanup_crit_edge:           ; preds = %cgroup_get_live.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then.i.i73:                                    ; preds = %cgroup_get_live.exit
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i72 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %7, i32 0, i32 2
  call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i72) #26
  br label %cleanup

cleanup:                                          ; preds = %if.then.i.i73, %cgroup_get_live.exit.cleanup_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %wait) #26
  call void @mutex_lock_nested(ptr noundef nonnull @cgroup_mutex, i32 noundef 0) #26
  %call1 = call ptr @css_next_descendant_post(ptr noundef null, ptr noundef %cgrp)
  %tobool.not80 = icmp eq ptr %call1, null
  br i1 %tobool.not80, label %cleanup.for.end52_crit_edge, label %cleanup.do.body.backedge_crit_edge

cleanup.do.body.backedge_crit_edge:               ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body.backedge

cleanup.for.end52_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end52

for.inc:                                          ; preds = %lor.lhs.false.for.inc_crit_edge, %cgroup_css.exit.for.inc_crit_edge
  call void @llvm.lifetime.end.p0(i64 20, ptr nonnull %wait) #26
  %inc = add nuw nsw i32 %ssid.078, 1
  %exitcond.not = icmp eq i32 %inc, 14
  br i1 %exitcond.not, label %for.inc.for.inc49_crit_edge, label %for.inc.land.rhs33_crit_edge

for.inc.land.rhs33_crit_edge:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs33

for.inc.for.inc49_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc49

for.inc49:                                        ; preds = %for.inc.for.inc49_crit_edge, %if.end.for.inc49_crit_edge
  %call51 = call ptr @css_next_descendant_post(ptr noundef nonnull %d_css.081, ptr noundef %cgrp)
  %tobool.not = icmp eq ptr %call51, null
  br i1 %tobool.not, label %for.inc49.for.end52_crit_edge, label %for.inc49.do.body.backedge_crit_edge

for.inc49.do.body.backedge_crit_edge:             ; preds = %for.inc49
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body.backedge

for.inc49.for.end52_crit_edge:                    ; preds = %for.inc49
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end52

do.body.backedge:                                 ; preds = %for.inc49.do.body.backedge_crit_edge, %cleanup.do.body.backedge_crit_edge
  %d_css.081.be = phi ptr [ %call51, %for.inc49.do.body.backedge_crit_edge ], [ %call1, %cleanup.do.body.backedge_crit_edge ]
  br label %do.body

for.end52:                                        ; preds = %for.inc49.for.end52_crit_edge, %cleanup.for.end52_crit_edge, %entry.for.end52_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @mutex_lock_nested(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @rebind_subsystems(ptr noundef %dst_root, i16 noundef zeroext %ss_mask) local_unnamed_addr #0 align 64 {
entry:
  %__ss_mask = alloca i32, align 4
  %__ss_mask89 = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %cgrp = getelementptr inbounds %struct.cgroup_root, ptr %dst_root, i32 0, i32 3
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 1746, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__ss_mask) #26
  %conv = zext i16 %ss_mask to i32
  %1 = ptrtoint ptr %__ss_mask to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %conv, ptr %__ss_mask, align 4
  %call25 = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask, i32 noundef 14, i32 noundef 0) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %call25)
  %cmp26436 = icmp slt i32 %call25, 14
  br i1 %cmp26436, label %for.body.lr.ph, label %do.end51.critedge.thread

do.end51.critedge.thread:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__ss_mask) #26
  br label %do.body88

for.body.lr.ph:                                   ; preds = %if.end
  %cmp38.not = icmp eq ptr %dst_root, @cgrp_dfl_root
  br label %for.body

for.body:                                         ; preds = %if.end41.for.body_crit_edge, %for.body.lr.ph
  %ssid.0438 = phi i32 [ %call25, %for.body.lr.ph ], [ %call49, %if.end41.for.body_crit_edge ]
  %dfl_disable_ss_mask.0437 = phi i16 [ 0, %for.body.lr.ph ], [ %dfl_disable_ss_mask.1, %if.end41.for.body_crit_edge ]
  %arrayidx = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %ssid.0438
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 4
  %root = getelementptr inbounds %struct.cgroup_subsys, ptr %3, i32 0, i32 22
  %4 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %root, align 4
  %cgrp28 = getelementptr inbounds %struct.cgroup_root, ptr %5, i32 0, i32 3
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %for.body.cgroup_css.exit_crit_edge, label %if.then.i

for.body.cgroup_css.exit_crit_edge:               ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

if.then.i:                                        ; preds = %for.body
  %id.i = getelementptr inbounds %struct.cgroup_subsys, ptr %3, i32 0, i32 19
  %6 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %id.i, align 4
  %arrayidx.i = getelementptr %struct.cgroup_root, ptr %5, i32 0, i32 3, i32 18, i32 %7
  %8 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile ptr, ptr %arrayidx.i, align 4
  %call.i.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool2.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool2.not.i, label %lor.lhs.false.i, label %if.then.i.cgroup_css.exit_crit_edge

if.then.i.cgroup_css.exit_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

lor.lhs.false.i:                                  ; preds = %if.then.i
  %call3.i = call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %land.lhs.true.i, label %lor.lhs.false.i.cgroup_css.exit_crit_edge

lor.lhs.false.i.cgroup_css.exit_crit_edge:        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

land.lhs.true.i:                                  ; preds = %lor.lhs.false.i
  %call5.i = call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %land.lhs.true.i.cgroup_css.exit_crit_edge, label %land.lhs.true7.i

land.lhs.true.i.cgroup_css.exit_crit_edge:        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i
  %.b15.i = load i1, ptr @cgroup_css.__warned, align 1
  br i1 %.b15.i, label %land.lhs.true7.i.cgroup_css.exit_crit_edge, label %if.then9.i

land.lhs.true7.i.cgroup_css.exit_crit_edge:       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

if.then9.i:                                       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_css.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 486, ptr noundef nonnull @.str.22) #26
  br label %cgroup_css.exit

cgroup_css.exit:                                  ; preds = %if.then9.i, %land.lhs.true7.i.cgroup_css.exit_crit_edge, %land.lhs.true.i.cgroup_css.exit_crit_edge, %lor.lhs.false.i.cgroup_css.exit_crit_edge, %if.then.i.cgroup_css.exit_crit_edge, %for.body.cgroup_css.exit_crit_edge
  %retval.0.i = phi ptr [ %9, %if.then9.i ], [ %9, %land.lhs.true7.i.cgroup_css.exit_crit_edge ], [ %9, %land.lhs.true.i.cgroup_css.exit_crit_edge ], [ %9, %lor.lhs.false.i.cgroup_css.exit_crit_edge ], [ %9, %if.then.i.cgroup_css.exit_crit_edge ], [ %cgrp28, %for.body.cgroup_css.exit_crit_edge ]
  %call.i375 = call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i375)
  %tobool.not.i376 = icmp eq i32 %call.i375, 0
  br i1 %tobool.not.i376, label %land.lhs.true.i379, label %cgroup_css.exit.css_next_child.exit_crit_edge

cgroup_css.exit.css_next_child.exit_crit_edge:    ; preds = %cgroup_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit

land.lhs.true.i379:                               ; preds = %cgroup_css.exit
  %call.i.i377 = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i377)
  %tobool2.not.i378 = icmp eq i32 %call.i.i377, 0
  br i1 %tobool2.not.i378, label %land.lhs.true3.i, label %land.lhs.true.i379.css_next_child.exit_crit_edge

land.lhs.true.i379.css_next_child.exit_crit_edge: ; preds = %land.lhs.true.i379
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i379
  %call4.i = call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %land.lhs.true3.i.css_next_child.exit_crit_edge, label %land.lhs.true6.i

land.lhs.true3.i.css_next_child.exit_crit_edge:   ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit

land.lhs.true6.i:                                 ; preds = %land.lhs.true3.i
  %.b87.i = load i1, ptr @css_next_child.__warned, align 1
  br i1 %.b87.i, label %land.lhs.true6.i.css_next_child.exit_crit_edge, label %if.then.i380

land.lhs.true6.i.css_next_child.exit_crit_edge:   ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit

if.then.i380:                                     ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_next_child.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 4316, ptr noundef nonnull @.str.14) #26
  br label %css_next_child.exit

css_next_child.exit:                              ; preds = %if.then.i380, %land.lhs.true6.i.css_next_child.exit_crit_edge, %land.lhs.true3.i.css_next_child.exit_crit_edge, %land.lhs.true.i379.css_next_child.exit_crit_edge, %cgroup_css.exit.css_next_child.exit_crit_edge
  %children.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %retval.0.i, i32 0, i32 4
  %10 = ptrtoint ptr %children.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile ptr, ptr %children.i, align 8
  %next.0.le.i = getelementptr i8, ptr %11, i32 -16
  %cmp72.not.i = icmp eq ptr %11, %children.i
  %tobool31.not433 = icmp eq ptr %next.0.le.i, null
  %tobool31.not = or i1 %cmp72.not.i, %tobool31.not433
  br i1 %tobool31.not, label %css_next_child.exit.if.end33_crit_edge, label %land.lhs.true

css_next_child.exit.if.end33_crit_edge:           ; preds = %css_next_child.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end33

land.lhs.true:                                    ; preds = %css_next_child.exit
  %implicit_on_dfl = getelementptr inbounds %struct.cgroup_subsys, ptr %3, i32 0, i32 18
  %12 = ptrtoint ptr %implicit_on_dfl to i32
  call void @__asan_load1_noabort(i32 %12)
  %bf.load = load i8, ptr %implicit_on_dfl, align 4
  %13 = and i8 %bf.load, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %bf.cast.not = icmp eq i8 %13, 0
  br i1 %bf.cast.not, label %cleanup299.critedge373, label %land.lhs.true.if.end33_crit_edge

land.lhs.true.if.end33_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end33

if.end33:                                         ; preds = %land.lhs.true.if.end33_crit_edge, %css_next_child.exit.if.end33_crit_edge
  %14 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %root, align 4
  %cmp35.not = icmp eq ptr %15, @cgrp_dfl_root
  %or.cond = or i1 %cmp38.not, %cmp35.not
  br i1 %or.cond, label %if.end41, label %cleanup299.critedge

if.end41:                                         ; preds = %if.end33
  %shl = shl nuw nsw i32 1, %ssid.0438
  %16 = trunc i32 %shl to i16
  %conv47 = select i1 %cmp35.not, i16 %16, i16 0
  %dfl_disable_ss_mask.1 = or i16 %conv47, %dfl_disable_ss_mask.0437
  %add = add nsw i32 %ssid.0438, 1
  %call49 = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask, i32 noundef 14, i32 noundef %add) #26
  %cmp26 = icmp slt i32 %call49, 14
  br i1 %cmp26, label %if.end41.for.body_crit_edge, label %do.end51.critedge

if.end41.for.body_crit_edge:                      ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

do.end51.critedge:                                ; preds = %if.end41
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__ss_mask) #26
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %dfl_disable_ss_mask.1)
  %tobool52.not = icmp eq i16 %dfl_disable_ss_mask.1, 0
  br i1 %tobool52.not, label %do.end51.critedge.do.body88_crit_edge, label %if.then53

do.end51.critedge.do.body88_crit_edge:            ; preds = %do.end51.critedge
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body88

if.then53:                                        ; preds = %do.end51.critedge
  %conv54 = zext i16 %dfl_disable_ss_mask.1 to i32
  %neg = xor i32 %conv54, -1
  %17 = load i32, ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 1), align 4
  %and = and i32 %17, %neg
  store i32 %and, ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 1), align 4
  %call56 = call fastcc i32 @cgroup_apply_control(ptr noundef getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 3))
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call56)
  %tobool57.not = icmp eq i32 %call56, 0
  br i1 %tobool57.not, label %if.then53.if.end79_crit_edge, label %do.end73, !prof !636

if.then53.if.end79_crit_edge:                     ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end79

do.end73:                                         ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #28
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 1779, i32 noundef 9, ptr noundef null) #26
  br label %if.end79

if.end79:                                         ; preds = %do.end73, %if.then53.if.end79_crit_edge
  call fastcc void @cgroup_finalize_control(ptr noundef getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 3), i32 noundef 0)
  br label %do.body88

do.body88:                                        ; preds = %if.end79, %do.end51.critedge.do.body88_crit_edge, %do.end51.critedge.thread
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__ss_mask89) #26
  %18 = ptrtoint ptr %__ss_mask89 to i32
  call void @__asan_store4_noabort(i32 %18)
  store i32 %conv, ptr %__ss_mask89, align 4
  %call91 = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask89, i32 noundef 14, i32 noundef 0) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %call91)
  %cmp93444 = icmp slt i32 %call91, 14
  br i1 %cmp93444, label %for.body95.lr.ph, label %do.body88.for.end296_crit_edge

do.body88.for.end296_crit_edge:                   ; preds = %do.body88
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end296

for.body95.lr.ph:                                 ; preds = %do.body88
  %rstat_css_list = getelementptr inbounds %struct.cgroup_root, ptr %dst_root, i32 0, i32 3, i32 25
  %subsys_mask266 = getelementptr inbounds %struct.cgroup_root, ptr %dst_root, i32 0, i32 1
  %cmp268 = icmp eq ptr %dst_root, @cgrp_dfl_root
  %subtree_control = getelementptr inbounds %struct.cgroup_root, ptr %dst_root, i32 0, i32 3, i32 14
  br label %for.body95

for.body95:                                       ; preds = %if.end292.for.body95_crit_edge, %for.body95.lr.ph
  %ssid.1445 = phi i32 [ %call91, %for.body95.lr.ph ], [ %call295, %if.end292.for.body95_crit_edge ]
  %arrayidx96 = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %ssid.1445
  %19 = ptrtoint ptr %arrayidx96 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx96, align 4
  %root97 = getelementptr inbounds %struct.cgroup_subsys, ptr %20, i32 0, i32 22
  %21 = ptrtoint ptr %root97 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %root97, align 4
  %cgrp99 = getelementptr inbounds %struct.cgroup_root, ptr %22, i32 0, i32 3
  %tobool.not.i382 = icmp eq ptr %20, null
  br i1 %tobool.not.i382, label %cgroup_css.exit398.thread, label %if.then.i387

if.then.i387:                                     ; preds = %for.body95
  %id.i383 = getelementptr inbounds %struct.cgroup_subsys, ptr %20, i32 0, i32 19
  %23 = ptrtoint ptr %id.i383 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %id.i383, align 4
  %arrayidx.i384 = getelementptr %struct.cgroup_root, ptr %22, i32 0, i32 3, i32 18, i32 %24
  %25 = ptrtoint ptr %arrayidx.i384 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile ptr, ptr %arrayidx.i384, align 4
  %call.i.i385 = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i385)
  %tobool2.not.i386 = icmp eq i32 %call.i.i385, 0
  br i1 %tobool2.not.i386, label %lor.lhs.false.i390, label %if.then.i387.cgroup_css.exit398_crit_edge

if.then.i387.cgroup_css.exit398_crit_edge:        ; preds = %if.then.i387
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit398

lor.lhs.false.i390:                               ; preds = %if.then.i387
  %call3.i388 = call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i388)
  %tobool4.not.i389 = icmp eq i32 %call3.i388, 0
  br i1 %tobool4.not.i389, label %land.lhs.true.i393, label %lor.lhs.false.i390.cgroup_css.exit398_crit_edge

lor.lhs.false.i390.cgroup_css.exit398_crit_edge:  ; preds = %lor.lhs.false.i390
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit398

land.lhs.true.i393:                               ; preds = %lor.lhs.false.i390
  %call5.i391 = call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i391)
  %tobool6.not.i392 = icmp eq i32 %call5.i391, 0
  br i1 %tobool6.not.i392, label %land.lhs.true.i393.cgroup_css.exit398_crit_edge, label %land.lhs.true7.i395

land.lhs.true.i393.cgroup_css.exit398_crit_edge:  ; preds = %land.lhs.true.i393
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit398

land.lhs.true7.i395:                              ; preds = %land.lhs.true.i393
  %.b15.i394 = load i1, ptr @cgroup_css.__warned, align 1
  br i1 %.b15.i394, label %land.lhs.true7.i395.cgroup_css.exit398_crit_edge, label %if.then9.i396

land.lhs.true7.i395.cgroup_css.exit398_crit_edge: ; preds = %land.lhs.true7.i395
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit398

if.then9.i396:                                    ; preds = %land.lhs.true7.i395
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_css.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 486, ptr noundef nonnull @.str.22) #26
  br label %cgroup_css.exit398

cgroup_css.exit398:                               ; preds = %if.then9.i396, %land.lhs.true7.i395.cgroup_css.exit398_crit_edge, %land.lhs.true.i393.cgroup_css.exit398_crit_edge, %lor.lhs.false.i390.cgroup_css.exit398_crit_edge, %if.then.i387.cgroup_css.exit398_crit_edge
  %tobool102.not = icmp eq ptr %26, null
  br i1 %tobool102.not, label %cgroup_css.exit398.do.end120_crit_edge, label %if.then.i404

cgroup_css.exit398.do.end120_crit_edge:           ; preds = %cgroup_css.exit398
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end120

cgroup_css.exit398.thread:                        ; preds = %for.body95
  %tobool102.not425 = icmp eq ptr %cgrp99, null
  br i1 %tobool102.not425, label %cgroup_css.exit398.thread.do.end120_crit_edge, label %cgroup_css.exit398.thread.cgroup_css.exit415_crit_edge

cgroup_css.exit398.thread.cgroup_css.exit415_crit_edge: ; preds = %cgroup_css.exit398.thread
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit415

cgroup_css.exit398.thread.do.end120_crit_edge:    ; preds = %cgroup_css.exit398.thread
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end120

if.then.i404:                                     ; preds = %cgroup_css.exit398
  %27 = ptrtoint ptr %id.i383 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %id.i383, align 4
  %arrayidx.i401 = getelementptr %struct.cgroup_root, ptr %dst_root, i32 0, i32 3, i32 18, i32 %28
  %29 = ptrtoint ptr %arrayidx.i401 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile ptr, ptr %arrayidx.i401, align 4
  %call.i.i402 = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i402)
  %tobool2.not.i403 = icmp eq i32 %call.i.i402, 0
  br i1 %tobool2.not.i403, label %lor.lhs.false.i407, label %if.then.i404.cgroup_css.exit415_crit_edge

if.then.i404.cgroup_css.exit415_crit_edge:        ; preds = %if.then.i404
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit415

lor.lhs.false.i407:                               ; preds = %if.then.i404
  %call3.i405 = call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i405)
  %tobool4.not.i406 = icmp eq i32 %call3.i405, 0
  br i1 %tobool4.not.i406, label %land.lhs.true.i410, label %lor.lhs.false.i407.cgroup_css.exit415_crit_edge

lor.lhs.false.i407.cgroup_css.exit415_crit_edge:  ; preds = %lor.lhs.false.i407
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit415

land.lhs.true.i410:                               ; preds = %lor.lhs.false.i407
  %call5.i408 = call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i408)
  %tobool6.not.i409 = icmp eq i32 %call5.i408, 0
  br i1 %tobool6.not.i409, label %land.lhs.true.i410.cgroup_css.exit415_crit_edge, label %land.lhs.true7.i412

land.lhs.true.i410.cgroup_css.exit415_crit_edge:  ; preds = %land.lhs.true.i410
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit415

land.lhs.true7.i412:                              ; preds = %land.lhs.true.i410
  %.b15.i411 = load i1, ptr @cgroup_css.__warned, align 1
  br i1 %.b15.i411, label %land.lhs.true7.i412.cgroup_css.exit415_crit_edge, label %if.then9.i413

land.lhs.true7.i412.cgroup_css.exit415_crit_edge: ; preds = %land.lhs.true7.i412
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit415

if.then9.i413:                                    ; preds = %land.lhs.true7.i412
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_css.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 486, ptr noundef nonnull @.str.22) #26
  br label %cgroup_css.exit415

cgroup_css.exit415:                               ; preds = %if.then9.i413, %land.lhs.true7.i412.cgroup_css.exit415_crit_edge, %land.lhs.true.i410.cgroup_css.exit415_crit_edge, %lor.lhs.false.i407.cgroup_css.exit415_crit_edge, %if.then.i404.cgroup_css.exit415_crit_edge, %cgroup_css.exit398.thread.cgroup_css.exit415_crit_edge
  %retval.0.i397427430 = phi ptr [ %26, %if.then9.i413 ], [ %26, %land.lhs.true7.i412.cgroup_css.exit415_crit_edge ], [ %26, %land.lhs.true.i410.cgroup_css.exit415_crit_edge ], [ %26, %lor.lhs.false.i407.cgroup_css.exit415_crit_edge ], [ %26, %if.then.i404.cgroup_css.exit415_crit_edge ], [ %cgrp99, %cgroup_css.exit398.thread.cgroup_css.exit415_crit_edge ]
  %retval.0.i414 = phi ptr [ %30, %if.then9.i413 ], [ %30, %land.lhs.true7.i412.cgroup_css.exit415_crit_edge ], [ %30, %land.lhs.true.i410.cgroup_css.exit415_crit_edge ], [ %30, %lor.lhs.false.i407.cgroup_css.exit415_crit_edge ], [ %30, %if.then.i404.cgroup_css.exit415_crit_edge ], [ %cgrp, %cgroup_css.exit398.thread.cgroup_css.exit415_crit_edge ]
  %tobool104.not = icmp eq ptr %retval.0.i414, null
  br i1 %tobool104.not, label %cgroup_css.exit415.if.end126_crit_edge, label %cgroup_css.exit415.do.end120_crit_edge, !prof !636

cgroup_css.exit415.do.end120_crit_edge:           ; preds = %cgroup_css.exit415
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end120

cgroup_css.exit415.if.end126_crit_edge:           ; preds = %cgroup_css.exit415
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end126

do.end120:                                        ; preds = %cgroup_css.exit415.do.end120_crit_edge, %cgroup_css.exit398.thread.do.end120_crit_edge, %cgroup_css.exit398.do.end120_crit_edge
  %retval.0.i397428 = phi ptr [ null, %cgroup_css.exit398.thread.do.end120_crit_edge ], [ null, %cgroup_css.exit398.do.end120_crit_edge ], [ %retval.0.i397427430, %cgroup_css.exit415.do.end120_crit_edge ]
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 1789, i32 noundef 9, ptr noundef null) #26
  br label %if.end126

if.end126:                                        ; preds = %do.end120, %cgroup_css.exit415.if.end126_crit_edge
  %retval.0.i397426 = phi ptr [ %retval.0.i397428, %do.end120 ], [ %retval.0.i397427430, %cgroup_css.exit415.if.end126_crit_edge ]
  %cmp134.not = icmp eq ptr %22, @cgrp_dfl_root
  br i1 %cmp134.not, label %if.end126.do.body178_crit_edge, label %if.then136

if.end126.do.body178_crit_edge:                   ; preds = %if.end126
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body178

if.then136:                                       ; preds = %if.end126
  %shl137 = shl nuw nsw i32 1, %ssid.1445
  %neg138 = xor i32 %shl137, -1
  %subsys_mask = getelementptr inbounds %struct.cgroup_root, ptr %22, i32 0, i32 1
  %31 = ptrtoint ptr %subsys_mask to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %subsys_mask, align 4
  %and139 = and i32 %32, %neg138
  store i32 %and139, ptr %subsys_mask, align 4
  %call141 = call fastcc i32 @cgroup_apply_control(ptr noundef %cgrp99)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call141)
  %tobool142.not = icmp eq i32 %call141, 0
  br i1 %tobool142.not, label %if.then136.if.end164_crit_edge, label %do.end158, !prof !636

if.then136.if.end164_crit_edge:                   ; preds = %if.then136
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end164

do.end158:                                        ; preds = %if.then136
  call void @__sanitizer_cov_trace_pc() #28
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 1794, i32 noundef 9, ptr noundef null) #26
  br label %if.end164

if.end164:                                        ; preds = %do.end158, %if.then136.if.end164_crit_edge
  call fastcc void @cgroup_finalize_control(ptr noundef %cgrp99, i32 noundef 0)
  br label %do.body178

do.body178:                                       ; preds = %if.end164, %if.end126.do.body178_crit_edge
  %arrayidx179 = getelementptr %struct.cgroup_root, ptr %22, i32 0, i32 3, i32 18, i32 %ssid.1445
  %33 = ptrtoint ptr %arrayidx179 to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr null, ptr %arrayidx179, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !651
  %arrayidx216 = getelementptr %struct.cgroup_root, ptr %dst_root, i32 0, i32 3, i32 18, i32 %ssid.1445
  %34 = ptrtoint ptr %arrayidx216 to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %retval.0.i397426, ptr %arrayidx216, align 4
  %35 = ptrtoint ptr %root97 to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %dst_root, ptr %root97, align 4
  %36 = ptrtoint ptr %retval.0.i397426 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %cgrp, ptr %retval.0.i397426, align 8
  call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %id = getelementptr inbounds %struct.cgroup_subsys, ptr %20, i32 0, i32 19
  br label %for.body236

for.body236:                                      ; preds = %for.inc259.for.body236_crit_edge, %do.body178
  %i.0443 = phi i32 [ 0, %do.body178 ], [ %inc, %for.inc259.for.body236_crit_edge ]
  %arrayidx237 = getelementptr [128 x %struct.hlist_head], ptr @css_set_table, i32 0, i32 %i.0443
  %37 = ptrtoint ptr %arrayidx237 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx237, align 4
  %tobool239.not = icmp eq ptr %38, null
  %add.ptr = getelementptr i8, ptr %38, i32 -232
  %tobool242.not439447 = icmp eq ptr %add.ptr, null
  %tobool242.not439 = or i1 %tobool239.not, %tobool242.not439447
  br i1 %tobool242.not439, label %for.body236.for.inc259_crit_edge, label %for.body236.for.body243_crit_edge

for.body236.for.body243_crit_edge:                ; preds = %for.body236
  br label %for.body243

for.body236.for.inc259_crit_edge:                 ; preds = %for.body236
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc259

for.body243:                                      ; preds = %list_move_tail.exit.for.body243_crit_edge, %for.body236.for.body243_crit_edge
  %cset.1440 = phi ptr [ %add.ptr254, %list_move_tail.exit.for.body243_crit_edge ], [ %add.ptr, %for.body236.for.body243_crit_edge ]
  %39 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %id, align 4
  %arrayidx244 = getelementptr %struct.css_set, ptr %cset.1440, i32 0, i32 9, i32 %40
  %arrayidx246 = getelementptr %struct.cgroup_root, ptr %dst_root, i32 0, i32 3, i32 21, i32 %40
  %call.i.i416 = call zeroext i1 @__list_del_entry_valid(ptr noundef %arrayidx244) #26
  br i1 %call.i.i416, label %if.end.i.i, label %for.body243.__list_del_entry.exit.i_crit_edge

for.body243.__list_del_entry.exit.i_crit_edge:    ; preds = %for.body243
  call void @__sanitizer_cov_trace_pc() #28
  br label %__list_del_entry.exit.i

if.end.i.i:                                       ; preds = %for.body243
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i = getelementptr %struct.css_set, ptr %cset.1440, i32 0, i32 9, i32 %40, i32 1
  %41 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %prev.i.i, align 4
  %43 = ptrtoint ptr %arrayidx244 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %arrayidx244, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %44, i32 0, i32 1
  %45 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store ptr %42, ptr %prev1.i.i.i, align 4
  %46 = ptrtoint ptr %42 to i32
  call void @__asan_store4_noabort(i32 %46)
  store volatile ptr %44, ptr %42, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i, %for.body243.__list_del_entry.exit.i_crit_edge
  %prev.i2.i = getelementptr %struct.cgroup_root, ptr %dst_root, i32 0, i32 3, i32 21, i32 %40, i32 1
  %47 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %prev.i2.i, align 4
  %call.i.i.i = call zeroext i1 @__list_add_valid(ptr noundef %arrayidx244, ptr noundef %48, ptr noundef %arrayidx246) #26
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.list_move_tail.exit_crit_edge

__list_del_entry.exit.i.list_move_tail.exit_crit_edge: ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_move_tail.exit

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  %49 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %arrayidx244, ptr %prev.i2.i, align 4
  %50 = ptrtoint ptr %arrayidx244 to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %arrayidx246, ptr %arrayidx244, align 4
  %prev3.i.i.i = getelementptr %struct.css_set, ptr %cset.1440, i32 0, i32 9, i32 %40, i32 1
  %51 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %48, ptr %prev3.i.i.i, align 4
  %52 = ptrtoint ptr %48 to i32
  call void @__asan_store4_noabort(i32 %52)
  store volatile ptr %arrayidx244, ptr %48, align 4
  br label %list_move_tail.exit

list_move_tail.exit:                              ; preds = %if.end.i.i.i, %__list_del_entry.exit.i.list_move_tail.exit_crit_edge
  %hlist = getelementptr inbounds %struct.css_set, ptr %cset.1440, i32 0, i32 12
  %53 = ptrtoint ptr %hlist to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %hlist, align 4
  %tobool250.not = icmp eq ptr %54, null
  %add.ptr254 = getelementptr i8, ptr %54, i32 -232
  %tobool242.not450 = icmp eq ptr %add.ptr254, null
  %tobool242.not = or i1 %tobool250.not, %tobool242.not450
  br i1 %tobool242.not, label %list_move_tail.exit.for.inc259_crit_edge, label %list_move_tail.exit.for.body243_crit_edge

list_move_tail.exit.for.body243_crit_edge:        ; preds = %list_move_tail.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body243

list_move_tail.exit.for.inc259_crit_edge:         ; preds = %list_move_tail.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc259

for.inc259:                                       ; preds = %list_move_tail.exit.for.inc259_crit_edge, %for.body236.for.inc259_crit_edge
  %inc = add nuw nsw i32 %i.0443, 1
  %exitcond.not = icmp eq i32 %inc, 128
  br i1 %exitcond.not, label %for.end260, label %for.inc259.for.body236_crit_edge

for.inc259.for.body236_crit_edge:                 ; preds = %for.inc259
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body236

for.end260:                                       ; preds = %for.inc259
  call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  %css_rstat_flush = getelementptr inbounds %struct.cgroup_subsys, ptr %20, i32 0, i32 6
  %55 = ptrtoint ptr %css_rstat_flush to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %css_rstat_flush, align 4
  %tobool261.not = icmp eq ptr %56, null
  br i1 %tobool261.not, label %for.end260.if.end264_crit_edge, label %if.then262

for.end260.if.end264_crit_edge:                   ; preds = %for.end260
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end264

if.then262:                                       ; preds = %for.end260
  %rstat_css_node = getelementptr inbounds %struct.cgroup_subsys_state, ptr %retval.0.i397426, i32 0, i32 5
  %call.i.i417 = call zeroext i1 @__list_del_entry_valid(ptr noundef %rstat_css_node) #26
  br i1 %call.i.i417, label %if.end.i.i420, label %if.then262.list_del_rcu.exit_crit_edge

if.then262.list_del_rcu.exit_crit_edge:           ; preds = %if.then262
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del_rcu.exit

if.end.i.i420:                                    ; preds = %if.then262
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i418 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %retval.0.i397426, i32 0, i32 5, i32 1
  %57 = ptrtoint ptr %prev.i.i418 to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %prev.i.i418, align 4
  %59 = ptrtoint ptr %rstat_css_node to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %rstat_css_node, align 4
  %prev1.i.i.i419 = getelementptr inbounds %struct.list_head, ptr %60, i32 0, i32 1
  %61 = ptrtoint ptr %prev1.i.i.i419 to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %58, ptr %prev1.i.i.i419, align 4
  %62 = ptrtoint ptr %58 to i32
  call void @__asan_store4_noabort(i32 %62)
  store volatile ptr %60, ptr %58, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i420, %if.then262.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %retval.0.i397426, i32 0, i32 5, i32 1
  %63 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %64 = ptrtoint ptr %rstat_css_list to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %rstat_css_list, align 4
  %call.i.i422 = call zeroext i1 @__list_add_valid(ptr noundef %rstat_css_node, ptr noundef %rstat_css_list, ptr noundef %65) #26
  br i1 %call.i.i422, label %if.end.i.i423, label %list_del_rcu.exit.if.end264_crit_edge

list_del_rcu.exit.if.end264_crit_edge:            ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end264

if.end.i.i423:                                    ; preds = %list_del_rcu.exit
  call void @__sanitizer_cov_trace_pc() #28
  %66 = ptrtoint ptr %rstat_css_node to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr %65, ptr %rstat_css_node, align 4
  %67 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr %rstat_css_list, ptr %prev.i, align 4
  call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !652
  %68 = ptrtoint ptr %rstat_css_list to i32
  call void @__asan_store4_noabort(i32 %68)
  store volatile ptr %rstat_css_node, ptr %rstat_css_list, align 4
  %prev37.i.i = getelementptr inbounds %struct.list_head, ptr %65, i32 0, i32 1
  %69 = ptrtoint ptr %prev37.i.i to i32
  call void @__asan_store4_noabort(i32 %69)
  store ptr %rstat_css_node, ptr %prev37.i.i, align 4
  br label %if.end264

if.end264:                                        ; preds = %if.end.i.i423, %list_del_rcu.exit.if.end264_crit_edge, %for.end260.if.end264_crit_edge
  %shl265 = shl nuw i32 1, %ssid.1445
  %70 = ptrtoint ptr %subsys_mask266 to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %subsys_mask266, align 4
  %or267 = or i32 %71, %shl265
  store i32 %or267, ptr %subsys_mask266, align 4
  br i1 %cmp268, label %if.then270, label %if.else272

if.then270:                                       ; preds = %if.end264
  call void @__sanitizer_cov_trace_pc() #28
  %arrayidx271 = getelementptr [14 x ptr], ptr @cgroup_subsys_on_dfl_key, i32 0, i32 %ssid.1445
  %72 = ptrtoint ptr %arrayidx271 to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %arrayidx271, align 4
  call void @static_key_enable(ptr noundef %73) #26
  br label %if.end279

if.else272:                                       ; preds = %if.end264
  call void @__sanitizer_cov_trace_pc() #28
  %74 = ptrtoint ptr %subtree_control to i32
  call void @__asan_load2_noabort(i32 %74)
  %75 = load i16, ptr %subtree_control, align 4
  %76 = trunc i32 %shl265 to i16
  %conv276 = or i16 %75, %76
  store i16 %conv276, ptr %subtree_control, align 4
  %arrayidx277 = getelementptr [14 x ptr], ptr @cgroup_subsys_on_dfl_key, i32 0, i32 %ssid.1445
  %77 = ptrtoint ptr %arrayidx277 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %arrayidx277, align 4
  call void @static_key_disable(ptr noundef %78) #26
  br label %if.end279

if.end279:                                        ; preds = %if.else272, %if.then270
  %call280 = call fastcc i32 @cgroup_apply_control(ptr noundef %cgrp)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call280)
  %tobool281.not = icmp eq i32 %call280, 0
  br i1 %tobool281.not, label %if.end279.if.end288_crit_edge, label %do.end285

if.end279.if.end288_crit_edge:                    ; preds = %if.end279
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end288

do.end285:                                        ; preds = %if.end279
  call void @__sanitizer_cov_trace_pc() #28
  %name = getelementptr inbounds %struct.cgroup_subsys, ptr %20, i32 0, i32 20
  %79 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %name, align 4
  %call287 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.8, ptr noundef %80, i32 noundef %call280) #31
  br label %if.end288

if.end288:                                        ; preds = %do.end285, %if.end279.if.end288_crit_edge
  %bind = getelementptr inbounds %struct.cgroup_subsys, ptr %20, i32 0, i32 17
  %81 = ptrtoint ptr %bind to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %bind, align 4
  %tobool289.not = icmp eq ptr %82, null
  br i1 %tobool289.not, label %if.end288.if.end292_crit_edge, label %if.then290

if.end288.if.end292_crit_edge:                    ; preds = %if.end288
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end292

if.then290:                                       ; preds = %if.end288
  call void @__sanitizer_cov_trace_pc() #28
  call void %82(ptr noundef %retval.0.i397426) #26
  br label %if.end292

if.end292:                                        ; preds = %if.then290, %if.end288.if.end292_crit_edge
  %add294 = add i32 %ssid.1445, 1
  %call295 = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask89, i32 noundef 14, i32 noundef %add294) #26
  %cmp93 = icmp slt i32 %call295, 14
  br i1 %cmp93, label %if.end292.for.body95_crit_edge, label %if.end292.for.end296_crit_edge

if.end292.for.end296_crit_edge:                   ; preds = %if.end292
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end296

if.end292.for.body95_crit_edge:                   ; preds = %if.end292
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body95

for.end296:                                       ; preds = %if.end292.for.end296_crit_edge, %do.body88.for.end296_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__ss_mask89) #26
  %kn = getelementptr inbounds %struct.cgroup_root, ptr %dst_root, i32 0, i32 3, i32 11
  %83 = ptrtoint ptr %kn to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %kn, align 8
  call void @kernfs_activate(ptr noundef %84) #26
  br label %cleanup299

cleanup299.critedge:                              ; preds = %if.end33
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__ss_mask) #26
  br label %cleanup299

cleanup299.critedge373:                           ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__ss_mask) #26
  br label %cleanup299

cleanup299:                                       ; preds = %cleanup299.critedge373, %cleanup299.critedge, %for.end296
  %retval.1 = phi i32 [ 0, %for.end296 ], [ -16, %cleanup299.critedge ], [ -16, %cleanup299.critedge373 ]
  ret i32 %retval.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_find_next_bit_be(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @css_next_child(ptr noundef %pos, ptr noundef %parent) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.do.end_crit_edge

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool2.not = icmp eq i32 %call.i, 0
  br i1 %tobool2.not, label %land.lhs.true3, label %land.lhs.true.do.end_crit_edge

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %call4 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %land.lhs.true3.do.end_crit_edge, label %land.lhs.true6

land.lhs.true3.do.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

land.lhs.true6:                                   ; preds = %land.lhs.true3
  %.b87 = load i1, ptr @css_next_child.__warned, align 1
  br i1 %.b87, label %land.lhs.true6.do.end_crit_edge, label %if.then

land.lhs.true6.do.end_crit_edge:                  ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

if.then:                                          ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_next_child.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 4316, ptr noundef nonnull @.str.14) #26
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true6.do.end_crit_edge, %land.lhs.true3.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  %tobool8.not = icmp eq ptr %pos, null
  br i1 %tobool8.not, label %if.then9, label %if.else

if.then9:                                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #28
  %children = getelementptr inbounds %struct.cgroup_subsys_state, ptr %parent, i32 0, i32 4
  br label %if.end69.sink.split

if.else:                                          ; preds = %do.end
  %flags = getelementptr inbounds %struct.cgroup_subsys_state, ptr %pos, i32 0, i32 7
  %0 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags, align 4
  %and = and i32 %1, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool15.not = icmp eq i32 %and, 0
  br i1 %tobool15.not, label %if.then19, label %do.body29, !prof !636

if.then19:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  %sibling = getelementptr inbounds %struct.cgroup_subsys_state, ptr %pos, i32 0, i32 3
  br label %if.end69.sink.split

do.body29:                                        ; preds = %if.else
  %call.i88 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i88)
  %tobool31.not = icmp eq i32 %call.i88, 0
  br i1 %tobool31.not, label %land.lhs.true32, label %do.body29.do.end43_crit_edge

do.body29.do.end43_crit_edge:                     ; preds = %do.body29
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end43

land.lhs.true32:                                  ; preds = %do.body29
  %call33 = tail call i32 @rcu_read_lock_any_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call33)
  %tobool34.not = icmp eq i32 %call33, 0
  br i1 %tobool34.not, label %land.lhs.true35, label %land.lhs.true32.do.end43_crit_edge

land.lhs.true32.do.end43_crit_edge:               ; preds = %land.lhs.true32
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end43

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call36)
  %tobool37.not = icmp eq i32 %call36, 0
  br i1 %tobool37.not, label %land.lhs.true35.do.end43_crit_edge, label %land.lhs.true38

land.lhs.true35.do.end43_crit_edge:               ; preds = %land.lhs.true35
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end43

land.lhs.true38:                                  ; preds = %land.lhs.true35
  %.b8586 = load i1, ptr @css_next_child.__warned.15, align 1
  br i1 %.b8586, label %land.lhs.true38.do.end43_crit_edge, label %if.then40

land.lhs.true38.do.end43_crit_edge:               ; preds = %land.lhs.true38
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end43

if.then40:                                        ; preds = %land.lhs.true38
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_next_child.__warned.15, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 4344, ptr noundef nonnull @.str.16) #26
  br label %do.end43

do.end43:                                         ; preds = %if.then40, %land.lhs.true38.do.end43_crit_edge, %land.lhs.true35.do.end43_crit_edge, %land.lhs.true32.do.end43_crit_edge, %do.body29.do.end43_crit_edge
  %children49 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %parent, i32 0, i32 4
  %serial_nr55 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %pos, i32 0, i32 8
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %do.end43
  %.pn.in = phi ptr [ %children49, %do.end43 ], [ %.pn, %for.body.for.cond_crit_edge ]
  %2 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pn = load volatile ptr, ptr %.pn.in, align 8
  %cmp.not = icmp eq ptr %.pn, %children49
  br i1 %cmp.not, label %for.cond.if.end69_crit_edge, label %for.body

for.cond.if.end69_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end69

for.body:                                         ; preds = %for.cond
  %serial_nr = getelementptr i8, ptr %.pn, i32 32
  %3 = ptrtoint ptr %serial_nr to i32
  call void @__asan_load8_noabort(i32 %3)
  %4 = load i64, ptr %serial_nr, align 8
  %5 = ptrtoint ptr %serial_nr55 to i32
  call void @__asan_load8_noabort(i32 %5)
  %6 = load i64, ptr %serial_nr55, align 8
  %cmp56 = icmp ugt i64 %4, %6
  br i1 %cmp56, label %for.body.if.end69_crit_edge, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.cond

for.body.if.end69_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end69

if.end69.sink.split:                              ; preds = %if.then19, %if.then9
  %sibling.sink = phi ptr [ %sibling, %if.then19 ], [ %children, %if.then9 ]
  %7 = ptrtoint ptr %sibling.sink to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %sibling.sink, align 8
  br label %if.end69

if.end69:                                         ; preds = %if.end69.sink.split, %for.body.if.end69_crit_edge, %for.cond.if.end69_crit_edge
  %.pn.lcssa.sink = phi ptr [ %8, %if.end69.sink.split ], [ %children49, %for.cond.if.end69_crit_edge ], [ %.pn, %for.body.if.end69_crit_edge ]
  %next.0.le = getelementptr i8, ptr %.pn.lcssa.sink, i32 -16
  %children71 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %parent, i32 0, i32 4
  %cmp72.not = icmp eq ptr %.pn.lcssa.sink, %children71
  %.next.1 = select i1 %cmp72.not, ptr null, ptr %next.0.le
  ret ptr %.next.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @cgroup_apply_control(ptr noundef %cgrp) unnamed_addr #0 align 64 {
entry:
  %mgctx.i = alloca %struct.cgroup_mgctx, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @cgroup_propagate_control(ptr noundef %cgrp)
  %call = tail call fastcc i32 @cgroup_apply_control_enable(ptr noundef %cgrp)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %mgctx.i) #26
  %0 = getelementptr inbounds i8, ptr %mgctx.i, i32 52
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 65535, ptr %0, align 4, !annotation !638
  %2 = ptrtoint ptr %mgctx.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %mgctx.i, ptr %mgctx.i, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %mgctx.i, i32 0, i32 1
  %3 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %mgctx.i, ptr %prev.i, align 4
  %preloaded_dst_csets.i = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx.i, i32 0, i32 1
  %4 = ptrtoint ptr %preloaded_dst_csets.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %preloaded_dst_csets.i, ptr %preloaded_dst_csets.i, align 4
  %prev5.i = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx.i, i32 0, i32 1, i32 1
  %5 = ptrtoint ptr %prev5.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %preloaded_dst_csets.i, ptr %prev5.i, align 4
  %tset.i = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx.i, i32 0, i32 2
  %6 = ptrtoint ptr %tset.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %tset.i, ptr %tset.i, align 4
  %prev10.i = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx.i, i32 0, i32 2, i32 0, i32 1
  %7 = ptrtoint ptr %prev10.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %tset.i, ptr %prev10.i, align 4
  %dst_csets.i = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx.i, i32 0, i32 2, i32 1
  %8 = ptrtoint ptr %dst_csets.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %dst_csets.i, ptr %dst_csets.i, align 4
  %prev16.i = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx.i, i32 0, i32 2, i32 1, i32 1
  %9 = ptrtoint ptr %prev16.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %dst_csets.i, ptr %prev16.i, align 4
  %nr_tasks.i = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx.i, i32 0, i32 2, i32 2
  %10 = ptrtoint ptr %nr_tasks.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %nr_tasks.i, align 4
  %ssid.i = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx.i, i32 0, i32 2, i32 3
  %11 = ptrtoint ptr %ssid.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %ssid.i, align 4
  %csets.i = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx.i, i32 0, i32 2, i32 4
  %12 = ptrtoint ptr %csets.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %tset.i, ptr %csets.i, align 4
  %cur_cset.i = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx.i, i32 0, i32 2, i32 5
  %13 = ptrtoint ptr %cur_cset.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %cur_cset.i, align 4
  %cur_task.i = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx.i, i32 0, i32 2, i32 6
  %14 = ptrtoint ptr %cur_task.i to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %cur_task.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %15 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.not.i = icmp eq i32 %15, 0
  br i1 %tobool.not.i, label %if.end.if.end.i_crit_edge, label %land.rhs.i

if.end.if.end.i_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

land.rhs.i:                                       ; preds = %if.end
  %call.i.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !637

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 2946, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %if.end.if.end.i_crit_edge
  call void @percpu_down_write(ptr noundef nonnull @cgroup_threadgroup_rwsem) #26
  call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %call.i174.i = call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i174.i)
  %tobool.not.i.i = icmp eq i32 %call.i174.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %if.end.i.css_next_descendant_pre.exit.i_crit_edge

if.end.i.css_next_descendant_pre.exit.i_crit_edge: ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit.i

land.lhs.true.i.i:                                ; preds = %if.end.i
  %call.i.i.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool2.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true3.i.i, label %land.lhs.true.i.i.css_next_descendant_pre.exit.i_crit_edge

land.lhs.true.i.i.css_next_descendant_pre.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit.i

land.lhs.true3.i.i:                               ; preds = %land.lhs.true.i.i
  %call4.i.i = call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true3.i.i.css_next_descendant_pre.exit.i_crit_edge, label %land.lhs.true6.i.i

land.lhs.true3.i.i.css_next_descendant_pre.exit.i_crit_edge: ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit.i

land.lhs.true6.i.i:                               ; preds = %land.lhs.true3.i.i
  %.b29.i.i = load i1, ptr @css_next_descendant_pre.__warned, align 1
  br i1 %.b29.i.i, label %land.lhs.true6.i.i.css_next_descendant_pre.exit.i_crit_edge, label %if.then.i.i

land.lhs.true6.i.i.css_next_descendant_pre.exit.i_crit_edge: ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_next_descendant_pre.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 4385, ptr noundef nonnull @.str.14) #26
  br label %css_next_descendant_pre.exit.i

css_next_descendant_pre.exit.i:                   ; preds = %if.then.i.i, %land.lhs.true6.i.i.css_next_descendant_pre.exit.i_crit_edge, %land.lhs.true3.i.i.css_next_descendant_pre.exit.i_crit_edge, %land.lhs.true.i.i.css_next_descendant_pre.exit.i_crit_edge, %if.end.i.css_next_descendant_pre.exit.i_crit_edge
  %tobool46.not180.i = icmp eq ptr %cgrp, null
  br i1 %tobool46.not180.i, label %css_next_descendant_pre.exit.i.for.end108.i_crit_edge, label %css_next_descendant_pre.exit.i.do.body47.i_crit_edge

css_next_descendant_pre.exit.i.do.body47.i_crit_edge: ; preds = %css_next_descendant_pre.exit.i
  br label %do.body47.i

css_next_descendant_pre.exit.i.for.end108.i_crit_edge: ; preds = %css_next_descendant_pre.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end108.i

do.body47.i:                                      ; preds = %for.inc105.i.do.body47.i_crit_edge, %css_next_descendant_pre.exit.i.do.body47.i_crit_edge
  %d_css.0181.i = phi ptr [ %call107.i, %for.inc105.i.do.body47.i_crit_edge ], [ %cgrp, %css_next_descendant_pre.exit.i.do.body47.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %16 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool49.not.i = icmp eq i32 %16, 0
  br i1 %tobool49.not.i, label %do.body47.i.if.end77.i_crit_edge, label %land.rhs50.i

do.body47.i.if.end77.i_crit_edge:                 ; preds = %do.body47.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end77.i

land.rhs50.i:                                     ; preds = %do.body47.i
  %call.i175.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i175.i)
  %cmp52.not.i = icmp eq i32 %call.i175.i, 0
  br i1 %cmp52.not.i, label %do.end71.i, label %land.rhs50.i.if.end77.i_crit_edge, !prof !637

land.rhs50.i.if.end77.i_crit_edge:                ; preds = %land.rhs50.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end77.i

do.end71.i:                                       ; preds = %land.rhs50.i
  call void @__sanitizer_cov_trace_pc() #28
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 2952, i32 noundef 9, ptr noundef null) #26
  br label %if.end77.i

if.end77.i:                                       ; preds = %do.end71.i, %land.rhs50.i.if.end77.i_crit_edge, %do.body47.i.if.end77.i_crit_edge
  %17 = ptrtoint ptr %d_css.0181.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %d_css.0181.i, align 8
  %flags.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %18, i32 0, i32 7
  %19 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %20, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i176.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i176.i, label %if.end77.i.for.inc105.i_crit_edge, label %if.else.i

if.end77.i.for.inc105.i_crit_edge:                ; preds = %if.end77.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc105.i

if.else.i:                                        ; preds = %if.end77.i
  %cset_links.i = getelementptr inbounds %struct.cgroup, ptr %18, i32 0, i32 20
  %21 = ptrtoint ptr %cset_links.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %.pn172177.i = load ptr, ptr %cset_links.i, align 4
  %cmp95.not178.i = icmp eq ptr %.pn172177.i, %cset_links.i
  br i1 %cmp95.not178.i, label %if.else.i.for.inc105.i_crit_edge, label %if.else.i.for.body98.i_crit_edge

if.else.i.for.body98.i_crit_edge:                 ; preds = %if.else.i
  br label %for.body98.i

if.else.i.for.inc105.i_crit_edge:                 ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc105.i

for.body98.i:                                     ; preds = %for.body98.i.for.body98.i_crit_edge, %if.else.i.for.body98.i_crit_edge
  %.pn172179.i = phi ptr [ %.pn172.i, %for.body98.i.for.body98.i_crit_edge ], [ %.pn172177.i, %if.else.i.for.body98.i_crit_edge ]
  %cset.i = getelementptr i8, ptr %.pn172179.i, i32 -4
  %22 = ptrtoint ptr %cset.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %cset.i, align 4
  call void @cgroup_migrate_add_src(ptr noundef %23, ptr noundef %18, ptr noundef nonnull %mgctx.i) #26
  %24 = ptrtoint ptr %.pn172179.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %.pn172.i = load ptr, ptr %.pn172179.i, align 4
  %cmp95.not.i = icmp eq ptr %.pn172.i, %cset_links.i
  br i1 %cmp95.not.i, label %for.body98.i.for.inc105.i_crit_edge, label %for.body98.i.for.body98.i_crit_edge

for.body98.i.for.body98.i_crit_edge:              ; preds = %for.body98.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body98.i

for.body98.i.for.inc105.i_crit_edge:              ; preds = %for.body98.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc105.i

for.inc105.i:                                     ; preds = %for.body98.i.for.inc105.i_crit_edge, %if.else.i.for.inc105.i_crit_edge, %if.end77.i.for.inc105.i_crit_edge
  %call107.i = call ptr @css_next_descendant_pre(ptr noundef nonnull %d_css.0181.i, ptr noundef nonnull %cgrp) #26
  %tobool46.not.i = icmp eq ptr %call107.i, null
  br i1 %tobool46.not.i, label %for.inc105.i.for.end108.i_crit_edge, label %for.inc105.i.do.body47.i_crit_edge

for.inc105.i.do.body47.i_crit_edge:               ; preds = %for.inc105.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body47.i

for.inc105.i.for.end108.i_crit_edge:              ; preds = %for.inc105.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end108.i

for.end108.i:                                     ; preds = %for.inc105.i.for.end108.i_crit_edge, %css_next_descendant_pre.exit.i.for.end108.i_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  %call109.i = call i32 @cgroup_migrate_prepare_dst(ptr noundef nonnull %mgctx.i) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call109.i)
  %tobool110.not.i = icmp eq i32 %call109.i, 0
  br i1 %tobool110.not.i, label %if.end112.i, label %for.end108.i.cgroup_update_dfl_csses.exit_crit_edge

for.end108.i.cgroup_update_dfl_csses.exit_crit_edge: ; preds = %for.end108.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_update_dfl_csses.exit

if.end112.i:                                      ; preds = %for.end108.i
  call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %25 = ptrtoint ptr %mgctx.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %.pn184.i = load ptr, ptr %mgctx.i, align 4
  %cmp120.not185.i = icmp eq ptr %.pn184.i, %mgctx.i
  br i1 %cmp120.not185.i, label %if.end112.i.for.end152.i_crit_edge, label %if.end112.i.for.body123.i_crit_edge

if.end112.i.for.body123.i_crit_edge:              ; preds = %if.end112.i
  br label %for.body123.i

if.end112.i.for.end152.i_crit_edge:               ; preds = %if.end112.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end152.i

for.cond118.loopexit.i:                           ; preds = %for.body138.i.for.cond118.loopexit.i_crit_edge, %for.body123.i.for.cond118.loopexit.i_crit_edge
  %26 = ptrtoint ptr %.pn186.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %.pn.i = load ptr, ptr %.pn186.i, align 4
  %cmp120.not.i = icmp eq ptr %.pn.i, %mgctx.i
  br i1 %cmp120.not.i, label %for.cond118.loopexit.i.for.end152.i_crit_edge, label %for.cond118.loopexit.i.for.body123.i_crit_edge

for.cond118.loopexit.i.for.body123.i_crit_edge:   ; preds = %for.cond118.loopexit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body123.i

for.cond118.loopexit.i.for.end152.i_crit_edge:    ; preds = %for.cond118.loopexit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end152.i

for.body123.i:                                    ; preds = %for.cond118.loopexit.i.for.body123.i_crit_edge, %if.end112.i.for.body123.i_crit_edge
  %.pn186.i = phi ptr [ %.pn.i, %for.cond118.loopexit.i.for.body123.i_crit_edge ], [ %.pn184.i, %if.end112.i.for.body123.i_crit_edge ]
  %tasks.i = getelementptr i8, ptr %.pn186.i, i32 -176
  %27 = ptrtoint ptr %tasks.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %tasks.i, align 4
  %cmp135.not182.i = icmp eq ptr %28, %tasks.i
  br i1 %cmp135.not182.i, label %for.body123.i.for.cond118.loopexit.i_crit_edge, label %for.body123.i.for.body138.i_crit_edge

for.body123.i.for.body138.i_crit_edge:            ; preds = %for.body123.i
  br label %for.body138.i

for.body123.i.for.cond118.loopexit.i_crit_edge:   ; preds = %for.body123.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.cond118.loopexit.i

for.body138.i:                                    ; preds = %for.body138.i.for.body138.i_crit_edge, %for.body123.i.for.body138.i_crit_edge
  %.pn171.in183.i = phi ptr [ %.pn171.i, %for.body138.i.for.body138.i_crit_edge ], [ %28, %for.body123.i.for.body138.i_crit_edge ]
  %task.0.i = getelementptr i8, ptr %.pn171.in183.i, i32 -4468
  %29 = ptrtoint ptr %.pn171.in183.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %.pn171.i = load ptr, ptr %.pn171.in183.i, align 4
  call fastcc void @cgroup_migrate_add_task(ptr noundef %task.0.i, ptr noundef nonnull %mgctx.i) #26
  %cmp135.not.i = icmp eq ptr %.pn171.i, %tasks.i
  br i1 %cmp135.not.i, label %for.body138.i.for.cond118.loopexit.i_crit_edge, label %for.body138.i.for.body138.i_crit_edge

for.body138.i.for.body138.i_crit_edge:            ; preds = %for.body138.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body138.i

for.body138.i.for.cond118.loopexit.i_crit_edge:   ; preds = %for.body138.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.cond118.loopexit.i

for.end152.i:                                     ; preds = %for.cond118.loopexit.i.for.end152.i_crit_edge, %if.end112.i.for.end152.i_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  %call153.i = call fastcc i32 @cgroup_migrate_execute(ptr noundef nonnull %mgctx.i) #26
  br label %cgroup_update_dfl_csses.exit

cgroup_update_dfl_csses.exit:                     ; preds = %for.end152.i, %for.end108.i.cgroup_update_dfl_csses.exit_crit_edge
  %ret.0.i = phi i32 [ %call109.i, %for.end108.i.cgroup_update_dfl_csses.exit_crit_edge ], [ %call153.i, %for.end152.i ]
  call void @cgroup_migrate_finish(ptr noundef nonnull %mgctx.i) #26
  call void @percpu_up_write(ptr noundef nonnull @cgroup_threadgroup_rwsem) #26
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %mgctx.i) #26
  br label %cleanup

cleanup:                                          ; preds = %cgroup_update_dfl_csses.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call, %entry.cleanup_crit_edge ], [ %ret.0.i, %cgroup_update_dfl_csses.exit ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cgroup_finalize_control(ptr noundef %cgrp, i32 noundef %ret) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret)
  %tobool.not = icmp eq i32 %ret, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.then:                                          ; preds = %entry
  %call1.i = tail call ptr @css_next_descendant_post(ptr noundef null, ptr noundef %cgrp) #26
  %tobool.not44.i = icmp eq ptr %call1.i, null
  br i1 %tobool.not44.i, label %if.then.cgroup_restore_control.exit_crit_edge, label %if.then.do.body.i_crit_edge

if.then.do.body.i_crit_edge:                      ; preds = %if.then
  br label %do.body.i

if.then.cgroup_restore_control.exit_crit_edge:    ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_restore_control.exit

do.body.i:                                        ; preds = %for.inc.i.do.body.i_crit_edge, %if.then.do.body.i_crit_edge
  %d_css.045.i = phi ptr [ %call33.i, %for.inc.i.do.body.i_crit_edge ], [ %call1.i, %if.then.do.body.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool2.not.i = icmp eq i32 %0, 0
  br i1 %tobool2.not.i, label %do.body.i.if.end.i_crit_edge, label %land.rhs.i

do.body.i.if.end.i_crit_edge:                     ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

land.rhs.i:                                       ; preds = %do.body.i
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !637

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 3077, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %do.body.i.if.end.i_crit_edge
  %1 = ptrtoint ptr %d_css.045.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %d_css.045.i, align 8
  %flags.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %2, i32 0, i32 7
  %3 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.end.i.for.inc.i_crit_edge, label %if.else.i

if.end.i.for.inc.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.i

if.else.i:                                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  %old_subtree_control.i = getelementptr inbounds %struct.cgroup, ptr %2, i32 0, i32 16
  %5 = ptrtoint ptr %old_subtree_control.i to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %old_subtree_control.i, align 8
  %subtree_control.i = getelementptr inbounds %struct.cgroup, ptr %2, i32 0, i32 14
  %7 = ptrtoint ptr %subtree_control.i to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %6, ptr %subtree_control.i, align 4
  %old_subtree_ss_mask.i = getelementptr inbounds %struct.cgroup, ptr %2, i32 0, i32 17
  %8 = ptrtoint ptr %old_subtree_ss_mask.i to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %old_subtree_ss_mask.i, align 2
  %subtree_ss_mask.i = getelementptr inbounds %struct.cgroup, ptr %2, i32 0, i32 15
  %10 = ptrtoint ptr %subtree_ss_mask.i to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %9, ptr %subtree_ss_mask.i, align 2
  %old_dom_cgrp.i = getelementptr inbounds %struct.cgroup, ptr %2, i32 0, i32 23
  %11 = ptrtoint ptr %old_dom_cgrp.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %old_dom_cgrp.i, align 4
  %dom_cgrp.i = getelementptr inbounds %struct.cgroup, ptr %2, i32 0, i32 22
  %13 = ptrtoint ptr %dom_cgrp.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %12, ptr %dom_cgrp.i, align 8
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.else.i, %if.end.i.for.inc.i_crit_edge
  %call33.i = tail call ptr @css_next_descendant_post(ptr noundef nonnull %d_css.045.i, ptr noundef %cgrp) #26
  %tobool.not.i = icmp eq ptr %call33.i, null
  br i1 %tobool.not.i, label %for.inc.i.cgroup_restore_control.exit_crit_edge, label %for.inc.i.do.body.i_crit_edge

for.inc.i.do.body.i_crit_edge:                    ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body.i

for.inc.i.cgroup_restore_control.exit_crit_edge:  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_restore_control.exit

cgroup_restore_control.exit:                      ; preds = %for.inc.i.cgroup_restore_control.exit_crit_edge, %if.then.cgroup_restore_control.exit_crit_edge
  tail call fastcc void @cgroup_propagate_control(ptr noundef %cgrp)
  br label %if.end

if.end:                                           ; preds = %cgroup_restore_control.exit, %entry.if.end_crit_edge
  %call1.i3 = tail call ptr @css_next_descendant_post(ptr noundef null, ptr noundef %cgrp) #26
  %tobool.not151.i = icmp eq ptr %call1.i3, null
  br i1 %tobool.not151.i, label %if.end.cgroup_apply_control_disable.exit_crit_edge, label %if.end.do.body.i5_crit_edge

if.end.do.body.i5_crit_edge:                      ; preds = %if.end
  br label %do.body.i5

if.end.cgroup_apply_control_disable.exit_crit_edge: ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_apply_control_disable.exit

do.body.i5:                                       ; preds = %for.inc108.i.do.body.i5_crit_edge, %if.end.do.body.i5_crit_edge
  %d_css.0152.i = phi ptr [ %call110.i, %for.inc108.i.do.body.i5_crit_edge ], [ %call1.i3, %if.end.do.body.i5_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %14 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %14)
  %tobool2.not.i4 = icmp eq i32 %14, 0
  br i1 %tobool2.not.i4, label %do.body.i5.if.end.i13_crit_edge, label %land.rhs.i8

do.body.i5.if.end.i13_crit_edge:                  ; preds = %do.body.i5
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i13

land.rhs.i8:                                      ; preds = %do.body.i5
  %call.i.i6 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i6)
  %cmp.not.i7 = icmp eq i32 %call.i.i6, 0
  br i1 %cmp.not.i7, label %do.end.i9, label %land.rhs.i8.if.end.i13_crit_edge, !prof !637

land.rhs.i8.if.end.i13_crit_edge:                 ; preds = %land.rhs.i8
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i13

do.end.i9:                                        ; preds = %land.rhs.i8
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 3162, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i13

if.end.i13:                                       ; preds = %do.end.i9, %land.rhs.i8.if.end.i13_crit_edge, %do.body.i5.if.end.i13_crit_edge
  %15 = ptrtoint ptr %d_css.0152.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %d_css.0152.i, align 8
  %flags.i.i10 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %16, i32 0, i32 7
  %17 = ptrtoint ptr %flags.i.i10 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %flags.i.i10, align 4
  %and.i.i11 = and i32 %18, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i11)
  %tobool.not.i.i12 = icmp eq i32 %and.i.i11, 0
  br i1 %tobool.not.i.i12, label %if.end.i13.for.inc108.i_crit_edge, label %for.cond31.preheader.i

if.end.i13.for.inc108.i_crit_edge:                ; preds = %if.end.i13
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc108.i

for.cond31.preheader.i:                           ; preds = %if.end.i13
  %parent.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %16, i32 0, i32 12
  %dom_cgrp.i.i.i = getelementptr inbounds %struct.cgroup, ptr %16, i32 0, i32 22
  %root.i.i = getelementptr inbounds %struct.cgroup, ptr %16, i32 0, i32 19
  br label %land.rhs33.i

land.rhs33.i:                                     ; preds = %cleanup.i.land.rhs33.i_crit_edge, %for.cond31.preheader.i
  %ssid.0150.i = phi i32 [ 0, %for.cond31.preheader.i ], [ %inc.i, %cleanup.i.land.rhs33.i_crit_edge ]
  %arrayidx.i = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %ssid.0150.i
  %19 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx.i, align 4
  %tobool.not.i132.i = icmp eq ptr %20, null
  br i1 %tobool.not.i132.i, label %land.rhs33.i.cgroup_css.exit.i_crit_edge, label %if.then.i.i

land.rhs33.i.cgroup_css.exit.i_crit_edge:         ; preds = %land.rhs33.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i

if.then.i.i:                                      ; preds = %land.rhs33.i
  %id.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %20, i32 0, i32 19
  %21 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %id.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.cgroup, ptr %16, i32 0, i32 18, i32 %22
  %23 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile ptr, ptr %arrayidx.i.i, align 4
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool2.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i, label %if.then.i.i.cgroup_css.exit.i_crit_edge

if.then.i.i.cgroup_css.exit.i_crit_edge:          ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i

lor.lhs.false.i.i:                                ; preds = %if.then.i.i
  %call3.i.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i.i)
  %tobool4.not.i.i = icmp eq i32 %call3.i.i, 0
  br i1 %tobool4.not.i.i, label %land.lhs.true.i.i, label %lor.lhs.false.i.i.cgroup_css.exit.i_crit_edge

lor.lhs.false.i.i.cgroup_css.exit.i_crit_edge:    ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i

land.lhs.true.i.i:                                ; preds = %lor.lhs.false.i.i
  %call5.i.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i.i)
  %tobool6.not.i.i = icmp eq i32 %call5.i.i, 0
  br i1 %tobool6.not.i.i, label %land.lhs.true.i.i.cgroup_css.exit.i_crit_edge, label %land.lhs.true7.i.i

land.lhs.true.i.i.cgroup_css.exit.i_crit_edge:    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i

land.lhs.true7.i.i:                               ; preds = %land.lhs.true.i.i
  %.b15.i.i = load i1, ptr @cgroup_css.__warned, align 1
  br i1 %.b15.i.i, label %land.lhs.true7.i.i.cgroup_css.exit.i_crit_edge, label %if.then9.i.i

land.lhs.true7.i.i.cgroup_css.exit.i_crit_edge:   ; preds = %land.lhs.true7.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i

if.then9.i.i:                                     ; preds = %land.lhs.true7.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_css.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 486, ptr noundef nonnull @.str.22) #26
  br label %cgroup_css.exit.i

cgroup_css.exit.i:                                ; preds = %if.then9.i.i, %land.lhs.true7.i.i.cgroup_css.exit.i_crit_edge, %land.lhs.true.i.i.cgroup_css.exit.i_crit_edge, %lor.lhs.false.i.i.cgroup_css.exit.i_crit_edge, %if.then.i.i.cgroup_css.exit.i_crit_edge, %land.rhs33.i.cgroup_css.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %24, %if.then9.i.i ], [ %24, %land.lhs.true7.i.i.cgroup_css.exit.i_crit_edge ], [ %24, %land.lhs.true.i.i.cgroup_css.exit.i_crit_edge ], [ %24, %lor.lhs.false.i.i.cgroup_css.exit.i_crit_edge ], [ %24, %if.then.i.i.cgroup_css.exit.i_crit_edge ], [ %16, %land.rhs33.i.cgroup_css.exit.i_crit_edge ]
  %tobool38.not.i = icmp eq ptr %retval.0.i.i, null
  br i1 %tobool38.not.i, label %cgroup_css.exit.i.cleanup.i_crit_edge, label %if.end40.i

cgroup_css.exit.i.cleanup.i_crit_edge:            ; preds = %cgroup_css.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup.i

if.end40.i:                                       ; preds = %cgroup_css.exit.i
  %refcnt.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %retval.0.i.i, i32 0, i32 2
  %25 = ptrtoint ptr %refcnt.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %refcnt.i, align 4
  %and.i133.i = and i32 %26, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i133.i)
  %tobool.i.not.i = icmp eq i32 %and.i133.i, 0
  br i1 %tobool.i.not.i, label %if.end40.i.if.end86.i_crit_edge, label %land.rhs48.i

if.end40.i.if.end86.i_crit_edge:                  ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end86.i

land.rhs48.i:                                     ; preds = %if.end40.i
  %.b131.i = load i1, ptr @cgroup_apply_control_disable.__already_done, align 1
  br i1 %.b131.i, label %land.rhs48.i.if.end86.i_crit_edge, label %if.then59.i, !prof !636

land.rhs48.i.if.end86.i_crit_edge:                ; preds = %land.rhs48.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end86.i

if.then59.i:                                      ; preds = %land.rhs48.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_apply_control_disable.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 3169, i32 noundef 9, ptr noundef null) #26
  br label %if.end86.i

if.end86.i:                                       ; preds = %if.then59.i, %land.rhs48.i.if.end86.i_crit_edge, %if.end40.i.if.end86.i_crit_edge
  %parent.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %retval.0.i.i, i32 0, i32 12
  %27 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %parent.i, align 8
  %tobool94.not.i = icmp eq ptr %28, null
  br i1 %tobool94.not.i, label %if.end86.i.if.else98.i_crit_edge, label %land.lhs.true.i

if.end86.i.if.else98.i_crit_edge:                 ; preds = %if.end86.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.else98.i

land.lhs.true.i:                                  ; preds = %if.end86.i
  %29 = ptrtoint ptr %parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %parent.i.i.i, align 8
  %tobool.not.i134.i = icmp eq ptr %30, null
  br i1 %tobool.not.i134.i, label %if.end5.i.i, label %if.then.i135.i

if.then.i135.i:                                   ; preds = %land.lhs.true.i
  %subtree_ss_mask.i.i = getelementptr inbounds %struct.cgroup, ptr %30, i32 0, i32 15
  %31 = ptrtoint ptr %subtree_ss_mask.i.i to i32
  call void @__asan_load2_noabort(i32 %31)
  %32 = load i16, ptr %subtree_ss_mask.i.i, align 2
  %33 = ptrtoint ptr %dom_cgrp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %dom_cgrp.i.i.i, align 8
  %cmp.i.not.i.i = icmp eq ptr %34, %16
  br i1 %cmp.i.not.i.i, label %if.then.i135.i.cgroup_ss_mask.exit.i_crit_edge, label %if.then2.i.i

if.then.i135.i.cgroup_ss_mask.exit.i_crit_edge:   ; preds = %if.then.i135.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_ss_mask.exit.i

if.then2.i.i:                                     ; preds = %if.then.i135.i
  call void @__sanitizer_cov_trace_pc() #28
  %35 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %and11.i.i = and i16 %35, %32
  br label %cgroup_ss_mask.exit.i

if.end5.i.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  %36 = ptrtoint ptr %root.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %root.i.i, align 4
  %subsys_mask.i.i = getelementptr inbounds %struct.cgroup_root, ptr %37, i32 0, i32 1
  %38 = ptrtoint ptr %subsys_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %subsys_mask.i.i, align 4
  %conv6.i.i = trunc i32 %39 to i16
  br label %cgroup_ss_mask.exit.i

cgroup_ss_mask.exit.i:                            ; preds = %if.end5.i.i, %if.then2.i.i, %if.then.i135.i.cgroup_ss_mask.exit.i_crit_edge
  %retval.0.i136.i = phi i16 [ %conv6.i.i, %if.end5.i.i ], [ %and11.i.i, %if.then2.i.i ], [ %32, %if.then.i135.i.cgroup_ss_mask.exit.i_crit_edge ]
  %conv.i = zext i16 %retval.0.i136.i to i32
  %id.i = getelementptr inbounds %struct.cgroup_subsys, ptr %20, i32 0, i32 19
  %40 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %id.i, align 4
  %shl.i = shl nuw i32 1, %41
  %and.i = and i32 %shl.i, %conv.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool96.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool96.not.i, label %if.then97.i, label %cgroup_ss_mask.exit.i.if.else98.i_crit_edge

cgroup_ss_mask.exit.i.if.else98.i_crit_edge:      ; preds = %cgroup_ss_mask.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.else98.i

if.then97.i:                                      ; preds = %cgroup_ss_mask.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call fastcc void @kill_css(ptr noundef nonnull %retval.0.i.i) #26
  br label %cleanup.i

if.else98.i:                                      ; preds = %cgroup_ss_mask.exit.i.if.else98.i_crit_edge, %if.end86.i.if.else98.i_crit_edge
  %ss1.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %retval.0.i.i, i32 0, i32 1
  %42 = ptrtoint ptr %ss1.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %ss1.i.i, align 4
  %44 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %retval.0.i.i, align 8
  %parent.i.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %45, i32 0, i32 12
  %46 = ptrtoint ptr %parent.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %parent.i.i.i.i, align 8
  %root.i.i.i = getelementptr inbounds %struct.cgroup, ptr %45, i32 0, i32 19
  %48 = ptrtoint ptr %root.i.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %root.i.i.i, align 4
  %subsys_mask.i.i.i = getelementptr inbounds %struct.cgroup_root, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %subsys_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load i32, ptr %subsys_mask.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %47, null
  br i1 %tobool.not.i.i.i, label %if.end6.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.else98.i
  %subtree_control.i.i.i = getelementptr inbounds %struct.cgroup, ptr %47, i32 0, i32 14
  %52 = ptrtoint ptr %subtree_control.i.i.i to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %subtree_control.i.i.i, align 4
  %dom_cgrp.i.i.i.i = getelementptr inbounds %struct.cgroup, ptr %45, i32 0, i32 22
  %54 = ptrtoint ptr %dom_cgrp.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %dom_cgrp.i.i.i.i, align 8
  %cmp.i.not.i.i.i = icmp eq ptr %55, %45
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i.i.cgroup_control.exit.i.i_crit_edge, label %if.then2.i.i.i

if.then.i.i.i.cgroup_control.exit.i.i_crit_edge:  ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_control.exit.i.i

if.then2.i.i.i:                                   ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %56 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %and23.i.i.i = and i16 %56, %53
  br label %cgroup_control.exit.i.i

if.end6.i.i.i:                                    ; preds = %if.else98.i
  %cmp.i24.i.i.i = icmp eq ptr %49, @cgrp_dfl_root
  br i1 %cmp.i24.i.i.i, label %if.then8.i.i.i, label %if.end6.i.i.i.cgroup_control.exit.thread.i.i_crit_edge

if.end6.i.i.i.cgroup_control.exit.thread.i.i_crit_edge: ; preds = %if.end6.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_control.exit.thread.i.i

if.then8.i.i.i:                                   ; preds = %if.end6.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %57 = load i16, ptr @cgrp_dfl_inhibit_ss_mask, align 2
  %58 = load i16, ptr @cgrp_dfl_implicit_ss_mask, align 2
  %or22.i.i.i = or i16 %58, %57
  %or.i.i.i = zext i16 %or22.i.i.i to i32
  %neg.i.i.i = xor i32 %or.i.i.i, -1
  %and12.i.i.i = and i32 %51, %neg.i.i.i
  br label %cgroup_control.exit.thread.i.i

cgroup_control.exit.i.i:                          ; preds = %if.then2.i.i.i, %if.then.i.i.i.cgroup_control.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i16 [ %and23.i.i.i, %if.then2.i.i.i ], [ %53, %if.then.i.i.i.cgroup_control.exit.i.i_crit_edge ]
  %conv.i.i = zext i16 %retval.0.i.i.i to i32
  %id.i137.i = getelementptr inbounds %struct.cgroup_subsys, ptr %43, i32 0, i32 19
  %59 = ptrtoint ptr %id.i137.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %id.i137.i, align 4
  %shl.i.i = shl nuw i32 1, %60
  %and.i138.i = and i32 %shl.i.i, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i138.i)
  %tobool.not.i139.i = icmp eq i32 %and.i138.i, 0
  br i1 %tobool.not.i139.i, label %if.then.i23.critedge.i.i, label %cgroup_control.exit.i.i.cleanup.i_crit_edge

cgroup_control.exit.i.i.cleanup.i_crit_edge:      ; preds = %cgroup_control.exit.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup.i

cgroup_control.exit.thread.i.i:                   ; preds = %if.then8.i.i.i, %if.end6.i.i.i.cgroup_control.exit.thread.i.i_crit_edge
  %root_ss_mask.0.in.i.i.i = phi i32 [ %and12.i.i.i, %if.then8.i.i.i ], [ %51, %if.end6.i.i.i.cgroup_control.exit.thread.i.i_crit_edge ]
  %conv30.i.i = and i32 %root_ss_mask.0.in.i.i.i, 65535
  %id31.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %43, i32 0, i32 19
  %61 = ptrtoint ptr %id31.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %id31.i.i, align 4
  %shl32.i.i = shl nuw i32 1, %62
  %and33.i.i = and i32 %conv30.i.i, %shl32.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and33.i.i)
  %tobool.not34.i.i = icmp eq i32 %and33.i.i, 0
  br i1 %tobool.not34.i.i, label %if.end5.i.i.i, label %cgroup_control.exit.thread.i.i.cleanup.i_crit_edge

cgroup_control.exit.thread.i.i.cleanup.i_crit_edge: ; preds = %cgroup_control.exit.thread.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup.i

if.then.i23.critedge.i.i:                         ; preds = %cgroup_control.exit.i.i
  %subtree_ss_mask.i.i.i = getelementptr inbounds %struct.cgroup, ptr %47, i32 0, i32 15
  %63 = ptrtoint ptr %subtree_ss_mask.i.i.i to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %subtree_ss_mask.i.i.i, align 2
  br i1 %cmp.i.not.i.i.i, label %if.then.i23.critedge.i.i.cgroup_ss_mask.exit.i.i_crit_edge, label %if.then2.i24.i.i

if.then.i23.critedge.i.i.cgroup_ss_mask.exit.i.i_crit_edge: ; preds = %if.then.i23.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_ss_mask.exit.i.i

if.then2.i24.i.i:                                 ; preds = %if.then.i23.critedge.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %65 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %and11.i.i.i = and i16 %65, %64
  br label %cgroup_ss_mask.exit.i.i

if.end5.i.i.i:                                    ; preds = %cgroup_control.exit.thread.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %conv6.i.i.i = trunc i32 %51 to i16
  br label %cgroup_ss_mask.exit.i.i

cgroup_ss_mask.exit.i.i:                          ; preds = %if.end5.i.i.i, %if.then2.i24.i.i, %if.then.i23.critedge.i.i.cgroup_ss_mask.exit.i.i_crit_edge
  %shl3537.i.i = phi i32 [ %shl32.i.i, %if.end5.i.i.i ], [ %shl.i.i, %if.then2.i24.i.i ], [ %shl.i.i, %if.then.i23.critedge.i.i.cgroup_ss_mask.exit.i.i_crit_edge ]
  %retval.0.i27.i.i = phi i16 [ %conv6.i.i.i, %if.end5.i.i.i ], [ %and11.i.i.i, %if.then2.i24.i.i ], [ %64, %if.then.i23.critedge.i.i.cgroup_ss_mask.exit.i.i_crit_edge ]
  %conv3.i.i = zext i16 %retval.0.i27.i.i to i32
  %and6.i.i = and i32 %shl3537.i.i, %conv3.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i.i)
  %tobool7.not.i.i = icmp ne i32 %and6.i.i, 0
  %cmp.i.i.i = icmp eq ptr %49, @cgrp_dfl_root
  %or.cond.i.i = select i1 %tobool7.not.i.i, i1 %cmp.i.i.i, i1 false
  br i1 %or.cond.i.i, label %css_visible.exit.i, label %cgroup_ss_mask.exit.i.i.if.then100.i_crit_edge

cgroup_ss_mask.exit.i.i.if.then100.i_crit_edge:   ; preds = %cgroup_ss_mask.exit.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then100.i

css_visible.exit.i:                               ; preds = %cgroup_ss_mask.exit.i.i
  %implicit_on_dfl.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %43, i32 0, i32 18
  %66 = ptrtoint ptr %implicit_on_dfl.i.i to i32
  call void @__asan_load1_noabort(i32 %66)
  %bf.load.i.i = load i8, ptr %implicit_on_dfl.i.i, align 4
  %67 = and i8 %bf.load.i.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %67)
  %bf.cast.i.not.i = icmp eq i8 %67, 0
  br i1 %bf.cast.i.not.i, label %css_visible.exit.i.if.then100.i_crit_edge, label %css_visible.exit.i.cleanup.i_crit_edge

css_visible.exit.i.cleanup.i_crit_edge:           ; preds = %css_visible.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup.i

css_visible.exit.i.if.then100.i_crit_edge:        ; preds = %css_visible.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then100.i

if.then100.i:                                     ; preds = %css_visible.exit.i.if.then100.i_crit_edge, %cgroup_ss_mask.exit.i.i.if.then100.i_crit_edge
  %flags.i141.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %retval.0.i.i, i32 0, i32 7
  %68 = ptrtoint ptr %flags.i141.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %flags.i141.i, align 4
  %and.i142.i = and i32 %69, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i142.i)
  %tobool.not.i143.i = icmp eq i32 %and.i142.i, 0
  br i1 %tobool.not.i143.i, label %if.then100.i.css_clear_dir.exit.i_crit_edge, label %if.end.i.i

if.then100.i.css_clear_dir.exit.i_crit_edge:      ; preds = %if.then100.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_clear_dir.exit.i

if.end.i.i:                                       ; preds = %if.then100.i
  %and2.i.i = and i32 %69, -9
  %70 = ptrtoint ptr %flags.i141.i to i32
  call void @__asan_store4_noabort(i32 %70)
  store i32 %and2.i.i, ptr %flags.i141.i, align 4
  %tobool3.not.i.i = icmp eq ptr %43, null
  br i1 %tobool3.not.i.i, label %if.then4.i.i, label %if.else8.i.i

if.then4.i.i:                                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %71 = ptrtoint ptr %root.i.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %root.i.i.i, align 4
  %cmp.i.i145.i = icmp eq ptr %72, @cgrp_dfl_root
  %cgroup_base_files.cgroup1_base_files.i.i = select i1 %cmp.i.i145.i, ptr @cgroup_base_files, ptr @cgroup1_base_files
  %call7.i.i = tail call fastcc i32 @cgroup_addrm_files(ptr noundef nonnull %retval.0.i.i, ptr noundef %45, ptr noundef nonnull %cgroup_base_files.cgroup1_base_files.i.i, i1 noundef zeroext false) #26
  br label %css_clear_dir.exit.i

if.else8.i.i:                                     ; preds = %if.end.i.i
  %cfts10.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %43, i32 0, i32 24
  %73 = ptrtoint ptr %cfts10.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %.pn33.i.i = load ptr, ptr %cfts10.i.i, align 4
  %cmp.not35.i.i = icmp eq ptr %.pn33.i.i, %cfts10.i.i
  br i1 %cmp.not35.i.i, label %if.else8.i.i.css_clear_dir.exit.i_crit_edge, label %if.else8.i.i.for.body.i.i_crit_edge

if.else8.i.i.for.body.i.i_crit_edge:              ; preds = %if.else8.i.i
  br label %for.body.i.i

if.else8.i.i.css_clear_dir.exit.i_crit_edge:      ; preds = %if.else8.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_clear_dir.exit.i

for.body.i.i:                                     ; preds = %for.body.i.i.for.body.i.i_crit_edge, %if.else8.i.i.for.body.i.i_crit_edge
  %.pn36.i.i = phi ptr [ %.pn.i.i, %for.body.i.i.for.body.i.i_crit_edge ], [ %.pn33.i.i, %if.else8.i.i.for.body.i.i_crit_edge ]
  %cfts.1.i.i = getelementptr i8, ptr %.pn36.i.i, i32 -84
  %call13.i.i = tail call fastcc i32 @cgroup_addrm_files(ptr noundef nonnull %retval.0.i.i, ptr noundef %45, ptr noundef %cfts.1.i.i, i1 noundef zeroext false) #26
  %74 = ptrtoint ptr %.pn36.i.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %.pn.i.i = load ptr, ptr %.pn36.i.i, align 4
  %75 = ptrtoint ptr %ss1.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %ss1.i.i, align 4
  %cfts12.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %76, i32 0, i32 24
  %cmp.not.i.i = icmp eq ptr %.pn.i.i, %cfts12.i.i
  br i1 %cmp.not.i.i, label %for.body.i.i.css_clear_dir.exit.i_crit_edge, label %for.body.i.i.for.body.i.i_crit_edge

for.body.i.i.for.body.i.i_crit_edge:              ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body.i.i

for.body.i.i.css_clear_dir.exit.i_crit_edge:      ; preds = %for.body.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_clear_dir.exit.i

css_clear_dir.exit.i:                             ; preds = %for.body.i.i.css_clear_dir.exit.i_crit_edge, %if.else8.i.i.css_clear_dir.exit.i_crit_edge, %if.then4.i.i, %if.then100.i.css_clear_dir.exit.i_crit_edge
  %css_reset.i = getelementptr inbounds %struct.cgroup_subsys, ptr %20, i32 0, i32 5
  %77 = ptrtoint ptr %css_reset.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %css_reset.i, align 4
  %tobool101.not.i = icmp eq ptr %78, null
  br i1 %tobool101.not.i, label %css_clear_dir.exit.i.cleanup.i_crit_edge, label %if.then102.i

css_clear_dir.exit.i.cleanup.i_crit_edge:         ; preds = %css_clear_dir.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup.i

if.then102.i:                                     ; preds = %css_clear_dir.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void %78(ptr noundef nonnull %retval.0.i.i) #26
  br label %cleanup.i

cleanup.i:                                        ; preds = %if.then102.i, %css_clear_dir.exit.i.cleanup.i_crit_edge, %css_visible.exit.i.cleanup.i_crit_edge, %cgroup_control.exit.thread.i.i.cleanup.i_crit_edge, %cgroup_control.exit.i.i.cleanup.i_crit_edge, %if.then97.i, %cgroup_css.exit.i.cleanup.i_crit_edge
  %inc.i = add nuw nsw i32 %ssid.0150.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 14
  br i1 %exitcond.not.i, label %cleanup.i.for.inc108.i_crit_edge, label %cleanup.i.land.rhs33.i_crit_edge

cleanup.i.land.rhs33.i_crit_edge:                 ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs33.i

cleanup.i.for.inc108.i_crit_edge:                 ; preds = %cleanup.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc108.i

for.inc108.i:                                     ; preds = %cleanup.i.for.inc108.i_crit_edge, %if.end.i13.for.inc108.i_crit_edge
  %call110.i = tail call ptr @css_next_descendant_post(ptr noundef nonnull %d_css.0152.i, ptr noundef %cgrp) #26
  %tobool.not.i14 = icmp eq ptr %call110.i, null
  br i1 %tobool.not.i14, label %for.inc108.i.cgroup_apply_control_disable.exit_crit_edge, label %for.inc108.i.do.body.i5_crit_edge

for.inc108.i.do.body.i5_crit_edge:                ; preds = %for.inc108.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body.i5

for.inc108.i.cgroup_apply_control_disable.exit_crit_edge: ; preds = %for.inc108.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_apply_control_disable.exit

cgroup_apply_control_disable.exit:                ; preds = %for.inc108.i.cgroup_apply_control_disable.exit_crit_edge, %if.end.cgroup_apply_control_disable.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @static_key_enable(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @static_key_disable(ptr noundef) local_unnamed_addr #2

; Function Attrs: cold null_pointer_is_valid
declare dso_local i32 @_printk(ptr noundef, ...) local_unnamed_addr #7

; Function Attrs: null_pointer_is_valid
declare dso_local void @kernfs_activate(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_show_path(ptr noundef %sf, ptr noundef %kf_node, ptr nocapture noundef readonly %kf_root) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %kf_root to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %kf_root, align 4
  %priv.i = getelementptr inbounds %struct.kernfs_node, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %priv.i, align 8
  %root.i = getelementptr inbounds %struct.cgroup, ptr %3, i32 0, i32 19
  %4 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %root.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12) to i32))
  %6 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %6, i32 noundef 3264, i32 noundef 4096) #32
  %tobool.not = icmp eq ptr %call7.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %7 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not.i = icmp eq i32 %7, 0
  br i1 %tobool.not.i, label %if.end.if.end.i_crit_edge, label %land.rhs.i

if.end.if.end.i_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

land.rhs.i:                                       ; preds = %if.end
  %call.i79.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i79.i)
  %cmp.not.i = icmp eq i32 %call.i79.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !637

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 1389, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %if.end.if.end.i_crit_edge
  %8 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i.i = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %11, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !639
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #26
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i.i, label %if.end.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

if.end.i.rcu_read_lock.exit.i_crit_edge:          ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %if.end.i
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 696, ptr noundef nonnull @.str.55) #26
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %if.end.i.rcu_read_lock.exit.i_crit_edge
  %12 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 2
  %14 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task.i, align 8
  %nsproxy.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 110
  %16 = ptrtoint ptr %nsproxy.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %nsproxy.i, align 4
  %cgroup_ns.i = getelementptr inbounds %struct.nsproxy, ptr %17, i32 0, i32 8
  %18 = ptrtoint ptr %cgroup_ns.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %cgroup_ns.i, align 4
  %root_cset.i = getelementptr inbounds %struct.cgroup_namespace, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %root_cset.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %root_cset.i, align 4
  %cmp25.i = icmp eq ptr %21, @init_css_set
  br i1 %cmp25.i, label %if.then26.i, label %if.else.i

if.then26.i:                                      ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  %cgrp.i = getelementptr inbounds %struct.cgroup_root, ptr %5, i32 0, i32 3
  br label %if.end46.i

if.else.i:                                        ; preds = %rcu_read_lock.exit.i
  %cmp27.i = icmp eq ptr %5, @cgrp_dfl_root
  br i1 %cmp27.i, label %if.then28.i, label %if.else29.i

if.then28.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #28
  %dfl_cgrp.i = getelementptr inbounds %struct.css_set, ptr %21, i32 0, i32 3
  %22 = ptrtoint ptr %dfl_cgrp.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %dfl_cgrp.i, align 4
  br label %if.end46.i

if.else29.i:                                      ; preds = %if.else.i
  %cgrp_links.i = getelementptr inbounds %struct.css_set, ptr %21, i32 0, i32 13
  br label %for.cond.i

for.cond.i:                                       ; preds = %for.body.i.for.cond.i_crit_edge, %if.else29.i
  %.pn.in.i = phi ptr [ %cgrp_links.i, %if.else29.i ], [ %.pn.i, %for.body.i.for.cond.i_crit_edge ]
  %24 = ptrtoint ptr %.pn.in.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %.pn.i = load ptr, ptr %.pn.in.i, align 4
  %cmp32.not.i = icmp eq ptr %.pn.i, %cgrp_links.i
  br i1 %cmp32.not.i, label %for.cond.i.if.end46.i_crit_edge, label %for.body.i

for.cond.i.if.end46.i_crit_edge:                  ; preds = %for.cond.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end46.i

for.body.i:                                       ; preds = %for.cond.i
  %link.0.i = getelementptr i8, ptr %.pn.i, i32 -16
  %25 = ptrtoint ptr %link.0.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %link.0.i, align 4
  %root36.i = getelementptr inbounds %struct.cgroup, ptr %26, i32 0, i32 19
  %27 = ptrtoint ptr %root36.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %root36.i, align 4
  %cmp37.i = icmp eq ptr %28, %5
  br i1 %cmp37.i, label %for.body.i.if.end46.i_crit_edge, label %for.body.i.for.cond.i_crit_edge

for.body.i.for.cond.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.cond.i

for.body.i.if.end46.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end46.i

if.end46.i:                                       ; preds = %for.body.i.if.end46.i_crit_edge, %for.cond.i.if.end46.i_crit_edge, %if.then28.i, %if.then26.i
  %res.3.i = phi ptr [ %cgrp.i, %if.then26.i ], [ %23, %if.then28.i ], [ %26, %for.body.i.if.end46.i_crit_edge ], [ null, %for.cond.i.if.end46.i_crit_edge ]
  %call.i80.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i80.i, label %if.end46.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true.i83.i

if.end46.i.rcu_read_unlock.exit.i_crit_edge:      ; preds = %if.end46.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit.i

land.lhs.true.i83.i:                              ; preds = %if.end46.i
  %call1.i81.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i81.i)
  %tobool.not.i82.i = icmp eq i32 %call1.i81.i, 0
  br i1 %tobool.not.i82.i, label %land.lhs.true.i83.i.rcu_read_unlock.exit.i_crit_edge, label %land.lhs.true2.i85.i

land.lhs.true.i83.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true.i83.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit.i

land.lhs.true2.i85.i:                             ; preds = %land.lhs.true.i83.i
  %.b4.i84.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i84.i, label %land.lhs.true2.i85.i.rcu_read_unlock.exit.i_crit_edge, label %if.then.i86.i

land.lhs.true2.i85.i.rcu_read_unlock.exit.i_crit_edge: ; preds = %land.lhs.true2.i85.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit.i

if.then.i86.i:                                    ; preds = %land.lhs.true2.i85.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 724, ptr noundef nonnull @.str.57) #26
  br label %rcu_read_unlock.exit.i

rcu_read_unlock.exit.i:                           ; preds = %if.then.i86.i, %land.lhs.true2.i85.i.rcu_read_unlock.exit.i_crit_edge, %land.lhs.true.i83.i.rcu_read_unlock.exit.i_crit_edge, %if.end46.i.rcu_read_unlock.exit.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !640
  %29 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i87.i = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i.i.i87.i to ptr
  %preempt_count.i.i.i.i88.i = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i.i.i88.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i.i.i88.i, align 4
  %sub.i.i.i.i = add i32 %32, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i88.i, align 4
  tail call void @rcu_read_unlock_strict() #26
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #26
  %tobool48.not.i = icmp eq ptr %res.3.i, null
  br i1 %tobool48.not.i, label %do.body58.i, label %current_cgns_cgroup_from_root.exit, !prof !637

do.body58.i:                                      ; preds = %rcu_read_unlock.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1412, 0\0A.popsection", ""() #26, !srcloc !653
  unreachable

current_cgns_cgroup_from_root.exit:               ; preds = %rcu_read_unlock.exit.i
  %kn = getelementptr inbounds %struct.cgroup, ptr %res.3.i, i32 0, i32 11
  %33 = ptrtoint ptr %kn to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %kn, align 8
  %call3 = tail call i32 @kernfs_path_from_node(ptr noundef %kf_node, ptr noundef %34, ptr noundef nonnull %call7.i, i32 noundef 4096) #26
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 4095, i32 %call3)
  %cmp = icmp sgt i32 %call3, 4095
  br i1 %cmp, label %current_cgns_cgroup_from_root.exit.if.end8_crit_edge, label %if.else

current_cgns_cgroup_from_root.exit.if.end8_crit_edge: ; preds = %current_cgns_cgroup_from_root.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end8

if.else:                                          ; preds = %current_cgns_cgroup_from_root.exit
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %cmp5 = icmp sgt i32 %call3, 0
  br i1 %cmp5, label %if.then6, label %if.else.if.end8_crit_edge

if.else.if.end8_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end8

if.then6:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  %call.i.i17 = tail call i32 @strlen(ptr noundef nonnull %call7.i) #29
  tail call void @seq_escape_mem(ptr noundef %sf, ptr noundef nonnull %call7.i, i32 noundef %call.i.i17, i32 noundef 8, ptr noundef nonnull @.str.10) #26
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.else.if.end8_crit_edge, %current_cgns_cgroup_from_root.exit.if.end8_crit_edge
  %len.0 = phi i32 [ 0, %if.then6 ], [ %call3, %if.else.if.end8_crit_edge ], [ -34, %current_cgns_cgroup_from_root.exit.if.end8_crit_edge ]
  tail call void @kfree(ptr noundef nonnull %call7.i) #26
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %len.0, %if.end8 ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kernfs_path_from_node(ptr noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @init_cgroup_root(ptr nocapture noundef readonly %ctx) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %root1 = getelementptr inbounds %struct.cgroup_fs_context, ptr %ctx, i32 0, i32 1
  %0 = ptrtoint ptr %root1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root1, align 4
  %cgrp2 = getelementptr inbounds %struct.cgroup_root, ptr %1, i32 0, i32 3
  %root_list = getelementptr inbounds %struct.cgroup_root, ptr %1, i32 0, i32 6
  %2 = ptrtoint ptr %root_list to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %root_list, ptr %root_list, align 4
  %prev.i = getelementptr inbounds %struct.cgroup_root, ptr %1, i32 0, i32 6, i32 1
  %3 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %root_list, ptr %prev.i, align 4
  %nr_cgrps = getelementptr inbounds %struct.cgroup_root, ptr %1, i32 0, i32 5
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_cgrps, i32 noundef 4) #26
  %4 = ptrtoint ptr %nr_cgrps to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile i32 1, ptr %nr_cgrps, align 4
  %root3 = getelementptr inbounds %struct.cgroup_root, ptr %1, i32 0, i32 3, i32 19
  %5 = ptrtoint ptr %root3 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %1, ptr %root3, align 4
  tail call fastcc void @init_cgroup_housekeeping(ptr noundef %cgrp2)
  %flags = getelementptr inbounds %struct.cgroup_fs_context, ptr %ctx, i32 0, i32 3
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags, align 4
  %flags4 = getelementptr inbounds %struct.cgroup_root, ptr %1, i32 0, i32 7
  %8 = ptrtoint ptr %flags4 to i32
  call void @__asan_store4_noabort(i32 %8)
  store i32 %7, ptr %flags4, align 4
  %release_agent = getelementptr inbounds %struct.cgroup_fs_context, ptr %ctx, i32 0, i32 9
  %9 = ptrtoint ptr %release_agent to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %release_agent, align 4
  %tobool.not = icmp eq ptr %10, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %release_agent_path = getelementptr inbounds %struct.cgroup_root, ptr %1, i32 0, i32 8
  %call = tail call i32 @strscpy(ptr noundef %release_agent_path, ptr noundef nonnull %10, i32 noundef 4096) #26
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %name = getelementptr inbounds %struct.cgroup_fs_context, ptr %ctx, i32 0, i32 8
  %11 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %name, align 4
  %tobool6.not = icmp eq ptr %12, null
  br i1 %tobool6.not, label %if.end.if.end12_crit_edge, label %if.then7

if.end.if.end12_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end12

if.then7:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  %name8 = getelementptr inbounds %struct.cgroup_root, ptr %1, i32 0, i32 9
  %call11 = tail call i32 @strscpy(ptr noundef %name8, ptr noundef nonnull %12, i32 noundef 64) #26
  br label %if.end12

if.end12:                                         ; preds = %if.then7, %if.end.if.end12_crit_edge
  %cpuset_clone_children = getelementptr inbounds %struct.cgroup_fs_context, ptr %ctx, i32 0, i32 4
  %13 = ptrtoint ptr %cpuset_clone_children to i32
  call void @__asan_load1_noabort(i32 %13)
  %14 = load i8, ptr %cpuset_clone_children, align 4, !range !654
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %14)
  %tobool13.not = icmp eq i8 %14, 0
  br i1 %tobool13.not, label %if.end12.if.end17_crit_edge, label %if.then14

if.end12.if.end17_crit_edge:                      ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end17

if.then14:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #28
  %flags16 = getelementptr inbounds %struct.cgroup_root, ptr %1, i32 0, i32 3, i32 1
  tail call void @_set_bit(i32 noundef 1, ptr noundef %flags16) #26
  br label %if.end17

if.end17:                                         ; preds = %if.then14, %if.end12.if.end17_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @init_cgroup_housekeeping(ptr noundef %cgrp) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %sibling = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 3
  %0 = ptrtoint ptr %sibling to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile ptr %sibling, ptr %sibling, align 4
  %prev.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 3, i32 1
  %1 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %sibling, ptr %prev.i, align 4
  %children = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 4
  %2 = ptrtoint ptr %children to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %children, ptr %children, align 4
  %prev.i39 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 4, i32 1
  %3 = ptrtoint ptr %prev.i39 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %children, ptr %prev.i39, align 4
  %cset_links = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 20
  %4 = ptrtoint ptr %cset_links to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %cset_links, ptr %cset_links, align 4
  %prev.i40 = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 20, i32 1
  %5 = ptrtoint ptr %prev.i40 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %cset_links, ptr %prev.i40, align 4
  %pidlists = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 29
  %6 = ptrtoint ptr %pidlists to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %pidlists, ptr %pidlists, align 4
  %prev.i41 = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 29, i32 1
  %7 = ptrtoint ptr %prev.i41 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %pidlists, ptr %prev.i41, align 4
  %pidlist_mutex = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 30
  tail call void @__mutex_init(ptr noundef %pidlist_mutex, ptr noundef nonnull @.str.59, ptr noundef nonnull @init_cgroup_housekeeping.__key) #26
  %8 = ptrtoint ptr %cgrp to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %cgrp, ptr %cgrp, align 8
  %flags = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 7
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flags, align 4
  %or = or i32 %10, 2
  store i32 %or, ptr %flags, align 4
  %dom_cgrp = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 22
  %11 = ptrtoint ptr %dom_cgrp to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %cgrp, ptr %dom_cgrp, align 8
  %max_descendants = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 6
  %12 = ptrtoint ptr %max_descendants to i32
  call void @__asan_store4_noabort(i32 %12)
  store i32 2147483647, ptr %max_descendants, align 4
  %max_depth = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 3
  %13 = ptrtoint ptr %max_depth to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 2147483647, ptr %max_depth, align 8
  %rstat_css_list = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 25
  %14 = ptrtoint ptr %rstat_css_list to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %rstat_css_list, ptr %rstat_css_list, align 4
  %prev.i42 = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 25, i32 1
  %15 = ptrtoint ptr %prev.i42 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %rstat_css_list, ptr %prev.i42, align 4
  %prev_cputime = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 28
  %lock.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 28, i32 2
  %16 = call ptr @memset(ptr %prev_cputime, i32 0, i32 16)
  tail call void @__raw_spin_lock_init(ptr noundef %lock.i, ptr noundef nonnull @.str.64, ptr noundef nonnull @prev_cputime_init.__key, i16 noundef signext 2) #26
  %arrayidx4 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 0
  %17 = ptrtoint ptr %arrayidx4 to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %arrayidx4, ptr %arrayidx4, align 4
  %prev.i43 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 0, i32 1
  %18 = ptrtoint ptr %prev.i43 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %arrayidx4, ptr %prev.i43, align 4
  %arrayidx4.1 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 1
  %19 = ptrtoint ptr %arrayidx4.1 to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %arrayidx4.1, ptr %arrayidx4.1, align 4
  %prev.i43.1 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 1, i32 1
  %20 = ptrtoint ptr %prev.i43.1 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %arrayidx4.1, ptr %prev.i43.1, align 4
  %arrayidx4.2 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 2
  %21 = ptrtoint ptr %arrayidx4.2 to i32
  call void @__asan_store4_noabort(i32 %21)
  store volatile ptr %arrayidx4.2, ptr %arrayidx4.2, align 4
  %prev.i43.2 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 2, i32 1
  %22 = ptrtoint ptr %prev.i43.2 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %arrayidx4.2, ptr %prev.i43.2, align 4
  %arrayidx4.3 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 3
  %23 = ptrtoint ptr %arrayidx4.3 to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %arrayidx4.3, ptr %arrayidx4.3, align 4
  %prev.i43.3 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 3, i32 1
  %24 = ptrtoint ptr %prev.i43.3 to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %arrayidx4.3, ptr %prev.i43.3, align 4
  %arrayidx4.4 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 4
  %25 = ptrtoint ptr %arrayidx4.4 to i32
  call void @__asan_store4_noabort(i32 %25)
  store volatile ptr %arrayidx4.4, ptr %arrayidx4.4, align 4
  %prev.i43.4 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 4, i32 1
  %26 = ptrtoint ptr %prev.i43.4 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %arrayidx4.4, ptr %prev.i43.4, align 4
  %arrayidx4.5 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 5
  %27 = ptrtoint ptr %arrayidx4.5 to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %arrayidx4.5, ptr %arrayidx4.5, align 4
  %prev.i43.5 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 5, i32 1
  %28 = ptrtoint ptr %prev.i43.5 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %arrayidx4.5, ptr %prev.i43.5, align 4
  %arrayidx4.6 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 6
  %29 = ptrtoint ptr %arrayidx4.6 to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile ptr %arrayidx4.6, ptr %arrayidx4.6, align 4
  %prev.i43.6 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 6, i32 1
  %30 = ptrtoint ptr %prev.i43.6 to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %arrayidx4.6, ptr %prev.i43.6, align 4
  %arrayidx4.7 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 7
  %31 = ptrtoint ptr %arrayidx4.7 to i32
  call void @__asan_store4_noabort(i32 %31)
  store volatile ptr %arrayidx4.7, ptr %arrayidx4.7, align 4
  %prev.i43.7 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 7, i32 1
  %32 = ptrtoint ptr %prev.i43.7 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %arrayidx4.7, ptr %prev.i43.7, align 4
  %arrayidx4.8 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 8
  %33 = ptrtoint ptr %arrayidx4.8 to i32
  call void @__asan_store4_noabort(i32 %33)
  store volatile ptr %arrayidx4.8, ptr %arrayidx4.8, align 4
  %prev.i43.8 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 8, i32 1
  %34 = ptrtoint ptr %prev.i43.8 to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %arrayidx4.8, ptr %prev.i43.8, align 4
  %arrayidx4.9 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 9
  %35 = ptrtoint ptr %arrayidx4.9 to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile ptr %arrayidx4.9, ptr %arrayidx4.9, align 4
  %prev.i43.9 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 9, i32 1
  %36 = ptrtoint ptr %prev.i43.9 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %arrayidx4.9, ptr %prev.i43.9, align 4
  %arrayidx4.10 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 10
  %37 = ptrtoint ptr %arrayidx4.10 to i32
  call void @__asan_store4_noabort(i32 %37)
  store volatile ptr %arrayidx4.10, ptr %arrayidx4.10, align 4
  %prev.i43.10 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 10, i32 1
  %38 = ptrtoint ptr %prev.i43.10 to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %arrayidx4.10, ptr %prev.i43.10, align 4
  %arrayidx4.11 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 11
  %39 = ptrtoint ptr %arrayidx4.11 to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %arrayidx4.11, ptr %arrayidx4.11, align 4
  %prev.i43.11 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 11, i32 1
  %40 = ptrtoint ptr %prev.i43.11 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %arrayidx4.11, ptr %prev.i43.11, align 4
  %arrayidx4.12 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 12
  %41 = ptrtoint ptr %arrayidx4.12 to i32
  call void @__asan_store4_noabort(i32 %41)
  store volatile ptr %arrayidx4.12, ptr %arrayidx4.12, align 4
  %prev.i43.12 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 12, i32 1
  %42 = ptrtoint ptr %prev.i43.12 to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %arrayidx4.12, ptr %prev.i43.12, align 4
  %arrayidx4.13 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 13
  %43 = ptrtoint ptr %arrayidx4.13 to i32
  call void @__asan_store4_noabort(i32 %43)
  store volatile ptr %arrayidx4.13, ptr %arrayidx4.13, align 4
  %prev.i43.13 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 21, i32 13, i32 1
  %44 = ptrtoint ptr %prev.i43.13 to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %arrayidx4.13, ptr %prev.i43.13, align 4
  %offline_waitq = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 31
  tail call void @__init_waitqueue_head(ptr noundef %offline_waitq, ptr noundef nonnull @.str.61, ptr noundef nonnull @init_cgroup_housekeeping.__key.60) #26
  %release_agent_work = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 32
  tail call void @__init_work(ptr noundef %release_agent_work, i32 noundef 0) #26
  %45 = ptrtoint ptr %release_agent_work to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 -64, ptr %release_agent_work, align 8
  %lockdep_map = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 32, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.63, ptr noundef nonnull @init_cgroup_housekeeping.__key.62, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #26
  %entry12 = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 32, i32 1
  %46 = ptrtoint ptr %entry12 to i32
  call void @__asan_store4_noabort(i32 %46)
  store volatile ptr %entry12, ptr %entry12, align 4
  %prev.i44 = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 32, i32 1, i32 1
  %47 = ptrtoint ptr %prev.i44 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %entry12, ptr %prev.i44, align 4
  %func = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 32, i32 2
  %48 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr @cgroup1_release_agent, ptr %func, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @strscpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_set_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_setup_root(ptr noundef %root, i16 noundef zeroext %ss_mask) local_unnamed_addr #0 align 64 {
entry:
  %tmp_links = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp_links) #26
  %0 = getelementptr inbounds %struct.list_head, ptr %tmp_links, i32 0, i32 1
  %1 = ptrtoint ptr %tmp_links to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %tmp_links, ptr %tmp_links, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %tmp_links, ptr %0, align 4
  %cgrp = getelementptr inbounds %struct.cgroup_root, ptr %root, i32 0, i32 3
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %3 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 1994, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %refcnt = getelementptr inbounds %struct.cgroup_root, ptr %root, i32 0, i32 3, i32 0, i32 2
  %call24 = call i32 @percpu_ref_init(ptr noundef %refcnt, ptr noundef nonnull @css_release, i32 noundef 0, i32 noundef 3264) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24)
  %tobool25.not = icmp eq i32 %call24, 0
  br i1 %tobool25.not, label %if.end27, label %if.end.out_crit_edge

if.end.out_crit_edge:                             ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %out

if.end27:                                         ; preds = %if.end
  %4 = load i32, ptr @css_set_count, align 4
  %mul = shl i32 %4, 1
  %call28 = call fastcc i32 @allocate_cgrp_cset_links(i32 noundef %mul, ptr noundef nonnull %tmp_links)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28)
  %tobool29.not = icmp eq i32 %call28, 0
  br i1 %tobool29.not, label %if.end31, label %if.end27.cancel_ref_crit_edge

if.end27.cancel_ref_crit_edge:                    ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #28
  br label %cancel_ref

if.end31:                                         ; preds = %if.end27
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %5 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool.not.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i, label %if.end31.if.end.i_crit_edge, label %land.rhs.i

if.end31.if.end.i_crit_edge:                      ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

land.rhs.i:                                       ; preds = %if.end31
  %call.i.i293 = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i293)
  %cmp.not.i = icmp eq i32 %call.i.i293, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !637

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 1314, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %if.end31.if.end.i_crit_edge
  %call24.i = call i32 @idr_alloc_cyclic(ptr noundef nonnull @cgroup_hierarchy_idr, ptr noundef %root, i32 noundef 0, i32 noundef 0, i32 noundef 3264) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call24.i)
  %cmp25.i = icmp slt i32 %call24.i, 0
  br i1 %cmp25.i, label %if.end.i.cancel_ref_crit_edge, label %if.end35

if.end.i.cancel_ref_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cancel_ref

if.end35:                                         ; preds = %if.end.i
  %hierarchy_id.i = getelementptr inbounds %struct.cgroup_root, ptr %root, i32 0, i32 2
  %6 = ptrtoint ptr %hierarchy_id.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %call24.i, ptr %hierarchy_id.i, align 8
  %cmp36 = icmp eq ptr %root, @cgrp_dfl_root
  %cond = select i1 %cmp36, ptr @cgroup_kf_syscall_ops, ptr @cgroup1_kf_syscall_ops
  %call37 = call ptr @kernfs_create_root(ptr noundef nonnull %cond, i32 noundef 13, ptr noundef %cgrp) #26
  %7 = ptrtoint ptr %root to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %call37, ptr %root, align 8
  %cmp.i = icmp ugt ptr %call37, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then40, label %if.end43

if.then40:                                        ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #28
  %8 = ptrtoint ptr %call37 to i32
  br label %exit_root_id

if.end43:                                         ; preds = %if.end35
  %9 = ptrtoint ptr %call37 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %call37, align 4
  %kn45 = getelementptr inbounds %struct.cgroup_root, ptr %root, i32 0, i32 3, i32 11
  %11 = ptrtoint ptr %kn45 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %10, ptr %kn45, align 8
  %id.i.i = getelementptr inbounds %struct.kernfs_node, ptr %10, i32 0, i32 10
  %12 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load8_noabort(i32 %12)
  %13 = load i64, ptr %id.i.i, align 8
  %conv.i.i.i = trunc i64 %13 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %conv.i.i.i)
  %cmp47.not = icmp eq i32 %conv.i.i.i, 1
  br i1 %cmp47.not, label %if.end43.if.end91_crit_edge, label %land.rhs53

if.end43.if.end91_crit_edge:                      ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end91

land.rhs53:                                       ; preds = %if.end43
  %.b291 = load i1, ptr @cgroup_setup_root.__already_done, align 1
  br i1 %.b291, label %land.rhs53.if.end91_crit_edge, label %if.then64, !prof !636

land.rhs53.if.end91_crit_edge:                    ; preds = %land.rhs53
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end91

if.then64:                                        ; preds = %land.rhs53
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_setup_root.__already_done, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 2029, i32 noundef 9, ptr noundef null) #26
  br label %if.end91

if.end91:                                         ; preds = %if.then64, %land.rhs53.if.end91_crit_edge, %if.end43.if.end91_crit_edge
  %14 = ptrtoint ptr %kn45 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %kn45, align 8
  %id.i = getelementptr inbounds %struct.kernfs_node, ptr %15, i32 0, i32 10
  %16 = ptrtoint ptr %id.i to i32
  call void @__asan_load8_noabort(i32 %16)
  %17 = load i64, ptr %id.i, align 8
  %ancestor_ids = getelementptr inbounds %struct.cgroup_root, ptr %root, i32 0, i32 4
  %18 = ptrtoint ptr %ancestor_ids to i32
  call void @__asan_store8_noabort(i32 %18)
  store i64 %17, ptr %ancestor_ids, align 8
  %call101 = call fastcc i32 @css_populate_dir(ptr noundef %cgrp)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call101)
  %tobool102.not = icmp eq i32 %call101, 0
  br i1 %tobool102.not, label %if.end104, label %if.end91.destroy_root_crit_edge

if.end91.destroy_root_crit_edge:                  ; preds = %if.end91
  call void @__sanitizer_cov_trace_pc() #28
  br label %destroy_root

if.end104:                                        ; preds = %if.end91
  %call105 = call i32 @cgroup_rstat_init(ptr noundef %cgrp) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call105)
  %tobool106.not = icmp eq i32 %call105, 0
  br i1 %tobool106.not, label %if.end108, label %if.end104.destroy_root_crit_edge

if.end104.destroy_root_crit_edge:                 ; preds = %if.end104
  call void @__sanitizer_cov_trace_pc() #28
  br label %destroy_root

if.end108:                                        ; preds = %if.end104
  %call109 = call i32 @rebind_subsystems(ptr noundef %root, i16 noundef zeroext %ss_mask)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call109)
  %tobool110.not = icmp eq i32 %call109, 0
  br i1 %tobool110.not, label %if.end112, label %exit_stats

if.end112:                                        ; preds = %if.end108
  %call113 = call i32 @cgroup_bpf_inherit(ptr noundef %cgrp) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call113)
  %tobool115.not = icmp eq i32 %call113, 0
  br i1 %tobool115.not, label %if.end112.if.end160_crit_edge, label %land.rhs122

if.end112.if.end160_crit_edge:                    ; preds = %if.end112
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end160

land.rhs122:                                      ; preds = %if.end112
  %.b289290 = load i1, ptr @cgroup_setup_root.__already_done.11, align 1
  br i1 %.b289290, label %land.rhs122.if.end160_crit_edge, label %if.then133, !prof !636

land.rhs122.if.end160_crit_edge:                  ; preds = %land.rhs122
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end160

if.then133:                                       ; preds = %land.rhs122
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_setup_root.__already_done.11, align 1
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 2045, i32 noundef 9, ptr noundef null) #26
  br label %if.end160

if.end160:                                        ; preds = %if.then133, %land.rhs122.if.end160_crit_edge, %if.end112.if.end160_crit_edge
  call fastcc void @trace_cgroup_setup_root(ptr noundef %root)
  %root_list = getelementptr inbounds %struct.cgroup_root, ptr %root, i32 0, i32 6
  %19 = load ptr, ptr @cgroup_roots, align 4
  %call.i.i295 = call zeroext i1 @__list_add_valid(ptr noundef %root_list, ptr noundef nonnull @cgroup_roots, ptr noundef %19) #26
  br i1 %call.i.i295, label %if.end.i.i, label %if.end160.list_add.exit_crit_edge

if.end160.list_add.exit_crit_edge:                ; preds = %if.end160
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.end160
  call void @__sanitizer_cov_trace_pc() #28
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %root_list, ptr %prev1.i.i, align 4
  %21 = ptrtoint ptr %root_list to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %19, ptr %root_list, align 4
  %prev3.i.i = getelementptr inbounds %struct.cgroup_root, ptr %root, i32 0, i32 6, i32 1
  %22 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr @cgroup_roots, ptr %prev3.i.i, align 4
  store volatile ptr %root_list, ptr @cgroup_roots, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end160.list_add.exit_crit_edge
  %23 = load i32, ptr @cgroup_root_count, align 4
  %inc = add i32 %23, 1
  store i32 %inc, ptr @cgroup_root_count, align 4
  call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  br label %for.body

for.body:                                         ; preds = %for.inc194.for.body_crit_edge, %list_add.exit
  %i.0320 = phi i32 [ 0, %list_add.exit ], [ %inc195, %for.inc194.for.body_crit_edge ]
  %arrayidx172 = getelementptr [128 x %struct.hlist_head], ptr @css_set_table, i32 0, i32 %i.0320
  %24 = ptrtoint ptr %arrayidx172 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx172, align 4
  %tobool174.not = icmp eq ptr %25, null
  %add.ptr = getelementptr i8, ptr %25, i32 -232
  %tobool178.not316321 = icmp eq ptr %add.ptr, null
  %tobool178.not316 = or i1 %tobool174.not, %tobool178.not316321
  br i1 %tobool178.not316, label %for.body.for.inc194_crit_edge, label %for.body.for.body179_crit_edge

for.body.for.body179_crit_edge:                   ; preds = %for.body
  br label %for.body179

for.body.for.inc194_crit_edge:                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc194

for.body179:                                      ; preds = %for.inc.for.body179_crit_edge, %for.body.for.body179_crit_edge
  %cset.1317 = phi ptr [ %add.ptr190, %for.inc.for.body179_crit_edge ], [ %add.ptr, %for.body.for.body179_crit_edge ]
  call fastcc void @link_css_set(ptr noundef nonnull %tmp_links, ptr noundef nonnull %cset.1317, ptr noundef %cgrp)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %26 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.not.i296 = icmp eq i32 %26, 0
  br i1 %tobool.not.i296, label %for.body179.if.end.i301_crit_edge, label %land.rhs.i299

for.body179.if.end.i301_crit_edge:                ; preds = %for.body179
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i301

land.rhs.i299:                                    ; preds = %for.body179
  %call.i.i297 = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i297)
  %cmp.not.i298 = icmp eq i32 %call.i.i297, 0
  br i1 %cmp.not.i298, label %do.end.i300, label %land.rhs.i299.if.end.i301_crit_edge, !prof !637

land.rhs.i299.if.end.i301_crit_edge:              ; preds = %land.rhs.i299
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i301

do.end.i300:                                      ; preds = %land.rhs.i299
  call void @__sanitizer_cov_trace_pc() #28
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 798, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i301

if.end.i301:                                      ; preds = %do.end.i300, %land.rhs.i299.if.end.i301_crit_edge, %for.body179.if.end.i301_crit_edge
  %tasks.i = getelementptr inbounds %struct.css_set, ptr %cset.1317, i32 0, i32 5
  %27 = ptrtoint ptr %tasks.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile ptr, ptr %tasks.i, align 4
  %cmp.i.not.i = icmp eq ptr %28, %tasks.i
  br i1 %cmp.i.not.i, label %css_set_populated.exit, label %if.end.i301.if.then181_crit_edge

if.end.i301.if.then181_crit_edge:                 ; preds = %if.end.i301
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then181

css_set_populated.exit:                           ; preds = %if.end.i301
  %mg_tasks.i = getelementptr inbounds %struct.css_set, ptr %cset.1317, i32 0, i32 6
  %29 = ptrtoint ptr %mg_tasks.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile ptr, ptr %mg_tasks.i, align 4
  %cmp.i32.i.not = icmp eq ptr %30, %mg_tasks.i
  br i1 %cmp.i32.i.not, label %css_set_populated.exit.for.inc_crit_edge, label %css_set_populated.exit.if.then181_crit_edge

css_set_populated.exit.if.then181_crit_edge:      ; preds = %css_set_populated.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then181

css_set_populated.exit.for.inc_crit_edge:         ; preds = %css_set_populated.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

if.then181:                                       ; preds = %css_set_populated.exit.if.then181_crit_edge, %if.end.i301.if.then181_crit_edge
  call fastcc void @cgroup_update_populated(ptr noundef %cgrp, i1 noundef zeroext true)
  br label %for.inc

for.inc:                                          ; preds = %if.then181, %css_set_populated.exit.for.inc_crit_edge
  %hlist = getelementptr inbounds %struct.css_set, ptr %cset.1317, i32 0, i32 12
  %31 = ptrtoint ptr %hlist to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %hlist, align 4
  %tobool186.not = icmp eq ptr %32, null
  %add.ptr190 = getelementptr i8, ptr %32, i32 -232
  %tobool178.not322 = icmp eq ptr %add.ptr190, null
  %tobool178.not = or i1 %tobool186.not, %tobool178.not322
  br i1 %tobool178.not, label %for.inc.for.inc194_crit_edge, label %for.inc.for.body179_crit_edge

for.inc.for.body179_crit_edge:                    ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body179

for.inc.for.inc194_crit_edge:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc194

for.inc194:                                       ; preds = %for.inc.for.inc194_crit_edge, %for.body.for.inc194_crit_edge
  %inc195 = add nuw nsw i32 %i.0320, 1
  %exitcond.not = icmp eq i32 %inc195, 128
  br i1 %exitcond.not, label %for.end196, label %for.inc194.for.body_crit_edge

for.inc194.for.body_crit_edge:                    ; preds = %for.inc194
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

for.end196:                                       ; preds = %for.inc194
  call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  %children = getelementptr inbounds %struct.cgroup_root, ptr %root, i32 0, i32 3, i32 0, i32 4
  %33 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile ptr, ptr %children, align 4
  %cmp.i302.not = icmp eq ptr %34, %children
  br i1 %cmp.i302.not, label %do.body219, label %do.body210, !prof !636

do.body210:                                       ; preds = %for.end196
  call void @__sanitizer_cov_trace_pc() #28
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2069, 0\0A.popsection", ""() #26, !srcloc !655
  unreachable

do.body219:                                       ; preds = %for.end196
  %nr_cgrps = getelementptr inbounds %struct.cgroup_root, ptr %root, i32 0, i32 5
  %call.i.i = call zeroext i1 @__kasan_check_read(ptr noundef %nr_cgrps, i32 noundef 4) #26
  %35 = ptrtoint ptr %nr_cgrps to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %nr_cgrps, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %36)
  %cmp221.not = icmp eq i32 %36, 1
  br i1 %cmp221.not, label %do.body219.out_crit_edge, label %do.body229, !prof !636

do.body219.out_crit_edge:                         ; preds = %do.body219
  call void @__sanitizer_cov_trace_pc() #28
  br label %out

do.body229:                                       ; preds = %do.body219
  call void @__sanitizer_cov_trace_pc() #28
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 2070, 0\0A.popsection", ""() #26, !srcloc !656
  unreachable

exit_stats:                                       ; preds = %if.end108
  call void @__sanitizer_cov_trace_pc() #28
  call void @cgroup_rstat_exit(ptr noundef %cgrp) #26
  br label %destroy_root

destroy_root:                                     ; preds = %exit_stats, %if.end104.destroy_root_crit_edge, %if.end91.destroy_root_crit_edge
  %ret.0 = phi i32 [ %call101, %if.end91.destroy_root_crit_edge ], [ %call105, %if.end104.destroy_root_crit_edge ], [ %call109, %exit_stats ]
  %37 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %root, align 8
  call void @kernfs_destroy_root(ptr noundef %38) #26
  %39 = ptrtoint ptr %root to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %root, align 8
  br label %exit_root_id

exit_root_id:                                     ; preds = %destroy_root, %if.then40
  %ret.1 = phi i32 [ %8, %if.then40 ], [ %ret.0, %destroy_root ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %40 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool.not.i303 = icmp eq i32 %40, 0
  br i1 %tobool.not.i303, label %exit_root_id.cgroup_exit_root_id.exit_crit_edge, label %land.rhs.i306

exit_root_id.cgroup_exit_root_id.exit_crit_edge:  ; preds = %exit_root_id
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_exit_root_id.exit

land.rhs.i306:                                    ; preds = %exit_root_id
  %call.i.i304 = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i304)
  %cmp.not.i305 = icmp eq i32 %call.i.i304, 0
  br i1 %cmp.not.i305, label %do.end.i307, label %land.rhs.i306.cgroup_exit_root_id.exit_crit_edge, !prof !637

land.rhs.i306.cgroup_exit_root_id.exit_crit_edge: ; preds = %land.rhs.i306
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_exit_root_id.exit

do.end.i307:                                      ; preds = %land.rhs.i306
  call void @__sanitizer_cov_trace_pc() #28
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 1326, i32 noundef 9, ptr noundef null) #26
  br label %cgroup_exit_root_id.exit

cgroup_exit_root_id.exit:                         ; preds = %do.end.i307, %land.rhs.i306.cgroup_exit_root_id.exit_crit_edge, %exit_root_id.cgroup_exit_root_id.exit_crit_edge
  %41 = ptrtoint ptr %hierarchy_id.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %hierarchy_id.i, align 8
  %call24.i309 = call ptr @idr_remove(ptr noundef nonnull @cgroup_hierarchy_idr, i32 noundef %42) #26
  br label %cancel_ref

cancel_ref:                                       ; preds = %cgroup_exit_root_id.exit, %if.end.i.cancel_ref_crit_edge, %if.end27.cancel_ref_crit_edge
  %ret.2 = phi i32 [ %call28, %if.end27.cancel_ref_crit_edge ], [ %ret.1, %cgroup_exit_root_id.exit ], [ %call24.i, %if.end.i.cancel_ref_crit_edge ]
  call void @percpu_ref_exit(ptr noundef %refcnt) #26
  br label %out

out:                                              ; preds = %cancel_ref, %do.body219.out_crit_edge, %if.end.out_crit_edge
  %ret.3 = phi i32 [ %call24, %if.end.out_crit_edge ], [ %ret.2, %cancel_ref ], [ 0, %do.body219.out_crit_edge ]
  %43 = ptrtoint ptr %tmp_links to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %tmp_links, align 4
  %cmp.not18.i = icmp eq ptr %44, %tmp_links
  br i1 %cmp.not18.i, label %out.free_cgrp_cset_links.exit_crit_edge, label %out.for.body.i_crit_edge

out.for.body.i_crit_edge:                         ; preds = %out
  br label %for.body.i

out.free_cgrp_cset_links.exit_crit_edge:          ; preds = %out
  call void @__sanitizer_cov_trace_pc() #28
  br label %free_cgrp_cset_links.exit

for.body.i:                                       ; preds = %list_del.exit.i.for.body.i_crit_edge, %out.for.body.i_crit_edge
  %.pn.in19.i = phi ptr [ %.pn.i, %list_del.exit.i.for.body.i_crit_edge ], [ %44, %out.for.body.i_crit_edge ]
  %link.0.i = getelementptr i8, ptr %.pn.in19.i, i32 -8
  %45 = ptrtoint ptr %.pn.in19.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %.pn.i = load ptr, ptr %.pn.in19.i, align 4
  %call.i.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in19.i) #26
  br i1 %call.i.i.i, label %if.end.i.i.i, label %for.body.i.list_del.exit.i_crit_edge

for.body.i.list_del.exit.i_crit_edge:             ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in19.i, i32 0, i32 1
  %46 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %prev.i.i.i, align 4
  %48 = ptrtoint ptr %.pn.in19.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %.pn.in19.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %47, ptr %prev1.i.i.i.i, align 4
  %51 = ptrtoint ptr %47 to i32
  call void @__asan_store4_noabort(i32 %51)
  store volatile ptr %49, ptr %47, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %for.body.i.list_del.exit.i_crit_edge
  %52 = ptrtoint ptr %.pn.in19.i to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in19.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in19.i, i32 0, i32 1
  %53 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  call void @kfree(ptr noundef %link.0.i) #26
  %cmp.not.i311 = icmp eq ptr %.pn.i, %tmp_links
  br i1 %cmp.not.i311, label %list_del.exit.i.free_cgrp_cset_links.exit_crit_edge, label %list_del.exit.i.for.body.i_crit_edge

list_del.exit.i.for.body.i_crit_edge:             ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body.i

list_del.exit.i.free_cgrp_cset_links.exit_crit_edge: ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %free_cgrp_cset_links.exit

free_cgrp_cset_links.exit:                        ; preds = %list_del.exit.i.free_cgrp_cset_links.exit_crit_edge, %out.free_cgrp_cset_links.exit_crit_edge
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp_links) #26
  ret i32 %ret.3
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @percpu_ref_init(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @css_release(ptr noundef %ref) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %destroy_work = getelementptr i8, ptr %ref, i32 52
  tail call void @__init_work(ptr noundef %destroy_work, i32 noundef 0) #26
  %0 = ptrtoint ptr %destroy_work to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -64, ptr %destroy_work, align 4
  %lockdep_map = getelementptr i8, ptr %ref, i32 68
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.77, ptr noundef nonnull @css_release.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #26
  %entry4 = getelementptr i8, ptr %ref, i32 56
  %1 = ptrtoint ptr %entry4 to i32
  call void @__asan_store4_noabort(i32 %1)
  store volatile ptr %entry4, ptr %entry4, align 4
  %prev.i = getelementptr i8, ptr %ref, i32 60
  %2 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %entry4, ptr %prev.i, align 4
  %func = getelementptr i8, ptr %ref, i32 64
  %3 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr @css_release_work_fn, ptr %func, align 4
  %4 = load ptr, ptr @cgroup_destroy_wq, align 4
  %call.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %4, ptr noundef %destroy_work) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @allocate_cgrp_cset_links(i32 noundef %count, ptr noundef %tmp_links) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %tmp_links to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile ptr %tmp_links, ptr %tmp_links, align 4
  %prev.i = getelementptr inbounds %struct.list_head, ptr %tmp_links, i32 0, i32 1
  %1 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %tmp_links, ptr %prev.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count)
  %cmp7 = icmp sgt i32 %count, 0
  br i1 %cmp7, label %entry.for.body_crit_edge, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %list_add.exit.for.body_crit_edge, %entry.for.body_crit_edge
  %i.08 = phi i32 [ %inc, %list_add.exit.for.body_crit_edge ], [ 0, %entry.for.body_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %2 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %2, i32 noundef 3520, i32 noundef 24) #32
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %3 = ptrtoint ptr %tmp_links to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %tmp_links, align 4
  %cmp.not18.i = icmp eq ptr %4, %tmp_links
  br i1 %cmp.not18.i, label %if.then.cleanup_crit_edge, label %if.then.for.body.i_crit_edge

if.then.for.body.i_crit_edge:                     ; preds = %if.then
  br label %for.body.i

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

for.body.i:                                       ; preds = %list_del.exit.i.for.body.i_crit_edge, %if.then.for.body.i_crit_edge
  %.pn.in19.i = phi ptr [ %.pn.i, %list_del.exit.i.for.body.i_crit_edge ], [ %4, %if.then.for.body.i_crit_edge ]
  %link.0.i = getelementptr i8, ptr %.pn.in19.i, i32 -8
  %5 = ptrtoint ptr %.pn.in19.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %.pn.i = load ptr, ptr %.pn.in19.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in19.i) #26
  br i1 %call.i.i.i, label %if.end.i.i.i, label %for.body.i.list_del.exit.i_crit_edge

for.body.i.list_del.exit.i_crit_edge:             ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in19.i, i32 0, i32 1
  %6 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev.i.i.i, align 4
  %8 = ptrtoint ptr %.pn.in19.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %.pn.in19.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %7, ptr %prev1.i.i.i.i, align 4
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %9, ptr %7, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %for.body.i.list_del.exit.i_crit_edge
  %12 = ptrtoint ptr %.pn.in19.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in19.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in19.i, i32 0, i32 1
  %13 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  tail call void @kfree(ptr noundef %link.0.i) #26
  %cmp.not.i = icmp eq ptr %.pn.i, %tmp_links
  br i1 %cmp.not.i, label %list_del.exit.i.cleanup_crit_edge, label %list_del.exit.i.for.body.i_crit_edge

list_del.exit.i.for.body.i_crit_edge:             ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body.i

list_del.exit.i.cleanup_crit_edge:                ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %for.body
  %cset_link = getelementptr inbounds %struct.cgrp_cset_link, ptr %call7.i.i, i32 0, i32 2
  %14 = ptrtoint ptr %tmp_links to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %tmp_links, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %cset_link, ptr noundef %tmp_links, ptr noundef %15) #26
  br i1 %call.i.i, label %if.end.i.i, label %if.end.list_add.exit_crit_edge

if.end.list_add.exit_crit_edge:                   ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_add.exit

if.end.i.i:                                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %cset_link, ptr %prev1.i.i, align 4
  %17 = ptrtoint ptr %cset_link to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %15, ptr %cset_link, align 8
  %prev3.i.i = getelementptr inbounds %struct.cgrp_cset_link, ptr %call7.i.i, i32 0, i32 2, i32 1
  %18 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %tmp_links, ptr %prev3.i.i, align 4
  %19 = ptrtoint ptr %tmp_links to i32
  call void @__asan_store4_noabort(i32 %19)
  store volatile ptr %cset_link, ptr %tmp_links, align 4
  br label %list_add.exit

list_add.exit:                                    ; preds = %if.end.i.i, %if.end.list_add.exit_crit_edge
  %inc = add nuw nsw i32 %i.08, 1
  %exitcond.not = icmp eq i32 %inc, %count
  br i1 %exitcond.not, label %list_add.exit.cleanup_crit_edge, label %list_add.exit.for.body_crit_edge

list_add.exit.for.body_crit_edge:                 ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

list_add.exit.cleanup_crit_edge:                  ; preds = %list_add.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

cleanup:                                          ; preds = %list_add.exit.cleanup_crit_edge, %list_del.exit.i.cleanup_crit_edge, %if.then.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %if.then.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ -12, %list_del.exit.i.cleanup_crit_edge ], [ 0, %list_add.exit.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kernfs_create_root(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @css_populate_dir(ptr noundef %css) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %css to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %css, align 8
  %flags = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 7
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 4
  %and = and i32 %3, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %kn = getelementptr inbounds %struct.cgroup, ptr %1, i32 0, i32 11
  %4 = ptrtoint ptr %kn to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %kn, align 8
  %tobool1.not = icmp eq ptr %5, null
  br i1 %tobool1.not, label %lor.lhs.false.cleanup_crit_edge, label %if.end

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %ss = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 1
  %6 = ptrtoint ptr %ss to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ss, align 4
  %tobool2.not = icmp eq ptr %7, null
  br i1 %tobool2.not, label %if.then3, label %if.else9

if.then3:                                         ; preds = %if.end
  %root.i = getelementptr inbounds %struct.cgroup, ptr %1, i32 0, i32 19
  %8 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %root.i, align 4
  %cmp.i = icmp eq ptr %9, @cgrp_dfl_root
  %cgroup_base_files.cgroup1_base_files = select i1 %cmp.i, ptr @cgroup_base_files, ptr @cgroup1_base_files
  %call6 = tail call fastcc i32 @cgroup_addrm_files(ptr noundef %1, ptr noundef %1, ptr noundef nonnull %cgroup_base_files.cgroup1_base_files, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6)
  %cmp = icmp slt i32 %call6, 0
  br i1 %cmp, label %if.then3.cleanup_crit_edge, label %if.then3.if.end24_crit_edge

if.then3.if.end24_crit_edge:                      ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end24

if.then3.cleanup_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.else9:                                         ; preds = %if.end
  %cfts11 = getelementptr inbounds %struct.cgroup_subsys, ptr %7, i32 0, i32 24
  br label %for.cond

for.cond:                                         ; preds = %for.body.for.cond_crit_edge, %if.else9
  %.pn.in = phi ptr [ %cfts11, %if.else9 ], [ %.pn, %for.body.for.cond_crit_edge ]
  %10 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pn = load ptr, ptr %.pn.in, align 4
  %11 = ptrtoint ptr %ss to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ss, align 4
  %cfts13 = getelementptr inbounds %struct.cgroup_subsys, ptr %12, i32 0, i32 24
  %cmp14.not = icmp eq ptr %.pn, %cfts13
  br i1 %cmp14.not, label %for.cond.if.end24_crit_edge, label %for.body

for.cond.if.end24_crit_edge:                      ; preds = %for.cond
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end24

for.body:                                         ; preds = %for.cond
  %cfts.1 = getelementptr i8, ptr %.pn, i32 -84
  %call15 = tail call fastcc i32 @cgroup_addrm_files(ptr noundef %css, ptr noundef %1, ptr noundef %cfts.1, i1 noundef zeroext true)
  %cmp16 = icmp slt i32 %call15, 0
  br i1 %cmp16, label %if.then17, label %for.body.for.cond_crit_edge

for.body.for.cond_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.cond

if.then17:                                        ; preds = %for.body
  %13 = ptrtoint ptr %ss to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ss, align 4
  %cfts28 = getelementptr inbounds %struct.cgroup_subsys, ptr %14, i32 0, i32 24
  %15 = ptrtoint ptr %cfts28 to i32
  call void @__asan_load4_noabort(i32 %15)
  %.pn7880 = load ptr, ptr %cfts28, align 4
  %cmp36.not82 = icmp eq ptr %.pn7880, %cfts28
  %cmp3983 = icmp eq ptr %.pn7880, %.pn
  %or.cond84 = select i1 %cmp36.not82, i1 true, i1 %cmp3983
  br i1 %or.cond84, label %if.then17.cleanup_crit_edge, label %if.then17.if.end41_crit_edge

if.then17.if.end41_crit_edge:                     ; preds = %if.then17
  br label %if.end41

if.then17.cleanup_crit_edge:                      ; preds = %if.then17
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end24:                                         ; preds = %for.cond.if.end24_crit_edge, %if.then3.if.end24_crit_edge
  %16 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags, align 4
  %or = or i32 %17, 8
  store i32 %or, ptr %flags, align 4
  br label %cleanup

if.end41:                                         ; preds = %if.end41.if.end41_crit_edge, %if.then17.if.end41_crit_edge
  %.pn7885 = phi ptr [ %.pn78, %if.end41.if.end41_crit_edge ], [ %.pn7880, %if.then17.if.end41_crit_edge ]
  %cfts.2 = getelementptr i8, ptr %.pn7885, i32 -84
  %call42 = tail call fastcc i32 @cgroup_addrm_files(ptr noundef %css, ptr noundef %1, ptr noundef %cfts.2, i1 noundef zeroext false)
  %18 = ptrtoint ptr %.pn7885 to i32
  call void @__asan_load4_noabort(i32 %18)
  %.pn78 = load ptr, ptr %.pn7885, align 4
  %19 = ptrtoint ptr %ss to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ss, align 4
  %cfts35 = getelementptr inbounds %struct.cgroup_subsys, ptr %20, i32 0, i32 24
  %cmp36.not = icmp eq ptr %.pn78, %cfts35
  %cmp39 = icmp eq ptr %.pn78, %.pn
  %or.cond = select i1 %cmp36.not, i1 true, i1 %cmp39
  br i1 %or.cond, label %if.end41.cleanup_crit_edge, label %if.end41.if.end41_crit_edge

if.end41.if.end41_crit_edge:                      ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end41

if.end41.cleanup_crit_edge:                       ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

cleanup:                                          ; preds = %if.end41.cleanup_crit_edge, %if.end24, %if.then17.cleanup_crit_edge, %if.then3.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %if.end24 ], [ 0, %lor.lhs.false.cleanup_crit_edge ], [ 0, %entry.cleanup_crit_edge ], [ %call6, %if.then3.cleanup_crit_edge ], [ %call15, %if.then17.cleanup_crit_edge ], [ %call15, %if.end41.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @cgroup_rstat_init(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @cgroup_bpf_inherit(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_cgroup_setup_root(ptr noundef %root) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_setup_root, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_cgroup_setup_root, %do.body)) #26
          to label %if.end48 [label %do.body], !srcloc !657

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !636

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.71, i32 noundef 108, i32 noundef 9, ptr noundef null) #26
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !658
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_setup_root, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %root) #26
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !659
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !659
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !636

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.71, i32 noundef 108, i32 noundef 9, ptr noundef null) #26
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !660
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_setup_root, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_cgroup_setup_root.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @trace_cgroup_setup_root.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.70, i32 noundef 38, ptr noundef nonnull @.str.22) #26
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !661
  %38 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @link_css_set(ptr noundef %tmp_links, ptr noundef %cset, ptr noundef %cgrp) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %tmp_links to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %tmp_links, align 4
  %cmp.i.not = icmp eq ptr %1, %tmp_links
  br i1 %cmp.i.not, label %do.body3, label %do.end8, !prof !637

do.body3:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1172, 0\0A.popsection", ""() #26, !srcloc !662
  unreachable

do.end8:                                          ; preds = %entry
  %root.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 19
  %2 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %root.i, align 4
  %cmp.i29 = icmp eq ptr %3, @cgrp_dfl_root
  br i1 %cmp.i29, label %if.then10, label %do.end8.if.end11_crit_edge

do.end8.if.end11_crit_edge:                       ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end11

if.then10:                                        ; preds = %do.end8
  call void @__sanitizer_cov_trace_pc() #28
  %dfl_cgrp = getelementptr inbounds %struct.css_set, ptr %cset, i32 0, i32 3
  %4 = ptrtoint ptr %dfl_cgrp to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %cgrp, ptr %dfl_cgrp, align 4
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %do.end8.if.end11_crit_edge
  %5 = ptrtoint ptr %tmp_links to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %tmp_links, align 4
  %add.ptr = getelementptr i8, ptr %6, i32 -8
  %cset12 = getelementptr i8, ptr %6, i32 -4
  %7 = ptrtoint ptr %cset12 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %cset, ptr %cset12, align 4
  %8 = ptrtoint ptr %add.ptr to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %cgrp, ptr %add.ptr, align 4
  %cset_links = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 20
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %6) #26
  br i1 %call.i.i, label %if.end.i.i, label %if.end11.__list_del_entry.exit.i_crit_edge

if.end11.__list_del_entry.exit.i_crit_edge:       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #28
  br label %__list_del_entry.exit.i

if.end.i.i:                                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %9 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %prev.i.i, align 4
  %11 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %6, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %12, i32 0, i32 1
  %13 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %10, ptr %prev1.i.i.i, align 4
  %14 = ptrtoint ptr %10 to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %12, ptr %10, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i, %if.end11.__list_del_entry.exit.i_crit_edge
  %prev.i2.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 20, i32 1
  %15 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev.i2.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %6, ptr noundef %16, ptr noundef %cset_links) #26
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.list_move_tail.exit_crit_edge

__list_del_entry.exit.i.list_move_tail.exit_crit_edge: ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_move_tail.exit

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  %17 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %6, ptr %prev.i2.i, align 4
  %18 = ptrtoint ptr %6 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %cset_links, ptr %6, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %19 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %prev3.i.i.i, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %6, ptr %16, align 4
  br label %list_move_tail.exit

list_move_tail.exit:                              ; preds = %if.end.i.i.i, %__list_del_entry.exit.i.list_move_tail.exit_crit_edge
  %cgrp_link = getelementptr i8, ptr %6, i32 8
  %cgrp_links = getelementptr inbounds %struct.css_set, ptr %cset, i32 0, i32 13
  %prev.i = getelementptr inbounds %struct.css_set, ptr %cset, i32 0, i32 13, i32 1
  %21 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %prev.i, align 4
  %call.i.i30 = tail call zeroext i1 @__list_add_valid(ptr noundef %cgrp_link, ptr noundef %22, ptr noundef %cgrp_links) #26
  br i1 %call.i.i30, label %if.end.i.i31, label %list_move_tail.exit.list_add_tail.exit_crit_edge

list_move_tail.exit.list_add_tail.exit_crit_edge: ; preds = %list_move_tail.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_add_tail.exit

if.end.i.i31:                                     ; preds = %list_move_tail.exit
  call void @__sanitizer_cov_trace_pc() #28
  %23 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %cgrp_link, ptr %prev.i, align 4
  %24 = ptrtoint ptr %cgrp_link to i32
  call void @__asan_store4_noabort(i32 %24)
  store ptr %cgrp_links, ptr %cgrp_link, align 4
  %prev3.i.i = getelementptr i8, ptr %6, i32 12
  %25 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %22, ptr %prev3.i.i, align 4
  %26 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %cgrp_link, ptr %22, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i31, %list_move_tail.exit.list_add_tail.exit_crit_edge
  %parent.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 12
  %27 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %parent.i, align 8
  %tobool15.not = icmp eq ptr %28, null
  br i1 %tobool15.not, label %list_add_tail.exit.if.end17_crit_edge, label %if.then16

list_add_tail.exit.if.end17_crit_edge:            ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end17

if.then16:                                        ; preds = %list_add_tail.exit
  %flags.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 7
  %29 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %30, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %land.rhs.i, label %if.then16.if.end27.i_crit_edge

if.then16.if.end27.i_crit_edge:                   ; preds = %if.then16
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end27.i

land.rhs.i:                                       ; preds = %if.then16
  %.b38.i = load i1, ptr @cgroup_get_live.__already_done, align 1
  br i1 %.b38.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !636

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_get_live.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 615, i32 noundef 9, ptr noundef null) #26
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %if.then16.if.end27.i_crit_edge
  %31 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %flags.i.i, align 4
  %and.i40.i = and i32 %32, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i40.i)
  %tobool.not.i41.i = icmp eq i32 %and.i40.i, 0
  br i1 %tobool.not.i41.i, label %if.then.i.i, label %if.end27.i.if.end17_crit_edge

if.end27.i.if.end17_crit_edge:                    ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end17

if.then.i.i:                                      ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 2
  tail call fastcc void @percpu_ref_get(ptr noundef %refcnt.i.i) #26
  br label %if.end17

if.end17:                                         ; preds = %if.then.i.i, %if.end27.i.if.end17_crit_edge, %list_add_tail.exit.if.end17_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cgroup_update_populated(ptr noundef %cgrp, i1 noundef zeroext %populated) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %cond = select i1 %populated, i32 1, i32 -1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool1.not = icmp eq i32 %0, 0
  br i1 %tobool1.not, label %entry.do.body25.preheader_crit_edge, label %land.rhs

entry.do.body25.preheader_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body25.preheader

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.do.body25.preheader_crit_edge, !prof !637

land.rhs.do.body25.preheader_crit_edge:           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body25.preheader

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 825, i32 noundef 9, ptr noundef null) #26
  br label %do.body25.preheader

do.body25.preheader:                              ; preds = %do.end, %land.rhs.do.body25.preheader_crit_edge, %entry.do.body25.preheader_crit_edge
  br label %do.body25

do.body25:                                        ; preds = %cleanup.do.body25_crit_edge, %do.body25.preheader
  %child.0 = phi ptr [ %cgrp.addr.0, %cleanup.do.body25_crit_edge ], [ null, %do.body25.preheader ]
  %cgrp.addr.0 = phi ptr [ %36, %cleanup.do.body25_crit_edge ], [ %cgrp, %do.body25.preheader ]
  %nr_populated_csets.i = getelementptr inbounds %struct.cgroup, ptr %cgrp.addr.0, i32 0, i32 7
  %1 = ptrtoint ptr %nr_populated_csets.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %nr_populated_csets.i, align 8
  %nr_populated_domain_children.i = getelementptr inbounds %struct.cgroup, ptr %cgrp.addr.0, i32 0, i32 8
  %3 = ptrtoint ptr %nr_populated_domain_children.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %nr_populated_domain_children.i, align 4
  %add.i = add i32 %4, %2
  %nr_populated_threaded_children.i = getelementptr inbounds %struct.cgroup, ptr %cgrp.addr.0, i32 0, i32 9
  %5 = ptrtoint ptr %nr_populated_threaded_children.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %nr_populated_threaded_children.i, align 8
  %add1.i = sub i32 0, %6
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %add1.i)
  %tobool.i = icmp ne i32 %add.i, %add1.i
  %tobool28.not = icmp eq ptr %child.0, null
  br i1 %tobool28.not, label %if.then29, label %if.else

if.then29:                                        ; preds = %do.body25
  call void @__sanitizer_cov_trace_pc() #28
  %add = add i32 %2, %cond
  %7 = ptrtoint ptr %nr_populated_csets.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %add, ptr %nr_populated_csets.i, align 8
  br label %if.end36

if.else:                                          ; preds = %do.body25
  %dom_cgrp.i = getelementptr inbounds %struct.cgroup, ptr %child.0, i32 0, i32 22
  %8 = ptrtoint ptr %dom_cgrp.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dom_cgrp.i, align 8
  %cmp.i.not = icmp eq ptr %9, %child.0
  br i1 %cmp.i.not, label %if.else33, label %if.then31

if.then31:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  %add32 = add i32 %6, %cond
  %10 = ptrtoint ptr %nr_populated_threaded_children.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %add32, ptr %nr_populated_threaded_children.i, align 8
  br label %if.end36

if.else33:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  %add34 = add i32 %4, %cond
  %11 = ptrtoint ptr %nr_populated_domain_children.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 %add34, ptr %nr_populated_domain_children.i, align 4
  br label %if.end36

if.end36:                                         ; preds = %if.else33, %if.then31, %if.then29
  %12 = ptrtoint ptr %nr_populated_csets.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %nr_populated_csets.i, align 8
  %14 = ptrtoint ptr %nr_populated_domain_children.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %nr_populated_domain_children.i, align 4
  %add.i86 = add i32 %15, %13
  %16 = ptrtoint ptr %nr_populated_threaded_children.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %nr_populated_threaded_children.i, align 8
  %add1.i88 = sub i32 0, %17
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i86, i32 %add1.i88)
  %tobool.i89 = icmp ne i32 %add.i86, %add1.i88
  %18 = xor i1 %tobool.i, %tobool.i89
  br i1 %18, label %if.end43, label %if.end36.do.end67_crit_edge

if.end36.do.end67_crit_edge:                      ; preds = %if.end36
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

if.end43:                                         ; preds = %if.end36
  tail call void @cgroup1_check_for_release(ptr noundef %cgrp.addr.0) #26
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_notify_populated, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@cgroup_update_populated, %if.then46)) #26
          to label %do.end63 [label %if.then46], !srcloc !657

if.then46:                                        ; preds = %if.end43
  call void @__sanitizer_cov_trace_pc() #28
  %call53 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @trace_cgroup_path_lock) #26
  %kn.i = getelementptr inbounds %struct.cgroup, ptr %cgrp.addr.0, i32 0, i32 11
  %19 = ptrtoint ptr %kn.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %kn.i, align 8
  %call.i.i = tail call i32 @kernfs_path_from_node(ptr noundef %20, ptr noundef null, ptr noundef nonnull @trace_cgroup_path, i32 noundef 1024) #26
  %21 = ptrtoint ptr %nr_populated_csets.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %nr_populated_csets.i, align 8
  %23 = ptrtoint ptr %nr_populated_domain_children.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %nr_populated_domain_children.i, align 4
  %add.i92 = add i32 %24, %22
  %25 = ptrtoint ptr %nr_populated_threaded_children.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %nr_populated_threaded_children.i, align 8
  %add1.i94 = sub i32 0, %26
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i92, i32 %add1.i94)
  %tobool.i95 = icmp ne i32 %add.i92, %add1.i94
  %conv60 = zext i1 %tobool.i95 to i32
  tail call fastcc void @trace_cgroup_notify_populated(ptr noundef %cgrp.addr.0, i32 noundef %conv60)
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @trace_cgroup_path_lock, i32 noundef %call53) #26
  br label %do.end63

do.end63:                                         ; preds = %if.then46, %if.end43
  %events_file = getelementptr inbounds %struct.cgroup, ptr %cgrp.addr.0, i32 0, i32 13
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @cgroup_file_kn_lock) #26
  %27 = ptrtoint ptr %events_file to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %events_file, align 4
  %tobool.not.i = icmp eq ptr %28, null
  br i1 %tobool.not.i, label %do.end63.cleanup_crit_edge, label %if.then.i

do.end63.cleanup_crit_edge:                       ; preds = %do.end63
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then.i:                                        ; preds = %do.end63
  %notified_at.i = getelementptr inbounds %struct.cgroup, ptr %cgrp.addr.0, i32 0, i32 13, i32 1
  %29 = ptrtoint ptr %notified_at.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %notified_at.i, align 4
  %add.i96 = add i32 %30, 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %31 = load volatile i32, ptr @jiffies, align 128
  %sub.i = sub i32 %31, %30
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub.i)
  %cmp5.i = icmp sgt i32 %sub.i, -1
  br i1 %cmp5.i, label %land.lhs.true.i, label %if.then.i.if.else.i_crit_edge

if.then.i.if.else.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %if.then.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %32 = load volatile i32, ptr @jiffies, align 128
  %sub7.i = sub i32 %add.i96, %32
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub7.i)
  %cmp8.i = icmp sgt i32 %sub7.i, -1
  br i1 %cmp8.i, label %if.then10.i, label %land.lhs.true.i.if.else.i_crit_edge

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.else.i

if.then10.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  %notify_timer.i = getelementptr inbounds %struct.cgroup, ptr %cgrp.addr.0, i32 0, i32 13, i32 2
  %call11.i = tail call i32 @timer_reduce(ptr noundef %notify_timer.i, i32 noundef %add.i96) #26
  br label %cleanup

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %if.then.i.if.else.i_crit_edge
  tail call void @kernfs_notify(ptr noundef nonnull %28) #26
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %33 = load volatile i32, ptr @jiffies, align 128
  %34 = ptrtoint ptr %notified_at.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store i32 %33, ptr %notified_at.i, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.else.i, %if.then10.i, %do.end63.cleanup_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @cgroup_file_kn_lock, i32 noundef %call2.i) #26
  %parent.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.addr.0, i32 0, i32 12
  %35 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %parent.i, align 8
  %tobool66.not = icmp eq ptr %36, null
  br i1 %tobool66.not, label %cleanup.do.end67_crit_edge, label %cleanup.do.body25_crit_edge

cleanup.do.body25_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body25

cleanup.do.end67_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

do.end67:                                         ; preds = %cleanup.do.end67_crit_edge, %if.end36.do.end67_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @cgroup_rstat_exit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kernfs_destroy_root(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_ref_exit(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_do_get_tree(ptr noundef %fc) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_private.i = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 3
  %0 = ptrtoint ptr %fs_private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_private.i, align 4
  %root = getelementptr inbounds %struct.cgroup_fs_context, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %root, align 4
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 8
  %6 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %5, ptr %1, align 4
  %fs_type = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 2
  %7 = ptrtoint ptr %fs_type to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fs_type, align 4
  %cmp = icmp eq ptr %8, @cgroup2_fs_type
  %spec.select = select i1 %cmp, i32 1667723888, i32 2613483
  %9 = getelementptr inbounds %struct.kernfs_fs_context, ptr %1, i32 0, i32 2
  %10 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %spec.select, ptr %9, align 4
  %call5 = tail call i32 @kernfs_get_tree(ptr noundef %fc) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool.not = icmp eq i32 %call5, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end19_crit_edge

entry.if.end19_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end19

land.lhs.true:                                    ; preds = %entry
  %ns = getelementptr inbounds %struct.cgroup_fs_context, ptr %1, i32 0, i32 2
  %11 = ptrtoint ptr %ns to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %ns, align 4
  %cmp6.not = icmp eq ptr %12, @init_cgroup_ns
  br i1 %cmp6.not, label %land.lhs.true.if.end19_crit_edge, label %if.then7

land.lhs.true.if.end19_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end19

if.then7:                                         ; preds = %land.lhs.true
  %root8 = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 5
  %13 = ptrtoint ptr %root8 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %root8, align 4
  %d_sb = getelementptr inbounds %struct.dentry, ptr %14, i32 0, i32 9
  %15 = ptrtoint ptr %d_sb to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %d_sb, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @cgroup_mutex, i32 noundef 0) #26
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %17 = ptrtoint ptr %ns to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ns, align 4
  %root_cset = getelementptr inbounds %struct.cgroup_namespace, ptr %18, i32 0, i32 3
  %19 = ptrtoint ptr %root_cset to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %root_cset, align 4
  %21 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %root, align 4
  %call11 = tail call fastcc ptr @cset_cgroup_from_root(ptr noundef %20, ptr noundef %22)
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  tail call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  %kn = getelementptr inbounds %struct.cgroup, ptr %call11, i32 0, i32 11
  %23 = ptrtoint ptr %kn to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %kn, align 8
  %call12 = tail call ptr @kernfs_node_dentry(ptr noundef %24, ptr noundef %16) #26
  %25 = ptrtoint ptr %root8 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %root8, align 4
  tail call void @dput(ptr noundef %26) #26
  %cmp.i = icmp ugt ptr %call12, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %if.then15, label %if.then7.if.end17_crit_edge

if.then7.if.end17_crit_edge:                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end17

if.then15:                                        ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @deactivate_locked_super(ptr noundef %16) #26
  %27 = ptrtoint ptr %call12 to i32
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.then7.if.end17_crit_edge
  %ret.0 = phi i32 [ %27, %if.then15 ], [ 0, %if.then7.if.end17_crit_edge ]
  %nsdentry.0 = phi ptr [ null, %if.then15 ], [ %call12, %if.then7.if.end17_crit_edge ]
  %28 = ptrtoint ptr %root8 to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %nsdentry.0, ptr %root8, align 4
  br label %if.end19

if.end19:                                         ; preds = %if.end17, %land.lhs.true.if.end19_crit_edge, %entry.if.end19_crit_edge
  %ret.1 = phi i32 [ %call5, %entry.if.end19_crit_edge ], [ %ret.0, %if.end17 ], [ 0, %land.lhs.true.if.end19_crit_edge ]
  %new_sb_created = getelementptr inbounds %struct.kernfs_fs_context, ptr %1, i32 0, i32 3
  %29 = ptrtoint ptr %new_sb_created to i32
  call void @__asan_load1_noabort(i32 %29)
  %30 = load i8, ptr %new_sb_created, align 4, !range !654
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %30)
  %tobool21.not = icmp eq i8 %30, 0
  br i1 %tobool21.not, label %if.then22, label %if.end19.if.end25_crit_edge

if.end19.if.end25_crit_edge:                      ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end25

if.then22:                                        ; preds = %if.end19
  %31 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %root, align 4
  %flags.i.i = getelementptr inbounds %struct.cgroup_root, ptr %32, i32 0, i32 3, i32 0, i32 7
  %33 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %34, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.then22.if.end25_crit_edge

if.then22.if.end25_crit_edge:                     ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end25

if.then.i.i:                                      ; preds = %if.then22
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i = getelementptr inbounds %struct.cgroup_root, ptr %32, i32 0, i32 3, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i) #26
  br label %if.end25

if.end25:                                         ; preds = %if.then.i.i, %if.then22.if.end25_crit_edge, %if.end19.if.end25_crit_edge
  ret i32 %ret.1
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kernfs_get_tree(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kernfs_node_dentry(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @dput(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @deactivate_locked_super(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_init_fs_context(ptr nocapture noundef %fc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3520, i32 noundef 44) #32
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 2
  %3 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %task, align 8
  %nsproxy = getelementptr inbounds %struct.task_struct, ptr %4, i32 0, i32 110
  %5 = ptrtoint ptr %nsproxy to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %nsproxy, align 4
  %cgroup_ns = getelementptr inbounds %struct.nsproxy, ptr %6, i32 0, i32 8
  %7 = ptrtoint ptr %cgroup_ns to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %cgroup_ns, align 4
  %ns = getelementptr inbounds %struct.cgroup_fs_context, ptr %call7.i.i, i32 0, i32 2
  %9 = ptrtoint ptr %ns to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %8, ptr %ns, align 4
  %tobool.not.i = icmp eq ptr %8, null
  br i1 %tobool.not.i, label %if.end.get_cgroup_ns.exit_crit_edge, label %if.then.i

if.end.get_cgroup_ns.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %get_cgroup_ns.exit

if.then.i:                                        ; preds = %if.end
  %count.i = getelementptr inbounds %struct.ns_common, ptr %8, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #26
  tail call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #26
  %10 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #26, !srcloc !663
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %10, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !637

if.then.i.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %11 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %11)
  %.not.i.i.i.i = icmp sgt i32 %11, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.get_cgroup_ns.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !636

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.get_cgroup_ns.exit_crit_edge:     ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %get_cgroup_ns.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %count.i, i32 noundef %.sink.i.i.i.i) #26
  br label %get_cgroup_ns.exit

get_cgroup_ns.exit:                               ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.get_cgroup_ns.exit_crit_edge, %if.end.get_cgroup_ns.exit_crit_edge
  %fs_private = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 3
  %12 = ptrtoint ptr %fs_private to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %call7.i.i, ptr %fs_private, align 4
  %fs_type = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 2
  %13 = ptrtoint ptr %fs_type to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %fs_type, align 4
  %cmp = icmp eq ptr %14, @cgroup2_fs_type
  %cgroup_fs_context_ops.cgroup1_fs_context_ops = select i1 %cmp, ptr @cgroup_fs_context_ops, ptr @cgroup1_fs_context_ops
  %15 = ptrtoint ptr %fc to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %cgroup_fs_context_ops.cgroup1_fs_context_ops, ptr %fc, align 4
  %user_ns = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 6
  %16 = ptrtoint ptr %user_ns to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %user_ns, align 4
  %tobool.not.i20 = icmp eq ptr %17, null
  br i1 %tobool.not.i20, label %get_cgroup_ns.exit.put_user_ns.exit_crit_edge, label %land.lhs.true.i

get_cgroup_ns.exit.put_user_ns.exit_crit_edge:    ; preds = %get_cgroup_ns.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %put_user_ns.exit

land.lhs.true.i:                                  ; preds = %get_cgroup_ns.exit
  %count.i21 = getelementptr inbounds %struct.user_namespace, ptr %17, i32 0, i32 7, i32 3
  %call.i.i.i.i.i.i22 = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i21, i32 noundef 4) #26
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !647
  tail call void @llvm.prefetch.p0(ptr %count.i21, i32 1, i32 3, i32 1) #26
  %18 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i21, ptr %count.i21, i32 1, ptr elementtype(i32) %count.i21) #26, !srcloc !648
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %18, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i24, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i23 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i23, label %if.end5.i.i.i.i.put_user_ns.exit_crit_edge, label %if.then10.i.i.i.i, !prof !636

if.end5.i.i.i.i.put_user_ns.exit_crit_edge:       ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %put_user_ns.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @refcount_warn_saturate(ptr noundef %count.i21, i32 noundef 3) #26
  br label %put_user_ns.exit

if.then.i24:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !649
  tail call void @__put_user_ns(ptr noundef nonnull %17) #26
  br label %put_user_ns.exit

put_user_ns.exit:                                 ; preds = %if.then.i24, %if.then10.i.i.i.i, %if.end5.i.i.i.i.put_user_ns.exit_crit_edge, %get_cgroup_ns.exit.put_user_ns.exit_crit_edge
  %19 = ptrtoint ptr %ns to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ns, align 4
  %user_ns7 = getelementptr inbounds %struct.cgroup_namespace, ptr %20, i32 0, i32 1
  %21 = ptrtoint ptr %user_ns7 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %user_ns7, align 4
  %tobool.not.i25 = icmp eq ptr %22, null
  br i1 %tobool.not.i25, label %put_user_ns.exit.get_user_ns.exit_crit_edge, label %if.then.i30

put_user_ns.exit.get_user_ns.exit_crit_edge:      ; preds = %put_user_ns.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %get_user_ns.exit

if.then.i30:                                      ; preds = %put_user_ns.exit
  %count.i26 = getelementptr inbounds %struct.user_namespace, ptr %22, i32 0, i32 7, i32 3
  %call.i.i.i.i.i.i27 = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i26, i32 noundef 4) #26
  tail call void @llvm.prefetch.p0(ptr %count.i26, i32 1, i32 3, i32 1) #26
  %23 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i26, ptr %count.i26, i32 1, ptr elementtype(i32) %count.i26) #26, !srcloc !663
  %asmresult.i.i.i.i.i.i28 = extractvalue { i32, i32, i32 } %23, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i28)
  %tobool1.not.i.i.i.i29 = icmp eq i32 %asmresult.i.i.i.i.i.i28, 0
  br i1 %tobool1.not.i.i.i.i29, label %if.then.i30.if.end15.sink.split.i.i.i.i35_crit_edge, label %if.else.i.i.i.i33, !prof !637

if.then.i30.if.end15.sink.split.i.i.i.i35_crit_edge: ; preds = %if.then.i30
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i35

if.else.i.i.i.i33:                                ; preds = %if.then.i30
  %add.i.i.i.i31 = add i32 %asmresult.i.i.i.i.i.i28, 1
  %24 = or i32 %add.i.i.i.i31, %asmresult.i.i.i.i.i.i28
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %24)
  %.not.i.i.i.i32 = icmp sgt i32 %24, -1
  br i1 %.not.i.i.i.i32, label %if.else.i.i.i.i33.get_user_ns.exit_crit_edge, label %if.else.i.i.i.i33.if.end15.sink.split.i.i.i.i35_crit_edge, !prof !636

if.else.i.i.i.i33.if.end15.sink.split.i.i.i.i35_crit_edge: ; preds = %if.else.i.i.i.i33
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i35

if.else.i.i.i.i33.get_user_ns.exit_crit_edge:     ; preds = %if.else.i.i.i.i33
  call void @__sanitizer_cov_trace_pc() #28
  br label %get_user_ns.exit

if.end15.sink.split.i.i.i.i35:                    ; preds = %if.else.i.i.i.i33.if.end15.sink.split.i.i.i.i35_crit_edge, %if.then.i30.if.end15.sink.split.i.i.i.i35_crit_edge
  %.sink.i.i.i.i34 = phi i32 [ 2, %if.then.i30.if.end15.sink.split.i.i.i.i35_crit_edge ], [ 1, %if.else.i.i.i.i33.if.end15.sink.split.i.i.i.i35_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %count.i26, i32 noundef %.sink.i.i.i.i34) #26
  br label %get_user_ns.exit

get_user_ns.exit:                                 ; preds = %if.end15.sink.split.i.i.i.i35, %if.else.i.i.i.i33.get_user_ns.exit_crit_edge, %put_user_ns.exit.get_user_ns.exit_crit_edge
  %25 = ptrtoint ptr %user_ns to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %22, ptr %user_ns, align 4
  %global = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 17
  %26 = ptrtoint ptr %global to i32
  call void @__asan_load4_noabort(i32 %26)
  %bf.load = load i32, ptr %global, align 4
  %bf.set = or i32 %bf.load, 16384
  store i32 %bf.set, ptr %global, align 4
  br label %cleanup

cleanup:                                          ; preds = %get_user_ns.exit, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %get_user_ns.exit ], [ -12, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @cgroup_kill_sb(ptr noundef %sb) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @kernfs_root_from_sb(ptr noundef %sb) #26
  %0 = ptrtoint ptr %call to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %call, align 4
  %priv.i = getelementptr inbounds %struct.kernfs_node, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %priv.i, align 8
  %root.i = getelementptr inbounds %struct.cgroup, ptr %3, i32 0, i32 19
  %4 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %root.i, align 4
  %cgrp = getelementptr inbounds %struct.cgroup_root, ptr %5, i32 0, i32 3
  %children = getelementptr inbounds %struct.cgroup_root, ptr %5, i32 0, i32 3, i32 0, i32 4
  %6 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %children, align 4
  %cmp.i = icmp ne ptr %7, %children
  %cmp.not = icmp eq ptr %5, @cgrp_dfl_root
  %or.cond = or i1 %cmp.not, %cmp.i
  br i1 %or.cond, label %entry.if.end_crit_edge, label %land.lhs.true3

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.lhs.true3:                                   ; preds = %entry
  %refcnt = getelementptr inbounds %struct.cgroup_root, ptr %5, i32 0, i32 3, i32 0, i32 2
  %8 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %refcnt, align 4
  %and.i = and i32 %9, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.i.not = icmp eq i32 %and.i, 0
  br i1 %tobool.i.not, label %if.then, label %land.lhs.true3.if.end_crit_edge

land.lhs.true3.if.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.then:                                          ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @cgroup_bpf_offline(ptr noundef %cgrp) #26
  tail call void @percpu_ref_kill_and_confirm(ptr noundef %refcnt, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true3.if.end_crit_edge, %entry.if.end_crit_edge
  %flags.i.i = getelementptr inbounds %struct.cgroup_root, ptr %5, i32 0, i32 3, i32 0, i32 7
  %10 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.end.cgroup_put.exit_crit_edge

if.end.cgroup_put.exit_crit_edge:                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_put.exit

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i = getelementptr inbounds %struct.cgroup_root, ptr %5, i32 0, i32 3, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i) #26
  br label %cgroup_put.exit

cgroup_put.exit:                                  ; preds = %if.then.i.i, %if.end.cgroup_put.exit_crit_edge
  tail call void @kernfs_kill_sb(ptr noundef %sb) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_path_ns_locked(ptr nocapture noundef readonly %cgrp, ptr noundef %buf, i32 noundef %buflen, ptr nocapture noundef readonly %ns) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %root_cset = getelementptr inbounds %struct.cgroup_namespace, ptr %ns, i32 0, i32 3
  %0 = ptrtoint ptr %root_cset to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root_cset, align 4
  %root1 = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 19
  %2 = ptrtoint ptr %root1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %root1, align 4
  %call = tail call fastcc ptr @cset_cgroup_from_root(ptr noundef %1, ptr noundef %3)
  %kn = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 11
  %4 = ptrtoint ptr %kn to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %kn, align 8
  %kn2 = getelementptr inbounds %struct.cgroup, ptr %call, i32 0, i32 11
  %6 = ptrtoint ptr %kn2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %kn2, align 8
  %call3 = tail call i32 @kernfs_path_from_node(ptr noundef %5, ptr noundef %7, ptr noundef %buf, i32 noundef %buflen) #26
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_path_ns(ptr nocapture noundef readonly %cgrp, ptr noundef %buf, i32 noundef %buflen, ptr nocapture noundef readonly %ns) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @cgroup_mutex, i32 noundef 0) #26
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %root_cset.i = getelementptr inbounds %struct.cgroup_namespace, ptr %ns, i32 0, i32 3
  %0 = ptrtoint ptr %root_cset.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root_cset.i, align 4
  %root1.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 19
  %2 = ptrtoint ptr %root1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %root1.i, align 4
  %call.i = tail call fastcc ptr @cset_cgroup_from_root(ptr noundef %1, ptr noundef %3) #26
  %kn.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 11
  %4 = ptrtoint ptr %kn.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %kn.i, align 8
  %kn2.i = getelementptr inbounds %struct.cgroup, ptr %call.i, i32 0, i32 11
  %6 = ptrtoint ptr %kn2.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %kn2.i, align 8
  %call3.i = tail call i32 @kernfs_path_from_node(ptr noundef %5, ptr noundef %7, ptr noundef %buf, i32 noundef %buflen) #26
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  tail call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  ret i32 %call3.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @task_cgroup_path(ptr noundef %task, ptr noundef %buf, i32 noundef %buflen) #0 align 64 {
entry:
  %hierarchy_id = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %hierarchy_id) #26
  %0 = ptrtoint ptr %hierarchy_id to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 1, ptr %hierarchy_id, align 4
  tail call void @mutex_lock_nested(ptr noundef nonnull @cgroup_mutex, i32 noundef 0) #26
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %call = call ptr @idr_get_next(ptr noundef nonnull @cgroup_hierarchy_idr, ptr noundef nonnull %hierarchy_id) #26
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %call1 = call ptr @task_cgroup_from_root(ptr noundef %task, ptr noundef nonnull %call)
  %1 = load ptr, ptr getelementptr inbounds (%struct.cgroup_namespace, ptr @init_cgroup_ns, i32 0, i32 3), align 4
  %root1.i = getelementptr inbounds %struct.cgroup, ptr %call1, i32 0, i32 19
  %2 = ptrtoint ptr %root1.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %root1.i, align 4
  %call.i = call fastcc ptr @cset_cgroup_from_root(ptr noundef %1, ptr noundef %3) #26
  %kn.i = getelementptr inbounds %struct.cgroup, ptr %call1, i32 0, i32 11
  %4 = ptrtoint ptr %kn.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %kn.i, align 8
  %kn2.i = getelementptr inbounds %struct.cgroup, ptr %call.i, i32 0, i32 11
  %6 = ptrtoint ptr %kn2.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %kn2.i, align 8
  %call3.i = call i32 @kernfs_path_from_node(ptr noundef %5, ptr noundef %7, ptr noundef %buf, i32 noundef %buflen) #26
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %call3 = call i32 @strlcpy(ptr noundef %buf, ptr noundef nonnull @.str.13, i32 noundef %buflen) #26
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %ret.0 = phi i32 [ %call3.i, %if.then ], [ %call3, %if.else ]
  call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %hierarchy_id) #26
  ret i32 %ret.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idr_get_next(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nofree null_pointer_is_valid
declare dso_local i32 @strlcpy(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #8

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @cgroup_taskset_first(ptr nocapture noundef %tset, ptr nocapture noundef writeonly %dst_cssp) local_unnamed_addr #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %csets = getelementptr inbounds %struct.cgroup_taskset, ptr %tset, i32 0, i32 4
  %0 = ptrtoint ptr %csets to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %csets, align 4
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %add.ptr = getelementptr i8, ptr %3, i32 -256
  %cur_cset = getelementptr inbounds %struct.cgroup_taskset, ptr %tset, i32 0, i32 5
  %4 = ptrtoint ptr %cur_cset to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %add.ptr, ptr %cur_cset, align 4
  %cur_task = getelementptr inbounds %struct.cgroup_taskset, ptr %tset, i32 0, i32 6
  %5 = ptrtoint ptr %cur_task to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr null, ptr %cur_task, align 4
  %cmp.not46.i = icmp eq ptr %3, %1
  br i1 %cmp.not46.i, label %entry.cgroup_taskset_next.exit_crit_edge, label %entry.while.body.i_crit_edge

entry.while.body.i_crit_edge:                     ; preds = %entry
  br label %while.body.i

entry.cgroup_taskset_next.exit_crit_edge:         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_taskset_next.exit

while.body.i:                                     ; preds = %if.end19.i.while.body.i_crit_edge, %entry.while.body.i_crit_edge
  %mg_node49.i = phi ptr [ %16, %if.end19.i.while.body.i_crit_edge ], [ %3, %entry.while.body.i_crit_edge ]
  %cset.048.i = phi ptr [ %add.ptr24.i, %if.end19.i.while.body.i_crit_edge ], [ %add.ptr, %entry.while.body.i_crit_edge ]
  %mg_tasks.i = getelementptr inbounds %struct.css_set, ptr %cset.048.i, i32 0, i32 6
  %6 = ptrtoint ptr %mg_tasks.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn.i = load ptr, ptr %mg_tasks.i, align 4
  %cmp7.not.i = icmp eq ptr %.pn.i, %mg_tasks.i
  br i1 %cmp7.not.i, label %if.end19.i, label %if.then8.i

if.then8.i:                                       ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #28
  %task.1.le.i = getelementptr i8, ptr %.pn.i, i32 -4468
  %7 = ptrtoint ptr %cur_cset to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %cset.048.i, ptr %cur_cset, align 4
  %8 = ptrtoint ptr %cur_task to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %task.1.le.i, ptr %cur_task, align 4
  %mg_dst_cset.i = getelementptr inbounds %struct.css_set, ptr %cset.048.i, i32 0, i32 18
  %9 = ptrtoint ptr %mg_dst_cset.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %mg_dst_cset.i, align 4
  %tobool11.not.i = icmp eq ptr %10, null
  %ssid16.i = getelementptr inbounds %struct.cgroup_taskset, ptr %tset, i32 0, i32 3
  %11 = ptrtoint ptr %ssid16.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %ssid16.i, align 4
  %cset.048.lcssa..i = select i1 %tobool11.not.i, ptr %cset.048.i, ptr %10
  %arrayidx17.i = getelementptr [14 x ptr], ptr %cset.048.lcssa..i, i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx17.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %storemerge.i = load ptr, ptr %arrayidx17.i, align 4
  %14 = ptrtoint ptr %dst_cssp to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %storemerge.i, ptr %dst_cssp, align 4
  br label %cgroup_taskset_next.exit

if.end19.i:                                       ; preds = %while.body.i
  %15 = ptrtoint ptr %mg_node49.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %mg_node49.i, align 4
  %add.ptr24.i = getelementptr i8, ptr %16, i32 -256
  %cmp.not.i = icmp eq ptr %16, %1
  br i1 %cmp.not.i, label %if.end19.i.cgroup_taskset_next.exit_crit_edge, label %if.end19.i.while.body.i_crit_edge

if.end19.i.while.body.i_crit_edge:                ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.body.i

if.end19.i.cgroup_taskset_next.exit_crit_edge:    ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_taskset_next.exit

cgroup_taskset_next.exit:                         ; preds = %if.end19.i.cgroup_taskset_next.exit_crit_edge, %if.then8.i, %entry.cgroup_taskset_next.exit_crit_edge
  %retval.0.i = phi ptr [ %task.1.le.i, %if.then8.i ], [ null, %entry.cgroup_taskset_next.exit_crit_edge ], [ null, %if.end19.i.cgroup_taskset_next.exit_crit_edge ]
  ret ptr %retval.0.i
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @cgroup_taskset_next(ptr nocapture noundef %tset, ptr nocapture noundef writeonly %dst_cssp) local_unnamed_addr #9 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %cur_cset = getelementptr inbounds %struct.cgroup_taskset, ptr %tset, i32 0, i32 5
  %0 = ptrtoint ptr %cur_cset to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cur_cset, align 4
  %cur_task = getelementptr inbounds %struct.cgroup_taskset, ptr %tset, i32 0, i32 6
  %csets = getelementptr inbounds %struct.cgroup_taskset, ptr %tset, i32 0, i32 4
  %2 = ptrtoint ptr %csets to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %csets, align 4
  %mg_node45 = getelementptr inbounds %struct.css_set, ptr %1, i32 0, i32 15
  %cmp.not46 = icmp eq ptr %mg_node45, %3
  br i1 %cmp.not46, label %entry.cleanup_crit_edge, label %while.body.preheader

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

while.body.preheader:                             ; preds = %entry
  %4 = ptrtoint ptr %cur_task to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cur_task, align 4
  br label %while.body

while.body:                                       ; preds = %if.end19.while.body_crit_edge, %while.body.preheader
  %mg_node49 = phi ptr [ %16, %if.end19.while.body_crit_edge ], [ %mg_node45, %while.body.preheader ]
  %cset.048 = phi ptr [ %add.ptr24, %if.end19.while.body_crit_edge ], [ %1, %while.body.preheader ]
  %task.047 = phi ptr [ null, %if.end19.while.body_crit_edge ], [ %5, %while.body.preheader ]
  %tobool.not = icmp eq ptr %task.047, null
  %cg_list = getelementptr inbounds %struct.task_struct, ptr %task.047, i32 0, i32 165
  %mg_tasks = getelementptr inbounds %struct.css_set, ptr %cset.048, i32 0, i32 6
  %.pn.in = select i1 %tobool.not, ptr %mg_tasks, ptr %cg_list
  %6 = ptrtoint ptr %.pn.in to i32
  call void @__asan_load4_noabort(i32 %6)
  %.pn = load ptr, ptr %.pn.in, align 4
  %cmp7.not = icmp eq ptr %.pn, %mg_tasks
  br i1 %cmp7.not, label %if.end19, label %if.then8

if.then8:                                         ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #28
  %task.1.le = getelementptr i8, ptr %.pn, i32 -4468
  %7 = ptrtoint ptr %cur_cset to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %cset.048, ptr %cur_cset, align 4
  %8 = ptrtoint ptr %cur_task to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %task.1.le, ptr %cur_task, align 4
  %mg_dst_cset = getelementptr inbounds %struct.css_set, ptr %cset.048, i32 0, i32 18
  %9 = ptrtoint ptr %mg_dst_cset to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %mg_dst_cset, align 4
  %tobool11.not = icmp eq ptr %10, null
  %ssid16 = getelementptr inbounds %struct.cgroup_taskset, ptr %tset, i32 0, i32 3
  %11 = ptrtoint ptr %ssid16 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %ssid16, align 4
  %cset.048.lcssa. = select i1 %tobool11.not, ptr %cset.048, ptr %10
  %arrayidx17 = getelementptr [14 x ptr], ptr %cset.048.lcssa., i32 0, i32 %12
  %13 = ptrtoint ptr %arrayidx17 to i32
  call void @__asan_load4_noabort(i32 %13)
  %storemerge = load ptr, ptr %arrayidx17, align 4
  %14 = ptrtoint ptr %dst_cssp to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr %storemerge, ptr %dst_cssp, align 4
  br label %cleanup

if.end19:                                         ; preds = %while.body
  %15 = ptrtoint ptr %mg_node49 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %mg_node49, align 4
  %add.ptr24 = getelementptr i8, ptr %16, i32 -256
  %cmp.not = icmp eq ptr %16, %3
  br i1 %cmp.not, label %if.end19.cleanup_crit_edge, label %if.end19.while.body_crit_edge

if.end19.while.body_crit_edge:                    ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.body

if.end19.cleanup_crit_edge:                       ; preds = %if.end19
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

cleanup:                                          ; preds = %if.end19.cleanup_crit_edge, %if.then8, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %task.1.le, %if.then8 ], [ null, %entry.cleanup_crit_edge ], [ null, %if.end19.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_migrate_vet_dst(ptr noundef readonly %dst_cgrp) local_unnamed_addr #10 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %root.i = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 19
  %0 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %root.i, align 4
  %cmp.i = icmp eq ptr %1, @cgrp_dfl_root
  br i1 %cmp.i, label %if.end, label %entry.return_crit_edge

entry.return_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %return

if.end:                                           ; preds = %entry
  %dom_cgrp = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 22
  %2 = ptrtoint ptr %dom_cgrp to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %dom_cgrp, align 8
  %dom_cgrp.i.i = getelementptr inbounds %struct.cgroup, ptr %3, i32 0, i32 22
  %4 = ptrtoint ptr %dom_cgrp.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dom_cgrp.i.i, align 8
  %cmp.i.not.i = icmp eq ptr %5, %3
  br i1 %cmp.i.not.i, label %if.end.while.cond.i_crit_edge, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %return

if.end.while.cond.i_crit_edge:                    ; preds = %if.end
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.end5.i.while.cond.i_crit_edge, %if.end.while.cond.i_crit_edge
  %cgrp.addr.0.i = phi ptr [ %7, %if.end5.i.while.cond.i_crit_edge ], [ %3, %if.end.while.cond.i_crit_edge ]
  %parent.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.addr.0.i, i32 0, i32 12
  %6 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %parent.i.i, align 8
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %if.end3, label %while.body.i

while.body.i:                                     ; preds = %while.cond.i
  %parent.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %7, i32 0, i32 12
  %8 = ptrtoint ptr %parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %parent.i.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i.i, label %while.body.i.if.end5.i_crit_edge, label %land.lhs.true.i

while.body.i.if.end5.i_crit_edge:                 ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i

land.lhs.true.i:                                  ; preds = %while.body.i
  %dom_cgrp.i.i.i = getelementptr inbounds %struct.cgroup, ptr %7, i32 0, i32 22
  %10 = ptrtoint ptr %dom_cgrp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %dom_cgrp.i.i.i, align 8
  %cmp.i.not.i.i = icmp eq ptr %11, %7
  br i1 %cmp.i.not.i.i, label %if.end.i.i, label %land.lhs.true.i.if.end5.i_crit_edge

land.lhs.true.i.if.end5.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i

if.end.i.i:                                       ; preds = %land.lhs.true.i
  %nr_threaded_children.i.i = getelementptr inbounds %struct.cgroup, ptr %7, i32 0, i32 10
  %12 = ptrtoint ptr %nr_threaded_children.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %nr_threaded_children.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.i13.i = icmp eq i32 %13, 0
  br i1 %tobool.not.i13.i, label %if.end2.i.i, label %if.end.i.i.return_crit_edge

if.end.i.i.return_crit_edge:                      ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %return

if.end2.i.i:                                      ; preds = %if.end.i.i
  %nr_populated_csets.i.i.i = getelementptr inbounds %struct.cgroup, ptr %7, i32 0, i32 7
  %14 = ptrtoint ptr %nr_populated_csets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %nr_populated_csets.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.i.not.i.i = icmp eq i32 %15, 0
  br i1 %tobool.i.not.i.i, label %if.end2.i.i.if.end5.i_crit_edge, label %land.lhs.true.i.i

if.end2.i.i.if.end5.i_crit_edge:                  ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %subtree_control.i.i = getelementptr inbounds %struct.cgroup, ptr %7, i32 0, i32 14
  %16 = ptrtoint ptr %subtree_control.i.i to i32
  call void @__asan_load2_noabort(i32 %16)
  %17 = load i16, ptr %subtree_control.i.i, align 4
  %18 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %and11.i.i = and i16 %18, %17
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %and11.i.i)
  %tobool5.not.i.i = icmp eq i16 %and11.i.i, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true.i.i.if.end5.i_crit_edge, label %land.lhs.true.i.i.return_crit_edge

land.lhs.true.i.i.return_crit_edge:               ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %return

land.lhs.true.i.i.if.end5.i_crit_edge:            ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i

if.end5.i:                                        ; preds = %land.lhs.true.i.i.if.end5.i_crit_edge, %if.end2.i.i.if.end5.i_crit_edge, %land.lhs.true.i.if.end5.i_crit_edge, %while.body.i.if.end5.i_crit_edge
  %dom_cgrp.i14.i = getelementptr inbounds %struct.cgroup, ptr %7, i32 0, i32 22
  %19 = ptrtoint ptr %dom_cgrp.i14.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %dom_cgrp.i14.i, align 8
  %cmp.i15.not.i = icmp eq ptr %20, %7
  br i1 %cmp.i15.not.i, label %if.end5.i.while.cond.i_crit_edge, label %if.end5.i.return_crit_edge

if.end5.i.return_crit_edge:                       ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %return

if.end5.i.while.cond.i_crit_edge:                 ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.cond.i

if.end3:                                          ; preds = %while.cond.i
  %parent.i.i18 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %dst_cgrp, i32 0, i32 12
  %21 = ptrtoint ptr %parent.i.i18 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %parent.i.i18, align 8
  %tobool.not.i19 = icmp ne ptr %22, null
  %cmp.i.not.i23 = icmp eq ptr %3, %dst_cgrp
  %or.cond = select i1 %tobool.not.i19, i1 %cmp.i.not.i23, i1 false
  br i1 %or.cond, label %if.end3.i, label %if.end3.return_crit_edge

if.end3.return_crit_edge:                         ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #28
  br label %return

if.end3.i:                                        ; preds = %if.end3
  %nr_populated_domain_children.i = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 8
  %23 = ptrtoint ptr %nr_populated_domain_children.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %nr_populated_domain_children.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool.not.i24 = icmp eq i32 %24, 0
  br i1 %tobool.not.i24, label %cgroup_can_be_thread_root.exit, label %if.end3.i.if.end10_crit_edge

if.end3.i.if.end10_crit_edge:                     ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end10

cgroup_can_be_thread_root.exit:                   ; preds = %if.end3.i
  %subtree_control.i = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 14
  %25 = ptrtoint ptr %subtree_control.i to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %subtree_control.i, align 4
  %conv.i = zext i16 %26 to i32
  %27 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %conv6.i = zext i16 %27 to i32
  %neg.i = xor i32 %conv6.i, -1
  %and.i = and i32 %neg.i, %conv.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool7.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool7.not.i, label %cgroup_can_be_thread_root.exit.return_crit_edge, label %cgroup_can_be_thread_root.exit.if.end10_crit_edge

cgroup_can_be_thread_root.exit.if.end10_crit_edge: ; preds = %cgroup_can_be_thread_root.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end10

cgroup_can_be_thread_root.exit.return_crit_edge:  ; preds = %cgroup_can_be_thread_root.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %return

if.end10:                                         ; preds = %cgroup_can_be_thread_root.exit.if.end10_crit_edge, %if.end3.i.if.end10_crit_edge
  %subtree_control = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 14
  %28 = ptrtoint ptr %subtree_control to i32
  call void @__asan_load2_noabort(i32 %28)
  %29 = load i16, ptr %subtree_control, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %29)
  %tobool.not = icmp eq i16 %29, 0
  %. = select i1 %tobool.not, i32 0, i32 -16
  br label %return

return:                                           ; preds = %if.end10, %cgroup_can_be_thread_root.exit.return_crit_edge, %if.end3.return_crit_edge, %if.end5.i.return_crit_edge, %land.lhs.true.i.i.return_crit_edge, %if.end.i.i.return_crit_edge, %if.end.return_crit_edge, %entry.return_crit_edge
  %retval.0 = phi i32 [ 0, %entry.return_crit_edge ], [ 0, %if.end3.return_crit_edge ], [ 0, %cgroup_can_be_thread_root.exit.return_crit_edge ], [ %., %if.end10 ], [ -95, %if.end.return_crit_edge ], [ -95, %land.lhs.true.i.i.return_crit_edge ], [ -95, %if.end.i.i.return_crit_edge ], [ -95, %if.end5.i.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cgroup_migrate_finish(ptr noundef %mgctx) local_unnamed_addr #0 align 64 {
entry:
  %preloaded = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %preloaded) #26
  %0 = getelementptr inbounds %struct.list_head, ptr %preloaded, i32 0, i32 1
  %1 = ptrtoint ptr %preloaded to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr %preloaded, ptr %preloaded, align 4
  %2 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %preloaded, ptr %0, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %3 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool.not = icmp eq i32 %3, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 2603, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %4 = ptrtoint ptr %mgctx to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %mgctx, align 4
  %cmp.i.not.i = icmp eq ptr %5, %mgctx
  br i1 %cmp.i.not.i, label %if.end.list_splice_tail_init.exit_crit_edge, label %if.then.i

if.end.list_splice_tail_init.exit_crit_edge:      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_splice_tail_init.exit

if.then.i:                                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  %6 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %0, align 4
  %prev2.i.i = getelementptr inbounds %struct.list_head, ptr %mgctx, i32 0, i32 1
  %8 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %prev2.i.i, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  %10 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %7, ptr %prev3.i.i, align 4
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %5, ptr %7, align 4
  %12 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %preloaded, ptr %9, align 4
  store ptr %9, ptr %0, align 4
  %13 = ptrtoint ptr %mgctx to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr %mgctx, ptr %mgctx, align 4
  store ptr %mgctx, ptr %prev2.i.i, align 4
  br label %list_splice_tail_init.exit

list_splice_tail_init.exit:                       ; preds = %if.then.i, %if.end.list_splice_tail_init.exit_crit_edge
  %preloaded_dst_csets = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 1
  %14 = ptrtoint ptr %preloaded_dst_csets to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %preloaded_dst_csets, align 4
  %cmp.i.not.i50 = icmp eq ptr %15, %preloaded_dst_csets
  br i1 %cmp.i.not.i50, label %list_splice_tail_init.exit.list_splice_tail_init.exit55_crit_edge, label %if.then.i54

list_splice_tail_init.exit.list_splice_tail_init.exit55_crit_edge: ; preds = %list_splice_tail_init.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_splice_tail_init.exit55

if.then.i54:                                      ; preds = %list_splice_tail_init.exit
  call void @__sanitizer_cov_trace_pc() #28
  %16 = ptrtoint ptr %0 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %0, align 4
  %prev2.i.i52 = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 1, i32 1
  %18 = ptrtoint ptr %prev2.i.i52 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %prev2.i.i52, align 4
  %prev3.i.i53 = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  %20 = ptrtoint ptr %prev3.i.i53 to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %17, ptr %prev3.i.i53, align 4
  %21 = ptrtoint ptr %17 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %15, ptr %17, align 4
  %22 = ptrtoint ptr %19 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %preloaded, ptr %19, align 4
  store ptr %19, ptr %0, align 4
  %23 = ptrtoint ptr %preloaded_dst_csets to i32
  call void @__asan_store4_noabort(i32 %23)
  store volatile ptr %preloaded_dst_csets, ptr %preloaded_dst_csets, align 4
  store ptr %preloaded_dst_csets, ptr %prev2.i.i52, align 4
  br label %list_splice_tail_init.exit55

list_splice_tail_init.exit55:                     ; preds = %if.then.i54, %list_splice_tail_init.exit.list_splice_tail_init.exit55_crit_edge
  %24 = ptrtoint ptr %preloaded to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %preloaded, align 4
  %cmp31.not56 = icmp eq ptr %25, %preloaded
  br i1 %cmp31.not56, label %list_splice_tail_init.exit55.for.end_crit_edge, label %list_splice_tail_init.exit55.for.body_crit_edge

list_splice_tail_init.exit55.for.body_crit_edge:  ; preds = %list_splice_tail_init.exit55
  br label %for.body

list_splice_tail_init.exit55.for.end_crit_edge:   ; preds = %list_splice_tail_init.exit55
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.body:                                         ; preds = %list_del_init.exit.for.body_crit_edge, %list_splice_tail_init.exit55.for.body_crit_edge
  %.pn.in57 = phi ptr [ %.pn, %list_del_init.exit.for.body_crit_edge ], [ %25, %list_splice_tail_init.exit55.for.body_crit_edge ]
  %cset.0 = getelementptr i8, ptr %.pn.in57, i32 -248
  %26 = ptrtoint ptr %.pn.in57 to i32
  call void @__asan_load4_noabort(i32 %26)
  %.pn = load ptr, ptr %.pn.in57, align 4
  %mg_src_cgrp = getelementptr i8, ptr %.pn.in57, i32 16
  %27 = ptrtoint ptr %mg_src_cgrp to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr null, ptr %mg_src_cgrp, align 4
  %mg_dst_cgrp = getelementptr i8, ptr %.pn.in57, i32 20
  %28 = ptrtoint ptr %mg_dst_cgrp to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr null, ptr %mg_dst_cgrp, align 4
  %mg_dst_cset = getelementptr i8, ptr %.pn.in57, i32 24
  %29 = ptrtoint ptr %mg_dst_cset to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr null, ptr %mg_dst_cset, align 4
  %call.i.i = call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in57) #26
  br i1 %call.i.i, label %if.end.i.i, label %for.body.list_del_init.exit_crit_edge

for.body.list_del_init.exit_crit_edge:            ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in57, i32 0, i32 1
  %30 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %prev.i.i, align 4
  %32 = ptrtoint ptr %.pn.in57 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %.pn.in57, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %33, i32 0, i32 1
  %34 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %34)
  store ptr %31, ptr %prev1.i.i.i, align 4
  %35 = ptrtoint ptr %31 to i32
  call void @__asan_store4_noabort(i32 %35)
  store volatile ptr %33, ptr %31, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %for.body.list_del_init.exit_crit_edge
  %36 = ptrtoint ptr %.pn.in57 to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %.pn.in57, ptr %.pn.in57, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %.pn.in57, i32 0, i32 1
  %37 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %.pn.in57, ptr %prev.i3.i, align 4
  call void @put_css_set_locked(ptr noundef %cset.0)
  %cmp31.not = icmp eq ptr %.pn, %preloaded
  br i1 %cmp31.not, label %list_del_init.exit.for.end_crit_edge, label %list_del_init.exit.for.body_crit_edge

list_del_init.exit.for.body_crit_edge:            ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

list_del_init.exit.for.end_crit_edge:             ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.end:                                          ; preds = %list_del_init.exit.for.end_crit_edge, %list_splice_tail_init.exit55.for.end_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %preloaded) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cgroup_migrate_add_src(ptr noundef %src_cset, ptr noundef %dst_cgrp, ptr noundef %mgctx) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end54_crit_edge, label %land.rhs

entry.if.end54_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end54

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 2643, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %.pr = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %tobool26.not = icmp eq i32 %.pr, 0
  br i1 %tobool26.not, label %if.end.if.end54_crit_edge, label %land.rhs27

if.end.if.end54_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end54

land.rhs27:                                       ; preds = %if.end
  %call.i222 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i222)
  %cmp29.not = icmp eq i32 %call.i222, 0
  br i1 %cmp29.not, label %do.end48, label %land.rhs27.if.end54_crit_edge, !prof !637

land.rhs27.if.end54_crit_edge:                    ; preds = %land.rhs27
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end54

do.end48:                                         ; preds = %land.rhs27
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 2644, i32 noundef 9, ptr noundef null) #26
  br label %if.end54

if.end54:                                         ; preds = %do.end48, %land.rhs27.if.end54_crit_edge, %if.end.if.end54_crit_edge, %entry.if.end54_crit_edge
  %dead = getelementptr inbounds %struct.css_set, ptr %src_cset, i32 0, i32 19
  %1 = ptrtoint ptr %dead to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %dead, align 4, !range !654
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool64.not = icmp eq i8 %2, 0
  br i1 %tobool64.not, label %if.end66, label %if.end54.cleanup_crit_edge

if.end54.cleanup_crit_edge:                       ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end66:                                         ; preds = %if.end54
  %mg_preload_node = getelementptr inbounds %struct.css_set, ptr %src_cset, i32 0, i32 14
  %3 = ptrtoint ptr %mg_preload_node to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %mg_preload_node, align 4
  %cmp.i.not = icmp eq ptr %4, %mg_preload_node
  br i1 %cmp.i.not, label %if.end70, label %if.end66.cleanup_crit_edge

if.end66.cleanup_crit_edge:                       ; preds = %if.end66
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end70:                                         ; preds = %if.end66
  %root = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 19
  %5 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %root, align 4
  %call71 = tail call fastcc ptr @cset_cgroup_from_root(ptr noundef %src_cset, ptr noundef %6)
  %mg_src_cgrp = getelementptr inbounds %struct.css_set, ptr %src_cset, i32 0, i32 16
  %7 = ptrtoint ptr %mg_src_cgrp to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %mg_src_cgrp, align 4
  %tobool73.not = icmp eq ptr %8, null
  br i1 %tobool73.not, label %if.end70.if.end95_crit_edge, label %do.end89, !prof !636

if.end70.if.end95_crit_edge:                      ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end95

do.end89:                                         ; preds = %if.end70
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 2659, i32 noundef 9, ptr noundef null) #26
  br label %if.end95

if.end95:                                         ; preds = %do.end89, %if.end70.if.end95_crit_edge
  %mg_dst_cgrp = getelementptr inbounds %struct.css_set, ptr %src_cset, i32 0, i32 17
  %9 = ptrtoint ptr %mg_dst_cgrp to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %mg_dst_cgrp, align 4
  %tobool104.not = icmp eq ptr %10, null
  br i1 %tobool104.not, label %if.end95.if.end126_crit_edge, label %do.end120, !prof !636

if.end95.if.end126_crit_edge:                     ; preds = %if.end95
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end126

do.end120:                                        ; preds = %if.end95
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 2660, i32 noundef 9, ptr noundef null) #26
  br label %if.end126

if.end126:                                        ; preds = %do.end120, %if.end95.if.end126_crit_edge
  %mg_tasks = getelementptr inbounds %struct.css_set, ptr %src_cset, i32 0, i32 6
  %11 = ptrtoint ptr %mg_tasks to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %mg_tasks, align 4
  %cmp.i223.not = icmp eq ptr %12, %mg_tasks
  br i1 %cmp.i223.not, label %if.end126.if.end160_crit_edge, label %do.end154, !prof !636

if.end126.if.end160_crit_edge:                    ; preds = %if.end126
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end160

do.end154:                                        ; preds = %if.end126
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 2661, i32 noundef 9, ptr noundef null) #26
  br label %if.end160

if.end160:                                        ; preds = %do.end154, %if.end126.if.end160_crit_edge
  %mg_node = getelementptr inbounds %struct.css_set, ptr %src_cset, i32 0, i32 15
  %13 = ptrtoint ptr %mg_node to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %mg_node, align 4
  %cmp.i225.not = icmp eq ptr %14, %mg_node
  br i1 %cmp.i225.not, label %if.end160.if.end194_crit_edge, label %do.end188, !prof !636

if.end160.if.end194_crit_edge:                    ; preds = %if.end160
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end194

do.end188:                                        ; preds = %if.end160
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 2662, i32 noundef 9, ptr noundef null) #26
  br label %if.end194

if.end194:                                        ; preds = %do.end188, %if.end160.if.end194_crit_edge
  %15 = ptrtoint ptr %mg_src_cgrp to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %call71, ptr %mg_src_cgrp, align 4
  %16 = ptrtoint ptr %mg_dst_cgrp to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %dst_cgrp, ptr %mg_dst_cgrp, align 4
  %refcount.i = getelementptr inbounds %struct.css_set, ptr %src_cset, i32 0, i32 1
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #26
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #26
  %17 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #26, !srcloc !663
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %17, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end194.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !637

if.end194.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.end194
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end194
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %18 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %18)
  %.not.i.i.i.i = icmp sgt i32 %18, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.get_css_set.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !636

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.get_css_set.exit_crit_edge:       ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %get_css_set.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end194.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end194.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef %.sink.i.i.i.i) #26
  br label %get_css_set.exit

get_css_set.exit:                                 ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.get_css_set.exit_crit_edge
  %prev.i = getelementptr inbounds %struct.list_head, ptr %mgctx, i32 0, i32 1
  %19 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %mg_preload_node, ptr noundef %20, ptr noundef %mgctx) #26
  br i1 %call.i.i, label %if.end.i.i, label %get_css_set.exit.cleanup_crit_edge

get_css_set.exit.cleanup_crit_edge:               ; preds = %get_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end.i.i:                                       ; preds = %get_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  %21 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %mg_preload_node, ptr %prev.i, align 4
  %22 = ptrtoint ptr %mg_preload_node to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %mgctx, ptr %mg_preload_node, align 4
  %prev3.i.i = getelementptr inbounds %struct.css_set, ptr %src_cset, i32 0, i32 14, i32 1
  %23 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %20, ptr %prev3.i.i, align 4
  %24 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %mg_preload_node, ptr %20, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i, %get_css_set.exit.cleanup_crit_edge, %if.end66.cleanup_crit_edge, %if.end54.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_migrate_prepare_dst(ptr noundef %mgctx) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 2688, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %1 = ptrtoint ptr %mgctx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %mgctx, align 4
  %cmp31.not181 = icmp eq ptr %2, %mgctx
  br i1 %cmp31.not181, label %if.end.cleanup128_crit_edge, label %for.body.lr.ph

if.end.cleanup128_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup128

for.body.lr.ph:                                   ; preds = %if.end
  %preloaded_dst_csets = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 1
  %prev.i = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 1, i32 1
  %ss_mask = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.inc121.for.body_crit_edge, %for.body.lr.ph
  %.pn.in182 = phi ptr [ %2, %for.body.lr.ph ], [ %.pn184, %for.inc121.for.body_crit_edge ]
  %src_cset.0183 = getelementptr i8, ptr %.pn.in182, i32 -248
  %3 = ptrtoint ptr %.pn.in182 to i32
  call void @__asan_load4_noabort(i32 %3)
  %.pn184 = load ptr, ptr %.pn.in182, align 4
  %mg_dst_cgrp = getelementptr i8, ptr %.pn.in182, i32 20
  %4 = ptrtoint ptr %mg_dst_cgrp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %mg_dst_cgrp, align 4
  %call34 = tail call fastcc ptr @find_css_set(ptr noundef %src_cset.0183, ptr noundef %5)
  %tobool35.not = icmp eq ptr %call34, null
  br i1 %tobool35.not, label %for.body.cleanup128_crit_edge, label %if.end37

for.body.cleanup128_crit_edge:                    ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup128

if.end37:                                         ; preds = %for.body
  %mg_dst_cset = getelementptr i8, ptr %.pn.in182, i32 24
  %6 = ptrtoint ptr %mg_dst_cset to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %mg_dst_cset, align 4
  %tobool38.not = icmp eq ptr %7, null
  br i1 %tobool38.not, label %lor.rhs, label %if.end37.land.rhs46_crit_edge

if.end37.land.rhs46_crit_edge:                    ; preds = %if.end37
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs46

lor.rhs:                                          ; preds = %if.end37
  %mg_dst_cset39 = getelementptr inbounds %struct.css_set, ptr %call34, i32 0, i32 18
  %8 = ptrtoint ptr %mg_dst_cset39 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %mg_dst_cset39, align 4
  %tobool40.not = icmp eq ptr %9, null
  br i1 %tobool40.not, label %lor.rhs.if.end84_crit_edge, label %lor.rhs.land.rhs46_crit_edge

lor.rhs.land.rhs46_crit_edge:                     ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs46

lor.rhs.if.end84_crit_edge:                       ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end84

land.rhs46:                                       ; preds = %lor.rhs.land.rhs46_crit_edge, %if.end37.land.rhs46_crit_edge
  %.b161 = load i1, ptr @cgroup_migrate_prepare_dst.__already_done, align 1
  br i1 %.b161, label %land.rhs46.if.end84_crit_edge, label %if.then57, !prof !636

land.rhs46.if.end84_crit_edge:                    ; preds = %land.rhs46
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end84

if.then57:                                        ; preds = %land.rhs46
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_migrate_prepare_dst.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 2701, i32 noundef 9, ptr noundef null) #26
  br label %if.end84

if.end84:                                         ; preds = %if.then57, %land.rhs46.if.end84_crit_edge, %lor.rhs.if.end84_crit_edge
  %cmp92 = icmp eq ptr %src_cset.0183, %call34
  br i1 %cmp92, label %if.then93, label %if.end96

if.then93:                                        ; preds = %if.end84
  %mg_src_cgrp = getelementptr i8, ptr %.pn.in182, i32 16
  %10 = ptrtoint ptr %mg_src_cgrp to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr null, ptr %mg_src_cgrp, align 4
  %11 = ptrtoint ptr %mg_dst_cgrp to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr null, ptr %mg_dst_cgrp, align 4
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in182) #26
  br i1 %call.i.i, label %if.end.i.i, label %if.then93.list_del_init.exit_crit_edge

if.then93.list_del_init.exit_crit_edge:           ; preds = %if.then93
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %if.then93
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in182, i32 0, i32 1
  %12 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %prev.i.i, align 4
  %14 = ptrtoint ptr %.pn.in182 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %.pn.in182, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %15, i32 0, i32 1
  %16 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %13, ptr %prev1.i.i.i, align 4
  %17 = ptrtoint ptr %13 to i32
  call void @__asan_store4_noabort(i32 %17)
  store volatile ptr %15, ptr %13, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %if.then93.list_del_init.exit_crit_edge
  %18 = ptrtoint ptr %.pn.in182 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %.pn.in182, ptr %.pn.in182, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %.pn.in182, i32 0, i32 1
  %19 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %.pn.in182, ptr %prev.i3.i, align 4
  %refcount.i = getelementptr i8, ptr %.pn.in182, i32 -192
  %call.i163 = tail call zeroext i1 @refcount_dec_not_one(ptr noundef %refcount.i) #26
  br i1 %call.i163, label %list_del_init.exit.put_css_set.exit_crit_edge, label %do.body1.i

list_del_init.exit.put_css_set.exit_crit_edge:    ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %put_css_set.exit

do.body1.i:                                       ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #28
  %call3.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @css_set_lock) #26
  tail call void @put_css_set_locked(ptr noundef %src_cset.0183) #26
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @css_set_lock, i32 noundef %call3.i) #26
  br label %put_css_set.exit

put_css_set.exit:                                 ; preds = %do.body1.i, %list_del_init.exit.put_css_set.exit_crit_edge
  %refcount.i164 = getelementptr i8, ptr %.pn.in182, i32 -192
  %call.i165 = tail call zeroext i1 @refcount_dec_not_one(ptr noundef %refcount.i164) #26
  br i1 %call.i165, label %put_css_set.exit.for.inc121_crit_edge, label %do.body1.i167

put_css_set.exit.for.inc121_crit_edge:            ; preds = %put_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc121

do.body1.i167:                                    ; preds = %put_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  %call3.i166 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @css_set_lock) #26
  tail call void @put_css_set_locked(ptr noundef nonnull %src_cset.0183) #26
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @css_set_lock, i32 noundef %call3.i166) #26
  br label %for.inc121

if.end96:                                         ; preds = %if.end84
  %20 = ptrtoint ptr %mg_dst_cset to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %call34, ptr %mg_dst_cset, align 4
  %mg_preload_node98 = getelementptr inbounds %struct.css_set, ptr %call34, i32 0, i32 14
  %21 = ptrtoint ptr %mg_preload_node98 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile ptr, ptr %mg_preload_node98, align 4
  %cmp.i.not = icmp eq ptr %22, %mg_preload_node98
  br i1 %cmp.i.not, label %if.then101, label %if.else

if.then101:                                       ; preds = %if.end96
  %23 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %prev.i, align 4
  %call.i.i169 = tail call zeroext i1 @__list_add_valid(ptr noundef %mg_preload_node98, ptr noundef %24, ptr noundef %preloaded_dst_csets) #26
  br i1 %call.i.i169, label %if.end.i.i170, label %if.then101.if.end103_crit_edge

if.then101.if.end103_crit_edge:                   ; preds = %if.then101
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end103

if.end.i.i170:                                    ; preds = %if.then101
  call void @__sanitizer_cov_trace_pc() #28
  %25 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %mg_preload_node98, ptr %prev.i, align 4
  %26 = ptrtoint ptr %mg_preload_node98 to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %preloaded_dst_csets, ptr %mg_preload_node98, align 4
  %prev3.i.i = getelementptr inbounds %struct.css_set, ptr %call34, i32 0, i32 14, i32 1
  %27 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %24, ptr %prev3.i.i, align 4
  %28 = ptrtoint ptr %24 to i32
  call void @__asan_store4_noabort(i32 %28)
  store volatile ptr %mg_preload_node98, ptr %24, align 4
  br label %if.end103

if.else:                                          ; preds = %if.end96
  %refcount.i171 = getelementptr inbounds %struct.css_set, ptr %call34, i32 0, i32 1
  %call.i172 = tail call zeroext i1 @refcount_dec_not_one(ptr noundef %refcount.i171) #26
  br i1 %call.i172, label %if.else.if.end103_crit_edge, label %do.body1.i174

if.else.if.end103_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end103

do.body1.i174:                                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  %call3.i173 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @css_set_lock) #26
  tail call void @put_css_set_locked(ptr noundef nonnull %call34) #26
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @css_set_lock, i32 noundef %call3.i173) #26
  br label %if.end103

if.end103:                                        ; preds = %do.body1.i174, %if.else.if.end103_crit_edge, %if.end.i.i170, %if.then101.if.end103_crit_edge
  %29 = ptrtoint ptr %src_cset.0183 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %src_cset.0183, align 4
  %31 = ptrtoint ptr %call34 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %call34, align 4
  %cmp115.not = icmp eq ptr %30, %32
  br i1 %cmp115.not, label %if.end103.for.inc_crit_edge, label %if.then116

if.end103.for.inc_crit_edge:                      ; preds = %if.end103
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

if.then116:                                       ; preds = %if.end103
  call void @__sanitizer_cov_trace_pc() #28
  %33 = ptrtoint ptr %ss_mask to i32
  call void @__asan_load2_noabort(i32 %33)
  %34 = load i16, ptr %ss_mask, align 4
  %conv117 = or i16 %34, 1
  store i16 %conv117, ptr %ss_mask, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.then116, %if.end103.for.inc_crit_edge
  %arrayidx112.1 = getelementptr i8, ptr %.pn.in182, i32 -244
  %35 = ptrtoint ptr %arrayidx112.1 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %arrayidx112.1, align 4
  %arrayidx114.1 = getelementptr [14 x ptr], ptr %call34, i32 0, i32 1
  %37 = ptrtoint ptr %arrayidx114.1 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %arrayidx114.1, align 4
  %cmp115.not.1 = icmp eq ptr %36, %38
  br i1 %cmp115.not.1, label %for.inc.for.inc.1_crit_edge, label %if.then116.1

for.inc.for.inc.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.1

if.then116.1:                                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  %39 = ptrtoint ptr %ss_mask to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %ss_mask, align 4
  %conv117.1 = or i16 %40, 2
  store i16 %conv117.1, ptr %ss_mask, align 4
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then116.1, %for.inc.for.inc.1_crit_edge
  %arrayidx112.2 = getelementptr i8, ptr %.pn.in182, i32 -240
  %41 = ptrtoint ptr %arrayidx112.2 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %arrayidx112.2, align 4
  %arrayidx114.2 = getelementptr [14 x ptr], ptr %call34, i32 0, i32 2
  %43 = ptrtoint ptr %arrayidx114.2 to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %arrayidx114.2, align 4
  %cmp115.not.2 = icmp eq ptr %42, %44
  br i1 %cmp115.not.2, label %for.inc.1.for.inc.2_crit_edge, label %if.then116.2

for.inc.1.for.inc.2_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.2

if.then116.2:                                     ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #28
  %45 = ptrtoint ptr %ss_mask to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %ss_mask, align 4
  %conv117.2 = or i16 %46, 4
  store i16 %conv117.2, ptr %ss_mask, align 4
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then116.2, %for.inc.1.for.inc.2_crit_edge
  %arrayidx112.3 = getelementptr i8, ptr %.pn.in182, i32 -236
  %47 = ptrtoint ptr %arrayidx112.3 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %arrayidx112.3, align 4
  %arrayidx114.3 = getelementptr [14 x ptr], ptr %call34, i32 0, i32 3
  %49 = ptrtoint ptr %arrayidx114.3 to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %arrayidx114.3, align 4
  %cmp115.not.3 = icmp eq ptr %48, %50
  br i1 %cmp115.not.3, label %for.inc.2.for.inc.3_crit_edge, label %if.then116.3

for.inc.2.for.inc.3_crit_edge:                    ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.3

if.then116.3:                                     ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #28
  %51 = ptrtoint ptr %ss_mask to i32
  call void @__asan_load2_noabort(i32 %51)
  %52 = load i16, ptr %ss_mask, align 4
  %conv117.3 = or i16 %52, 8
  store i16 %conv117.3, ptr %ss_mask, align 4
  br label %for.inc.3

for.inc.3:                                        ; preds = %if.then116.3, %for.inc.2.for.inc.3_crit_edge
  %arrayidx112.4 = getelementptr i8, ptr %.pn.in182, i32 -232
  %53 = ptrtoint ptr %arrayidx112.4 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %arrayidx112.4, align 4
  %arrayidx114.4 = getelementptr [14 x ptr], ptr %call34, i32 0, i32 4
  %55 = ptrtoint ptr %arrayidx114.4 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %arrayidx114.4, align 4
  %cmp115.not.4 = icmp eq ptr %54, %56
  br i1 %cmp115.not.4, label %for.inc.3.for.inc.4_crit_edge, label %if.then116.4

for.inc.3.for.inc.4_crit_edge:                    ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.4

if.then116.4:                                     ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #28
  %57 = ptrtoint ptr %ss_mask to i32
  call void @__asan_load2_noabort(i32 %57)
  %58 = load i16, ptr %ss_mask, align 4
  %conv117.4 = or i16 %58, 16
  store i16 %conv117.4, ptr %ss_mask, align 4
  br label %for.inc.4

for.inc.4:                                        ; preds = %if.then116.4, %for.inc.3.for.inc.4_crit_edge
  %arrayidx112.5 = getelementptr i8, ptr %.pn.in182, i32 -228
  %59 = ptrtoint ptr %arrayidx112.5 to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %arrayidx112.5, align 4
  %arrayidx114.5 = getelementptr [14 x ptr], ptr %call34, i32 0, i32 5
  %61 = ptrtoint ptr %arrayidx114.5 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %arrayidx114.5, align 4
  %cmp115.not.5 = icmp eq ptr %60, %62
  br i1 %cmp115.not.5, label %for.inc.4.for.inc.5_crit_edge, label %if.then116.5

for.inc.4.for.inc.5_crit_edge:                    ; preds = %for.inc.4
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.5

if.then116.5:                                     ; preds = %for.inc.4
  call void @__sanitizer_cov_trace_pc() #28
  %63 = ptrtoint ptr %ss_mask to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %ss_mask, align 4
  %conv117.5 = or i16 %64, 32
  store i16 %conv117.5, ptr %ss_mask, align 4
  br label %for.inc.5

for.inc.5:                                        ; preds = %if.then116.5, %for.inc.4.for.inc.5_crit_edge
  %arrayidx112.6 = getelementptr i8, ptr %.pn.in182, i32 -224
  %65 = ptrtoint ptr %arrayidx112.6 to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %arrayidx112.6, align 4
  %arrayidx114.6 = getelementptr [14 x ptr], ptr %call34, i32 0, i32 6
  %67 = ptrtoint ptr %arrayidx114.6 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %arrayidx114.6, align 4
  %cmp115.not.6 = icmp eq ptr %66, %68
  br i1 %cmp115.not.6, label %for.inc.5.for.inc.6_crit_edge, label %if.then116.6

for.inc.5.for.inc.6_crit_edge:                    ; preds = %for.inc.5
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.6

if.then116.6:                                     ; preds = %for.inc.5
  call void @__sanitizer_cov_trace_pc() #28
  %69 = ptrtoint ptr %ss_mask to i32
  call void @__asan_load2_noabort(i32 %69)
  %70 = load i16, ptr %ss_mask, align 4
  %conv117.6 = or i16 %70, 64
  store i16 %conv117.6, ptr %ss_mask, align 4
  br label %for.inc.6

for.inc.6:                                        ; preds = %if.then116.6, %for.inc.5.for.inc.6_crit_edge
  %arrayidx112.7 = getelementptr i8, ptr %.pn.in182, i32 -220
  %71 = ptrtoint ptr %arrayidx112.7 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %arrayidx112.7, align 4
  %arrayidx114.7 = getelementptr [14 x ptr], ptr %call34, i32 0, i32 7
  %73 = ptrtoint ptr %arrayidx114.7 to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %arrayidx114.7, align 4
  %cmp115.not.7 = icmp eq ptr %72, %74
  br i1 %cmp115.not.7, label %for.inc.6.for.inc.7_crit_edge, label %if.then116.7

for.inc.6.for.inc.7_crit_edge:                    ; preds = %for.inc.6
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.7

if.then116.7:                                     ; preds = %for.inc.6
  call void @__sanitizer_cov_trace_pc() #28
  %75 = ptrtoint ptr %ss_mask to i32
  call void @__asan_load2_noabort(i32 %75)
  %76 = load i16, ptr %ss_mask, align 4
  %conv117.7 = or i16 %76, 128
  store i16 %conv117.7, ptr %ss_mask, align 4
  br label %for.inc.7

for.inc.7:                                        ; preds = %if.then116.7, %for.inc.6.for.inc.7_crit_edge
  %arrayidx112.8 = getelementptr i8, ptr %.pn.in182, i32 -216
  %77 = ptrtoint ptr %arrayidx112.8 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %arrayidx112.8, align 4
  %arrayidx114.8 = getelementptr [14 x ptr], ptr %call34, i32 0, i32 8
  %79 = ptrtoint ptr %arrayidx114.8 to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %arrayidx114.8, align 4
  %cmp115.not.8 = icmp eq ptr %78, %80
  br i1 %cmp115.not.8, label %for.inc.7.for.inc.8_crit_edge, label %if.then116.8

for.inc.7.for.inc.8_crit_edge:                    ; preds = %for.inc.7
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.8

if.then116.8:                                     ; preds = %for.inc.7
  call void @__sanitizer_cov_trace_pc() #28
  %81 = ptrtoint ptr %ss_mask to i32
  call void @__asan_load2_noabort(i32 %81)
  %82 = load i16, ptr %ss_mask, align 4
  %conv117.8 = or i16 %82, 256
  store i16 %conv117.8, ptr %ss_mask, align 4
  br label %for.inc.8

for.inc.8:                                        ; preds = %if.then116.8, %for.inc.7.for.inc.8_crit_edge
  %arrayidx112.9 = getelementptr i8, ptr %.pn.in182, i32 -212
  %83 = ptrtoint ptr %arrayidx112.9 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %arrayidx112.9, align 4
  %arrayidx114.9 = getelementptr [14 x ptr], ptr %call34, i32 0, i32 9
  %85 = ptrtoint ptr %arrayidx114.9 to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %arrayidx114.9, align 4
  %cmp115.not.9 = icmp eq ptr %84, %86
  br i1 %cmp115.not.9, label %for.inc.8.for.inc.9_crit_edge, label %if.then116.9

for.inc.8.for.inc.9_crit_edge:                    ; preds = %for.inc.8
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.9

if.then116.9:                                     ; preds = %for.inc.8
  call void @__sanitizer_cov_trace_pc() #28
  %87 = ptrtoint ptr %ss_mask to i32
  call void @__asan_load2_noabort(i32 %87)
  %88 = load i16, ptr %ss_mask, align 4
  %conv117.9 = or i16 %88, 512
  store i16 %conv117.9, ptr %ss_mask, align 4
  br label %for.inc.9

for.inc.9:                                        ; preds = %if.then116.9, %for.inc.8.for.inc.9_crit_edge
  %arrayidx112.10 = getelementptr i8, ptr %.pn.in182, i32 -208
  %89 = ptrtoint ptr %arrayidx112.10 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %arrayidx112.10, align 4
  %arrayidx114.10 = getelementptr [14 x ptr], ptr %call34, i32 0, i32 10
  %91 = ptrtoint ptr %arrayidx114.10 to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load ptr, ptr %arrayidx114.10, align 4
  %cmp115.not.10 = icmp eq ptr %90, %92
  br i1 %cmp115.not.10, label %for.inc.9.for.inc.10_crit_edge, label %if.then116.10

for.inc.9.for.inc.10_crit_edge:                   ; preds = %for.inc.9
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.10

if.then116.10:                                    ; preds = %for.inc.9
  call void @__sanitizer_cov_trace_pc() #28
  %93 = ptrtoint ptr %ss_mask to i32
  call void @__asan_load2_noabort(i32 %93)
  %94 = load i16, ptr %ss_mask, align 4
  %conv117.10 = or i16 %94, 1024
  store i16 %conv117.10, ptr %ss_mask, align 4
  br label %for.inc.10

for.inc.10:                                       ; preds = %if.then116.10, %for.inc.9.for.inc.10_crit_edge
  %arrayidx112.11 = getelementptr i8, ptr %.pn.in182, i32 -204
  %95 = ptrtoint ptr %arrayidx112.11 to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %arrayidx112.11, align 4
  %arrayidx114.11 = getelementptr [14 x ptr], ptr %call34, i32 0, i32 11
  %97 = ptrtoint ptr %arrayidx114.11 to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %arrayidx114.11, align 4
  %cmp115.not.11 = icmp eq ptr %96, %98
  br i1 %cmp115.not.11, label %for.inc.10.for.inc.11_crit_edge, label %if.then116.11

for.inc.10.for.inc.11_crit_edge:                  ; preds = %for.inc.10
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.11

if.then116.11:                                    ; preds = %for.inc.10
  call void @__sanitizer_cov_trace_pc() #28
  %99 = ptrtoint ptr %ss_mask to i32
  call void @__asan_load2_noabort(i32 %99)
  %100 = load i16, ptr %ss_mask, align 4
  %conv117.11 = or i16 %100, 2048
  store i16 %conv117.11, ptr %ss_mask, align 4
  br label %for.inc.11

for.inc.11:                                       ; preds = %if.then116.11, %for.inc.10.for.inc.11_crit_edge
  %arrayidx112.12 = getelementptr i8, ptr %.pn.in182, i32 -200
  %101 = ptrtoint ptr %arrayidx112.12 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %arrayidx112.12, align 4
  %arrayidx114.12 = getelementptr [14 x ptr], ptr %call34, i32 0, i32 12
  %103 = ptrtoint ptr %arrayidx114.12 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %arrayidx114.12, align 4
  %cmp115.not.12 = icmp eq ptr %102, %104
  br i1 %cmp115.not.12, label %for.inc.11.for.inc.12_crit_edge, label %if.then116.12

for.inc.11.for.inc.12_crit_edge:                  ; preds = %for.inc.11
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.12

if.then116.12:                                    ; preds = %for.inc.11
  call void @__sanitizer_cov_trace_pc() #28
  %105 = ptrtoint ptr %ss_mask to i32
  call void @__asan_load2_noabort(i32 %105)
  %106 = load i16, ptr %ss_mask, align 4
  %conv117.12 = or i16 %106, 4096
  store i16 %conv117.12, ptr %ss_mask, align 4
  br label %for.inc.12

for.inc.12:                                       ; preds = %if.then116.12, %for.inc.11.for.inc.12_crit_edge
  %arrayidx112.13 = getelementptr i8, ptr %.pn.in182, i32 -196
  %107 = ptrtoint ptr %arrayidx112.13 to i32
  call void @__asan_load4_noabort(i32 %107)
  %108 = load ptr, ptr %arrayidx112.13, align 4
  %arrayidx114.13 = getelementptr [14 x ptr], ptr %call34, i32 0, i32 13
  %109 = ptrtoint ptr %arrayidx114.13 to i32
  call void @__asan_load4_noabort(i32 %109)
  %110 = load ptr, ptr %arrayidx114.13, align 4
  %cmp115.not.13 = icmp eq ptr %108, %110
  br i1 %cmp115.not.13, label %for.inc.12.for.inc121_crit_edge, label %if.then116.13

for.inc.12.for.inc121_crit_edge:                  ; preds = %for.inc.12
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc121

if.then116.13:                                    ; preds = %for.inc.12
  call void @__sanitizer_cov_trace_pc() #28
  %111 = ptrtoint ptr %ss_mask to i32
  call void @__asan_load2_noabort(i32 %111)
  %112 = load i16, ptr %ss_mask, align 4
  %conv117.13 = or i16 %112, 8192
  store i16 %conv117.13, ptr %ss_mask, align 4
  br label %for.inc121

for.inc121:                                       ; preds = %if.then116.13, %for.inc.12.for.inc121_crit_edge, %do.body1.i167, %put_css_set.exit.for.inc121_crit_edge
  %cmp31.not = icmp eq ptr %.pn184, %mgctx
  br i1 %cmp31.not, label %for.inc121.cleanup128_crit_edge, label %for.inc121.for.body_crit_edge

for.inc121.for.body_crit_edge:                    ; preds = %for.inc121
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

for.inc121.cleanup128_crit_edge:                  ; preds = %for.inc121
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup128

cleanup128:                                       ; preds = %for.inc121.cleanup128_crit_edge, %for.body.cleanup128_crit_edge, %if.end.cleanup128_crit_edge
  %retval.2 = phi i32 [ 0, %if.end.cleanup128_crit_edge ], [ -12, %for.body.cleanup128_crit_edge ], [ 0, %for.inc121.cleanup128_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @find_css_set(ptr noundef readonly %old_cset, ptr noundef %cgrp) unnamed_addr #0 align 64 {
entry:
  %template = alloca [14 x ptr], align 4
  %tmp_links = alloca %struct.list_head, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %template) #26
  %0 = call ptr @memset(ptr %template, i32 0, i32 56)
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %tmp_links) #26
  %1 = ptrtoint ptr %tmp_links to i32
  call void @__asan_store4_noabort(i32 %1)
  store ptr inttoptr (i32 -1 to ptr), ptr %tmp_links, align 4, !annotation !638
  %2 = getelementptr inbounds %struct.list_head, ptr %tmp_links, i32 0, i32 1
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr inttoptr (i32 -1 to ptr), ptr %2, align 4, !annotation !638
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %4 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 1211, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %root1.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 19
  %5 = ptrtoint ptr %root1.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %root1.i, align 4
  %subsys_mask.i = getelementptr inbounds %struct.cgroup_root, ptr %6, i32 0, i32 1
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %for.inc.i.land.rhs.i_crit_edge, %if.end
  %i.078.i = phi i32 [ 0, %if.end ], [ %inc.i, %for.inc.i.land.rhs.i_crit_edge ]
  %7 = ptrtoint ptr %subsys_mask.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %subsys_mask.i, align 4
  %shl.i = shl nuw nsw i32 1, %i.078.i
  %and.i = and i32 %8, %shl.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool2.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool2.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %land.rhs.i
  %arrayidx.i = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %i.078.i
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %11 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %11)
  %tobool.not.i.i = icmp eq i32 %11, 0
  br i1 %tobool.not.i.i, label %if.then.i.if.end.i.i_crit_edge, label %land.rhs.i.i

if.then.i.if.end.i.i_crit_edge:                   ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i.i

land.rhs.i.i:                                     ; preds = %if.then.i
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp.not.i.i, label %do.end.i.i, label %land.rhs.i.i.if.end.i.i_crit_edge, !prof !637

land.rhs.i.i.if.end.i.i_crit_edge:                ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 526, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %do.end.i.i, %land.rhs.i.i.if.end.i.i_crit_edge, %if.then.i.if.end.i.i_crit_edge
  %tobool24.not.i.i = icmp eq ptr %10, null
  br i1 %tobool24.not.i.i, label %if.end.i.i.for.inc.i_crit_edge, label %while.cond.preheader.i.i

if.end.i.i.for.inc.i_crit_edge:                   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.i

while.cond.preheader.i.i:                         ; preds = %if.end.i.i
  %id.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %10, i32 0, i32 19
  br label %while.cond.i.i

while.cond.i.i:                                   ; preds = %cgroup_ss_mask.exit.i.i.while.cond.i.i_crit_edge, %while.cond.preheader.i.i
  %cgrp.addr.0.i.i = phi ptr [ %13, %cgroup_ss_mask.exit.i.i.while.cond.i.i_crit_edge ], [ %cgrp, %while.cond.preheader.i.i ]
  %parent.i.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.addr.0.i.i, i32 0, i32 12
  %12 = ptrtoint ptr %parent.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %parent.i.i.i.i, align 8
  %tobool.not.i.i.i = icmp eq ptr %13, null
  br i1 %tobool.not.i.i.i, label %cgroup_ss_mask.exit.thread.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %while.cond.i.i
  %subtree_ss_mask.i.i.i = getelementptr inbounds %struct.cgroup, ptr %13, i32 0, i32 15
  %14 = ptrtoint ptr %subtree_ss_mask.i.i.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %15 = load i16, ptr %subtree_ss_mask.i.i.i, align 2
  %dom_cgrp.i.i.i.i = getelementptr inbounds %struct.cgroup, ptr %cgrp.addr.0.i.i, i32 0, i32 22
  %16 = ptrtoint ptr %dom_cgrp.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %dom_cgrp.i.i.i.i, align 8
  %cmp.i.not.i.i.i = icmp eq ptr %17, %cgrp.addr.0.i.i
  br i1 %cmp.i.not.i.i.i, label %if.then.i.i.i.cgroup_ss_mask.exit.i.i_crit_edge, label %if.then2.i.i.i

if.then.i.i.i.cgroup_ss_mask.exit.i.i_crit_edge:  ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_ss_mask.exit.i.i

if.then2.i.i.i:                                   ; preds = %if.then.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %18 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %and11.i.i.i = and i16 %18, %15
  br label %cgroup_ss_mask.exit.i.i

cgroup_ss_mask.exit.i.i:                          ; preds = %if.then2.i.i.i, %if.then.i.i.i.cgroup_ss_mask.exit.i.i_crit_edge
  %retval.0.i.i.i = phi i16 [ %and11.i.i.i, %if.then2.i.i.i ], [ %15, %if.then.i.i.i.cgroup_ss_mask.exit.i.i_crit_edge ]
  %conv.i.i = zext i16 %retval.0.i.i.i to i32
  %19 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %id.i.i, align 4
  %shl.i.i = shl nuw i32 1, %20
  %and.i.i = and i32 %shl.i.i, %conv.i.i
  %tobool28.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool28.not.i.i, label %cgroup_ss_mask.exit.i.i.while.cond.i.i_crit_edge, label %cgroup_ss_mask.exit.i.i.if.then.i44.i.i_crit_edge

cgroup_ss_mask.exit.i.i.if.then.i44.i.i_crit_edge: ; preds = %cgroup_ss_mask.exit.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then.i44.i.i

cgroup_ss_mask.exit.i.i.while.cond.i.i_crit_edge: ; preds = %cgroup_ss_mask.exit.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.cond.i.i

cgroup_ss_mask.exit.thread.i.i:                   ; preds = %while.cond.i.i
  %root.i.i.i = getelementptr inbounds %struct.cgroup, ptr %cgrp.addr.0.i.i, i32 0, i32 19
  %21 = ptrtoint ptr %root.i.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %root.i.i.i, align 4
  %subsys_mask.i.i.i = getelementptr inbounds %struct.cgroup_root, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %subsys_mask.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %subsys_mask.i.i.i, align 4
  %conv47.i.i = and i32 %24, 65535
  %25 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %id.i.i, align 4
  %shl49.i.i = shl nuw i32 1, %26
  %and50.i.i = and i32 %conv47.i.i, %shl49.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and50.i.i)
  %tobool28.not51.i.i = icmp eq i32 %and50.i.i, 0
  br i1 %tobool28.not51.i.i, label %cgroup_ss_mask.exit.thread.i.i.for.inc.i_crit_edge, label %cgroup_ss_mask.exit.thread.i.i.if.then.i44.i.i_crit_edge

cgroup_ss_mask.exit.thread.i.i.if.then.i44.i.i_crit_edge: ; preds = %cgroup_ss_mask.exit.thread.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then.i44.i.i

cgroup_ss_mask.exit.thread.i.i.for.inc.i_crit_edge: ; preds = %cgroup_ss_mask.exit.thread.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.i

if.then.i44.i.i:                                  ; preds = %cgroup_ss_mask.exit.thread.i.i.if.then.i44.i.i_crit_edge, %cgroup_ss_mask.exit.i.i.if.then.i44.i.i_crit_edge
  %27 = phi i32 [ %26, %cgroup_ss_mask.exit.thread.i.i.if.then.i44.i.i_crit_edge ], [ %20, %cgroup_ss_mask.exit.i.i.if.then.i44.i.i_crit_edge ]
  %arrayidx.i.i.i = getelementptr %struct.cgroup, ptr %cgrp.addr.0.i.i, i32 0, i32 18, i32 %27
  %28 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile ptr, ptr %arrayidx.i.i.i, align 4
  %call.i.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool2.not.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool2.not.i.i.i, label %lor.lhs.false.i.i.i, label %if.then.i44.i.i.for.inc.i_crit_edge

if.then.i44.i.i.for.inc.i_crit_edge:              ; preds = %if.then.i44.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.i

lor.lhs.false.i.i.i:                              ; preds = %if.then.i44.i.i
  %call3.i.i.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i.i.i)
  %tobool4.not.i.i.i = icmp eq i32 %call3.i.i.i, 0
  br i1 %tobool4.not.i.i.i, label %land.lhs.true.i.i.i, label %lor.lhs.false.i.i.i.for.inc.i_crit_edge

lor.lhs.false.i.i.i.for.inc.i_crit_edge:          ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.i

land.lhs.true.i.i.i:                              ; preds = %lor.lhs.false.i.i.i
  %call5.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i.i.i)
  %tobool6.not.i.i.i = icmp eq i32 %call5.i.i.i, 0
  br i1 %tobool6.not.i.i.i, label %land.lhs.true.i.i.i.for.inc.i_crit_edge, label %land.lhs.true7.i.i.i

land.lhs.true.i.i.i.for.inc.i_crit_edge:          ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.i

land.lhs.true7.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %.b15.i.i.i = load i1, ptr @cgroup_css.__warned, align 1
  br i1 %.b15.i.i.i, label %land.lhs.true7.i.i.i.for.inc.i_crit_edge, label %if.then9.i.i.i

land.lhs.true7.i.i.i.for.inc.i_crit_edge:         ; preds = %land.lhs.true7.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.i

if.then9.i.i.i:                                   ; preds = %land.lhs.true7.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_css.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 486, ptr noundef nonnull @.str.22) #26
  br label %for.inc.i

if.else.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  %arrayidx4.i = getelementptr [14 x ptr], ptr %old_cset, i32 0, i32 %i.078.i
  %30 = ptrtoint ptr %arrayidx4.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %arrayidx4.i, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.else.i, %if.then9.i.i.i, %land.lhs.true7.i.i.i.for.inc.i_crit_edge, %land.lhs.true.i.i.i.for.inc.i_crit_edge, %lor.lhs.false.i.i.i.for.inc.i_crit_edge, %if.then.i44.i.i.for.inc.i_crit_edge, %cgroup_ss_mask.exit.thread.i.i.for.inc.i_crit_edge, %if.end.i.i.for.inc.i_crit_edge
  %retval.0.i.sink.i = phi ptr [ %31, %if.else.i ], [ %cgrp, %if.end.i.i.for.inc.i_crit_edge ], [ %29, %if.then.i44.i.i.for.inc.i_crit_edge ], [ %29, %lor.lhs.false.i.i.i.for.inc.i_crit_edge ], [ %29, %land.lhs.true.i.i.i.for.inc.i_crit_edge ], [ %29, %land.lhs.true7.i.i.i.for.inc.i_crit_edge ], [ %29, %if.then9.i.i.i ], [ null, %cgroup_ss_mask.exit.thread.i.i.for.inc.i_crit_edge ]
  %arrayidx3.i = getelementptr ptr, ptr %template, i32 %i.078.i
  %32 = ptrtoint ptr %arrayidx3.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %retval.0.i.sink.i, ptr %arrayidx3.i, align 4
  %inc.i = add nuw nsw i32 %i.078.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 14
  br i1 %exitcond.not.i, label %for.end.i, label %for.inc.i.land.rhs.i_crit_edge

for.inc.i.land.rhs.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs.i

for.end.i:                                        ; preds = %for.inc.i
  %33 = ptrtoint ptr %template to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %template, align 4
  %35 = ptrtoint ptr %34 to i32
  %arrayidx1.1.i.i = getelementptr inbounds ptr, ptr %template, i32 1
  %36 = ptrtoint ptr %arrayidx1.1.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx1.1.i.i, align 4
  %38 = ptrtoint ptr %37 to i32
  %add.1.i.i = add i32 %38, %35
  %arrayidx1.2.i.i = getelementptr inbounds ptr, ptr %template, i32 2
  %39 = ptrtoint ptr %arrayidx1.2.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %arrayidx1.2.i.i, align 4
  %41 = ptrtoint ptr %40 to i32
  %add.2.i.i = add i32 %add.1.i.i, %41
  %arrayidx1.3.i.i = getelementptr inbounds ptr, ptr %template, i32 3
  %42 = ptrtoint ptr %arrayidx1.3.i.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %arrayidx1.3.i.i, align 4
  %44 = ptrtoint ptr %43 to i32
  %add.3.i.i = add i32 %add.2.i.i, %44
  %arrayidx1.4.i.i = getelementptr inbounds ptr, ptr %template, i32 4
  %45 = ptrtoint ptr %arrayidx1.4.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %arrayidx1.4.i.i, align 4
  %47 = ptrtoint ptr %46 to i32
  %add.4.i.i = add i32 %add.3.i.i, %47
  %arrayidx1.5.i.i = getelementptr inbounds ptr, ptr %template, i32 5
  %48 = ptrtoint ptr %arrayidx1.5.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %arrayidx1.5.i.i, align 4
  %50 = ptrtoint ptr %49 to i32
  %add.5.i.i = add i32 %add.4.i.i, %50
  %arrayidx1.6.i.i = getelementptr inbounds ptr, ptr %template, i32 6
  %51 = ptrtoint ptr %arrayidx1.6.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %arrayidx1.6.i.i, align 4
  %53 = ptrtoint ptr %52 to i32
  %add.6.i.i = add i32 %add.5.i.i, %53
  %arrayidx1.7.i.i = getelementptr inbounds ptr, ptr %template, i32 7
  %54 = ptrtoint ptr %arrayidx1.7.i.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %arrayidx1.7.i.i, align 4
  %56 = ptrtoint ptr %55 to i32
  %add.7.i.i = add i32 %add.6.i.i, %56
  %arrayidx1.8.i.i = getelementptr inbounds ptr, ptr %template, i32 8
  %57 = ptrtoint ptr %arrayidx1.8.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %arrayidx1.8.i.i, align 4
  %59 = ptrtoint ptr %58 to i32
  %add.8.i.i = add i32 %add.7.i.i, %59
  %arrayidx1.9.i.i = getelementptr inbounds ptr, ptr %template, i32 9
  %60 = ptrtoint ptr %arrayidx1.9.i.i to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %arrayidx1.9.i.i, align 4
  %62 = ptrtoint ptr %61 to i32
  %add.9.i.i = add i32 %add.8.i.i, %62
  %arrayidx1.10.i.i = getelementptr inbounds ptr, ptr %template, i32 10
  %63 = ptrtoint ptr %arrayidx1.10.i.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %arrayidx1.10.i.i, align 4
  %65 = ptrtoint ptr %64 to i32
  %add.10.i.i = add i32 %add.9.i.i, %65
  %arrayidx1.11.i.i = getelementptr inbounds ptr, ptr %template, i32 11
  %66 = ptrtoint ptr %arrayidx1.11.i.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %arrayidx1.11.i.i, align 4
  %68 = ptrtoint ptr %67 to i32
  %add.11.i.i = add i32 %add.10.i.i, %68
  %arrayidx1.12.i.i = getelementptr inbounds ptr, ptr %template, i32 12
  %69 = ptrtoint ptr %arrayidx1.12.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %arrayidx1.12.i.i, align 4
  %71 = ptrtoint ptr %70 to i32
  %add.12.i.i = add i32 %add.11.i.i, %71
  %arrayidx1.13.i.i = getelementptr inbounds ptr, ptr %template, i32 13
  %72 = ptrtoint ptr %arrayidx1.13.i.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %arrayidx1.13.i.i, align 4
  %74 = ptrtoint ptr %73 to i32
  %add.13.i.i = add i32 %add.12.i.i, %74
  %shr.i.i = lshr i32 %add.13.i.i, 16
  %xor.i.i = xor i32 %shr.i.i, %add.13.i.i
  %mul.i.i.i = mul i32 %xor.i.i, 1640531527
  %shr.i52.i = lshr i32 %mul.i.i.i, 25
  %arrayidx8.i = getelementptr [128 x %struct.hlist_head], ptr @css_set_table, i32 0, i32 %shr.i52.i
  %75 = ptrtoint ptr %arrayidx8.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %arrayidx8.i, align 4
  %tobool9.not.i = icmp eq ptr %76, null
  %add.ptr.i = getelementptr i8, ptr %76, i32 -232
  %tobool12.not8097.i = icmp eq ptr %add.ptr.i, null
  %tobool12.not80.i = or i1 %tobool9.not.i, %tobool12.not8097.i
  br i1 %tobool12.not80.i, label %for.end.i.if.end30.critedge_crit_edge, label %for.body13.lr.ph.i

for.end.i.if.end30.critedge_crit_edge:            ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end30.critedge

for.body13.lr.ph.i:                               ; preds = %for.end.i
  %dfl_cgrp.i.i = getelementptr inbounds %struct.css_set, ptr %old_cset, i32 0, i32 3
  %cgrp_links7.i.i = getelementptr inbounds %struct.css_set, ptr %old_cset, i32 0, i32 13
  br label %for.body13.i

for.body13.i:                                     ; preds = %for.inc17.i.for.body13.i_crit_edge, %for.body13.lr.ph.i
  %cset.081.i = phi ptr [ %add.ptr.i, %for.body13.lr.ph.i ], [ %add.ptr24.i, %for.inc17.i.for.body13.i_crit_edge ]
  %bcmp.i.i = call i32 @bcmp(ptr noundef nonnull dereferenceable(56) %template, ptr noundef nonnull dereferenceable(56) %cset.081.i, i32 56) #29
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %bcmp.i.i)
  %tobool.not.i53.i = icmp eq i32 %bcmp.i.i, 0
  br i1 %tobool.not.i53.i, label %if.end.i55.i, label %for.body13.i.for.inc17.i_crit_edge

for.body13.i.for.inc17.i_crit_edge:               ; preds = %for.body13.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc17.i

if.end.i55.i:                                     ; preds = %for.body13.i
  %77 = ptrtoint ptr %root1.i to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %root1.i, align 4
  %cmp.i.i.i = icmp eq ptr %78, @cgrp_dfl_root
  br i1 %cmp.i.i.i, label %if.end.i55.i.if.end3.i.i_crit_edge, label %if.else.i.i

if.end.i55.i.if.end3.i.i_crit_edge:               ; preds = %if.end.i55.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end3.i.i

if.else.i.i:                                      ; preds = %if.end.i55.i
  call void @__sanitizer_cov_trace_pc() #28
  %79 = ptrtoint ptr %dfl_cgrp.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %dfl_cgrp.i.i, align 4
  br label %if.end3.i.i

if.end3.i.i:                                      ; preds = %if.else.i.i, %if.end.i55.i.if.end3.i.i_crit_edge
  %new_dfl_cgrp.0.i.i = phi ptr [ %80, %if.else.i.i ], [ %cgrp, %if.end.i55.i.if.end3.i.i_crit_edge ]
  %dom_cgrp.i.i = getelementptr inbounds %struct.cgroup, ptr %new_dfl_cgrp.0.i.i, i32 0, i32 22
  %81 = ptrtoint ptr %dom_cgrp.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %dom_cgrp.i.i, align 8
  %dom_cset.i.i = getelementptr inbounds %struct.css_set, ptr %cset.081.i, i32 0, i32 2
  %83 = ptrtoint ptr %dom_cset.i.i to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %dom_cset.i.i, align 4
  %dfl_cgrp4.i.i = getelementptr inbounds %struct.css_set, ptr %84, i32 0, i32 3
  %85 = ptrtoint ptr %dfl_cgrp4.i.i to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %dfl_cgrp4.i.i, align 4
  %cmp.not.i56.i = icmp eq ptr %82, %86
  br i1 %cmp.not.i56.i, label %if.end6.i.i, label %if.end3.i.i.for.inc17.i_crit_edge

if.end3.i.i.for.inc17.i_crit_edge:                ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc17.i

if.end6.i.i:                                      ; preds = %if.end3.i.i
  %cgrp_links.i.i = getelementptr inbounds %struct.css_set, ptr %cset.081.i, i32 0, i32 13
  %87 = ptrtoint ptr %cgrp_links.i.i to i32
  call void @__asan_load4_noabort(i32 %87)
  %88 = load ptr, ptr %cgrp_links.i.i, align 4
  %89 = ptrtoint ptr %cgrp_links7.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load ptr, ptr %cgrp_links7.i.i, align 4
  %cmp10112.i.i = icmp eq ptr %88, %cgrp_links.i.i
  br i1 %cmp10112.i.i, label %if.end6.i.i.do.body.i.i_crit_edge, label %if.end6.i.i.do.body25.i.i_crit_edge

if.end6.i.i.do.body25.i.i_crit_edge:              ; preds = %if.end6.i.i
  br label %do.body25.i.i

if.end6.i.i.do.body.i.i_crit_edge:                ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body.i.i

do.body.i.i:                                      ; preds = %cleanup.i.i.do.body.i.i_crit_edge, %if.end6.i.i.do.body.i.i_crit_edge
  %.lcssa.i.i = phi ptr [ %104, %cleanup.i.i.do.body.i.i_crit_edge ], [ %90, %if.end6.i.i.do.body.i.i_crit_edge ]
  %cmp13.not.i.i = icmp eq ptr %.lcssa.i.i, %cgrp_links7.i.i
  br i1 %cmp13.not.i.i, label %find_existing_css_set.exit, label %do.body17.i.i, !prof !636

do.body17.i.i:                                    ; preds = %do.body.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1044, 0\0A.popsection", ""() #26, !srcloc !664
  unreachable

do.body25.i.i:                                    ; preds = %cleanup.i.i.do.body25.i.i_crit_edge, %if.end6.i.i.do.body25.i.i_crit_edge
  %91 = phi ptr [ %104, %cleanup.i.i.do.body25.i.i_crit_edge ], [ %90, %if.end6.i.i.do.body25.i.i_crit_edge ]
  %92 = phi ptr [ %102, %cleanup.i.i.do.body25.i.i_crit_edge ], [ %88, %if.end6.i.i.do.body25.i.i_crit_edge ]
  %cmp27.i.i = icmp eq ptr %91, %cgrp_links7.i.i
  br i1 %cmp27.i.i, label %do.body35.i.i, label %if.end44.i.i, !prof !637

do.body35.i.i:                                    ; preds = %do.body25.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1047, 0\0A.popsection", ""() #26, !srcloc !665
  unreachable

if.end44.i.i:                                     ; preds = %do.body25.i.i
  %add.ptr.i.i = getelementptr i8, ptr %92, i32 -16
  %add.ptr47.i.i = getelementptr i8, ptr %91, i32 -16
  %93 = ptrtoint ptr %add.ptr.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load ptr, ptr %add.ptr.i.i, align 4
  %95 = ptrtoint ptr %add.ptr47.i.i to i32
  call void @__asan_load4_noabort(i32 %95)
  %96 = load ptr, ptr %add.ptr47.i.i, align 4
  %root.i.i = getelementptr inbounds %struct.cgroup, ptr %94, i32 0, i32 19
  %97 = ptrtoint ptr %root.i.i to i32
  call void @__asan_load4_noabort(i32 %97)
  %98 = load ptr, ptr %root.i.i, align 4
  %root50.i.i = getelementptr inbounds %struct.cgroup, ptr %96, i32 0, i32 19
  %99 = ptrtoint ptr %root50.i.i to i32
  call void @__asan_load4_noabort(i32 %99)
  %100 = load ptr, ptr %root50.i.i, align 4
  %cmp51.not.i.i = icmp eq ptr %98, %100
  br i1 %cmp51.not.i.i, label %do.end67.i.i, label %do.body59.i.i, !prof !636

do.body59.i.i:                                    ; preds = %if.end44.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1055, 0\0A.popsection", ""() #26, !srcloc !666
  unreachable

do.end67.i.i:                                     ; preds = %if.end44.i.i
  %cmp70.i.i = icmp eq ptr %98, %78
  br i1 %cmp70.i.i, label %if.then71.i.i, label %if.else75.i.i

if.then71.i.i:                                    ; preds = %do.end67.i.i
  %cmp72.not.i.i = icmp eq ptr %94, %cgrp
  br i1 %cmp72.not.i.i, label %if.then71.i.i.cleanup.i.i_crit_edge, label %if.then71.i.i.for.inc17.i_crit_edge

if.then71.i.i.for.inc17.i_crit_edge:              ; preds = %if.then71.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc17.i

if.then71.i.i.cleanup.i.i_crit_edge:              ; preds = %if.then71.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup.i.i

if.else75.i.i:                                    ; preds = %do.end67.i.i
  %cmp76.not.i.i = icmp eq ptr %94, %96
  br i1 %cmp76.not.i.i, label %if.else75.i.i.cleanup.i.i_crit_edge, label %if.else75.i.i.for.inc17.i_crit_edge

if.else75.i.i.for.inc17.i_crit_edge:              ; preds = %if.else75.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc17.i

if.else75.i.i.cleanup.i.i_crit_edge:              ; preds = %if.else75.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup.i.i

cleanup.i.i:                                      ; preds = %if.else75.i.i.cleanup.i.i_crit_edge, %if.then71.i.i.cleanup.i.i_crit_edge
  %101 = ptrtoint ptr %92 to i32
  call void @__asan_load4_noabort(i32 %101)
  %102 = load ptr, ptr %92, align 4
  %103 = ptrtoint ptr %91 to i32
  call void @__asan_load4_noabort(i32 %103)
  %104 = load ptr, ptr %91, align 4
  %cmp10.i.i = icmp eq ptr %102, %cgrp_links.i.i
  br i1 %cmp10.i.i, label %cleanup.i.i.do.body.i.i_crit_edge, label %cleanup.i.i.do.body25.i.i_crit_edge

cleanup.i.i.do.body25.i.i_crit_edge:              ; preds = %cleanup.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body25.i.i

cleanup.i.i.do.body.i.i_crit_edge:                ; preds = %cleanup.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body.i.i

for.inc17.i:                                      ; preds = %if.else75.i.i.for.inc17.i_crit_edge, %if.then71.i.i.for.inc17.i_crit_edge, %if.end3.i.i.for.inc17.i_crit_edge, %for.body13.i.for.inc17.i_crit_edge
  %hlist.i = getelementptr inbounds %struct.css_set, ptr %cset.081.i, i32 0, i32 12
  %105 = ptrtoint ptr %hlist.i to i32
  call void @__asan_load4_noabort(i32 %105)
  %106 = load ptr, ptr %hlist.i, align 4
  %tobool20.not.i = icmp eq ptr %106, null
  %add.ptr24.i = getelementptr i8, ptr %106, i32 -232
  %tobool12.not111.i = icmp eq ptr %add.ptr24.i, null
  %tobool12.not.i = or i1 %tobool20.not.i, %tobool12.not111.i
  br i1 %tobool12.not.i, label %for.inc17.i.if.end30.critedge_crit_edge, label %for.inc17.i.for.body13.i_crit_edge

for.inc17.i.for.body13.i_crit_edge:               ; preds = %for.inc17.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body13.i

for.inc17.i.if.end30.critedge_crit_edge:          ; preds = %for.inc17.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end30.critedge

find_existing_css_set.exit:                       ; preds = %do.body.i.i
  %tobool25.not = icmp eq ptr %cset.081.i, null
  br i1 %tobool25.not, label %find_existing_css_set.exit.if.end30.critedge_crit_edge, label %if.then26

find_existing_css_set.exit.if.end30.critedge_crit_edge: ; preds = %find_existing_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end30.critedge

if.then26:                                        ; preds = %find_existing_css_set.exit
  %refcount.i = getelementptr inbounds %struct.css_set, ptr %cset.081.i, i32 0, i32 1
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #26
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #26
  %107 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #26, !srcloc !663
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %107, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then26.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !637

if.then26.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then26
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %108 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %108)
  %.not.i.i.i.i = icmp sgt i32 %108, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.get_css_set.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !636

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.get_css_set.exit_crit_edge:       ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %get_css_set.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then26.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then26.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef %.sink.i.i.i.i) #26
  br label %get_css_set.exit

get_css_set.exit:                                 ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.get_css_set.exit_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  br label %cleanup107

if.end30.critedge:                                ; preds = %find_existing_css_set.exit.if.end30.critedge_crit_edge, %for.inc17.i.if.end30.critedge_crit_edge, %for.end.i.if.end30.critedge_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9) to i32))
  %109 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 9), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %109, i32 noundef 3520, i32 noundef 288) #32
  %tobool32.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool32.not, label %if.end30.critedge.cleanup107_crit_edge, label %if.end34

if.end30.critedge.cleanup107_crit_edge:           ; preds = %if.end30.critedge
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup107

if.end34:                                         ; preds = %if.end30.critedge
  %110 = load i32, ptr @cgroup_root_count, align 4
  %call35 = call fastcc i32 @allocate_cgrp_cset_links(i32 noundef %110, ptr noundef nonnull %tmp_links)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call35)
  %cmp36 = icmp slt i32 %call35, 0
  br i1 %cmp36, label %if.then37, label %if.end38

if.then37:                                        ; preds = %if.end34
  call void @__sanitizer_cov_trace_pc() #28
  call void @kfree(ptr noundef nonnull %call7.i.i) #26
  br label %cleanup107

if.end38:                                         ; preds = %if.end34
  %refcount = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 1
  %call.i.i.i161 = call zeroext i1 @__kasan_check_write(ptr noundef %refcount, i32 noundef 4) #26
  %111 = ptrtoint ptr %refcount to i32
  call void @__asan_store4_noabort(i32 %111)
  store volatile i32 1, ptr %refcount, align 8
  %dom_cset = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 2
  %112 = ptrtoint ptr %dom_cset to i32
  call void @__asan_store4_noabort(i32 %112)
  store ptr %call7.i.i, ptr %dom_cset, align 4
  %tasks = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 5
  %113 = ptrtoint ptr %tasks to i32
  call void @__asan_store4_noabort(i32 %113)
  store volatile ptr %tasks, ptr %tasks, align 8
  %prev.i = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 5, i32 1
  %114 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %114)
  store ptr %tasks, ptr %prev.i, align 4
  %mg_tasks = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 6
  %115 = ptrtoint ptr %mg_tasks to i32
  call void @__asan_store4_noabort(i32 %115)
  store volatile ptr %mg_tasks, ptr %mg_tasks, align 8
  %prev.i162 = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 6, i32 1
  %116 = ptrtoint ptr %prev.i162 to i32
  call void @__asan_store4_noabort(i32 %116)
  store ptr %mg_tasks, ptr %prev.i162, align 4
  %dying_tasks = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 7
  %117 = ptrtoint ptr %dying_tasks to i32
  call void @__asan_store4_noabort(i32 %117)
  store volatile ptr %dying_tasks, ptr %dying_tasks, align 8
  %prev.i163 = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 7, i32 1
  %118 = ptrtoint ptr %prev.i163 to i32
  call void @__asan_store4_noabort(i32 %118)
  store ptr %dying_tasks, ptr %prev.i163, align 4
  %task_iters = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 8
  %119 = ptrtoint ptr %task_iters to i32
  call void @__asan_store4_noabort(i32 %119)
  store volatile ptr %task_iters, ptr %task_iters, align 8
  %prev.i164 = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 8, i32 1
  %120 = ptrtoint ptr %prev.i164 to i32
  call void @__asan_store4_noabort(i32 %120)
  store ptr %task_iters, ptr %prev.i164, align 4
  %threaded_csets = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 10
  %121 = ptrtoint ptr %threaded_csets to i32
  call void @__asan_store4_noabort(i32 %121)
  store volatile ptr %threaded_csets, ptr %threaded_csets, align 8
  %prev.i165 = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 10, i32 1
  %122 = ptrtoint ptr %prev.i165 to i32
  call void @__asan_store4_noabort(i32 %122)
  store ptr %threaded_csets, ptr %prev.i165, align 4
  %hlist = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 12
  %123 = ptrtoint ptr %hlist to i32
  call void @__asan_store4_noabort(i32 %123)
  store ptr null, ptr %hlist, align 8
  %pprev.i = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 12, i32 1
  %124 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %124)
  store ptr null, ptr %pprev.i, align 4
  %cgrp_links = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 13
  %125 = ptrtoint ptr %cgrp_links to i32
  call void @__asan_store4_noabort(i32 %125)
  store volatile ptr %cgrp_links, ptr %cgrp_links, align 8
  %prev.i166 = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 13, i32 1
  %126 = ptrtoint ptr %prev.i166 to i32
  call void @__asan_store4_noabort(i32 %126)
  store ptr %cgrp_links, ptr %prev.i166, align 4
  %mg_preload_node = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 14
  %127 = ptrtoint ptr %mg_preload_node to i32
  call void @__asan_store4_noabort(i32 %127)
  store volatile ptr %mg_preload_node, ptr %mg_preload_node, align 8
  %prev.i167 = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 14, i32 1
  %128 = ptrtoint ptr %prev.i167 to i32
  call void @__asan_store4_noabort(i32 %128)
  store ptr %mg_preload_node, ptr %prev.i167, align 4
  %mg_node = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 15
  %129 = ptrtoint ptr %mg_node to i32
  call void @__asan_store4_noabort(i32 %129)
  store volatile ptr %mg_node, ptr %mg_node, align 8
  %prev.i168 = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 15, i32 1
  %130 = ptrtoint ptr %prev.i168 to i32
  call void @__asan_store4_noabort(i32 %130)
  store ptr %mg_node, ptr %prev.i168, align 4
  %131 = call ptr @memcpy(ptr %call7.i.i, ptr %template, i32 56)
  call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %cgrp_links41 = getelementptr inbounds %struct.css_set, ptr %old_cset, i32 0, i32 13
  %132 = ptrtoint ptr %cgrp_links41 to i32
  call void @__asan_load4_noabort(i32 %132)
  %.pn199 = load ptr, ptr %cgrp_links41, align 4
  %cmp44.not200 = icmp eq ptr %.pn199, %cgrp_links41
  br i1 %cmp44.not200, label %if.end38.do.body57_crit_edge, label %if.end38.for.body_crit_edge

if.end38.for.body_crit_edge:                      ; preds = %if.end38
  br label %for.body

if.end38.do.body57_crit_edge:                     ; preds = %if.end38
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body57

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end38.for.body_crit_edge
  %.pn201 = phi ptr [ %.pn, %for.body.for.body_crit_edge ], [ %.pn199, %if.end38.for.body_crit_edge ]
  %link.0 = getelementptr i8, ptr %.pn201, i32 -16
  %133 = ptrtoint ptr %link.0 to i32
  call void @__asan_load4_noabort(i32 %133)
  %134 = load ptr, ptr %link.0, align 4
  %root = getelementptr inbounds %struct.cgroup, ptr %134, i32 0, i32 19
  %135 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %135)
  %136 = load ptr, ptr %root, align 4
  %137 = ptrtoint ptr %root1.i to i32
  call void @__asan_load4_noabort(i32 %137)
  %138 = load ptr, ptr %root1.i, align 4
  %cmp49 = icmp eq ptr %136, %138
  %spec.select = select i1 %cmp49, ptr %cgrp, ptr %134
  call fastcc void @link_css_set(ptr noundef nonnull %tmp_links, ptr noundef nonnull %call7.i.i, ptr noundef %spec.select)
  %139 = ptrtoint ptr %.pn201 to i32
  call void @__asan_load4_noabort(i32 %139)
  %.pn = load ptr, ptr %.pn201, align 4
  %cmp44.not = icmp eq ptr %.pn, %cgrp_links41
  br i1 %cmp44.not, label %for.body.do.body57_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

for.body.do.body57_crit_edge:                     ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body57

do.body57:                                        ; preds = %for.body.do.body57_crit_edge, %if.end38.do.body57_crit_edge
  %140 = ptrtoint ptr %tmp_links to i32
  call void @__asan_load4_noabort(i32 %140)
  %141 = load volatile ptr, ptr %tmp_links, align 4
  %cmp.i.not = icmp eq ptr %141, %tmp_links
  br i1 %cmp.i.not, label %do.end77, label %do.body69, !prof !636

do.body69:                                        ; preds = %do.body57
  call void @__sanitizer_cov_trace_pc() #28
  call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1260, 0\0A.popsection", ""() #26, !srcloc !667
  unreachable

do.end77:                                         ; preds = %do.body57
  %142 = load i32, ptr @css_set_count, align 4
  %inc = add i32 %142, 1
  store i32 %inc, ptr @css_set_count, align 4
  %143 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_load4_noabort(i32 %143)
  %144 = load ptr, ptr %call7.i.i, align 8
  %145 = ptrtoint ptr %144 to i32
  %arrayidx1.1.i = getelementptr ptr, ptr %call7.i.i, i32 1
  %146 = ptrtoint ptr %arrayidx1.1.i to i32
  call void @__asan_load4_noabort(i32 %146)
  %147 = load ptr, ptr %arrayidx1.1.i, align 4
  %148 = ptrtoint ptr %147 to i32
  %add.1.i = add i32 %148, %145
  %arrayidx1.2.i = getelementptr ptr, ptr %call7.i.i, i32 2
  %149 = ptrtoint ptr %arrayidx1.2.i to i32
  call void @__asan_load4_noabort(i32 %149)
  %150 = load ptr, ptr %arrayidx1.2.i, align 8
  %151 = ptrtoint ptr %150 to i32
  %add.2.i = add i32 %add.1.i, %151
  %arrayidx1.3.i = getelementptr ptr, ptr %call7.i.i, i32 3
  %152 = ptrtoint ptr %arrayidx1.3.i to i32
  call void @__asan_load4_noabort(i32 %152)
  %153 = load ptr, ptr %arrayidx1.3.i, align 4
  %154 = ptrtoint ptr %153 to i32
  %add.3.i = add i32 %add.2.i, %154
  %arrayidx1.4.i = getelementptr ptr, ptr %call7.i.i, i32 4
  %155 = ptrtoint ptr %arrayidx1.4.i to i32
  call void @__asan_load4_noabort(i32 %155)
  %156 = load ptr, ptr %arrayidx1.4.i, align 8
  %157 = ptrtoint ptr %156 to i32
  %add.4.i = add i32 %add.3.i, %157
  %arrayidx1.5.i = getelementptr ptr, ptr %call7.i.i, i32 5
  %158 = ptrtoint ptr %arrayidx1.5.i to i32
  call void @__asan_load4_noabort(i32 %158)
  %159 = load ptr, ptr %arrayidx1.5.i, align 4
  %160 = ptrtoint ptr %159 to i32
  %add.5.i = add i32 %add.4.i, %160
  %arrayidx1.6.i = getelementptr ptr, ptr %call7.i.i, i32 6
  %161 = ptrtoint ptr %arrayidx1.6.i to i32
  call void @__asan_load4_noabort(i32 %161)
  %162 = load ptr, ptr %arrayidx1.6.i, align 8
  %163 = ptrtoint ptr %162 to i32
  %add.6.i = add i32 %add.5.i, %163
  %arrayidx1.7.i = getelementptr ptr, ptr %call7.i.i, i32 7
  %164 = ptrtoint ptr %arrayidx1.7.i to i32
  call void @__asan_load4_noabort(i32 %164)
  %165 = load ptr, ptr %arrayidx1.7.i, align 4
  %166 = ptrtoint ptr %165 to i32
  %add.7.i = add i32 %add.6.i, %166
  %arrayidx1.8.i = getelementptr ptr, ptr %call7.i.i, i32 8
  %167 = ptrtoint ptr %arrayidx1.8.i to i32
  call void @__asan_load4_noabort(i32 %167)
  %168 = load ptr, ptr %arrayidx1.8.i, align 8
  %169 = ptrtoint ptr %168 to i32
  %add.8.i = add i32 %add.7.i, %169
  %arrayidx1.9.i = getelementptr ptr, ptr %call7.i.i, i32 9
  %170 = ptrtoint ptr %arrayidx1.9.i to i32
  call void @__asan_load4_noabort(i32 %170)
  %171 = load ptr, ptr %arrayidx1.9.i, align 4
  %172 = ptrtoint ptr %171 to i32
  %add.9.i = add i32 %add.8.i, %172
  %arrayidx1.10.i = getelementptr ptr, ptr %call7.i.i, i32 10
  %173 = ptrtoint ptr %arrayidx1.10.i to i32
  call void @__asan_load4_noabort(i32 %173)
  %174 = load ptr, ptr %arrayidx1.10.i, align 8
  %175 = ptrtoint ptr %174 to i32
  %add.10.i = add i32 %add.9.i, %175
  %arrayidx1.11.i = getelementptr ptr, ptr %call7.i.i, i32 11
  %176 = ptrtoint ptr %arrayidx1.11.i to i32
  call void @__asan_load4_noabort(i32 %176)
  %177 = load ptr, ptr %arrayidx1.11.i, align 4
  %178 = ptrtoint ptr %177 to i32
  %add.11.i = add i32 %add.10.i, %178
  %arrayidx1.12.i = getelementptr ptr, ptr %call7.i.i, i32 12
  %179 = ptrtoint ptr %arrayidx1.12.i to i32
  call void @__asan_load4_noabort(i32 %179)
  %180 = load ptr, ptr %arrayidx1.12.i, align 8
  %181 = ptrtoint ptr %180 to i32
  %add.12.i = add i32 %add.11.i, %181
  %arrayidx1.13.i = getelementptr ptr, ptr %call7.i.i, i32 13
  %182 = ptrtoint ptr %arrayidx1.13.i to i32
  call void @__asan_load4_noabort(i32 %182)
  %183 = load ptr, ptr %arrayidx1.13.i, align 4
  %184 = ptrtoint ptr %183 to i32
  %add.13.i = add i32 %add.12.i, %184
  %shr.i = lshr i32 %add.13.i, 16
  %xor.i = xor i32 %shr.i, %add.13.i
  %mul.i.i = mul i32 %xor.i, 1640531527
  %shr.i169 = lshr i32 %mul.i.i, 25
  %arrayidx = getelementptr [128 x %struct.hlist_head], ptr @css_set_table, i32 0, i32 %shr.i169
  %185 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %185)
  %186 = load ptr, ptr %arrayidx, align 4
  %187 = ptrtoint ptr %hlist to i32
  call void @__asan_store4_noabort(i32 %187)
  store volatile ptr %186, ptr %hlist, align 8
  %tobool.not.i = icmp eq ptr %186, null
  br i1 %tobool.not.i, label %do.end77.hlist_add_head.exit_crit_edge, label %do.body12.i

do.end77.hlist_add_head.exit_crit_edge:           ; preds = %do.end77
  call void @__sanitizer_cov_trace_pc() #28
  br label %hlist_add_head.exit

do.body12.i:                                      ; preds = %do.end77
  call void @__sanitizer_cov_trace_pc() #28
  %pprev.i170 = getelementptr inbounds %struct.hlist_node, ptr %186, i32 0, i32 1
  %188 = ptrtoint ptr %pprev.i170 to i32
  call void @__asan_store4_noabort(i32 %188)
  store volatile ptr %hlist, ptr %pprev.i170, align 4
  br label %hlist_add_head.exit

hlist_add_head.exit:                              ; preds = %do.body12.i, %do.end77.hlist_add_head.exit_crit_edge
  %189 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %189)
  store volatile ptr %hlist, ptr %arrayidx, align 4
  %190 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %190)
  store volatile ptr %arrayidx, ptr %pprev.i, align 4
  br label %land.rhs85

land.rhs85:                                       ; preds = %css_get.exit.land.rhs85_crit_edge, %hlist_add_head.exit
  %ssid.0202 = phi i32 [ 0, %hlist_add_head.exit ], [ %inc95, %css_get.exit.land.rhs85_crit_edge ]
  %arrayidx91 = getelementptr [14 x ptr], ptr %call7.i.i, i32 0, i32 %ssid.0202
  %191 = ptrtoint ptr %arrayidx91 to i32
  call void @__asan_load4_noabort(i32 %191)
  %192 = load ptr, ptr %arrayidx91, align 4
  %arrayidx92 = getelementptr %struct.css_set, ptr %call7.i.i, i32 0, i32 9, i32 %ssid.0202
  %193 = ptrtoint ptr %192 to i32
  call void @__asan_load4_noabort(i32 %193)
  %194 = load ptr, ptr %192, align 8
  %arrayidx93 = getelementptr %struct.cgroup, ptr %194, i32 0, i32 21, i32 %ssid.0202
  %prev.i171 = getelementptr %struct.cgroup, ptr %194, i32 0, i32 21, i32 %ssid.0202, i32 1
  %195 = ptrtoint ptr %prev.i171 to i32
  call void @__asan_load4_noabort(i32 %195)
  %196 = load ptr, ptr %prev.i171, align 4
  %call.i.i = call zeroext i1 @__list_add_valid(ptr noundef %arrayidx92, ptr noundef %196, ptr noundef %arrayidx93) #26
  br i1 %call.i.i, label %if.end.i.i172, label %land.rhs85.list_add_tail.exit_crit_edge

land.rhs85.list_add_tail.exit_crit_edge:          ; preds = %land.rhs85
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_add_tail.exit

if.end.i.i172:                                    ; preds = %land.rhs85
  call void @__sanitizer_cov_trace_pc() #28
  %197 = ptrtoint ptr %prev.i171 to i32
  call void @__asan_store4_noabort(i32 %197)
  store ptr %arrayidx92, ptr %prev.i171, align 4
  %198 = ptrtoint ptr %arrayidx92 to i32
  call void @__asan_store4_noabort(i32 %198)
  store ptr %arrayidx93, ptr %arrayidx92, align 8
  %prev3.i.i = getelementptr %struct.css_set, ptr %call7.i.i, i32 0, i32 9, i32 %ssid.0202, i32 1
  %199 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %199)
  store ptr %196, ptr %prev3.i.i, align 4
  %200 = ptrtoint ptr %196 to i32
  call void @__asan_store4_noabort(i32 %200)
  store volatile ptr %arrayidx92, ptr %196, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i172, %land.rhs85.list_add_tail.exit_crit_edge
  %flags.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %192, i32 0, i32 7
  %201 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %201)
  %202 = load i32, ptr %flags.i, align 4
  %and.i173 = and i32 %202, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i173)
  %tobool.not.i174 = icmp eq i32 %and.i173, 0
  br i1 %tobool.not.i174, label %if.then.i175, label %list_add_tail.exit.css_get.exit_crit_edge

list_add_tail.exit.css_get.exit_crit_edge:        ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_get.exit

if.then.i175:                                     ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %192, i32 0, i32 2
  call fastcc void @percpu_ref_get(ptr noundef %refcnt.i) #26
  br label %css_get.exit

css_get.exit:                                     ; preds = %if.then.i175, %list_add_tail.exit.css_get.exit_crit_edge
  %inc95 = add nuw nsw i32 %ssid.0202, 1
  %exitcond.not = icmp eq i32 %inc95, 14
  br i1 %exitcond.not, label %for.end96, label %css_get.exit.land.rhs85_crit_edge

css_get.exit.land.rhs85_crit_edge:                ; preds = %css_get.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs85

for.end96:                                        ; preds = %css_get.exit
  call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  %dfl_cgrp = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 3
  %203 = ptrtoint ptr %dfl_cgrp to i32
  call void @__asan_load4_noabort(i32 %203)
  %204 = load ptr, ptr %dfl_cgrp, align 8
  %dom_cgrp.i = getelementptr inbounds %struct.cgroup, ptr %204, i32 0, i32 22
  %205 = ptrtoint ptr %dom_cgrp.i to i32
  call void @__asan_load4_noabort(i32 %205)
  %206 = load ptr, ptr %dom_cgrp.i, align 8
  %cmp.i176.not = icmp eq ptr %206, %204
  br i1 %cmp.i176.not, label %for.end96.cleanup107_crit_edge, label %if.then98

for.end96.cleanup107_crit_edge:                   ; preds = %for.end96
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup107

if.then98:                                        ; preds = %for.end96
  %call100 = call fastcc ptr @find_css_set(ptr noundef nonnull %call7.i.i, ptr noundef %206)
  %tobool101.not = icmp eq ptr %call100, null
  br i1 %tobool101.not, label %if.then102, label %if.end103

if.then102:                                       ; preds = %if.then98
  %call.i178 = call zeroext i1 @refcount_dec_not_one(ptr noundef %refcount) #26
  br i1 %call.i178, label %if.then102.cleanup107_crit_edge, label %do.body1.i

if.then102.cleanup107_crit_edge:                  ; preds = %if.then102
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup107

do.body1.i:                                       ; preds = %if.then102
  call void @__sanitizer_cov_trace_pc() #28
  %call3.i = call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @css_set_lock) #26
  call void @put_css_set_locked(ptr noundef %call7.i.i) #26
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @css_set_lock, i32 noundef %call3.i) #26
  br label %cleanup107

if.end103:                                        ; preds = %if.then98
  call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %207 = ptrtoint ptr %dom_cset to i32
  call void @__asan_store4_noabort(i32 %207)
  store ptr %call100, ptr %dom_cset, align 4
  %threaded_csets_node = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 11
  %threaded_csets105 = getelementptr inbounds %struct.css_set, ptr %call100, i32 0, i32 10
  %prev.i179 = getelementptr inbounds %struct.css_set, ptr %call100, i32 0, i32 10, i32 1
  %208 = ptrtoint ptr %prev.i179 to i32
  call void @__asan_load4_noabort(i32 %208)
  %209 = load ptr, ptr %prev.i179, align 4
  %call.i.i180 = call zeroext i1 @__list_add_valid(ptr noundef %threaded_csets_node, ptr noundef %209, ptr noundef %threaded_csets105) #26
  br i1 %call.i.i180, label %if.end.i.i182, label %if.end103.list_add_tail.exit183_crit_edge

if.end103.list_add_tail.exit183_crit_edge:        ; preds = %if.end103
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_add_tail.exit183

if.end.i.i182:                                    ; preds = %if.end103
  call void @__sanitizer_cov_trace_pc() #28
  %210 = ptrtoint ptr %prev.i179 to i32
  call void @__asan_store4_noabort(i32 %210)
  store ptr %threaded_csets_node, ptr %prev.i179, align 4
  %211 = ptrtoint ptr %threaded_csets_node to i32
  call void @__asan_store4_noabort(i32 %211)
  store ptr %threaded_csets105, ptr %threaded_csets_node, align 8
  %prev3.i.i181 = getelementptr inbounds %struct.css_set, ptr %call7.i.i, i32 0, i32 11, i32 1
  %212 = ptrtoint ptr %prev3.i.i181 to i32
  call void @__asan_store4_noabort(i32 %212)
  store ptr %209, ptr %prev3.i.i181, align 4
  %213 = ptrtoint ptr %209 to i32
  call void @__asan_store4_noabort(i32 %213)
  store volatile ptr %threaded_csets_node, ptr %209, align 4
  br label %list_add_tail.exit183

list_add_tail.exit183:                            ; preds = %if.end.i.i182, %if.end103.list_add_tail.exit183_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  br label %cleanup107

cleanup107:                                       ; preds = %list_add_tail.exit183, %do.body1.i, %if.then102.cleanup107_crit_edge, %for.end96.cleanup107_crit_edge, %if.then37, %if.end30.critedge.cleanup107_crit_edge, %get_css_set.exit
  %retval.1 = phi ptr [ %cset.081.i, %get_css_set.exit ], [ null, %if.then37 ], [ null, %if.end30.critedge.cleanup107_crit_edge ], [ %call7.i.i, %list_add_tail.exit183 ], [ %call7.i.i, %for.end96.cleanup107_crit_edge ], [ null, %if.then102.cleanup107_crit_edge ], [ null, %do.body1.i ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %tmp_links) #26
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %template) #26
  ret ptr %retval.1
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @put_css_set(ptr noundef %cset) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  %refcount = getelementptr inbounds %struct.css_set, ptr %cset, i32 0, i32 1
  %call = tail call zeroext i1 @refcount_dec_not_one(ptr noundef %refcount) #26
  br i1 %call, label %entry.cleanup_crit_edge, label %do.body1

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

do.body1:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %call3 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @css_set_lock) #26
  tail call void @put_css_set_locked(ptr noundef %cset)
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @css_set_lock, i32 noundef %call3) #26
  br label %cleanup

cleanup:                                          ; preds = %do.body1, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_migrate(ptr noundef %leader, i1 noundef zeroext %threadgroup, ptr noundef %mgctx) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %0 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !639
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #26
  %call.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i, label %entry.do.body.preheader_crit_edge, label %land.lhs.true.i

entry.do.body.preheader_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body.preheader

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.do.body.preheader_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.do.body.preheader_crit_edge:      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body.preheader

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.do.body.preheader_crit_edge, label %if.then.i

land.lhs.true2.i.do.body.preheader_crit_edge:     ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body.preheader

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 696, ptr noundef nonnull @.str.55) #26
  br label %do.body.preheader

do.body.preheader:                                ; preds = %if.then.i, %land.lhs.true2.i.do.body.preheader_crit_edge, %land.lhs.true.i.do.body.preheader_crit_edge, %entry.do.body.preheader_crit_edge
  br label %do.body

do.body:                                          ; preds = %do.cond.do.body_crit_edge, %do.body.preheader
  %task.0 = phi ptr [ %add.ptr.i, %do.cond.do.body_crit_edge ], [ %leader, %do.body.preheader ]
  tail call fastcc void @cgroup_migrate_add_task(ptr noundef %task.0, ptr noundef %mgctx)
  br i1 %threadgroup, label %do.cond, label %do.body.do.end_crit_edge

do.body.do.end_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

do.cond:                                          ; preds = %do.body
  %thread_group.i = getelementptr inbounds %struct.task_struct, ptr %task.0, i32 0, i32 80
  %4 = ptrtoint ptr %thread_group.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %thread_group.i, align 4
  %add.ptr.i = getelementptr i8, ptr %5, i32 -1396
  %cmp.not = icmp eq ptr %add.ptr.i, %leader
  br i1 %cmp.not, label %do.cond.do.end_crit_edge, label %do.cond.do.body_crit_edge

do.cond.do.body_crit_edge:                        ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body

do.cond.do.end_crit_edge:                         ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

do.end:                                           ; preds = %do.cond.do.end_crit_edge, %do.body.do.end_crit_edge
  %call.i5 = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i5, label %do.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i8

do.end.rcu_read_unlock.exit_crit_edge:            ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true.i8:                                 ; preds = %do.end
  %call1.i6 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i6)
  %tobool.not.i7 = icmp eq i32 %call1.i6, 0
  br i1 %tobool.not.i7, label %land.lhs.true.i8.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i10

land.lhs.true.i8.rcu_read_unlock.exit_crit_edge:  ; preds = %land.lhs.true.i8
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true2.i10:                               ; preds = %land.lhs.true.i8
  %.b4.i9 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i9, label %land.lhs.true2.i10.rcu_read_unlock.exit_crit_edge, label %if.then.i11

land.lhs.true2.i10.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i10
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

if.then.i11:                                      ; preds = %land.lhs.true2.i10
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 724, ptr noundef nonnull @.str.57) #26
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i11, %land.lhs.true2.i10.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i8.rcu_read_unlock.exit_crit_edge, %do.end.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !640
  %6 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i12 = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i.i.i12 to ptr
  %preempt_count.i.i.i.i13 = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i.i.i.i13 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i.i.i.i13, align 4
  %sub.i.i.i = add i32 %9, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i13, align 4
  tail call void @rcu_read_unlock_strict() #26
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #26
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  %call1 = tail call fastcc i32 @cgroup_migrate_execute(ptr noundef %mgctx)
  ret i32 %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cgroup_migrate_add_task(ptr noundef %task, ptr noundef %mgctx) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 2361, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %flags = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 3
  %1 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags, align 4
  %and = and i32 %2, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool24.not = icmp eq i32 %and, 0
  br i1 %tobool24.not, label %if.end26, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end26:                                         ; preds = %if.end
  %cg_list = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 165
  %3 = ptrtoint ptr %cg_list to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile ptr, ptr %cg_list, align 4
  %cmp.i.not = icmp eq ptr %4, %cg_list
  br i1 %cmp.i.not, label %land.rhs34, label %if.end26.if.end72_crit_edge

if.end26.if.end72_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end72

land.rhs34:                                       ; preds = %if.end26
  %.b112 = load i1, ptr @cgroup_migrate_add_task.__already_done, align 1
  br i1 %.b112, label %land.rhs34.if.end72_crit_edge, label %if.then45, !prof !636

land.rhs34.if.end72_crit_edge:                    ; preds = %land.rhs34
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end72

if.then45:                                        ; preds = %land.rhs34
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_migrate_add_task.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 2368, i32 noundef 9, ptr noundef null) #26
  br label %if.end72

if.end72:                                         ; preds = %if.then45, %land.rhs34.if.end72_crit_edge, %if.end26.if.end72_crit_edge
  %cgroups.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 164
  %5 = ptrtoint ptr %cgroups.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %cgroups.i, align 16
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %if.end72.task_css_set.exit_crit_edge

if.end72.task_css_set.exit_crit_edge:             ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false.i:                                  ; preds = %if.end72
  %call.i18.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i18.i)
  %tobool3.not.i = icmp eq i32 %call.i18.i, 0
  br i1 %tobool3.not.i, label %lor.lhs.false4.i, label %lor.lhs.false.i.task_css_set.exit_crit_edge

lor.lhs.false.i.task_css_set.exit_crit_edge:      ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false4.i:                                 ; preds = %lor.lhs.false.i
  %7 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags, align 4
  %and.i = and i32 %8, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool5.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool5.not.i, label %lor.lhs.false6.i, label %lor.lhs.false4.i.task_css_set.exit_crit_edge

lor.lhs.false4.i.task_css_set.exit_crit_edge:     ; preds = %lor.lhs.false4.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false6.i:                                 ; preds = %lor.lhs.false4.i
  %call7.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %land.lhs.true.i, label %lor.lhs.false6.i.task_css_set.exit_crit_edge

lor.lhs.false6.i.task_css_set.exit_crit_edge:     ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

land.lhs.true.i:                                  ; preds = %lor.lhs.false6.i
  %call9.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool10.not.i = icmp eq i32 %call9.i, 0
  br i1 %tobool10.not.i, label %land.lhs.true.i.task_css_set.exit_crit_edge, label %land.lhs.true11.i

land.lhs.true.i.task_css_set.exit_crit_edge:      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

land.lhs.true11.i:                                ; preds = %land.lhs.true.i
  %.b17.i = load i1, ptr @task_css_set.__warned, align 1
  br i1 %.b17.i, label %land.lhs.true11.i.task_css_set.exit_crit_edge, label %if.then.i

land.lhs.true11.i.task_css_set.exit_crit_edge:    ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

if.then.i:                                        ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @task_css_set.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 481, ptr noundef nonnull @.str.22) #26
  br label %task_css_set.exit

task_css_set.exit:                                ; preds = %if.then.i, %land.lhs.true11.i.task_css_set.exit_crit_edge, %land.lhs.true.i.task_css_set.exit_crit_edge, %lor.lhs.false6.i.task_css_set.exit_crit_edge, %lor.lhs.false4.i.task_css_set.exit_crit_edge, %lor.lhs.false.i.task_css_set.exit_crit_edge, %if.end72.task_css_set.exit_crit_edge
  %mg_src_cgrp = getelementptr inbounds %struct.css_set, ptr %6, i32 0, i32 16
  %9 = ptrtoint ptr %mg_src_cgrp to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %mg_src_cgrp, align 4
  %tobool81.not = icmp eq ptr %10, null
  br i1 %tobool81.not, label %task_css_set.exit.cleanup_crit_edge, label %if.end83

task_css_set.exit.cleanup_crit_edge:              ; preds = %task_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end83:                                         ; preds = %task_css_set.exit
  %nr_tasks = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 2
  %11 = ptrtoint ptr %nr_tasks to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %nr_tasks, align 4
  %inc = add i32 %12, 1
  store i32 %inc, ptr %nr_tasks, align 4
  %mg_tasks = getelementptr inbounds %struct.css_set, ptr %6, i32 0, i32 6
  %call.i.i113 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %cg_list) #26
  br i1 %call.i.i113, label %if.end.i.i, label %if.end83.__list_del_entry.exit.i_crit_edge

if.end83.__list_del_entry.exit.i_crit_edge:       ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #28
  br label %__list_del_entry.exit.i

if.end.i.i:                                       ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 165, i32 1
  %13 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %prev.i.i, align 4
  %15 = ptrtoint ptr %cg_list to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %cg_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %16, i32 0, i32 1
  %17 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %14, ptr %prev1.i.i.i, align 4
  %18 = ptrtoint ptr %14 to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile ptr %16, ptr %14, align 4
  br label %__list_del_entry.exit.i

__list_del_entry.exit.i:                          ; preds = %if.end.i.i, %if.end83.__list_del_entry.exit.i_crit_edge
  %prev.i2.i = getelementptr inbounds %struct.css_set, ptr %6, i32 0, i32 6, i32 1
  %19 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %prev.i2.i, align 4
  %call.i.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %cg_list, ptr noundef %20, ptr noundef %mg_tasks) #26
  br i1 %call.i.i.i, label %if.end.i.i.i, label %__list_del_entry.exit.i.list_move_tail.exit_crit_edge

__list_del_entry.exit.i.list_move_tail.exit_crit_edge: ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_move_tail.exit

if.end.i.i.i:                                     ; preds = %__list_del_entry.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  %21 = ptrtoint ptr %prev.i2.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %cg_list, ptr %prev.i2.i, align 4
  %22 = ptrtoint ptr %cg_list to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %mg_tasks, ptr %cg_list, align 4
  %prev3.i.i.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 165, i32 1
  %23 = ptrtoint ptr %prev3.i.i.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %20, ptr %prev3.i.i.i, align 4
  %24 = ptrtoint ptr %20 to i32
  call void @__asan_store4_noabort(i32 %24)
  store volatile ptr %cg_list, ptr %20, align 4
  br label %list_move_tail.exit

list_move_tail.exit:                              ; preds = %if.end.i.i.i, %__list_del_entry.exit.i.list_move_tail.exit_crit_edge
  %mg_node = getelementptr inbounds %struct.css_set, ptr %6, i32 0, i32 15
  %25 = ptrtoint ptr %mg_node to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile ptr, ptr %mg_node, align 4
  %cmp.i114.not = icmp eq ptr %26, %mg_node
  br i1 %cmp.i114.not, label %if.then87, label %list_move_tail.exit.if.end90_crit_edge

list_move_tail.exit.if.end90_crit_edge:           ; preds = %list_move_tail.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end90

if.then87:                                        ; preds = %list_move_tail.exit
  %tset = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2
  %prev.i = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 0, i32 1
  %27 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %prev.i, align 4
  %call.i.i116 = tail call zeroext i1 @__list_add_valid(ptr noundef %mg_node, ptr noundef %28, ptr noundef %tset) #26
  br i1 %call.i.i116, label %if.end.i.i117, label %if.then87.if.end90_crit_edge

if.then87.if.end90_crit_edge:                     ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end90

if.end.i.i117:                                    ; preds = %if.then87
  call void @__sanitizer_cov_trace_pc() #28
  %29 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %mg_node, ptr %prev.i, align 4
  %30 = ptrtoint ptr %mg_node to i32
  call void @__asan_store4_noabort(i32 %30)
  store ptr %tset, ptr %mg_node, align 4
  %prev3.i.i = getelementptr inbounds %struct.css_set, ptr %6, i32 0, i32 15, i32 1
  %31 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %28, ptr %prev3.i.i, align 4
  %32 = ptrtoint ptr %28 to i32
  call void @__asan_store4_noabort(i32 %32)
  store volatile ptr %mg_node, ptr %28, align 4
  br label %if.end90

if.end90:                                         ; preds = %if.end.i.i117, %if.then87.if.end90_crit_edge, %list_move_tail.exit.if.end90_crit_edge
  %mg_dst_cset = getelementptr inbounds %struct.css_set, ptr %6, i32 0, i32 18
  %33 = ptrtoint ptr %mg_dst_cset to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %mg_dst_cset, align 4
  %mg_node91 = getelementptr inbounds %struct.css_set, ptr %34, i32 0, i32 15
  %35 = ptrtoint ptr %mg_node91 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile ptr, ptr %mg_node91, align 4
  %cmp.i118.not = icmp eq ptr %36, %mg_node91
  br i1 %cmp.i118.not, label %if.then94, label %if.end90.cleanup_crit_edge

if.end90.cleanup_crit_edge:                       ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then94:                                        ; preds = %if.end90
  %dst_csets = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 1
  %prev.i120 = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 1, i32 1
  %37 = ptrtoint ptr %prev.i120 to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %prev.i120, align 4
  %call.i.i121 = tail call zeroext i1 @__list_add_valid(ptr noundef %mg_node91, ptr noundef %38, ptr noundef %dst_csets) #26
  br i1 %call.i.i121, label %if.end.i.i123, label %if.then94.cleanup_crit_edge

if.then94.cleanup_crit_edge:                      ; preds = %if.then94
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end.i.i123:                                    ; preds = %if.then94
  call void @__sanitizer_cov_trace_pc() #28
  %39 = ptrtoint ptr %prev.i120 to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr %mg_node91, ptr %prev.i120, align 4
  %40 = ptrtoint ptr %mg_node91 to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %dst_csets, ptr %mg_node91, align 4
  %prev3.i.i122 = getelementptr inbounds %struct.css_set, ptr %34, i32 0, i32 15, i32 1
  %41 = ptrtoint ptr %prev3.i.i122 to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr %38, ptr %prev3.i.i122, align 4
  %42 = ptrtoint ptr %38 to i32
  call void @__asan_store4_noabort(i32 %42)
  store volatile ptr %mg_node91, ptr %38, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i123, %if.then94.cleanup_crit_edge, %if.end90.cleanup_crit_edge, %task_css_set.exit.cleanup_crit_edge, %if.end.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @cgroup_migrate_execute(ptr noundef %mgctx) unnamed_addr #0 align 64 {
entry:
  %__ss_mask = alloca i32, align 4
  %__ss_mask55 = alloca i32, align 4
  %__ss_mask80 = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %tset1 = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2
  %nr_tasks = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 2
  %0 = ptrtoint ptr %nr_tasks to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %nr_tasks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %entry.if.end12_crit_edge, label %do.body

entry.if.end12_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end12

do.body:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__ss_mask) #26
  %ss_mask = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 3
  %2 = ptrtoint ptr %ss_mask to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %ss_mask, align 4
  %conv = zext i16 %3 to i32
  %4 = ptrtoint ptr %__ss_mask to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %conv, ptr %__ss_mask, align 4
  %call = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask, i32 noundef 14, i32 noundef 0) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %call)
  %cmp221 = icmp slt i32 %call, 14
  br i1 %cmp221, label %for.body.lr.ph, label %do.body.cleanup.thread_crit_edge

do.body.cleanup.thread_crit_edge:                 ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup.thread

for.body.lr.ph:                                   ; preds = %do.body
  %ssid5 = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 3
  br label %for.body

cleanup.thread:                                   ; preds = %for.inc.cleanup.thread_crit_edge, %do.body.cleanup.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__ss_mask) #26
  br label %if.end12

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %ssid.0222 = phi i32 [ %call, %for.body.lr.ph ], [ %call11, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %ssid.0222
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx, align 4
  %can_attach = getelementptr inbounds %struct.cgroup_subsys, ptr %6, i32 0, i32 8
  %7 = ptrtoint ptr %can_attach to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %can_attach, align 4
  %tobool3.not = icmp eq ptr %8, null
  br i1 %tobool3.not, label %for.body.for.inc_crit_edge, label %if.then4

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

if.then4:                                         ; preds = %for.body
  %9 = ptrtoint ptr %ssid5 to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 %ssid.0222, ptr %ssid5, align 4
  %10 = ptrtoint ptr %can_attach to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %can_attach, align 4
  %call7 = call i32 %11(ptr noundef %tset1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %if.then4.for.inc_crit_edge, label %out_cancel_attach

if.then4.for.inc_crit_edge:                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

for.inc:                                          ; preds = %if.then4.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %add = add nsw i32 %ssid.0222, 1
  %call11 = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask, i32 noundef 14, i32 noundef %add) #26
  %cmp = icmp slt i32 %call11, 14
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.cleanup.thread_crit_edge

for.inc.cleanup.thread_crit_edge:                 ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup.thread

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

if.end12:                                         ; preds = %cleanup.thread, %entry.if.end12_crit_edge
  call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %12 = ptrtoint ptr %tset1 to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pn231 = load ptr, ptr %tset1, align 4
  %cmp15.not232 = icmp eq ptr %.pn231, %tset1
  br i1 %cmp15.not232, label %if.end12.for.end50_crit_edge, label %if.end12.for.body17_crit_edge

if.end12.for.body17_crit_edge:                    ; preds = %if.end12
  br label %for.body17

if.end12.for.end50_crit_edge:                     ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end50

for.cond13.loopexit:                              ; preds = %get_css_set.exit.for.cond13.loopexit_crit_edge, %for.body17.for.cond13.loopexit_crit_edge
  %13 = ptrtoint ptr %.pn233 to i32
  call void @__asan_load4_noabort(i32 %13)
  %.pn = load ptr, ptr %.pn233, align 4
  %cmp15.not = icmp eq ptr %.pn, %tset1
  br i1 %cmp15.not, label %for.cond13.loopexit.for.end50_crit_edge, label %for.cond13.loopexit.for.body17_crit_edge

for.cond13.loopexit.for.body17_crit_edge:         ; preds = %for.cond13.loopexit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body17

for.cond13.loopexit.for.end50_crit_edge:          ; preds = %for.cond13.loopexit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end50

for.body17:                                       ; preds = %for.cond13.loopexit.for.body17_crit_edge, %if.end12.for.body17_crit_edge
  %.pn233 = phi ptr [ %.pn, %for.cond13.loopexit.for.body17_crit_edge ], [ %.pn231, %if.end12.for.body17_crit_edge ]
  %mg_tasks = getelementptr i8, ptr %.pn233, i32 -176
  %14 = ptrtoint ptr %mg_tasks to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mg_tasks, align 4
  %cmp29.not229 = icmp eq ptr %15, %mg_tasks
  br i1 %cmp29.not229, label %for.body17.for.cond13.loopexit_crit_edge, label %for.body32.lr.ph

for.body17.for.cond13.loopexit_crit_edge:         ; preds = %for.body17
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.cond13.loopexit

for.body32.lr.ph:                                 ; preds = %for.body17
  %mg_dst_cset = getelementptr i8, ptr %.pn233, i32 16
  br label %for.body32

for.body32:                                       ; preds = %get_css_set.exit.for.body32_crit_edge, %for.body32.lr.ph
  %.pn208.in230 = phi ptr [ %15, %for.body32.lr.ph ], [ %.pn208, %get_css_set.exit.for.body32_crit_edge ]
  %task.0 = getelementptr i8, ptr %.pn208.in230, i32 -4468
  %16 = ptrtoint ptr %.pn208.in230 to i32
  call void @__asan_load4_noabort(i32 %16)
  %.pn208 = load ptr, ptr %.pn208.in230, align 4
  %cgroups.i = getelementptr i8, ptr %.pn208.in230, i32 -4
  %17 = ptrtoint ptr %cgroups.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load volatile ptr, ptr %cgroups.i, align 16
  %call.i.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %for.body32.task_css_set.exit_crit_edge

for.body32.task_css_set.exit_crit_edge:           ; preds = %for.body32
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false.i:                                  ; preds = %for.body32
  %call.i18.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i18.i)
  %tobool3.not.i = icmp eq i32 %call.i18.i, 0
  br i1 %tobool3.not.i, label %lor.lhs.false4.i, label %lor.lhs.false.i.task_css_set.exit_crit_edge

lor.lhs.false.i.task_css_set.exit_crit_edge:      ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false4.i:                                 ; preds = %lor.lhs.false.i
  %flags.i = getelementptr i8, ptr %.pn208.in230, i32 -4456
  %19 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %20, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool5.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool5.not.i, label %lor.lhs.false6.i, label %lor.lhs.false4.i.task_css_set.exit_crit_edge

lor.lhs.false4.i.task_css_set.exit_crit_edge:     ; preds = %lor.lhs.false4.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false6.i:                                 ; preds = %lor.lhs.false4.i
  %call7.i = call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %land.lhs.true.i, label %lor.lhs.false6.i.task_css_set.exit_crit_edge

lor.lhs.false6.i.task_css_set.exit_crit_edge:     ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

land.lhs.true.i:                                  ; preds = %lor.lhs.false6.i
  %call9.i = call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool10.not.i = icmp eq i32 %call9.i, 0
  br i1 %tobool10.not.i, label %land.lhs.true.i.task_css_set.exit_crit_edge, label %land.lhs.true11.i

land.lhs.true.i.task_css_set.exit_crit_edge:      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

land.lhs.true11.i:                                ; preds = %land.lhs.true.i
  %.b17.i = load i1, ptr @task_css_set.__warned, align 1
  br i1 %.b17.i, label %land.lhs.true11.i.task_css_set.exit_crit_edge, label %if.then.i

land.lhs.true11.i.task_css_set.exit_crit_edge:    ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

if.then.i:                                        ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @task_css_set.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 481, ptr noundef nonnull @.str.22) #26
  br label %task_css_set.exit

task_css_set.exit:                                ; preds = %if.then.i, %land.lhs.true11.i.task_css_set.exit_crit_edge, %land.lhs.true.i.task_css_set.exit_crit_edge, %lor.lhs.false6.i.task_css_set.exit_crit_edge, %lor.lhs.false4.i.task_css_set.exit_crit_edge, %lor.lhs.false.i.task_css_set.exit_crit_edge, %for.body32.task_css_set.exit_crit_edge
  %21 = ptrtoint ptr %mg_dst_cset to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %mg_dst_cset, align 4
  %refcount.i = getelementptr inbounds %struct.css_set, ptr %22, i32 0, i32 1
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #26
  call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #26
  %23 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #26, !srcloc !663
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %23, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %task_css_set.exit.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !637

task_css_set.exit.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %task_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %task_css_set.exit
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %24 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %24)
  %.not.i.i.i.i = icmp sgt i32 %24, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.get_css_set.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !636

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.get_css_set.exit_crit_edge:       ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %get_css_set.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %task_css_set.exit.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %task_css_set.exit.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef %.sink.i.i.i.i) #26
  br label %get_css_set.exit

get_css_set.exit:                                 ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.get_css_set.exit_crit_edge
  %nr_tasks34 = getelementptr inbounds %struct.css_set, ptr %22, i32 0, i32 4
  %25 = ptrtoint ptr %nr_tasks34 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %nr_tasks34, align 4
  %inc = add i32 %26, 1
  store i32 %inc, ptr %nr_tasks34, align 4
  call fastcc void @css_set_move_task(ptr noundef %task.0, ptr noundef %18, ptr noundef %22, i1 noundef zeroext true)
  %nr_tasks35 = getelementptr inbounds %struct.css_set, ptr %18, i32 0, i32 4
  %27 = ptrtoint ptr %nr_tasks35 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %nr_tasks35, align 4
  %dec = add i32 %28, -1
  store i32 %dec, ptr %nr_tasks35, align 4
  %dfl_cgrp = getelementptr inbounds %struct.css_set, ptr %18, i32 0, i32 3
  %29 = ptrtoint ptr %dfl_cgrp to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %dfl_cgrp, align 4
  %dfl_cgrp36 = getelementptr inbounds %struct.css_set, ptr %22, i32 0, i32 3
  %31 = ptrtoint ptr %dfl_cgrp36 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %dfl_cgrp36, align 4
  call void @cgroup_freezer_migrate_task(ptr noundef %task.0, ptr noundef %30, ptr noundef %32) #26
  call void @put_css_set_locked(ptr noundef %18)
  %cmp29.not = icmp eq ptr %.pn208, %mg_tasks
  br i1 %cmp29.not, label %get_css_set.exit.for.cond13.loopexit_crit_edge, label %get_css_set.exit.for.body32_crit_edge

get_css_set.exit.for.body32_crit_edge:            ; preds = %get_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body32

get_css_set.exit.for.cond13.loopexit_crit_edge:   ; preds = %get_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.cond13.loopexit

for.end50:                                        ; preds = %for.cond13.loopexit.for.end50_crit_edge, %if.end12.for.end50_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  %dst_csets = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 1
  %csets = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 4
  %33 = ptrtoint ptr %csets to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %dst_csets, ptr %csets, align 4
  %34 = ptrtoint ptr %nr_tasks to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %nr_tasks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %35)
  %tobool52.not = icmp eq i32 %35, 0
  br i1 %tobool52.not, label %for.end50.out_release_tset_crit_edge, label %do.body54

for.end50.out_release_tset_crit_edge:             ; preds = %for.end50
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_release_tset

do.body54:                                        ; preds = %for.end50
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__ss_mask55) #26
  %ss_mask56 = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 3
  %36 = ptrtoint ptr %ss_mask56 to i32
  call void @__asan_load2_noabort(i32 %36)
  %37 = load i16, ptr %ss_mask56, align 4
  %conv57 = zext i16 %37 to i32
  %38 = ptrtoint ptr %__ss_mask55 to i32
  call void @__asan_store4_noabort(i32 %38)
  store i32 %conv57, ptr %__ss_mask55, align 4
  %call58 = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask55, i32 noundef 14, i32 noundef 0) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %call58)
  %cmp60234 = icmp slt i32 %call58, 14
  br i1 %cmp60234, label %for.body62.lr.ph, label %do.body54.for.end72_crit_edge

do.body54.for.end72_crit_edge:                    ; preds = %do.body54
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end72

for.body62.lr.ph:                                 ; preds = %do.body54
  %ssid66 = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 3
  br label %for.body62

for.body62:                                       ; preds = %for.inc69.for.body62_crit_edge, %for.body62.lr.ph
  %ssid.1235 = phi i32 [ %call58, %for.body62.lr.ph ], [ %call71, %for.inc69.for.body62_crit_edge ]
  %arrayidx63 = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %ssid.1235
  %39 = ptrtoint ptr %arrayidx63 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %arrayidx63, align 4
  %attach = getelementptr inbounds %struct.cgroup_subsys, ptr %40, i32 0, i32 10
  %41 = ptrtoint ptr %attach to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %attach, align 4
  %tobool64.not = icmp eq ptr %42, null
  br i1 %tobool64.not, label %for.body62.for.inc69_crit_edge, label %if.then65

for.body62.for.inc69_crit_edge:                   ; preds = %for.body62
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc69

if.then65:                                        ; preds = %for.body62
  call void @__sanitizer_cov_trace_pc() #28
  %43 = ptrtoint ptr %ssid66 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %ssid.1235, ptr %ssid66, align 4
  %44 = ptrtoint ptr %attach to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %attach, align 4
  call void %45(ptr noundef %tset1) #26
  br label %for.inc69

for.inc69:                                        ; preds = %if.then65, %for.body62.for.inc69_crit_edge
  %add70 = add nsw i32 %ssid.1235, 1
  %call71 = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask55, i32 noundef 14, i32 noundef %add70) #26
  %cmp60 = icmp slt i32 %call71, 14
  br i1 %cmp60, label %for.inc69.for.body62_crit_edge, label %for.inc69.for.end72_crit_edge

for.inc69.for.end72_crit_edge:                    ; preds = %for.inc69
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end72

for.inc69.for.body62_crit_edge:                   ; preds = %for.inc69
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body62

for.end72:                                        ; preds = %for.inc69.for.end72_crit_edge, %do.body54.for.end72_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__ss_mask55) #26
  br label %out_release_tset

out_cancel_attach:                                ; preds = %if.then4
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__ss_mask) #26
  %46 = ptrtoint ptr %nr_tasks to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load i32, ptr %nr_tasks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %47)
  %tobool77.not = icmp eq i32 %47, 0
  br i1 %tobool77.not, label %out_cancel_attach.out_release_tset_crit_edge, label %do.body79

out_cancel_attach.out_release_tset_crit_edge:     ; preds = %out_cancel_attach
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_release_tset

do.body79:                                        ; preds = %out_cancel_attach
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__ss_mask80) #26
  %48 = ptrtoint ptr %ss_mask to i32
  call void @__asan_load2_noabort(i32 %48)
  %49 = load i16, ptr %ss_mask, align 4
  %conv82 = zext i16 %49 to i32
  %50 = ptrtoint ptr %__ss_mask80 to i32
  call void @__asan_store4_noabort(i32 %50)
  store i32 %conv82, ptr %__ss_mask80, align 4
  %call83 = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask80, i32 noundef 14, i32 noundef 0) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 13, i32 %call83)
  %cmp85224 = icmp sgt i32 %call83, 13
  call void @__sanitizer_cov_trace_cmp4(i32 %call83, i32 %ssid.0222)
  %cmp89225 = icmp eq i32 %call83, %ssid.0222
  %or.cond226 = select i1 %cmp85224, i1 true, i1 %cmp89225
  br i1 %or.cond226, label %do.body79.for.end101_crit_edge, label %do.body79.if.end92_crit_edge

do.body79.if.end92_crit_edge:                     ; preds = %do.body79
  br label %if.end92

do.body79.for.end101_crit_edge:                   ; preds = %do.body79
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end101

if.end92:                                         ; preds = %for.inc98.if.end92_crit_edge, %do.body79.if.end92_crit_edge
  %ssid.2227 = phi i32 [ %call100, %for.inc98.if.end92_crit_edge ], [ %call83, %do.body79.if.end92_crit_edge ]
  %arrayidx88 = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %ssid.2227
  %51 = ptrtoint ptr %arrayidx88 to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %arrayidx88, align 4
  %cancel_attach = getelementptr inbounds %struct.cgroup_subsys, ptr %52, i32 0, i32 9
  %53 = ptrtoint ptr %cancel_attach to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %cancel_attach, align 4
  %tobool93.not = icmp eq ptr %54, null
  br i1 %tobool93.not, label %if.end92.for.inc98_crit_edge, label %if.then94

if.end92.for.inc98_crit_edge:                     ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc98

if.then94:                                        ; preds = %if.end92
  call void @__sanitizer_cov_trace_pc() #28
  %55 = ptrtoint ptr %ssid5 to i32
  call void @__asan_store4_noabort(i32 %55)
  store i32 %ssid.2227, ptr %ssid5, align 4
  %56 = ptrtoint ptr %cancel_attach to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %cancel_attach, align 4
  call void %57(ptr noundef %tset1) #26
  br label %for.inc98

for.inc98:                                        ; preds = %if.then94, %if.end92.for.inc98_crit_edge
  %add99 = add nsw i32 %ssid.2227, 1
  %call100 = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask80, i32 noundef 14, i32 noundef %add99) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 13, i32 %call100)
  %cmp85 = icmp sgt i32 %call100, 13
  call void @__sanitizer_cov_trace_cmp4(i32 %call100, i32 %ssid.0222)
  %cmp89 = icmp eq i32 %call100, %ssid.0222
  %or.cond = select i1 %cmp85, i1 true, i1 %cmp89
  br i1 %or.cond, label %for.inc98.for.end101_crit_edge, label %for.inc98.if.end92_crit_edge

for.inc98.if.end92_crit_edge:                     ; preds = %for.inc98
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end92

for.inc98.for.end101_crit_edge:                   ; preds = %for.inc98
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end101

for.end101:                                       ; preds = %for.inc98.for.end101_crit_edge, %do.body79.for.end101_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__ss_mask80) #26
  br label %out_release_tset

out_release_tset:                                 ; preds = %for.end101, %out_cancel_attach.out_release_tset_crit_edge, %for.end72, %for.end50.out_release_tset_crit_edge
  %ret.3 = phi i32 [ %call7, %for.end101 ], [ %call7, %out_cancel_attach.out_release_tset_crit_edge ], [ 0, %for.end72 ], [ 0, %for.end50.out_release_tset_crit_edge ]
  call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %dst_csets105 = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 1
  %58 = ptrtoint ptr %dst_csets105 to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load volatile ptr, ptr %dst_csets105, align 4
  %cmp.i.not.i = icmp eq ptr %59, %dst_csets105
  br i1 %cmp.i.not.i, label %out_release_tset.list_splice_init.exit_crit_edge, label %if.then.i211

out_release_tset.list_splice_init.exit_crit_edge: ; preds = %out_release_tset
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_splice_init.exit

if.then.i211:                                     ; preds = %out_release_tset
  call void @__sanitizer_cov_trace_pc() #28
  %60 = ptrtoint ptr %tset1 to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %tset1, align 4
  %prev2.i.i = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 1, i32 1
  %62 = ptrtoint ptr %prev2.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load ptr, ptr %prev2.i.i, align 4
  %prev3.i.i = getelementptr inbounds %struct.list_head, ptr %59, i32 0, i32 1
  %64 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store ptr %tset1, ptr %prev3.i.i, align 4
  store ptr %59, ptr %tset1, align 4
  %65 = ptrtoint ptr %63 to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr %61, ptr %63, align 4
  %prev6.i.i = getelementptr inbounds %struct.list_head, ptr %61, i32 0, i32 1
  %66 = ptrtoint ptr %prev6.i.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr %63, ptr %prev6.i.i, align 4
  %67 = ptrtoint ptr %dst_csets105 to i32
  call void @__asan_store4_noabort(i32 %67)
  store volatile ptr %dst_csets105, ptr %dst_csets105, align 4
  store ptr %dst_csets105, ptr %prev2.i.i, align 4
  br label %list_splice_init.exit

list_splice_init.exit:                            ; preds = %if.then.i211, %out_release_tset.list_splice_init.exit_crit_edge
  %68 = ptrtoint ptr %tset1 to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %tset1, align 4
  %cmp120.not237 = icmp eq ptr %69, %tset1
  br i1 %cmp120.not237, label %list_splice_init.exit.cleanup136_crit_edge, label %list_splice_init.exit.for.body123_crit_edge

list_splice_init.exit.for.body123_crit_edge:      ; preds = %list_splice_init.exit
  br label %for.body123

list_splice_init.exit.cleanup136_crit_edge:       ; preds = %list_splice_init.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup136

for.body123:                                      ; preds = %list_del_init.exit.for.body123_crit_edge, %list_splice_init.exit.for.body123_crit_edge
  %.pn207.in238 = phi ptr [ %.pn207, %list_del_init.exit.for.body123_crit_edge ], [ %69, %list_splice_init.exit.for.body123_crit_edge ]
  %70 = ptrtoint ptr %.pn207.in238 to i32
  call void @__asan_load4_noabort(i32 %70)
  %.pn207 = load ptr, ptr %.pn207.in238, align 4
  %mg_tasks124 = getelementptr i8, ptr %.pn207.in238, i32 -176
  %71 = ptrtoint ptr %mg_tasks124 to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load volatile ptr, ptr %mg_tasks124, align 4
  %cmp.i.not.i212 = icmp eq ptr %72, %mg_tasks124
  br i1 %cmp.i.not.i212, label %for.body123.list_splice_tail_init.exit_crit_edge, label %if.then.i215

for.body123.list_splice_tail_init.exit_crit_edge: ; preds = %for.body123
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_splice_tail_init.exit

if.then.i215:                                     ; preds = %for.body123
  call void @__sanitizer_cov_trace_pc() #28
  %tasks = getelementptr i8, ptr %.pn207.in238, i32 -184
  %prev.i = getelementptr i8, ptr %.pn207.in238, i32 -180
  %73 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load ptr, ptr %prev.i, align 4
  %prev2.i.i213 = getelementptr i8, ptr %.pn207.in238, i32 -172
  %75 = ptrtoint ptr %prev2.i.i213 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %prev2.i.i213, align 4
  %prev3.i.i214 = getelementptr inbounds %struct.list_head, ptr %72, i32 0, i32 1
  %77 = ptrtoint ptr %prev3.i.i214 to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr %74, ptr %prev3.i.i214, align 4
  %78 = ptrtoint ptr %74 to i32
  call void @__asan_store4_noabort(i32 %78)
  store ptr %72, ptr %74, align 4
  %79 = ptrtoint ptr %76 to i32
  call void @__asan_store4_noabort(i32 %79)
  store ptr %tasks, ptr %76, align 4
  store ptr %76, ptr %prev.i, align 4
  %80 = ptrtoint ptr %mg_tasks124 to i32
  call void @__asan_store4_noabort(i32 %80)
  store volatile ptr %mg_tasks124, ptr %mg_tasks124, align 4
  store ptr %mg_tasks124, ptr %prev2.i.i213, align 4
  br label %list_splice_tail_init.exit

list_splice_tail_init.exit:                       ; preds = %if.then.i215, %for.body123.list_splice_tail_init.exit_crit_edge
  %call.i.i216 = call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn207.in238) #26
  br i1 %call.i.i216, label %if.end.i.i, label %list_splice_tail_init.exit.list_del_init.exit_crit_edge

list_splice_tail_init.exit.list_del_init.exit_crit_edge: ; preds = %list_splice_tail_init.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del_init.exit

if.end.i.i:                                       ; preds = %list_splice_tail_init.exit
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn207.in238, i32 0, i32 1
  %81 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %prev.i.i, align 4
  %83 = ptrtoint ptr %.pn207.in238 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %.pn207.in238, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %84, i32 0, i32 1
  %85 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %85)
  store ptr %82, ptr %prev1.i.i.i, align 4
  %86 = ptrtoint ptr %82 to i32
  call void @__asan_store4_noabort(i32 %86)
  store volatile ptr %84, ptr %82, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i, %list_splice_tail_init.exit.list_del_init.exit_crit_edge
  %87 = ptrtoint ptr %.pn207.in238 to i32
  call void @__asan_store4_noabort(i32 %87)
  store volatile ptr %.pn207.in238, ptr %.pn207.in238, align 4
  %prev.i3.i = getelementptr inbounds %struct.list_head, ptr %.pn207.in238, i32 0, i32 1
  %88 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %88)
  store ptr %.pn207.in238, ptr %prev.i3.i, align 4
  %cmp120.not = icmp eq ptr %.pn207, %tset1
  br i1 %cmp120.not, label %list_del_init.exit.cleanup136_crit_edge, label %list_del_init.exit.for.body123_crit_edge

list_del_init.exit.for.body123_crit_edge:         ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body123

list_del_init.exit.cleanup136_crit_edge:          ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup136

cleanup136:                                       ; preds = %list_del_init.exit.cleanup136_crit_edge, %list_splice_init.exit.cleanup136_crit_edge
  call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  %89 = ptrtoint ptr %nr_tasks to i32
  call void @__asan_store4_noabort(i32 %89)
  store i32 0, ptr %nr_tasks, align 4
  %csets135 = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 4
  %90 = ptrtoint ptr %csets135 to i32
  call void @__asan_store4_noabort(i32 %90)
  store ptr %tset1, ptr %csets135, align 4
  ret i32 %ret.3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_attach_task(ptr noundef %dst_cgrp, ptr noundef %leader, i1 noundef zeroext %threadgroup) local_unnamed_addr #0 align 64 {
entry:
  %mgctx = alloca %struct.cgroup_mgctx, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %mgctx) #26
  %0 = getelementptr inbounds i8, ptr %mgctx, i32 52
  %1 = ptrtoint ptr %0 to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -1, ptr %0, align 4, !annotation !638
  %2 = ptrtoint ptr %mgctx to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %mgctx, ptr %mgctx, align 4
  %prev = getelementptr inbounds %struct.list_head, ptr %mgctx, i32 0, i32 1
  %3 = ptrtoint ptr %prev to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %mgctx, ptr %prev, align 4
  %preloaded_dst_csets = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 1
  %4 = ptrtoint ptr %preloaded_dst_csets to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr %preloaded_dst_csets, ptr %preloaded_dst_csets, align 4
  %prev5 = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 1, i32 1
  %5 = ptrtoint ptr %prev5 to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %preloaded_dst_csets, ptr %prev5, align 4
  %tset = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2
  %6 = ptrtoint ptr %tset to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %tset, ptr %tset, align 4
  %prev10 = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 0, i32 1
  %7 = ptrtoint ptr %prev10 to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %tset, ptr %prev10, align 4
  %dst_csets = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 1
  %8 = ptrtoint ptr %dst_csets to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %dst_csets, ptr %dst_csets, align 4
  %prev16 = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 1, i32 1
  %9 = ptrtoint ptr %prev16 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %dst_csets, ptr %prev16, align 4
  %nr_tasks = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 2
  %10 = ptrtoint ptr %nr_tasks to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 0, ptr %nr_tasks, align 4
  %ssid = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 3
  %11 = ptrtoint ptr %ssid to i32
  call void @__asan_store4_noabort(i32 %11)
  store i32 0, ptr %ssid, align 4
  %csets = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 4
  %12 = ptrtoint ptr %csets to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %tset, ptr %csets, align 4
  %cur_cset = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 5
  %13 = ptrtoint ptr %cur_cset to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr null, ptr %cur_cset, align 4
  %cur_task = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 2, i32 6
  %14 = ptrtoint ptr %cur_task to i32
  call void @__asan_store4_noabort(i32 %14)
  store ptr null, ptr %cur_task, align 4
  %ss_mask = getelementptr inbounds %struct.cgroup_mgctx, ptr %mgctx, i32 0, i32 3
  %15 = ptrtoint ptr %ss_mask to i32
  call void @__asan_store2_noabort(i32 %15)
  store i16 0, ptr %ss_mask, align 4
  call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %16 = call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i = and i32 %16, -16384
  %17 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 1
  %18 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %19, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !639
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #26
  %call.i = call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i, label %entry.do.body.preheader_crit_edge, label %land.lhs.true.i

entry.do.body.preheader_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body.preheader

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.do.body.preheader_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.do.body.preheader_crit_edge:      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body.preheader

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.do.body.preheader_crit_edge, label %if.then.i

land.lhs.true2.i.do.body.preheader_crit_edge:     ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body.preheader

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 696, ptr noundef nonnull @.str.55) #26
  br label %do.body.preheader

do.body.preheader:                                ; preds = %if.then.i, %land.lhs.true2.i.do.body.preheader_crit_edge, %land.lhs.true.i.do.body.preheader_crit_edge, %entry.do.body.preheader_crit_edge
  br label %do.body

do.body:                                          ; preds = %do.cond.do.body_crit_edge, %do.body.preheader
  %task.0 = phi ptr [ %add.ptr.i, %do.cond.do.body_crit_edge ], [ %leader, %do.body.preheader ]
  %cgroups.i = getelementptr inbounds %struct.task_struct, ptr %task.0, i32 0, i32 164
  %20 = ptrtoint ptr %cgroups.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load volatile ptr, ptr %cgroups.i, align 16
  %call.i.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i58 = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i58, label %lor.lhs.false.i, label %do.body.task_css_set.exit_crit_edge

do.body.task_css_set.exit_crit_edge:              ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false.i:                                  ; preds = %do.body
  %call.i18.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i18.i)
  %tobool3.not.i = icmp eq i32 %call.i18.i, 0
  br i1 %tobool3.not.i, label %lor.lhs.false4.i, label %lor.lhs.false.i.task_css_set.exit_crit_edge

lor.lhs.false.i.task_css_set.exit_crit_edge:      ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false4.i:                                 ; preds = %lor.lhs.false.i
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %task.0, i32 0, i32 3
  %22 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %23, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool5.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool5.not.i, label %lor.lhs.false6.i, label %lor.lhs.false4.i.task_css_set.exit_crit_edge

lor.lhs.false4.i.task_css_set.exit_crit_edge:     ; preds = %lor.lhs.false4.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false6.i:                                 ; preds = %lor.lhs.false4.i
  %call7.i = call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %land.lhs.true.i59, label %lor.lhs.false6.i.task_css_set.exit_crit_edge

lor.lhs.false6.i.task_css_set.exit_crit_edge:     ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

land.lhs.true.i59:                                ; preds = %lor.lhs.false6.i
  %call9.i = call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool10.not.i = icmp eq i32 %call9.i, 0
  br i1 %tobool10.not.i, label %land.lhs.true.i59.task_css_set.exit_crit_edge, label %land.lhs.true11.i

land.lhs.true.i59.task_css_set.exit_crit_edge:    ; preds = %land.lhs.true.i59
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

land.lhs.true11.i:                                ; preds = %land.lhs.true.i59
  %.b17.i = load i1, ptr @task_css_set.__warned, align 1
  br i1 %.b17.i, label %land.lhs.true11.i.task_css_set.exit_crit_edge, label %if.then.i60

land.lhs.true11.i.task_css_set.exit_crit_edge:    ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

if.then.i60:                                      ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @task_css_set.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 481, ptr noundef nonnull @.str.22) #26
  br label %task_css_set.exit

task_css_set.exit:                                ; preds = %if.then.i60, %land.lhs.true11.i.task_css_set.exit_crit_edge, %land.lhs.true.i59.task_css_set.exit_crit_edge, %lor.lhs.false6.i.task_css_set.exit_crit_edge, %lor.lhs.false4.i.task_css_set.exit_crit_edge, %lor.lhs.false.i.task_css_set.exit_crit_edge, %do.body.task_css_set.exit_crit_edge
  call void @cgroup_migrate_add_src(ptr noundef %21, ptr noundef %dst_cgrp, ptr noundef nonnull %mgctx)
  br i1 %threadgroup, label %do.cond, label %task_css_set.exit.do.end_crit_edge

task_css_set.exit.do.end_crit_edge:               ; preds = %task_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

do.cond:                                          ; preds = %task_css_set.exit
  %thread_group.i = getelementptr inbounds %struct.task_struct, ptr %task.0, i32 0, i32 80
  %24 = ptrtoint ptr %thread_group.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile ptr, ptr %thread_group.i, align 4
  %add.ptr.i = getelementptr i8, ptr %25, i32 -1396
  %cmp.not = icmp eq ptr %add.ptr.i, %leader
  br i1 %cmp.not, label %do.cond.do.end_crit_edge, label %do.cond.do.body_crit_edge

do.cond.do.body_crit_edge:                        ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body

do.cond.do.end_crit_edge:                         ; preds = %do.cond
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

do.end:                                           ; preds = %do.cond.do.end_crit_edge, %task_css_set.exit.do.end_crit_edge
  %call.i61 = call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i61, label %do.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i64

do.end.rcu_read_unlock.exit_crit_edge:            ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true.i64:                                ; preds = %do.end
  %call1.i62 = call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i62)
  %tobool.not.i63 = icmp eq i32 %call1.i62, 0
  br i1 %tobool.not.i63, label %land.lhs.true.i64.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i66

land.lhs.true.i64.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i64
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true2.i66:                               ; preds = %land.lhs.true.i64
  %.b4.i65 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i65, label %land.lhs.true2.i66.rcu_read_unlock.exit_crit_edge, label %if.then.i67

land.lhs.true2.i66.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i66
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

if.then.i67:                                      ; preds = %land.lhs.true2.i66
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 724, ptr noundef nonnull @.str.57) #26
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i67, %land.lhs.true2.i66.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i64.rcu_read_unlock.exit_crit_edge, %do.end.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !640
  %26 = call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i68 = and i32 %26, -16384
  %27 = inttoptr i32 %and.i.i.i.i.i68 to ptr
  %preempt_count.i.i.i.i69 = getelementptr inbounds %struct.thread_info, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %preempt_count.i.i.i.i69 to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load volatile i32, ptr %preempt_count.i.i.i.i69, align 4
  %sub.i.i.i = add i32 %29, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i69, align 4
  call void @rcu_read_unlock_strict() #26
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #26
  call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  %call22 = call i32 @cgroup_migrate_prepare_dst(ptr noundef nonnull %mgctx)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %if.end27, label %if.end27.thread

if.end27.thread:                                  ; preds = %rcu_read_unlock.exit
  call void @__sanitizer_cov_trace_pc() #28
  call void @cgroup_migrate_finish(ptr noundef nonnull %mgctx)
  br label %if.end47

if.end27:                                         ; preds = %rcu_read_unlock.exit
  %call26 = call i32 @cgroup_migrate(ptr noundef %leader, i1 noundef zeroext %threadgroup, ptr noundef nonnull %mgctx)
  call void @cgroup_migrate_finish(ptr noundef nonnull %mgctx)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %tobool28.not = icmp eq i32 %call26, 0
  br i1 %tobool28.not, label %do.body30, label %if.end27.if.end47_crit_edge

if.end27.if.end47_crit_edge:                      ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end47

do.body30:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #28
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_attach_task, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@cgroup_attach_task, %if.then32)) #26
          to label %if.end47 [label %if.then32], !srcloc !657

if.then32:                                        ; preds = %do.body30
  call void @__sanitizer_cov_trace_pc() #28
  %call37 = call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @trace_cgroup_path_lock) #26
  %kn.i = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 11
  %30 = ptrtoint ptr %kn.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %kn.i, align 8
  %call.i.i70 = call i32 @kernfs_path_from_node(ptr noundef %31, ptr noundef null, ptr noundef nonnull @trace_cgroup_path, i32 noundef 1024) #26
  call fastcc void @trace_cgroup_attach_task(ptr noundef %dst_cgrp, ptr noundef %leader, i1 noundef zeroext %threadgroup)
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @trace_cgroup_path_lock, i32 noundef %call37) #26
  br label %if.end47

if.end47:                                         ; preds = %if.then32, %do.body30, %if.end27.if.end47_crit_edge, %if.end27.thread
  %ret.073 = phi i32 [ %call22, %if.end27.thread ], [ 0, %if.then32 ], [ %call26, %if.end27.if.end47_crit_edge ], [ 0, %do.body30 ]
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %mgctx) #26
  ret i32 %ret.073
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @_raw_spin_lock_irqsave(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_cgroup_attach_task(ptr noundef %dst_cgrp, ptr noundef %task, i1 noundef zeroext %threadgroup) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_attach_task, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_cgroup_attach_task, %do.body)) #26
          to label %if.end49 [label %do.body], !srcloc !657

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !636

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.71, i32 noundef 108, i32 noundef 9, ptr noundef null) #26
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i4 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i4
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end70_crit_edge, label %if.end31

cpu_online.exit.if.end70_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end70

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !668
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_attach_task, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end49.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %dst_cgrp, ptr noundef nonnull @trace_cgroup_path, ptr noundef %task, i1 noundef zeroext %threadgroup) #26
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool10.not.i = icmp eq ptr %19, null
  br i1 %tobool10.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !669
  br label %if.end49.sink.split

if.end49.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !669
  br label %if.end49.sink.split

if.end49.sink.split:                              ; preds = %if.end49.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i2.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i2.c to ptr
  %preempt_count.i.i3.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i3.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i3.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i3.c, align 4
  br label %if.end49

if.end49:                                         ; preds = %if.end49.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i5 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i5 to ptr
  %cpu51 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu51 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu51, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i6 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i6, label %if.end49.cpu_online.exit14_crit_edge, label %land.rhs.i.i.i.i8

if.end49.cpu_online.exit14_crit_edge:             ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit14

land.rhs.i.i.i.i8:                                ; preds = %if.end49
  %.b37.i.i.i.i7 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i7, label %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, label %if.then.i.i.i.i9, !prof !636

land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge:    ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit14

if.then.i.i.i.i9:                                 ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.71, i32 noundef 108, i32 noundef 9, ptr noundef null) #26
  br label %cpu_online.exit14

cpu_online.exit14:                                ; preds = %if.then.i.i.i.i9, %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, %if.end49.cpu_online.exit14_crit_edge
  %div3.i.i.i10 = lshr i32 %27, 5
  %arrayidx.i.i.i11 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i10
  %29 = ptrtoint ptr %arrayidx.i.i.i11 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i11, align 4
  %and.i.i.i12 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i12
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i13.not = icmp eq i32 %32, 0
  br i1 %tobool.i13.not, label %cpu_online.exit14.if.end70_crit_edge, label %if.then53

cpu_online.exit14.if.end70_crit_edge:             ; preds = %cpu_online.exit14
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end70

if.then53:                                        ; preds = %cpu_online.exit14
  %33 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !660
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_attach_task, i32 0, i32 7), align 4
  %call59 = tail call i32 @rcu_read_lock_sched_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call59)
  %tobool60.not = icmp eq i32 %call59, 0
  br i1 %tobool60.not, label %land.lhs.true, label %if.then53.do.end68_crit_edge

if.then53.do.end68_crit_edge:                     ; preds = %if.then53
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end68

land.lhs.true:                                    ; preds = %if.then53
  %call61 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call61)
  %tobool62.not = icmp eq i32 %call61, 0
  br i1 %tobool62.not, label %land.lhs.true.do.end68_crit_edge, label %land.lhs.true63

land.lhs.true.do.end68_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end68

land.lhs.true63:                                  ; preds = %land.lhs.true
  %.b1 = load i1, ptr @trace_cgroup_attach_task.__warned, align 1
  br i1 %.b1, label %land.lhs.true63.do.end68_crit_edge, label %if.then65

land.lhs.true63.do.end68_crit_edge:               ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end68

if.then65:                                        ; preds = %land.lhs.true63
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @trace_cgroup_attach_task.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.70, i32 noundef 156, ptr noundef nonnull @.str.22) #26
  br label %do.end68

do.end68:                                         ; preds = %if.then65, %land.lhs.true63.do.end68_crit_edge, %land.lhs.true.do.end68_crit_edge, %if.then53.do.end68_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !661
  %38 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i15 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i15 to ptr
  %preempt_count.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i16, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i16, align 4
  br label %if.end70

if.end70:                                         ; preds = %do.end68, %cpu_online.exit14.if.end70_crit_edge, %cpu_online.exit.if.end70_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @cgroup_procs_write_start(ptr noundef %buf, i1 noundef zeroext %threadgroup, ptr nocapture noundef %locked) local_unnamed_addr #0 align 64 {
entry:
  %pid = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %pid) #26
  %0 = ptrtoint ptr %pid to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %pid, align 4, !annotation !638
  %call.i70 = tail call ptr @strim(ptr noundef %buf) #26
  %call1 = call i32 @kstrtoint(ptr noundef %call.i70, i32 noundef 0, ptr noundef nonnull %pid) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %lor.lhs.false, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %1 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %pid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %cmp = icmp slt i32 %2, 0
  br i1 %cmp, label %lor.lhs.false.cleanup_crit_edge, label %do.body

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

do.body:                                          ; preds = %lor.lhs.false
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %3 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %3)
  %tobool3.not = icmp eq i32 %3, 0
  br i1 %tobool3.not, label %do.body.if.end22_crit_edge, label %land.rhs

do.body.if.end22_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end22

land.rhs:                                         ; preds = %do.body
  %call.i71 = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i71)
  %cmp5.not = icmp eq i32 %call.i71, 0
  br i1 %cmp5.not, label %do.end, label %land.rhs.if.end22_crit_edge, !prof !637

land.rhs.if.end22_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end22

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 2833, i32 noundef 9, ptr noundef null) #26
  br label %if.end22

if.end22:                                         ; preds = %do.end, %land.rhs.if.end22_crit_edge, %do.body.if.end22_crit_edge
  %4 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %pid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %5)
  %tobool31.not = icmp ne i32 %5, 0
  %brmerge = or i1 %tobool31.not, %threadgroup
  br i1 %brmerge, label %if.then34, label %if.end22.if.end35_crit_edge

if.end22.if.end35_crit_edge:                      ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end35

if.then34:                                        ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #28
  call void @percpu_down_write(ptr noundef nonnull @cgroup_threadgroup_rwsem) #26
  br label %if.end35

if.end35:                                         ; preds = %if.then34, %if.end22.if.end35_crit_edge
  %storemerge = phi i8 [ 1, %if.then34 ], [ 0, %if.end22.if.end35_crit_edge ]
  %6 = ptrtoint ptr %locked to i32
  call void @__asan_store1_noabort(i32 %6)
  store i8 %storemerge, ptr %locked, align 1
  %7 = call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %10, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !639
  call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #26
  %call.i = call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i, label %if.end35.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end35.rcu_read_lock.exit_crit_edge:            ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end35
  %call1.i = call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 696, ptr noundef nonnull @.str.55) #26
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end35.rcu_read_lock.exit_crit_edge
  %11 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %pid, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %12)
  %tobool36.not = icmp eq i32 %12, 0
  br i1 %tobool36.not, label %if.else43, label %if.then37

if.then37:                                        ; preds = %rcu_read_lock.exit
  %call38 = call ptr @find_task_by_vpid(i32 noundef %12) #26
  %tobool39.not = icmp eq ptr %call38, null
  br i1 %tobool39.not, label %if.then37.out_unlock_threadgroup_crit_edge, label %if.then37.if.end45_crit_edge

if.then37.if.end45_crit_edge:                     ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end45

if.then37.out_unlock_threadgroup_crit_edge:       ; preds = %if.then37
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock_threadgroup

if.else43:                                        ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #28
  %13 = call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i = and i32 %13, -16384
  %14 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %14, i32 0, i32 2
  %15 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %task, align 8
  br label %if.end45

if.end45:                                         ; preds = %if.else43, %if.then37.if.end45_crit_edge
  %tsk.0 = phi ptr [ %call38, %if.then37.if.end45_crit_edge ], [ %16, %if.else43 ]
  br i1 %threadgroup, label %if.then47, label %if.end45.if.end48_crit_edge

if.end45.if.end48_crit_edge:                      ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end48

if.then47:                                        ; preds = %if.end45
  call void @__sanitizer_cov_trace_pc() #28
  %group_leader = getelementptr inbounds %struct.task_struct, ptr %tsk.0, i32 0, i32 75
  %17 = ptrtoint ptr %group_leader to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %group_leader, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.then47, %if.end45.if.end48_crit_edge
  %tsk.1 = phi ptr [ %18, %if.then47 ], [ %tsk.0, %if.end45.if.end48_crit_edge ]
  %no_cgroup_migration = getelementptr inbounds %struct.task_struct, ptr %tsk.1, i32 0, i32 65
  %19 = ptrtoint ptr %no_cgroup_migration to i32
  call void @__asan_load2_noabort(i32 %19)
  %bf.load = load i16, ptr %no_cgroup_migration, align 8
  %20 = and i16 %bf.load, 1024
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %20)
  %tobool49.not = icmp eq i16 %20, 0
  br i1 %tobool49.not, label %lor.lhs.false50, label %if.end48.out_unlock_threadgroup_crit_edge

if.end48.out_unlock_threadgroup_crit_edge:        ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock_threadgroup

lor.lhs.false50:                                  ; preds = %if.end48
  %flags = getelementptr inbounds %struct.task_struct, ptr %tsk.1, i32 0, i32 3
  %21 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %flags, align 4
  %and = and i32 %22, 67108864
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool51.not = icmp eq i32 %and, 0
  br i1 %tobool51.not, label %if.end54, label %lor.lhs.false50.out_unlock_threadgroup_crit_edge

lor.lhs.false50.out_unlock_threadgroup_crit_edge: ; preds = %lor.lhs.false50
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock_threadgroup

if.end54:                                         ; preds = %lor.lhs.false50
  %usage.i = getelementptr inbounds %struct.task_struct, ptr %tsk.1, i32 0, i32 2
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %usage.i, i32 noundef 4) #26
  call void @llvm.prefetch.p0(ptr %usage.i, i32 1, i32 3, i32 1) #26
  %23 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage.i, ptr %usage.i, i32 1, ptr elementtype(i32) %usage.i) #26, !srcloc !663
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %23, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end54.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !637

if.end54.if.end15.sink.split.i.i.i.i_crit_edge:   ; preds = %if.end54
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end54
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %24 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %24)
  %.not.i.i.i.i = icmp sgt i32 %24, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.out_unlock_rcu_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !636

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.out_unlock_rcu_crit_edge:         ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock_rcu

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end54.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end54.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %usage.i, i32 noundef %.sink.i.i.i.i) #26
  br label %out_unlock_rcu

out_unlock_threadgroup:                           ; preds = %lor.lhs.false50.out_unlock_threadgroup_crit_edge, %if.end48.out_unlock_threadgroup_crit_edge, %if.then37.out_unlock_threadgroup_crit_edge
  %tsk.2 = phi ptr [ inttoptr (i32 -3 to ptr), %if.then37.out_unlock_threadgroup_crit_edge ], [ inttoptr (i32 -22 to ptr), %lor.lhs.false50.out_unlock_threadgroup_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.end48.out_unlock_threadgroup_crit_edge ]
  %25 = ptrtoint ptr %locked to i32
  call void @__asan_load1_noabort(i32 %25)
  %26 = load i8, ptr %locked, align 1, !range !654
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %26)
  %tobool56.not = icmp eq i8 %26, 0
  br i1 %tobool56.not, label %out_unlock_threadgroup.out_unlock_rcu_crit_edge, label %if.then57

out_unlock_threadgroup.out_unlock_rcu_crit_edge:  ; preds = %out_unlock_threadgroup
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock_rcu

if.then57:                                        ; preds = %out_unlock_threadgroup
  call void @__sanitizer_cov_trace_pc() #28
  call void @percpu_up_write(ptr noundef nonnull @cgroup_threadgroup_rwsem) #26
  %27 = ptrtoint ptr %locked to i32
  call void @__asan_store1_noabort(i32 %27)
  store i8 0, ptr %locked, align 1
  br label %out_unlock_rcu

out_unlock_rcu:                                   ; preds = %if.then57, %out_unlock_threadgroup.out_unlock_rcu_crit_edge, %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.out_unlock_rcu_crit_edge
  %tsk.3 = phi ptr [ %tsk.2, %if.then57 ], [ %tsk.2, %out_unlock_threadgroup.out_unlock_rcu_crit_edge ], [ %tsk.1, %if.else.i.i.i.i.out_unlock_rcu_crit_edge ], [ %tsk.1, %if.end15.sink.split.i.i.i.i ]
  %call.i72 = call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i72, label %out_unlock_rcu.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i75

out_unlock_rcu.rcu_read_unlock.exit_crit_edge:    ; preds = %out_unlock_rcu
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true.i75:                                ; preds = %out_unlock_rcu
  %call1.i73 = call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i73)
  %tobool.not.i74 = icmp eq i32 %call1.i73, 0
  br i1 %tobool.not.i74, label %land.lhs.true.i75.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i77

land.lhs.true.i75.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i75
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true2.i77:                               ; preds = %land.lhs.true.i75
  %.b4.i76 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i76, label %land.lhs.true2.i77.rcu_read_unlock.exit_crit_edge, label %if.then.i78

land.lhs.true2.i77.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i77
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

if.then.i78:                                      ; preds = %land.lhs.true2.i77
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 724, ptr noundef nonnull @.str.57) #26
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i78, %land.lhs.true2.i77.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i75.rcu_read_unlock.exit_crit_edge, %out_unlock_rcu.rcu_read_unlock.exit_crit_edge
  call void asm sideeffect "", "~{memory}"() #26, !srcloc !640
  %28 = call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i79 = and i32 %28, -16384
  %29 = inttoptr i32 %and.i.i.i.i.i79 to ptr
  %preempt_count.i.i.i.i80 = getelementptr inbounds %struct.thread_info, ptr %29, i32 0, i32 1
  %30 = ptrtoint ptr %preempt_count.i.i.i.i80 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile i32, ptr %preempt_count.i.i.i.i80, align 4
  %sub.i.i.i = add i32 %31, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i80, align 4
  call void @rcu_read_unlock_strict() #26
  call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #26
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %tsk.3, %rcu_read_unlock.exit ], [ inttoptr (i32 -22 to ptr), %lor.lhs.false.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %entry.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %pid) #26
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kstrtoint(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_down_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @find_task_by_vpid(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_up_write(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cgroup_procs_write_finish(ptr noundef %task, i1 noundef zeroext %locked) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %usage.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 2
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage.i, i32 noundef 4) #26
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !647
  tail call void @llvm.prefetch.p0(ptr %usage.i, i32 1, i32 3, i32 1) #26
  %0 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage.i, ptr %usage.i, i32 1, ptr elementtype(i32) %usage.i) #26, !srcloc !648
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %0, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.put_task_struct.exit_crit_edge, label %if.then10.i.i.i.i, !prof !636

if.end5.i.i.i.i.put_task_struct.exit_crit_edge:   ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %put_task_struct.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @refcount_warn_saturate(ptr noundef %usage.i, i32 noundef 3) #26
  br label %put_task_struct.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !649
  tail call void @__put_task_struct(ptr noundef %task) #26
  br label %put_task_struct.exit

put_task_struct.exit:                             ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.put_task_struct.exit_crit_edge
  br i1 %locked, label %if.then, label %put_task_struct.exit.if.end_crit_edge

put_task_struct.exit.if.end_crit_edge:            ; preds = %put_task_struct.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.then:                                          ; preds = %put_task_struct.exit
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @percpu_up_write(ptr noundef nonnull @cgroup_threadgroup_rwsem) #26
  br label %if.end

if.end:                                           ; preds = %if.then, %put_task_struct.exit.if.end_crit_edge
  %1 = load ptr, ptr @cgroup_subsys, align 4
  %post_attach = getelementptr inbounds %struct.cgroup_subsys, ptr %1, i32 0, i32 11
  %2 = ptrtoint ptr %post_attach to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %post_attach, align 4
  %tobool2.not = icmp eq ptr %3, null
  br i1 %tobool2.not, label %if.end.for.inc_crit_edge, label %if.then3

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  tail call void %3() #26
  br label %for.inc

for.inc:                                          ; preds = %if.then3, %if.end.for.inc_crit_edge
  %4 = load ptr, ptr getelementptr inbounds ([14 x ptr], ptr @cgroup_subsys, i32 0, i32 1), align 4
  %post_attach.1 = getelementptr inbounds %struct.cgroup_subsys, ptr %4, i32 0, i32 11
  %5 = ptrtoint ptr %post_attach.1 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %post_attach.1, align 4
  %tobool2.not.1 = icmp eq ptr %6, null
  br i1 %tobool2.not.1, label %for.inc.for.inc.1_crit_edge, label %if.then3.1

for.inc.for.inc.1_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.1

if.then3.1:                                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  tail call void %6() #26
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then3.1, %for.inc.for.inc.1_crit_edge
  %7 = load ptr, ptr getelementptr inbounds ([14 x ptr], ptr @cgroup_subsys, i32 0, i32 2), align 4
  %post_attach.2 = getelementptr inbounds %struct.cgroup_subsys, ptr %7, i32 0, i32 11
  %8 = ptrtoint ptr %post_attach.2 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %post_attach.2, align 4
  %tobool2.not.2 = icmp eq ptr %9, null
  br i1 %tobool2.not.2, label %for.inc.1.for.inc.2_crit_edge, label %if.then3.2

for.inc.1.for.inc.2_crit_edge:                    ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.2

if.then3.2:                                       ; preds = %for.inc.1
  call void @__sanitizer_cov_trace_pc() #28
  tail call void %9() #26
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then3.2, %for.inc.1.for.inc.2_crit_edge
  %10 = load ptr, ptr getelementptr inbounds ([14 x ptr], ptr @cgroup_subsys, i32 0, i32 3), align 4
  %post_attach.3 = getelementptr inbounds %struct.cgroup_subsys, ptr %10, i32 0, i32 11
  %11 = ptrtoint ptr %post_attach.3 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %post_attach.3, align 4
  %tobool2.not.3 = icmp eq ptr %12, null
  br i1 %tobool2.not.3, label %for.inc.2.for.inc.3_crit_edge, label %if.then3.3

for.inc.2.for.inc.3_crit_edge:                    ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.3

if.then3.3:                                       ; preds = %for.inc.2
  call void @__sanitizer_cov_trace_pc() #28
  tail call void %12() #26
  br label %for.inc.3

for.inc.3:                                        ; preds = %if.then3.3, %for.inc.2.for.inc.3_crit_edge
  %13 = load ptr, ptr getelementptr inbounds ([14 x ptr], ptr @cgroup_subsys, i32 0, i32 4), align 4
  %post_attach.4 = getelementptr inbounds %struct.cgroup_subsys, ptr %13, i32 0, i32 11
  %14 = ptrtoint ptr %post_attach.4 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %post_attach.4, align 4
  %tobool2.not.4 = icmp eq ptr %15, null
  br i1 %tobool2.not.4, label %for.inc.3.for.inc.4_crit_edge, label %if.then3.4

for.inc.3.for.inc.4_crit_edge:                    ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.4

if.then3.4:                                       ; preds = %for.inc.3
  call void @__sanitizer_cov_trace_pc() #28
  tail call void %15() #26
  br label %for.inc.4

for.inc.4:                                        ; preds = %if.then3.4, %for.inc.3.for.inc.4_crit_edge
  %16 = load ptr, ptr getelementptr inbounds ([14 x ptr], ptr @cgroup_subsys, i32 0, i32 5), align 4
  %post_attach.5 = getelementptr inbounds %struct.cgroup_subsys, ptr %16, i32 0, i32 11
  %17 = ptrtoint ptr %post_attach.5 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %post_attach.5, align 4
  %tobool2.not.5 = icmp eq ptr %18, null
  br i1 %tobool2.not.5, label %for.inc.4.for.inc.5_crit_edge, label %if.then3.5

for.inc.4.for.inc.5_crit_edge:                    ; preds = %for.inc.4
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.5

if.then3.5:                                       ; preds = %for.inc.4
  call void @__sanitizer_cov_trace_pc() #28
  tail call void %18() #26
  br label %for.inc.5

for.inc.5:                                        ; preds = %if.then3.5, %for.inc.4.for.inc.5_crit_edge
  %19 = load ptr, ptr getelementptr inbounds ([14 x ptr], ptr @cgroup_subsys, i32 0, i32 6), align 4
  %post_attach.6 = getelementptr inbounds %struct.cgroup_subsys, ptr %19, i32 0, i32 11
  %20 = ptrtoint ptr %post_attach.6 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %post_attach.6, align 4
  %tobool2.not.6 = icmp eq ptr %21, null
  br i1 %tobool2.not.6, label %for.inc.5.for.inc.6_crit_edge, label %if.then3.6

for.inc.5.for.inc.6_crit_edge:                    ; preds = %for.inc.5
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.6

if.then3.6:                                       ; preds = %for.inc.5
  call void @__sanitizer_cov_trace_pc() #28
  tail call void %21() #26
  br label %for.inc.6

for.inc.6:                                        ; preds = %if.then3.6, %for.inc.5.for.inc.6_crit_edge
  %22 = load ptr, ptr getelementptr inbounds ([14 x ptr], ptr @cgroup_subsys, i32 0, i32 7), align 4
  %post_attach.7 = getelementptr inbounds %struct.cgroup_subsys, ptr %22, i32 0, i32 11
  %23 = ptrtoint ptr %post_attach.7 to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %post_attach.7, align 4
  %tobool2.not.7 = icmp eq ptr %24, null
  br i1 %tobool2.not.7, label %for.inc.6.for.inc.7_crit_edge, label %if.then3.7

for.inc.6.for.inc.7_crit_edge:                    ; preds = %for.inc.6
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.7

if.then3.7:                                       ; preds = %for.inc.6
  call void @__sanitizer_cov_trace_pc() #28
  tail call void %24() #26
  br label %for.inc.7

for.inc.7:                                        ; preds = %if.then3.7, %for.inc.6.for.inc.7_crit_edge
  %25 = load ptr, ptr getelementptr inbounds ([14 x ptr], ptr @cgroup_subsys, i32 0, i32 8), align 4
  %post_attach.8 = getelementptr inbounds %struct.cgroup_subsys, ptr %25, i32 0, i32 11
  %26 = ptrtoint ptr %post_attach.8 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %post_attach.8, align 4
  %tobool2.not.8 = icmp eq ptr %27, null
  br i1 %tobool2.not.8, label %for.inc.7.for.inc.8_crit_edge, label %if.then3.8

for.inc.7.for.inc.8_crit_edge:                    ; preds = %for.inc.7
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.8

if.then3.8:                                       ; preds = %for.inc.7
  call void @__sanitizer_cov_trace_pc() #28
  tail call void %27() #26
  br label %for.inc.8

for.inc.8:                                        ; preds = %if.then3.8, %for.inc.7.for.inc.8_crit_edge
  %28 = load ptr, ptr getelementptr inbounds ([14 x ptr], ptr @cgroup_subsys, i32 0, i32 9), align 4
  %post_attach.9 = getelementptr inbounds %struct.cgroup_subsys, ptr %28, i32 0, i32 11
  %29 = ptrtoint ptr %post_attach.9 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %post_attach.9, align 4
  %tobool2.not.9 = icmp eq ptr %30, null
  br i1 %tobool2.not.9, label %for.inc.8.for.inc.9_crit_edge, label %if.then3.9

for.inc.8.for.inc.9_crit_edge:                    ; preds = %for.inc.8
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.9

if.then3.9:                                       ; preds = %for.inc.8
  call void @__sanitizer_cov_trace_pc() #28
  tail call void %30() #26
  br label %for.inc.9

for.inc.9:                                        ; preds = %if.then3.9, %for.inc.8.for.inc.9_crit_edge
  %31 = load ptr, ptr getelementptr inbounds ([14 x ptr], ptr @cgroup_subsys, i32 0, i32 10), align 4
  %post_attach.10 = getelementptr inbounds %struct.cgroup_subsys, ptr %31, i32 0, i32 11
  %32 = ptrtoint ptr %post_attach.10 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %post_attach.10, align 4
  %tobool2.not.10 = icmp eq ptr %33, null
  br i1 %tobool2.not.10, label %for.inc.9.for.inc.10_crit_edge, label %if.then3.10

for.inc.9.for.inc.10_crit_edge:                   ; preds = %for.inc.9
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.10

if.then3.10:                                      ; preds = %for.inc.9
  call void @__sanitizer_cov_trace_pc() #28
  tail call void %33() #26
  br label %for.inc.10

for.inc.10:                                       ; preds = %if.then3.10, %for.inc.9.for.inc.10_crit_edge
  %34 = load ptr, ptr getelementptr inbounds ([14 x ptr], ptr @cgroup_subsys, i32 0, i32 11), align 4
  %post_attach.11 = getelementptr inbounds %struct.cgroup_subsys, ptr %34, i32 0, i32 11
  %35 = ptrtoint ptr %post_attach.11 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %post_attach.11, align 4
  %tobool2.not.11 = icmp eq ptr %36, null
  br i1 %tobool2.not.11, label %for.inc.10.for.inc.11_crit_edge, label %if.then3.11

for.inc.10.for.inc.11_crit_edge:                  ; preds = %for.inc.10
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.11

if.then3.11:                                      ; preds = %for.inc.10
  call void @__sanitizer_cov_trace_pc() #28
  tail call void %36() #26
  br label %for.inc.11

for.inc.11:                                       ; preds = %if.then3.11, %for.inc.10.for.inc.11_crit_edge
  %37 = load ptr, ptr getelementptr inbounds ([14 x ptr], ptr @cgroup_subsys, i32 0, i32 12), align 4
  %post_attach.12 = getelementptr inbounds %struct.cgroup_subsys, ptr %37, i32 0, i32 11
  %38 = ptrtoint ptr %post_attach.12 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %post_attach.12, align 4
  %tobool2.not.12 = icmp eq ptr %39, null
  br i1 %tobool2.not.12, label %for.inc.11.for.inc.12_crit_edge, label %if.then3.12

for.inc.11.for.inc.12_crit_edge:                  ; preds = %for.inc.11
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.12

if.then3.12:                                      ; preds = %for.inc.11
  call void @__sanitizer_cov_trace_pc() #28
  tail call void %39() #26
  br label %for.inc.12

for.inc.12:                                       ; preds = %if.then3.12, %for.inc.11.for.inc.12_crit_edge
  %40 = load ptr, ptr getelementptr inbounds ([14 x ptr], ptr @cgroup_subsys, i32 0, i32 13), align 4
  %post_attach.13 = getelementptr inbounds %struct.cgroup_subsys, ptr %40, i32 0, i32 11
  %41 = ptrtoint ptr %post_attach.13 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %post_attach.13, align 4
  %tobool2.not.13 = icmp eq ptr %42, null
  br i1 %tobool2.not.13, label %for.inc.12.for.inc.13_crit_edge, label %if.then3.13

for.inc.12.for.inc.13_crit_edge:                  ; preds = %for.inc.12
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.13

if.then3.13:                                      ; preds = %for.inc.12
  call void @__sanitizer_cov_trace_pc() #28
  tail call void %42() #26
  br label %for.inc.13

for.inc.13:                                       ; preds = %if.then3.13, %for.inc.12.for.inc.13_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @css_next_descendant_post(ptr noundef %pos, ptr noundef %root) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.do.end_crit_edge

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool2.not = icmp eq i32 %call.i, 0
  br i1 %tobool2.not, label %land.lhs.true3, label %land.lhs.true.do.end_crit_edge

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %call4 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %land.lhs.true3.do.end_crit_edge, label %land.lhs.true6

land.lhs.true3.do.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

land.lhs.true6:                                   ; preds = %land.lhs.true3
  %.b26 = load i1, ptr @css_next_descendant_post.__warned, align 1
  br i1 %.b26, label %land.lhs.true6.do.end_crit_edge, label %if.then

land.lhs.true6.do.end_crit_edge:                  ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

if.then:                                          ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_next_descendant_post.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 4480, ptr noundef nonnull @.str.14) #26
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true6.do.end_crit_edge, %land.lhs.true3.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  %tobool8.not = icmp eq ptr %pos, null
  br i1 %tobool8.not, label %do.end.do.body.i_crit_edge, label %if.end11

do.end.do.body.i_crit_edge:                       ; preds = %do.end
  br label %do.body.i

do.body.i:                                        ; preds = %css_next_child.exit.i.do.body.i_crit_edge, %do.end.do.body.i_crit_edge
  %pos.addr.0.i = phi ptr [ %next.0.le.i.i, %css_next_child.exit.i.do.body.i_crit_edge ], [ %root, %do.end.do.body.i_crit_edge ]
  %call.i.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %do.body.i.css_next_child.exit.i_crit_edge

do.body.i.css_next_child.exit.i_crit_edge:        ; preds = %do.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit.i

land.lhs.true.i.i:                                ; preds = %do.body.i
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool2.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true3.i.i, label %land.lhs.true.i.i.css_next_child.exit.i_crit_edge

land.lhs.true.i.i.css_next_child.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit.i

land.lhs.true3.i.i:                               ; preds = %land.lhs.true.i.i
  %call4.i.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true3.i.i.css_next_child.exit.i_crit_edge, label %land.lhs.true6.i.i

land.lhs.true3.i.i.css_next_child.exit.i_crit_edge: ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit.i

land.lhs.true6.i.i:                               ; preds = %land.lhs.true3.i.i
  %.b87.i.i = load i1, ptr @css_next_child.__warned, align 1
  br i1 %.b87.i.i, label %land.lhs.true6.i.i.css_next_child.exit.i_crit_edge, label %if.then.i.i

land.lhs.true6.i.i.css_next_child.exit.i_crit_edge: ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_next_child.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 4316, ptr noundef nonnull @.str.14) #26
  br label %css_next_child.exit.i

css_next_child.exit.i:                            ; preds = %if.then.i.i, %land.lhs.true6.i.i.css_next_child.exit.i_crit_edge, %land.lhs.true3.i.i.css_next_child.exit.i_crit_edge, %land.lhs.true.i.i.css_next_child.exit.i_crit_edge, %do.body.i.css_next_child.exit.i_crit_edge
  %children.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %pos.addr.0.i, i32 0, i32 4
  %0 = ptrtoint ptr %children.i.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %children.i.i, align 8
  %next.0.le.i.i = getelementptr i8, ptr %1, i32 -16
  %cmp72.not.i.i = icmp eq ptr %1, %children.i.i
  %tobool.not3.i = icmp eq ptr %next.0.le.i.i, null
  %tobool.not.i = or i1 %cmp72.not.i.i, %tobool.not3.i
  br i1 %tobool.not.i, label %css_next_child.exit.i.cleanup_crit_edge, label %css_next_child.exit.i.do.body.i_crit_edge

css_next_child.exit.i.do.body.i_crit_edge:        ; preds = %css_next_child.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body.i

css_next_child.exit.i.cleanup_crit_edge:          ; preds = %css_next_child.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end11:                                         ; preds = %do.end
  %cmp = icmp eq ptr %pos, %root
  br i1 %cmp, label %if.end11.cleanup_crit_edge, label %if.end13

if.end11.cleanup_crit_edge:                       ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end13:                                         ; preds = %if.end11
  %parent = getelementptr inbounds %struct.cgroup_subsys_state, ptr %pos, i32 0, i32 12
  %2 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent, align 8
  %call14 = tail call ptr @css_next_child(ptr noundef nonnull %pos, ptr noundef %3)
  %tobool15.not = icmp eq ptr %call14, null
  br i1 %tobool15.not, label %if.end18, label %if.end13.do.body.i30_crit_edge

if.end13.do.body.i30_crit_edge:                   ; preds = %if.end13
  br label %do.body.i30

do.body.i30:                                      ; preds = %css_next_child.exit.i45.do.body.i30_crit_edge, %if.end13.do.body.i30_crit_edge
  %pos.addr.0.i27 = phi ptr [ %next.0.le.i.i41, %css_next_child.exit.i45.do.body.i30_crit_edge ], [ %call14, %if.end13.do.body.i30_crit_edge ]
  %call.i.i28 = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i28)
  %tobool.not.i.i29 = icmp eq i32 %call.i.i28, 0
  br i1 %tobool.not.i.i29, label %land.lhs.true.i.i33, label %do.body.i30.css_next_child.exit.i45_crit_edge

do.body.i30.css_next_child.exit.i45_crit_edge:    ; preds = %do.body.i30
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit.i45

land.lhs.true.i.i33:                              ; preds = %do.body.i30
  %call.i.i.i31 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i31)
  %tobool2.not.i.i32 = icmp eq i32 %call.i.i.i31, 0
  br i1 %tobool2.not.i.i32, label %land.lhs.true3.i.i36, label %land.lhs.true.i.i33.css_next_child.exit.i45_crit_edge

land.lhs.true.i.i33.css_next_child.exit.i45_crit_edge: ; preds = %land.lhs.true.i.i33
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit.i45

land.lhs.true3.i.i36:                             ; preds = %land.lhs.true.i.i33
  %call4.i.i34 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i34)
  %tobool5.not.i.i35 = icmp eq i32 %call4.i.i34, 0
  br i1 %tobool5.not.i.i35, label %land.lhs.true3.i.i36.css_next_child.exit.i45_crit_edge, label %land.lhs.true6.i.i38

land.lhs.true3.i.i36.css_next_child.exit.i45_crit_edge: ; preds = %land.lhs.true3.i.i36
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit.i45

land.lhs.true6.i.i38:                             ; preds = %land.lhs.true3.i.i36
  %.b87.i.i37 = load i1, ptr @css_next_child.__warned, align 1
  br i1 %.b87.i.i37, label %land.lhs.true6.i.i38.css_next_child.exit.i45_crit_edge, label %if.then.i.i39

land.lhs.true6.i.i38.css_next_child.exit.i45_crit_edge: ; preds = %land.lhs.true6.i.i38
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit.i45

if.then.i.i39:                                    ; preds = %land.lhs.true6.i.i38
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_next_child.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 4316, ptr noundef nonnull @.str.14) #26
  br label %css_next_child.exit.i45

css_next_child.exit.i45:                          ; preds = %if.then.i.i39, %land.lhs.true6.i.i38.css_next_child.exit.i45_crit_edge, %land.lhs.true3.i.i36.css_next_child.exit.i45_crit_edge, %land.lhs.true.i.i33.css_next_child.exit.i45_crit_edge, %do.body.i30.css_next_child.exit.i45_crit_edge
  %children.i.i40 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %pos.addr.0.i27, i32 0, i32 4
  %4 = ptrtoint ptr %children.i.i40 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %children.i.i40, align 8
  %next.0.le.i.i41 = getelementptr i8, ptr %5, i32 -16
  %cmp72.not.i.i42 = icmp eq ptr %5, %children.i.i40
  %tobool.not3.i43 = icmp eq ptr %next.0.le.i.i41, null
  %tobool.not.i44 = or i1 %cmp72.not.i.i42, %tobool.not3.i43
  br i1 %tobool.not.i44, label %css_next_child.exit.i45.cleanup_crit_edge, label %css_next_child.exit.i45.do.body.i30_crit_edge

css_next_child.exit.i45.do.body.i30_crit_edge:    ; preds = %css_next_child.exit.i45
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body.i30

css_next_child.exit.i45.cleanup_crit_edge:        ; preds = %css_next_child.exit.i45
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end18:                                         ; preds = %if.end13
  call void @__sanitizer_cov_trace_pc() #28
  %6 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %parent, align 8
  br label %cleanup

cleanup:                                          ; preds = %if.end18, %css_next_child.exit.i45.cleanup_crit_edge, %if.end11.cleanup_crit_edge, %css_next_child.exit.i.cleanup_crit_edge
  %retval.0 = phi ptr [ %7, %if.end18 ], [ null, %if.end11.cleanup_crit_edge ], [ %pos.addr.0.i, %css_next_child.exit.i.cleanup_crit_edge ], [ %pos.addr.0.i27, %css_next_child.exit.i45.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @autoremove_wake_function(ptr noundef, i32 noundef, i32 noundef, ptr noundef) #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cgroup_get_live(ptr noundef %cgrp) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %flags.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 7
  %0 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %1, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %land.rhs, label %entry.if.end27_crit_edge

entry.if.end27_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end27

land.rhs:                                         ; preds = %entry
  %.b38 = load i1, ptr @cgroup_get_live.__already_done, align 1
  br i1 %.b38, label %land.rhs.if.end27_crit_edge, label %if.then, !prof !636

land.rhs.if.end27_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end27

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_get_live.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 615, i32 noundef 9, ptr noundef null) #26
  br label %if.end27

if.end27:                                         ; preds = %if.then, %land.rhs.if.end27_crit_edge, %entry.if.end27_crit_edge
  %2 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags.i, align 4
  %and.i40 = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i40)
  %tobool.not.i41 = icmp eq i32 %and.i40, 0
  br i1 %tobool.not.i41, label %if.then.i, label %if.end27.css_get.exit_crit_edge

if.end27.css_get.exit_crit_edge:                  ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_get.exit

if.then.i:                                        ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 2
  tail call fastcc void @percpu_ref_get(ptr noundef %refcnt.i) #26
  br label %css_get.exit

css_get.exit:                                     ; preds = %if.then.i, %if.end27.css_get.exit_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @prepare_to_wait(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @schedule() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @finish_wait(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define dso_local zeroext i1 @cgroup_psi_enabled() local_unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i16, ptr @cgroup_feature_disable_mask, align 2
  %1 = and i16 %0, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %1)
  %cmp = icmp eq i16 %1, 0
  ret i1 %cmp
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_rm_cftypes(ptr noundef %cfts) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @mutex_lock_nested(ptr noundef nonnull @cgroup_mutex, i32 noundef 0) #26
  %call = tail call fastcc i32 @cgroup_rm_cftypes_locked(ptr noundef %cfts)
  tail call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @cgroup_rm_cftypes_locked(ptr noundef %cfts) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 4164, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool24.not = icmp eq ptr %cfts, null
  br i1 %tobool24.not, label %if.end.return_crit_edge, label %lor.lhs.false

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %return

lor.lhs.false:                                    ; preds = %if.end
  %ss = getelementptr inbounds %struct.cftype, ptr %cfts, i32 0, i32 5
  %1 = ptrtoint ptr %ss to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %ss, align 4
  %tobool25.not = icmp eq ptr %2, null
  br i1 %tobool25.not, label %lor.lhs.false.return_crit_edge, label %if.end27

lor.lhs.false.return_crit_edge:                   ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #28
  br label %return

if.end27:                                         ; preds = %lor.lhs.false
  %node = getelementptr inbounds %struct.cftype, ptr %cfts, i32 0, i32 6
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %node) #26
  br i1 %call.i.i, label %if.end.i.i, label %if.end27.list_del.exit_crit_edge

if.end27.list_del.exit_crit_edge:                 ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i = getelementptr inbounds %struct.cftype, ptr %cfts, i32 0, i32 6, i32 1
  %3 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %prev.i.i, align 4
  %5 = ptrtoint ptr %node to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %node, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %6, i32 0, i32 1
  %7 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %4, ptr %prev1.i.i.i, align 4
  %8 = ptrtoint ptr %4 to i32
  call void @__asan_store4_noabort(i32 %8)
  store volatile ptr %6, ptr %4, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.end27.list_del.exit_crit_edge
  %9 = ptrtoint ptr %node to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 256 to ptr), ptr %node, align 4
  %prev.i = getelementptr inbounds %struct.cftype, ptr %cfts, i32 0, i32 6, i32 1
  %10 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %call28 = tail call fastcc i32 @cgroup_apply_cftypes(ptr noundef nonnull %cfts, i1 noundef zeroext false)
  %11 = ptrtoint ptr %cfts to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %cfts, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %12)
  %cmp.not13.i = icmp eq i8 %12, 0
  br i1 %cmp.not13.i, label %list_del.exit.return_crit_edge, label %list_del.exit.for.body.i_crit_edge

list_del.exit.for.body.i_crit_edge:               ; preds = %list_del.exit
  br label %for.body.i

list_del.exit.return_crit_edge:                   ; preds = %list_del.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %return

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %list_del.exit.for.body.i_crit_edge
  %cft.014.i = phi ptr [ %incdec.ptr.i, %if.end.i.for.body.i_crit_edge ], [ %cfts, %list_del.exit.for.body.i_crit_edge ]
  %max_write_len.i = getelementptr inbounds %struct.cftype, ptr %cft.014.i, i32 0, i32 2
  %13 = ptrtoint ptr %max_write_len.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %max_write_len.i, align 4
  %15 = zext i32 %14 to i64
  call void @__sanitizer_cov_trace_switch(i64 %15, ptr @__sancov_gen_cov_switch_values)
  switch i32 %14, label %if.then.i [
    i32 0, label %for.body.i.if.end.i_crit_edge
    i32 4096, label %for.body.i.if.end.i_crit_edge34
  ]

for.body.i.if.end.i_crit_edge34:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

for.body.i.if.end.i_crit_edge:                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  %kf_ops.i = getelementptr inbounds %struct.cftype, ptr %cft.014.i, i32 0, i32 7
  %16 = ptrtoint ptr %kf_ops.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %kf_ops.i, align 4
  tail call void @kfree(ptr noundef %17) #26
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %for.body.i.if.end.i_crit_edge, %for.body.i.if.end.i_crit_edge34
  %kf_ops5.i = getelementptr inbounds %struct.cftype, ptr %cft.014.i, i32 0, i32 7
  %18 = ptrtoint ptr %kf_ops5.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr null, ptr %kf_ops5.i, align 4
  %ss.i = getelementptr inbounds %struct.cftype, ptr %cft.014.i, i32 0, i32 5
  %19 = ptrtoint ptr %ss.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr null, ptr %ss.i, align 4
  %flags.i = getelementptr inbounds %struct.cftype, ptr %cft.014.i, i32 0, i32 3
  %20 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %21, -196609
  store i32 %and.i, ptr %flags.i, align 4
  %incdec.ptr.i = getelementptr %struct.cftype, ptr %cft.014.i, i32 1
  %22 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load1_noabort(i32 %22)
  %23 = load i8, ptr %incdec.ptr.i, align 4
  %cmp.not.i = icmp eq i8 %23, 0
  br i1 %cmp.not.i, label %if.end.i.return_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body.i

if.end.i.return_crit_edge:                        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %return

return:                                           ; preds = %if.end.i.return_crit_edge, %list_del.exit.return_crit_edge, %lor.lhs.false.return_crit_edge, %if.end.return_crit_edge
  %retval.0 = phi i32 [ -2, %lor.lhs.false.return_crit_edge ], [ -2, %if.end.return_crit_edge ], [ 0, %list_del.exit.return_crit_edge ], [ 0, %if.end.i.return_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_add_dfl_cftypes(ptr noundef %ss, ptr noundef %cfts) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not6 = icmp eq ptr %cfts, null
  br i1 %tobool.not6, label %entry.for.end_crit_edge, label %entry.land.rhs_crit_edge

entry.land.rhs_crit_edge:                         ; preds = %entry
  br label %land.rhs

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

land.rhs:                                         ; preds = %for.body.land.rhs_crit_edge, %entry.land.rhs_crit_edge
  %cft.07 = phi ptr [ %incdec.ptr, %for.body.land.rhs_crit_edge ], [ %cfts, %entry.land.rhs_crit_edge ]
  %0 = ptrtoint ptr %cft.07 to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %cft.07, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp.not = icmp eq i8 %1, 0
  br i1 %cmp.not, label %land.rhs.for.end_crit_edge, label %for.body

land.rhs.for.end_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.body:                                         ; preds = %land.rhs
  %flags = getelementptr inbounds %struct.cftype, ptr %cft.07, i32 0, i32 3
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 4
  %or = or i32 %3, 65536
  store i32 %or, ptr %flags, align 4
  %incdec.ptr = getelementptr %struct.cftype, ptr %cft.07, i32 1
  %tobool.not = icmp eq ptr %incdec.ptr, null
  br i1 %tobool.not, label %for.body.for.end_crit_edge, label %for.body.land.rhs_crit_edge

for.body.land.rhs_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %land.rhs.for.end_crit_edge, %entry.for.end_crit_edge
  %call = tail call fastcc i32 @cgroup_add_cftypes(ptr noundef %ss, ptr noundef %cfts)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @cgroup_add_cftypes(ptr noundef %ss, ptr noundef %cfts) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %id = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 19
  %0 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load i32, ptr %id, align 4
  %arrayidx.i = getelementptr [14 x ptr], ptr @cgroup_subsys_enabled_key, i32 0, i32 %1
  %2 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx.i, align 4
  %call.i = tail call i32 @static_key_count(ptr noundef %3) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call.i)
  %cmp.i = icmp slt i32 %call.i, 1
  %tobool.not = icmp eq ptr %cfts, null
  %or.cond = or i1 %tobool.not, %cmp.i
  br i1 %or.cond, label %entry.cleanup_crit_edge, label %lor.lhs.false

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %4 = ptrtoint ptr %cfts to i32
  call void @__asan_load1_noabort(i32 %4)
  %5 = load i8, ptr %cfts, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %5)
  %cmp = icmp eq i8 %5, 0
  br i1 %cmp, label %lor.lhs.false.cleanup_crit_edge, label %if.end4

lor.lhs.false.cleanup_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end4:                                          ; preds = %lor.lhs.false
  %call5 = tail call fastcc i32 @cgroup_init_cftypes(ptr noundef %ss, ptr noundef nonnull %cfts)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %if.end8, label %if.end4.cleanup_crit_edge

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end8:                                          ; preds = %if.end4
  tail call void @mutex_lock_nested(ptr noundef nonnull @cgroup_mutex, i32 noundef 0) #26
  %node = getelementptr inbounds %struct.cftype, ptr %cfts, i32 0, i32 6
  %cfts9 = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 24
  %prev.i = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 24, i32 1
  %6 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %node, ptr noundef %7, ptr noundef %cfts9) #26
  br i1 %call.i.i, label %if.end.i.i, label %if.end8.list_add_tail.exit_crit_edge

if.end8.list_add_tail.exit_crit_edge:             ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #28
  %8 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %node, ptr %prev.i, align 4
  %9 = ptrtoint ptr %node to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %cfts9, ptr %node, align 4
  %prev3.i.i = getelementptr inbounds %struct.cftype, ptr %cfts, i32 0, i32 6, i32 1
  %10 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %7, ptr %prev3.i.i, align 4
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %node, ptr %7, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.end8.list_add_tail.exit_crit_edge
  %call10 = tail call fastcc i32 @cgroup_apply_cftypes(ptr noundef nonnull %cfts, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10)
  %tobool11.not = icmp eq i32 %call10, 0
  br i1 %tobool11.not, label %list_add_tail.exit.if.end14_crit_edge, label %if.then12

list_add_tail.exit.if.end14_crit_edge:            ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end14

if.then12:                                        ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #28
  %call13 = tail call fastcc i32 @cgroup_rm_cftypes_locked(ptr noundef nonnull %cfts)
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %list_add_tail.exit.if.end14_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.end4.cleanup_crit_edge, %lor.lhs.false.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call10, %if.end14 ], [ 0, %entry.cleanup_crit_edge ], [ 0, %lor.lhs.false.cleanup_crit_edge ], [ %call5, %if.end4.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_add_legacy_cftypes(ptr noundef %ss, ptr noundef %cfts) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %tobool.not6 = icmp eq ptr %cfts, null
  br i1 %tobool.not6, label %entry.for.end_crit_edge, label %entry.land.rhs_crit_edge

entry.land.rhs_crit_edge:                         ; preds = %entry
  br label %land.rhs

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

land.rhs:                                         ; preds = %for.body.land.rhs_crit_edge, %entry.land.rhs_crit_edge
  %cft.07 = phi ptr [ %incdec.ptr, %for.body.land.rhs_crit_edge ], [ %cfts, %entry.land.rhs_crit_edge ]
  %0 = ptrtoint ptr %cft.07 to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %cft.07, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp.not = icmp eq i8 %1, 0
  br i1 %cmp.not, label %land.rhs.for.end_crit_edge, label %for.body

land.rhs.for.end_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.body:                                         ; preds = %land.rhs
  %flags = getelementptr inbounds %struct.cftype, ptr %cft.07, i32 0, i32 3
  %2 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags, align 4
  %or = or i32 %3, 131072
  store i32 %or, ptr %flags, align 4
  %incdec.ptr = getelementptr %struct.cftype, ptr %cft.07, i32 1
  %tobool.not = icmp eq ptr %incdec.ptr, null
  br i1 %tobool.not, label %for.body.for.end_crit_edge, label %for.body.land.rhs_crit_edge

for.body.land.rhs_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %land.rhs.for.end_crit_edge, %entry.for.end_crit_edge
  %call = tail call fastcc i32 @cgroup_add_cftypes(ptr noundef %ss, ptr noundef %cfts)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cgroup_file_notify(ptr noundef %cfile) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call2 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @cgroup_file_kn_lock) #26
  %0 = ptrtoint ptr %cfile to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cfile, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end14_crit_edge, label %if.then

entry.if.end14_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end14

if.then:                                          ; preds = %entry
  %notified_at = getelementptr inbounds %struct.cgroup_file, ptr %cfile, i32 0, i32 1
  %2 = ptrtoint ptr %notified_at to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %notified_at, align 4
  %add = add i32 %3, 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %4 = load volatile i32, ptr @jiffies, align 128
  %sub = sub i32 %4, %3
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub)
  %cmp5 = icmp sgt i32 %sub, -1
  br i1 %cmp5, label %land.lhs.true, label %if.then.if.else_crit_edge

if.then.if.else_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.else

land.lhs.true:                                    ; preds = %if.then
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %5 = load volatile i32, ptr @jiffies, align 128
  %sub7 = sub i32 %add, %5
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub7)
  %cmp8 = icmp sgt i32 %sub7, -1
  br i1 %cmp8, label %if.then10, label %land.lhs.true.if.else_crit_edge

land.lhs.true.if.else_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.else

if.then10:                                        ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  %notify_timer = getelementptr inbounds %struct.cgroup_file, ptr %cfile, i32 0, i32 2
  %call11 = tail call i32 @timer_reduce(ptr noundef %notify_timer, i32 noundef %add) #26
  br label %if.end14

if.else:                                          ; preds = %land.lhs.true.if.else_crit_edge, %if.then.if.else_crit_edge
  tail call void @kernfs_notify(ptr noundef nonnull %1) #26
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %6 = load volatile i32, ptr @jiffies, align 128
  %7 = ptrtoint ptr %notified_at to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %notified_at, align 4
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then10, %entry.if.end14_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @cgroup_file_kn_lock, i32 noundef %call2) #26
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @timer_reduce(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kernfs_notify(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_lockdep_rcu_enabled() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_rcu_suspicious(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_any_held() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @css_next_descendant_pre(ptr noundef %pos, ptr noundef readnone %root) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.do.end_crit_edge

entry.do.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

land.lhs.true:                                    ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool2.not = icmp eq i32 %call.i, 0
  br i1 %tobool2.not, label %land.lhs.true3, label %land.lhs.true.do.end_crit_edge

land.lhs.true.do.end_crit_edge:                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

land.lhs.true3:                                   ; preds = %land.lhs.true
  %call4 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %land.lhs.true3.do.end_crit_edge, label %land.lhs.true6

land.lhs.true3.do.end_crit_edge:                  ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

land.lhs.true6:                                   ; preds = %land.lhs.true3
  %.b29 = load i1, ptr @css_next_descendant_pre.__warned, align 1
  br i1 %.b29, label %land.lhs.true6.do.end_crit_edge, label %if.then

land.lhs.true6.do.end_crit_edge:                  ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

if.then:                                          ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_next_descendant_pre.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 4385, ptr noundef nonnull @.str.14) #26
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true6.do.end_crit_edge, %land.lhs.true3.do.end_crit_edge, %land.lhs.true.do.end_crit_edge, %entry.do.end_crit_edge
  %tobool8.not = icmp eq ptr %pos, null
  br i1 %tobool8.not, label %do.end.cleanup_crit_edge, label %if.end10

do.end.cleanup_crit_edge:                         ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end10:                                         ; preds = %do.end
  %call.i30 = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i30)
  %tobool.not.i = icmp eq i32 %call.i30, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %if.end10.css_next_child.exit_crit_edge

if.end10.css_next_child.exit_crit_edge:           ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit

land.lhs.true.i:                                  ; preds = %if.end10
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool2.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true3.i, label %land.lhs.true.i.css_next_child.exit_crit_edge

land.lhs.true.i.css_next_child.exit_crit_edge:    ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i
  %call4.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %land.lhs.true3.i.css_next_child.exit_crit_edge, label %land.lhs.true6.i

land.lhs.true3.i.css_next_child.exit_crit_edge:   ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit

land.lhs.true6.i:                                 ; preds = %land.lhs.true3.i
  %.b87.i = load i1, ptr @css_next_child.__warned, align 1
  br i1 %.b87.i, label %land.lhs.true6.i.css_next_child.exit_crit_edge, label %if.then.i

land.lhs.true6.i.css_next_child.exit_crit_edge:   ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit

if.then.i:                                        ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_next_child.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 4316, ptr noundef nonnull @.str.14) #26
  br label %css_next_child.exit

css_next_child.exit:                              ; preds = %if.then.i, %land.lhs.true6.i.css_next_child.exit_crit_edge, %land.lhs.true3.i.css_next_child.exit_crit_edge, %land.lhs.true.i.css_next_child.exit_crit_edge, %if.end10.css_next_child.exit_crit_edge
  %children.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %pos, i32 0, i32 4
  %0 = ptrtoint ptr %children.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %children.i, align 8
  %next.0.le.i = getelementptr i8, ptr %1, i32 -16
  %cmp72.not.i = icmp eq ptr %1, %children.i
  %tobool12.not31 = icmp eq ptr %next.0.le.i, null
  %tobool12.not = or i1 %cmp72.not.i, %tobool12.not31
  br i1 %tobool12.not, label %while.cond.preheader, label %css_next_child.exit.cleanup_crit_edge

css_next_child.exit.cleanup_crit_edge:            ; preds = %css_next_child.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

while.cond.preheader:                             ; preds = %css_next_child.exit
  %cmp.not32 = icmp eq ptr %pos, %root
  br i1 %cmp.not32, label %while.cond.preheader.cleanup_crit_edge, label %while.cond.preheader.while.body_crit_edge

while.cond.preheader.while.body_crit_edge:        ; preds = %while.cond.preheader
  br label %while.body

while.cond.preheader.cleanup_crit_edge:           ; preds = %while.cond.preheader
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

while.body:                                       ; preds = %if.end18.while.body_crit_edge, %while.cond.preheader.while.body_crit_edge
  %pos.addr.033 = phi ptr [ %5, %if.end18.while.body_crit_edge ], [ %pos, %while.cond.preheader.while.body_crit_edge ]
  %parent = getelementptr inbounds %struct.cgroup_subsys_state, ptr %pos.addr.033, i32 0, i32 12
  %2 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent, align 8
  %call15 = tail call ptr @css_next_child(ptr noundef %pos.addr.033, ptr noundef %3)
  %tobool16.not = icmp eq ptr %call15, null
  br i1 %tobool16.not, label %if.end18, label %while.body.cleanup_crit_edge

while.body.cleanup_crit_edge:                     ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end18:                                         ; preds = %while.body
  %4 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent, align 8
  %cmp.not = icmp eq ptr %5, %root
  br i1 %cmp.not, label %if.end18.cleanup_crit_edge, label %if.end18.while.body_crit_edge

if.end18.while.body_crit_edge:                    ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.body

if.end18.cleanup_crit_edge:                       ; preds = %if.end18
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

cleanup:                                          ; preds = %if.end18.cleanup_crit_edge, %while.body.cleanup_crit_edge, %while.cond.preheader.cleanup_crit_edge, %css_next_child.exit.cleanup_crit_edge, %do.end.cleanup_crit_edge
  %retval.0 = phi ptr [ %root, %do.end.cleanup_crit_edge ], [ %next.0.le.i, %css_next_child.exit.cleanup_crit_edge ], [ null, %while.cond.preheader.cleanup_crit_edge ], [ %call15, %while.body.cleanup_crit_edge ], [ null, %if.end18.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @css_rightmost_descendant(ptr noundef %pos) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.do.body8.preheader_crit_edge

entry.do.body8.preheader_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body8.preheader

land.lhs.true:                                    ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool2.not = icmp eq i32 %call.i, 0
  br i1 %tobool2.not, label %land.lhs.true3, label %land.lhs.true.do.body8.preheader_crit_edge

land.lhs.true.do.body8.preheader_crit_edge:       ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body8.preheader

land.lhs.true3:                                   ; preds = %land.lhs.true
  %call4 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %land.lhs.true3.do.body8.preheader_crit_edge, label %land.lhs.true6

land.lhs.true3.do.body8.preheader_crit_edge:      ; preds = %land.lhs.true3
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body8.preheader

land.lhs.true6:                                   ; preds = %land.lhs.true3
  %.b20 = load i1, ptr @css_rightmost_descendant.__warned, align 1
  br i1 %.b20, label %land.lhs.true6.do.body8.preheader_crit_edge, label %if.then

land.lhs.true6.do.body8.preheader_crit_edge:      ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body8.preheader

if.then:                                          ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_rightmost_descendant.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 4426, ptr noundef nonnull @.str.14) #26
  br label %do.body8.preheader

do.body8.preheader:                               ; preds = %if.then, %land.lhs.true6.do.body8.preheader_crit_edge, %land.lhs.true3.do.body8.preheader_crit_edge, %land.lhs.true.do.body8.preheader_crit_edge, %entry.do.body8.preheader_crit_edge
  br label %do.body8

do.body8:                                         ; preds = %for.body.do.body8_crit_edge, %do.body8.preheader
  %pos.addr.0 = phi ptr [ %pos, %do.body8.preheader ], [ %tmp.023, %for.body.do.body8_crit_edge ]
  %call.i21 = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i21)
  %tobool.not.i = icmp eq i32 %call.i21, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %do.body8.css_next_child.exit_crit_edge

do.body8.css_next_child.exit_crit_edge:           ; preds = %do.body8
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit

land.lhs.true.i:                                  ; preds = %do.body8
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool2.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true3.i, label %land.lhs.true.i.css_next_child.exit_crit_edge

land.lhs.true.i.css_next_child.exit_crit_edge:    ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i
  %call4.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %land.lhs.true3.i.css_next_child.exit_crit_edge, label %land.lhs.true6.i

land.lhs.true3.i.css_next_child.exit_crit_edge:   ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit

land.lhs.true6.i:                                 ; preds = %land.lhs.true3.i
  %.b87.i = load i1, ptr @css_next_child.__warned, align 1
  br i1 %.b87.i, label %land.lhs.true6.i.css_next_child.exit_crit_edge, label %if.then.i

land.lhs.true6.i.css_next_child.exit_crit_edge:   ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit

if.then.i:                                        ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_next_child.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 4316, ptr noundef nonnull @.str.14) #26
  br label %css_next_child.exit

css_next_child.exit:                              ; preds = %if.then.i, %land.lhs.true6.i.css_next_child.exit_crit_edge, %land.lhs.true3.i.css_next_child.exit_crit_edge, %land.lhs.true.i.css_next_child.exit_crit_edge, %do.body8.css_next_child.exit_crit_edge
  %children.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %pos.addr.0, i32 0, i32 4
  %0 = ptrtoint ptr %children.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %children.i, align 8
  %next.0.le.i = getelementptr i8, ptr %1, i32 -16
  %cmp72.not.i = icmp eq ptr %1, %children.i
  %tobool10.not2224 = icmp eq ptr %next.0.le.i, null
  %tobool10.not22 = or i1 %cmp72.not.i, %tobool10.not2224
  br i1 %tobool10.not22, label %do.end14, label %css_next_child.exit.for.body_crit_edge

css_next_child.exit.for.body_crit_edge:           ; preds = %css_next_child.exit
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %css_next_child.exit.for.body_crit_edge
  %tmp.023 = phi ptr [ %call11, %for.body.for.body_crit_edge ], [ %next.0.le.i, %css_next_child.exit.for.body_crit_edge ]
  %call11 = tail call ptr @css_next_child(ptr noundef nonnull %tmp.023, ptr noundef %pos.addr.0)
  %tobool10.not = icmp eq ptr %call11, null
  br i1 %tobool10.not, label %for.body.do.body8_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

for.body.do.body8_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body8

do.end14:                                         ; preds = %css_next_child.exit
  call void @__sanitizer_cov_trace_pc() #28
  ret ptr %pos.addr.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local zeroext i1 @css_has_online_children(ptr noundef %css) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !639
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #26
  %call.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 696, ptr noundef nonnull @.str.55) #26
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %call.i7 = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i7)
  %tobool.not.i8 = icmp eq i32 %call.i7, 0
  br i1 %tobool.not.i8, label %land.lhs.true.i9, label %rcu_read_lock.exit.css_next_child.exit_crit_edge

rcu_read_lock.exit.css_next_child.exit_crit_edge: ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit

land.lhs.true.i9:                                 ; preds = %rcu_read_lock.exit
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool2.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true3.i, label %land.lhs.true.i9.css_next_child.exit_crit_edge

land.lhs.true.i9.css_next_child.exit_crit_edge:   ; preds = %land.lhs.true.i9
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i9
  %call4.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %land.lhs.true3.i.css_next_child.exit_crit_edge, label %land.lhs.true6.i

land.lhs.true3.i.css_next_child.exit_crit_edge:   ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit

land.lhs.true6.i:                                 ; preds = %land.lhs.true3.i
  %.b87.i = load i1, ptr @css_next_child.__warned, align 1
  br i1 %.b87.i, label %land.lhs.true6.i.css_next_child.exit_crit_edge, label %if.then.i10

land.lhs.true6.i.css_next_child.exit_crit_edge:   ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_child.exit

if.then.i10:                                      ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_next_child.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 4316, ptr noundef nonnull @.str.14) #26
  br label %css_next_child.exit

css_next_child.exit:                              ; preds = %if.then.i10, %land.lhs.true6.i.css_next_child.exit_crit_edge, %land.lhs.true3.i.css_next_child.exit_crit_edge, %land.lhs.true.i9.css_next_child.exit_crit_edge, %rcu_read_lock.exit.css_next_child.exit_crit_edge
  %children.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 4
  %4 = ptrtoint ptr %children.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %children.i, align 8
  %next.0.le.i = getelementptr i8, ptr %5, i32 -16
  %cmp72.not.i = icmp eq ptr %5, %children.i
  %tobool.not2024 = icmp eq ptr %next.0.le.i, null
  %tobool.not20 = or i1 %cmp72.not.i, %tobool.not2024
  br i1 %tobool.not20, label %css_next_child.exit.for.end_crit_edge, label %css_next_child.exit.for.body_crit_edge

css_next_child.exit.for.body_crit_edge:           ; preds = %css_next_child.exit
  br label %for.body

css_next_child.exit.for.end_crit_edge:            ; preds = %css_next_child.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %css_next_child.exit.for.body_crit_edge
  %child.021 = phi ptr [ %call2, %for.inc.for.body_crit_edge ], [ %next.0.le.i, %css_next_child.exit.for.body_crit_edge ]
  %flags = getelementptr inbounds %struct.cgroup_subsys_state, ptr %child.021, i32 0, i32 7
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags, align 4
  %and = and i32 %7, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool1.not = icmp eq i32 %and, 0
  br i1 %tobool1.not, label %for.inc, label %for.body.for.end.loopexit_crit_edge

for.body.for.end.loopexit_crit_edge:              ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end.loopexit

for.inc:                                          ; preds = %for.body
  %call2 = tail call ptr @css_next_child(ptr noundef nonnull %child.021, ptr noundef %css)
  %tobool.not = icmp eq ptr %call2, null
  br i1 %tobool.not, label %for.inc.for.end.loopexit_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

for.inc.for.end.loopexit_crit_edge:               ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end.loopexit

for.end.loopexit:                                 ; preds = %for.inc.for.end.loopexit_crit_edge, %for.body.for.end.loopexit_crit_edge
  %phi.bo = xor i1 %tobool1.not, true
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit, %css_next_child.exit.for.end_crit_edge
  %tobool.not.lcssa = phi i1 [ false, %css_next_child.exit.for.end_crit_edge ], [ %phi.bo, %for.end.loopexit ]
  %call.i11 = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i11, label %for.end.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i14

for.end.rcu_read_unlock.exit_crit_edge:           ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true.i14:                                ; preds = %for.end
  %call1.i12 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i12)
  %tobool.not.i13 = icmp eq i32 %call1.i12, 0
  br i1 %tobool.not.i13, label %land.lhs.true.i14.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i16

land.lhs.true.i14.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i14
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true2.i16:                               ; preds = %land.lhs.true.i14
  %.b4.i15 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i15, label %land.lhs.true2.i16.rcu_read_unlock.exit_crit_edge, label %if.then.i17

land.lhs.true2.i16.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i16
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

if.then.i17:                                      ; preds = %land.lhs.true2.i16
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 724, ptr noundef nonnull @.str.57) #26
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i17, %land.lhs.true2.i16.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i14.rcu_read_unlock.exit_crit_edge, %for.end.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !640
  %8 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i18 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i.i.i.i18 to ptr
  %preempt_count.i.i.i.i19 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i.i.i.i19 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i.i.i.i19, align 4
  %sub.i.i.i = add i32 %11, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i19, align 4
  tail call void @rcu_read_unlock_strict() #26
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #26
  ret i1 %tobool.not.lcssa
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @css_task_iter_start(ptr nocapture noundef readonly %css, i32 noundef %flags, ptr noundef %it) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = call ptr @memset(ptr %it, i32 0, i32 52)
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %ss = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 1
  %1 = ptrtoint ptr %ss to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %ss, align 4
  %3 = ptrtoint ptr %it to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %2, ptr %it, align 4
  %flags2 = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 1
  %4 = ptrtoint ptr %flags2 to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %flags, ptr %flags2, align 4
  %tobool.not = icmp eq ptr %2, null
  %5 = ptrtoint ptr %css to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %css, align 8
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %7 = ptrtoint ptr %ss to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ss, align 4
  %id = getelementptr inbounds %struct.cgroup_subsys, ptr %8, i32 0, i32 19
  %9 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %id, align 4
  %arrayidx = getelementptr %struct.cgroup, ptr %6, i32 0, i32 21, i32 %10
  br label %if.end

if.else:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %cset_links = getelementptr inbounds %struct.cgroup, ptr %6, i32 0, i32 20
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arrayidx.sink = phi ptr [ %cset_links, %if.else ], [ %arrayidx, %if.then ]
  %11 = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 2
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr %arrayidx.sink, ptr %11, align 4
  %cset_head = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 3
  %13 = ptrtoint ptr %cset_head to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %arrayidx.sink, ptr %cset_head, align 4
  tail call fastcc void @css_task_iter_advance(ptr noundef %it)
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @css_task_iter_advance(ptr noundef %it) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 4645, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %cur_tasks_head73 = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 7
  %task_pos = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 6
  %flags = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 1
  %cur_cset = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 8
  br label %repeat

repeat:                                           ; preds = %repeat.backedge, %if.end
  %1 = ptrtoint ptr %task_pos to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %task_pos, align 4
  %tobool24.not = icmp eq ptr %2, null
  br i1 %tobool24.not, label %repeat.if.end59thread-pre-split_crit_edge, label %if.then25

repeat.if.end59thread-pre-split_crit_edge:        ; preds = %repeat
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end59thread-pre-split

if.then25:                                        ; preds = %repeat
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags, align 4
  %and = and i32 %4, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool26.not = icmp eq i32 %and, 0
  br i1 %tobool26.not, label %if.else, label %if.then27

if.then27:                                        ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #28
  %and29 = and i32 %4, -65537
  %5 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 %and29, ptr %flags, align 4
  br label %if.end32

if.else:                                          ; preds = %if.then25
  call void @__sanitizer_cov_trace_pc() #28
  %6 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %2, align 4
  %8 = ptrtoint ptr %task_pos to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %7, ptr %task_pos, align 4
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then27
  %9 = ptrtoint ptr %task_pos to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %task_pos, align 4
  %11 = ptrtoint ptr %cur_cset to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %cur_cset, align 4
  %tasks = getelementptr inbounds %struct.css_set, ptr %12, i32 0, i32 5
  %cmp34 = icmp eq ptr %10, %tasks
  br i1 %cmp34, label %if.then35, label %if.end32.if.end40_crit_edge

if.end32.if.end40_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end40

if.then35:                                        ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #28
  %mg_tasks = getelementptr inbounds %struct.css_set, ptr %12, i32 0, i32 6
  %13 = ptrtoint ptr %cur_tasks_head73 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %mg_tasks, ptr %cur_tasks_head73, align 4
  %14 = ptrtoint ptr %mg_tasks to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %mg_tasks, align 4
  %16 = ptrtoint ptr %task_pos to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %15, ptr %task_pos, align 4
  br label %if.end40

if.end40:                                         ; preds = %if.then35, %if.end32.if.end40_crit_edge
  %17 = ptrtoint ptr %task_pos to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %task_pos, align 4
  %mg_tasks43 = getelementptr inbounds %struct.css_set, ptr %12, i32 0, i32 6
  %cmp44 = icmp eq ptr %18, %mg_tasks43
  br i1 %cmp44, label %if.then45, label %if.end40.if.end51_crit_edge

if.end40.if.end51_crit_edge:                      ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end51

if.then45:                                        ; preds = %if.end40
  call void @__sanitizer_cov_trace_pc() #28
  %dying_tasks = getelementptr inbounds %struct.css_set, ptr %12, i32 0, i32 7
  %19 = ptrtoint ptr %cur_tasks_head73 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %dying_tasks, ptr %cur_tasks_head73, align 4
  %20 = ptrtoint ptr %dying_tasks to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %dying_tasks, align 4
  %22 = ptrtoint ptr %task_pos to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %21, ptr %task_pos, align 4
  br label %if.end51

if.end51:                                         ; preds = %if.then45, %if.end40.if.end51_crit_edge
  %23 = ptrtoint ptr %task_pos to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %task_pos, align 4
  %dying_tasks54 = getelementptr inbounds %struct.css_set, ptr %12, i32 0, i32 7
  %cmp55 = icmp eq ptr %24, %dying_tasks54
  br i1 %cmp55, label %if.end51.if.end59thread-pre-split_crit_edge, label %if.end51.if.end59_crit_edge

if.end51.if.end59_crit_edge:                      ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end59

if.end51.if.end59thread-pre-split_crit_edge:      ; preds = %if.end51
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end59thread-pre-split

if.end59thread-pre-split:                         ; preds = %if.end51.if.end59thread-pre-split_crit_edge, %repeat.if.end59thread-pre-split_crit_edge
  tail call fastcc void @css_task_iter_advance_css_set(ptr noundef %it)
  %25 = ptrtoint ptr %task_pos to i32
  call void @__asan_load4_noabort(i32 %25)
  %.pr = load ptr, ptr %task_pos, align 4
  br label %if.end59

if.end59:                                         ; preds = %if.end59thread-pre-split, %if.end51.if.end59_crit_edge
  %26 = phi ptr [ %.pr, %if.end59thread-pre-split ], [ %24, %if.end51.if.end59_crit_edge ]
  %tobool61.not = icmp eq ptr %26, null
  br i1 %tobool61.not, label %if.end59.cleanup_crit_edge, label %if.end63

if.end59.cleanup_crit_edge:                       ; preds = %if.end59
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end63:                                         ; preds = %if.end59
  %27 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %flags, align 4
  %and67 = and i32 %28, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and67)
  %tobool68.not = icmp eq i32 %and67, 0
  br i1 %tobool68.not, label %if.else81, label %if.then69

if.then69:                                        ; preds = %if.end63
  %exit_signal.i = getelementptr i8, ptr %26, i32 -3232
  %29 = ptrtoint ptr %exit_signal.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %exit_signal.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %30)
  %cmp.i = icmp sgt i32 %30, -1
  br i1 %cmp.i, label %if.end72, label %if.then69.repeat.backedge_crit_edge

if.then69.repeat.backedge_crit_edge:              ; preds = %if.then69
  call void @__sanitizer_cov_trace_pc() #28
  br label %repeat.backedge

repeat.backedge:                                  ; preds = %if.else81.repeat.backedge_crit_edge, %land.lhs.true.repeat.backedge_crit_edge, %if.then69.repeat.backedge_crit_edge
  br label %repeat

if.end72:                                         ; preds = %if.then69
  %31 = ptrtoint ptr %cur_tasks_head73 to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %cur_tasks_head73, align 4
  %33 = ptrtoint ptr %cur_cset to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %cur_cset, align 4
  %dying_tasks75 = getelementptr inbounds %struct.css_set, ptr %34, i32 0, i32 7
  %cmp76 = icmp eq ptr %32, %dying_tasks75
  br i1 %cmp76, label %land.lhs.true, label %if.end72.cleanup_crit_edge

if.end72.cleanup_crit_edge:                       ; preds = %if.end72
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

land.lhs.true:                                    ; preds = %if.end72
  %signal = getelementptr i8, ptr %26, i32 -2788
  %35 = ptrtoint ptr %signal to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %signal, align 16
  %live = getelementptr inbounds %struct.signal_struct, ptr %36, i32 0, i32 1
  %call.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %live, i32 noundef 4) #26
  %37 = ptrtoint ptr %live to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile i32, ptr %live, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool78.not = icmp eq i32 %38, 0
  br i1 %tobool78.not, label %land.lhs.true.repeat.backedge_crit_edge, label %land.lhs.true.cleanup_crit_edge

land.lhs.true.cleanup_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

land.lhs.true.repeat.backedge_crit_edge:          ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %repeat.backedge

if.else81:                                        ; preds = %if.end63
  %39 = ptrtoint ptr %cur_tasks_head73 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %cur_tasks_head73, align 4
  %41 = ptrtoint ptr %cur_cset to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %cur_cset, align 4
  %dying_tasks84 = getelementptr inbounds %struct.css_set, ptr %42, i32 0, i32 7
  %cmp85 = icmp eq ptr %40, %dying_tasks84
  br i1 %cmp85, label %if.else81.repeat.backedge_crit_edge, label %if.else81.cleanup_crit_edge

if.else81.cleanup_crit_edge:                      ; preds = %if.else81
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.else81.repeat.backedge_crit_edge:              ; preds = %if.else81
  call void @__sanitizer_cov_trace_pc() #28
  br label %repeat.backedge

cleanup:                                          ; preds = %if.else81.cleanup_crit_edge, %land.lhs.true.cleanup_crit_edge, %if.end72.cleanup_crit_edge, %if.end59.cleanup_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @css_task_iter_next(ptr noundef %it) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %cur_task = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 10
  %0 = ptrtoint ptr %cur_task to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cur_task, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.then:                                          ; preds = %entry
  %usage.i = getelementptr inbounds %struct.task_struct, ptr %1, i32 0, i32 2
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage.i, i32 noundef 4) #26
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !647
  tail call void @llvm.prefetch.p0(ptr %usage.i, i32 1, i32 3, i32 1) #26
  %2 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage.i, ptr %usage.i, i32 1, ptr elementtype(i32) %usage.i) #26, !srcloc !648
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %2, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.put_task_struct.exit_crit_edge, label %if.then10.i.i.i.i, !prof !636

if.end5.i.i.i.i.put_task_struct.exit_crit_edge:   ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %put_task_struct.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @refcount_warn_saturate(ptr noundef %usage.i, i32 noundef 3) #26
  br label %put_task_struct.exit

if.then.i:                                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !649
  tail call void @__put_task_struct(ptr noundef nonnull %1) #26
  br label %put_task_struct.exit

put_task_struct.exit:                             ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.put_task_struct.exit_crit_edge
  %3 = ptrtoint ptr %cur_task to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %cur_task, align 4
  br label %if.end

if.end:                                           ; preds = %put_task_struct.exit, %entry.if.end_crit_edge
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %flags = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 1
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags, align 4
  %and = and i32 %5, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %tobool3.not, label %if.end.if.end5_crit_edge, label %if.then4

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5

if.then4:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  tail call fastcc void @css_task_iter_advance(ptr noundef %it)
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %if.end.if.end5_crit_edge
  %task_pos = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 6
  %6 = ptrtoint ptr %task_pos to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %task_pos, align 4
  %tobool6.not = icmp eq ptr %7, null
  br i1 %tobool6.not, label %if.end5.if.end11_crit_edge, label %if.then7

if.end5.if.end11_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end11

if.then7:                                         ; preds = %if.end5
  %add.ptr = getelementptr i8, ptr %7, i32 -4468
  %8 = ptrtoint ptr %cur_task to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %add.ptr, ptr %cur_task, align 4
  %usage.i24 = getelementptr i8, ptr %7, i32 -4460
  %call.i.i.i.i.i.i25 = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage.i24, i32 noundef 4) #26
  tail call void @llvm.prefetch.p0(ptr %usage.i24, i32 1, i32 3, i32 1) #26
  %9 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage.i24, ptr %usage.i24, i32 1, ptr elementtype(i32) %usage.i24) #26, !srcloc !663
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %9, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then7.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !637

if.then7.if.end15.sink.split.i.i.i.i_crit_edge:   ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then7
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %10 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %10)
  %.not.i.i.i.i26 = icmp sgt i32 %10, -1
  br i1 %.not.i.i.i.i26, label %if.else.i.i.i.i.get_task_struct.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !636

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.get_task_struct.exit_crit_edge:   ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %get_task_struct.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then7.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then7.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %usage.i24, i32 noundef %.sink.i.i.i.i) #26
  br label %get_task_struct.exit

get_task_struct.exit:                             ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.get_task_struct.exit_crit_edge
  tail call fastcc void @css_task_iter_advance(ptr noundef %it)
  br label %if.end11

if.end11:                                         ; preds = %get_task_struct.exit, %if.end5.if.end11_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  %11 = ptrtoint ptr %cur_task to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %cur_task, align 4
  ret ptr %12
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @css_task_iter_end(ptr noundef %it) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %cur_cset = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 8
  %0 = ptrtoint ptr %cur_cset to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %cur_cset, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.then:                                          ; preds = %entry
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %iters_node = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 11
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %iters_node) #26
  br i1 %call.i.i, label %if.end.i.i, label %if.then.list_del.exit_crit_edge

if.then.list_del.exit_crit_edge:                  ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 11, i32 1
  %2 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %prev.i.i, align 4
  %4 = ptrtoint ptr %iters_node to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %iters_node, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %3, ptr %prev1.i.i.i, align 4
  %7 = ptrtoint ptr %3 to i32
  call void @__asan_store4_noabort(i32 %7)
  store volatile ptr %5, ptr %3, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.then.list_del.exit_crit_edge
  %8 = ptrtoint ptr %iters_node to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr inttoptr (i32 256 to ptr), ptr %iters_node, align 4
  %prev.i = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 11, i32 1
  %9 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %10 = ptrtoint ptr %cur_cset to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %cur_cset, align 4
  tail call void @put_css_set_locked(ptr noundef %11)
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  br label %if.end

if.end:                                           ; preds = %list_del.exit, %entry.if.end_crit_edge
  %cur_dcset = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 9
  %12 = ptrtoint ptr %cur_dcset to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %cur_dcset, align 4
  %tobool2.not = icmp eq ptr %13, null
  br i1 %tobool2.not, label %if.end.if.end5_crit_edge, label %if.then3

if.end.if.end5_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5

if.then3:                                         ; preds = %if.end
  %refcount.i = getelementptr inbounds %struct.css_set, ptr %13, i32 0, i32 1
  %call.i = tail call zeroext i1 @refcount_dec_not_one(ptr noundef %refcount.i) #26
  br i1 %call.i, label %if.then3.if.end5_crit_edge, label %do.body1.i

if.then3.if.end5_crit_edge:                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5

do.body1.i:                                       ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #28
  %call3.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @css_set_lock) #26
  tail call void @put_css_set_locked(ptr noundef nonnull %13) #26
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @css_set_lock, i32 noundef %call3.i) #26
  br label %if.end5

if.end5:                                          ; preds = %do.body1.i, %if.then3.if.end5_crit_edge, %if.end.if.end5_crit_edge
  %cur_task = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 10
  %14 = ptrtoint ptr %cur_task to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %cur_task, align 4
  %tobool6.not = icmp eq ptr %15, null
  br i1 %tobool6.not, label %if.end5.if.end9_crit_edge, label %if.then7

if.end5.if.end9_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end9

if.then7:                                         ; preds = %if.end5
  %usage.i = getelementptr inbounds %struct.task_struct, ptr %15, i32 0, i32 2
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %usage.i, i32 noundef 4) #26
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !647
  tail call void @llvm.prefetch.p0(ptr %usage.i, i32 1, i32 3, i32 1) #26
  %16 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %usage.i, ptr %usage.i, i32 1, ptr elementtype(i32) %usage.i) #26, !srcloc !648
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %16, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %if.then7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.if.end9_crit_edge, label %if.then10.i.i.i.i, !prof !636

if.end5.i.i.i.i.if.end9_crit_edge:                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end9

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @refcount_warn_saturate(ptr noundef %usage.i, i32 noundef 3) #26
  br label %if.end9

if.then.i:                                        ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !649
  tail call void @__put_task_struct(ptr noundef nonnull %15) #26
  br label %if.end9

if.end9:                                          ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.if.end9_crit_edge, %if.end5.if.end9_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_mkdir(ptr noundef %parent_kn, ptr noundef %name, i16 noundef zeroext %mode) #0 align 64 {
entry:
  %iattr.i = alloca %struct.iattr, align 8
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @strchr(ptr noundef %name, i32 noundef 10)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call ptr @cgroup_kn_lock_live(ptr noundef %parent_kn, i1 noundef zeroext false)
  %tobool2.not = icmp eq ptr %call1, null
  br i1 %tobool2.not, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end4:                                          ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %if.end4.for.body.i.preheader_crit_edge, label %land.rhs.i

if.end4.for.body.i.preheader_crit_edge:           ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body.i.preheader

land.rhs.i:                                       ; preds = %if.end4
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.for.body.i.preheader_crit_edge, !prof !637

land.rhs.i.for.body.i.preheader_crit_edge:        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body.i.preheader

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 5467, i32 noundef 9, ptr noundef null) #26
  br label %for.body.i.preheader

for.body.i.preheader:                             ; preds = %do.end.i, %land.rhs.i.for.body.i.preheader_crit_edge, %if.end4.for.body.i.preheader_crit_edge
  br label %for.body.i

for.body.i:                                       ; preds = %if.end30.i.for.body.i_crit_edge, %for.body.i.preheader
  %cgroup.041.i = phi ptr [ %8, %if.end30.i.for.body.i_crit_edge ], [ %call1, %for.body.i.preheader ]
  %level.040.i = phi i32 [ %inc.i, %if.end30.i.for.body.i_crit_edge ], [ 1, %for.body.i.preheader ]
  %nr_descendants.i = getelementptr inbounds %struct.cgroup, ptr %cgroup.041.i, i32 0, i32 4
  %1 = ptrtoint ptr %nr_descendants.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %nr_descendants.i, align 4
  %max_descendants.i = getelementptr inbounds %struct.cgroup, ptr %cgroup.041.i, i32 0, i32 6
  %3 = ptrtoint ptr %max_descendants.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %max_descendants.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %2, i32 %4)
  %cmp25.not.i = icmp slt i32 %2, %4
  br i1 %cmp25.not.i, label %if.end27.i, label %for.body.i.out_unlock_crit_edge

for.body.i.out_unlock_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

if.end27.i:                                       ; preds = %for.body.i
  %max_depth.i = getelementptr inbounds %struct.cgroup, ptr %cgroup.041.i, i32 0, i32 3
  %5 = ptrtoint ptr %max_depth.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %max_depth.i, align 8
  call void @__sanitizer_cov_trace_cmp4(i32 %level.040.i, i32 %6)
  %cmp28.i = icmp sgt i32 %level.040.i, %6
  br i1 %cmp28.i, label %if.end27.i.out_unlock_crit_edge, label %if.end30.i

if.end27.i.out_unlock_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

if.end30.i:                                       ; preds = %if.end27.i
  %inc.i = add i32 %level.040.i, 1
  %parent.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgroup.041.i, i32 0, i32 12
  %7 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %parent.i.i, align 8
  %tobool24.not.i = icmp eq ptr %8, null
  br i1 %tobool24.not.i, label %if.end7, label %if.end30.i.for.body.i_crit_edge

if.end30.i.for.body.i_crit_edge:                  ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body.i

if.end7:                                          ; preds = %if.end30.i
  %root1.i = getelementptr inbounds %struct.cgroup, ptr %call1, i32 0, i32 19
  %9 = ptrtoint ptr %root1.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %root1.i, align 4
  %level2.i = getelementptr inbounds %struct.cgroup, ptr %call1, i32 0, i32 2
  %11 = ptrtoint ptr %level2.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %level2.i, align 4
  %add.i = add i32 %12, 1
  %add3.i = add i32 %12, 2
  %13 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %add3.i, i32 8) #26
  %14 = extractvalue { i32, i1 } %13, 1
  %15 = extractvalue { i32, i1 } %13, 0
  %spec.select.i.i = tail call i32 @llvm.uadd.sat.i32(i32 %15, i32 2048) #26
  %retval.0.i.i = select i1 %14, i32 -1, i32 %spec.select.i.i
  %call9.i.i.i = tail call noalias align 128 ptr @__kmalloc(i32 noundef %retval.0.i.i, i32 noundef 3520) #33
  %tobool.not.i58 = icmp eq ptr %call9.i.i.i, null
  br i1 %tobool.not.i58, label %if.end7.if.then10_crit_edge, label %if.end.i59

if.end7.if.then10_crit_edge:                      ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then10

if.end.i59:                                       ; preds = %if.end7
  %refcnt.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call9.i.i.i, i32 0, i32 2
  %call6.i = tail call i32 @percpu_ref_init(ptr noundef %refcnt.i, ptr noundef nonnull @css_release, i32 noundef 0, i32 noundef 3264) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call6.i)
  %tobool7.not.i = icmp eq i32 %call6.i, 0
  br i1 %tobool7.not.i, label %if.end9.i, label %if.end.i59.out_free_cgrp.i_crit_edge

if.end.i59.out_free_cgrp.i_crit_edge:             ; preds = %if.end.i59
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_free_cgrp.i

if.end9.i:                                        ; preds = %if.end.i59
  %call10.i = tail call i32 @cgroup_rstat_init(ptr noundef nonnull %call9.i.i.i) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call10.i)
  %tobool11.not.i = icmp eq i32 %call10.i, 0
  br i1 %tobool11.not.i, label %if.end13.i, label %if.end9.i.out_cancel_ref.i_crit_edge

if.end9.i.out_cancel_ref.i_crit_edge:             ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_cancel_ref.i

if.end13.i:                                       ; preds = %if.end9.i
  %kn14.i = getelementptr inbounds %struct.cgroup, ptr %call1, i32 0, i32 11
  %16 = ptrtoint ptr %kn14.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %kn14.i, align 8
  %call.i.i60 = tail call ptr @kernfs_create_dir_ns(ptr noundef %17, ptr noundef %name, i16 noundef zeroext %mode, [1 x i32] zeroinitializer, [1 x i32] zeroinitializer, ptr noundef nonnull %call9.i.i.i, ptr noundef null) #26
  %cmp.i.i = icmp ugt ptr %call.i.i60, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.then17.i, label %if.end19.i

if.then17.i:                                      ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #28
  %18 = ptrtoint ptr %call.i.i60 to i32
  br label %out_stat_exit.i

if.end19.i:                                       ; preds = %if.end13.i
  %kn20.i = getelementptr inbounds %struct.cgroup, ptr %call9.i.i.i, i32 0, i32 11
  %19 = ptrtoint ptr %kn20.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %call.i.i60, ptr %kn20.i, align 16
  tail call fastcc void @init_cgroup_housekeeping(ptr noundef nonnull %call9.i.i.i) #26
  %parent23.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call9.i.i.i, i32 0, i32 12
  %20 = ptrtoint ptr %parent23.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store ptr %call1, ptr %parent23.i, align 32
  %root24.i = getelementptr inbounds %struct.cgroup, ptr %call9.i.i.i, i32 0, i32 19
  %21 = ptrtoint ptr %root24.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %10, ptr %root24.i, align 4
  %level25.i = getelementptr inbounds %struct.cgroup, ptr %call9.i.i.i, i32 0, i32 2
  %22 = ptrtoint ptr %level25.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %add.i, ptr %level25.i, align 4
  %call26.i = tail call i32 @psi_cgroup_alloc(ptr noundef nonnull %call9.i.i.i) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26.i)
  %tobool27.not.i = icmp eq i32 %call26.i, 0
  br i1 %tobool27.not.i, label %if.end29.i, label %if.end19.i.out_kernfs_remove.i_crit_edge

if.end19.i.out_kernfs_remove.i_crit_edge:         ; preds = %if.end19.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_kernfs_remove.i

if.end29.i:                                       ; preds = %if.end19.i
  %call30.i = tail call i32 @cgroup_bpf_inherit(ptr noundef nonnull %call9.i.i.i) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call30.i)
  %tobool31.not.i = icmp eq i32 %call30.i, 0
  br i1 %tobool31.not.i, label %if.end33.i, label %out_psi_free.i

if.end33.i:                                       ; preds = %if.end29.i
  %e_freeze.i = getelementptr inbounds %struct.cgroup, ptr %call1, i32 0, i32 36, i32 1
  %23 = ptrtoint ptr %e_freeze.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %e_freeze.i, align 4
  %e_freeze35.i = getelementptr inbounds %struct.cgroup, ptr %call9.i.i.i, i32 0, i32 36, i32 1
  %25 = ptrtoint ptr %e_freeze35.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store i32 %24, ptr %e_freeze35.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %24)
  %tobool38.not.i = icmp eq i32 %24, 0
  br i1 %tobool38.not.i, label %if.end33.i.for.body.preheader.i_crit_edge, label %if.then39.i

if.end33.i.for.body.preheader.i_crit_edge:        ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body.preheader.i

if.then39.i:                                      ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #28
  %flags.i = getelementptr inbounds %struct.cgroup, ptr %call9.i.i.i, i32 0, i32 1
  tail call void @_set_bit(i32 noundef 2, ptr noundef %flags.i) #26
  tail call void @_set_bit(i32 noundef 3, ptr noundef %flags.i) #26
  br label %for.body.preheader.i

for.body.preheader.i:                             ; preds = %if.then39.i, %if.end33.i.for.body.preheader.i_crit_edge
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  br label %for.body.i62

for.body.i62:                                     ; preds = %for.inc.i.for.body.i62_crit_edge, %for.body.preheader.i
  %tcgrp.0140.i = phi ptr [ %40, %for.inc.i.for.body.i62_crit_edge ], [ %call9.i.i.i, %for.body.preheader.i ]
  %kn.i.i = getelementptr inbounds %struct.cgroup, ptr %tcgrp.0140.i, i32 0, i32 11
  %26 = ptrtoint ptr %kn.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %kn.i.i, align 8
  %id.i.i = getelementptr inbounds %struct.kernfs_node, ptr %27, i32 0, i32 10
  %28 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load8_noabort(i32 %28)
  %29 = load i64, ptr %id.i.i, align 8
  %level44.i = getelementptr inbounds %struct.cgroup, ptr %tcgrp.0140.i, i32 0, i32 2
  %30 = ptrtoint ptr %level44.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %level44.i, align 4
  %arrayidx.i = getelementptr %struct.cgroup, ptr %call9.i.i.i, i32 0, i32 37, i32 %31
  %32 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store8_noabort(i32 %32)
  store i64 %29, ptr %arrayidx.i, align 8
  %cmp.not.i61 = icmp eq ptr %tcgrp.0140.i, %call9.i.i.i
  br i1 %cmp.not.i61, label %for.body.i62.for.inc.i_crit_edge, label %if.then45.i

for.body.i62.for.inc.i_crit_edge:                 ; preds = %for.body.i62
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.i

if.then45.i:                                      ; preds = %for.body.i62
  %nr_descendants.i63 = getelementptr inbounds %struct.cgroup, ptr %tcgrp.0140.i, i32 0, i32 4
  %33 = ptrtoint ptr %nr_descendants.i63 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %nr_descendants.i63, align 4
  %inc.i64 = add i32 %34, 1
  store i32 %inc.i64, ptr %nr_descendants.i63, align 4
  %35 = ptrtoint ptr %e_freeze35.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %e_freeze35.i, align 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool48.not.i = icmp eq i32 %36, 0
  br i1 %tobool48.not.i, label %if.then45.i.for.inc.i_crit_edge, label %if.then49.i

if.then45.i.for.inc.i_crit_edge:                  ; preds = %if.then45.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.i

if.then49.i:                                      ; preds = %if.then45.i
  call void @__sanitizer_cov_trace_pc() #28
  %nr_frozen_descendants.i = getelementptr inbounds %struct.cgroup, ptr %tcgrp.0140.i, i32 0, i32 36, i32 2
  %37 = ptrtoint ptr %nr_frozen_descendants.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %nr_frozen_descendants.i, align 4
  %inc51.i = add i32 %38, 1
  store i32 %inc51.i, ptr %nr_frozen_descendants.i, align 4
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then49.i, %if.then45.i.for.inc.i_crit_edge, %for.body.i62.for.inc.i_crit_edge
  %parent.i.i65 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %tcgrp.0140.i, i32 0, i32 12
  %39 = ptrtoint ptr %parent.i.i65 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %parent.i.i65, align 8
  %tobool42.not.i = icmp eq ptr %40, null
  br i1 %tobool42.not.i, label %for.end.i, label %for.inc.i.for.body.i62_crit_edge

for.inc.i.for.body.i62_crit_edge:                 ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body.i62

for.end.i:                                        ; preds = %for.inc.i
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  %flags.i.i = getelementptr inbounds %struct.cgroup, ptr %call1, i32 0, i32 1
  %41 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load volatile i32, ptr %flags.i.i, align 4
  %and1.i.i.i = and i32 %42, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1.i.i.i)
  %tobool.i.not.i = icmp eq i32 %and1.i.i.i, 0
  br i1 %tobool.i.not.i, label %for.end.i.if.end58.i_crit_edge, label %if.then56.i

for.end.i.if.end58.i_crit_edge:                   ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end58.i

if.then56.i:                                      ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #28
  %flags57.i = getelementptr inbounds %struct.cgroup, ptr %call9.i.i.i, i32 0, i32 1
  tail call void @_set_bit(i32 noundef 0, ptr noundef %flags57.i) #26
  br label %if.end58.i

if.end58.i:                                       ; preds = %if.then56.i, %for.end.i.if.end58.i_crit_edge
  %43 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load volatile i32, ptr %flags.i.i, align 4
  %45 = and i32 %44, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %45)
  %tobool61.not.i = icmp eq i32 %45, 0
  br i1 %tobool61.not.i, label %if.end58.i.if.end64.i_crit_edge, label %if.then62.i

if.end58.i.if.end64.i_crit_edge:                  ; preds = %if.end58.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end64.i

if.then62.i:                                      ; preds = %if.end58.i
  call void @__sanitizer_cov_trace_pc() #28
  %flags63.i = getelementptr inbounds %struct.cgroup, ptr %call9.i.i.i, i32 0, i32 1
  tail call void @_set_bit(i32 noundef 1, ptr noundef %flags63.i) #26
  br label %if.end64.i

if.end64.i:                                       ; preds = %if.then62.i, %if.end58.i.if.end64.i_crit_edge
  %46 = load i64, ptr @css_serial_nr_next, align 8
  %inc65.i = add i64 %46, 1
  store i64 %inc65.i, ptr @css_serial_nr_next, align 8
  %serial_nr.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call9.i.i.i, i32 0, i32 8
  %47 = ptrtoint ptr %serial_nr.i to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 %46, ptr %serial_nr.i, align 16
  %sibling.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call9.i.i.i, i32 0, i32 3
  %48 = ptrtoint ptr %parent23.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %parent23.i, align 32
  %children.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %49, i32 0, i32 4
  tail call fastcc void @list_add_tail_rcu(ptr noundef %sibling.i, ptr noundef %children.i) #26
  %nr_cgrps.i = getelementptr inbounds %struct.cgroup_root, ptr %10, i32 0, i32 5
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_cgrps.i, i32 noundef 4) #26
  tail call void @llvm.prefetch.p0(ptr %nr_cgrps.i, i32 1, i32 3, i32 1) #26
  %50 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_cgrps.i, ptr %nr_cgrps.i, i32 1, ptr elementtype(i32) %nr_cgrps.i) #26, !srcloc !670
  tail call fastcc void @cgroup_get_live(ptr noundef nonnull %call1) #26
  %51 = ptrtoint ptr %root24.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %root24.i, align 4
  %cmp.i138.i = icmp eq ptr %52, @cgrp_dfl_root
  br i1 %cmp.i138.i, label %if.end64.i.if.end73.i_crit_edge, label %if.then71.i

if.end64.i.if.end73.i_crit_edge:                  ; preds = %if.end64.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end73.i

if.then71.i:                                      ; preds = %if.end64.i
  call void @__sanitizer_cov_trace_pc() #28
  %call72.i = tail call fastcc zeroext i16 @cgroup_control(ptr noundef nonnull %call9.i.i.i) #26
  %subtree_control.i = getelementptr inbounds %struct.cgroup, ptr %call9.i.i.i, i32 0, i32 14
  %53 = ptrtoint ptr %subtree_control.i to i32
  call void @__asan_store2_noabort(i32 %53)
  store i16 %call72.i, ptr %subtree_control.i, align 4
  br label %if.end73.i

if.end73.i:                                       ; preds = %if.then71.i, %if.end64.i.if.end73.i_crit_edge
  tail call fastcc void @cgroup_propagate_control(ptr noundef nonnull %call9.i.i.i) #26
  br label %cgroup_create.exit

out_psi_free.i:                                   ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @psi_cgroup_free(ptr noundef nonnull %call9.i.i.i) #26
  br label %out_kernfs_remove.i

out_kernfs_remove.i:                              ; preds = %out_psi_free.i, %if.end19.i.out_kernfs_remove.i_crit_edge
  %ret.0.i = phi i32 [ %call26.i, %if.end19.i.out_kernfs_remove.i_crit_edge ], [ %call30.i, %out_psi_free.i ]
  %54 = ptrtoint ptr %kn20.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %kn20.i, align 16
  tail call void @kernfs_remove(ptr noundef %55) #26
  br label %out_stat_exit.i

out_stat_exit.i:                                  ; preds = %out_kernfs_remove.i, %if.then17.i
  %ret.1.i = phi i32 [ %18, %if.then17.i ], [ %ret.0.i, %out_kernfs_remove.i ]
  tail call void @cgroup_rstat_exit(ptr noundef nonnull %call9.i.i.i) #26
  br label %out_cancel_ref.i

out_cancel_ref.i:                                 ; preds = %out_stat_exit.i, %if.end9.i.out_cancel_ref.i_crit_edge
  %ret.2.i = phi i32 [ %call10.i, %if.end9.i.out_cancel_ref.i_crit_edge ], [ %ret.1.i, %out_stat_exit.i ]
  tail call void @percpu_ref_exit(ptr noundef %refcnt.i) #26
  br label %out_free_cgrp.i

out_free_cgrp.i:                                  ; preds = %out_cancel_ref.i, %if.end.i59.out_free_cgrp.i_crit_edge
  %ret.3.i = phi i32 [ %call6.i, %if.end.i59.out_free_cgrp.i_crit_edge ], [ %ret.2.i, %out_cancel_ref.i ]
  tail call void @kfree(ptr noundef nonnull %call9.i.i.i) #26
  %56 = inttoptr i32 %ret.3.i to ptr
  br label %cgroup_create.exit

cgroup_create.exit:                               ; preds = %out_free_cgrp.i, %if.end73.i
  %retval.0.i = phi ptr [ %56, %out_free_cgrp.i ], [ %call9.i.i.i, %if.end73.i ]
  %cmp.i = icmp ugt ptr %retval.0.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %cgroup_create.exit.if.then10_crit_edge, label %if.end12

cgroup_create.exit.if.then10_crit_edge:           ; preds = %cgroup_create.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then10

if.then10:                                        ; preds = %cgroup_create.exit.if.then10_crit_edge, %if.end7.if.then10_crit_edge
  %retval.0.i78 = phi ptr [ %retval.0.i, %cgroup_create.exit.if.then10_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end7.if.then10_crit_edge ]
  %57 = ptrtoint ptr %retval.0.i78 to i32
  br label %out_unlock

if.end12:                                         ; preds = %cgroup_create.exit
  %kn = getelementptr inbounds %struct.cgroup, ptr %retval.0.i, i32 0, i32 11
  %58 = ptrtoint ptr %kn to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %kn, align 8
  tail call void @kernfs_get(ptr noundef %59) #26
  %60 = ptrtoint ptr %kn to i32
  call void @__asan_load4_noabort(i32 %60)
  %61 = load ptr, ptr %kn, align 8
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %iattr.i) #26
  %62 = call ptr @memset(ptr %iattr.i, i32 0, i32 80)
  %63 = ptrtoint ptr %iattr.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 6, ptr %iattr.i, align 8
  %ia_uid.i = getelementptr inbounds %struct.iattr, ptr %iattr.i, i32 0, i32 2
  %64 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i = and i32 %64, -16384
  %65 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %65, i32 0, i32 2
  %66 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %task.i, align 8
  %cred.i = getelementptr inbounds %struct.task_struct, ptr %67, i32 0, i32 99
  %68 = ptrtoint ptr %cred.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load ptr, ptr %cred.i, align 16
  %fsuid.i = getelementptr inbounds %struct.cred, ptr %69, i32 0, i32 10
  %70 = ptrtoint ptr %fsuid.i to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %fsuid.i, align 4
  %72 = ptrtoint ptr %ia_uid.i to i32
  call void @__asan_store4_noabort(i32 %72)
  store i32 %71, ptr %ia_uid.i, align 8
  %ia_gid.i = getelementptr inbounds %struct.iattr, ptr %iattr.i, i32 0, i32 3
  %73 = load ptr, ptr %task.i, align 8
  %cred7.i = getelementptr inbounds %struct.task_struct, ptr %73, i32 0, i32 99
  %74 = ptrtoint ptr %cred7.i to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %cred7.i, align 16
  %fsgid.i = getelementptr inbounds %struct.cred, ptr %75, i32 0, i32 11
  %76 = ptrtoint ptr %fsgid.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load i32, ptr %fsgid.i, align 4
  %78 = ptrtoint ptr %ia_gid.i to i32
  call void @__asan_store4_noabort(i32 %78)
  store i32 %77, ptr %ia_gid.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %71)
  %cmp.i.i66 = icmp eq i32 %71, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %77)
  %cmp.i23.i = icmp eq i32 %77, 0
  %or.cond.i = select i1 %cmp.i.i66, i1 %cmp.i23.i, i1 false
  br i1 %or.cond.i, label %cgroup_kn_set_ugid.exit.thread, label %cgroup_kn_set_ugid.exit

cgroup_kn_set_ugid.exit.thread:                   ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %iattr.i) #26
  br label %if.end17

cgroup_kn_set_ugid.exit:                          ; preds = %if.end12
  %call17.i = call i32 @kernfs_setattr(ptr noundef %61, ptr noundef nonnull %iattr.i) #26
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %iattr.i) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17.i)
  %tobool15.not = icmp eq i32 %call17.i, 0
  br i1 %tobool15.not, label %cgroup_kn_set_ugid.exit.if.end17_crit_edge, label %cgroup_kn_set_ugid.exit.out_destroy_crit_edge

cgroup_kn_set_ugid.exit.out_destroy_crit_edge:    ; preds = %cgroup_kn_set_ugid.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_destroy

cgroup_kn_set_ugid.exit.if.end17_crit_edge:       ; preds = %cgroup_kn_set_ugid.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end17

if.end17:                                         ; preds = %cgroup_kn_set_ugid.exit.if.end17_crit_edge, %cgroup_kn_set_ugid.exit.thread
  %call18 = call fastcc i32 @css_populate_dir(ptr noundef %retval.0.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call18)
  %tobool19.not = icmp eq i32 %call18, 0
  br i1 %tobool19.not, label %if.end21, label %if.end17.out_destroy_crit_edge

if.end17.out_destroy_crit_edge:                   ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_destroy

if.end21:                                         ; preds = %if.end17
  %call22 = call fastcc i32 @cgroup_apply_control_enable(ptr noundef %retval.0.i)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call22)
  %tobool23.not = icmp eq i32 %call22, 0
  br i1 %tobool23.not, label %do.body, label %if.end21.out_destroy_crit_edge

if.end21.out_destroy_crit_edge:                   ; preds = %if.end21
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_destroy

do.body:                                          ; preds = %if.end21
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_mkdir, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@cgroup_mkdir, %if.then27)) #26
          to label %do.end37 [label %if.then27], !srcloc !657

if.then27:                                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  %call31 = call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @trace_cgroup_path_lock) #26
  %79 = ptrtoint ptr %kn to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %kn, align 8
  %call.i.i69 = call i32 @kernfs_path_from_node(ptr noundef %80, ptr noundef null, ptr noundef nonnull @trace_cgroup_path, i32 noundef 1024) #26
  call fastcc void @trace_cgroup_mkdir(ptr noundef %retval.0.i)
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @trace_cgroup_path_lock, i32 noundef %call31) #26
  br label %do.end37

do.end37:                                         ; preds = %if.then27, %do.body
  %81 = ptrtoint ptr %kn to i32
  call void @__asan_load4_noabort(i32 %81)
  %82 = load ptr, ptr %kn, align 8
  call void @kernfs_activate(ptr noundef %82) #26
  br label %out_unlock

out_destroy:                                      ; preds = %if.end21.out_destroy_crit_edge, %if.end17.out_destroy_crit_edge, %cgroup_kn_set_ugid.exit.out_destroy_crit_edge
  %ret.0 = phi i32 [ %call17.i, %cgroup_kn_set_ugid.exit.out_destroy_crit_edge ], [ %call18, %if.end17.out_destroy_crit_edge ], [ %call22, %if.end21.out_destroy_crit_edge ]
  %call39 = call fastcc i32 @cgroup_destroy_locked(ptr noundef %retval.0.i)
  br label %out_unlock

out_unlock:                                       ; preds = %out_destroy, %do.end37, %if.then10, %if.end27.i.out_unlock_crit_edge, %for.body.i.out_unlock_crit_edge
  %ret.1 = phi i32 [ %57, %if.then10 ], [ %ret.0, %out_destroy ], [ 0, %do.end37 ], [ -11, %if.end27.i.out_unlock_crit_edge ], [ -11, %for.body.i.out_unlock_crit_edge ]
  %flags.i.i70 = getelementptr inbounds %struct.kernfs_node, ptr %parent_kn, i32 0, i32 11
  %83 = ptrtoint ptr %flags.i.i70 to i32
  call void @__asan_load2_noabort(i32 %83)
  %84 = load i16, ptr %flags.i.i70, align 8
  %85 = and i16 %84, 15
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %85)
  %cmp.i71 = icmp eq i16 %85, 1
  br i1 %cmp.i71, label %out_unlock.if.end.i72_crit_edge, label %if.else.i

out_unlock.if.end.i72_crit_edge:                  ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i72

if.else.i:                                        ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #28
  %parent.i = getelementptr inbounds %struct.kernfs_node, ptr %parent_kn, i32 0, i32 3
  %86 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %parent.i, align 4
  br label %if.end.i72

if.end.i72:                                       ; preds = %if.else.i, %out_unlock.if.end.i72_crit_edge
  %kn.pn.i = phi ptr [ %87, %if.else.i ], [ %parent_kn, %out_unlock.if.end.i72_crit_edge ]
  %cgrp.0.in.i = getelementptr inbounds %struct.kernfs_node, ptr %kn.pn.i, i32 0, i32 9
  %88 = ptrtoint ptr %cgrp.0.in.i to i32
  call void @__asan_load4_noabort(i32 %88)
  %cgrp.0.i = load ptr, ptr %cgrp.0.in.i, align 8
  call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  call void @kernfs_unbreak_active_protection(ptr noundef %parent_kn) #26
  %flags.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 7
  %89 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %flags.i.i.i, align 4
  %and.i.i.i = and i32 %90, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i73, label %if.end.i72.cleanup_crit_edge

if.end.i72.cleanup_crit_edge:                     ; preds = %if.end.i72
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then.i.i.i73:                                  ; preds = %if.end.i72
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 2
  call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i.i) #26
  br label %cleanup

cleanup:                                          ; preds = %if.then.i.i.i73, %if.end.i72.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -22, %entry.cleanup_crit_edge ], [ -19, %if.end.cleanup_crit_edge ], [ %ret.1, %if.end.i72.cleanup_crit_edge ], [ %ret.1, %if.then.i.i.i73 ]
  ret i32 %retval.0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local ptr @strchr(ptr noundef, i32 noundef) local_unnamed_addr #11

; Function Attrs: null_pointer_is_valid
declare dso_local void @kernfs_get(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @cgroup_apply_control_enable(ptr noundef %cgrp) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %entry.css_next_descendant_pre.exit_crit_edge

entry.css_next_descendant_pre.exit_crit_edge:     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit

land.lhs.true.i:                                  ; preds = %entry
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool2.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true3.i, label %land.lhs.true.i.css_next_descendant_pre.exit_crit_edge

land.lhs.true.i.css_next_descendant_pre.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i
  %call4.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %land.lhs.true3.i.css_next_descendant_pre.exit_crit_edge, label %land.lhs.true6.i

land.lhs.true3.i.css_next_descendant_pre.exit_crit_edge: ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit

land.lhs.true6.i:                                 ; preds = %land.lhs.true3.i
  %.b29.i = load i1, ptr @css_next_descendant_pre.__warned, align 1
  br i1 %.b29.i, label %land.lhs.true6.i.css_next_descendant_pre.exit_crit_edge, label %if.then.i

land.lhs.true6.i.css_next_descendant_pre.exit_crit_edge: ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit

if.then.i:                                        ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_next_descendant_pre.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 4385, ptr noundef nonnull @.str.14) #26
  br label %css_next_descendant_pre.exit

css_next_descendant_pre.exit:                     ; preds = %if.then.i, %land.lhs.true6.i.css_next_descendant_pre.exit_crit_edge, %land.lhs.true3.i.css_next_descendant_pre.exit_crit_edge, %land.lhs.true.i.css_next_descendant_pre.exit_crit_edge, %entry.css_next_descendant_pre.exit_crit_edge
  %tobool.not177 = icmp eq ptr %cgrp, null
  br i1 %tobool.not177, label %css_next_descendant_pre.exit.cleanup116_crit_edge, label %css_next_descendant_pre.exit.do.body_crit_edge

css_next_descendant_pre.exit.do.body_crit_edge:   ; preds = %css_next_descendant_pre.exit
  br label %do.body

css_next_descendant_pre.exit.cleanup116_crit_edge: ; preds = %css_next_descendant_pre.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup116

do.body:                                          ; preds = %for.inc112.do.body_crit_edge, %css_next_descendant_pre.exit.do.body_crit_edge
  %d_css.0178 = phi ptr [ %call114, %for.inc112.do.body_crit_edge ], [ %cgrp, %css_next_descendant_pre.exit.do.body_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool2.not = icmp eq i32 %0, 0
  br i1 %tobool2.not, label %do.body.if.end_crit_edge, label %land.rhs

do.body.if.end_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %do.body
  %call.i141 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i141)
  %cmp.not = icmp eq i32 %call.i141, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 3116, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %do.body.if.end_crit_edge
  %1 = ptrtoint ptr %d_css.0178 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %d_css.0178, align 8
  %flags.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %2, i32 0, i32 7
  %3 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i142 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i142, label %if.end.for.inc112_crit_edge, label %for.cond31.preheader

if.end.for.inc112_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc112

for.cond31.preheader:                             ; preds = %if.end
  %parent.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %2, i32 0, i32 12
  %dom_cgrp.i.i = getelementptr inbounds %struct.cgroup, ptr %2, i32 0, i32 22
  %root.i = getelementptr inbounds %struct.cgroup, ptr %2, i32 0, i32 19
  br label %land.rhs33

land.rhs33:                                       ; preds = %for.inc.land.rhs33_crit_edge, %for.cond31.preheader
  %ssid.0176 = phi i32 [ 0, %for.cond31.preheader ], [ %inc, %for.inc.land.rhs33_crit_edge ]
  %arrayidx = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %ssid.0176
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx, align 4
  %tobool.not.i143 = icmp eq ptr %6, null
  br i1 %tobool.not.i143, label %land.rhs33.cgroup_css.exit_crit_edge, label %if.then.i146

land.rhs33.cgroup_css.exit_crit_edge:             ; preds = %land.rhs33
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

if.then.i146:                                     ; preds = %land.rhs33
  %id.i = getelementptr inbounds %struct.cgroup_subsys, ptr %6, i32 0, i32 19
  %7 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %id.i, align 4
  %arrayidx.i = getelementptr %struct.cgroup, ptr %2, i32 0, i32 18, i32 %8
  %9 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile ptr, ptr %arrayidx.i, align 4
  %call.i.i144 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i144)
  %tobool2.not.i145 = icmp eq i32 %call.i.i144, 0
  br i1 %tobool2.not.i145, label %lor.lhs.false.i, label %if.then.i146.cgroup_css.exit_crit_edge

if.then.i146.cgroup_css.exit_crit_edge:           ; preds = %if.then.i146
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

lor.lhs.false.i:                                  ; preds = %if.then.i146
  %call3.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %land.lhs.true.i147, label %lor.lhs.false.i.cgroup_css.exit_crit_edge

lor.lhs.false.i.cgroup_css.exit_crit_edge:        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

land.lhs.true.i147:                               ; preds = %lor.lhs.false.i
  %call5.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %land.lhs.true.i147.cgroup_css.exit_crit_edge, label %land.lhs.true7.i

land.lhs.true.i147.cgroup_css.exit_crit_edge:     ; preds = %land.lhs.true.i147
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i147
  %.b15.i = load i1, ptr @cgroup_css.__warned, align 1
  br i1 %.b15.i, label %land.lhs.true7.i.cgroup_css.exit_crit_edge, label %if.then9.i

land.lhs.true7.i.cgroup_css.exit_crit_edge:       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

if.then9.i:                                       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_css.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 486, ptr noundef nonnull @.str.22) #26
  br label %cgroup_css.exit

cgroup_css.exit:                                  ; preds = %if.then9.i, %land.lhs.true7.i.cgroup_css.exit_crit_edge, %land.lhs.true.i147.cgroup_css.exit_crit_edge, %lor.lhs.false.i.cgroup_css.exit_crit_edge, %if.then.i146.cgroup_css.exit_crit_edge, %land.rhs33.cgroup_css.exit_crit_edge
  %retval.0.i = phi ptr [ %10, %if.then9.i ], [ %10, %land.lhs.true7.i.cgroup_css.exit_crit_edge ], [ %10, %land.lhs.true.i147.cgroup_css.exit_crit_edge ], [ %10, %lor.lhs.false.i.cgroup_css.exit_crit_edge ], [ %10, %if.then.i146.cgroup_css.exit_crit_edge ], [ %2, %land.rhs33.cgroup_css.exit_crit_edge ]
  %11 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %parent.i.i, align 8
  %tobool.not.i148 = icmp eq ptr %12, null
  br i1 %tobool.not.i148, label %if.end5.i, label %if.then.i149

if.then.i149:                                     ; preds = %cgroup_css.exit
  %subtree_ss_mask.i = getelementptr inbounds %struct.cgroup, ptr %12, i32 0, i32 15
  %13 = ptrtoint ptr %subtree_ss_mask.i to i32
  call void @__asan_load2_noabort(i32 %13)
  %14 = load i16, ptr %subtree_ss_mask.i, align 2
  %15 = ptrtoint ptr %dom_cgrp.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %dom_cgrp.i.i, align 8
  %cmp.i.not.i = icmp eq ptr %16, %2
  br i1 %cmp.i.not.i, label %if.then.i149.cgroup_ss_mask.exit_crit_edge, label %if.then2.i

if.then.i149.cgroup_ss_mask.exit_crit_edge:       ; preds = %if.then.i149
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_ss_mask.exit

if.then2.i:                                       ; preds = %if.then.i149
  call void @__sanitizer_cov_trace_pc() #28
  %17 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %and11.i = and i16 %17, %14
  br label %cgroup_ss_mask.exit

if.end5.i:                                        ; preds = %cgroup_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  %18 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %root.i, align 4
  %subsys_mask.i = getelementptr inbounds %struct.cgroup_root, ptr %19, i32 0, i32 1
  %20 = ptrtoint ptr %subsys_mask.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %subsys_mask.i, align 4
  %conv6.i = trunc i32 %21 to i16
  br label %cgroup_ss_mask.exit

cgroup_ss_mask.exit:                              ; preds = %if.end5.i, %if.then2.i, %if.then.i149.cgroup_ss_mask.exit_crit_edge
  %retval.0.i150 = phi i16 [ %conv6.i, %if.end5.i ], [ %and11.i, %if.then2.i ], [ %14, %if.then.i149.cgroup_ss_mask.exit_crit_edge ]
  %conv = zext i16 %retval.0.i150 to i32
  %id = getelementptr inbounds %struct.cgroup_subsys, ptr %6, i32 0, i32 19
  %22 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %id, align 4
  %shl = shl nuw i32 1, %23
  %and = and i32 %shl, %conv
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool39.not = icmp eq i32 %and, 0
  br i1 %tobool39.not, label %cgroup_ss_mask.exit.for.inc_crit_edge, label %if.end41

cgroup_ss_mask.exit.for.inc_crit_edge:            ; preds = %cgroup_ss_mask.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

if.end41:                                         ; preds = %cgroup_ss_mask.exit
  %tobool42.not = icmp eq ptr %retval.0.i, null
  br i1 %tobool42.not, label %if.then43, label %if.end41.if.end49_crit_edge

if.end41.if.end49_crit_edge:                      ; preds = %if.end41
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end49

if.then43:                                        ; preds = %if.end41
  br i1 %tobool.not.i143, label %if.then43.cgroup_css.exit.i_crit_edge, label %if.then.i.i

if.then43.cgroup_css.exit.i_crit_edge:            ; preds = %if.then43
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i

if.then.i.i:                                      ; preds = %if.then43
  %arrayidx.i.i = getelementptr %struct.cgroup, ptr %12, i32 0, i32 18, i32 %23
  %24 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile ptr, ptr %arrayidx.i.i, align 4
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool2.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i, label %if.then.i.i.cgroup_css.exit.i_crit_edge

if.then.i.i.cgroup_css.exit.i_crit_edge:          ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i

lor.lhs.false.i.i:                                ; preds = %if.then.i.i
  %call3.i.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i.i)
  %tobool4.not.i.i = icmp eq i32 %call3.i.i, 0
  br i1 %tobool4.not.i.i, label %land.lhs.true.i.i, label %lor.lhs.false.i.i.cgroup_css.exit.i_crit_edge

lor.lhs.false.i.i.cgroup_css.exit.i_crit_edge:    ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i

land.lhs.true.i.i:                                ; preds = %lor.lhs.false.i.i
  %call5.i.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i.i)
  %tobool6.not.i.i = icmp eq i32 %call5.i.i, 0
  br i1 %tobool6.not.i.i, label %land.lhs.true.i.i.cgroup_css.exit.i_crit_edge, label %land.lhs.true7.i.i

land.lhs.true.i.i.cgroup_css.exit.i_crit_edge:    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i

land.lhs.true7.i.i:                               ; preds = %land.lhs.true.i.i
  %.b15.i.i = load i1, ptr @cgroup_css.__warned, align 1
  br i1 %.b15.i.i, label %land.lhs.true7.i.i.cgroup_css.exit.i_crit_edge, label %if.then9.i.i

land.lhs.true7.i.i.cgroup_css.exit.i_crit_edge:   ; preds = %land.lhs.true7.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i

if.then9.i.i:                                     ; preds = %land.lhs.true7.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_css.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 486, ptr noundef nonnull @.str.22) #26
  br label %cgroup_css.exit.i

cgroup_css.exit.i:                                ; preds = %if.then9.i.i, %land.lhs.true7.i.i.cgroup_css.exit.i_crit_edge, %land.lhs.true.i.i.cgroup_css.exit.i_crit_edge, %lor.lhs.false.i.i.cgroup_css.exit.i_crit_edge, %if.then.i.i.cgroup_css.exit.i_crit_edge, %if.then43.cgroup_css.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %25, %if.then9.i.i ], [ %25, %land.lhs.true7.i.i.cgroup_css.exit.i_crit_edge ], [ %25, %land.lhs.true.i.i.cgroup_css.exit.i_crit_edge ], [ %25, %lor.lhs.false.i.i.cgroup_css.exit.i_crit_edge ], [ %25, %if.then.i.i.cgroup_css.exit.i_crit_edge ], [ %12, %if.then43.cgroup_css.exit.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %26 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.not.i152 = icmp eq i32 %26, 0
  br i1 %tobool.not.i152, label %cgroup_css.exit.i.if.end.i_crit_edge, label %land.rhs.i

cgroup_css.exit.i.if.end.i_crit_edge:             ; preds = %cgroup_css.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

land.rhs.i:                                       ; preds = %cgroup_css.exit.i
  %call.i.i153 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i153)
  %cmp.not.i = icmp eq i32 %call.i.i153, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !637

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 5302, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %cgroup_css.exit.i.if.end.i_crit_edge
  %27 = ptrtoint ptr %6 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %6, align 4
  %call26.i = tail call ptr %28(ptr noundef %retval.0.i.i) #26
  %tobool27.not.i = icmp eq ptr %call26.i, null
  br i1 %tobool27.not.i, label %if.end.i.if.then46_crit_edge, label %if.end30.i

if.end.i.if.then46_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then46

if.end30.i:                                       ; preds = %if.end.i
  %cmp.i.i = icmp ugt ptr %call26.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.end30.i.css_create.exit_crit_edge, label %if.end33.i

if.end30.i.css_create.exit_crit_edge:             ; preds = %if.end30.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_create.exit

if.end33.i:                                       ; preds = %if.end30.i
  tail call fastcc void @init_and_link_css(ptr noundef nonnull %call26.i, ptr noundef %6, ptr noundef %2) #26
  %refcnt.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call26.i, i32 0, i32 2
  %call34.i = tail call i32 @percpu_ref_init(ptr noundef %refcnt.i, ptr noundef nonnull @css_release, i32 noundef 0, i32 noundef 3264) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call34.i)
  %tobool35.not.i = icmp eq i32 %call34.i, 0
  br i1 %tobool35.not.i, label %if.end37.i, label %if.end33.i.err_free_css.i_crit_edge

if.end33.i.err_free_css.i_crit_edge:              ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %err_free_css.i

if.end37.i:                                       ; preds = %if.end33.i
  %css_idr.i = getelementptr inbounds %struct.cgroup_subsys, ptr %6, i32 0, i32 23
  tail call void @idr_preload(i32 noundef 3264) #26
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @cgroup_idr_lock) #26
  %call.i97.i = tail call i32 @idr_alloc(ptr noundef %css_idr.i, ptr noundef null, i32 noundef 2, i32 noundef 0, i32 noundef 2240) #26
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @cgroup_idr_lock) #26
  %29 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i.i to ptr
  %cpu.i.i.i = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 3
  %31 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %cpu.i.i.i, align 4
  %arrayidx.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %32
  %33 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %arrayidx.i.i.i, align 4
  %add.i.i.i = add i32 %34, ptrtoint (ptr @radix_tree_preloads to i32)
  %35 = inttoptr i32 %add.i.i.i to ptr
  tail call fastcc void @local_lock_release(ptr noundef %35) #26
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !671
  %36 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i.i = and i32 %36, -16384
  %37 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %37, i32 0, i32 1
  %38 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %sub.i.i.i.i = add i32 %39, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i97.i)
  %cmp39.i = icmp slt i32 %call.i97.i, 0
  br i1 %cmp39.i, label %if.end37.i.err_free_css.i_crit_edge, label %if.end41.i

if.end37.i.err_free_css.i_crit_edge:              ; preds = %if.end37.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %err_free_css.i

if.end41.i:                                       ; preds = %if.end37.i
  %id.i154 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call26.i, i32 0, i32 6
  %40 = ptrtoint ptr %id.i154 to i32
  call void @__asan_store4_noabort(i32 %40)
  store i32 %call.i97.i, ptr %id.i154, align 8
  %sibling.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call26.i, i32 0, i32 3
  %children.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %retval.0.i.i, i32 0, i32 4
  %prev.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %retval.0.i.i, i32 0, i32 4, i32 1
  %41 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %prev.i.i, align 4
  %call.i.i98.i = tail call zeroext i1 @__list_add_valid(ptr noundef %sibling.i, ptr noundef %42, ptr noundef %children.i) #26
  br i1 %call.i.i98.i, label %if.end.i.i.i, label %if.end41.i.list_add_tail_rcu.exit.i_crit_edge

if.end41.i.list_add_tail_rcu.exit.i_crit_edge:    ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_add_tail_rcu.exit.i

if.end.i.i.i:                                     ; preds = %if.end41.i
  call void @__sanitizer_cov_trace_pc() #28
  %43 = ptrtoint ptr %sibling.i to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %children.i, ptr %sibling.i, align 4
  %prev2.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call26.i, i32 0, i32 3, i32 1
  %44 = ptrtoint ptr %prev2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %44)
  store ptr %42, ptr %prev2.i.i.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !652
  %45 = ptrtoint ptr %42 to i32
  call void @__asan_store4_noabort(i32 %45)
  store volatile ptr %sibling.i, ptr %42, align 4
  %46 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %sibling.i, ptr %prev.i.i, align 4
  br label %list_add_tail_rcu.exit.i

list_add_tail_rcu.exit.i:                         ; preds = %if.end.i.i.i, %if.end41.i.list_add_tail_rcu.exit.i_crit_edge
  %47 = ptrtoint ptr %id.i154 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load i32, ptr %id.i154, align 8
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @cgroup_idr_lock) #26
  %call.i99.i = tail call ptr @idr_replace(ptr noundef %css_idr.i, ptr noundef nonnull %call26.i, i32 noundef %48) #26
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @cgroup_idr_lock) #26
  %call45.i = tail call fastcc i32 @online_css(ptr noundef nonnull %call26.i) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call45.i)
  %tobool46.not.i = icmp eq i32 %call45.i, 0
  br i1 %tobool46.not.i, label %list_add_tail_rcu.exit.i.css_create.exit_crit_edge, label %err_list_del.i

list_add_tail_rcu.exit.i.css_create.exit_crit_edge: ; preds = %list_add_tail_rcu.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_create.exit

err_list_del.i:                                   ; preds = %list_add_tail_rcu.exit.i
  %call.i.i100.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %sibling.i) #26
  br i1 %call.i.i100.i, label %if.end.i.i101.i, label %err_list_del.i.list_del_rcu.exit.i_crit_edge

err_list_del.i.list_del_rcu.exit.i_crit_edge:     ; preds = %err_list_del.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del_rcu.exit.i

if.end.i.i101.i:                                  ; preds = %err_list_del.i
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call26.i, i32 0, i32 3, i32 1
  %49 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %prev.i.i.i, align 4
  %51 = ptrtoint ptr %sibling.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %sibling.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %52, i32 0, i32 1
  %53 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr %50, ptr %prev1.i.i.i.i, align 4
  %54 = ptrtoint ptr %50 to i32
  call void @__asan_store4_noabort(i32 %54)
  store volatile ptr %52, ptr %50, align 4
  br label %list_del_rcu.exit.i

list_del_rcu.exit.i:                              ; preds = %if.end.i.i101.i, %err_list_del.i.list_del_rcu.exit.i_crit_edge
  %prev.i102.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call26.i, i32 0, i32 3, i32 1
  %55 = ptrtoint ptr %prev.i102.i to i32
  call void @__asan_store4_noabort(i32 %55)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i102.i, align 4
  br label %err_free_css.i

err_free_css.i:                                   ; preds = %list_del_rcu.exit.i, %if.end37.i.err_free_css.i_crit_edge, %if.end33.i.err_free_css.i_crit_edge
  %err.0.i = phi i32 [ %call34.i, %if.end33.i.err_free_css.i_crit_edge ], [ %call.i97.i, %if.end37.i.err_free_css.i_crit_edge ], [ %call45.i, %list_del_rcu.exit.i ]
  %rstat_css_node.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call26.i, i32 0, i32 5
  %call.i.i103.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %rstat_css_node.i) #26
  br i1 %call.i.i103.i, label %if.end.i.i106.i, label %err_free_css.i.list_del_rcu.exit108.i_crit_edge

err_free_css.i.list_del_rcu.exit108.i_crit_edge:  ; preds = %err_free_css.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del_rcu.exit108.i

if.end.i.i106.i:                                  ; preds = %err_free_css.i
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i104.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call26.i, i32 0, i32 5, i32 1
  %56 = ptrtoint ptr %prev.i.i104.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %prev.i.i104.i, align 4
  %58 = ptrtoint ptr %rstat_css_node.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load ptr, ptr %rstat_css_node.i, align 4
  %prev1.i.i.i105.i = getelementptr inbounds %struct.list_head, ptr %59, i32 0, i32 1
  %60 = ptrtoint ptr %prev1.i.i.i105.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store ptr %57, ptr %prev1.i.i.i105.i, align 4
  %61 = ptrtoint ptr %57 to i32
  call void @__asan_store4_noabort(i32 %61)
  store volatile ptr %59, ptr %57, align 4
  br label %list_del_rcu.exit108.i

list_del_rcu.exit108.i:                           ; preds = %if.end.i.i106.i, %err_free_css.i.list_del_rcu.exit108.i_crit_edge
  %prev.i107.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call26.i, i32 0, i32 5, i32 1
  %62 = ptrtoint ptr %prev.i107.i to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i107.i, align 4
  %destroy_rwork.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call26.i, i32 0, i32 11
  tail call void @__init_work(ptr noundef %destroy_rwork.i, i32 noundef 0) #26
  %63 = ptrtoint ptr %destroy_rwork.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store i32 -64, ptr %destroy_rwork.i, align 8
  %lockdep_map.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call26.i, i32 0, i32 11, i32 0, i32 3
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map.i, ptr noundef nonnull @.str.79, ptr noundef nonnull @css_create.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #26
  %entry57.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call26.i, i32 0, i32 11, i32 0, i32 1
  %64 = ptrtoint ptr %entry57.i to i32
  call void @__asan_store4_noabort(i32 %64)
  store volatile ptr %entry57.i, ptr %entry57.i, align 4
  %prev.i109.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call26.i, i32 0, i32 11, i32 0, i32 1, i32 1
  %65 = ptrtoint ptr %prev.i109.i to i32
  call void @__asan_store4_noabort(i32 %65)
  store ptr %entry57.i, ptr %prev.i109.i, align 4
  %func.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call26.i, i32 0, i32 11, i32 0, i32 2
  %66 = ptrtoint ptr %func.i to i32
  call void @__asan_store4_noabort(i32 %66)
  store ptr @css_free_rwork_fn, ptr %func.i, align 4
  %67 = load ptr, ptr @cgroup_destroy_wq, align 4
  %call63.i = tail call zeroext i1 @queue_rcu_work(ptr noundef %67, ptr noundef %destroy_rwork.i) #26
  %68 = inttoptr i32 %err.0.i to ptr
  br label %css_create.exit

css_create.exit:                                  ; preds = %list_del_rcu.exit108.i, %list_add_tail_rcu.exit.i.css_create.exit_crit_edge, %if.end30.i.css_create.exit_crit_edge
  %retval.0.i155 = phi ptr [ %68, %list_del_rcu.exit108.i ], [ %call26.i, %if.end30.i.css_create.exit_crit_edge ], [ %call26.i, %list_add_tail_rcu.exit.i.css_create.exit_crit_edge ]
  %cmp.i = icmp ugt ptr %retval.0.i155, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %css_create.exit.if.then46_crit_edge, label %css_create.exit.if.end49_crit_edge

css_create.exit.if.end49_crit_edge:               ; preds = %css_create.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end49

css_create.exit.if.then46_crit_edge:              ; preds = %css_create.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then46

if.then46:                                        ; preds = %css_create.exit.if.then46_crit_edge, %if.end.i.if.then46_crit_edge
  %retval.0.i155169 = phi ptr [ %retval.0.i155, %css_create.exit.if.then46_crit_edge ], [ inttoptr (i32 -12 to ptr), %if.end.i.if.then46_crit_edge ]
  %69 = ptrtoint ptr %retval.0.i155169 to i32
  br label %cleanup116

if.end49:                                         ; preds = %css_create.exit.if.end49_crit_edge, %if.end41.if.end49_crit_edge
  %css.0 = phi ptr [ %retval.0.i, %if.end41.if.end49_crit_edge ], [ %retval.0.i155, %css_create.exit.if.end49_crit_edge ]
  %refcnt = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css.0, i32 0, i32 2
  %70 = ptrtoint ptr %refcnt to i32
  call void @__asan_load4_noabort(i32 %70)
  %71 = load i32, ptr %refcnt, align 4
  %and.i156 = and i32 %71, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i156)
  %tobool.i.not = icmp eq i32 %and.i156, 0
  br i1 %tobool.i.not, label %if.end49.if.end96_crit_edge, label %land.rhs58

if.end49.if.end96_crit_edge:                      ; preds = %if.end49
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end96

land.rhs58:                                       ; preds = %if.end49
  %.b140 = load i1, ptr @cgroup_apply_control_enable.__already_done, align 1
  br i1 %.b140, label %land.rhs58.if.end96_crit_edge, label %if.then69, !prof !636

land.rhs58.if.end96_crit_edge:                    ; preds = %land.rhs58
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end96

if.then69:                                        ; preds = %land.rhs58
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_apply_control_enable.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 3129, i32 noundef 9, ptr noundef null) #26
  br label %if.end96

if.end96:                                         ; preds = %if.then69, %land.rhs58.if.end96_crit_edge, %if.end49.if.end96_crit_edge
  %ss1.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css.0, i32 0, i32 1
  %72 = ptrtoint ptr %ss1.i to i32
  call void @__asan_load4_noabort(i32 %72)
  %73 = load ptr, ptr %ss1.i, align 4
  %74 = ptrtoint ptr %css.0 to i32
  call void @__asan_load4_noabort(i32 %74)
  %75 = load ptr, ptr %css.0, align 8
  %parent.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %75, i32 0, i32 12
  %76 = ptrtoint ptr %parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %76)
  %77 = load ptr, ptr %parent.i.i.i, align 8
  %root.i.i = getelementptr inbounds %struct.cgroup, ptr %75, i32 0, i32 19
  %78 = ptrtoint ptr %root.i.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %root.i.i, align 4
  %subsys_mask.i.i = getelementptr inbounds %struct.cgroup_root, ptr %79, i32 0, i32 1
  %80 = ptrtoint ptr %subsys_mask.i.i to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load i32, ptr %subsys_mask.i.i, align 4
  %tobool.not.i.i157 = icmp eq ptr %77, null
  br i1 %tobool.not.i.i157, label %if.end6.i.i, label %if.then.i.i158

if.then.i.i158:                                   ; preds = %if.end96
  %subtree_control.i.i = getelementptr inbounds %struct.cgroup, ptr %77, i32 0, i32 14
  %82 = ptrtoint ptr %subtree_control.i.i to i32
  call void @__asan_load2_noabort(i32 %82)
  %83 = load i16, ptr %subtree_control.i.i, align 4
  %dom_cgrp.i.i.i = getelementptr inbounds %struct.cgroup, ptr %75, i32 0, i32 22
  %84 = ptrtoint ptr %dom_cgrp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %dom_cgrp.i.i.i, align 8
  %cmp.i.not.i.i = icmp eq ptr %85, %75
  br i1 %cmp.i.not.i.i, label %if.then.i.i158.cgroup_control.exit.i_crit_edge, label %if.then2.i.i

if.then.i.i158.cgroup_control.exit.i_crit_edge:   ; preds = %if.then.i.i158
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_control.exit.i

if.then2.i.i:                                     ; preds = %if.then.i.i158
  call void @__sanitizer_cov_trace_pc() #28
  %86 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %and23.i.i = and i16 %86, %83
  br label %cgroup_control.exit.i

if.end6.i.i:                                      ; preds = %if.end96
  %cmp.i24.i.i = icmp eq ptr %79, @cgrp_dfl_root
  br i1 %cmp.i24.i.i, label %if.then8.i.i, label %if.end6.i.i.cgroup_control.exit.thread.i_crit_edge

if.end6.i.i.cgroup_control.exit.thread.i_crit_edge: ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_control.exit.thread.i

if.then8.i.i:                                     ; preds = %if.end6.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %87 = load i16, ptr @cgrp_dfl_inhibit_ss_mask, align 2
  %88 = load i16, ptr @cgrp_dfl_implicit_ss_mask, align 2
  %or22.i.i = or i16 %88, %87
  %or.i.i = zext i16 %or22.i.i to i32
  %neg.i.i = xor i32 %or.i.i, -1
  %and12.i.i = and i32 %81, %neg.i.i
  br label %cgroup_control.exit.thread.i

cgroup_control.exit.i:                            ; preds = %if.then2.i.i, %if.then.i.i158.cgroup_control.exit.i_crit_edge
  %retval.0.i.i159 = phi i16 [ %and23.i.i, %if.then2.i.i ], [ %83, %if.then.i.i158.cgroup_control.exit.i_crit_edge ]
  %conv.i = zext i16 %retval.0.i.i159 to i32
  %id.i160 = getelementptr inbounds %struct.cgroup_subsys, ptr %73, i32 0, i32 19
  %89 = ptrtoint ptr %id.i160 to i32
  call void @__asan_load4_noabort(i32 %89)
  %90 = load i32, ptr %id.i160, align 4
  %shl.i = shl nuw i32 1, %90
  %and.i161 = and i32 %shl.i, %conv.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i161)
  %tobool.not.i162 = icmp eq i32 %and.i161, 0
  br i1 %tobool.not.i162, label %if.then.i23.critedge.i, label %cgroup_control.exit.i.if.then105_crit_edge

cgroup_control.exit.i.if.then105_crit_edge:       ; preds = %cgroup_control.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then105

cgroup_control.exit.thread.i:                     ; preds = %if.then8.i.i, %if.end6.i.i.cgroup_control.exit.thread.i_crit_edge
  %root_ss_mask.0.in.i.i = phi i32 [ %and12.i.i, %if.then8.i.i ], [ %81, %if.end6.i.i.cgroup_control.exit.thread.i_crit_edge ]
  %conv30.i = and i32 %root_ss_mask.0.in.i.i, 65535
  %id31.i = getelementptr inbounds %struct.cgroup_subsys, ptr %73, i32 0, i32 19
  %91 = ptrtoint ptr %id31.i to i32
  call void @__asan_load4_noabort(i32 %91)
  %92 = load i32, ptr %id31.i, align 4
  %shl32.i = shl nuw i32 1, %92
  %and33.i = and i32 %conv30.i, %shl32.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and33.i)
  %tobool.not34.i = icmp eq i32 %and33.i, 0
  br i1 %tobool.not34.i, label %if.end5.i.i, label %cgroup_control.exit.thread.i.if.then105_crit_edge

cgroup_control.exit.thread.i.if.then105_crit_edge: ; preds = %cgroup_control.exit.thread.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then105

if.then.i23.critedge.i:                           ; preds = %cgroup_control.exit.i
  %subtree_ss_mask.i.i = getelementptr inbounds %struct.cgroup, ptr %77, i32 0, i32 15
  %93 = ptrtoint ptr %subtree_ss_mask.i.i to i32
  call void @__asan_load2_noabort(i32 %93)
  %94 = load i16, ptr %subtree_ss_mask.i.i, align 2
  br i1 %cmp.i.not.i.i, label %if.then.i23.critedge.i.cgroup_ss_mask.exit.i_crit_edge, label %if.then2.i24.i

if.then.i23.critedge.i.cgroup_ss_mask.exit.i_crit_edge: ; preds = %if.then.i23.critedge.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_ss_mask.exit.i

if.then2.i24.i:                                   ; preds = %if.then.i23.critedge.i
  call void @__sanitizer_cov_trace_pc() #28
  %95 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %and11.i.i = and i16 %95, %94
  br label %cgroup_ss_mask.exit.i

if.end5.i.i:                                      ; preds = %cgroup_control.exit.thread.i
  call void @__sanitizer_cov_trace_pc() #28
  %conv6.i.i = trunc i32 %81 to i16
  br label %cgroup_ss_mask.exit.i

cgroup_ss_mask.exit.i:                            ; preds = %if.end5.i.i, %if.then2.i24.i, %if.then.i23.critedge.i.cgroup_ss_mask.exit.i_crit_edge
  %shl3537.i = phi i32 [ %shl32.i, %if.end5.i.i ], [ %shl.i, %if.then2.i24.i ], [ %shl.i, %if.then.i23.critedge.i.cgroup_ss_mask.exit.i_crit_edge ]
  %retval.0.i27.i = phi i16 [ %conv6.i.i, %if.end5.i.i ], [ %and11.i.i, %if.then2.i24.i ], [ %94, %if.then.i23.critedge.i.cgroup_ss_mask.exit.i_crit_edge ]
  %conv3.i = zext i16 %retval.0.i27.i to i32
  %and6.i = and i32 %shl3537.i, %conv3.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i)
  %tobool7.not.i = icmp ne i32 %and6.i, 0
  %cmp.i.i163 = icmp eq ptr %79, @cgrp_dfl_root
  %or.cond.i = select i1 %tobool7.not.i, i1 %cmp.i.i163, i1 false
  br i1 %or.cond.i, label %css_visible.exit, label %cgroup_ss_mask.exit.i.for.inc_crit_edge

cgroup_ss_mask.exit.i.for.inc_crit_edge:          ; preds = %cgroup_ss_mask.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

css_visible.exit:                                 ; preds = %cgroup_ss_mask.exit.i
  %implicit_on_dfl.i = getelementptr inbounds %struct.cgroup_subsys, ptr %73, i32 0, i32 18
  %96 = ptrtoint ptr %implicit_on_dfl.i to i32
  call void @__asan_load1_noabort(i32 %96)
  %bf.load.i = load i8, ptr %implicit_on_dfl.i, align 4
  %97 = and i8 %bf.load.i, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %97)
  %bf.cast.i.not = icmp eq i8 %97, 0
  br i1 %bf.cast.i.not, label %css_visible.exit.for.inc_crit_edge, label %css_visible.exit.if.then105_crit_edge

css_visible.exit.if.then105_crit_edge:            ; preds = %css_visible.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then105

css_visible.exit.for.inc_crit_edge:               ; preds = %css_visible.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

if.then105:                                       ; preds = %css_visible.exit.if.then105_crit_edge, %cgroup_control.exit.thread.i.if.then105_crit_edge, %cgroup_control.exit.i.if.then105_crit_edge
  %call106 = tail call fastcc i32 @css_populate_dir(ptr noundef %css.0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call106)
  %tobool107.not = icmp eq i32 %call106, 0
  br i1 %tobool107.not, label %if.then105.for.inc_crit_edge, label %if.then105.cleanup116_crit_edge

if.then105.cleanup116_crit_edge:                  ; preds = %if.then105
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup116

if.then105.for.inc_crit_edge:                     ; preds = %if.then105
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

for.inc:                                          ; preds = %if.then105.for.inc_crit_edge, %css_visible.exit.for.inc_crit_edge, %cgroup_ss_mask.exit.i.for.inc_crit_edge, %cgroup_ss_mask.exit.for.inc_crit_edge
  %inc = add nuw nsw i32 %ssid.0176, 1
  %exitcond.not = icmp eq i32 %inc, 14
  br i1 %exitcond.not, label %for.inc.for.inc112_crit_edge, label %for.inc.land.rhs33_crit_edge

for.inc.land.rhs33_crit_edge:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs33

for.inc.for.inc112_crit_edge:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc112

for.inc112:                                       ; preds = %for.inc.for.inc112_crit_edge, %if.end.for.inc112_crit_edge
  %call114 = tail call ptr @css_next_descendant_pre(ptr noundef nonnull %d_css.0178, ptr noundef nonnull %cgrp)
  %tobool.not = icmp eq ptr %call114, null
  br i1 %tobool.not, label %for.inc112.cleanup116_crit_edge, label %for.inc112.do.body_crit_edge

for.inc112.do.body_crit_edge:                     ; preds = %for.inc112
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body

for.inc112.cleanup116_crit_edge:                  ; preds = %for.inc112
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup116

cleanup116:                                       ; preds = %for.inc112.cleanup116_crit_edge, %if.then105.cleanup116_crit_edge, %if.then46, %css_next_descendant_pre.exit.cleanup116_crit_edge
  %retval.4 = phi i32 [ %69, %if.then46 ], [ 0, %css_next_descendant_pre.exit.cleanup116_crit_edge ], [ %call106, %if.then105.cleanup116_crit_edge ], [ 0, %for.inc112.cleanup116_crit_edge ]
  ret i32 %retval.4
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_cgroup_mkdir(ptr noundef %cgrp) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_mkdir, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_cgroup_mkdir, %do.body)) #26
          to label %if.end48 [label %do.body], !srcloc !657

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !636

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.71, i32 noundef 108, i32 noundef 9, ptr noundef null) #26
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i4 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i4
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !672
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_mkdir, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %cgrp, ptr noundef nonnull @trace_cgroup_path) #26
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !673
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !673
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i2.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i2.c to ptr
  %preempt_count.i.i3.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i3.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i3.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i3.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i5 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i5 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i6 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i6, label %if.end48.cpu_online.exit14_crit_edge, label %land.rhs.i.i.i.i8

if.end48.cpu_online.exit14_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit14

land.rhs.i.i.i.i8:                                ; preds = %if.end48
  %.b37.i.i.i.i7 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i7, label %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, label %if.then.i.i.i.i9, !prof !636

land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge:    ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit14

if.then.i.i.i.i9:                                 ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.71, i32 noundef 108, i32 noundef 9, ptr noundef null) #26
  br label %cpu_online.exit14

cpu_online.exit14:                                ; preds = %if.then.i.i.i.i9, %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, %if.end48.cpu_online.exit14_crit_edge
  %div3.i.i.i10 = lshr i32 %27, 5
  %arrayidx.i.i.i11 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i10
  %29 = ptrtoint ptr %arrayidx.i.i.i11 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i11, align 4
  %and.i.i.i12 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i12
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i13.not = icmp eq i32 %32, 0
  br i1 %tobool.i13.not, label %cpu_online.exit14.if.end69_crit_edge, label %if.then52

cpu_online.exit14.if.end69_crit_edge:             ; preds = %cpu_online.exit14
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit14
  %33 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !660
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_mkdir, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b1 = load i1, ptr @trace_cgroup_mkdir.__warned, align 1
  br i1 %.b1, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @trace_cgroup_mkdir.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.70, i32 noundef 83, ptr noundef nonnull @.str.22) #26
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !661
  %38 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i15 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i15 to ptr
  %preempt_count.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i16, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i16, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit14.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @cgroup_destroy_locked(ptr noundef %cgrp) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %parent.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 12
  %0 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 5650, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %nr_populated_csets.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 7
  %3 = ptrtoint ptr %nr_populated_csets.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %nr_populated_csets.i, align 8
  %nr_populated_domain_children.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 8
  %5 = ptrtoint ptr %nr_populated_domain_children.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %nr_populated_domain_children.i, align 4
  %add.i = add i32 %6, %4
  %nr_populated_threaded_children.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 9
  %7 = ptrtoint ptr %nr_populated_threaded_children.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %nr_populated_threaded_children.i, align 8
  %add1.i = sub i32 0, %8
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %add1.i)
  %tobool.i.not = icmp eq i32 %add.i, %add1.i
  br i1 %tobool.i.not, label %if.end27, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end27:                                         ; preds = %if.end
  %call28 = tail call zeroext i1 @css_has_online_children(ptr noundef %cgrp)
  br i1 %call28, label %if.end27.cleanup_crit_edge, label %if.end30

if.end27.cleanup_crit_edge:                       ; preds = %if.end27
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end30:                                         ; preds = %if.end27
  %flags = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 7
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flags, align 4
  %and = and i32 %10, -3
  store i32 %and, ptr %flags, align 4
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %cset_links = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 20
  %11 = ptrtoint ptr %cset_links to i32
  call void @__asan_load4_noabort(i32 %11)
  %.pn122 = load ptr, ptr %cset_links, align 4
  %cmp34.not123 = icmp eq ptr %.pn122, %cset_links
  br i1 %cmp34.not123, label %if.end30.for.end_crit_edge, label %if.end30.for.body_crit_edge

if.end30.for.body_crit_edge:                      ; preds = %if.end30
  br label %for.body

if.end30.for.end_crit_edge:                       ; preds = %if.end30
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end30.for.body_crit_edge
  %.pn124 = phi ptr [ %.pn, %for.body.for.body_crit_edge ], [ %.pn122, %if.end30.for.body_crit_edge ]
  %cset = getelementptr i8, ptr %.pn124, i32 -4
  %12 = ptrtoint ptr %cset to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %cset, align 4
  %dead = getelementptr inbounds %struct.css_set, ptr %13, i32 0, i32 19
  %14 = ptrtoint ptr %dead to i32
  call void @__asan_store1_noabort(i32 %14)
  store i8 1, ptr %dead, align 4
  %15 = ptrtoint ptr %.pn124 to i32
  call void @__asan_load4_noabort(i32 %15)
  %.pn = load ptr, ptr %.pn124, align 4
  %cmp34.not = icmp eq ptr %.pn, %cset_links
  br i1 %cmp34.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end30.for.end_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  br label %for.body44

for.body44:                                       ; preds = %for.inc66.for.body44_crit_edge, %for.end
  %ssid.0125 = phi i32 [ 0, %for.end ], [ %inc, %for.inc66.for.body44_crit_edge ]
  %arrayidx = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 18, i32 %ssid.0125
  %16 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load volatile ptr, ptr %arrayidx, align 4
  %call.i119 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i119)
  %tobool51.not = icmp eq i32 %call.i119, 0
  br i1 %tobool51.not, label %lor.lhs.false, label %for.body44.do.end61_crit_edge

for.body44.do.end61_crit_edge:                    ; preds = %for.body44
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end61

lor.lhs.false:                                    ; preds = %for.body44
  %call52 = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call52)
  %tobool53.not = icmp eq i32 %call52, 0
  br i1 %tobool53.not, label %land.lhs.true, label %lor.lhs.false.do.end61_crit_edge

lor.lhs.false.do.end61_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end61

land.lhs.true:                                    ; preds = %lor.lhs.false
  %call54 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call54)
  %tobool55.not = icmp eq i32 %call54, 0
  br i1 %tobool55.not, label %land.lhs.true.do.end61_crit_edge, label %land.lhs.true56

land.lhs.true.do.end61_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end61

land.lhs.true56:                                  ; preds = %land.lhs.true
  %.b118 = load i1, ptr @cgroup_destroy_locked.__warned, align 1
  br i1 %.b118, label %land.lhs.true56.do.end61_crit_edge, label %if.then58

land.lhs.true56.do.end61_crit_edge:               ; preds = %land.lhs.true56
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end61

if.then58:                                        ; preds = %land.lhs.true56
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_destroy_locked.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 5681, ptr noundef nonnull @.str.22) #26
  br label %do.end61

do.end61:                                         ; preds = %if.then58, %land.lhs.true56.do.end61_crit_edge, %land.lhs.true.do.end61_crit_edge, %lor.lhs.false.do.end61_crit_edge, %for.body44.do.end61_crit_edge
  %tobool63.not = icmp eq ptr %17, null
  br i1 %tobool63.not, label %do.end61.for.inc66_crit_edge, label %if.else

do.end61.for.inc66_crit_edge:                     ; preds = %do.end61
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc66

if.else:                                          ; preds = %do.end61
  call void @__sanitizer_cov_trace_pc() #28
  tail call fastcc void @kill_css(ptr noundef nonnull %17)
  br label %for.inc66

for.inc66:                                        ; preds = %if.else, %do.end61.for.inc66_crit_edge
  %inc = add nuw nsw i32 %ssid.0125, 1
  %exitcond.not = icmp eq i32 %inc, 14
  br i1 %exitcond.not, label %for.end67, label %for.inc66.for.body44_crit_edge

for.inc66.for.body44_crit_edge:                   ; preds = %for.inc66
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body44

for.end67:                                        ; preds = %for.inc66
  %18 = ptrtoint ptr %cgrp to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %cgrp, align 8
  %20 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags, align 4
  %and.i = and i32 %21, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %for.end67.css_clear_dir.exit_crit_edge, label %if.end.i

for.end67.css_clear_dir.exit_crit_edge:           ; preds = %for.end67
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_clear_dir.exit

if.end.i:                                         ; preds = %for.end67
  %and2.i = and i32 %21, -9
  %22 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %22)
  store i32 %and2.i, ptr %flags, align 4
  %ss.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 1
  %23 = ptrtoint ptr %ss.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %ss.i, align 4
  %tobool3.not.i = icmp eq ptr %24, null
  br i1 %tobool3.not.i, label %if.then4.i, label %if.else8.i

if.then4.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  %root.i.i = getelementptr inbounds %struct.cgroup, ptr %19, i32 0, i32 19
  %25 = ptrtoint ptr %root.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %root.i.i, align 4
  %cmp.i.i = icmp eq ptr %26, @cgrp_dfl_root
  %cgroup_base_files.cgroup1_base_files.i = select i1 %cmp.i.i, ptr @cgroup_base_files, ptr @cgroup1_base_files
  %call7.i = tail call fastcc i32 @cgroup_addrm_files(ptr noundef %cgrp, ptr noundef %19, ptr noundef nonnull %cgroup_base_files.cgroup1_base_files.i, i1 noundef zeroext false) #26
  br label %css_clear_dir.exit

if.else8.i:                                       ; preds = %if.end.i
  %cfts10.i = getelementptr inbounds %struct.cgroup_subsys, ptr %24, i32 0, i32 24
  %27 = ptrtoint ptr %cfts10.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %.pn33.i = load ptr, ptr %cfts10.i, align 4
  %cmp.not35.i = icmp eq ptr %.pn33.i, %cfts10.i
  br i1 %cmp.not35.i, label %if.else8.i.css_clear_dir.exit_crit_edge, label %if.else8.i.for.body.i_crit_edge

if.else8.i.for.body.i_crit_edge:                  ; preds = %if.else8.i
  br label %for.body.i

if.else8.i.css_clear_dir.exit_crit_edge:          ; preds = %if.else8.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_clear_dir.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.else8.i.for.body.i_crit_edge
  %.pn36.i = phi ptr [ %.pn.i, %for.body.i.for.body.i_crit_edge ], [ %.pn33.i, %if.else8.i.for.body.i_crit_edge ]
  %cfts.1.i = getelementptr i8, ptr %.pn36.i, i32 -84
  %call13.i = tail call fastcc i32 @cgroup_addrm_files(ptr noundef %cgrp, ptr noundef %19, ptr noundef %cfts.1.i, i1 noundef zeroext false) #26
  %28 = ptrtoint ptr %.pn36.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %.pn.i = load ptr, ptr %.pn36.i, align 4
  %29 = ptrtoint ptr %ss.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %ss.i, align 4
  %cfts12.i = getelementptr inbounds %struct.cgroup_subsys, ptr %30, i32 0, i32 24
  %cmp.not.i = icmp eq ptr %.pn.i, %cfts12.i
  br i1 %cmp.not.i, label %for.body.i.css_clear_dir.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body.i

for.body.i.css_clear_dir.exit_crit_edge:          ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_clear_dir.exit

css_clear_dir.exit:                               ; preds = %for.body.i.css_clear_dir.exit_crit_edge, %if.else8.i.css_clear_dir.exit_crit_edge, %if.then4.i, %for.end67.css_clear_dir.exit_crit_edge
  %kn = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 11
  %31 = ptrtoint ptr %kn to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %kn, align 8
  tail call void @kernfs_remove(ptr noundef %32) #26
  %tobool69.not = icmp eq ptr %1, null
  br i1 %tobool69.not, label %css_clear_dir.exit.if.end73_crit_edge, label %land.lhs.true70

css_clear_dir.exit.if.end73_crit_edge:            ; preds = %css_clear_dir.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end73

land.lhs.true70:                                  ; preds = %css_clear_dir.exit
  %dom_cgrp.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 22
  %33 = ptrtoint ptr %dom_cgrp.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %dom_cgrp.i, align 8
  %cmp.i.not = icmp eq ptr %34, %cgrp
  br i1 %cmp.i.not, label %land.lhs.true70.if.end73_crit_edge, label %if.then72

land.lhs.true70.if.end73_crit_edge:               ; preds = %land.lhs.true70
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end73

if.then72:                                        ; preds = %land.lhs.true70
  call void @__sanitizer_cov_trace_pc() #28
  %nr_threaded_children = getelementptr inbounds %struct.cgroup, ptr %1, i32 0, i32 10
  %35 = ptrtoint ptr %nr_threaded_children to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %nr_threaded_children, align 4
  %dec = add i32 %36, -1
  store i32 %dec, ptr %nr_threaded_children, align 4
  br label %if.end73

if.end73:                                         ; preds = %if.then72, %land.lhs.true70.if.end73_crit_edge, %css_clear_dir.exit.if.end73_crit_edge
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %37 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %tcgrp.0126 = load ptr, ptr %parent.i, align 8
  %tobool76.not127 = icmp eq ptr %tcgrp.0126, null
  br i1 %tobool76.not127, label %if.end73.for.end88_crit_edge, label %for.body77.lr.ph

if.end73.for.end88_crit_edge:                     ; preds = %if.end73
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end88

for.body77.lr.ph:                                 ; preds = %if.end73
  %flags80 = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 1
  br label %for.body77

for.body77:                                       ; preds = %for.inc86.for.body77_crit_edge, %for.body77.lr.ph
  %tcgrp.0128 = phi ptr [ %tcgrp.0126, %for.body77.lr.ph ], [ %tcgrp.0, %for.inc86.for.body77_crit_edge ]
  %nr_descendants = getelementptr inbounds %struct.cgroup, ptr %tcgrp.0128, i32 0, i32 4
  %38 = ptrtoint ptr %nr_descendants to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %nr_descendants, align 4
  %dec78 = add i32 %39, -1
  store i32 %dec78, ptr %nr_descendants, align 4
  %nr_dying_descendants = getelementptr inbounds %struct.cgroup, ptr %tcgrp.0128, i32 0, i32 5
  %40 = ptrtoint ptr %nr_dying_descendants to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %nr_dying_descendants, align 8
  %inc79 = add i32 %41, 1
  store i32 %inc79, ptr %nr_dying_descendants, align 8
  %42 = ptrtoint ptr %flags80 to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load volatile i32, ptr %flags80, align 4
  %44 = and i32 %43, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %44)
  %tobool82.not = icmp eq i32 %44, 0
  br i1 %tobool82.not, label %for.body77.for.inc86_crit_edge, label %if.then83

for.body77.for.inc86_crit_edge:                   ; preds = %for.body77
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc86

if.then83:                                        ; preds = %for.body77
  call void @__sanitizer_cov_trace_pc() #28
  %nr_frozen_descendants = getelementptr inbounds %struct.cgroup, ptr %tcgrp.0128, i32 0, i32 36, i32 2
  %45 = ptrtoint ptr %nr_frozen_descendants to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load i32, ptr %nr_frozen_descendants, align 4
  %dec84 = add i32 %46, -1
  store i32 %dec84, ptr %nr_frozen_descendants, align 4
  br label %for.inc86

for.inc86:                                        ; preds = %if.then83, %for.body77.for.inc86_crit_edge
  %parent.i121 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %tcgrp.0128, i32 0, i32 12
  %47 = ptrtoint ptr %parent.i121 to i32
  call void @__asan_load4_noabort(i32 %47)
  %tcgrp.0 = load ptr, ptr %parent.i121, align 8
  %tobool76.not = icmp eq ptr %tcgrp.0, null
  br i1 %tobool76.not, label %for.inc86.for.end88_crit_edge, label %for.inc86.for.body77_crit_edge

for.inc86.for.body77_crit_edge:                   ; preds = %for.inc86
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body77

for.inc86.for.end88_crit_edge:                    ; preds = %for.inc86
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end88

for.end88:                                        ; preds = %for.inc86.for.end88_crit_edge, %if.end73.for.end88_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  tail call void @cgroup1_check_for_release(ptr noundef %1) #26
  tail call void @cgroup_bpf_offline(ptr noundef %cgrp) #26
  %refcnt = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 2
  tail call void @percpu_ref_kill_and_confirm(ptr noundef %refcnt, ptr noundef null) #26
  br label %cleanup

cleanup:                                          ; preds = %for.end88, %if.end27.cleanup_crit_edge, %if.end.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %for.end88 ], [ -16, %if.end.cleanup_crit_edge ], [ -16, %if.end27.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_rmdir(ptr noundef %kn) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @cgroup_kn_lock_live(ptr noundef %kn, i1 noundef zeroext false)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc i32 @cgroup_destroy_locked(ptr noundef nonnull %call)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool2.not = icmp eq i32 %call1, 0
  br i1 %tobool2.not, label %do.body, label %if.end.if.end16_crit_edge

if.end.if.end16_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end16

do.body:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_rmdir, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@cgroup_rmdir, %if.then5)) #26
          to label %if.end16 [label %if.then5], !srcloc !657

if.then5:                                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  %call9 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @trace_cgroup_path_lock) #26
  %kn.i = getelementptr inbounds %struct.cgroup, ptr %call, i32 0, i32 11
  %0 = ptrtoint ptr %kn.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %kn.i, align 8
  %call.i.i = tail call i32 @kernfs_path_from_node(ptr noundef %1, ptr noundef null, ptr noundef nonnull @trace_cgroup_path, i32 noundef 1024) #26
  tail call fastcc void @trace_cgroup_rmdir(ptr noundef nonnull %call)
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @trace_cgroup_path_lock, i32 noundef %call9) #26
  br label %if.end16

if.end16:                                         ; preds = %if.then5, %do.body, %if.end.if.end16_crit_edge
  %flags.i.i = getelementptr inbounds %struct.kernfs_node, ptr %kn, i32 0, i32 11
  %2 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load2_noabort(i32 %2)
  %3 = load i16, ptr %flags.i.i, align 8
  %4 = and i16 %3, 15
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %4)
  %cmp.i = icmp eq i16 %4, 1
  br i1 %cmp.i, label %if.end16.if.end.i_crit_edge, label %if.else.i

if.end16.if.end.i_crit_edge:                      ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

if.else.i:                                        ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #28
  %parent.i = getelementptr inbounds %struct.kernfs_node, ptr %kn, i32 0, i32 3
  %5 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %parent.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.end16.if.end.i_crit_edge
  %kn.pn.i = phi ptr [ %6, %if.else.i ], [ %kn, %if.end16.if.end.i_crit_edge ]
  %cgrp.0.in.i = getelementptr inbounds %struct.kernfs_node, ptr %kn.pn.i, i32 0, i32 9
  %7 = ptrtoint ptr %cgrp.0.in.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %cgrp.0.i = load ptr, ptr %cgrp.0.in.i, align 8
  tail call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  tail call void @kernfs_unbreak_active_protection(ptr noundef %kn) #26
  %flags.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 7
  %8 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags.i.i.i, align 4
  %and.i.i.i = and i32 %9, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then.i.i.i:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i.i) #26
  br label %cleanup

cleanup:                                          ; preds = %if.then.i.i.i, %if.end.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %entry.cleanup_crit_edge ], [ %call1, %if.end.i.cleanup_crit_edge ], [ %call1, %if.then.i.i.i ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_cgroup_rmdir(ptr noundef %cgrp) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_rmdir, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_cgroup_rmdir, %do.body)) #26
          to label %if.end48 [label %do.body], !srcloc !657

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !636

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.71, i32 noundef 108, i32 noundef 9, ptr noundef null) #26
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i4 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i4
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !674
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_rmdir, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %cgrp, ptr noundef nonnull @trace_cgroup_path) #26
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !675
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !675
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i2.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i2.c to ptr
  %preempt_count.i.i3.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i3.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i3.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i3.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i5 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i5 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i6 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i6, label %if.end48.cpu_online.exit14_crit_edge, label %land.rhs.i.i.i.i8

if.end48.cpu_online.exit14_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit14

land.rhs.i.i.i.i8:                                ; preds = %if.end48
  %.b37.i.i.i.i7 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i7, label %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, label %if.then.i.i.i.i9, !prof !636

land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge:    ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit14

if.then.i.i.i.i9:                                 ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.71, i32 noundef 108, i32 noundef 9, ptr noundef null) #26
  br label %cpu_online.exit14

cpu_online.exit14:                                ; preds = %if.then.i.i.i.i9, %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, %if.end48.cpu_online.exit14_crit_edge
  %div3.i.i.i10 = lshr i32 %27, 5
  %arrayidx.i.i.i11 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i10
  %29 = ptrtoint ptr %arrayidx.i.i.i11 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i11, align 4
  %and.i.i.i12 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i12
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i13.not = icmp eq i32 %32, 0
  br i1 %tobool.i13.not, label %cpu_online.exit14.if.end69_crit_edge, label %if.then52

cpu_online.exit14.if.end69_crit_edge:             ; preds = %cpu_online.exit14
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit14
  %33 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !660
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_rmdir, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b1 = load i1, ptr @trace_cgroup_rmdir.__warned, align 1
  br i1 %.b1, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @trace_cgroup_rmdir.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.70, i32 noundef 90, ptr noundef nonnull @.str.22) #26
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !661
  %38 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i15 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i15 to ptr
  %preempt_count.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i16, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i16, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit14.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_init_early() local_unnamed_addr #12 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  store ptr @cgrp_dfl_root, ptr getelementptr inbounds (%struct.cgroup_fs_context, ptr @cgroup_init_early.ctx, i32 0, i32 1), align 4
  tail call void @init_cgroup_root(ptr noundef nonnull @cgroup_init_early.ctx)
  %0 = load i32, ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 3, i32 0, i32 7), align 4
  %or = or i32 %0, 1
  store i32 %or, ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 3, i32 0, i32 7), align 4
  call void @__asan_store4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.task_struct, ptr @init_task, i32 0, i32 164) to i32))
  store volatile ptr @init_css_set, ptr getelementptr inbounds (%struct.task_struct, ptr @init_task, i32 0, i32 164), align 16
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc.land.rhs_crit_edge, %entry
  %i.0113 = phi i32 [ 0, %entry ], [ %inc, %for.inc.land.rhs_crit_edge ]
  %arrayidx = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %i.0113
  %1 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arrayidx, align 4
  %3 = ptrtoint ptr %2 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %2, align 4
  %tobool10.not = icmp eq ptr %4, null
  br i1 %tobool10.not, label %land.rhs.do.end27_crit_edge, label %lor.lhs.false

land.rhs.do.end27_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end27

lor.lhs.false:                                    ; preds = %land.rhs
  %css_free = getelementptr inbounds %struct.cgroup_subsys, ptr %2, i32 0, i32 4
  %5 = ptrtoint ptr %css_free to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %css_free, align 4
  %tobool11.not = icmp eq ptr %6, null
  br i1 %tobool11.not, label %lor.lhs.false.do.end27_crit_edge, label %lor.lhs.false12

lor.lhs.false.do.end27_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end27

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %name = getelementptr inbounds %struct.cgroup_subsys, ptr %2, i32 0, i32 20
  %7 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %name, align 4
  %tobool13.not = icmp eq ptr %8, null
  br i1 %tobool13.not, label %lor.rhs14, label %lor.lhs.false12.do.end27_crit_edge

lor.lhs.false12.do.end27_crit_edge:               ; preds = %lor.lhs.false12
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end27

lor.rhs14:                                        ; preds = %lor.lhs.false12
  %id = getelementptr inbounds %struct.cgroup_subsys, ptr %2, i32 0, i32 19
  %9 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %id, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool15.not = icmp eq i32 %10, 0
  br i1 %tobool15.not, label %lor.rhs14.if.end_crit_edge, label %lor.rhs14.do.end27_crit_edge, !prof !636

lor.rhs14.do.end27_crit_edge:                     ; preds = %lor.rhs14
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end27

lor.rhs14.if.end_crit_edge:                       ; preds = %lor.rhs14
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end27:                                         ; preds = %lor.rhs14.do.end27_crit_edge, %lor.lhs.false12.do.end27_crit_edge, %lor.lhs.false.do.end27_crit_edge, %land.rhs.do.end27_crit_edge
  %arrayidx28 = getelementptr [14 x ptr], ptr @cgroup_subsys_name, i32 0, i32 %i.0113
  %11 = ptrtoint ptr %arrayidx28 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %arrayidx28, align 4
  %css_free30 = getelementptr inbounds %struct.cgroup_subsys, ptr %2, i32 0, i32 4
  %13 = ptrtoint ptr %css_free30 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %css_free30, align 4
  %id31 = getelementptr inbounds %struct.cgroup_subsys, ptr %2, i32 0, i32 19
  %15 = ptrtoint ptr %id31 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %id31, align 4
  %name32 = getelementptr inbounds %struct.cgroup_subsys, ptr %2, i32 0, i32 20
  %17 = ptrtoint ptr %name32 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %name32, align 4
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 5813, i32 noundef 9, ptr noundef nonnull @.str.17, i32 noundef %i.0113, ptr noundef %12, ptr noundef %4, ptr noundef %14, i32 noundef %16, ptr noundef %18) #26
  br label %if.end

if.end:                                           ; preds = %do.end27, %lor.rhs14.if.end_crit_edge
  %arrayidx45 = getelementptr [14 x ptr], ptr @cgroup_subsys_name, i32 0, i32 %i.0113
  %19 = ptrtoint ptr %arrayidx45 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %arrayidx45, align 4
  %call = tail call i32 @strlen(ptr noundef %20) #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 32, i32 %call)
  %cmp46 = icmp ugt i32 %call, 32
  br i1 %cmp46, label %do.end62, label %if.end.if.end69_crit_edge, !prof !637

if.end.if.end69_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end69

do.end62:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 5815, i32 noundef 9, ptr noundef nonnull @.str.18, ptr noundef %20) #26
  br label %if.end69

if.end69:                                         ; preds = %do.end62, %if.end.if.end69_crit_edge
  %id77 = getelementptr inbounds %struct.cgroup_subsys, ptr %2, i32 0, i32 19
  %21 = ptrtoint ptr %id77 to i32
  call void @__asan_store4_noabort(i32 %21)
  store i32 %i.0113, ptr %id77, align 4
  %name79 = getelementptr inbounds %struct.cgroup_subsys, ptr %2, i32 0, i32 20
  %22 = ptrtoint ptr %name79 to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr %20, ptr %name79, align 4
  %legacy_name = getelementptr inbounds %struct.cgroup_subsys, ptr %2, i32 0, i32 21
  %23 = ptrtoint ptr %legacy_name to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %legacy_name, align 4
  %tobool80.not = icmp eq ptr %24, null
  br i1 %tobool80.not, label %if.then81, label %if.end69.if.end84_crit_edge

if.end69.if.end84_crit_edge:                      ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end84

if.then81:                                        ; preds = %if.end69
  call void @__sanitizer_cov_trace_pc() #28
  %25 = ptrtoint ptr %legacy_name to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %20, ptr %legacy_name, align 4
  br label %if.end84

if.end84:                                         ; preds = %if.then81, %if.end69.if.end84_crit_edge
  %early_init = getelementptr inbounds %struct.cgroup_subsys, ptr %2, i32 0, i32 18
  %26 = ptrtoint ptr %early_init to i32
  call void @__asan_load1_noabort(i32 %26)
  %bf.load = load i8, ptr %early_init, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %bf.cast.not = icmp sgt i8 %bf.load, -1
  br i1 %bf.cast.not, label %if.end84.for.inc_crit_edge, label %if.then85

if.end84.for.inc_crit_edge:                       ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

if.then85:                                        ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #28
  tail call fastcc void @cgroup_init_subsys(ptr noundef %2, i1 noundef zeroext true) #34
  br label %for.inc

for.inc:                                          ; preds = %if.then85, %if.end84.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.0113, 1
  %exitcond.not = icmp eq i32 %inc, 14
  br i1 %exitcond.not, label %for.end, label %for.inc.land.rhs_crit_edge

for.inc.land.rhs_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs

for.end:                                          ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  ret i32 0
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strlen(ptr nocapture noundef) local_unnamed_addr #11

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cgroup_init_subsys(ptr noundef %ss, i1 noundef zeroext %early) unnamed_addr #12 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, ptr, ptr, ptr, i8, i8, i8, i8, { { { %struct.atomic_t, { ptr } } } }, [4 x i8] }, ptr @cgroup_init_subsys.__UNIQUE_ID_ddebug577, i32 0, i32 8, i32 0, i32 0, i32 0, i32 0), ptr blockaddress(@cgroup_init_subsys, %if.then)) #26
          to label %do.end [label %if.then], !srcloc !657

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %name = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 20
  %0 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %name, align 4
  tail call void (ptr, ptr, ...) @__dynamic_pr_debug(ptr noundef nonnull @cgroup_init_subsys.__UNIQUE_ID_ddebug577, ptr noundef nonnull @.str.101, ptr noundef %1) #26
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  tail call void @mutex_lock_nested(ptr noundef nonnull @cgroup_mutex, i32 noundef 0) #26
  %css_idr = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 23
  tail call void @__raw_spin_lock_init(ptr noundef %css_idr, ptr noundef nonnull @.str.102, ptr noundef nonnull @xa_init_flags.__key, i16 noundef signext 3) #26
  %xa_flags.i.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 23, i32 0, i32 1
  %2 = ptrtoint ptr %xa_flags.i.i.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 67108868, ptr %xa_flags.i.i.i, align 4
  %xa_head.i.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 23, i32 0, i32 2
  %3 = ptrtoint ptr %xa_head.i.i.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr null, ptr %xa_head.i.i.i, align 4
  %idr_base.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 23, i32 1
  %4 = ptrtoint ptr %idr_base.i.i to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 0, ptr %idr_base.i.i, align 4
  %idr_next.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 23, i32 2
  %5 = ptrtoint ptr %idr_next.i.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store i32 0, ptr %idr_next.i.i, align 4
  %cfts = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 24
  %6 = ptrtoint ptr %cfts to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr %cfts, ptr %cfts, align 4
  %prev.i = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 24, i32 1
  %7 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %cfts, ptr %prev.i, align 4
  %root = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 22
  %8 = ptrtoint ptr %root to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr @cgrp_dfl_root, ptr %root, align 4
  %9 = ptrtoint ptr %ss to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %ss, align 4
  %call4 = tail call ptr %10(ptr noundef null) #26
  %cmp.i = icmp ugt ptr %call4, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i, label %do.body14, label %do.end22, !prof !637

do.body14:                                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5753, 0\0A.popsection", ""() #26, !srcloc !676
  unreachable

do.end22:                                         ; preds = %do.end
  tail call fastcc void @init_and_link_css(ptr noundef %call4, ptr noundef %ss, ptr noundef getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 3))
  %flags = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call4, i32 0, i32 7
  %11 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %flags, align 4
  %or = or i32 %12, 1
  store i32 %or, ptr %flags, align 4
  br i1 %early, label %if.then24, label %if.else

if.then24:                                        ; preds = %do.end22
  call void @__sanitizer_cov_trace_pc() #28
  %id = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call4, i32 0, i32 6
  %13 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %13)
  store i32 1, ptr %id, align 8
  br label %if.end46

if.else:                                          ; preds = %do.end22
  %call26 = tail call fastcc i32 @cgroup_idr_alloc(ptr noundef %css_idr, ptr noundef %call4, i32 noundef 1, i32 noundef 2)
  %id27 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call4, i32 0, i32 6
  %14 = ptrtoint ptr %id27 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %call26, ptr %id27, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call26)
  %cmp = icmp slt i32 %call26, 0
  br i1 %cmp, label %do.body37, label %if.else.if.end46_crit_edge, !prof !637

if.else.if.end46_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end46

do.body37:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5767, 0\0A.popsection", ""() #26, !srcloc !677
  unreachable

if.end46:                                         ; preds = %if.else.if.end46_crit_edge, %if.then24
  %id47 = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 19
  %15 = ptrtoint ptr %id47 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %id47, align 4
  %arrayidx = getelementptr [14 x ptr], ptr @init_css_set, i32 0, i32 %16
  %17 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %call4, ptr %arrayidx, align 4
  %fork = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 14
  %18 = ptrtoint ptr %fork to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %fork, align 4
  %tobool48 = icmp ne ptr %19, null
  %conv = zext i1 %tobool48 to i32
  %20 = load i32, ptr %id47, align 4
  %shl = shl nuw i32 %conv, %20
  %21 = load i16, ptr @have_fork_callback, align 2
  %22 = trunc i32 %shl to i16
  %conv52 = or i16 %21, %22
  store i16 %conv52, ptr @have_fork_callback, align 2
  %exit = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 15
  %23 = ptrtoint ptr %exit to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %exit, align 4
  %tobool53 = icmp ne ptr %24, null
  %conv54 = zext i1 %tobool53 to i32
  %shl56 = shl nuw i32 %conv54, %20
  %25 = load i16, ptr @have_exit_callback, align 2
  %26 = trunc i32 %shl56 to i16
  %conv59 = or i16 %25, %26
  store i16 %conv59, ptr @have_exit_callback, align 2
  %release = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 16
  %27 = ptrtoint ptr %release to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %release, align 4
  %tobool60 = icmp ne ptr %28, null
  %conv61 = zext i1 %tobool60 to i32
  %shl63 = shl nuw i32 %conv61, %20
  %29 = load i16, ptr @have_release_callback, align 2
  %30 = trunc i32 %shl63 to i16
  %conv66 = or i16 %29, %30
  store i16 %conv66, ptr @have_release_callback, align 2
  %can_fork = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 12
  %31 = ptrtoint ptr %can_fork to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %can_fork, align 4
  %tobool67 = icmp ne ptr %32, null
  %conv68 = zext i1 %tobool67 to i32
  %shl70 = shl nuw i32 %conv68, %20
  %33 = load i16, ptr @have_canfork_callback, align 2
  %34 = trunc i32 %shl70 to i16
  %conv73 = or i16 %33, %34
  store i16 %conv73, ptr @have_canfork_callback, align 2
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds (%struct.task_struct, ptr @init_task, i32 0, i32 50) to i32))
  %35 = load volatile ptr, ptr getelementptr inbounds (%struct.task_struct, ptr @init_task, i32 0, i32 50), align 16
  %cmp.i137.not = icmp eq ptr %35, getelementptr inbounds (%struct.task_struct, ptr @init_task, i32 0, i32 50)
  br i1 %cmp.i137.not, label %do.body95, label %do.body86, !prof !636

do.body86:                                        ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5784, 0\0A.popsection", ""() #26, !srcloc !678
  unreachable

do.body95:                                        ; preds = %if.end46
  %call96 = tail call fastcc i32 @online_css(ptr noundef %call4)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call96)
  %tobool97.not = icmp eq i32 %call96, 0
  br i1 %tobool97.not, label %do.end113, label %do.body105, !prof !636

do.body105:                                       ; preds = %do.body95
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5786, 0\0A.popsection", ""() #26, !srcloc !679
  unreachable

do.end113:                                        ; preds = %do.body95
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_init() local_unnamed_addr #12 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @cgroup_init_cftypes(ptr noundef null, ptr noundef nonnull @cgroup_base_files)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %do.body12, label %do.body4, !prof !636

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5840, 0\0A.popsection", ""() #26, !srcloc !680
  unreachable

do.body12:                                        ; preds = %entry
  %call13 = tail call fastcc i32 @cgroup_init_cftypes(ptr noundef null, ptr noundef nonnull @cgroup1_base_files)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call13)
  %tobool14.not = icmp eq i32 %call13, 0
  br i1 %tobool14.not, label %do.end30, label %do.body22, !prof !636

do.body22:                                        ; preds = %do.body12
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5841, 0\0A.popsection", ""() #26, !srcloc !681
  unreachable

do.end30:                                         ; preds = %do.body12
  tail call void @cgroup_rstat_boot() #26
  tail call void @rcu_sync_enter_start(ptr noundef nonnull @cgroup_threadgroup_rwsem) #26
  %0 = load ptr, ptr getelementptr inbounds (%struct.cgroup_namespace, ptr @init_cgroup_ns, i32 0, i32 1), align 4
  %tobool.not.i = icmp eq ptr %0, null
  br i1 %tobool.not.i, label %do.end30.get_user_ns.exit_crit_edge, label %if.then.i

do.end30.get_user_ns.exit_crit_edge:              ; preds = %do.end30
  call void @__sanitizer_cov_trace_pc() #28
  br label %get_user_ns.exit

if.then.i:                                        ; preds = %do.end30
  %count.i = getelementptr inbounds %struct.user_namespace, ptr %0, i32 0, i32 7, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #26
  tail call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #26
  %1 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #26, !srcloc !663
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %1, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !637

if.then.i.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %2 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %2)
  %.not.i.i.i.i = icmp sgt i32 %2, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.get_user_ns.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !636

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.get_user_ns.exit_crit_edge:       ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %get_user_ns.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %count.i, i32 noundef %.sink.i.i.i.i) #26
  br label %get_user_ns.exit

get_user_ns.exit:                                 ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.get_user_ns.exit_crit_edge, %do.end30.get_user_ns.exit_crit_edge
  tail call void @mutex_lock_nested(ptr noundef nonnull @cgroup_mutex, i32 noundef 0) #26
  %call32 = tail call fastcc i32 @css_set_hash(ptr noundef nonnull @init_css_set)
  %mul.i.i = mul i32 %call32, 1640531527
  %shr.i = lshr i32 %mul.i.i, 25
  %arrayidx = getelementptr [128 x %struct.hlist_head], ptr @css_set_table, i32 0, i32 %shr.i
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx, align 4
  store volatile ptr %4, ptr getelementptr inbounds (%struct.css_set, ptr @init_css_set, i32 0, i32 12), align 4
  %tobool.not.i484 = icmp eq ptr %4, null
  br i1 %tobool.not.i484, label %get_user_ns.exit.hlist_add_head.exit_crit_edge, label %do.body12.i

get_user_ns.exit.hlist_add_head.exit_crit_edge:   ; preds = %get_user_ns.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %hlist_add_head.exit

do.body12.i:                                      ; preds = %get_user_ns.exit
  call void @__sanitizer_cov_trace_pc() #28
  %pprev.i = getelementptr inbounds %struct.hlist_node, ptr %4, i32 0, i32 1
  %5 = ptrtoint ptr %pprev.i to i32
  call void @__asan_store4_noabort(i32 %5)
  store volatile ptr getelementptr inbounds (%struct.css_set, ptr @init_css_set, i32 0, i32 12), ptr %pprev.i, align 4
  br label %hlist_add_head.exit

hlist_add_head.exit:                              ; preds = %do.body12.i, %get_user_ns.exit.hlist_add_head.exit_crit_edge
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_store4_noabort(i32 %6)
  store volatile ptr getelementptr inbounds (%struct.css_set, ptr @init_css_set, i32 0, i32 12), ptr %arrayidx, align 4
  store volatile ptr %arrayidx, ptr getelementptr inbounds (%struct.css_set, ptr @init_css_set, i32 0, i32 12, i32 1), align 4
  %call35 = tail call i32 @cgroup_setup_root(ptr noundef nonnull @cgrp_dfl_root, i16 noundef zeroext 0)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call35)
  %tobool36.not = icmp eq i32 %call35, 0
  br i1 %tobool36.not, label %do.end52, label %do.body44, !prof !636

do.body44:                                        ; preds = %hlist_add_head.exit
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5862, 0\0A.popsection", ""() #26, !srcloc !682
  unreachable

do.end52:                                         ; preds = %hlist_add_head.exit
  tail call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc.land.rhs_crit_edge, %do.end52
  %ssid.0491 = phi i32 [ 0, %do.end52 ], [ %inc, %for.inc.land.rhs_crit_edge ]
  %arrayidx53 = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %ssid.0491
  %7 = ptrtoint ptr %arrayidx53 to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx53, align 4
  %early_init = getelementptr inbounds %struct.cgroup_subsys, ptr %8, i32 0, i32 18
  %9 = ptrtoint ptr %early_init to i32
  call void @__asan_load1_noabort(i32 %9)
  %bf.load = load i8, ptr %early_init, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 -1, i8 %bf.load)
  %bf.cast.not = icmp sgt i8 %bf.load, -1
  br i1 %bf.cast.not, label %if.else, label %if.then55

if.then55:                                        ; preds = %land.rhs
  %id = getelementptr inbounds %struct.cgroup_subsys, ptr %8, i32 0, i32 19
  %10 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %id, align 4
  %arrayidx56 = getelementptr [14 x ptr], ptr @init_css_set, i32 0, i32 %11
  %12 = ptrtoint ptr %arrayidx56 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx56, align 4
  %css_idr = getelementptr inbounds %struct.cgroup_subsys, ptr %8, i32 0, i32 23
  %call57 = tail call fastcc i32 @cgroup_idr_alloc(ptr noundef %css_idr, ptr noundef %13, i32 noundef 1, i32 noundef 2)
  %id58 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %13, i32 0, i32 6
  %14 = ptrtoint ptr %id58 to i32
  call void @__asan_store4_noabort(i32 %14)
  store i32 %call57, ptr %id58, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call57)
  %cmp61 = icmp slt i32 %call57, 0
  br i1 %cmp61, label %do.body69, label %if.then55.if.end78_crit_edge, !prof !637

if.then55.if.end78_crit_edge:                     ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end78

do.body69:                                        ; preds = %if.then55
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5873, 0\0A.popsection", ""() #26, !srcloc !683
  unreachable

if.else:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call fastcc void @cgroup_init_subsys(ptr noundef %8, i1 noundef zeroext false) #34
  br label %if.end78

if.end78:                                         ; preds = %if.else, %if.then55.if.end78_crit_edge
  %arrayidx79 = getelementptr %struct.css_set, ptr @init_css_set, i32 0, i32 9, i32 %ssid.0491
  %arrayidx80 = getelementptr %struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 3, i32 21, i32 %ssid.0491
  %prev.i = getelementptr %struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 3, i32 21, i32 %ssid.0491, i32 1
  %15 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev.i, align 4
  %call.i.i = tail call zeroext i1 @__list_add_valid(ptr noundef %arrayidx79, ptr noundef %16, ptr noundef %arrayidx80) #26
  br i1 %call.i.i, label %if.end.i.i, label %if.end78.list_add_tail.exit_crit_edge

if.end78.list_add_tail.exit_crit_edge:            ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %if.end78
  call void @__sanitizer_cov_trace_pc() #28
  %17 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %17)
  store ptr %arrayidx79, ptr %prev.i, align 4
  %18 = ptrtoint ptr %arrayidx79 to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %arrayidx80, ptr %arrayidx79, align 4
  %prev3.i.i = getelementptr %struct.css_set, ptr @init_css_set, i32 0, i32 9, i32 %ssid.0491, i32 1
  %19 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %prev3.i.i, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %arrayidx79, ptr %16, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %if.end78.list_add_tail.exit_crit_edge
  %arrayidx.i = getelementptr [14 x ptr], ptr @cgroup_subsys_enabled_key, i32 0, i32 %ssid.0491
  %21 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx.i, align 4
  %call.i = tail call i32 @static_key_count(ptr noundef %22) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.i = icmp sgt i32 %call.i, 0
  br i1 %cmp.i, label %if.end83, label %list_add_tail.exit.for.inc_crit_edge

list_add_tail.exit.for.inc_crit_edge:             ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

if.end83:                                         ; preds = %list_add_tail.exit
  %call84 = tail call zeroext i1 @cgroup1_ssid_disabled(i32 noundef %ssid.0491) #26
  br i1 %call84, label %do.end88, label %if.end83.if.end90_crit_edge

if.end83.if.end90_crit_edge:                      ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end90

do.end88:                                         ; preds = %if.end83
  call void @__sanitizer_cov_trace_pc() #28
  %name = getelementptr inbounds %struct.cgroup_subsys, ptr %8, i32 0, i32 20
  %23 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %name, align 4
  %call89 = tail call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.19, ptr noundef %24) #31
  br label %if.end90

if.end90:                                         ; preds = %do.end88, %if.end83.if.end90_crit_edge
  %id91 = getelementptr inbounds %struct.cgroup_subsys, ptr %8, i32 0, i32 19
  %25 = ptrtoint ptr %id91 to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %id91, align 4
  %shl = shl nuw i32 1, %26
  %27 = load i32, ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 1), align 4
  %or = or i32 %27, %shl
  store i32 %or, ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 1), align 4
  %28 = ptrtoint ptr %early_init to i32
  call void @__asan_load1_noabort(i32 %28)
  %bf.load92 = load i8, ptr %early_init, align 4
  %29 = and i8 %bf.load92, 96
  call void @__sanitizer_cov_trace_const_cmp1(i8 64, i8 %29)
  %30 = icmp eq i8 %29, 64
  br i1 %30, label %do.end118, label %if.end90.if.end124_crit_edge, !prof !637

if.end90.if.end124_crit_edge:                     ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end124

do.end118:                                        ; preds = %if.end90
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 5896, i32 noundef 9, ptr noundef null) #26
  br label %if.end124

if.end124:                                        ; preds = %do.end118, %if.end90.if.end124_crit_edge
  %31 = ptrtoint ptr %early_init to i32
  call void @__asan_load1_noabort(i32 %31)
  %bf.load133 = load i8, ptr %early_init, align 4
  %32 = and i8 %bf.load133, 64
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %32)
  %bf.cast136.not = icmp eq i8 %32, 0
  br i1 %bf.cast136.not, label %if.else142, label %if.end124.if.end151.sink.split_crit_edge

if.end124.if.end151.sink.split_crit_edge:         ; preds = %if.end124
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end151.sink.split

if.else142:                                       ; preds = %if.end124
  %dfl_cftypes = getelementptr inbounds %struct.cgroup_subsys, ptr %8, i32 0, i32 25
  %33 = ptrtoint ptr %dfl_cftypes to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %dfl_cftypes, align 4
  %tobool143.not = icmp eq ptr %34, null
  br i1 %tobool143.not, label %if.else142.if.end151.sink.split_crit_edge, label %if.else142.if.end151_crit_edge

if.else142.if.end151_crit_edge:                   ; preds = %if.else142
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end151

if.else142.if.end151.sink.split_crit_edge:        ; preds = %if.else142
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end151.sink.split

if.end151.sink.split:                             ; preds = %if.else142.if.end151.sink.split_crit_edge, %if.end124.if.end151.sink.split_crit_edge
  %cgrp_dfl_inhibit_ss_mask.sink496 = phi ptr [ @cgrp_dfl_implicit_ss_mask, %if.end124.if.end151.sink.split_crit_edge ], [ @cgrp_dfl_inhibit_ss_mask, %if.else142.if.end151.sink.split_crit_edge ]
  %35 = ptrtoint ptr %id91 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %id91, align 4
  %shl146 = shl nuw i32 1, %36
  %37 = ptrtoint ptr %cgrp_dfl_inhibit_ss_mask.sink496 to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %cgrp_dfl_inhibit_ss_mask.sink496, align 2
  %39 = trunc i32 %shl146 to i16
  %conv149 = or i16 %38, %39
  store i16 %conv149, ptr %cgrp_dfl_inhibit_ss_mask.sink496, align 2
  br label %if.end151

if.end151:                                        ; preds = %if.end151.sink.split, %if.else142.if.end151_crit_edge
  %40 = and i8 %bf.load133, 32
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %40)
  %bf.cast156.not = icmp eq i8 %40, 0
  br i1 %bf.cast156.not, label %if.end151.if.end163_crit_edge, label %if.then157

if.end151.if.end163_crit_edge:                    ; preds = %if.end151
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end163

if.then157:                                       ; preds = %if.end151
  call void @__sanitizer_cov_trace_pc() #28
  %41 = ptrtoint ptr %id91 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %id91, align 4
  %shl159 = shl nuw i32 1, %42
  %43 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %44 = trunc i32 %shl159 to i16
  %conv162 = or i16 %43, %44
  store i16 %conv162, ptr @cgrp_dfl_threaded_ss_mask, align 2
  br label %if.end163

if.end163:                                        ; preds = %if.then157, %if.end151.if.end163_crit_edge
  %dfl_cftypes164 = getelementptr inbounds %struct.cgroup_subsys, ptr %8, i32 0, i32 25
  %45 = ptrtoint ptr %dfl_cftypes164 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %dfl_cftypes164, align 4
  %legacy_cftypes = getelementptr inbounds %struct.cgroup_subsys, ptr %8, i32 0, i32 26
  %47 = ptrtoint ptr %legacy_cftypes to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %legacy_cftypes, align 4
  %cmp165 = icmp eq ptr %46, %48
  br i1 %cmp165, label %if.then167, label %if.else201

if.then167:                                       ; preds = %if.end163
  %call170 = tail call fastcc i32 @cgroup_add_cftypes(ptr noundef %8, ptr noundef %46)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call170)
  %tobool171.not = icmp eq i32 %call170, 0
  br i1 %tobool171.not, label %if.then167.if.end268_crit_edge, label %if.then167.if.end268.sink.split_crit_edge, !prof !636

if.then167.if.end268.sink.split_crit_edge:        ; preds = %if.then167
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end268.sink.split

if.then167.if.end268_crit_edge:                   ; preds = %if.then167
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end268

if.else201:                                       ; preds = %if.end163
  %call204 = tail call i32 @cgroup_add_dfl_cftypes(ptr noundef %8, ptr noundef %46)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call204)
  %tobool205.not = icmp eq i32 %call204, 0
  br i1 %tobool205.not, label %if.else201.if.end227_crit_edge, label %do.end221, !prof !636

if.else201.if.end227_crit_edge:                   ; preds = %if.else201
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end227

do.end221:                                        ; preds = %if.else201
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 5909, i32 noundef 9, ptr noundef null) #26
  br label %if.end227

if.end227:                                        ; preds = %do.end221, %if.else201.if.end227_crit_edge
  %49 = ptrtoint ptr %legacy_cftypes to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %legacy_cftypes, align 4
  %call237 = tail call i32 @cgroup_add_legacy_cftypes(ptr noundef %8, ptr noundef %50)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call237)
  %tobool238.not = icmp eq i32 %call237, 0
  br i1 %tobool238.not, label %if.end227.if.end268_crit_edge, label %if.end227.if.end268.sink.split_crit_edge, !prof !636

if.end227.if.end268.sink.split_crit_edge:         ; preds = %if.end227
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end268.sink.split

if.end227.if.end268_crit_edge:                    ; preds = %if.end227
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end268

if.end268.sink.split:                             ; preds = %if.end227.if.end268.sink.split_crit_edge, %if.then167.if.end268.sink.split_crit_edge
  %.sink = phi i32 [ 5907, %if.then167.if.end268.sink.split_crit_edge ], [ 5910, %if.end227.if.end268.sink.split_crit_edge ]
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef %.sink, i32 noundef 9, ptr noundef null) #26
  br label %if.end268

if.end268:                                        ; preds = %if.end268.sink.split, %if.end227.if.end268_crit_edge, %if.then167.if.end268_crit_edge
  %bind = getelementptr inbounds %struct.cgroup_subsys, ptr %8, i32 0, i32 17
  %51 = ptrtoint ptr %bind to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %bind, align 4
  %tobool269.not = icmp eq ptr %52, null
  br i1 %tobool269.not, label %if.end268.if.end273_crit_edge, label %if.then270

if.end268.if.end273_crit_edge:                    ; preds = %if.end268
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end273

if.then270:                                       ; preds = %if.end268
  call void @__sanitizer_cov_trace_pc() #28
  %arrayidx272 = getelementptr [14 x ptr], ptr @init_css_set, i32 0, i32 %ssid.0491
  %53 = ptrtoint ptr %arrayidx272 to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %arrayidx272, align 4
  tail call void %52(ptr noundef %54) #26
  br label %if.end273

if.end273:                                        ; preds = %if.then270, %if.end268.if.end273_crit_edge
  tail call void @mutex_lock_nested(ptr noundef nonnull @cgroup_mutex, i32 noundef 0) #26
  %arrayidx274 = getelementptr [14 x ptr], ptr @init_css_set, i32 0, i32 %ssid.0491
  %55 = ptrtoint ptr %arrayidx274 to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %arrayidx274, align 4
  %call275 = tail call fastcc i32 @css_populate_dir(ptr noundef %56)
  tail call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  br label %for.inc

for.inc:                                          ; preds = %if.end273, %list_add_tail.exit.for.inc_crit_edge
  %inc = add nuw nsw i32 %ssid.0491, 1
  %exitcond.not = icmp eq i32 %inc, 14
  br i1 %exitcond.not, label %for.end, label %for.inc.land.rhs_crit_edge

for.inc.land.rhs_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs

for.end:                                          ; preds = %for.inc
  %57 = load ptr, ptr getelementptr inbounds (%struct.css_set, ptr @init_css_set, i32 0, i32 12, i32 1), align 4
  %tobool.not.i.not.i.i = icmp eq ptr %57, null
  br i1 %tobool.not.i.not.i.i, label %for.end.hash_del.exit_crit_edge, label %if.then.i.i

for.end.hash_del.exit_crit_edge:                  ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %hash_del.exit

if.then.i.i:                                      ; preds = %for.end
  %58 = load ptr, ptr getelementptr inbounds (%struct.css_set, ptr @init_css_set, i32 0, i32 12), align 4
  %59 = ptrtoint ptr %57 to i32
  call void @__asan_store4_noabort(i32 %59)
  store volatile ptr %58, ptr %57, align 4
  %tobool.not.i3.i.i = icmp eq ptr %58, null
  br i1 %tobool.not.i3.i.i, label %if.then.i.i.__hlist_del.exit.i.i_crit_edge, label %do.body13.i.i.i

if.then.i.i.__hlist_del.exit.i.i_crit_edge:       ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %__hlist_del.exit.i.i

do.body13.i.i.i:                                  ; preds = %if.then.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %pprev14.i.i.i = getelementptr inbounds %struct.hlist_node, ptr %58, i32 0, i32 1
  %60 = ptrtoint ptr %pprev14.i.i.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store volatile ptr %57, ptr %pprev14.i.i.i, align 4
  br label %__hlist_del.exit.i.i

__hlist_del.exit.i.i:                             ; preds = %do.body13.i.i.i, %if.then.i.i.__hlist_del.exit.i.i_crit_edge
  store ptr null, ptr getelementptr inbounds (%struct.css_set, ptr @init_css_set, i32 0, i32 12), align 4
  store ptr null, ptr getelementptr inbounds (%struct.css_set, ptr @init_css_set, i32 0, i32 12, i32 1), align 4
  br label %hash_del.exit

hash_del.exit:                                    ; preds = %__hlist_del.exit.i.i, %for.end.hash_del.exit_crit_edge
  %call276 = tail call fastcc i32 @css_set_hash(ptr noundef nonnull @init_css_set)
  %mul.i.i485 = mul i32 %call276, 1640531527
  %shr.i486 = lshr i32 %mul.i.i485, 25
  %arrayidx278 = getelementptr [128 x %struct.hlist_head], ptr @css_set_table, i32 0, i32 %shr.i486
  %61 = ptrtoint ptr %arrayidx278 to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %arrayidx278, align 4
  store volatile ptr %62, ptr getelementptr inbounds (%struct.css_set, ptr @init_css_set, i32 0, i32 12), align 4
  %tobool.not.i487 = icmp eq ptr %62, null
  br i1 %tobool.not.i487, label %hash_del.exit.hlist_add_head.exit490_crit_edge, label %do.body12.i489

hash_del.exit.hlist_add_head.exit490_crit_edge:   ; preds = %hash_del.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %hlist_add_head.exit490

do.body12.i489:                                   ; preds = %hash_del.exit
  call void @__sanitizer_cov_trace_pc() #28
  %pprev.i488 = getelementptr inbounds %struct.hlist_node, ptr %62, i32 0, i32 1
  %63 = ptrtoint ptr %pprev.i488 to i32
  call void @__asan_store4_noabort(i32 %63)
  store volatile ptr getelementptr inbounds (%struct.css_set, ptr @init_css_set, i32 0, i32 12), ptr %pprev.i488, align 4
  br label %hlist_add_head.exit490

hlist_add_head.exit490:                           ; preds = %do.body12.i489, %hash_del.exit.hlist_add_head.exit490_crit_edge
  %64 = ptrtoint ptr %arrayidx278 to i32
  call void @__asan_store4_noabort(i32 %64)
  store volatile ptr getelementptr inbounds (%struct.css_set, ptr @init_css_set, i32 0, i32 12), ptr %arrayidx278, align 4
  store volatile ptr %arrayidx278, ptr getelementptr inbounds (%struct.css_set, ptr @init_css_set, i32 0, i32 12, i32 1), align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @fs_kobj to i32))
  %65 = load ptr, ptr @fs_kobj, align 4
  %call280 = tail call i32 @sysfs_create_mount_point(ptr noundef %65, ptr noundef nonnull @.str.12) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call280)
  %tobool281.not = icmp eq i32 %call280, 0
  br i1 %tobool281.not, label %hlist_add_head.exit490.if.end303_crit_edge, label %do.end297, !prof !636

hlist_add_head.exit490.if.end303_crit_edge:       ; preds = %hlist_add_head.exit490
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end303

do.end297:                                        ; preds = %hlist_add_head.exit490
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 5926, i32 noundef 9, ptr noundef null) #26
  br label %if.end303

if.end303:                                        ; preds = %do.end297, %hlist_add_head.exit490.if.end303_crit_edge
  %call312 = tail call i32 @register_filesystem(ptr noundef nonnull @cgroup_fs_type) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call312)
  %tobool313.not = icmp eq i32 %call312, 0
  br i1 %tobool313.not, label %if.end303.if.end335_crit_edge, label %do.end329, !prof !636

if.end303.if.end335_crit_edge:                    ; preds = %if.end303
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end335

do.end329:                                        ; preds = %if.end303
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 5927, i32 noundef 9, ptr noundef null) #26
  br label %if.end335

if.end335:                                        ; preds = %do.end329, %if.end303.if.end335_crit_edge
  %call344 = tail call i32 @register_filesystem(ptr noundef nonnull @cgroup2_fs_type) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call344)
  %tobool345.not = icmp eq i32 %call344, 0
  br i1 %tobool345.not, label %if.end335.if.end367_crit_edge, label %do.end361, !prof !636

if.end335.if.end367_crit_edge:                    ; preds = %if.end335
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end367

do.end361:                                        ; preds = %if.end335
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 5928, i32 noundef 9, ptr noundef null) #26
  br label %if.end367

if.end367:                                        ; preds = %do.end361, %if.end335.if.end367_crit_edge
  %call376 = tail call ptr @proc_create_single_data(ptr noundef nonnull @.str.21, i16 noundef zeroext 0, ptr noundef null, ptr noundef nonnull @proc_cgroupstats_show, ptr noundef null) #26
  %tobool377.not = icmp eq ptr %call376, null
  br i1 %tobool377.not, label %do.end395, label %if.end367.if.end401_crit_edge, !prof !637

if.end367.if.end401_crit_edge:                    ; preds = %if.end367
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end401

do.end395:                                        ; preds = %if.end367
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 5929, i32 noundef 9, ptr noundef null) #26
  br label %if.end401

if.end401:                                        ; preds = %do.end395, %if.end367.if.end401_crit_edge
  %call410 = tail call i32 @register_filesystem(ptr noundef nonnull @cpuset_fs_type) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call410)
  %tobool411.not = icmp eq i32 %call410, 0
  br i1 %tobool411.not, label %if.end401.if.end433_crit_edge, label %do.end427, !prof !636

if.end401.if.end433_crit_edge:                    ; preds = %if.end401
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end433

do.end427:                                        ; preds = %if.end401
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 5931, i32 noundef 9, ptr noundef null) #26
  br label %if.end433

if.end433:                                        ; preds = %do.end427, %if.end401.if.end433_crit_edge
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @cgroup_init_cftypes(ptr noundef %ss, ptr nocapture noundef %cfts) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %cfts to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %cfts, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp.not62 = icmp eq i8 %1, 0
  br i1 %cmp.not62, label %entry.cleanup44_crit_edge, label %entry.for.body_crit_edge

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

entry.cleanup44_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup44

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %entry.for.body_crit_edge
  %cft.063 = phi ptr [ %incdec.ptr, %for.inc.for.body_crit_edge ], [ %cfts, %entry.for.body_crit_edge ]
  %ss2 = getelementptr inbounds %struct.cftype, ptr %cft.063, i32 0, i32 5
  %2 = ptrtoint ptr %ss2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %ss2, align 4
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %lor.rhs, label %for.body.do.end_crit_edge

for.body.do.end_crit_edge:                        ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

lor.rhs:                                          ; preds = %for.body
  %kf_ops3 = getelementptr inbounds %struct.cftype, ptr %cft.063, i32 0, i32 7
  %4 = ptrtoint ptr %kf_ops3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %kf_ops3, align 4
  %tobool4.not = icmp eq ptr %5, null
  br i1 %tobool4.not, label %lor.rhs.if.end_crit_edge, label %lor.rhs.do.end_crit_edge, !prof !636

lor.rhs.do.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

lor.rhs.if.end_crit_edge:                         ; preds = %lor.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %lor.rhs.do.end_crit_edge, %for.body.do.end_crit_edge
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 4132, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %lor.rhs.if.end_crit_edge
  %flags = getelementptr inbounds %struct.cftype, ptr %cft.063, i32 0, i32 3
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags, align 4
  %and = and i32 %7, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool24.not = icmp eq i32 %and, 0
  br i1 %tobool24.not, label %if.end.if.end26_crit_edge, label %land.lhs.true

if.end.if.end26_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end26

land.lhs.true:                                    ; preds = %if.end
  %8 = load i16, ptr @cgroup_feature_disable_mask, align 2
  %9 = and i16 %8, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %9)
  %cmp.i = icmp eq i16 %9, 0
  br i1 %cmp.i, label %land.lhs.true.if.end26_crit_edge, label %land.lhs.true.for.inc_crit_edge

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

land.lhs.true.if.end26_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end26

if.end26:                                         ; preds = %land.lhs.true.if.end26_crit_edge, %if.end.if.end26_crit_edge
  %seq_start = getelementptr inbounds %struct.cftype, ptr %cft.063, i32 0, i32 13
  %10 = ptrtoint ptr %seq_start to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %seq_start, align 4
  %tobool27.not = icmp eq ptr %11, null
  %cgroup_kf_single_ops.cgroup_kf_ops = select i1 %tobool27.not, ptr @cgroup_kf_single_ops, ptr @cgroup_kf_ops
  %max_write_len = getelementptr inbounds %struct.cftype, ptr %cft.063, i32 0, i32 2
  %12 = ptrtoint ptr %max_write_len to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %max_write_len, align 4
  %14 = zext i32 %13 to i64
  call void @__sanitizer_cov_trace_switch(i64 %14, ptr @__sancov_gen_cov_switch_values.139)
  switch i32 %13, label %if.then35 [
    i32 0, label %if.end26.if.end41_crit_edge
    i32 4096, label %if.end26.if.end41_crit_edge70
  ]

if.end26.if.end41_crit_edge70:                    ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end41

if.end26.if.end41_crit_edge:                      ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end41

if.then35:                                        ; preds = %if.end26
  %call36 = tail call ptr @kmemdup(ptr noundef nonnull %cgroup_kf_single_ops.cgroup_kf_ops, i32 noundef 48, i32 noundef 3264) #26
  %tobool37.not = icmp eq ptr %call36, null
  br i1 %tobool37.not, label %if.then38, label %if.end39

if.then38:                                        ; preds = %if.then35
  %15 = ptrtoint ptr %cfts to i32
  call void @__asan_load1_noabort(i32 %15)
  %16 = load i8, ptr %cfts, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %16)
  %cmp.not13.i = icmp eq i8 %16, 0
  br i1 %cmp.not13.i, label %if.then38.cleanup44_crit_edge, label %if.then38.for.body.i_crit_edge

if.then38.for.body.i_crit_edge:                   ; preds = %if.then38
  br label %for.body.i

if.then38.cleanup44_crit_edge:                    ; preds = %if.then38
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup44

for.body.i:                                       ; preds = %if.end.i.for.body.i_crit_edge, %if.then38.for.body.i_crit_edge
  %cft.014.i = phi ptr [ %incdec.ptr.i, %if.end.i.for.body.i_crit_edge ], [ %cfts, %if.then38.for.body.i_crit_edge ]
  %max_write_len.i = getelementptr inbounds %struct.cftype, ptr %cft.014.i, i32 0, i32 2
  %17 = ptrtoint ptr %max_write_len.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %max_write_len.i, align 4
  %19 = zext i32 %18 to i64
  call void @__sanitizer_cov_trace_switch(i64 %19, ptr @__sancov_gen_cov_switch_values.140)
  switch i32 %18, label %if.then.i [
    i32 0, label %for.body.i.if.end.i_crit_edge
    i32 4096, label %for.body.i.if.end.i_crit_edge71
  ]

for.body.i.if.end.i_crit_edge71:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

for.body.i.if.end.i_crit_edge:                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

if.then.i:                                        ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  %kf_ops.i = getelementptr inbounds %struct.cftype, ptr %cft.014.i, i32 0, i32 7
  %20 = ptrtoint ptr %kf_ops.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %kf_ops.i, align 4
  tail call void @kfree(ptr noundef %21) #26
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %for.body.i.if.end.i_crit_edge, %for.body.i.if.end.i_crit_edge71
  %kf_ops5.i = getelementptr inbounds %struct.cftype, ptr %cft.014.i, i32 0, i32 7
  %22 = ptrtoint ptr %kf_ops5.i to i32
  call void @__asan_store4_noabort(i32 %22)
  store ptr null, ptr %kf_ops5.i, align 4
  %ss.i = getelementptr inbounds %struct.cftype, ptr %cft.014.i, i32 0, i32 5
  %23 = ptrtoint ptr %ss.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr null, ptr %ss.i, align 4
  %flags.i = getelementptr inbounds %struct.cftype, ptr %cft.014.i, i32 0, i32 3
  %24 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %25, -196609
  store i32 %and.i, ptr %flags.i, align 4
  %incdec.ptr.i = getelementptr %struct.cftype, ptr %cft.014.i, i32 1
  %26 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load1_noabort(i32 %26)
  %27 = load i8, ptr %incdec.ptr.i, align 4
  %cmp.not.i = icmp eq i8 %27, 0
  br i1 %cmp.not.i, label %if.end.i.cleanup44_crit_edge, label %if.end.i.for.body.i_crit_edge

if.end.i.for.body.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body.i

if.end.i.cleanup44_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup44

if.end39:                                         ; preds = %if.then35
  call void @__sanitizer_cov_trace_pc() #28
  %28 = ptrtoint ptr %max_write_len to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %max_write_len, align 4
  %atomic_write_len = getelementptr inbounds %struct.kernfs_ops, ptr %call36, i32 0, i32 7
  %30 = ptrtoint ptr %atomic_write_len to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %29, ptr %atomic_write_len, align 4
  br label %if.end41

if.end41:                                         ; preds = %if.end39, %if.end26.if.end41_crit_edge, %if.end26.if.end41_crit_edge70
  %kf_ops.1 = phi ptr [ %call36, %if.end39 ], [ %cgroup_kf_single_ops.cgroup_kf_ops, %if.end26.if.end41_crit_edge ], [ %cgroup_kf_single_ops.cgroup_kf_ops, %if.end26.if.end41_crit_edge70 ]
  %kf_ops42 = getelementptr inbounds %struct.cftype, ptr %cft.063, i32 0, i32 7
  %31 = ptrtoint ptr %kf_ops42 to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %kf_ops.1, ptr %kf_ops42, align 4
  %32 = ptrtoint ptr %ss2 to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %ss, ptr %ss2, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.end41, %land.lhs.true.for.inc_crit_edge
  %incdec.ptr = getelementptr %struct.cftype, ptr %cft.063, i32 1
  %33 = ptrtoint ptr %incdec.ptr to i32
  call void @__asan_load1_noabort(i32 %33)
  %34 = load i8, ptr %incdec.ptr, align 4
  %cmp.not = icmp eq i8 %34, 0
  br i1 %cmp.not, label %for.inc.cleanup44_crit_edge, label %for.inc.for.body_crit_edge

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

for.inc.cleanup44_crit_edge:                      ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup44

cleanup44:                                        ; preds = %for.inc.cleanup44_crit_edge, %if.end.i.cleanup44_crit_edge, %if.then38.cleanup44_crit_edge, %entry.cleanup44_crit_edge
  %retval.2 = phi i32 [ -12, %if.then38.cleanup44_crit_edge ], [ 0, %entry.cleanup44_crit_edge ], [ -12, %if.end.i.cleanup44_crit_edge ], [ 0, %for.inc.cleanup44_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @cgroup_rstat_boot() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_sync_enter_start(ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @css_set_hash(ptr nocapture noundef readonly %css) unnamed_addr #13 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %css to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %css, align 4
  %2 = ptrtoint ptr %1 to i32
  %arrayidx1.1 = getelementptr ptr, ptr %css, i32 1
  %3 = ptrtoint ptr %arrayidx1.1 to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx1.1, align 4
  %5 = ptrtoint ptr %4 to i32
  %add.1 = add i32 %2, %5
  %arrayidx1.2 = getelementptr ptr, ptr %css, i32 2
  %6 = ptrtoint ptr %arrayidx1.2 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx1.2, align 4
  %8 = ptrtoint ptr %7 to i32
  %add.2 = add i32 %add.1, %8
  %arrayidx1.3 = getelementptr ptr, ptr %css, i32 3
  %9 = ptrtoint ptr %arrayidx1.3 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx1.3, align 4
  %11 = ptrtoint ptr %10 to i32
  %add.3 = add i32 %add.2, %11
  %arrayidx1.4 = getelementptr ptr, ptr %css, i32 4
  %12 = ptrtoint ptr %arrayidx1.4 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %arrayidx1.4, align 4
  %14 = ptrtoint ptr %13 to i32
  %add.4 = add i32 %add.3, %14
  %arrayidx1.5 = getelementptr ptr, ptr %css, i32 5
  %15 = ptrtoint ptr %arrayidx1.5 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %arrayidx1.5, align 4
  %17 = ptrtoint ptr %16 to i32
  %add.5 = add i32 %add.4, %17
  %arrayidx1.6 = getelementptr ptr, ptr %css, i32 6
  %18 = ptrtoint ptr %arrayidx1.6 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %arrayidx1.6, align 4
  %20 = ptrtoint ptr %19 to i32
  %add.6 = add i32 %add.5, %20
  %arrayidx1.7 = getelementptr ptr, ptr %css, i32 7
  %21 = ptrtoint ptr %arrayidx1.7 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %arrayidx1.7, align 4
  %23 = ptrtoint ptr %22 to i32
  %add.7 = add i32 %add.6, %23
  %arrayidx1.8 = getelementptr ptr, ptr %css, i32 8
  %24 = ptrtoint ptr %arrayidx1.8 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %arrayidx1.8, align 4
  %26 = ptrtoint ptr %25 to i32
  %add.8 = add i32 %add.7, %26
  %arrayidx1.9 = getelementptr ptr, ptr %css, i32 9
  %27 = ptrtoint ptr %arrayidx1.9 to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %arrayidx1.9, align 4
  %29 = ptrtoint ptr %28 to i32
  %add.9 = add i32 %add.8, %29
  %arrayidx1.10 = getelementptr ptr, ptr %css, i32 10
  %30 = ptrtoint ptr %arrayidx1.10 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %arrayidx1.10, align 4
  %32 = ptrtoint ptr %31 to i32
  %add.10 = add i32 %add.9, %32
  %arrayidx1.11 = getelementptr ptr, ptr %css, i32 11
  %33 = ptrtoint ptr %arrayidx1.11 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %arrayidx1.11, align 4
  %35 = ptrtoint ptr %34 to i32
  %add.11 = add i32 %add.10, %35
  %arrayidx1.12 = getelementptr ptr, ptr %css, i32 12
  %36 = ptrtoint ptr %arrayidx1.12 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %arrayidx1.12, align 4
  %38 = ptrtoint ptr %37 to i32
  %add.12 = add i32 %add.11, %38
  %arrayidx1.13 = getelementptr ptr, ptr %css, i32 13
  %39 = ptrtoint ptr %arrayidx1.13 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %arrayidx1.13, align 4
  %41 = ptrtoint ptr %40 to i32
  %add.13 = add i32 %add.12, %41
  %shr = lshr i32 %add.13, 16
  %xor = xor i32 %shr, %add.13
  ret i32 %xor
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @cgroup_idr_alloc(ptr noundef %idr, ptr noundef %ptr, i32 noundef %start, i32 noundef %end) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @idr_preload(i32 noundef 3264) #26
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @cgroup_idr_lock) #26
  %call = tail call i32 @idr_alloc(ptr noundef %idr, ptr noundef %ptr, i32 noundef %start, i32 noundef %end, i32 noundef 2240) #26
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @cgroup_idr_lock) #26
  %0 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %3
  %4 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %5, ptrtoint (ptr @radix_tree_preloads to i32)
  %6 = inttoptr i32 %add.i to ptr
  tail call fastcc void @local_lock_release(ptr noundef %6) #26
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !671
  %7 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %sub.i.i = add i32 %10, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i, align 4
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cgroup1_ssid_disabled(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_create_mount_point(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @register_filesystem(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @proc_create_single_data(ptr noundef, i16 noundef zeroext, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @proc_cgroupstats_show(ptr noundef, ptr noundef) #2

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_wq_init() #12 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr (ptr, i32, i32, ...) @alloc_workqueue(ptr noundef nonnull @.str.122, i32 noundef 0, i32 noundef 1) #26
  store ptr %call, ptr @cgroup_destroy_wq, align 4
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %do.body4, label %do.end7, !prof !637

do.body4:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5948, 0\0A.popsection", ""() #26, !srcloc !684
  unreachable

do.end7:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cgroup_path_from_kernfs_id(i64 noundef %id, ptr noundef %buf, i32 noundef %buflen) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @cgrp_dfl_root, align 8
  %call = tail call ptr @kernfs_find_and_get_node_by_id(ptr noundef %0, i64 noundef %id) #26
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %call.i = tail call i32 @kernfs_path_from_node(ptr noundef nonnull %call, ptr noundef null, ptr noundef %buf, i32 noundef %buflen) #26
  tail call void @kernfs_put(ptr noundef nonnull %call) #26
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kernfs_find_and_get_node_by_id(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kernfs_put(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @cgroup_get_from_id(i64 noundef %id) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr @cgrp_dfl_root, align 8
  %call = tail call ptr @kernfs_find_and_get_node_by_id(ptr noundef %0, i64 noundef %id) #26
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.out_crit_edge, label %if.end

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %out

if.end:                                           ; preds = %entry
  %1 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i = and i32 %1, -16384
  %2 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %2, i32 0, i32 1
  %3 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %4, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !639
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #26
  %call.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i, label %if.end.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 696, ptr noundef nonnull @.str.55) #26
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end.rcu_read_lock.exit_crit_edge
  %priv = getelementptr inbounds %struct.kernfs_node, ptr %call, i32 0, i32 9
  %5 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile ptr, ptr %priv, align 8
  %call2 = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end11_crit_edge

rcu_read_lock.exit.do.end11_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end11

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call4 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4)
  %tobool5.not = icmp eq i32 %call4, 0
  br i1 %tobool5.not, label %land.lhs.true.do.end11_crit_edge, label %land.lhs.true6

land.lhs.true.do.end11_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end11

land.lhs.true6:                                   ; preds = %land.lhs.true
  %.b22 = load i1, ptr @cgroup_get_from_id.__warned, align 1
  br i1 %.b22, label %land.lhs.true6.do.end11_crit_edge, label %if.then8

land.lhs.true6.do.end11_crit_edge:                ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end11

if.then8:                                         ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_get_from_id.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 5980, ptr noundef nonnull @.str.22) #26
  br label %do.end11

do.end11:                                         ; preds = %if.then8, %land.lhs.true6.do.end11_crit_edge, %land.lhs.true.do.end11_crit_edge, %rcu_read_lock.exit.do.end11_crit_edge
  %tobool13.not = icmp eq ptr %6, null
  br i1 %tobool13.not, label %do.end11.if.end17_crit_edge, label %land.lhs.true14

do.end11.if.end17_crit_edge:                      ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end17

land.lhs.true14:                                  ; preds = %do.end11
  call void @__sanitizer_cov_trace_pc() #28
  %call15 = tail call fastcc zeroext i1 @cgroup_tryget(ptr noundef nonnull %6)
  %spec.select = select i1 %call15, ptr %6, ptr null
  br label %if.end17

if.end17:                                         ; preds = %land.lhs.true14, %do.end11.if.end17_crit_edge
  %cgrp.0 = phi ptr [ null, %do.end11.if.end17_crit_edge ], [ %spec.select, %land.lhs.true14 ]
  %call.i23 = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i23, label %if.end17.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i26

if.end17.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true.i26:                                ; preds = %if.end17
  %call1.i24 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i24)
  %tobool.not.i25 = icmp eq i32 %call1.i24, 0
  br i1 %tobool.not.i25, label %land.lhs.true.i26.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i28

land.lhs.true.i26.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i26
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true2.i28:                               ; preds = %land.lhs.true.i26
  %.b4.i27 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i27, label %land.lhs.true2.i28.rcu_read_unlock.exit_crit_edge, label %if.then.i29

land.lhs.true2.i28.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i28
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

if.then.i29:                                      ; preds = %land.lhs.true2.i28
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 724, ptr noundef nonnull @.str.57) #26
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i29, %land.lhs.true2.i28.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i26.rcu_read_unlock.exit_crit_edge, %if.end17.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !640
  %7 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i30 = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i.i.i30 to ptr
  %preempt_count.i.i.i.i31 = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i.i.i31 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i.i.i31, align 4
  %sub.i.i.i = add i32 %10, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i31, align 4
  tail call void @rcu_read_unlock_strict() #26
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #26
  tail call void @kernfs_put(ptr noundef nonnull %call) #26
  br label %out

out:                                              ; preds = %rcu_read_unlock.exit, %entry.out_crit_edge
  %cgrp.1 = phi ptr [ %cgrp.0, %rcu_read_unlock.exit ], [ null, %entry.out_crit_edge ]
  ret ptr %cgrp.1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @proc_cgroup_show(ptr noundef %m, ptr nocapture noundef readnone %ns, ptr nocapture noundef readnone %pid, ptr noundef %tsk) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12) to i32))
  %0 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 12), align 4
  %call7.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %0, i32 noundef 3264, i32 noundef 4096) #32
  %tobool.not = icmp eq ptr %call7.i, null
  br i1 %tobool.not, label %entry.cleanup55_crit_edge, label %if.end

entry.cleanup55_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup55

if.end:                                           ; preds = %entry
  tail call void @mutex_lock_nested(ptr noundef nonnull @cgroup_mutex, i32 noundef 0) #26
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %.pn97 = load ptr, ptr @cgroup_roots, align 4
  %cmp.not99 = icmp eq ptr %.pn97, @cgroup_roots
  br i1 %cmp.not99, label %if.end.out_unlock_crit_edge, label %for.body.lr.ph

if.end.out_unlock_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

for.body.lr.ph:                                   ; preds = %if.end
  %flags = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 3
  br label %for.body

for.body:                                         ; preds = %for.inc49.for.body_crit_edge, %for.body.lr.ph
  %.pn102 = phi ptr [ %.pn97, %for.body.lr.ph ], [ %.pn, %for.inc49.for.body_crit_edge ]
  %root.0103 = getelementptr i8, ptr %.pn102, i32 -2076
  %cmp2 = icmp eq ptr %root.0103, @cgrp_dfl_root
  br i1 %cmp2, label %land.lhs.true, label %if.end5

land.lhs.true:                                    ; preds = %for.body
  %.b86 = load i1, ptr @cgrp_dfl_visible, align 1
  br i1 %.b86, label %if.end5.thread, label %land.lhs.true.for.inc49_crit_edge

land.lhs.true.for.inc49_crit_edge:                ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc49

if.end5.thread:                                   ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  %hierarchy_id90 = getelementptr i8, ptr %.pn102, i32 -2068
  %1 = ptrtoint ptr %hierarchy_id90 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %hierarchy_id90, align 8
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.23, i32 noundef %2) #26
  br label %if.end17

if.end5:                                          ; preds = %for.body
  %hierarchy_id = getelementptr i8, ptr %.pn102, i32 -2068
  %3 = ptrtoint ptr %hierarchy_id to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %hierarchy_id, align 8
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.23, i32 noundef %4) #26
  %subsys_mask = getelementptr i8, ptr %.pn102, i32 -2072
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc.land.rhs_crit_edge, %if.end5
  %count.096 = phi i32 [ 0, %if.end5 ], [ %count.1, %for.inc.land.rhs_crit_edge ]
  %ssid.094 = phi i32 [ 0, %if.end5 ], [ %inc16, %for.inc.land.rhs_crit_edge ]
  %5 = ptrtoint ptr %subsys_mask to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %subsys_mask, align 4
  %shl = shl nuw nsw i32 1, %ssid.094
  %and = and i32 %6, %shl
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool12.not = icmp eq i32 %and, 0
  br i1 %tobool12.not, label %land.rhs.for.inc_crit_edge, label %if.then13

land.rhs.for.inc_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

if.then13:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  %arrayidx = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %ssid.094
  %7 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx, align 4
  %inc = add i32 %count.096, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count.096)
  %tobool14.not = icmp eq i32 %count.096, 0
  %cond = select i1 %tobool14.not, ptr @.str.26, ptr @.str.25
  %legacy_name = getelementptr inbounds %struct.cgroup_subsys, ptr %8, i32 0, i32 21
  %9 = ptrtoint ptr %legacy_name to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %legacy_name, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.24, ptr noundef nonnull %cond, ptr noundef %10) #26
  br label %for.inc

for.inc:                                          ; preds = %if.then13, %land.rhs.for.inc_crit_edge
  %count.1 = phi i32 [ %inc, %if.then13 ], [ %count.096, %land.rhs.for.inc_crit_edge ]
  %inc16 = add nuw nsw i32 %ssid.094, 1
  %exitcond.not = icmp eq i32 %inc16, 14
  br i1 %exitcond.not, label %for.inc.if.end17_crit_edge, label %for.inc.land.rhs_crit_edge

for.inc.land.rhs_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs

for.inc.if.end17_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end17

if.end17:                                         ; preds = %for.inc.if.end17_crit_edge, %if.end5.thread
  %count.2 = phi i32 [ 0, %if.end5.thread ], [ %count.1, %for.inc.if.end17_crit_edge ]
  %name = getelementptr i8, ptr %.pn102, i32 4108
  %11 = ptrtoint ptr %name to i32
  call void @__asan_load1_noabort(i32 %11)
  %char0 = load i8, ptr %name, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %char0)
  %tobool19.not = icmp eq i8 %char0, 0
  br i1 %tobool19.not, label %if.end17.if.end25_crit_edge, label %if.then20

if.end17.if.end25_crit_edge:                      ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end25

if.then20:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #28
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %count.2)
  %tobool21.not = icmp eq i32 %count.2, 0
  %cond22 = select i1 %tobool21.not, ptr @.str.26, ptr @.str.25
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.27, ptr noundef nonnull %cond22, ptr noundef %name) #26
  br label %if.end25

if.end25:                                         ; preds = %if.then20, %if.end17.if.end25_crit_edge
  tail call void @seq_putc(ptr noundef %m, i8 noundef zeroext 58) #26
  %call26 = tail call ptr @task_cgroup_from_root(ptr noundef %tsk, ptr noundef %root.0103)
  %root.i = getelementptr inbounds %struct.cgroup, ptr %call26, i32 0, i32 19
  %12 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %root.i, align 4
  %cmp.i = icmp eq ptr %13, @cgrp_dfl_root
  br i1 %cmp.i, label %if.end25.if.then30_crit_edge, label %lor.lhs.false

if.end25.if.then30_crit_edge:                     ; preds = %if.end25
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then30

lor.lhs.false:                                    ; preds = %if.end25
  %14 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags, align 4
  %and28 = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and28)
  %tobool29.not = icmp eq i32 %and28, 0
  br i1 %tobool29.not, label %lor.lhs.false.if.then30_crit_edge, label %lor.lhs.false.if.end39_crit_edge

lor.lhs.false.if.end39_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end39

lor.lhs.false.if.then30_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then30

if.then30:                                        ; preds = %lor.lhs.false.if.then30_crit_edge, %if.end25.if.then30_crit_edge
  %16 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i = and i32 %16, -16384
  %17 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %17, i32 0, i32 2
  %18 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %task, align 8
  %nsproxy = getelementptr inbounds %struct.task_struct, ptr %19, i32 0, i32 110
  %20 = ptrtoint ptr %nsproxy to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %nsproxy, align 4
  %cgroup_ns = getelementptr inbounds %struct.nsproxy, ptr %21, i32 0, i32 8
  %22 = ptrtoint ptr %cgroup_ns to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %cgroup_ns, align 4
  %root_cset.i = getelementptr inbounds %struct.cgroup_namespace, ptr %23, i32 0, i32 3
  %24 = ptrtoint ptr %root_cset.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %root_cset.i, align 4
  %call.i = tail call fastcc ptr @cset_cgroup_from_root(ptr noundef %25, ptr noundef %13) #26
  %kn.i = getelementptr inbounds %struct.cgroup, ptr %call26, i32 0, i32 11
  %26 = ptrtoint ptr %kn.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %kn.i, align 8
  %kn2.i = getelementptr inbounds %struct.cgroup, ptr %call.i, i32 0, i32 11
  %28 = ptrtoint ptr %kn2.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %kn2.i, align 8
  %call3.i = tail call i32 @kernfs_path_from_node(ptr noundef %27, ptr noundef %29, ptr noundef nonnull %call7.i, i32 noundef 4096) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 4095, i32 %call3.i)
  %cmp33 = icmp sgt i32 %call3.i, 4095
  %spec.store.select = select i1 %cmp33, i32 -36, i32 %call3.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %spec.store.select)
  %cmp36 = icmp slt i32 %spec.store.select, 0
  br i1 %cmp36, label %if.then30.out_unlock_crit_edge, label %if.then30.if.end39_crit_edge

if.then30.if.end39_crit_edge:                     ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end39

if.then30.out_unlock_crit_edge:                   ; preds = %if.then30
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

if.end39:                                         ; preds = %if.then30.if.end39_crit_edge, %lor.lhs.false.if.end39_crit_edge
  %.str.13.sink = phi ptr [ %call7.i, %if.then30.if.end39_crit_edge ], [ @.str.13, %lor.lhs.false.if.end39_crit_edge ]
  tail call void @seq_puts(ptr noundef %m, ptr noundef nonnull %.str.13.sink) #26
  %30 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %root.i, align 4
  %cmp.i88 = icmp eq ptr %31, @cgrp_dfl_root
  br i1 %cmp.i88, label %land.lhs.true41, label %if.end39.if.else44_crit_edge

if.end39.if.else44_crit_edge:                     ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.else44

land.lhs.true41:                                  ; preds = %if.end39
  %flags.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call26, i32 0, i32 7
  %32 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %flags.i, align 4
  %and.i89 = and i32 %33, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i89)
  %tobool.not.i = icmp eq i32 %and.i89, 0
  br i1 %tobool.not.i, label %if.then43, label %land.lhs.true41.if.else44_crit_edge

land.lhs.true41.if.else44_crit_edge:              ; preds = %land.lhs.true41
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.else44

if.then43:                                        ; preds = %land.lhs.true41
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @seq_puts(ptr noundef %m, ptr noundef nonnull @.str.28) #26
  br label %for.inc49

if.else44:                                        ; preds = %land.lhs.true41.if.else44_crit_edge, %if.end39.if.else44_crit_edge
  tail call void @seq_putc(ptr noundef %m, i8 noundef zeroext 10) #26
  br label %for.inc49

for.inc49:                                        ; preds = %if.else44, %if.then43, %land.lhs.true.for.inc49_crit_edge
  %34 = ptrtoint ptr %.pn102 to i32
  call void @__asan_load4_noabort(i32 %34)
  %.pn = load ptr, ptr %.pn102, align 4
  %cmp.not = icmp eq ptr %.pn, @cgroup_roots
  br i1 %cmp.not, label %for.inc49.out_unlock_crit_edge, label %for.inc49.for.body_crit_edge

for.inc49.for.body_crit_edge:                     ; preds = %for.inc49
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

for.inc49.out_unlock_crit_edge:                   ; preds = %for.inc49
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

out_unlock:                                       ; preds = %for.inc49.out_unlock_crit_edge, %if.then30.out_unlock_crit_edge, %if.end.out_unlock_crit_edge
  %retval1.3 = phi i32 [ 0, %if.end.out_unlock_crit_edge ], [ %spec.store.select, %if.then30.out_unlock_crit_edge ], [ 0, %for.inc49.out_unlock_crit_edge ]
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  tail call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  tail call void @kfree(ptr noundef nonnull %call7.i) #26
  br label %cleanup55

cleanup55:                                        ; preds = %out_unlock, %entry.cleanup55_crit_edge
  %retval.0 = phi i32 [ %retval1.3, %out_unlock ], [ -12, %entry.cleanup55_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_putc(ptr noundef, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_puts(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: argmemonly nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cgroup_fork(ptr noundef %child) local_unnamed_addr #14 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %cgroups = getelementptr inbounds %struct.task_struct, ptr %child, i32 0, i32 164
  %0 = ptrtoint ptr %cgroups to i32
  call void @__asan_store4_noabort(i32 %0)
  store volatile ptr @init_css_set, ptr %cgroups, align 16
  %cg_list = getelementptr inbounds %struct.task_struct, ptr %child, i32 0, i32 165
  %1 = ptrtoint ptr %cg_list to i32
  call void @__asan_store4_noabort(i32 %1)
  store volatile ptr %cg_list, ptr %cg_list, align 4
  %prev.i = getelementptr inbounds %struct.task_struct, ptr %child, i32 0, i32 165, i32 1
  %2 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %cg_list, ptr %prev.i, align 4
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_can_fork(ptr noundef %child, ptr nocapture noundef %kargs) local_unnamed_addr #0 align 64 {
entry:
  %__ss_mask = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %kargs to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %kargs, align 8
  %and.i = and i64 %1, 8589934592
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and.i)
  %tobool.not.i = icmp eq i64 %and.i, 0
  br i1 %tobool.not.i, label %entry.if.end.i_crit_edge, label %if.then.i

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @mutex_lock_nested(ptr noundef nonnull @cgroup_mutex, i32 noundef 0) #26
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %entry.if.end.i_crit_edge
  %2 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 2
  tail call void @__might_sleep(ptr noundef nonnull @.str.123, i32 noundef 49) #26
  %4 = tail call ptr @llvm.returnaddress(i32 0) #26
  %5 = ptrtoint ptr %4 to i32
  tail call void @lock_acquire(ptr noundef getelementptr inbounds (%struct.percpu_rw_semaphore, ptr @cgroup_threadgroup_rwsem, i32 0, i32 5), i32 noundef 0, i32 noundef 0, i32 noundef 1, i32 noundef 1, ptr noundef null, i32 noundef %5) #26
  %6 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i.i = and i32 %6, -16384
  %7 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %7, i32 0, i32 1
  %8 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %9, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !685
  %call.i.i.i.i = tail call i32 @rcu_read_lock_any_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool.not.i.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %land.lhs.true.i.i.i.i, label %if.end.i.rcu_sync_is_idle.exit.i.i.i_crit_edge

if.end.i.rcu_sync_is_idle.exit.i.i.i_crit_edge:   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_sync_is_idle.exit.i.i.i

land.lhs.true.i.i.i.i:                            ; preds = %if.end.i
  %call1.i.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i.i)
  %tobool2.not.i.i.i.i = icmp eq i32 %call1.i.i.i.i, 0
  br i1 %tobool2.not.i.i.i.i, label %land.lhs.true.i.i.i.i.rcu_sync_is_idle.exit.i.i.i_crit_edge, label %land.lhs.true3.i.i.i.i

land.lhs.true.i.i.i.i.rcu_sync_is_idle.exit.i.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_sync_is_idle.exit.i.i.i

land.lhs.true3.i.i.i.i:                           ; preds = %land.lhs.true.i.i.i.i
  %.b1.i.i.i.i = load i1, ptr @rcu_sync_is_idle.__warned, align 1
  br i1 %.b1.i.i.i.i, label %land.lhs.true3.i.i.i.i.rcu_sync_is_idle.exit.i.i.i_crit_edge, label %if.then.i.i.i.i

land.lhs.true3.i.i.i.i.rcu_sync_is_idle.exit.i.i.i_crit_edge: ; preds = %land.lhs.true3.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_sync_is_idle.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %land.lhs.true3.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_sync_is_idle.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.124, i32 noundef 35, ptr noundef nonnull @.str.125) #26
  br label %rcu_sync_is_idle.exit.i.i.i

rcu_sync_is_idle.exit.i.i.i:                      ; preds = %if.then.i.i.i.i, %land.lhs.true3.i.i.i.i.rcu_sync_is_idle.exit.i.i.i_crit_edge, %land.lhs.true.i.i.i.i.rcu_sync_is_idle.exit.i.i.i_crit_edge, %if.end.i.rcu_sync_is_idle.exit.i.i.i_crit_edge
  %10 = load volatile i32, ptr @cgroup_threadgroup_rwsem, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool7.not.i.i.i.i = icmp eq i32 %10, 0
  br i1 %tobool7.not.i.i.i.i, label %do.body7.i.i.i, label %if.else.i.i.i, !prof !636

do.body7.i.i.i:                                   ; preds = %rcu_sync_is_idle.exit.i.i.i
  %11 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #26, !srcloc !641
  %12 = load ptr, ptr getelementptr inbounds (%struct.percpu_rw_semaphore, ptr @cgroup_threadgroup_rwsem, i32 0, i32 1), align 4
  %13 = ptrtoint ptr %12 to i32
  %14 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i = and i32 %14, -16384
  %15 = inttoptr i32 %and.i.i.i.i to ptr
  %cpu.i.i.i = getelementptr inbounds %struct.thread_info, ptr %15, i32 0, i32 3
  %16 = ptrtoint ptr %cpu.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %cpu.i.i.i, align 4
  %arrayidx.i.i.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %17
  %18 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %arrayidx.i.i.i, align 4
  %add.i.i.i = add i32 %19, %13
  %20 = inttoptr i32 %add.i.i.i to ptr
  %21 = ptrtoint ptr %20 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %20, align 4
  %add21.i.i.i = add i32 %22, 1
  store i32 %add21.i.i.i, ptr %20, align 4
  %23 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #26, !srcloc !642
  %and.i.i.i.i.i = and i32 %23, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i.i.i)
  %tobool32.not.i.i.i = icmp eq i32 %and.i.i.i.i.i, 0
  br i1 %tobool32.not.i.i.i, label %if.then41.i.i.i, label %do.body7.i.i.i.do.end43.i.i.i_crit_edge, !prof !637

do.body7.i.i.i.do.end43.i.i.i_crit_edge:          ; preds = %do.body7.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end43.i.i.i

if.then41.i.i.i:                                  ; preds = %do.body7.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @warn_bogus_irq_restore() #26
  br label %do.end43.i.i.i

do.end43.i.i.i:                                   ; preds = %if.then41.i.i.i, %do.body7.i.i.i.do.end43.i.i.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %11) #26, !srcloc !643
  br label %cgroup_threadgroup_change_begin.exit.i

if.else.i.i.i:                                    ; preds = %rcu_sync_is_idle.exit.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %call50.i.i.i = tail call zeroext i1 @__percpu_down_read(ptr noundef nonnull @cgroup_threadgroup_rwsem, i1 noundef zeroext false) #26
  br label %cgroup_threadgroup_change_begin.exit.i

cgroup_threadgroup_change_begin.exit.i:           ; preds = %if.else.i.i.i, %do.end43.i.i.i
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !686
  %24 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i1.i.i.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i1.i.i.i to ptr
  %preempt_count.i.i2.i.i.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i2.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i2.i.i.i, align 4
  %sub.i.i.i.i = add i32 %27, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i2.i.i.i, align 4
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %28 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %task.i, align 8
  %cgroups.i.i = getelementptr inbounds %struct.task_struct, ptr %29, i32 0, i32 164
  %30 = ptrtoint ptr %cgroups.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load volatile ptr, ptr %cgroups.i.i, align 16
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i, label %lor.lhs.false.i.i, label %cgroup_threadgroup_change_begin.exit.i.task_css_set.exit.i_crit_edge

cgroup_threadgroup_change_begin.exit.i.task_css_set.exit.i_crit_edge: ; preds = %cgroup_threadgroup_change_begin.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit.i

lor.lhs.false.i.i:                                ; preds = %cgroup_threadgroup_change_begin.exit.i
  %call.i18.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i18.i.i)
  %tobool3.not.i.i = icmp eq i32 %call.i18.i.i, 0
  br i1 %tobool3.not.i.i, label %lor.lhs.false4.i.i, label %lor.lhs.false.i.i.task_css_set.exit.i_crit_edge

lor.lhs.false.i.i.task_css_set.exit.i_crit_edge:  ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit.i

lor.lhs.false4.i.i:                               ; preds = %lor.lhs.false.i.i
  %flags.i.i = getelementptr inbounds %struct.task_struct, ptr %29, i32 0, i32 3
  %32 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load i32, ptr %flags.i.i, align 4
  %and.i89.i = and i32 %33, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i89.i)
  %tobool5.not.i.i = icmp eq i32 %and.i89.i, 0
  br i1 %tobool5.not.i.i, label %lor.lhs.false6.i.i, label %lor.lhs.false4.i.i.task_css_set.exit.i_crit_edge

lor.lhs.false4.i.i.task_css_set.exit.i_crit_edge: ; preds = %lor.lhs.false4.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit.i

lor.lhs.false6.i.i:                               ; preds = %lor.lhs.false4.i.i
  %call7.i.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i.i)
  %tobool8.not.i.i = icmp eq i32 %call7.i.i, 0
  br i1 %tobool8.not.i.i, label %land.lhs.true.i.i, label %lor.lhs.false6.i.i.task_css_set.exit.i_crit_edge

lor.lhs.false6.i.i.task_css_set.exit.i_crit_edge: ; preds = %lor.lhs.false6.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit.i

land.lhs.true.i.i:                                ; preds = %lor.lhs.false6.i.i
  %call9.i.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i.i)
  %tobool10.not.i.i = icmp eq i32 %call9.i.i, 0
  br i1 %tobool10.not.i.i, label %land.lhs.true.i.i.task_css_set.exit.i_crit_edge, label %land.lhs.true11.i.i

land.lhs.true.i.i.task_css_set.exit.i_crit_edge:  ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit.i

land.lhs.true11.i.i:                              ; preds = %land.lhs.true.i.i
  %.b17.i.i = load i1, ptr @task_css_set.__warned, align 1
  br i1 %.b17.i.i, label %land.lhs.true11.i.i.task_css_set.exit.i_crit_edge, label %if.then.i.i

land.lhs.true11.i.i.task_css_set.exit.i_crit_edge: ; preds = %land.lhs.true11.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true11.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @task_css_set.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 481, ptr noundef nonnull @.str.22) #26
  br label %task_css_set.exit.i

task_css_set.exit.i:                              ; preds = %if.then.i.i, %land.lhs.true11.i.i.task_css_set.exit.i_crit_edge, %land.lhs.true.i.i.task_css_set.exit.i_crit_edge, %lor.lhs.false6.i.i.task_css_set.exit.i_crit_edge, %lor.lhs.false4.i.i.task_css_set.exit.i_crit_edge, %lor.lhs.false.i.i.task_css_set.exit.i_crit_edge, %cgroup_threadgroup_change_begin.exit.i.task_css_set.exit.i_crit_edge
  %refcount.i.i = getelementptr inbounds %struct.css_set, ptr %31, i32 0, i32 1
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i.i, i32 noundef 4) #26
  tail call void @llvm.prefetch.p0(ptr %refcount.i.i, i32 1, i32 3, i32 1) #26
  %34 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i.i, ptr %refcount.i.i, i32 1, ptr elementtype(i32) %refcount.i.i) #26, !srcloc !663
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %34, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %task_css_set.exit.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !637

task_css_set.exit.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %task_css_set.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %task_css_set.exit.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %35 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %35)
  %.not.i.i.i.i.i = icmp sgt i32 %35, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.get_css_set.exit.i_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !636

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.get_css_set.exit.i_crit_edge:   ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %get_css_set.exit.i

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %task_css_set.exit.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %task_css_set.exit.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i.i, i32 noundef %.sink.i.i.i.i.i) #26
  br label %get_css_set.exit.i

get_css_set.exit.i:                               ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.get_css_set.exit.i_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  %36 = ptrtoint ptr %kargs to i32
  call void @__asan_load8_noabort(i32 %36)
  %37 = load i64, ptr %kargs, align 8
  %and5.i = and i64 %37, 8589934592
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and5.i)
  %tobool6.not.i = icmp eq i64 %and5.i, 0
  br i1 %tobool6.not.i, label %if.then7.i, label %if.end9.i

if.then7.i:                                       ; preds = %get_css_set.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  %cset8.i = getelementptr inbounds %struct.kernel_clone_args, ptr %kargs, i32 0, i32 13
  %38 = ptrtoint ptr %cset8.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %31, ptr %cset8.i, align 8
  br label %do.body

if.end9.i:                                        ; preds = %get_css_set.exit.i
  %cgroup.i = getelementptr inbounds %struct.kernel_clone_args, ptr %kargs, i32 0, i32 10
  %39 = ptrtoint ptr %cgroup.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load i32, ptr %cgroup.i, align 4
  %call10.i = tail call ptr @fget_raw(i32 noundef %40) #26
  %tobool11.not.i = icmp eq ptr %call10.i, null
  br i1 %tobool11.not.i, label %if.end9.i.err.i_crit_edge, label %if.end13.i

if.end9.i.err.i_crit_edge:                        ; preds = %if.end9.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %err.i

if.end13.i:                                       ; preds = %if.end9.i
  %dentry.i = getelementptr inbounds %struct.file, ptr %call10.i, i32 0, i32 1, i32 1
  %41 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %dentry.i, align 4
  %d_sb.i = getelementptr inbounds %struct.dentry, ptr %42, i32 0, i32 9
  %43 = ptrtoint ptr %d_sb.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load ptr, ptr %d_sb.i, align 4
  %call.i.i = tail call ptr @css_tryget_online_from_dir(ptr noundef %42, ptr noundef null) #26
  %cmp.i.i.i = icmp ugt ptr %call.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i.i, label %if.end13.i.cgroup_get_from_file.exit.i_crit_edge, label %if.end.i.i

if.end13.i.cgroup_get_from_file.exit.i_crit_edge: ; preds = %if.end13.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_get_from_file.exit.i

if.end.i.i:                                       ; preds = %if.end13.i
  %45 = ptrtoint ptr %call.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %call.i.i, align 8
  %root.i.i.i = getelementptr inbounds %struct.cgroup, ptr %46, i32 0, i32 19
  %47 = ptrtoint ptr %root.i.i.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %root.i.i.i, align 4
  %cmp.i12.i.i = icmp eq ptr %48, @cgrp_dfl_root
  br i1 %cmp.i12.i.i, label %if.end.i.i.cgroup_get_from_file.exit.i_crit_edge, label %if.then4.i.i

if.end.i.i.cgroup_get_from_file.exit.i_crit_edge: ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_get_from_file.exit.i

if.then4.i.i:                                     ; preds = %if.end.i.i
  %flags.i.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %46, i32 0, i32 7
  %49 = ptrtoint ptr %flags.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load i32, ptr %flags.i.i.i.i, align 4
  %and.i.i.i90.i = and i32 %50, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i90.i)
  %tobool.not.i.i.i91.i = icmp eq i32 %and.i.i.i90.i, 0
  br i1 %tobool.not.i.i.i91.i, label %if.then.i.i.i92.i, label %if.then4.i.i.if.then16.i_crit_edge

if.then4.i.i.if.then16.i_crit_edge:               ; preds = %if.then4.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then16.i

if.then.i.i.i92.i:                                ; preds = %if.then4.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %46, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i.i.i) #26
  br label %if.then16.i

cgroup_get_from_file.exit.i:                      ; preds = %if.end.i.i.cgroup_get_from_file.exit.i_crit_edge, %if.end13.i.cgroup_get_from_file.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %46, %if.end.i.i.cgroup_get_from_file.exit.i_crit_edge ], [ %call.i.i, %if.end13.i.cgroup_get_from_file.exit.i_crit_edge ]
  %cmp.i.i = icmp ugt ptr %retval.0.i.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %cgroup_get_from_file.exit.i.if.then16.i_crit_edge, label %if.end18.i

cgroup_get_from_file.exit.i.if.then16.i_crit_edge: ; preds = %cgroup_get_from_file.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then16.i

if.then16.i:                                      ; preds = %cgroup_get_from_file.exit.i.if.then16.i_crit_edge, %if.then.i.i.i92.i, %if.then4.i.i.if.then16.i_crit_edge
  %retval.0.i109.i = phi ptr [ %retval.0.i.i, %cgroup_get_from_file.exit.i.if.then16.i_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.then4.i.i.if.then16.i_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.then.i.i.i92.i ]
  %51 = ptrtoint ptr %retval.0.i109.i to i32
  br label %err.i

if.end18.i:                                       ; preds = %cgroup_get_from_file.exit.i
  %flags.i93.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %retval.0.i.i, i32 0, i32 7
  %52 = ptrtoint ptr %flags.i93.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %flags.i93.i, align 4
  %and.i94.i = and i32 %53, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i94.i)
  %tobool.not.i95.i = icmp eq i32 %and.i94.i, 0
  br i1 %tobool.not.i95.i, label %if.end18.i.err.i_crit_edge, label %if.end21.i

if.end18.i.err.i_crit_edge:                       ; preds = %if.end18.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %err.i

if.end21.i:                                       ; preds = %if.end18.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %54 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %54)
  %tobool.not.i96.i = icmp eq i32 %54, 0
  br i1 %tobool.not.i96.i, label %if.end21.i.if.end.i98.i_crit_edge, label %land.rhs.i.i

if.end21.i.if.end.i98.i_crit_edge:                ; preds = %if.end21.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i98.i

land.rhs.i.i:                                     ; preds = %if.end21.i
  %call.i.i97.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i97.i)
  %cmp.not.i.i = icmp eq i32 %call.i.i97.i, 0
  br i1 %cmp.not.i.i, label %do.end.i.i, label %land.rhs.i.i.if.end.i98.i_crit_edge, !prof !637

land.rhs.i.i.if.end.i98.i_crit_edge:              ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i98.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 4855, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i98.i

if.end.i98.i:                                     ; preds = %do.end.i.i, %land.rhs.i.i.if.end.i98.i_crit_edge, %if.end21.i.if.end.i98.i_crit_edge
  %procs_file.i.i = getelementptr inbounds %struct.cgroup, ptr %retval.0.i.i, i32 0, i32 12
  %55 = ptrtoint ptr %procs_file.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %procs_file.i.i, align 4
  %call24.i.i = tail call ptr @kernfs_get_inode(ptr noundef %44, ptr noundef %56) #26
  %tobool25.not.i.i = icmp eq ptr %call24.i.i, null
  br i1 %tobool25.not.i.i, label %if.end.i98.i.err.i_crit_edge, label %cgroup_may_write.exit.i

if.end.i98.i.err.i_crit_edge:                     ; preds = %if.end.i98.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %err.i

cgroup_may_write.exit.i:                          ; preds = %if.end.i98.i
  %call28.i.i = tail call i32 @inode_permission(ptr noundef nonnull @init_user_ns, ptr noundef nonnull %call24.i.i, i32 noundef 2) #26
  tail call void @iput(ptr noundef nonnull %call24.i.i) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28.i.i)
  %tobool23.not.i = icmp eq i32 %call28.i.i, 0
  br i1 %tobool23.not.i, label %if.end25.i, label %cgroup_may_write.exit.i.err.i_crit_edge

cgroup_may_write.exit.i.err.i_crit_edge:          ; preds = %cgroup_may_write.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %err.i

if.end25.i:                                       ; preds = %cgroup_may_write.exit.i
  %dfl_cgrp.i = getelementptr inbounds %struct.css_set, ptr %31, i32 0, i32 3
  %57 = ptrtoint ptr %dfl_cgrp.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %dfl_cgrp.i, align 4
  %59 = ptrtoint ptr %kargs to i32
  call void @__asan_load8_noabort(i32 %59)
  %60 = load i64, ptr %kargs, align 8
  %and27.i = and i64 %60, 65536
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and27.i)
  %tobool28.not.i = icmp eq i64 %and27.i, 0
  %61 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load ptr, ptr %task.i, align 8
  %nsproxy.i = getelementptr inbounds %struct.task_struct, ptr %62, i32 0, i32 110
  %63 = ptrtoint ptr %nsproxy.i to i32
  call void @__asan_load4_noabort(i32 %63)
  %64 = load ptr, ptr %nsproxy.i, align 4
  %cgroup_ns.i = getelementptr inbounds %struct.nsproxy, ptr %64, i32 0, i32 8
  %65 = ptrtoint ptr %cgroup_ns.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %cgroup_ns.i, align 4
  %call31.i = tail call fastcc i32 @cgroup_attach_permissions(ptr noundef %58, ptr noundef %retval.0.i.i, ptr noundef %44, i1 noundef zeroext %tobool28.not.i, ptr noundef %66) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31.i)
  %tobool32.not.i = icmp eq i32 %call31.i, 0
  br i1 %tobool32.not.i, label %if.end34.i, label %if.end25.i.err.i_crit_edge

if.end25.i.err.i_crit_edge:                       ; preds = %if.end25.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %err.i

if.end34.i:                                       ; preds = %if.end25.i
  %call35.i = tail call fastcc ptr @find_css_set(ptr noundef %31, ptr noundef %retval.0.i.i) #26
  %cset36.i = getelementptr inbounds %struct.kernel_clone_args, ptr %kargs, i32 0, i32 13
  %67 = ptrtoint ptr %cset36.i to i32
  call void @__asan_store4_noabort(i32 %67)
  store ptr %call35.i, ptr %cset36.i, align 8
  %tobool38.not.i = icmp eq ptr %call35.i, null
  br i1 %tobool38.not.i, label %if.end34.i.err.i_crit_edge, label %if.end40.i

if.end34.i.err.i_crit_edge:                       ; preds = %if.end34.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %err.i

if.end40.i:                                       ; preds = %if.end34.i
  %call.i = tail call zeroext i1 @refcount_dec_not_one(ptr noundef %refcount.i.i) #26
  br i1 %call.i, label %if.end40.i.put_css_set.exit_crit_edge, label %do.body1.i

if.end40.i.put_css_set.exit_crit_edge:            ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %put_css_set.exit

do.body1.i:                                       ; preds = %if.end40.i
  call void @__sanitizer_cov_trace_pc() #28
  %call3.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @css_set_lock) #26
  tail call void @put_css_set_locked(ptr noundef %31) #26
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @css_set_lock, i32 noundef %call3.i) #26
  br label %put_css_set.exit

put_css_set.exit:                                 ; preds = %do.body1.i, %if.end40.i.put_css_set.exit_crit_edge
  tail call void @fput(ptr noundef nonnull %call10.i) #26
  %cgrp.i = getelementptr inbounds %struct.kernel_clone_args, ptr %kargs, i32 0, i32 12
  %68 = ptrtoint ptr %cgrp.i to i32
  call void @__asan_store4_noabort(i32 %68)
  store ptr %retval.0.i.i, ptr %cgrp.i, align 4
  br label %do.body

err.i:                                            ; preds = %if.end34.i.err.i_crit_edge, %if.end25.i.err.i_crit_edge, %cgroup_may_write.exit.i.err.i_crit_edge, %if.end.i98.i.err.i_crit_edge, %if.end18.i.err.i_crit_edge, %if.then16.i, %if.end9.i.err.i_crit_edge
  %ret.0.i = phi i32 [ %51, %if.then16.i ], [ %call28.i.i, %cgroup_may_write.exit.i.err.i_crit_edge ], [ %call31.i, %if.end25.i.err.i_crit_edge ], [ -9, %if.end9.i.err.i_crit_edge ], [ -19, %if.end18.i.err.i_crit_edge ], [ -12, %if.end34.i.err.i_crit_edge ], [ -12, %if.end.i98.i.err.i_crit_edge ]
  %dst_cgrp.0.i = phi ptr [ null, %if.then16.i ], [ %retval.0.i.i, %cgroup_may_write.exit.i.err.i_crit_edge ], [ %retval.0.i.i, %if.end25.i.err.i_crit_edge ], [ null, %if.end9.i.err.i_crit_edge ], [ %retval.0.i.i, %if.end18.i.err.i_crit_edge ], [ %retval.0.i.i, %if.end34.i.err.i_crit_edge ], [ %retval.0.i.i, %if.end.i98.i.err.i_crit_edge ]
  tail call fastcc void @cgroup_threadgroup_change_end() #26
  tail call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  br i1 %tobool11.not.i, label %err.i.if.end45.i_crit_edge, label %if.then44.i

err.i.if.end45.i_crit_edge:                       ; preds = %err.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end45.i

if.then44.i:                                      ; preds = %err.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @fput(ptr noundef nonnull %call10.i) #26
  br label %if.end45.i

if.end45.i:                                       ; preds = %if.then44.i, %err.i.if.end45.i_crit_edge
  %tobool46.not.i = icmp eq ptr %dst_cgrp.0.i, null
  br i1 %tobool46.not.i, label %if.end45.i.if.end48.i_crit_edge, label %if.then47.i

if.end45.i.if.end48.i_crit_edge:                  ; preds = %if.end45.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end48.i

if.then47.i:                                      ; preds = %if.end45.i
  %flags.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %dst_cgrp.0.i, i32 0, i32 7
  %69 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %flags.i.i.i, align 4
  %and.i.i.i = and i32 %70, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.then47.i.if.end48.i_crit_edge

if.then47.i.if.end48.i_crit_edge:                 ; preds = %if.then47.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end48.i

if.then.i.i.i:                                    ; preds = %if.then47.i
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %dst_cgrp.0.i, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i.i) #26
  br label %if.end48.i

if.end48.i:                                       ; preds = %if.then.i.i.i, %if.then47.i.if.end48.i_crit_edge, %if.end45.i.if.end48.i_crit_edge
  %call.i101.i = tail call zeroext i1 @refcount_dec_not_one(ptr noundef %refcount.i.i) #26
  br i1 %call.i101.i, label %if.end48.i.put_css_set.exit.i_crit_edge, label %do.body1.i.i

if.end48.i.put_css_set.exit.i_crit_edge:          ; preds = %if.end48.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %put_css_set.exit.i

do.body1.i.i:                                     ; preds = %if.end48.i
  call void @__sanitizer_cov_trace_pc() #28
  %call3.i.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @css_set_lock) #26
  tail call void @put_css_set_locked(ptr noundef %31) #26
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @css_set_lock, i32 noundef %call3.i.i) #26
  br label %put_css_set.exit.i

put_css_set.exit.i:                               ; preds = %do.body1.i.i, %if.end48.i.put_css_set.exit.i_crit_edge
  %cset49.i = getelementptr inbounds %struct.kernel_clone_args, ptr %kargs, i32 0, i32 13
  %71 = ptrtoint ptr %cset49.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load ptr, ptr %cset49.i, align 8
  %tobool50.not.i = icmp eq ptr %72, null
  br i1 %tobool50.not.i, label %put_css_set.exit.i.cgroup_css_set_fork.exit_crit_edge, label %if.then51.i

put_css_set.exit.i.cgroup_css_set_fork.exit_crit_edge: ; preds = %put_css_set.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css_set_fork.exit

if.then51.i:                                      ; preds = %put_css_set.exit.i
  %refcount.i102.i = getelementptr inbounds %struct.css_set, ptr %72, i32 0, i32 1
  %call.i103.i = tail call zeroext i1 @refcount_dec_not_one(ptr noundef %refcount.i102.i) #26
  br i1 %call.i103.i, label %if.then51.i.cgroup_css_set_fork.exit_crit_edge, label %do.body1.i105.i

if.then51.i.cgroup_css_set_fork.exit_crit_edge:   ; preds = %if.then51.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css_set_fork.exit

do.body1.i105.i:                                  ; preds = %if.then51.i
  call void @__sanitizer_cov_trace_pc() #28
  %call3.i104.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @css_set_lock) #26
  tail call void @put_css_set_locked(ptr noundef nonnull %72) #26
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @css_set_lock, i32 noundef %call3.i104.i) #26
  br label %cgroup_css_set_fork.exit

cgroup_css_set_fork.exit:                         ; preds = %do.body1.i105.i, %if.then51.i.cgroup_css_set_fork.exit_crit_edge, %put_css_set.exit.i.cgroup_css_set_fork.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0.i)
  %tobool.not = icmp eq i32 %ret.0.i, 0
  br i1 %tobool.not, label %cgroup_css_set_fork.exit.do.body_crit_edge, label %cgroup_css_set_fork.exit.cleanup25_crit_edge

cgroup_css_set_fork.exit.cleanup25_crit_edge:     ; preds = %cgroup_css_set_fork.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup25

cgroup_css_set_fork.exit.do.body_crit_edge:       ; preds = %cgroup_css_set_fork.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body

do.body:                                          ; preds = %cgroup_css_set_fork.exit.do.body_crit_edge, %put_css_set.exit, %if.then7.i
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__ss_mask) #26
  %73 = load i16, ptr @have_canfork_callback, align 2
  %conv = zext i16 %73 to i32
  %74 = ptrtoint ptr %__ss_mask to i32
  call void @__asan_store4_noabort(i32 %74)
  store i32 %conv, ptr %__ss_mask, align 4
  %call1 = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask, i32 noundef 14, i32 noundef 0) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %call1)
  %cmp50 = icmp slt i32 %call1, 14
  br i1 %cmp50, label %for.body.lr.ph, label %do.body.cleanup.thread_crit_edge

do.body.cleanup.thread_crit_edge:                 ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup.thread

for.body.lr.ph:                                   ; preds = %do.body
  %cset = getelementptr inbounds %struct.kernel_clone_args, ptr %kargs, i32 0, i32 13
  br label %for.body

cleanup.thread:                                   ; preds = %for.inc.cleanup.thread_crit_edge, %do.body.cleanup.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__ss_mask) #26
  br label %cleanup25

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %i.051 = phi i32 [ %call1, %for.body.lr.ph ], [ %call7, %for.inc.for.body_crit_edge ]
  %arrayidx = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %i.051
  %75 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %arrayidx, align 4
  %can_fork = getelementptr inbounds %struct.cgroup_subsys, ptr %76, i32 0, i32 12
  %77 = ptrtoint ptr %can_fork to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %can_fork, align 4
  %79 = ptrtoint ptr %cset to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load ptr, ptr %cset, align 8
  %call3 = call i32 %78(ptr noundef %child, ptr noundef %80) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %for.inc, label %cleanup

for.inc:                                          ; preds = %for.body
  %add = add nsw i32 %i.051, 1
  %call7 = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask, i32 noundef 14, i32 noundef %add) #26
  %cmp = icmp slt i32 %call7, 14
  br i1 %cmp, label %for.inc.for.body_crit_edge, label %for.inc.cleanup.thread_crit_edge

for.inc.cleanup.thread_crit_edge:                 ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup.thread

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

cleanup:                                          ; preds = %for.body
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__ss_mask) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %i.051)
  %cmp14.not52 = icmp sgt i32 %i.051, 0
  br i1 %cmp14.not52, label %if.end17.lr.ph, label %cleanup.for.end24_crit_edge

cleanup.for.end24_crit_edge:                      ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end24

if.end17.lr.ph:                                   ; preds = %cleanup
  %81 = add nsw i32 %i.051, -1
  br label %if.end17

if.end17:                                         ; preds = %for.inc23.if.end17_crit_edge, %if.end17.lr.ph
  %j.053 = phi i32 [ 0, %if.end17.lr.ph ], [ %inc, %for.inc23.if.end17_crit_edge ]
  %arrayidx11 = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %j.053
  %82 = ptrtoint ptr %arrayidx11 to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load ptr, ptr %arrayidx11, align 4
  %cancel_fork = getelementptr inbounds %struct.cgroup_subsys, ptr %83, i32 0, i32 13
  %84 = ptrtoint ptr %cancel_fork to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %cancel_fork, align 4
  %tobool18.not = icmp eq ptr %85, null
  br i1 %tobool18.not, label %if.end17.for.inc23_crit_edge, label %if.then19

if.end17.for.inc23_crit_edge:                     ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc23

if.then19:                                        ; preds = %if.end17
  call void @__sanitizer_cov_trace_pc() #28
  %86 = ptrtoint ptr %cset to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load ptr, ptr %cset, align 8
  call void %85(ptr noundef %child, ptr noundef %87) #26
  br label %for.inc23

for.inc23:                                        ; preds = %if.then19, %if.end17.for.inc23_crit_edge
  %inc = add nuw nsw i32 %j.053, 1
  %exitcond.not = icmp eq i32 %j.053, %81
  br i1 %exitcond.not, label %for.inc23.for.end24_crit_edge, label %for.inc23.if.end17_crit_edge

for.inc23.if.end17_crit_edge:                     ; preds = %for.inc23
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end17

for.inc23.for.end24_crit_edge:                    ; preds = %for.inc23
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end24

for.end24:                                        ; preds = %for.inc23.for.end24_crit_edge, %cleanup.for.end24_crit_edge
  call fastcc void @cgroup_css_set_put_fork(ptr noundef %kargs)
  br label %cleanup25

cleanup25:                                        ; preds = %for.end24, %cleanup.thread, %cgroup_css_set_fork.exit.cleanup25_crit_edge
  %retval.0 = phi i32 [ %call3, %for.end24 ], [ %ret.0.i, %cgroup_css_set_fork.exit.cleanup25_crit_edge ], [ 0, %cleanup.thread ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cgroup_css_set_put_fork(ptr nocapture noundef %kargs) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  tail call fastcc void @cgroup_threadgroup_change_end()
  %0 = ptrtoint ptr %kargs to i32
  call void @__asan_load8_noabort(i32 %0)
  %1 = load i64, ptr %kargs, align 8
  %and = and i64 %1, 8589934592
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and)
  %tobool.not = icmp eq i64 %and, 0
  br i1 %tobool.not, label %entry.if.end10_crit_edge, label %if.then

entry.if.end10_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end10

if.then:                                          ; preds = %entry
  %cgrp1 = getelementptr inbounds %struct.kernel_clone_args, ptr %kargs, i32 0, i32 12
  %2 = ptrtoint ptr %cgrp1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cgrp1, align 4
  %cset2 = getelementptr inbounds %struct.kernel_clone_args, ptr %kargs, i32 0, i32 13
  %4 = ptrtoint ptr %cset2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cset2, align 8
  tail call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  %tobool3.not = icmp eq ptr %5, null
  br i1 %tobool3.not, label %if.then.if.end_crit_edge, label %if.then4

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.then4:                                         ; preds = %if.then
  %refcount.i = getelementptr inbounds %struct.css_set, ptr %5, i32 0, i32 1
  %call.i = tail call zeroext i1 @refcount_dec_not_one(ptr noundef %refcount.i) #26
  br i1 %call.i, label %if.then4.put_css_set.exit_crit_edge, label %do.body1.i

if.then4.put_css_set.exit_crit_edge:              ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #28
  br label %put_css_set.exit

do.body1.i:                                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #28
  %call3.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @css_set_lock) #26
  tail call void @put_css_set_locked(ptr noundef nonnull %5) #26
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @css_set_lock, i32 noundef %call3.i) #26
  br label %put_css_set.exit

put_css_set.exit:                                 ; preds = %do.body1.i, %if.then4.put_css_set.exit_crit_edge
  %6 = ptrtoint ptr %cset2 to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr null, ptr %cset2, align 8
  br label %if.end

if.end:                                           ; preds = %put_css_set.exit, %if.then.if.end_crit_edge
  %tobool6.not = icmp eq ptr %3, null
  br i1 %tobool6.not, label %if.end.if.end10_crit_edge, label %if.then7

if.end.if.end10_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end10

if.then7:                                         ; preds = %if.end
  %flags.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %3, i32 0, i32 7
  %7 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %8, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.then7.cgroup_put.exit_crit_edge

if.then7.cgroup_put.exit_crit_edge:               ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_put.exit

if.then.i.i:                                      ; preds = %if.then7
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %3, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i) #26
  br label %cgroup_put.exit

cgroup_put.exit:                                  ; preds = %if.then.i.i, %if.then7.cgroup_put.exit_crit_edge
  %9 = ptrtoint ptr %cgrp1 to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %cgrp1, align 4
  br label %if.end10

if.end10:                                         ; preds = %cgroup_put.exit, %if.end.if.end10_crit_edge, %entry.if.end10_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cgroup_cancel_fork(ptr noundef %child, ptr nocapture noundef %kargs) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %cset = getelementptr inbounds %struct.kernel_clone_args, ptr %kargs, i32 0, i32 13
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc.land.rhs_crit_edge, %entry
  %i.07 = phi i32 [ 0, %entry ], [ %inc, %for.inc.land.rhs_crit_edge ]
  %arrayidx = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %i.07
  %0 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %arrayidx, align 4
  %cancel_fork = getelementptr inbounds %struct.cgroup_subsys, ptr %1, i32 0, i32 13
  %2 = ptrtoint ptr %cancel_fork to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %cancel_fork, align 4
  %tobool1.not = icmp eq ptr %3, null
  br i1 %tobool1.not, label %land.rhs.for.inc_crit_edge, label %if.then

land.rhs.for.inc_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  %4 = ptrtoint ptr %cset to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %cset, align 8
  tail call void %3(ptr noundef %child, ptr noundef %5) #26
  br label %for.inc

for.inc:                                          ; preds = %if.then, %land.rhs.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.07, 1
  %exitcond.not = icmp eq i32 %inc, 14
  br i1 %exitcond.not, label %for.end, label %for.inc.land.rhs_crit_edge

for.inc.land.rhs_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs

for.end:                                          ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  tail call fastcc void @cgroup_css_set_put_fork(ptr noundef %kargs)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cgroup_post_fork(ptr noundef %child, ptr nocapture noundef %kargs) local_unnamed_addr #0 align 64 {
entry:
  %cgrp_flags = alloca i32, align 4
  %__ss_mask = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %cgrp_flags)
  %0 = ptrtoint ptr %cgrp_flags to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 0, ptr %cgrp_flags, align 4
  %cset1 = getelementptr inbounds %struct.kernel_clone_args, ptr %kargs, i32 0, i32 13
  %1 = ptrtoint ptr %cset1 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %cset1, align 8
  store ptr null, ptr %cset1, align 8
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %pid = getelementptr inbounds %struct.task_struct, ptr %child, i32 0, i32 68
  %3 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %pid, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %if.else56, label %if.then, !prof !637

if.then:                                          ; preds = %entry
  %cgrp = getelementptr inbounds %struct.kernel_clone_args, ptr %kargs, i32 0, i32 12
  %5 = ptrtoint ptr %cgrp to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %cgrp, align 4
  %tobool5.not = icmp eq ptr %6, null
  br i1 %tobool5.not, label %if.else, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.else:                                          ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #28
  %dfl_cgrp = getelementptr inbounds %struct.css_set, ptr %2, i32 0, i32 3
  %7 = ptrtoint ptr %dfl_cgrp to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dfl_cgrp, align 4
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then.if.end_crit_edge
  %.pn = phi ptr [ %8, %if.else ], [ %6, %if.then.if.end_crit_edge ]
  %storemerge.in = getelementptr inbounds %struct.cgroup, ptr %.pn, i32 0, i32 1
  %9 = ptrtoint ptr %storemerge.in to i32
  call void @__asan_load4_noabort(i32 %9)
  %storemerge = load i32, ptr %storemerge.in, align 8
  %10 = ptrtoint ptr %cgrp_flags to i32
  call void @__asan_store4_noabort(i32 %10)
  store i32 %storemerge, ptr %cgrp_flags, align 4
  %cg_list = getelementptr inbounds %struct.task_struct, ptr %child, i32 0, i32 165
  %11 = ptrtoint ptr %cg_list to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %cg_list, align 4
  %cmp.i.not = icmp eq ptr %12, %cg_list
  br i1 %cmp.i.not, label %if.end.if.end48_crit_edge, label %land.rhs

if.end.if.end48_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end48

land.rhs:                                         ; preds = %if.end
  %.b184 = load i1, ptr @cgroup_post_fork.__already_done, align 1
  br i1 %.b184, label %land.rhs.if.end48_crit_edge, label %if.then26, !prof !636

land.rhs.if.end48_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end48

if.then26:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_post_fork.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 6334, i32 noundef 9, ptr noundef null) #26
  br label %if.end48

if.end48:                                         ; preds = %if.then26, %land.rhs.if.end48_crit_edge, %if.end.if.end48_crit_edge
  %nr_tasks = getelementptr inbounds %struct.css_set, ptr %2, i32 0, i32 4
  %13 = ptrtoint ptr %nr_tasks to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %nr_tasks, align 4
  %inc = add i32 %14, 1
  store i32 %inc, ptr %nr_tasks, align 4
  tail call fastcc void @css_set_move_task(ptr noundef %child, ptr noundef null, ptr noundef %2, i1 noundef zeroext false)
  br label %if.end57

if.else56:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  tail call fastcc void @put_css_set(ptr noundef %2)
  br label %if.end57

if.end57:                                         ; preds = %if.else56, %if.end48
  %cset.0 = phi ptr [ %2, %if.end48 ], [ null, %if.else56 ]
  %flags58 = getelementptr inbounds %struct.task_struct, ptr %child, i32 0, i32 3
  %15 = ptrtoint ptr %flags58 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %flags58, align 4
  %and = and i32 %16, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool59.not = icmp eq i32 %and, 0
  br i1 %tobool59.not, label %if.then60, label %if.end57.if.end130_crit_edge

if.end57.if.end130_crit_edge:                     ; preds = %if.end57
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end130

if.then60:                                        ; preds = %if.end57
  %17 = ptrtoint ptr %cgrp_flags to i32
  call void @__asan_load4_noabort(i32 %17)
  %cgrp_flags.0.cgrp_flags.0. = load volatile i32, ptr %cgrp_flags, align 4
  %18 = and i32 %cgrp_flags.0.cgrp_flags.0., 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %18)
  %tobool62.not = icmp eq i32 %18, 0
  br i1 %tobool62.not, label %if.then60.if.end126_crit_edge, label %if.then69, !prof !636

if.then60.if.end126_crit_edge:                    ; preds = %if.then60
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end126

if.then69:                                        ; preds = %if.then60
  %sighand = getelementptr inbounds %struct.task_struct, ptr %child, i32 0, i32 112
  %19 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_lock(ptr noundef %20) #26
  %frozen = getelementptr inbounds %struct.task_struct, ptr %child, i32 0, i32 65
  %21 = ptrtoint ptr %frozen to i32
  call void @__asan_load2_noabort(i32 %21)
  %bf.load = load i16, ptr %frozen, align 8
  %22 = and i16 %bf.load, 512
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %22)
  %tobool71.not = icmp eq i16 %22, 0
  br i1 %tobool71.not, label %if.then69.if.end116_crit_edge, label %land.rhs78

if.then69.if.end116_crit_edge:                    ; preds = %if.then69
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end116

land.rhs78:                                       ; preds = %if.then69
  %.b182183 = load i1, ptr @cgroup_post_fork.__already_done.29, align 1
  br i1 %.b182183, label %land.rhs78.if.end116_crit_edge, label %if.then89, !prof !636

land.rhs78.if.end116_crit_edge:                   ; preds = %land.rhs78
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end116

if.then89:                                        ; preds = %land.rhs78
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_post_fork.__already_done.29, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 6350, i32 noundef 9, ptr noundef null) #26
  br label %if.end116

if.end116:                                        ; preds = %if.then89, %land.rhs78.if.end116_crit_edge, %if.then69.if.end116_crit_edge
  %jobctl = getelementptr inbounds %struct.task_struct, ptr %child, i32 0, i32 61
  %23 = ptrtoint ptr %jobctl to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %jobctl, align 4
  %or = or i32 %24, 8388608
  store i32 %or, ptr %jobctl, align 4
  %25 = ptrtoint ptr %sighand to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %sighand, align 4
  tail call void @_raw_spin_unlock(ptr noundef %26) #26
  br label %if.end126

if.end126:                                        ; preds = %if.end116, %if.then60.if.end126_crit_edge
  %27 = ptrtoint ptr %cgrp_flags to i32
  call void @__asan_load4_noabort(i32 %27)
  %cgrp_flags.0.cgrp_flags.0.188 = load volatile i32, ptr %cgrp_flags, align 4
  %28 = and i32 %cgrp_flags.0.cgrp_flags.0.188, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %28)
  %tobool128 = icmp ne i32 %28, 0
  br label %if.end130

if.end130:                                        ; preds = %if.end126, %if.end57.if.end130_crit_edge
  %kill.0.off0 = phi i1 [ false, %if.end57.if.end130_crit_edge ], [ %tobool128, %if.end126 ]
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__ss_mask) #26
  %29 = load i16, ptr @have_fork_callback, align 2
  %conv = zext i16 %29 to i32
  %30 = ptrtoint ptr %__ss_mask to i32
  call void @__asan_store4_noabort(i32 %30)
  store i32 %conv, ptr %__ss_mask, align 4
  %call132 = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask, i32 noundef 14, i32 noundef 0) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %call132)
  %cmp189 = icmp slt i32 %call132, 14
  br i1 %cmp189, label %if.end130.for.body_crit_edge, label %if.end130.for.end_crit_edge

if.end130.for.end_crit_edge:                      ; preds = %if.end130
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

if.end130.for.body_crit_edge:                     ; preds = %if.end130
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end130.for.body_crit_edge
  %i.0190 = phi i32 [ %call134, %for.body.for.body_crit_edge ], [ %call132, %if.end130.for.body_crit_edge ]
  %arrayidx = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %i.0190
  %31 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %arrayidx, align 4
  %fork = getelementptr inbounds %struct.cgroup_subsys, ptr %32, i32 0, i32 14
  %33 = ptrtoint ptr %fork to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %fork, align 4
  call void %34(ptr noundef %child) #26
  %add = add nsw i32 %i.0190, 1
  %call134 = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask, i32 noundef 14, i32 noundef %add) #26
  %cmp = icmp slt i32 %call134, 14
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end130.for.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__ss_mask) #26
  %35 = ptrtoint ptr %kargs to i32
  call void @__asan_load8_noabort(i32 %35)
  %36 = load i64, ptr %kargs, align 8
  %and138 = and i64 %36, 33554432
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %and138)
  %tobool139.not = icmp eq i64 %and138, 0
  br i1 %tobool139.not, label %for.end.if.end144_crit_edge, label %if.then140

for.end.if.end144_crit_edge:                      ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end144

if.then140:                                       ; preds = %for.end
  %nsproxy = getelementptr inbounds %struct.task_struct, ptr %child, i32 0, i32 110
  %37 = ptrtoint ptr %nsproxy to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %nsproxy, align 4
  %cgroup_ns = getelementptr inbounds %struct.nsproxy, ptr %38, i32 0, i32 8
  %39 = ptrtoint ptr %cgroup_ns to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %cgroup_ns, align 4
  %root_cset = getelementptr inbounds %struct.cgroup_namespace, ptr %40, i32 0, i32 3
  %41 = ptrtoint ptr %root_cset to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %root_cset, align 4
  %refcount.i = getelementptr inbounds %struct.css_set, ptr %cset.0, i32 0, i32 1
  %call.i.i.i.i.i.i = call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #26
  call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #26
  %43 = call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #26, !srcloc !663
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %43, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then140.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !637

if.then140.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.then140
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then140
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %44 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %44)
  %.not.i.i.i.i = icmp sgt i32 %44, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.get_css_set.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !636

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.get_css_set.exit_crit_edge:       ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %get_css_set.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then140.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then140.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef %.sink.i.i.i.i) #26
  br label %get_css_set.exit

get_css_set.exit:                                 ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.get_css_set.exit_crit_edge
  %45 = ptrtoint ptr %nsproxy to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %nsproxy, align 4
  %cgroup_ns142 = getelementptr inbounds %struct.nsproxy, ptr %46, i32 0, i32 8
  %47 = ptrtoint ptr %cgroup_ns142 to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %cgroup_ns142, align 4
  %root_cset143 = getelementptr inbounds %struct.cgroup_namespace, ptr %48, i32 0, i32 3
  %49 = ptrtoint ptr %root_cset143 to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr %cset.0, ptr %root_cset143, align 4
  %refcount.i187 = getelementptr inbounds %struct.css_set, ptr %42, i32 0, i32 1
  %call.i = call zeroext i1 @refcount_dec_not_one(ptr noundef %refcount.i187) #26
  br i1 %call.i, label %get_css_set.exit.if.end144_crit_edge, label %do.body1.i

get_css_set.exit.if.end144_crit_edge:             ; preds = %get_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end144

do.body1.i:                                       ; preds = %get_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  %call3.i = call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @css_set_lock) #26
  call void @put_css_set_locked(ptr noundef %42) #26
  call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @css_set_lock, i32 noundef %call3.i) #26
  br label %if.end144

if.end144:                                        ; preds = %do.body1.i, %get_css_set.exit.if.end144_crit_edge, %for.end.if.end144_crit_edge
  br i1 %kill.0.off0, label %if.then152, label %if.end144.if.end154_crit_edge, !prof !637

if.end144.if.end154_crit_edge:                    ; preds = %if.end144
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end154

if.then152:                                       ; preds = %if.end144
  call void @__sanitizer_cov_trace_pc() #28
  %call153 = call i32 @do_send_sig_info(i32 noundef 9, ptr noundef null, ptr noundef %child, i32 noundef 1) #26
  br label %if.end154

if.end154:                                        ; preds = %if.then152, %if.end144.if.end154_crit_edge
  call fastcc void @cgroup_css_set_put_fork(ptr noundef %kargs)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %cgrp_flags)
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @css_set_move_task(ptr noundef %task, ptr noundef %from_cset, ptr noundef %to_cset, i1 noundef zeroext %use_mg_tasks) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 904, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool24.not = icmp eq ptr %to_cset, null
  br i1 %tobool24.not, label %if.end.if.end27_crit_edge, label %land.lhs.true

if.end.if.end27_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end27

land.lhs.true:                                    ; preds = %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %1 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i, label %land.lhs.true.if.end.i_crit_edge, label %land.rhs.i

land.lhs.true.if.end.i_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

land.rhs.i:                                       ; preds = %land.lhs.true
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !637

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 798, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %land.lhs.true.if.end.i_crit_edge
  %tasks.i = getelementptr inbounds %struct.css_set, ptr %to_cset, i32 0, i32 5
  %2 = ptrtoint ptr %tasks.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %tasks.i, align 4
  %cmp.i.not.i = icmp eq ptr %3, %tasks.i
  br i1 %cmp.i.not.i, label %css_set_populated.exit, label %if.end.i.if.end27_crit_edge

if.end.i.if.end27_crit_edge:                      ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end27

css_set_populated.exit:                           ; preds = %if.end.i
  %mg_tasks.i = getelementptr inbounds %struct.css_set, ptr %to_cset, i32 0, i32 6
  %4 = ptrtoint ptr %mg_tasks.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile ptr, ptr %mg_tasks.i, align 4
  %cmp.i32.i.not = icmp eq ptr %5, %mg_tasks.i
  br i1 %cmp.i32.i.not, label %if.then26, label %css_set_populated.exit.if.end27_crit_edge

css_set_populated.exit.if.end27_crit_edge:        ; preds = %css_set_populated.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end27

if.then26:                                        ; preds = %css_set_populated.exit
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %6 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i233 = icmp eq i32 %6, 0
  br i1 %tobool.not.i233, label %if.then26.if.end.i238_crit_edge, label %land.rhs.i236

if.then26.if.end.i238_crit_edge:                  ; preds = %if.then26
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i238

land.rhs.i236:                                    ; preds = %if.then26
  %call.i.i234 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i234)
  %cmp.not.i235 = icmp eq i32 %call.i.i234, 0
  br i1 %cmp.not.i235, label %do.end.i237, label %land.rhs.i236.if.end.i238_crit_edge, !prof !637

land.rhs.i236.if.end.i238_crit_edge:              ; preds = %land.rhs.i236
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i238

do.end.i237:                                      ; preds = %land.rhs.i236
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 864, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i238

if.end.i238:                                      ; preds = %do.end.i237, %land.rhs.i236.if.end.i238_crit_edge, %if.then26.if.end.i238_crit_edge
  %cgrp_links.i = getelementptr inbounds %struct.css_set, ptr %to_cset, i32 0, i32 13
  %7 = ptrtoint ptr %cgrp_links.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %.pn39.i = load ptr, ptr %cgrp_links.i, align 4
  %cmp26.not40.i = icmp eq ptr %.pn39.i, %cgrp_links.i
  br i1 %cmp26.not40.i, label %if.end.i238.if.end27_crit_edge, label %if.end.i238.for.body.i_crit_edge

if.end.i238.for.body.i_crit_edge:                 ; preds = %if.end.i238
  br label %for.body.i

if.end.i238.if.end27_crit_edge:                   ; preds = %if.end.i238
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end27

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.end.i238.for.body.i_crit_edge
  %.pn41.i = phi ptr [ %.pn.i, %for.body.i.for.body.i_crit_edge ], [ %.pn39.i, %if.end.i238.for.body.i_crit_edge ]
  %link.0.i = getelementptr i8, ptr %.pn41.i, i32 -16
  %8 = ptrtoint ptr %link.0.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %link.0.i, align 4
  tail call fastcc void @cgroup_update_populated(ptr noundef %9, i1 noundef zeroext true) #26
  %10 = ptrtoint ptr %.pn41.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %.pn.i = load ptr, ptr %.pn41.i, align 4
  %cmp26.not.i = icmp eq ptr %.pn.i, %cgrp_links.i
  br i1 %cmp26.not.i, label %for.body.i.if.end27_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body.i

for.body.i.if.end27_crit_edge:                    ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end27

if.end27:                                         ; preds = %for.body.i.if.end27_crit_edge, %if.end.i238.if.end27_crit_edge, %css_set_populated.exit.if.end27_crit_edge, %if.end.i.if.end27_crit_edge, %if.end.if.end27_crit_edge
  %tobool28.not = icmp eq ptr %from_cset, null
  %cg_list89 = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 165
  %11 = ptrtoint ptr %cg_list89 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %cg_list89, align 4
  %cmp.i271.not = icmp eq ptr %12, %cg_list89
  br i1 %tobool28.not, label %if.else, label %if.then29

if.then29:                                        ; preds = %if.end27
  br i1 %cmp.i271.not, label %land.rhs38, label %if.then29.if.end76_crit_edge

if.then29.if.end76_crit_edge:                     ; preds = %if.then29
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end76

land.rhs38:                                       ; preds = %if.then29
  %.b232 = load i1, ptr @css_set_move_task.__already_done, align 1
  br i1 %.b232, label %land.rhs38.if.end76_crit_edge, label %if.then49, !prof !636

land.rhs38.if.end76_crit_edge:                    ; preds = %land.rhs38
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end76

if.then49:                                        ; preds = %land.rhs38
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_set_move_task.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 910, i32 noundef 9, ptr noundef null) #26
  br label %if.end76

if.end76:                                         ; preds = %if.then49, %land.rhs38.if.end76_crit_edge, %if.then29.if.end76_crit_edge
  %task_iters.i = getelementptr inbounds %struct.css_set, ptr %from_cset, i32 0, i32 8
  %13 = ptrtoint ptr %task_iters.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %task_iters.i, align 4
  %cmp.not17.i = icmp eq ptr %14, %task_iters.i
  br i1 %cmp.not17.i, label %if.end76.css_set_skip_task_iters.exit_crit_edge, label %if.end76.for.body.i240_crit_edge

if.end76.for.body.i240_crit_edge:                 ; preds = %if.end76
  br label %for.body.i240

if.end76.css_set_skip_task_iters.exit_crit_edge:  ; preds = %if.end76
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_set_skip_task_iters.exit

for.body.i240:                                    ; preds = %css_task_iter_skip.exit.i.for.body.i240_crit_edge, %if.end76.for.body.i240_crit_edge
  %.pn.in18.i = phi ptr [ %.pn.i239, %css_task_iter_skip.exit.i.for.body.i240_crit_edge ], [ %14, %if.end76.for.body.i240_crit_edge ]
  %15 = ptrtoint ptr %.pn.in18.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %.pn.i239 = load ptr, ptr %.pn.in18.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %16 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %16)
  %tobool.not.i.i = icmp eq i32 %16, 0
  br i1 %tobool.not.i.i, label %for.body.i240.if.end.i.i_crit_edge, label %land.rhs.i.i

for.body.i240.if.end.i.i_crit_edge:               ; preds = %for.body.i240
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i.i

land.rhs.i.i:                                     ; preds = %for.body.i240
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp.not.i.i, label %do.end.i.i, label %land.rhs.i.i.if.end.i.i_crit_edge, !prof !637

land.rhs.i.i.if.end.i.i_crit_edge:                ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 4633, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %do.end.i.i, %land.rhs.i.i.if.end.i.i_crit_edge, %for.body.i240.if.end.i.i_crit_edge
  %task_pos.i.i = getelementptr i8, ptr %.pn.in18.i, i32 -20
  %17 = ptrtoint ptr %task_pos.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %task_pos.i.i, align 4
  %cmp24.i.i = icmp eq ptr %18, %cg_list89
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end.i.i.css_task_iter_skip.exit.i_crit_edge

if.end.i.i.css_task_iter_skip.exit.i_crit_edge:   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_task_iter_skip.exit.i

if.then25.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %19 = ptrtoint ptr %cg_list89 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %cg_list89, align 4
  %21 = ptrtoint ptr %task_pos.i.i to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr %20, ptr %task_pos.i.i, align 4
  %flags.i.i = getelementptr i8, ptr %.pn.in18.i, i32 -40
  %22 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %flags.i.i, align 4
  %or.i.i = or i32 %23, 65536
  store i32 %or.i.i, ptr %flags.i.i, align 4
  br label %css_task_iter_skip.exit.i

css_task_iter_skip.exit.i:                        ; preds = %if.then25.i.i, %if.end.i.i.css_task_iter_skip.exit.i_crit_edge
  %cmp.not.i241 = icmp eq ptr %.pn.i239, %task_iters.i
  br i1 %cmp.not.i241, label %css_task_iter_skip.exit.i.css_set_skip_task_iters.exit_crit_edge, label %css_task_iter_skip.exit.i.for.body.i240_crit_edge

css_task_iter_skip.exit.i.for.body.i240_crit_edge: ; preds = %css_task_iter_skip.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body.i240

css_task_iter_skip.exit.i.css_set_skip_task_iters.exit_crit_edge: ; preds = %css_task_iter_skip.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_set_skip_task_iters.exit

css_set_skip_task_iters.exit:                     ; preds = %css_task_iter_skip.exit.i.css_set_skip_task_iters.exit_crit_edge, %if.end76.css_set_skip_task_iters.exit_crit_edge
  %call.i.i242 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %cg_list89) #26
  br i1 %call.i.i242, label %if.end.i.i243, label %css_set_skip_task_iters.exit.list_del_init.exit_crit_edge

css_set_skip_task_iters.exit.list_del_init.exit_crit_edge: ; preds = %css_set_skip_task_iters.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del_init.exit

if.end.i.i243:                                    ; preds = %css_set_skip_task_iters.exit
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 165, i32 1
  %24 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %prev.i.i, align 4
  %26 = ptrtoint ptr %cg_list89 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %cg_list89, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %25, ptr %prev1.i.i.i, align 4
  %29 = ptrtoint ptr %25 to i32
  call void @__asan_store4_noabort(i32 %29)
  store volatile ptr %27, ptr %25, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i243, %css_set_skip_task_iters.exit.list_del_init.exit_crit_edge
  %30 = ptrtoint ptr %cg_list89 to i32
  call void @__asan_store4_noabort(i32 %30)
  store volatile ptr %cg_list89, ptr %cg_list89, align 4
  %prev.i3.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 165, i32 1
  %31 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %cg_list89, ptr %prev.i3.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %32 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.not.i244 = icmp eq i32 %32, 0
  br i1 %tobool.not.i244, label %list_del_init.exit.if.end.i251_crit_edge, label %land.rhs.i247

list_del_init.exit.if.end.i251_crit_edge:         ; preds = %list_del_init.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i251

land.rhs.i247:                                    ; preds = %list_del_init.exit
  %call.i.i245 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i245)
  %cmp.not.i246 = icmp eq i32 %call.i.i245, 0
  br i1 %cmp.not.i246, label %do.end.i248, label %land.rhs.i247.if.end.i251_crit_edge, !prof !637

land.rhs.i247.if.end.i251_crit_edge:              ; preds = %land.rhs.i247
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i251

do.end.i248:                                      ; preds = %land.rhs.i247
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 798, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i251

if.end.i251:                                      ; preds = %do.end.i248, %land.rhs.i247.if.end.i251_crit_edge, %list_del_init.exit.if.end.i251_crit_edge
  %tasks.i249 = getelementptr inbounds %struct.css_set, ptr %from_cset, i32 0, i32 5
  %33 = ptrtoint ptr %tasks.i249 to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile ptr, ptr %tasks.i249, align 4
  %cmp.i.not.i250 = icmp eq ptr %34, %tasks.i249
  br i1 %cmp.i.not.i250, label %css_set_populated.exit255, label %if.end.i251.if.end146_crit_edge

if.end.i251.if.end146_crit_edge:                  ; preds = %if.end.i251
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end146

css_set_populated.exit255:                        ; preds = %if.end.i251
  %mg_tasks.i252 = getelementptr inbounds %struct.css_set, ptr %from_cset, i32 0, i32 6
  %35 = ptrtoint ptr %mg_tasks.i252 to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile ptr, ptr %mg_tasks.i252, align 4
  %cmp.i32.i253.not = icmp eq ptr %36, %mg_tasks.i252
  br i1 %cmp.i32.i253.not, label %if.then86, label %css_set_populated.exit255.if.end146_crit_edge

css_set_populated.exit255.if.end146_crit_edge:    ; preds = %css_set_populated.exit255
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end146

if.then86:                                        ; preds = %css_set_populated.exit255
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %37 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool.not.i256 = icmp eq i32 %37, 0
  br i1 %tobool.not.i256, label %if.then86.if.end.i264_crit_edge, label %land.rhs.i259

if.then86.if.end.i264_crit_edge:                  ; preds = %if.then86
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i264

land.rhs.i259:                                    ; preds = %if.then86
  %call.i.i257 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i257)
  %cmp.not.i258 = icmp eq i32 %call.i.i257, 0
  br i1 %cmp.not.i258, label %do.end.i260, label %land.rhs.i259.if.end.i264_crit_edge, !prof !637

land.rhs.i259.if.end.i264_crit_edge:              ; preds = %land.rhs.i259
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i264

do.end.i260:                                      ; preds = %land.rhs.i259
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 864, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i264

if.end.i264:                                      ; preds = %do.end.i260, %land.rhs.i259.if.end.i264_crit_edge, %if.then86.if.end.i264_crit_edge
  %cgrp_links.i261 = getelementptr inbounds %struct.css_set, ptr %from_cset, i32 0, i32 13
  %38 = ptrtoint ptr %cgrp_links.i261 to i32
  call void @__asan_load4_noabort(i32 %38)
  %.pn39.i262 = load ptr, ptr %cgrp_links.i261, align 4
  %cmp26.not40.i263 = icmp eq ptr %.pn39.i262, %cgrp_links.i261
  br i1 %cmp26.not40.i263, label %if.end.i264.if.end146_crit_edge, label %if.end.i264.for.body.i269_crit_edge

if.end.i264.for.body.i269_crit_edge:              ; preds = %if.end.i264
  br label %for.body.i269

if.end.i264.if.end146_crit_edge:                  ; preds = %if.end.i264
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end146

for.body.i269:                                    ; preds = %for.body.i269.for.body.i269_crit_edge, %if.end.i264.for.body.i269_crit_edge
  %.pn41.i265 = phi ptr [ %.pn.i267, %for.body.i269.for.body.i269_crit_edge ], [ %.pn39.i262, %if.end.i264.for.body.i269_crit_edge ]
  %link.0.i266 = getelementptr i8, ptr %.pn41.i265, i32 -16
  %39 = ptrtoint ptr %link.0.i266 to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %link.0.i266, align 4
  tail call fastcc void @cgroup_update_populated(ptr noundef %40, i1 noundef zeroext false) #26
  %41 = ptrtoint ptr %.pn41.i265 to i32
  call void @__asan_load4_noabort(i32 %41)
  %.pn.i267 = load ptr, ptr %.pn41.i265, align 4
  %cmp26.not.i268 = icmp eq ptr %.pn.i267, %cgrp_links.i261
  br i1 %cmp26.not.i268, label %for.body.i269.if.end146_crit_edge, label %for.body.i269.for.body.i269_crit_edge

for.body.i269.for.body.i269_crit_edge:            ; preds = %for.body.i269
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body.i269

for.body.i269.if.end146_crit_edge:                ; preds = %for.body.i269
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end146

if.else:                                          ; preds = %if.end27
  br i1 %cmp.i271.not, label %if.else.if.end146_crit_edge, label %land.rhs100

if.else.if.end146_crit_edge:                      ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end146

land.rhs100:                                      ; preds = %if.else
  %.b228231 = load i1, ptr @css_set_move_task.__already_done.126, align 1
  br i1 %.b228231, label %land.rhs100.if.end146_crit_edge, label %if.then111, !prof !636

land.rhs100.if.end146_crit_edge:                  ; preds = %land.rhs100
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end146

if.then111:                                       ; preds = %land.rhs100
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_set_move_task.__already_done.126, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 917, i32 noundef 9, ptr noundef null) #26
  br label %if.end146

if.end146:                                        ; preds = %if.then111, %land.rhs100.if.end146_crit_edge, %if.else.if.end146_crit_edge, %for.body.i269.if.end146_crit_edge, %if.end.i264.if.end146_crit_edge, %css_set_populated.exit255.if.end146_crit_edge, %if.end.i251.if.end146_crit_edge
  br i1 %tobool24.not, label %if.end146.if.end205_crit_edge, label %if.then148

if.end146.if.end205_crit_edge:                    ; preds = %if.end146
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end205

if.then148:                                       ; preds = %if.end146
  %flags = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 3
  %42 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load i32, ptr %flags, align 4
  %and = and i32 %43, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool150.not = icmp eq i32 %and, 0
  br i1 %tobool150.not, label %if.then148.if.end195_crit_edge, label %land.rhs157

if.then148.if.end195_crit_edge:                   ; preds = %if.then148
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end195

land.rhs157:                                      ; preds = %if.then148
  %.b229230 = load i1, ptr @css_set_move_task.__already_done.127, align 1
  br i1 %.b229230, label %land.rhs157.if.end195_crit_edge, label %if.then168, !prof !636

land.rhs157.if.end195_crit_edge:                  ; preds = %land.rhs157
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end195

if.then168:                                       ; preds = %land.rhs157
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_set_move_task.__already_done.127, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 926, i32 noundef 9, ptr noundef null) #26
  br label %if.end195

if.end195:                                        ; preds = %if.then168, %land.rhs157.if.end195_crit_edge, %if.then148.if.end195_crit_edge
  tail call void @cgroup_move_task(ptr noundef %task, ptr noundef nonnull %to_cset) #26
  %cg_list203 = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 165
  %mg_tasks = getelementptr inbounds %struct.css_set, ptr %to_cset, i32 0, i32 6
  %tasks = getelementptr inbounds %struct.css_set, ptr %to_cset, i32 0, i32 5
  %cond = select i1 %use_mg_tasks, ptr %mg_tasks, ptr %tasks
  %prev.i = getelementptr inbounds %struct.list_head, ptr %cond, i32 0, i32 1
  %44 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %prev.i, align 4
  %call.i.i273 = tail call zeroext i1 @__list_add_valid(ptr noundef %cg_list203, ptr noundef %45, ptr noundef %cond) #26
  br i1 %call.i.i273, label %if.end.i.i274, label %if.end195.if.end205_crit_edge

if.end195.if.end205_crit_edge:                    ; preds = %if.end195
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end205

if.end.i.i274:                                    ; preds = %if.end195
  call void @__sanitizer_cov_trace_pc() #28
  %46 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %cg_list203, ptr %prev.i, align 4
  %47 = ptrtoint ptr %cg_list203 to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %cond, ptr %cg_list203, align 4
  %prev3.i.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 165, i32 1
  %48 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr %45, ptr %prev3.i.i, align 4
  %49 = ptrtoint ptr %45 to i32
  call void @__asan_store4_noabort(i32 %49)
  store volatile ptr %cg_list203, ptr %45, align 4
  br label %if.end205

if.end205:                                        ; preds = %if.end.i.i274, %if.end195.if.end205_crit_edge, %if.end146.if.end205_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @do_send_sig_info(i32 noundef, ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cgroup_exit(ptr noundef %tsk) local_unnamed_addr #0 align 64 {
entry:
  %__ss_mask = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %cg_list = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 165
  %0 = ptrtoint ptr %cg_list to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %cg_list, align 4
  %cmp.i.not = icmp eq ptr %1, %cg_list
  br i1 %cmp.i.not, label %land.rhs, label %entry.if.end28_crit_edge

entry.if.end28_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end28

land.rhs:                                         ; preds = %entry
  %.b132 = load i1, ptr @cgroup_exit.__already_done, align 1
  br i1 %.b132, label %land.rhs.if.end28_crit_edge, label %if.then, !prof !636

land.rhs.if.end28_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end28

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_exit.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 6412, i32 noundef 9, ptr noundef null) #26
  br label %if.end28

if.end28:                                         ; preds = %if.then, %land.rhs.if.end28_crit_edge, %entry.if.end28_crit_edge
  %cgroups.i = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 164
  %2 = ptrtoint ptr %cgroups.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile ptr, ptr %cgroups.i, align 16
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %if.end28.task_css_set.exit_crit_edge

if.end28.task_css_set.exit_crit_edge:             ; preds = %if.end28
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false.i:                                  ; preds = %if.end28
  %call.i18.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i18.i)
  %tobool3.not.i = icmp eq i32 %call.i18.i, 0
  br i1 %tobool3.not.i, label %lor.lhs.false4.i, label %lor.lhs.false.i.task_css_set.exit_crit_edge

lor.lhs.false.i.task_css_set.exit_crit_edge:      ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false4.i:                                 ; preds = %lor.lhs.false.i
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 3
  %4 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %5, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool5.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool5.not.i, label %lor.lhs.false6.i, label %lor.lhs.false4.i.task_css_set.exit_crit_edge

lor.lhs.false4.i.task_css_set.exit_crit_edge:     ; preds = %lor.lhs.false4.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false6.i:                                 ; preds = %lor.lhs.false4.i
  %call7.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %land.lhs.true.i, label %lor.lhs.false6.i.task_css_set.exit_crit_edge

lor.lhs.false6.i.task_css_set.exit_crit_edge:     ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

land.lhs.true.i:                                  ; preds = %lor.lhs.false6.i
  %call9.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool10.not.i = icmp eq i32 %call9.i, 0
  br i1 %tobool10.not.i, label %land.lhs.true.i.task_css_set.exit_crit_edge, label %land.lhs.true11.i

land.lhs.true.i.task_css_set.exit_crit_edge:      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

land.lhs.true11.i:                                ; preds = %land.lhs.true.i
  %.b17.i = load i1, ptr @task_css_set.__warned, align 1
  br i1 %.b17.i, label %land.lhs.true11.i.task_css_set.exit_crit_edge, label %if.then.i

land.lhs.true11.i.task_css_set.exit_crit_edge:    ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

if.then.i:                                        ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @task_css_set.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 481, ptr noundef nonnull @.str.22) #26
  br label %task_css_set.exit

task_css_set.exit:                                ; preds = %if.then.i, %land.lhs.true11.i.task_css_set.exit_crit_edge, %land.lhs.true.i.task_css_set.exit_crit_edge, %lor.lhs.false6.i.task_css_set.exit_crit_edge, %lor.lhs.false4.i.task_css_set.exit_crit_edge, %lor.lhs.false.i.task_css_set.exit_crit_edge, %if.end28.task_css_set.exit_crit_edge
  tail call fastcc void @css_set_move_task(ptr noundef %tsk, ptr noundef %3, ptr noundef null, i1 noundef zeroext false)
  %dying_tasks = getelementptr inbounds %struct.css_set, ptr %3, i32 0, i32 7
  %prev.i = getelementptr inbounds %struct.css_set, ptr %3, i32 0, i32 7, i32 1
  %6 = ptrtoint ptr %prev.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev.i, align 4
  %call.i.i133 = tail call zeroext i1 @__list_add_valid(ptr noundef %cg_list, ptr noundef %7, ptr noundef %dying_tasks) #26
  br i1 %call.i.i133, label %if.end.i.i, label %task_css_set.exit.list_add_tail.exit_crit_edge

task_css_set.exit.list_add_tail.exit_crit_edge:   ; preds = %task_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_add_tail.exit

if.end.i.i:                                       ; preds = %task_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  %8 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %cg_list, ptr %prev.i, align 4
  %9 = ptrtoint ptr %cg_list to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr %dying_tasks, ptr %cg_list, align 4
  %prev3.i.i = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 165, i32 1
  %10 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %7, ptr %prev3.i.i, align 4
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %cg_list, ptr %7, align 4
  br label %list_add_tail.exit

list_add_tail.exit:                               ; preds = %if.end.i.i, %task_css_set.exit.list_add_tail.exit_crit_edge
  %nr_tasks = getelementptr inbounds %struct.css_set, ptr %3, i32 0, i32 4
  %12 = ptrtoint ptr %nr_tasks to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %nr_tasks, align 4
  %dec = add i32 %13, -1
  store i32 %dec, ptr %nr_tasks, align 4
  %frozen.i = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 65
  %14 = ptrtoint ptr %frozen.i to i32
  call void @__asan_load2_noabort(i32 %14)
  %bf.load.i = load i16, ptr %frozen.i, align 8
  %15 = and i16 %bf.load.i, 512
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %15)
  %tobool.i.not = icmp eq i16 %15, 0
  br i1 %tobool.i.not, label %list_add_tail.exit.if.end84_crit_edge, label %land.rhs46

list_add_tail.exit.if.end84_crit_edge:            ; preds = %list_add_tail.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end84

land.rhs46:                                       ; preds = %list_add_tail.exit
  %.b130131 = load i1, ptr @cgroup_exit.__already_done.30, align 1
  br i1 %.b130131, label %land.rhs46.if.end84_crit_edge, label %if.then57, !prof !636

land.rhs46.if.end84_crit_edge:                    ; preds = %land.rhs46
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end84

if.then57:                                        ; preds = %land.rhs46
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_exit.__already_done.30, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 6418, i32 noundef 9, ptr noundef null) #26
  br label %if.end84

if.end84:                                         ; preds = %if.then57, %land.rhs46.if.end84_crit_edge, %list_add_tail.exit.if.end84_crit_edge
  %flags = getelementptr inbounds %struct.task_struct, ptr %tsk, i32 0, i32 3
  %16 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags, align 4
  %and = and i32 %17, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool92.not = icmp eq i32 %and, 0
  br i1 %tobool92.not, label %land.rhs93, label %if.end84.if.end107_crit_edge

if.end84.if.end107_crit_edge:                     ; preds = %if.end84
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end107

land.rhs93:                                       ; preds = %if.end84
  %18 = ptrtoint ptr %cgroups.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile ptr, ptr %cgroups.i, align 16
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool.not.i.i, label %lor.lhs.false.i.i, label %land.rhs93.task_dfl_cgroup.exit_crit_edge

land.rhs93.task_dfl_cgroup.exit_crit_edge:        ; preds = %land.rhs93
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_dfl_cgroup.exit

lor.lhs.false.i.i:                                ; preds = %land.rhs93
  %call.i18.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i18.i.i)
  %tobool3.not.i.i = icmp eq i32 %call.i18.i.i, 0
  br i1 %tobool3.not.i.i, label %lor.lhs.false4.i.i, label %lor.lhs.false.i.i.task_dfl_cgroup.exit_crit_edge

lor.lhs.false.i.i.task_dfl_cgroup.exit_crit_edge: ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_dfl_cgroup.exit

lor.lhs.false4.i.i:                               ; preds = %lor.lhs.false.i.i
  %20 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %flags, align 4
  %and.i.i = and i32 %21, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool5.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool5.not.i.i, label %lor.lhs.false6.i.i, label %lor.lhs.false4.i.i.task_dfl_cgroup.exit_crit_edge

lor.lhs.false4.i.i.task_dfl_cgroup.exit_crit_edge: ; preds = %lor.lhs.false4.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_dfl_cgroup.exit

lor.lhs.false6.i.i:                               ; preds = %lor.lhs.false4.i.i
  %call7.i.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i.i)
  %tobool8.not.i.i = icmp eq i32 %call7.i.i, 0
  br i1 %tobool8.not.i.i, label %land.lhs.true.i.i, label %lor.lhs.false6.i.i.task_dfl_cgroup.exit_crit_edge

lor.lhs.false6.i.i.task_dfl_cgroup.exit_crit_edge: ; preds = %lor.lhs.false6.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_dfl_cgroup.exit

land.lhs.true.i.i:                                ; preds = %lor.lhs.false6.i.i
  %call9.i.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i.i)
  %tobool10.not.i.i = icmp eq i32 %call9.i.i, 0
  br i1 %tobool10.not.i.i, label %land.lhs.true.i.i.task_dfl_cgroup.exit_crit_edge, label %land.lhs.true11.i.i

land.lhs.true.i.i.task_dfl_cgroup.exit_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_dfl_cgroup.exit

land.lhs.true11.i.i:                              ; preds = %land.lhs.true.i.i
  %.b17.i.i = load i1, ptr @task_css_set.__warned, align 1
  br i1 %.b17.i.i, label %land.lhs.true11.i.i.task_dfl_cgroup.exit_crit_edge, label %if.then.i.i

land.lhs.true11.i.i.task_dfl_cgroup.exit_crit_edge: ; preds = %land.lhs.true11.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_dfl_cgroup.exit

if.then.i.i:                                      ; preds = %land.lhs.true11.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @task_css_set.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 481, ptr noundef nonnull @.str.22) #26
  br label %task_dfl_cgroup.exit

task_dfl_cgroup.exit:                             ; preds = %if.then.i.i, %land.lhs.true11.i.i.task_dfl_cgroup.exit_crit_edge, %land.lhs.true.i.i.task_dfl_cgroup.exit_crit_edge, %lor.lhs.false6.i.i.task_dfl_cgroup.exit_crit_edge, %lor.lhs.false4.i.i.task_dfl_cgroup.exit_crit_edge, %lor.lhs.false.i.i.task_dfl_cgroup.exit_crit_edge, %land.rhs93.task_dfl_cgroup.exit_crit_edge
  %dfl_cgrp.i = getelementptr inbounds %struct.css_set, ptr %19, i32 0, i32 3
  %22 = ptrtoint ptr %dfl_cgrp.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %dfl_cgrp.i, align 4
  %flags95 = getelementptr inbounds %struct.cgroup, ptr %23, i32 0, i32 1
  %24 = ptrtoint ptr %flags95 to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %flags95, align 4
  %26 = and i32 %25, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool97.not = icmp eq i32 %26, 0
  br i1 %tobool97.not, label %task_dfl_cgroup.exit.if.end107_crit_edge, label %if.then105, !prof !636

task_dfl_cgroup.exit.if.end107_crit_edge:         ; preds = %task_dfl_cgroup.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end107

if.then105:                                       ; preds = %task_dfl_cgroup.exit
  call void @__sanitizer_cov_trace_pc() #28
  %call106 = tail call fastcc ptr @task_dfl_cgroup(ptr noundef %tsk)
  tail call void @cgroup_update_frozen(ptr noundef %call106) #26
  br label %if.end107

if.end107:                                        ; preds = %if.then105, %task_dfl_cgroup.exit.if.end107_crit_edge, %if.end84.if.end107_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__ss_mask) #26
  %27 = load i16, ptr @have_exit_callback, align 2
  %conv = zext i16 %27 to i32
  %28 = ptrtoint ptr %__ss_mask to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %conv, ptr %__ss_mask, align 4
  %call109 = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask, i32 noundef 14, i32 noundef 0) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %call109)
  %cmp134 = icmp slt i32 %call109, 14
  br i1 %cmp134, label %if.end107.for.body_crit_edge, label %if.end107.for.end_crit_edge

if.end107.for.end_crit_edge:                      ; preds = %if.end107
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

if.end107.for.body_crit_edge:                     ; preds = %if.end107
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %if.end107.for.body_crit_edge
  %i.0135 = phi i32 [ %call111, %for.body.for.body_crit_edge ], [ %call109, %if.end107.for.body_crit_edge ]
  %arrayidx = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %i.0135
  %29 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %arrayidx, align 4
  %exit = getelementptr inbounds %struct.cgroup_subsys, ptr %30, i32 0, i32 15
  %31 = ptrtoint ptr %exit to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %exit, align 4
  call void %32(ptr noundef %tsk) #26
  %add = add nsw i32 %i.0135, 1
  %call111 = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask, i32 noundef 14, i32 noundef %add) #26
  %cmp = icmp slt i32 %call111, 14
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %if.end107.for.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__ss_mask) #26
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @task_dfl_cgroup(ptr noundef %task) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  %cgroups.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 164
  %0 = ptrtoint ptr %cgroups.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %cgroups.i, align 16
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %entry.task_css_set.exit_crit_edge

entry.task_css_set.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false.i:                                  ; preds = %entry
  %call.i18.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i18.i)
  %tobool3.not.i = icmp eq i32 %call.i18.i, 0
  br i1 %tobool3.not.i, label %lor.lhs.false4.i, label %lor.lhs.false.i.task_css_set.exit_crit_edge

lor.lhs.false.i.task_css_set.exit_crit_edge:      ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false4.i:                                 ; preds = %lor.lhs.false.i
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 3
  %2 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool5.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool5.not.i, label %lor.lhs.false6.i, label %lor.lhs.false4.i.task_css_set.exit_crit_edge

lor.lhs.false4.i.task_css_set.exit_crit_edge:     ; preds = %lor.lhs.false4.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false6.i:                                 ; preds = %lor.lhs.false4.i
  %call7.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %land.lhs.true.i, label %lor.lhs.false6.i.task_css_set.exit_crit_edge

lor.lhs.false6.i.task_css_set.exit_crit_edge:     ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

land.lhs.true.i:                                  ; preds = %lor.lhs.false6.i
  %call9.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool10.not.i = icmp eq i32 %call9.i, 0
  br i1 %tobool10.not.i, label %land.lhs.true.i.task_css_set.exit_crit_edge, label %land.lhs.true11.i

land.lhs.true.i.task_css_set.exit_crit_edge:      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

land.lhs.true11.i:                                ; preds = %land.lhs.true.i
  %.b17.i = load i1, ptr @task_css_set.__warned, align 1
  br i1 %.b17.i, label %land.lhs.true11.i.task_css_set.exit_crit_edge, label %if.then.i

land.lhs.true11.i.task_css_set.exit_crit_edge:    ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

if.then.i:                                        ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @task_css_set.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 481, ptr noundef nonnull @.str.22) #26
  br label %task_css_set.exit

task_css_set.exit:                                ; preds = %if.then.i, %land.lhs.true11.i.task_css_set.exit_crit_edge, %land.lhs.true.i.task_css_set.exit_crit_edge, %lor.lhs.false6.i.task_css_set.exit_crit_edge, %lor.lhs.false4.i.task_css_set.exit_crit_edge, %lor.lhs.false.i.task_css_set.exit_crit_edge, %entry.task_css_set.exit_crit_edge
  %dfl_cgrp = getelementptr inbounds %struct.css_set, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %dfl_cgrp to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dfl_cgrp, align 4
  ret ptr %5
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @cgroup_update_frozen(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cgroup_release(ptr noundef %task) local_unnamed_addr #0 align 64 {
entry:
  %__ss_mask = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__ss_mask) #26
  %0 = load i16, ptr @have_release_callback, align 2
  %conv = zext i16 %0 to i32
  %1 = ptrtoint ptr %__ss_mask to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 %conv, ptr %__ss_mask, align 4
  %call = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask, i32 noundef 14, i32 noundef 0) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %call)
  %cmp11 = icmp slt i32 %call, 14
  br i1 %cmp11, label %entry.for.body_crit_edge, label %entry.for.end_crit_edge

entry.for.end_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

entry.for.body_crit_edge:                         ; preds = %entry
  br label %for.body

for.body:                                         ; preds = %for.body.for.body_crit_edge, %entry.for.body_crit_edge
  %ssid.012 = phi i32 [ %call2, %for.body.for.body_crit_edge ], [ %call, %entry.for.body_crit_edge ]
  %arrayidx = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %ssid.012
  %2 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %arrayidx, align 4
  %release = getelementptr inbounds %struct.cgroup_subsys, ptr %3, i32 0, i32 16
  %4 = ptrtoint ptr %release to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %release, align 4
  call void %5(ptr noundef %task) #26
  %add = add nsw i32 %ssid.012, 1
  %call2 = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask, i32 noundef 14, i32 noundef %add) #26
  %cmp = icmp slt i32 %call2, 14
  br i1 %cmp, label %for.body.for.body_crit_edge, label %for.body.for.end_crit_edge

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

for.end:                                          ; preds = %for.body.for.end_crit_edge, %entry.for.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__ss_mask) #26
  call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %cgroups.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 164
  %6 = ptrtoint ptr %cgroups.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile ptr, ptr %cgroups.i, align 16
  %call.i.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %for.end.task_css_set.exit_crit_edge

for.end.task_css_set.exit_crit_edge:              ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false.i:                                  ; preds = %for.end
  %call.i18.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i18.i)
  %tobool3.not.i = icmp eq i32 %call.i18.i, 0
  br i1 %tobool3.not.i, label %lor.lhs.false4.i, label %lor.lhs.false.i.task_css_set.exit_crit_edge

lor.lhs.false.i.task_css_set.exit_crit_edge:      ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false4.i:                                 ; preds = %lor.lhs.false.i
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 3
  %8 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %9, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool5.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool5.not.i, label %lor.lhs.false6.i, label %lor.lhs.false4.i.task_css_set.exit_crit_edge

lor.lhs.false4.i.task_css_set.exit_crit_edge:     ; preds = %lor.lhs.false4.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false6.i:                                 ; preds = %lor.lhs.false4.i
  %call7.i = call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %land.lhs.true.i, label %lor.lhs.false6.i.task_css_set.exit_crit_edge

lor.lhs.false6.i.task_css_set.exit_crit_edge:     ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

land.lhs.true.i:                                  ; preds = %lor.lhs.false6.i
  %call9.i = call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool10.not.i = icmp eq i32 %call9.i, 0
  br i1 %tobool10.not.i, label %land.lhs.true.i.task_css_set.exit_crit_edge, label %land.lhs.true11.i

land.lhs.true.i.task_css_set.exit_crit_edge:      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

land.lhs.true11.i:                                ; preds = %land.lhs.true.i
  %.b17.i = load i1, ptr @task_css_set.__warned, align 1
  br i1 %.b17.i, label %land.lhs.true11.i.task_css_set.exit_crit_edge, label %if.then.i

land.lhs.true11.i.task_css_set.exit_crit_edge:    ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

if.then.i:                                        ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @task_css_set.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 481, ptr noundef nonnull @.str.22) #26
  br label %task_css_set.exit

task_css_set.exit:                                ; preds = %if.then.i, %land.lhs.true11.i.task_css_set.exit_crit_edge, %land.lhs.true.i.task_css_set.exit_crit_edge, %lor.lhs.false6.i.task_css_set.exit_crit_edge, %lor.lhs.false4.i.task_css_set.exit_crit_edge, %lor.lhs.false.i.task_css_set.exit_crit_edge, %for.end.task_css_set.exit_crit_edge
  %task_iters.i = getelementptr inbounds %struct.css_set, ptr %7, i32 0, i32 8
  %10 = ptrtoint ptr %task_iters.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %task_iters.i, align 4
  %cmp.not17.i = icmp eq ptr %11, %task_iters.i
  br i1 %cmp.not17.i, label %task_css_set.exit.css_set_skip_task_iters.exit_crit_edge, label %for.body.lr.ph.i

task_css_set.exit.css_set_skip_task_iters.exit_crit_edge: ; preds = %task_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_set_skip_task_iters.exit

for.body.lr.ph.i:                                 ; preds = %task_css_set.exit
  %cg_list.i.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 165
  br label %for.body.i

for.body.i:                                       ; preds = %css_task_iter_skip.exit.i.for.body.i_crit_edge, %for.body.lr.ph.i
  %.pn.in18.i = phi ptr [ %11, %for.body.lr.ph.i ], [ %.pn.i, %css_task_iter_skip.exit.i.for.body.i_crit_edge ]
  %12 = ptrtoint ptr %.pn.in18.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pn.i = load ptr, ptr %.pn.in18.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %13 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %13)
  %tobool.not.i.i = icmp eq i32 %13, 0
  br i1 %tobool.not.i.i, label %for.body.i.if.end.i.i_crit_edge, label %land.rhs.i.i

for.body.i.if.end.i.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i.i

land.rhs.i.i:                                     ; preds = %for.body.i
  %call.i.i.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp.not.i.i, label %do.end.i.i, label %land.rhs.i.i.if.end.i.i_crit_edge, !prof !637

land.rhs.i.i.if.end.i.i_crit_edge:                ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #28
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 4633, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %do.end.i.i, %land.rhs.i.i.if.end.i.i_crit_edge, %for.body.i.if.end.i.i_crit_edge
  %task_pos.i.i = getelementptr i8, ptr %.pn.in18.i, i32 -20
  %14 = ptrtoint ptr %task_pos.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %task_pos.i.i, align 4
  %cmp24.i.i = icmp eq ptr %15, %cg_list.i.i
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end.i.i.css_task_iter_skip.exit.i_crit_edge

if.end.i.i.css_task_iter_skip.exit.i_crit_edge:   ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_task_iter_skip.exit.i

if.then25.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %16 = ptrtoint ptr %cg_list.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %cg_list.i.i, align 4
  %18 = ptrtoint ptr %task_pos.i.i to i32
  call void @__asan_store4_noabort(i32 %18)
  store ptr %17, ptr %task_pos.i.i, align 4
  %flags.i.i = getelementptr i8, ptr %.pn.in18.i, i32 -40
  %19 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %flags.i.i, align 4
  %or.i.i = or i32 %20, 65536
  store i32 %or.i.i, ptr %flags.i.i, align 4
  br label %css_task_iter_skip.exit.i

css_task_iter_skip.exit.i:                        ; preds = %if.then25.i.i, %if.end.i.i.css_task_iter_skip.exit.i_crit_edge
  %cmp.not.i = icmp eq ptr %.pn.i, %task_iters.i
  br i1 %cmp.not.i, label %css_task_iter_skip.exit.i.css_set_skip_task_iters.exit_crit_edge, label %css_task_iter_skip.exit.i.for.body.i_crit_edge

css_task_iter_skip.exit.i.for.body.i_crit_edge:   ; preds = %css_task_iter_skip.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body.i

css_task_iter_skip.exit.i.css_set_skip_task_iters.exit_crit_edge: ; preds = %css_task_iter_skip.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_set_skip_task_iters.exit

css_set_skip_task_iters.exit:                     ; preds = %css_task_iter_skip.exit.i.css_set_skip_task_iters.exit_crit_edge, %task_css_set.exit.css_set_skip_task_iters.exit_crit_edge
  %cg_list = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 165
  %call.i.i9 = call zeroext i1 @__list_del_entry_valid(ptr noundef %cg_list) #26
  br i1 %call.i.i9, label %if.end.i.i10, label %css_set_skip_task_iters.exit.list_del_init.exit_crit_edge

css_set_skip_task_iters.exit.list_del_init.exit_crit_edge: ; preds = %css_set_skip_task_iters.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del_init.exit

if.end.i.i10:                                     ; preds = %css_set_skip_task_iters.exit
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 165, i32 1
  %21 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %prev.i.i, align 4
  %23 = ptrtoint ptr %cg_list to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %cg_list, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %24, i32 0, i32 1
  %25 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %22, ptr %prev1.i.i.i, align 4
  %26 = ptrtoint ptr %22 to i32
  call void @__asan_store4_noabort(i32 %26)
  store volatile ptr %24, ptr %22, align 4
  br label %list_del_init.exit

list_del_init.exit:                               ; preds = %if.end.i.i10, %css_set_skip_task_iters.exit.list_del_init.exit_crit_edge
  %27 = ptrtoint ptr %cg_list to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %cg_list, ptr %cg_list, align 4
  %prev.i3.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 165, i32 1
  %28 = ptrtoint ptr %prev.i3.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %cg_list, ptr %prev.i3.i, align 4
  call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cgroup_free(ptr noundef %task) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %cgroups.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 164
  %0 = ptrtoint ptr %cgroups.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load volatile ptr, ptr %cgroups.i, align 16
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i, label %lor.lhs.false.i, label %entry.task_css_set.exit_crit_edge

entry.task_css_set.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false.i:                                  ; preds = %entry
  %call.i18.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i18.i)
  %tobool3.not.i = icmp eq i32 %call.i18.i, 0
  br i1 %tobool3.not.i, label %lor.lhs.false4.i, label %lor.lhs.false.i.task_css_set.exit_crit_edge

lor.lhs.false.i.task_css_set.exit_crit_edge:      ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false4.i:                                 ; preds = %lor.lhs.false.i
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %task, i32 0, i32 3
  %2 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool5.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool5.not.i, label %lor.lhs.false6.i, label %lor.lhs.false4.i.task_css_set.exit_crit_edge

lor.lhs.false4.i.task_css_set.exit_crit_edge:     ; preds = %lor.lhs.false4.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false6.i:                                 ; preds = %lor.lhs.false4.i
  %call7.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %land.lhs.true.i, label %lor.lhs.false6.i.task_css_set.exit_crit_edge

lor.lhs.false6.i.task_css_set.exit_crit_edge:     ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

land.lhs.true.i:                                  ; preds = %lor.lhs.false6.i
  %call9.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool10.not.i = icmp eq i32 %call9.i, 0
  br i1 %tobool10.not.i, label %land.lhs.true.i.task_css_set.exit_crit_edge, label %land.lhs.true11.i

land.lhs.true.i.task_css_set.exit_crit_edge:      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

land.lhs.true11.i:                                ; preds = %land.lhs.true.i
  %.b17.i = load i1, ptr @task_css_set.__warned, align 1
  br i1 %.b17.i, label %land.lhs.true11.i.task_css_set.exit_crit_edge, label %if.then.i

land.lhs.true11.i.task_css_set.exit_crit_edge:    ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

if.then.i:                                        ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @task_css_set.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 481, ptr noundef nonnull @.str.22) #26
  br label %task_css_set.exit

task_css_set.exit:                                ; preds = %if.then.i, %land.lhs.true11.i.task_css_set.exit_crit_edge, %land.lhs.true.i.task_css_set.exit_crit_edge, %lor.lhs.false6.i.task_css_set.exit_crit_edge, %lor.lhs.false4.i.task_css_set.exit_crit_edge, %lor.lhs.false.i.task_css_set.exit_crit_edge, %entry.task_css_set.exit_crit_edge
  %refcount.i = getelementptr inbounds %struct.css_set, ptr %1, i32 0, i32 1
  %call.i = tail call zeroext i1 @refcount_dec_not_one(ptr noundef %refcount.i) #26
  br i1 %call.i, label %task_css_set.exit.put_css_set.exit_crit_edge, label %do.body1.i

task_css_set.exit.put_css_set.exit_crit_edge:     ; preds = %task_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %put_css_set.exit

do.body1.i:                                       ; preds = %task_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  %call3.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @css_set_lock) #26
  tail call void @put_css_set_locked(ptr noundef %1) #26
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @css_set_lock, i32 noundef %call3.i) #26
  br label %put_css_set.exit

put_css_set.exit:                                 ; preds = %do.body1.i, %task_css_set.exit.put_css_set.exit_crit_edge
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_disable(ptr noundef %str) #12 section ".init.text" align 64 {
entry:
  %str.addr = alloca ptr, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %str.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %str, ptr %str.addr, align 4
  %call44 = call ptr @strsep(ptr noundef nonnull %str.addr, ptr noundef nonnull @.str.25) #26
  %cmp.not45 = icmp eq ptr %call44, null
  br i1 %cmp.not45, label %entry.while.end_crit_edge, label %entry.while.body_crit_edge

entry.while.body_crit_edge:                       ; preds = %entry
  br label %while.body

entry.while.end_crit_edge:                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.end

while.body:                                       ; preds = %while.cond.backedge.while.body_crit_edge, %entry.while.body_crit_edge
  %call46 = phi ptr [ %call, %while.cond.backedge.while.body_crit_edge ], [ %call44, %entry.while.body_crit_edge ]
  %1 = ptrtoint ptr %call46 to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %call46, align 1
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %while.body.while.cond.backedge_crit_edge, label %while.body.land.rhs_crit_edge

while.body.land.rhs_crit_edge:                    ; preds = %while.body
  br label %land.rhs

while.body.while.cond.backedge_crit_edge:         ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.cond.backedge

land.rhs:                                         ; preds = %for.inc.land.rhs_crit_edge, %while.body.land.rhs_crit_edge
  %i.043 = phi i32 [ %inc, %for.inc.land.rhs_crit_edge ], [ 0, %while.body.land.rhs_crit_edge ]
  %arrayidx = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %i.043
  %3 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %arrayidx, align 4
  %name = getelementptr inbounds %struct.cgroup_subsys, ptr %4, i32 0, i32 20
  %5 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %name, align 4
  %call3 = call i32 @strcmp(ptr noundef nonnull %call46, ptr noundef %6) #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %land.rhs.if.end8_crit_edge, label %land.lhs.true

land.rhs.if.end8_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end8

land.lhs.true:                                    ; preds = %land.rhs
  %legacy_name = getelementptr inbounds %struct.cgroup_subsys, ptr %4, i32 0, i32 21
  %7 = ptrtoint ptr %legacy_name to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %legacy_name, align 4
  %call5 = call i32 @strcmp(ptr noundef nonnull %call46, ptr noundef %8) #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5)
  %tobool6.not = icmp eq i32 %call5, 0
  br i1 %tobool6.not, label %land.lhs.true.if.end8_crit_edge, label %land.lhs.true.for.inc_crit_edge

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

land.lhs.true.if.end8_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end8

if.end8:                                          ; preds = %land.lhs.true.if.end8_crit_edge, %land.rhs.if.end8_crit_edge
  %arrayidx9 = getelementptr [14 x ptr], ptr @cgroup_subsys_enabled_key, i32 0, i32 %i.043
  %9 = ptrtoint ptr %arrayidx9 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %arrayidx9, align 4
  call void @static_key_disable(ptr noundef %10) #26
  %11 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %name, align 4
  %call11 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.128, ptr noundef %12) #31
  br label %for.inc

for.inc:                                          ; preds = %if.end8, %land.lhs.true.for.inc_crit_edge
  %inc = add nuw nsw i32 %i.043, 1
  %exitcond.not = icmp eq i32 %inc, 14
  br i1 %exitcond.not, label %for.body14, label %for.inc.land.rhs_crit_edge

for.inc.land.rhs_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs

for.body14:                                       ; preds = %for.inc
  %call16 = call i32 @strcmp(ptr noundef nonnull %call46, ptr noundef nonnull dereferenceable(9) @.str.133) #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call16)
  %tobool17.not = icmp eq i32 %call16, 0
  br i1 %tobool17.not, label %if.end19, label %for.body14.while.cond.backedge_crit_edge

for.body14.while.cond.backedge_crit_edge:         ; preds = %for.body14
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.cond.backedge

if.end19:                                         ; preds = %for.body14
  call void @__sanitizer_cov_trace_pc() #28
  %13 = load i16, ptr @cgroup_feature_disable_mask, align 2
  %14 = or i16 %13, 1
  store i16 %14, ptr @cgroup_feature_disable_mask, align 2
  %call26 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.131, ptr noundef nonnull @.str.133) #31
  br label %while.cond.backedge

while.cond.backedge:                              ; preds = %if.end19, %for.body14.while.cond.backedge_crit_edge, %while.body.while.cond.backedge_crit_edge
  %call = call ptr @strsep(ptr noundef nonnull %str.addr, ptr noundef nonnull @.str.25) #26
  %cmp.not = icmp eq ptr %call, null
  br i1 %cmp.not, label %while.cond.backedge.while.end_crit_edge, label %while.cond.backedge.while.body_crit_edge

while.cond.backedge.while.body_crit_edge:         ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.body

while.cond.backedge.while.end_crit_edge:          ; preds = %while.cond.backedge
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.end

while.end:                                        ; preds = %while.cond.backedge.while.end_crit_edge, %entry.while.end_crit_edge
  ret i32 1
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define weak dso_local void @enable_debug_cgroup() local_unnamed_addr #12 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @enable_cgroup_debug(ptr nocapture noundef readnone %str) #12 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  store i8 1, ptr @cgroup_debug, align 1
  tail call void @enable_debug_cgroup() #34
  ret i32 1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @css_tryget_online_from_dir(ptr noundef %dentry, ptr noundef readonly %ss) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @kernfs_node_from_dentry(ptr noundef %dentry) #26
  %d_sb = getelementptr inbounds %struct.dentry, ptr %dentry, i32 0, i32 9
  %0 = ptrtoint ptr %d_sb to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %d_sb, align 4
  %s_type1 = getelementptr inbounds %struct.super_block, ptr %1, i32 0, i32 5
  %2 = ptrtoint ptr %s_type1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %s_type1, align 32
  %cmp.not = icmp ne ptr %3, @cgroup_fs_type
  %cmp2.not = icmp ne ptr %3, @cgroup2_fs_type
  %or.cond.not = and i1 %cmp.not, %cmp2.not
  %tobool.not = icmp eq ptr %call, null
  %or.cond42 = select i1 %or.cond.not, i1 true, i1 %tobool.not
  br i1 %or.cond42, label %entry.cleanup_crit_edge, label %lor.lhs.false3

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

lor.lhs.false3:                                   ; preds = %entry
  %flags.i = getelementptr inbounds %struct.kernfs_node, ptr %call, i32 0, i32 11
  %4 = ptrtoint ptr %flags.i to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %flags.i, align 8
  %6 = and i16 %5, 15
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %6)
  %cmp5.not = icmp eq i16 %6, 1
  br i1 %cmp5.not, label %if.end, label %lor.lhs.false3.cleanup_crit_edge

lor.lhs.false3.cleanup_crit_edge:                 ; preds = %lor.lhs.false3
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %lor.lhs.false3
  %7 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %10, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !639
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #26
  %call.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i, label %if.end.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end.rcu_read_lock.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 696, ptr noundef nonnull @.str.55) #26
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end.rcu_read_lock.exit_crit_edge
  %priv = getelementptr inbounds %struct.kernfs_node, ptr %call, i32 0, i32 9
  %11 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile ptr, ptr %priv, align 8
  %call8 = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %land.lhs.true10, label %rcu_read_lock.exit.do.end18_crit_edge

rcu_read_lock.exit.do.end18_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end18

land.lhs.true10:                                  ; preds = %rcu_read_lock.exit
  %call11 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %land.lhs.true10.do.end18_crit_edge, label %land.lhs.true13

land.lhs.true10.do.end18_crit_edge:               ; preds = %land.lhs.true10
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end18

land.lhs.true13:                                  ; preds = %land.lhs.true10
  %.b41 = load i1, ptr @css_tryget_online_from_dir.__warned, align 1
  br i1 %.b41, label %land.lhs.true13.do.end18_crit_edge, label %if.then15

land.lhs.true13.do.end18_crit_edge:               ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end18

if.then15:                                        ; preds = %land.lhs.true13
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_tryget_online_from_dir.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 6524, ptr noundef nonnull @.str.22) #26
  br label %do.end18

do.end18:                                         ; preds = %if.then15, %land.lhs.true13.do.end18_crit_edge, %land.lhs.true10.do.end18_crit_edge, %rcu_read_lock.exit.do.end18_crit_edge
  %tobool20.not = icmp eq ptr %12, null
  br i1 %tobool20.not, label %do.end18.if.then27_crit_edge, label %if.then21

do.end18.if.then27_crit_edge:                     ; preds = %do.end18
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then27

if.then21:                                        ; preds = %do.end18
  %tobool.not.i43 = icmp eq ptr %ss, null
  br i1 %tobool.not.i43, label %if.then21.lor.lhs.false25_crit_edge, label %if.then.i44

if.then21.lor.lhs.false25_crit_edge:              ; preds = %if.then21
  call void @__sanitizer_cov_trace_pc() #28
  br label %lor.lhs.false25

if.then.i44:                                      ; preds = %if.then21
  %id.i = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 19
  %13 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %id.i, align 4
  %arrayidx.i = getelementptr %struct.cgroup, ptr %12, i32 0, i32 18, i32 %14
  %15 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %arrayidx.i, align 4
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool2.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool2.not.i, label %lor.lhs.false.i, label %if.then.i44.if.end23_crit_edge

if.then.i44.if.end23_crit_edge:                   ; preds = %if.then.i44
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end23

lor.lhs.false.i:                                  ; preds = %if.then.i44
  %call3.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %land.lhs.true.i45, label %lor.lhs.false.i.if.end23_crit_edge

lor.lhs.false.i.if.end23_crit_edge:               ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end23

land.lhs.true.i45:                                ; preds = %lor.lhs.false.i
  %call5.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %land.lhs.true.i45.if.end23_crit_edge, label %land.lhs.true7.i

land.lhs.true.i45.if.end23_crit_edge:             ; preds = %land.lhs.true.i45
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end23

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i45
  %.b15.i = load i1, ptr @cgroup_css.__warned, align 1
  br i1 %.b15.i, label %land.lhs.true7.i.if.end23_crit_edge, label %if.then9.i

land.lhs.true7.i.if.end23_crit_edge:              ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end23

if.then9.i:                                       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_css.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 486, ptr noundef nonnull @.str.22) #26
  br label %if.end23

if.end23:                                         ; preds = %if.then9.i, %land.lhs.true7.i.if.end23_crit_edge, %land.lhs.true.i45.if.end23_crit_edge, %lor.lhs.false.i.if.end23_crit_edge, %if.then.i44.if.end23_crit_edge
  %tobool24.not = icmp eq ptr %16, null
  br i1 %tobool24.not, label %if.end23.if.then27_crit_edge, label %if.end23.lor.lhs.false25_crit_edge

if.end23.lor.lhs.false25_crit_edge:               ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #28
  br label %lor.lhs.false25

if.end23.if.then27_crit_edge:                     ; preds = %if.end23
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then27

lor.lhs.false25:                                  ; preds = %if.end23.lor.lhs.false25_crit_edge, %if.then21.lor.lhs.false25_crit_edge
  %css.060 = phi ptr [ %16, %if.end23.lor.lhs.false25_crit_edge ], [ %12, %if.then21.lor.lhs.false25_crit_edge ]
  %call26 = tail call fastcc zeroext i1 @css_tryget_online(ptr noundef nonnull %css.060)
  br i1 %call26, label %lor.lhs.false25.if.end29_crit_edge, label %lor.lhs.false25.if.then27_crit_edge

lor.lhs.false25.if.then27_crit_edge:              ; preds = %lor.lhs.false25
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then27

lor.lhs.false25.if.end29_crit_edge:               ; preds = %lor.lhs.false25
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end29

if.then27:                                        ; preds = %lor.lhs.false25.if.then27_crit_edge, %if.end23.if.then27_crit_edge, %do.end18.if.then27_crit_edge
  br label %if.end29

if.end29:                                         ; preds = %if.then27, %lor.lhs.false25.if.end29_crit_edge
  %css.1 = phi ptr [ %css.060, %lor.lhs.false25.if.end29_crit_edge ], [ inttoptr (i32 -2 to ptr), %if.then27 ]
  %call.i46 = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i46, label %if.end29.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i49

if.end29.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true.i49:                                ; preds = %if.end29
  %call1.i47 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i47)
  %tobool.not.i48 = icmp eq i32 %call1.i47, 0
  br i1 %tobool.not.i48, label %land.lhs.true.i49.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i51

land.lhs.true.i49.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i49
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true2.i51:                               ; preds = %land.lhs.true.i49
  %.b4.i50 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i50, label %land.lhs.true2.i51.rcu_read_unlock.exit_crit_edge, label %if.then.i52

land.lhs.true2.i51.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i51
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

if.then.i52:                                      ; preds = %land.lhs.true2.i51
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 724, ptr noundef nonnull @.str.57) #26
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i52, %land.lhs.true2.i51.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i49.rcu_read_unlock.exit_crit_edge, %if.end29.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !640
  %17 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i53 = and i32 %17, -16384
  %18 = inttoptr i32 %and.i.i.i.i.i53 to ptr
  %preempt_count.i.i.i.i54 = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %preempt_count.i.i.i.i54 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load volatile i32, ptr %preempt_count.i.i.i.i54, align 4
  %sub.i.i.i = add i32 %20, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i54, align 4
  tail call void @rcu_read_unlock_strict() #26
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #26
  br label %cleanup

cleanup:                                          ; preds = %rcu_read_unlock.exit, %lor.lhs.false3.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %css.1, %rcu_read_unlock.exit ], [ inttoptr (i32 -9 to ptr), %entry.cleanup_crit_edge ], [ inttoptr (i32 -9 to ptr), %lor.lhs.false3.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kernfs_node_from_dentry(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @css_from_id(i32 noundef %id, ptr noundef %ss) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %land.rhs, label %entry.if.end29_crit_edge

entry.if.end29_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end29

land.rhs:                                         ; preds = %entry
  %.b40 = load i1, ptr @css_from_id.__already_done, align 1
  br i1 %.b40, label %land.rhs.if.end29_crit_edge, label %if.then, !prof !636

land.rhs.if.end29_crit_edge:                      ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end29

if.then:                                          ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_from_id.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 6545, i32 noundef 9, ptr noundef null) #26
  br label %if.end29

if.end29:                                         ; preds = %if.then, %land.rhs.if.end29_crit_edge, %entry.if.end29_crit_edge
  %css_idr = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 23
  %call37 = tail call ptr @idr_find(ptr noundef %css_idr, i32 noundef %id) #26
  ret ptr %call37
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idr_find(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @cgroup_get_from_path(ptr noundef %path) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load ptr, ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 3, i32 11), align 8
  %call.i29 = tail call ptr @kernfs_walk_and_get_ns(ptr noundef %0, ptr noundef %path, ptr noundef null) #26
  %tobool.not = icmp eq ptr %call.i29, null
  br i1 %tobool.not, label %entry.out_crit_edge, label %if.end

entry.out_crit_edge:                              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %out

if.end:                                           ; preds = %entry
  %flags.i = getelementptr inbounds %struct.kernfs_node, ptr %call.i29, i32 0, i32 11
  %1 = ptrtoint ptr %flags.i to i32
  call void @__asan_load2_noabort(i32 %1)
  %2 = load i16, ptr %flags.i, align 8
  %3 = and i16 %2, 15
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %3)
  %cmp.not = icmp eq i16 %3, 1
  br i1 %cmp.not, label %if.end5, label %if.end.out_kernfs_crit_edge

if.end.out_kernfs_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_kernfs

if.end5:                                          ; preds = %if.end
  %4 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %7, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !639
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #26
  %call.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i, label %if.end5.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end5.rcu_read_lock.exit_crit_edge:             ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end5
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 696, ptr noundef nonnull @.str.55) #26
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end5.rcu_read_lock.exit_crit_edge
  %priv = getelementptr inbounds %struct.kernfs_node, ptr %call.i29, i32 0, i32 9
  %8 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load volatile ptr, ptr %priv, align 8
  %call7 = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7)
  %tobool8.not = icmp eq i32 %call7, 0
  br i1 %tobool8.not, label %land.lhs.true, label %rcu_read_lock.exit.do.end16_crit_edge

rcu_read_lock.exit.do.end16_crit_edge:            ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end16

land.lhs.true:                                    ; preds = %rcu_read_lock.exit
  %call9 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %land.lhs.true.do.end16_crit_edge, label %land.lhs.true11

land.lhs.true.do.end16_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end16

land.lhs.true11:                                  ; preds = %land.lhs.true
  %.b28 = load i1, ptr @cgroup_get_from_path.__warned, align 1
  br i1 %.b28, label %land.lhs.true11.do.end16_crit_edge, label %if.then13

land.lhs.true11.do.end16_crit_edge:               ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end16

if.then13:                                        ; preds = %land.lhs.true11
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_get_from_path.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 6574, ptr noundef nonnull @.str.22) #26
  br label %do.end16

do.end16:                                         ; preds = %if.then13, %land.lhs.true11.do.end16_crit_edge, %land.lhs.true.do.end16_crit_edge, %rcu_read_lock.exit.do.end16_crit_edge
  %tobool18.not = icmp eq ptr %9, null
  br i1 %tobool18.not, label %do.end16.if.then20_crit_edge, label %lor.lhs.false

do.end16.if.then20_crit_edge:                     ; preds = %do.end16
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then20

lor.lhs.false:                                    ; preds = %do.end16
  %call19 = tail call fastcc zeroext i1 @cgroup_tryget(ptr noundef nonnull %9)
  br i1 %call19, label %lor.lhs.false.if.end22_crit_edge, label %lor.lhs.false.if.then20_crit_edge

lor.lhs.false.if.then20_crit_edge:                ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then20

lor.lhs.false.if.end22_crit_edge:                 ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end22

if.then20:                                        ; preds = %lor.lhs.false.if.then20_crit_edge, %do.end16.if.then20_crit_edge
  br label %if.end22

if.end22:                                         ; preds = %if.then20, %lor.lhs.false.if.end22_crit_edge
  %cgrp.0 = phi ptr [ %9, %lor.lhs.false.if.end22_crit_edge ], [ inttoptr (i32 -2 to ptr), %if.then20 ]
  %call.i30 = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i30, label %if.end22.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i33

if.end22.rcu_read_unlock.exit_crit_edge:          ; preds = %if.end22
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true.i33:                                ; preds = %if.end22
  %call1.i31 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i31)
  %tobool.not.i32 = icmp eq i32 %call1.i31, 0
  br i1 %tobool.not.i32, label %land.lhs.true.i33.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i35

land.lhs.true.i33.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i33
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true2.i35:                               ; preds = %land.lhs.true.i33
  %.b4.i34 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i34, label %land.lhs.true2.i35.rcu_read_unlock.exit_crit_edge, label %if.then.i36

land.lhs.true2.i35.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i35
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

if.then.i36:                                      ; preds = %land.lhs.true2.i35
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 724, ptr noundef nonnull @.str.57) #26
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i36, %land.lhs.true2.i35.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i33.rcu_read_unlock.exit_crit_edge, %if.end22.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !640
  %10 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i37 = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i.i.i.i37 to ptr
  %preempt_count.i.i.i.i38 = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 1
  %12 = ptrtoint ptr %preempt_count.i.i.i.i38 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load volatile i32, ptr %preempt_count.i.i.i.i38, align 4
  %sub.i.i.i = add i32 %13, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i38, align 4
  tail call void @rcu_read_unlock_strict() #26
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #26
  br label %out_kernfs

out_kernfs:                                       ; preds = %rcu_read_unlock.exit, %if.end.out_kernfs_crit_edge
  %cgrp.1 = phi ptr [ %cgrp.0, %rcu_read_unlock.exit ], [ inttoptr (i32 -20 to ptr), %if.end.out_kernfs_crit_edge ]
  tail call void @kernfs_put(ptr noundef nonnull %call.i29) #26
  br label %out

out:                                              ; preds = %out_kernfs, %entry.out_crit_edge
  %cgrp.2 = phi ptr [ %cgrp.1, %out_kernfs ], [ inttoptr (i32 -2 to ptr), %entry.out_crit_edge ]
  ret ptr %cgrp.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local ptr @cgroup_get_from_fd(i32 noundef %fd) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call ptr @fget_raw(i32 noundef %fd) #26
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  %dentry.i = getelementptr inbounds %struct.file, ptr %call, i32 0, i32 1, i32 1
  %0 = ptrtoint ptr %dentry.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %dentry.i, align 4
  %call.i = tail call ptr @css_tryget_online_from_dir(ptr noundef %1, ptr noundef null) #26
  %cmp.i.i = icmp ugt ptr %call.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %if.end.cgroup_get_from_file.exit_crit_edge, label %if.end.i

if.end.cgroup_get_from_file.exit_crit_edge:       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_get_from_file.exit

if.end.i:                                         ; preds = %if.end
  %2 = ptrtoint ptr %call.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %call.i, align 8
  %root.i.i = getelementptr inbounds %struct.cgroup, ptr %3, i32 0, i32 19
  %4 = ptrtoint ptr %root.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %root.i.i, align 4
  %cmp.i12.i = icmp eq ptr %5, @cgrp_dfl_root
  br i1 %cmp.i12.i, label %if.end.i.cgroup_get_from_file.exit_crit_edge, label %if.then4.i

if.end.i.cgroup_get_from_file.exit_crit_edge:     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_get_from_file.exit

if.then4.i:                                       ; preds = %if.end.i
  %flags.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %3, i32 0, i32 7
  %6 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %flags.i.i.i, align 4
  %and.i.i.i = and i32 %7, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.then4.i.cgroup_get_from_file.exit_crit_edge

if.then4.i.cgroup_get_from_file.exit_crit_edge:   ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_get_from_file.exit

if.then.i.i.i:                                    ; preds = %if.then4.i
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %3, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i.i) #26
  br label %cgroup_get_from_file.exit

cgroup_get_from_file.exit:                        ; preds = %if.then.i.i.i, %if.then4.i.cgroup_get_from_file.exit_crit_edge, %if.end.i.cgroup_get_from_file.exit_crit_edge, %if.end.cgroup_get_from_file.exit_crit_edge
  %retval.0.i = phi ptr [ %3, %if.end.i.cgroup_get_from_file.exit_crit_edge ], [ %call.i, %if.end.cgroup_get_from_file.exit_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.then4.i.cgroup_get_from_file.exit_crit_edge ], [ inttoptr (i32 -9 to ptr), %if.then.i.i.i ]
  tail call void @fput(ptr noundef nonnull %call) #26
  br label %cleanup

cleanup:                                          ; preds = %cgroup_get_from_file.exit, %entry.cleanup_crit_edge
  %retval.0 = phi ptr [ %retval.0.i, %cgroup_get_from_file.exit ], [ inttoptr (i32 -9 to ptr), %entry.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @fget_raw(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @fput(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local i32 @cgroup_parse_float(ptr nocapture noundef readonly %input, i32 noundef %dec_shift, ptr nocapture noundef writeonly %v) local_unnamed_addr #0 align 64 {
entry:
  %whole = alloca i64, align 8
  %frac = alloca i64, align 8
  %fstart = alloca i32, align 4
  %fend = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %whole) #26
  %0 = ptrtoint ptr %whole to i32
  call void @__asan_store8_noabort(i32 %0)
  store i64 -1, ptr %whole, align 8, !annotation !638
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %frac) #26
  %1 = ptrtoint ptr %frac to i32
  call void @__asan_store8_noabort(i32 %1)
  store i64 0, ptr %frac, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %fstart) #26
  %2 = ptrtoint ptr %fstart to i32
  call void @__asan_store4_noabort(i32 %2)
  store i32 0, ptr %fstart, align 4
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %fend) #26
  %3 = ptrtoint ptr %fend to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 0, ptr %fend, align 4
  %call = call i32 (ptr, ptr, ...) @sscanf(ptr noundef %input, ptr noundef nonnull @.str.31, ptr noundef nonnull %whole, ptr noundef nonnull %fstart, ptr noundef nonnull %frac, ptr noundef nonnull %fend)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  %4 = ptrtoint ptr %frac to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %frac, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %5)
  %cmp = icmp slt i64 %5, 0
  br i1 %cmp, label %if.end.cleanup_crit_edge, label %if.end2

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end2:                                          ; preds = %if.end
  %6 = ptrtoint ptr %fend to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %fend, align 4
  %8 = ptrtoint ptr %fstart to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %fstart, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %7, i32 %9)
  %cmp3 = icmp sgt i32 %7, %9
  %sub = sub i32 %7, %9
  %spec.select = select i1 %cmp3, i32 %sub, i32 0
  call void @__sanitizer_cov_trace_cmp4(i32 %spec.select, i32 %dec_shift)
  %cmp4 = icmp ult i32 %spec.select, %dec_shift
  br i1 %cmp4, label %if.then5, label %if.else

if.then5:                                         ; preds = %if.end2
  %sub6 = sub i32 %dec_shift, %spec.select
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub6)
  %tobool.not2.i = icmp eq i32 %sub6, 0
  br i1 %tobool.not2.i, label %if.then5.power_of_ten.exit_crit_edge, label %if.then5.while.body.i_crit_edge

if.then5.while.body.i_crit_edge:                  ; preds = %if.then5
  br label %while.body.i

if.then5.power_of_ten.exit_crit_edge:             ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #28
  br label %power_of_ten.exit

while.body.i:                                     ; preds = %while.body.i.while.body.i_crit_edge, %if.then5.while.body.i_crit_edge
  %v.04.i = phi i64 [ %mul.i, %while.body.i.while.body.i_crit_edge ], [ 1, %if.then5.while.body.i_crit_edge ]
  %power.addr.03.i = phi i32 [ %dec.i, %while.body.i.while.body.i_crit_edge ], [ %sub6, %if.then5.while.body.i_crit_edge ]
  %dec.i = add i32 %power.addr.03.i, -1
  %mul.i = mul i64 %v.04.i, 10
  %tobool.not.i = icmp eq i32 %dec.i, 0
  br i1 %tobool.not.i, label %while.body.i.power_of_ten.exit_crit_edge, label %while.body.i.while.body.i_crit_edge

while.body.i.while.body.i_crit_edge:              ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.body.i

while.body.i.power_of_ten.exit_crit_edge:         ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %power_of_ten.exit

power_of_ten.exit:                                ; preds = %while.body.i.power_of_ten.exit_crit_edge, %if.then5.power_of_ten.exit_crit_edge
  %v.0.lcssa.i = phi i64 [ 1, %if.then5.power_of_ten.exit_crit_edge ], [ %mul.i, %while.body.i.power_of_ten.exit_crit_edge ]
  %mul = mul i64 %v.0.lcssa.i, %5
  br label %if.end206

if.else:                                          ; preds = %if.end2
  %sub8 = sub i32 %spec.select, %dec_shift
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %sub8)
  %tobool.not2.i302 = icmp eq i32 %sub8, 0
  br i1 %tobool.not2.i302, label %if.else.power_of_ten.exit310_crit_edge, label %if.else.while.body.i308_crit_edge

if.else.while.body.i308_crit_edge:                ; preds = %if.else
  br label %while.body.i308

if.else.power_of_ten.exit310_crit_edge:           ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  br label %power_of_ten.exit310

while.body.i308:                                  ; preds = %while.body.i308.while.body.i308_crit_edge, %if.else.while.body.i308_crit_edge
  %v.04.i303 = phi i64 [ %mul.i306, %while.body.i308.while.body.i308_crit_edge ], [ 1, %if.else.while.body.i308_crit_edge ]
  %power.addr.03.i304 = phi i32 [ %dec.i305, %while.body.i308.while.body.i308_crit_edge ], [ %sub8, %if.else.while.body.i308_crit_edge ]
  %dec.i305 = add i32 %power.addr.03.i304, -1
  %mul.i306 = mul i64 %v.04.i303, 10
  %tobool.not.i307 = icmp eq i32 %dec.i305, 0
  br i1 %tobool.not.i307, label %while.body.i308.power_of_ten.exit310_crit_edge, label %while.body.i308.while.body.i308_crit_edge

while.body.i308.while.body.i308_crit_edge:        ; preds = %while.body.i308
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.body.i308

while.body.i308.power_of_ten.exit310_crit_edge:   ; preds = %while.body.i308
  call void @__sanitizer_cov_trace_pc() #28
  br label %power_of_ten.exit310

power_of_ten.exit310:                             ; preds = %while.body.i308.power_of_ten.exit310_crit_edge, %if.else.power_of_ten.exit310_crit_edge
  %v.0.lcssa.i309 = phi i64 [ 1, %if.else.power_of_ten.exit310_crit_edge ], [ %mul.i306, %while.body.i308.power_of_ten.exit310_crit_edge ]
  %div300 = lshr i64 %v.0.lcssa.i309, 1
  %add = add i64 %div300, %5
  %conv = trunc i64 %v.0.lcssa.i309 to i32
  call void @__sanitizer_cov_trace_const_cmp8(i64 4294967296, i64 %add)
  %cmp189 = icmp ult i64 %add, 4294967296
  br i1 %cmp189, label %if.then193, label %if.else199, !prof !636

if.then193:                                       ; preds = %power_of_ten.exit310
  call void @__sanitizer_cov_trace_pc() #28
  %conv194 = trunc i64 %add to i32
  %div197 = udiv i32 %conv194, %conv
  %conv198 = zext i32 %div197 to i64
  br label %if.end206

if.else199:                                       ; preds = %power_of_ten.exit310
  call void @__sanitizer_cov_trace_pc() #28
  %10 = call { i64, i64 } asm ".ifnc $0,r0; .ifnc $0r0,fpr11; .ifnc $0r0,r11fp; .ifnc $0r0,ipr12; .ifnc $0r0,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $1,r2; .ifnc $1r2,fpr11; .ifnc $1r2,r11fp; .ifnc $1r2,ipr12; .ifnc $1r2,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09.ifnc $2,r4; .ifnc $2r4,fpr11; .ifnc $2r4,r11fp; .ifnc $2r4,ipr12; .ifnc $2r4,r12ip; .err; .endif; .endif; .endif; .endif; .endif\0A\09bl\09__do_div64", "={r0},={r2},{r4},{r0},~{r12},~{lr},~{cc}"(i32 %conv, i64 %add) #35, !srcloc !687
  %asmresult1.i = extractvalue { i64, i64 } %10, 1
  br label %if.end206

if.end206:                                        ; preds = %if.else199, %if.then193, %power_of_ten.exit
  %storemerge = phi i64 [ %mul, %power_of_ten.exit ], [ %conv198, %if.then193 ], [ %asmresult1.i, %if.else199 ]
  %11 = ptrtoint ptr %whole to i32
  call void @__asan_load8_noabort(i32 %11)
  %12 = load i64, ptr %whole, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %dec_shift)
  %tobool.not2.i312 = icmp eq i32 %dec_shift, 0
  br i1 %tobool.not2.i312, label %if.end206.power_of_ten.exit320_crit_edge, label %if.end206.while.body.i318_crit_edge

if.end206.while.body.i318_crit_edge:              ; preds = %if.end206
  br label %while.body.i318

if.end206.power_of_ten.exit320_crit_edge:         ; preds = %if.end206
  call void @__sanitizer_cov_trace_pc() #28
  br label %power_of_ten.exit320

while.body.i318:                                  ; preds = %while.body.i318.while.body.i318_crit_edge, %if.end206.while.body.i318_crit_edge
  %v.04.i313 = phi i64 [ %mul.i316, %while.body.i318.while.body.i318_crit_edge ], [ 1, %if.end206.while.body.i318_crit_edge ]
  %power.addr.03.i314 = phi i32 [ %dec.i315, %while.body.i318.while.body.i318_crit_edge ], [ %dec_shift, %if.end206.while.body.i318_crit_edge ]
  %dec.i315 = add i32 %power.addr.03.i314, -1
  %mul.i316 = mul i64 %v.04.i313, 10
  %tobool.not.i317 = icmp eq i32 %dec.i315, 0
  br i1 %tobool.not.i317, label %while.body.i318.power_of_ten.exit320_crit_edge, label %while.body.i318.while.body.i318_crit_edge

while.body.i318.while.body.i318_crit_edge:        ; preds = %while.body.i318
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.body.i318

while.body.i318.power_of_ten.exit320_crit_edge:   ; preds = %while.body.i318
  call void @__sanitizer_cov_trace_pc() #28
  br label %power_of_ten.exit320

power_of_ten.exit320:                             ; preds = %while.body.i318.power_of_ten.exit320_crit_edge, %if.end206.power_of_ten.exit320_crit_edge
  %v.0.lcssa.i319 = phi i64 [ 1, %if.end206.power_of_ten.exit320_crit_edge ], [ %mul.i316, %while.body.i318.power_of_ten.exit320_crit_edge ]
  %mul208 = mul i64 %v.0.lcssa.i319, %12
  %add209 = add i64 %mul208, %storemerge
  %13 = ptrtoint ptr %v to i32
  call void @__asan_store8_noabort(i32 %13)
  store i64 %add209, ptr %v, align 8
  br label %cleanup

cleanup:                                          ; preds = %power_of_ten.exit320, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ 0, %power_of_ten.exit320 ], [ -22, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %fend) #26
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %fstart) #26
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %frac) #26
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %whole) #26
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @sscanf(ptr nocapture noundef readonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #15

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cgroup_sk_alloc(ptr nocapture noundef writeonly %skcd) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !639
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #26
  %call.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i, label %entry.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

entry.rcu_read_lock.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %entry
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 696, ptr noundef nonnull @.str.55) #26
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %entry.rcu_read_lock.exit_crit_edge
  %4 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i = and i32 %4, -16384
  %5 = inttoptr i32 %and.i.i to ptr
  %preempt_count.i = getelementptr inbounds %struct.thread_info, ptr %5, i32 0, i32 1
  %6 = ptrtoint ptr %preempt_count.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load volatile i32, ptr %preempt_count.i, align 4
  %and = and i32 %7, 15728640
  %8 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i24 = and i32 %8, -16384
  %9 = inttoptr i32 %and.i.i24 to ptr
  %preempt_count.i25 = getelementptr inbounds %struct.thread_info, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %preempt_count.i25 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load volatile i32, ptr %preempt_count.i25, align 4
  %and2 = and i32 %11, 983040
  %or = or i32 %and2, %and
  %12 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i26 = and i32 %12, -16384
  %13 = inttoptr i32 %and.i.i26 to ptr
  %preempt_count.i27 = getelementptr inbounds %struct.thread_info, ptr %13, i32 0, i32 1
  %14 = ptrtoint ptr %preempt_count.i27 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile i32, ptr %preempt_count.i27, align 4
  %and4 = and i32 %15, 65280
  %or5 = or i32 %or, %and4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %or5)
  %tobool.not = icmp eq i32 %or5, 0
  br i1 %tobool.not, label %rcu_read_lock.exit.while.cond_crit_edge, label %if.then

rcu_read_lock.exit.while.cond_crit_edge:          ; preds = %rcu_read_lock.exit
  br label %while.cond

if.then:                                          ; preds = %rcu_read_lock.exit
  %16 = load i32, ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 3, i32 0, i32 7), align 4
  %and.i.i28 = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i28)
  %tobool.not.i.i = icmp eq i32 %and.i.i28, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.then.out_crit_edge

if.then.out_crit_edge:                            ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #28
  br label %out

if.then.i.i:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #28
  tail call fastcc void @percpu_ref_get(ptr noundef getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 3, i32 0, i32 2)) #26
  br label %out

while.cond:                                       ; preds = %cleanup, %rcu_read_lock.exit.while.cond_crit_edge
  %17 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i = and i32 %17, -16384
  %18 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %18, i32 0, i32 2
  %19 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %task, align 8
  %cgroups.i = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 164
  %21 = ptrtoint ptr %cgroups.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load volatile ptr, ptr %cgroups.i, align 16
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i29 = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i29, label %lor.lhs.false.i, label %while.cond.task_css_set.exit_crit_edge

while.cond.task_css_set.exit_crit_edge:           ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false.i:                                  ; preds = %while.cond
  %call.i18.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i18.i)
  %tobool3.not.i = icmp eq i32 %call.i18.i, 0
  br i1 %tobool3.not.i, label %lor.lhs.false4.i, label %lor.lhs.false.i.task_css_set.exit_crit_edge

lor.lhs.false.i.task_css_set.exit_crit_edge:      ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false4.i:                                 ; preds = %lor.lhs.false.i
  %flags.i = getelementptr inbounds %struct.task_struct, ptr %20, i32 0, i32 3
  %23 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %flags.i, align 4
  %and.i30 = and i32 %24, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i30)
  %tobool5.not.i = icmp eq i32 %and.i30, 0
  br i1 %tobool5.not.i, label %lor.lhs.false6.i, label %lor.lhs.false4.i.task_css_set.exit_crit_edge

lor.lhs.false4.i.task_css_set.exit_crit_edge:     ; preds = %lor.lhs.false4.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

lor.lhs.false6.i:                                 ; preds = %lor.lhs.false4.i
  %call7.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call7.i)
  %tobool8.not.i = icmp eq i32 %call7.i, 0
  br i1 %tobool8.not.i, label %land.lhs.true.i31, label %lor.lhs.false6.i.task_css_set.exit_crit_edge

lor.lhs.false6.i.task_css_set.exit_crit_edge:     ; preds = %lor.lhs.false6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

land.lhs.true.i31:                                ; preds = %lor.lhs.false6.i
  %call9.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9.i)
  %tobool10.not.i = icmp eq i32 %call9.i, 0
  br i1 %tobool10.not.i, label %land.lhs.true.i31.task_css_set.exit_crit_edge, label %land.lhs.true11.i

land.lhs.true.i31.task_css_set.exit_crit_edge:    ; preds = %land.lhs.true.i31
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

land.lhs.true11.i:                                ; preds = %land.lhs.true.i31
  %.b17.i = load i1, ptr @task_css_set.__warned, align 1
  br i1 %.b17.i, label %land.lhs.true11.i.task_css_set.exit_crit_edge, label %if.then.i32

land.lhs.true11.i.task_css_set.exit_crit_edge:    ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %task_css_set.exit

if.then.i32:                                      ; preds = %land.lhs.true11.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @task_css_set.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.58, i32 noundef 481, ptr noundef nonnull @.str.22) #26
  br label %task_css_set.exit

task_css_set.exit:                                ; preds = %if.then.i32, %land.lhs.true11.i.task_css_set.exit_crit_edge, %land.lhs.true.i31.task_css_set.exit_crit_edge, %lor.lhs.false6.i.task_css_set.exit_crit_edge, %lor.lhs.false4.i.task_css_set.exit_crit_edge, %lor.lhs.false.i.task_css_set.exit_crit_edge, %while.cond.task_css_set.exit_crit_edge
  %dfl_cgrp = getelementptr inbounds %struct.css_set, ptr %22, i32 0, i32 3
  %25 = ptrtoint ptr %dfl_cgrp to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %dfl_cgrp, align 4
  %call8 = tail call fastcc zeroext i1 @cgroup_tryget(ptr noundef %26)
  br i1 %call8, label %cleanup.thread, label %cleanup, !prof !636

cleanup.thread:                                   ; preds = %task_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  %dfl_cgrp.le = getelementptr inbounds %struct.css_set, ptr %22, i32 0, i32 3
  %27 = ptrtoint ptr %dfl_cgrp.le to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %dfl_cgrp.le, align 4
  br label %out

cleanup:                                          ; preds = %task_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !688
  tail call void asm sideeffect "nop; nop; nop; nop; nop; nop; nop; nop; nop; nop;", ""() #26, !srcloc !689
  br label %while.cond

out:                                              ; preds = %cleanup.thread, %if.then.i.i, %if.then.out_crit_edge
  %cgroup.2 = phi ptr [ getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 3), %if.then.out_crit_edge ], [ getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 3), %if.then.i.i ], [ %28, %cleanup.thread ]
  %29 = ptrtoint ptr %skcd to i32
  call void @__asan_store4_noabort(i32 %29)
  store ptr %cgroup.2, ptr %skcd, align 4
  %refcnt.i = getelementptr inbounds %struct.cgroup, ptr %cgroup.2, i32 0, i32 34, i32 5
  tail call fastcc void @percpu_ref_get(ptr noundef %refcnt.i) #26
  %call.i33 = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i33, label %out.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i36

out.rcu_read_unlock.exit_crit_edge:               ; preds = %out
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true.i36:                                ; preds = %out
  %call1.i34 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i34)
  %tobool.not.i35 = icmp eq i32 %call1.i34, 0
  br i1 %tobool.not.i35, label %land.lhs.true.i36.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i38

land.lhs.true.i36.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i36
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true2.i38:                               ; preds = %land.lhs.true.i36
  %.b4.i37 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i37, label %land.lhs.true2.i38.rcu_read_unlock.exit_crit_edge, label %if.then.i39

land.lhs.true2.i38.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i38
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

if.then.i39:                                      ; preds = %land.lhs.true2.i38
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 724, ptr noundef nonnull @.str.57) #26
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i39, %land.lhs.true2.i38.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i36.rcu_read_unlock.exit_crit_edge, %out.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !640
  %30 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i40 = and i32 %30, -16384
  %31 = inttoptr i32 %and.i.i.i.i.i40 to ptr
  %preempt_count.i.i.i.i41 = getelementptr inbounds %struct.thread_info, ptr %31, i32 0, i32 1
  %32 = ptrtoint ptr %preempt_count.i.i.i.i41 to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile i32, ptr %preempt_count.i.i.i.i41, align 4
  %sub.i.i.i = add i32 %33, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i41, align 4
  tail call void @rcu_read_unlock_strict() #26
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cgroup_sk_clone(ptr nocapture noundef readonly %skcd) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %skcd to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %skcd, align 4
  %flags.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %entry.cgroup_get.exit_crit_edge

entry.cgroup_get.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_get.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %1, i32 0, i32 2
  tail call fastcc void @percpu_ref_get(ptr noundef %refcnt.i.i) #26
  br label %cgroup_get.exit

cgroup_get.exit:                                  ; preds = %if.then.i.i, %entry.cgroup_get.exit_crit_edge
  %refcnt.i = getelementptr inbounds %struct.cgroup, ptr %1, i32 0, i32 34, i32 5
  tail call fastcc void @percpu_ref_get(ptr noundef %refcnt.i) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define dso_local void @cgroup_sk_free(ptr nocapture noundef readonly %skcd) local_unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %skcd to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %skcd, align 4
  %refcnt.i = getelementptr inbounds %struct.cgroup, ptr %1, i32 0, i32 34, i32 5
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i) #26
  %flags.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %1, i32 0, i32 7
  %2 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %entry.cgroup_put.exit_crit_edge

entry.cgroup_put.exit_crit_edge:                  ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_put.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %1, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i) #26
  br label %cgroup_put.exit

cgroup_put.exit:                                  ; preds = %if.then.i.i, %entry.cgroup_put.exit_crit_edge
  ret void
}

; Function Attrs: cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_sysfs_init() #12 section ".init.text" align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @kernel_kobj to i32))
  %0 = load ptr, ptr @kernel_kobj, align 4
  %call = tail call i32 @sysfs_create_group(ptr noundef %0, ptr noundef nonnull @cgroup_sysfs_attr_group) #26
  ret i32 %call
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @trace_event_buffer_reserve(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn
declare dso_local ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #16

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_buffer_commit(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__trace_trigger_soft_disabled(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_cgroup_root(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %root = getelementptr inbounds %struct.trace_event_raw_cgroup_root, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %root, align 4
  %ss_mask = getelementptr inbounds %struct.trace_event_raw_cgroup_root, ptr %1, i32 0, i32 2
  %4 = ptrtoint ptr %ss_mask to i32
  call void @__asan_load2_noabort(i32 %4)
  %5 = load i16, ptr %ss_mask, align 4
  %conv = zext i16 %5 to i32
  %__data_loc_name = getelementptr inbounds %struct.trace_event_raw_cgroup_root, ptr %1, i32 0, i32 3
  %6 = ptrtoint ptr %__data_loc_name to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %__data_loc_name, align 4
  %and = and i32 %7, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.39, i32 noundef %3, i32 noundef %conv, ptr noundef %add.ptr) #26
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #26
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_raw_output_prep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @trace_event_printf(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @trace_handle_return(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_cgroup(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %root = getelementptr inbounds %struct.trace_event_raw_cgroup, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %root, align 8
  %id = getelementptr inbounds %struct.trace_event_raw_cgroup, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %id to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %id, align 8
  %level = getelementptr inbounds %struct.trace_event_raw_cgroup, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %level, align 4
  %__data_loc_path = getelementptr inbounds %struct.trace_event_raw_cgroup, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %__data_loc_path to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %__data_loc_path, align 8
  %and = and i32 %9, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.44, i32 noundef %3, i64 noundef %5, i32 noundef %7, ptr noundef %add.ptr) #26
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #26
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_cgroup_migrate(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %dst_root = getelementptr inbounds %struct.trace_event_raw_cgroup_migrate, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %dst_root to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %dst_root, align 8
  %dst_id = getelementptr inbounds %struct.trace_event_raw_cgroup_migrate, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %dst_id to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %dst_id, align 8
  %dst_level = getelementptr inbounds %struct.trace_event_raw_cgroup_migrate, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %dst_level to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %dst_level, align 4
  %__data_loc_dst_path = getelementptr inbounds %struct.trace_event_raw_cgroup_migrate, ptr %1, i32 0, i32 5
  %8 = ptrtoint ptr %__data_loc_dst_path to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %__data_loc_dst_path, align 4
  %and = and i32 %9, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %pid = getelementptr inbounds %struct.trace_event_raw_cgroup_migrate, ptr %1, i32 0, i32 4
  %10 = ptrtoint ptr %pid to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %pid, align 8
  %__data_loc_comm = getelementptr inbounds %struct.trace_event_raw_cgroup_migrate, ptr %1, i32 0, i32 6
  %12 = ptrtoint ptr %__data_loc_comm to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %__data_loc_comm, align 8
  %and1 = and i32 %13, 65535
  %add.ptr2 = getelementptr i8, ptr %1, i32 %and1
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.51, i32 noundef %3, i64 noundef %5, i32 noundef %7, ptr noundef %add.ptr, i32 noundef %11, ptr noundef %add.ptr2) #26
  %call3 = tail call i32 @trace_handle_return(ptr noundef %seq) #26
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call3, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @trace_raw_output_cgroup_event(ptr noundef %iter, i32 noundef %flags, ptr noundef %trace_event) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  %ent = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 16
  %0 = ptrtoint ptr %ent to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ent, align 8
  %call = tail call i32 @trace_raw_output_prep(ptr noundef %iter, ptr noundef %trace_event) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %call)
  %cmp.not = icmp eq i32 %call, 1
  br i1 %cmp.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %seq = getelementptr inbounds %struct.trace_iterator, ptr %iter, i32 0, i32 15
  %root = getelementptr inbounds %struct.trace_event_raw_cgroup_event, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %root, align 8
  %id = getelementptr inbounds %struct.trace_event_raw_cgroup_event, ptr %1, i32 0, i32 3
  %4 = ptrtoint ptr %id to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %id, align 8
  %level = getelementptr inbounds %struct.trace_event_raw_cgroup_event, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %level to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %level, align 4
  %__data_loc_path = getelementptr inbounds %struct.trace_event_raw_cgroup_event, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %__data_loc_path to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load i32, ptr %__data_loc_path, align 8
  %and = and i32 %9, 65535
  %add.ptr = getelementptr i8, ptr %1, i32 %and
  %val = getelementptr inbounds %struct.trace_event_raw_cgroup_event, ptr %1, i32 0, i32 5
  %10 = ptrtoint ptr %val to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %val, align 4
  tail call void (ptr, ptr, ...) @trace_event_printf(ptr noundef %iter, ptr noundef nonnull @.str.53, i32 noundef %3, i64 noundef %5, i32 noundef %7, ptr noundef %add.ptr, i32 noundef %11) #26
  %call1 = tail call i32 @trace_handle_return(ptr noundef %seq) #26
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %if.end ], [ %call, %entry.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @perf_trace_buf_alloc(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @perf_trace_run_bpf_submit(ptr noundef, i32 noundef, i32 noundef, ptr noundef, i64 noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.returnaddress(i32 immarg) #17

; Function Attrs: nocallback nofree nosync nounwind readnone willreturn
declare ptr @llvm.frameaddress.p0(i32 immarg) #17

; Function Attrs: nounwind readonly
declare i32 @llvm.read_register.i32(metadata) #18

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run1(ptr noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run2(ptr noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run4(ptr noundef, i64 noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @bpf_trace_run3(ptr noundef, i64 noundef, i64 noundef, i64 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_acquire(ptr nocapture noundef readnone %map) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @lock_acquire(ptr noundef nonnull @rcu_lock_map, i32 noundef 0, i32 noundef 0, i32 noundef 2, i32 noundef 0, ptr noundef null, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_acquire, %__here) to i32)) #26
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @rcu_is_watching() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_acquire(ptr noundef, i32 noundef, i32 noundef, i32 noundef, i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @warn_bogus_irq_restore() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_write(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn
declare void @llvm.prefetch.p0(ptr nocapture readonly, i32 immarg, i32 immarg, i32) #19

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @percpu_ref_get(ptr noundef %ref) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  %0 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !639
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #26
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i.i, label %entry.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

entry.rcu_read_lock.exit.i_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %entry
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 696, ptr noundef nonnull @.str.55) #26
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %entry.rcu_read_lock.exit.i_crit_edge
  %4 = ptrtoint ptr %ref to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %ref, align 4
  %and.i.i = and i32 %5, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i1.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i1.i, label %do.body1.i, label %if.else.i, !prof !636

do.body1.i:                                       ; preds = %rcu_read_lock.exit.i
  %6 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #26, !srcloc !641
  %7 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i2.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i2.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %12, %5
  %13 = inttoptr i32 %add.i to ptr
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %add15.i = add i32 %15, 1
  store i32 %add15.i, ptr %13, align 4
  %16 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #26, !srcloc !642
  %and.i.i.i = and i32 %16, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %if.then29.i, label %do.body1.i.do.end31.i_crit_edge, !prof !637

do.body1.i.do.end31.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end31.i

if.then29.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @warn_bogus_irq_restore() #26
  br label %do.end31.i

do.end31.i:                                       ; preds = %if.then29.i, %do.body1.i.do.end31.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %6) #26, !srcloc !643
  br label %if.end38.i

if.else.i:                                        ; preds = %rcu_read_lock.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  %data.i = getelementptr inbounds %struct.percpu_ref, ptr %ref, i32 0, i32 1
  %17 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %data.i, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %18, i32 noundef 4) #26
  tail call void @llvm.prefetch.p0(ptr %18, i32 1, i32 3, i32 1) #26
  %19 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %18, ptr %18, i32 1, ptr elementtype(i32) %18) #26, !srcloc !670
  br label %if.end38.i

if.end38.i:                                       ; preds = %if.else.i, %do.end31.i
  %call.i3.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i3.i, label %if.end38.i.percpu_ref_get_many.exit_crit_edge, label %land.lhs.true.i6.i

if.end38.i.percpu_ref_get_many.exit_crit_edge:    ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %percpu_ref_get_many.exit

land.lhs.true.i6.i:                               ; preds = %if.end38.i
  %call1.i4.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i4.i)
  %tobool.not.i5.i = icmp eq i32 %call1.i4.i, 0
  br i1 %tobool.not.i5.i, label %land.lhs.true.i6.i.percpu_ref_get_many.exit_crit_edge, label %land.lhs.true2.i8.i

land.lhs.true.i6.i.percpu_ref_get_many.exit_crit_edge: ; preds = %land.lhs.true.i6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %percpu_ref_get_many.exit

land.lhs.true2.i8.i:                              ; preds = %land.lhs.true.i6.i
  %.b4.i7.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i7.i, label %land.lhs.true2.i8.i.percpu_ref_get_many.exit_crit_edge, label %if.then.i9.i

land.lhs.true2.i8.i.percpu_ref_get_many.exit_crit_edge: ; preds = %land.lhs.true2.i8.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %percpu_ref_get_many.exit

if.then.i9.i:                                     ; preds = %land.lhs.true2.i8.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 724, ptr noundef nonnull @.str.57) #26
  br label %percpu_ref_get_many.exit

percpu_ref_get_many.exit:                         ; preds = %if.then.i9.i, %land.lhs.true2.i8.i.percpu_ref_get_many.exit_crit_edge, %land.lhs.true.i6.i.percpu_ref_get_many.exit_crit_edge, %if.end38.i.percpu_ref_get_many.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !640
  %20 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i10.i = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i.i.i10.i to ptr
  %preempt_count.i.i.i.i11.i = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i.i.i11.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i.i.i11.i, align 4
  %sub.i.i.i.i = add i32 %23, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i11.i, align 4
  tail call void @rcu_read_unlock_strict() #26
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #26
  ret void
}

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @rcu_lock_release(ptr nocapture noundef readnone %map) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  br label %__here

__here:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @lock_release(ptr noundef nonnull @rcu_lock_map, i32 noundef ptrtoint (ptr blockaddress(@rcu_lock_release, %__here) to i32)) #26
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @rcu_read_unlock_strict() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lock_release(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @lock_is_held_type(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irq(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @refcount_warn_saturate(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_del_entry_valid(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @percpu_ref_put(ptr noundef %ref) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  %0 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %preempt_count.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load volatile i32, ptr %preempt_count.i.i.i.i.i, align 4
  %add.i.i.i.i = add i32 %3, 1
  store volatile i32 %add.i.i.i.i, ptr %preempt_count.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !639
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #26
  %call.i.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i.i, label %entry.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true.i.i

entry.rcu_read_lock.exit.i_crit_edge:             ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit.i

land.lhs.true.i.i:                                ; preds = %entry
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, label %land.lhs.true2.i.i

land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit.i

land.lhs.true2.i.i:                               ; preds = %land.lhs.true.i.i
  %.b4.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i, label %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, label %if.then.i.i

land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge: ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true2.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 696, ptr noundef nonnull @.str.55) #26
  br label %rcu_read_lock.exit.i

rcu_read_lock.exit.i:                             ; preds = %if.then.i.i, %land.lhs.true2.i.i.rcu_read_lock.exit.i_crit_edge, %land.lhs.true.i.i.rcu_read_lock.exit.i_crit_edge, %entry.rcu_read_lock.exit.i_crit_edge
  %4 = ptrtoint ptr %ref to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %ref, align 4
  %and.i.i = and i32 %5, 3
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i1.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i1.i, label %do.body1.i, label %if.else.i, !prof !636

do.body1.i:                                       ; preds = %rcu_read_lock.exit.i
  %6 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #26, !srcloc !641
  %7 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i2.i = and i32 %7, -16384
  %8 = inttoptr i32 %and.i2.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %8, i32 0, i32 3
  %9 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %10
  %11 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %12, %5
  %13 = inttoptr i32 %add.i to ptr
  %14 = ptrtoint ptr %13 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %13, align 4
  %add15.i = add i32 %15, -1
  store i32 %add15.i, ptr %13, align 4
  %16 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #26, !srcloc !642
  %and.i.i.i = and i32 %16, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i, label %if.then29.i, label %do.body1.i.do.end31.i_crit_edge, !prof !637

do.body1.i.do.end31.i_crit_edge:                  ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end31.i

if.then29.i:                                      ; preds = %do.body1.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @warn_bogus_irq_restore() #26
  br label %do.end31.i

do.end31.i:                                       ; preds = %if.then29.i, %do.body1.i.do.end31.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %6) #26, !srcloc !643
  br label %if.end48.i

if.else.i:                                        ; preds = %rcu_read_lock.exit.i
  %data.i = getelementptr inbounds %struct.percpu_ref, ptr %ref, i32 0, i32 1
  %17 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %data.i, align 4
  %call.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %18, i32 noundef 4) #26
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !690
  tail call void @llvm.prefetch.p0(ptr %18, i32 1, i32 3, i32 1) #26
  %19 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %18, ptr %18, i32 1, ptr elementtype(i32) %18) #26, !srcloc !691
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32 } %19, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !692
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %cmp.i.i.i.i, label %if.then45.i, label %if.else.i.if.end48.i_crit_edge, !prof !637

if.else.i.if.end48.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end48.i

if.then45.i:                                      ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #28
  %20 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %data.i, align 4
  %release.i = getelementptr inbounds %struct.percpu_ref_data, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %release.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %release.i, align 4
  tail call void %23(ptr noundef %ref) #26
  br label %if.end48.i

if.end48.i:                                       ; preds = %if.then45.i, %if.else.i.if.end48.i_crit_edge, %do.end31.i
  %call.i3.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i3.i, label %if.end48.i.percpu_ref_put_many.exit_crit_edge, label %land.lhs.true.i6.i

if.end48.i.percpu_ref_put_many.exit_crit_edge:    ; preds = %if.end48.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %percpu_ref_put_many.exit

land.lhs.true.i6.i:                               ; preds = %if.end48.i
  %call1.i4.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i4.i)
  %tobool.not.i5.i = icmp eq i32 %call1.i4.i, 0
  br i1 %tobool.not.i5.i, label %land.lhs.true.i6.i.percpu_ref_put_many.exit_crit_edge, label %land.lhs.true2.i8.i

land.lhs.true.i6.i.percpu_ref_put_many.exit_crit_edge: ; preds = %land.lhs.true.i6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %percpu_ref_put_many.exit

land.lhs.true2.i8.i:                              ; preds = %land.lhs.true.i6.i
  %.b4.i7.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i7.i, label %land.lhs.true2.i8.i.percpu_ref_put_many.exit_crit_edge, label %if.then.i9.i

land.lhs.true2.i8.i.percpu_ref_put_many.exit_crit_edge: ; preds = %land.lhs.true2.i8.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %percpu_ref_put_many.exit

if.then.i9.i:                                     ; preds = %land.lhs.true2.i8.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 724, ptr noundef nonnull @.str.57) #26
  br label %percpu_ref_put_many.exit

percpu_ref_put_many.exit:                         ; preds = %if.then.i9.i, %land.lhs.true2.i8.i.percpu_ref_put_many.exit_crit_edge, %land.lhs.true.i6.i.percpu_ref_put_many.exit_crit_edge, %if.end48.i.percpu_ref_put_many.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !640
  %24 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i10.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i.i.i10.i to ptr
  %preempt_count.i.i.i.i11.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i.i.i11.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i.i.i11.i, align 4
  %sub.i.i.i.i = add i32 %27, -1
  store volatile i32 %sub.i.i.i.i, ptr %preempt_count.i.i.i.i11.i, align 4
  tail call void @rcu_read_unlock_strict() #26
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #26
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__list_add_valid(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid allocsize(2)
declare dso_local noalias ptr @kmem_cache_alloc_trace(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #20

; Function Attrs: null_pointer_is_valid allocsize(0)
declare dso_local noalias ptr @__kmalloc(i32 noundef, i32 noundef) local_unnamed_addr #21

; Function Attrs: null_pointer_is_valid
declare dso_local void @seq_escape_mem(ptr noundef, ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__mutex_init(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_waitqueue_head(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__init_work(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @cgroup1_release_agent(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__raw_spin_lock_init(ptr noundef, ptr noundef, ptr noundef, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @lockdep_init_map_type(ptr noundef, ptr noundef, ptr noundef, i32 noundef, i8 noundef zeroext, i8 noundef zeroext, i8 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @idr_alloc_cyclic(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @cgroup_addrm_files(ptr noundef %css, ptr noundef %cgrp, ptr noundef %cfts, i1 noundef zeroext %is_add) unnamed_addr #0 align 64 {
entry:
  %name.i108 = alloca [98 x i8], align 1
  %iattr.i.i = alloca %struct.iattr, align 8
  %name.i = alloca [98 x i8], align 1
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 4050, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %cmp24.not151164 = icmp eq ptr %cfts, null
  br i1 %cmp24.not151164, label %if.end.for.end_crit_edge, label %land.rhs25.lr.ph.lr.ph

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

land.rhs25.lr.ph.lr.ph:                           ; preds = %if.end
  %root.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 19
  %parent.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 12
  %kn30.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 11
  %ia_uid.i.i = getelementptr inbounds %struct.iattr, ptr %iattr.i.i, i32 0, i32 2
  %ia_gid.i.i = getelementptr inbounds %struct.iattr, ptr %iattr.i.i, i32 0, i32 3
  br label %land.rhs25.lr.ph

land.rhs25.lr.ph:                                 ; preds = %do.end78.land.rhs25.lr.ph_crit_edge, %land.rhs25.lr.ph.lr.ph
  %is_add.addr.0.off0167 = phi i1 [ %is_add, %land.rhs25.lr.ph.lr.ph ], [ false, %do.end78.land.rhs25.lr.ph_crit_edge ]
  %ret.0166 = phi i32 [ 0, %land.rhs25.lr.ph.lr.ph ], [ %retval.0.i144, %do.end78.land.rhs25.lr.ph_crit_edge ]
  %cft_end.0165 = phi ptr [ null, %land.rhs25.lr.ph.lr.ph ], [ %cft.0157, %do.end78.land.rhs25.lr.ph_crit_edge ]
  br label %land.rhs25

land.rhs25:                                       ; preds = %for.inc.land.rhs25_crit_edge, %land.rhs25.lr.ph
  %cft.0157 = phi ptr [ %cfts, %land.rhs25.lr.ph ], [ %incdec.ptr, %for.inc.land.rhs25_crit_edge ]
  %ret.1152 = phi i32 [ %ret.0166, %land.rhs25.lr.ph ], [ %ret.2, %for.inc.land.rhs25_crit_edge ]
  %1 = ptrtoint ptr %cft.0157 to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %cft.0157, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %2)
  %cmp26.not = icmp eq i8 %2, 0
  br i1 %cmp26.not, label %land.rhs25.for.end_crit_edge, label %for.body

land.rhs25.for.end_crit_edge:                     ; preds = %land.rhs25
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.body:                                         ; preds = %land.rhs25
  %flags = getelementptr inbounds %struct.cftype, ptr %cft.0157, i32 0, i32 3
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags, align 4
  %and = and i32 %4, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool29.not = icmp eq i32 %and, 0
  br i1 %tobool29.not, label %for.body.if.end32_crit_edge, label %land.lhs.true

for.body.if.end32_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end32

land.lhs.true:                                    ; preds = %for.body
  %5 = load i16, ptr @cgroup_feature_disable_mask, align 2
  %6 = and i16 %5, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %6)
  %cmp.i = icmp eq i16 %6, 0
  br i1 %cmp.i, label %land.lhs.true.if.end32_crit_edge, label %land.lhs.true.for.inc_crit_edge

land.lhs.true.for.inc_crit_edge:                  ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

land.lhs.true.if.end32_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end32

if.end32:                                         ; preds = %land.lhs.true.if.end32_crit_edge, %for.body.if.end32_crit_edge
  %and34 = and i32 %4, 65536
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and34)
  %tobool35.not = icmp eq i32 %and34, 0
  br i1 %tobool35.not, label %if.end32.if.end39_crit_edge, label %land.lhs.true36

if.end32.if.end39_crit_edge:                      ; preds = %if.end32
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end39

land.lhs.true36:                                  ; preds = %if.end32
  %7 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %root.i, align 4
  %cmp.i104 = icmp eq ptr %8, @cgrp_dfl_root
  br i1 %cmp.i104, label %land.lhs.true36.if.end39_crit_edge, label %land.lhs.true36.for.inc_crit_edge

land.lhs.true36.for.inc_crit_edge:                ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

land.lhs.true36.if.end39_crit_edge:               ; preds = %land.lhs.true36
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end39

if.end39:                                         ; preds = %land.lhs.true36.if.end39_crit_edge, %if.end32.if.end39_crit_edge
  %and41 = and i32 %4, 131072
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and41)
  %tobool42.not = icmp eq i32 %and41, 0
  br i1 %tobool42.not, label %if.end39.if.end47_crit_edge, label %land.lhs.true43

if.end39.if.end47_crit_edge:                      ; preds = %if.end39
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end47

land.lhs.true43:                                  ; preds = %if.end39
  %9 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %root.i, align 4
  %cmp.i106 = icmp eq ptr %10, @cgrp_dfl_root
  br i1 %cmp.i106, label %land.lhs.true43.for.inc_crit_edge, label %land.lhs.true43.if.end47_crit_edge

land.lhs.true43.if.end47_crit_edge:               ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end47

land.lhs.true43.for.inc_crit_edge:                ; preds = %land.lhs.true43
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

if.end47:                                         ; preds = %land.lhs.true43.if.end47_crit_edge, %if.end39.if.end47_crit_edge
  %and49 = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and49)
  %tobool50.not = icmp eq i32 %and49, 0
  br i1 %tobool50.not, label %if.end47.if.end55_crit_edge, label %land.lhs.true51

if.end47.if.end55_crit_edge:                      ; preds = %if.end47
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end55

land.lhs.true51:                                  ; preds = %if.end47
  %11 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %parent.i, align 8
  %tobool53.not = icmp eq ptr %12, null
  br i1 %tobool53.not, label %land.lhs.true51.for.inc_crit_edge, label %land.lhs.true51.if.end55_crit_edge

land.lhs.true51.if.end55_crit_edge:               ; preds = %land.lhs.true51
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end55

land.lhs.true51.for.inc_crit_edge:                ; preds = %land.lhs.true51
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

if.end55:                                         ; preds = %land.lhs.true51.if.end55_crit_edge, %if.end47.if.end55_crit_edge
  %and57 = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and57)
  %tobool58.not = icmp eq i32 %and57, 0
  br i1 %tobool58.not, label %if.end55.if.end63_crit_edge, label %land.lhs.true59

if.end55.if.end63_crit_edge:                      ; preds = %if.end55
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end63

land.lhs.true59:                                  ; preds = %if.end55
  %13 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %parent.i, align 8
  %tobool61.not = icmp eq ptr %14, null
  br i1 %tobool61.not, label %land.lhs.true59.if.end63_crit_edge, label %land.lhs.true59.for.inc_crit_edge

land.lhs.true59.for.inc_crit_edge:                ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

land.lhs.true59.if.end63_crit_edge:               ; preds = %land.lhs.true59
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end63

if.end63:                                         ; preds = %land.lhs.true59.if.end63_crit_edge, %if.end55.if.end63_crit_edge
  %and65 = and i32 %4, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and65)
  %tobool66.not = icmp eq i32 %and65, 0
  br i1 %tobool66.not, label %if.end63.if.end70_crit_edge, label %land.lhs.true67

if.end63.if.end70_crit_edge:                      ; preds = %if.end63
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end70

land.lhs.true67:                                  ; preds = %if.end63
  %15 = load i8, ptr @cgroup_debug, align 1, !range !654
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %15)
  %tobool68.not = icmp eq i8 %15, 0
  br i1 %tobool68.not, label %land.lhs.true67.for.inc_crit_edge, label %land.lhs.true67.if.end70_crit_edge

land.lhs.true67.if.end70_crit_edge:               ; preds = %land.lhs.true67
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end70

land.lhs.true67.for.inc_crit_edge:                ; preds = %land.lhs.true67
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

if.end70:                                         ; preds = %land.lhs.true67.if.end70_crit_edge, %if.end63.if.end70_crit_edge
  br i1 %is_add.addr.0.off0167, label %if.then72, label %if.else

if.then72:                                        ; preds = %if.end70
  call void @llvm.lifetime.start.p0(i64 98, ptr nonnull %name.i) #26
  %16 = call ptr @memset(ptr %name.i, i32 255, i32 98)
  %lockdep_key.i = getelementptr inbounds %struct.cftype, ptr %cft.0157, i32 0, i32 20
  %17 = ptrtoint ptr %kn30.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %kn30.i, align 8
  %ss1.i.i = getelementptr inbounds %struct.cftype, ptr %cft.0157, i32 0, i32 5
  %19 = ptrtoint ptr %ss1.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %ss1.i.i, align 4
  %tobool.not.i.i = icmp ne ptr %20, null
  %and.i.i = and i32 %4, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool3.not.i.i = icmp eq i32 %and.i.i, 0
  %or.cond = select i1 %tobool.not.i.i, i1 %tobool3.not.i.i, i1 false
  br i1 %or.cond, label %land.lhs.true4.i.i, label %if.then72.if.else.i.i_crit_edge

if.then72.if.else.i.i_crit_edge:                  ; preds = %if.then72
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.else.i.i

land.lhs.true4.i.i:                               ; preds = %if.then72
  %21 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %root.i, align 4
  %flags5.i.i = getelementptr inbounds %struct.cgroup_root, ptr %22, i32 0, i32 7
  %23 = ptrtoint ptr %flags5.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %flags5.i.i, align 4
  %and6.i.i = and i32 %24, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i.i)
  %tobool7.not.i.i = icmp eq i32 %and6.i.i, 0
  br i1 %tobool7.not.i.i, label %if.then.i.i, label %land.lhs.true4.i.i.if.else.i.i_crit_edge

land.lhs.true4.i.i.if.else.i.i_crit_edge:         ; preds = %land.lhs.true4.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.else.i.i

if.then.i.i:                                      ; preds = %land.lhs.true4.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %cond.i.i = select i1 %tobool66.not, ptr @.str.26, ptr @.str.68
  %cmp.i.i.i = icmp eq ptr %22, @cgrp_dfl_root
  %name.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %20, i32 0, i32 20
  %legacy_name.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %20, i32 0, i32 21
  %cond11.in.i.i = select i1 %cmp.i.i.i, ptr %name.i.i, ptr %legacy_name.i.i
  %25 = ptrtoint ptr %cond11.in.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %cond11.i.i = load ptr, ptr %cond11.in.i.i, align 4
  %call13.i.i = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %name.i, i32 noundef 98, ptr noundef nonnull @.str.69, ptr noundef nonnull %cond.i.i, ptr noundef %cond11.i.i, ptr noundef %cft.0157) #26
  br label %cgroup_file_name.exit.i

if.else.i.i:                                      ; preds = %land.lhs.true4.i.i.if.else.i.i_crit_edge, %if.then72.if.else.i.i_crit_edge
  %call16.i.i = call i32 @strscpy(ptr noundef nonnull %name.i, ptr noundef %cft.0157, i32 noundef 98) #26
  br label %cgroup_file_name.exit.i

cgroup_file_name.exit.i:                          ; preds = %if.else.i.i, %if.then.i.i
  %read_u64.i.i = getelementptr inbounds %struct.cftype, ptr %cft.0157, i32 0, i32 10
  %26 = ptrtoint ptr %read_u64.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %read_u64.i.i, align 4
  %tobool.not.i34.i = icmp eq ptr %27, null
  br i1 %tobool.not.i34.i, label %lor.lhs.false.i.i, label %cgroup_file_name.exit.i.if.then.i36.i_crit_edge

cgroup_file_name.exit.i.if.then.i36.i_crit_edge:  ; preds = %cgroup_file_name.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then.i36.i

lor.lhs.false.i.i:                                ; preds = %cgroup_file_name.exit.i
  %read_s64.i.i = getelementptr inbounds %struct.cftype, ptr %cft.0157, i32 0, i32 11
  %28 = ptrtoint ptr %read_s64.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %read_s64.i.i, align 4
  %tobool1.not.i.i = icmp eq ptr %29, null
  br i1 %tobool1.not.i.i, label %lor.lhs.false2.i.i, label %lor.lhs.false.i.i.if.then.i36.i_crit_edge

lor.lhs.false.i.i.if.then.i36.i_crit_edge:        ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then.i36.i

lor.lhs.false2.i.i:                               ; preds = %lor.lhs.false.i.i
  %seq_show.i.i = getelementptr inbounds %struct.cftype, ptr %cft.0157, i32 0, i32 12
  %30 = ptrtoint ptr %seq_show.i.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %seq_show.i.i, align 4
  %tobool3.not.i35.i = icmp eq ptr %31, null
  br i1 %tobool3.not.i35.i, label %lor.lhs.false2.i.i.if.end.i.i_crit_edge, label %lor.lhs.false2.i.i.if.then.i36.i_crit_edge

lor.lhs.false2.i.i.if.then.i36.i_crit_edge:       ; preds = %lor.lhs.false2.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then.i36.i

lor.lhs.false2.i.i.if.end.i.i_crit_edge:          ; preds = %lor.lhs.false2.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i.i

if.then.i36.i:                                    ; preds = %lor.lhs.false2.i.i.if.then.i36.i_crit_edge, %lor.lhs.false.i.i.if.then.i36.i_crit_edge, %cgroup_file_name.exit.i.if.then.i36.i_crit_edge
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i36.i, %lor.lhs.false2.i.i.if.end.i.i_crit_edge
  %mode.0.i.i = phi i16 [ 292, %if.then.i36.i ], [ 0, %lor.lhs.false2.i.i.if.end.i.i_crit_edge ]
  %write_u64.i.i = getelementptr inbounds %struct.cftype, ptr %cft.0157, i32 0, i32 16
  %32 = ptrtoint ptr %write_u64.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %write_u64.i.i, align 4
  %tobool5.not.i.i = icmp eq ptr %33, null
  br i1 %tobool5.not.i.i, label %lor.lhs.false6.i.i, label %if.end.i.i.if.then10.i.i_crit_edge

if.end.i.i.if.then10.i.i_crit_edge:               ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then10.i.i

lor.lhs.false6.i.i:                               ; preds = %if.end.i.i
  %write_s64.i.i = getelementptr inbounds %struct.cftype, ptr %cft.0157, i32 0, i32 17
  %34 = ptrtoint ptr %write_s64.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %write_s64.i.i, align 4
  %tobool7.not.i37.i = icmp eq ptr %35, null
  br i1 %tobool7.not.i37.i, label %lor.lhs.false8.i.i, label %lor.lhs.false6.i.i.if.then10.i.i_crit_edge

lor.lhs.false6.i.i.if.then10.i.i_crit_edge:       ; preds = %lor.lhs.false6.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then10.i.i

lor.lhs.false8.i.i:                               ; preds = %lor.lhs.false6.i.i
  %write.i.i = getelementptr inbounds %struct.cftype, ptr %cft.0157, i32 0, i32 18
  %36 = ptrtoint ptr %write.i.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %write.i.i, align 4
  %tobool9.not.i.i = icmp eq ptr %37, null
  br i1 %tobool9.not.i.i, label %lor.lhs.false8.i.i.cgroup_file_mode.exit.i_crit_edge, label %lor.lhs.false8.i.i.if.then10.i.i_crit_edge

lor.lhs.false8.i.i.if.then10.i.i_crit_edge:       ; preds = %lor.lhs.false8.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then10.i.i

lor.lhs.false8.i.i.cgroup_file_mode.exit.i_crit_edge: ; preds = %lor.lhs.false8.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_file_mode.exit.i

if.then10.i.i:                                    ; preds = %lor.lhs.false8.i.i.if.then10.i.i_crit_edge, %lor.lhs.false6.i.i.if.then10.i.i_crit_edge, %if.end.i.i.if.then10.i.i_crit_edge
  %38 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load i32, ptr %flags, align 4
  %and.i39.i = and i32 %39, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i39.i)
  %tobool11.not.i.i = icmp eq i32 %and.i39.i, 0
  br i1 %tobool11.not.i.i, label %if.else.i40.i, label %if.then12.i.i

if.then12.i.i:                                    ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %40 = or i16 %mode.0.i.i, 146
  br label %cgroup_file_mode.exit.i

if.else.i40.i:                                    ; preds = %if.then10.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %41 = or i16 %mode.0.i.i, 128
  br label %cgroup_file_mode.exit.i

cgroup_file_mode.exit.i:                          ; preds = %if.else.i40.i, %if.then12.i.i, %lor.lhs.false8.i.i.cgroup_file_mode.exit.i_crit_edge
  %mode.1.i.i = phi i16 [ %40, %if.then12.i.i ], [ %41, %if.else.i40.i ], [ %mode.0.i.i, %lor.lhs.false8.i.i.cgroup_file_mode.exit.i_crit_edge ]
  %kf_ops.i = getelementptr inbounds %struct.cftype, ptr %cft.0157, i32 0, i32 7
  %42 = ptrtoint ptr %kf_ops.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %kf_ops.i, align 4
  %call6.i = call ptr @__kernfs_create_file(ptr noundef %18, ptr noundef nonnull %name.i, i16 noundef zeroext %mode.1.i.i, [1 x i32] zeroinitializer, [1 x i32] zeroinitializer, i64 noundef 0, ptr noundef %43, ptr noundef %cft.0157, ptr noundef null, ptr noundef %lockdep_key.i) #26
  %cmp.i.i = icmp ugt ptr %call6.i, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i.i, label %cgroup_add_file.exit, label %if.end.i

if.end.i:                                         ; preds = %cgroup_file_mode.exit.i
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %iattr.i.i) #26
  %44 = call ptr @memset(ptr %iattr.i.i, i32 0, i32 80)
  %45 = ptrtoint ptr %iattr.i.i to i32
  call void @__asan_store4_noabort(i32 %45)
  store i32 6, ptr %iattr.i.i, align 8
  %46 = call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i = and i32 %46, -16384
  %47 = inttoptr i32 %and.i.i.i to ptr
  %task.i.i = getelementptr inbounds %struct.thread_info, ptr %47, i32 0, i32 2
  %48 = ptrtoint ptr %task.i.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %task.i.i, align 8
  %cred.i.i = getelementptr inbounds %struct.task_struct, ptr %49, i32 0, i32 99
  %50 = ptrtoint ptr %cred.i.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %cred.i.i, align 16
  %fsuid.i.i = getelementptr inbounds %struct.cred, ptr %51, i32 0, i32 10
  %52 = ptrtoint ptr %fsuid.i.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load i32, ptr %fsuid.i.i, align 4
  %54 = ptrtoint ptr %ia_uid.i.i to i32
  call void @__asan_store4_noabort(i32 %54)
  store i32 %53, ptr %ia_uid.i.i, align 8
  %55 = load ptr, ptr %task.i.i, align 8
  %cred7.i.i = getelementptr inbounds %struct.task_struct, ptr %55, i32 0, i32 99
  %56 = ptrtoint ptr %cred7.i.i to i32
  call void @__asan_load4_noabort(i32 %56)
  %57 = load ptr, ptr %cred7.i.i, align 16
  %fsgid.i.i = getelementptr inbounds %struct.cred, ptr %57, i32 0, i32 11
  %58 = ptrtoint ptr %fsgid.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %fsgid.i.i, align 4
  %60 = ptrtoint ptr %ia_gid.i.i to i32
  call void @__asan_store4_noabort(i32 %60)
  store i32 %59, ptr %ia_gid.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %53)
  %cmp.i.i41.i = icmp eq i32 %53, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %59)
  %cmp.i23.i.i = icmp eq i32 %59, 0
  %or.cond.i.i = select i1 %cmp.i.i41.i, i1 %cmp.i23.i.i, i1 false
  br i1 %or.cond.i.i, label %cgroup_kn_set_ugid.exit.thread.i, label %cgroup_kn_set_ugid.exit.i

cgroup_kn_set_ugid.exit.thread.i:                 ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %iattr.i.i) #26
  br label %if.end11.i

cgroup_kn_set_ugid.exit.i:                        ; preds = %if.end.i
  %call17.i.i = call i32 @kernfs_setattr(ptr noundef %call6.i, ptr noundef nonnull %iattr.i.i) #26
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %iattr.i.i) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call17.i.i)
  %tobool.not.i = icmp eq i32 %call17.i.i, 0
  br i1 %tobool.not.i, label %cgroup_kn_set_ugid.exit.i.if.end11.i_crit_edge, label %cgroup_add_file.exit.thread141

cgroup_kn_set_ugid.exit.i.if.end11.i_crit_edge:   ; preds = %cgroup_kn_set_ugid.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end11.i

cgroup_add_file.exit.thread141:                   ; preds = %cgroup_kn_set_ugid.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  call void @kernfs_remove(ptr noundef %call6.i) #26
  call void @llvm.lifetime.end.p0(i64 98, ptr nonnull %name.i) #26
  br label %do.end78

if.end11.i:                                       ; preds = %cgroup_kn_set_ugid.exit.i.if.end11.i_crit_edge, %cgroup_kn_set_ugid.exit.thread.i
  %file_offset.i = getelementptr inbounds %struct.cftype, ptr %cft.0157, i32 0, i32 4
  %61 = ptrtoint ptr %file_offset.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %file_offset.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %tobool12.not.i = icmp eq i32 %62, 0
  br i1 %tobool12.not.i, label %if.end11.i.cgroup_add_file.exit.thread_crit_edge, label %if.then13.i

if.end11.i.cgroup_add_file.exit.thread_crit_edge: ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_add_file.exit.thread

if.then13.i:                                      ; preds = %if.end11.i
  call void @__sanitizer_cov_trace_pc() #28
  %add.ptr.i = getelementptr i8, ptr %css, i32 %62
  %notify_timer.i = getelementptr inbounds %struct.cgroup_file, ptr %add.ptr.i, i32 0, i32 2
  call void @init_timer_key(ptr noundef %notify_timer.i, ptr noundef nonnull @cgroup_file_notify_timer, i32 noundef 0, ptr noundef nonnull @.str.67, ptr noundef nonnull @cgroup_add_file.__key) #26
  call void @_raw_spin_lock_irq(ptr noundef nonnull @cgroup_file_kn_lock) #26
  %63 = ptrtoint ptr %add.ptr.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %call6.i, ptr %add.ptr.i, align 4
  call void @_raw_spin_unlock_irq(ptr noundef nonnull @cgroup_file_kn_lock) #26
  br label %cgroup_add_file.exit.thread

cgroup_add_file.exit.thread:                      ; preds = %if.then13.i, %if.end11.i.cgroup_add_file.exit.thread_crit_edge
  call void @llvm.lifetime.end.p0(i64 98, ptr nonnull %name.i) #26
  br label %for.inc

cgroup_add_file.exit:                             ; preds = %cgroup_file_mode.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  %64 = ptrtoint ptr %call6.i to i32
  call void @llvm.lifetime.end.p0(i64 98, ptr nonnull %name.i) #26
  br label %do.end78

do.end78:                                         ; preds = %cgroup_add_file.exit, %cgroup_add_file.exit.thread141
  %retval.0.i144 = phi i32 [ %call17.i.i, %cgroup_add_file.exit.thread141 ], [ %64, %cgroup_add_file.exit ]
  %call81 = call i32 (ptr, ...) @_printk(ptr noundef nonnull @.str.65, ptr noundef nonnull @.str.66, ptr noundef %cft.0157, i32 noundef %retval.0.i144) #31
  %cmp24.not151 = icmp eq ptr %cft.0157, %cfts
  br i1 %cmp24.not151, label %do.end78.for.end_crit_edge, label %do.end78.land.rhs25.lr.ph_crit_edge

do.end78.land.rhs25.lr.ph_crit_edge:              ; preds = %do.end78
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs25.lr.ph

do.end78.for.end_crit_edge:                       ; preds = %do.end78
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

if.else:                                          ; preds = %if.end70
  call void @llvm.lifetime.start.p0(i64 98, ptr nonnull %name.i108) #26
  %65 = call ptr @memset(ptr %name.i108, i32 255, i32 98)
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %66 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %66)
  %tobool.not.i109 = icmp eq i32 %66, 0
  br i1 %tobool.not.i109, label %if.else.if.end.i111_crit_edge, label %land.rhs.i

if.else.if.end.i111_crit_edge:                    ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i111

land.rhs.i:                                       ; preds = %if.else
  %call.i.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i111_crit_edge, !prof !637

land.rhs.i.if.end.i111_crit_edge:                 ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i111

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 1650, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i111

if.end.i111:                                      ; preds = %do.end.i, %land.rhs.i.if.end.i111_crit_edge, %if.else.if.end.i111_crit_edge
  %file_offset.i110 = getelementptr inbounds %struct.cftype, ptr %cft.0157, i32 0, i32 4
  %67 = ptrtoint ptr %file_offset.i110 to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load i32, ptr %file_offset.i110, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %68)
  %tobool24.not.i = icmp eq i32 %68, 0
  br i1 %tobool24.not.i, label %if.end.i111.if.end29.i_crit_edge, label %if.then25.i

if.end.i111.if.end29.i_crit_edge:                 ; preds = %if.end.i111
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end29.i

if.then25.i:                                      ; preds = %if.end.i111
  %ss.i = getelementptr inbounds %struct.cftype, ptr %cft.0157, i32 0, i32 5
  %69 = ptrtoint ptr %ss.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load ptr, ptr %ss.i, align 4
  %tobool.not.i.i112 = icmp eq ptr %70, null
  br i1 %tobool.not.i.i112, label %if.then25.i.cgroup_css.exit.i_crit_edge, label %if.then.i.i113

if.then25.i.cgroup_css.exit.i_crit_edge:          ; preds = %if.then25.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i

if.then.i.i113:                                   ; preds = %if.then25.i
  %id.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %70, i32 0, i32 19
  %71 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %id.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 18, i32 %72
  %73 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %73)
  %74 = load volatile ptr, ptr %arrayidx.i.i, align 4
  %call.i.i.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool2.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool2.not.i.i, label %lor.lhs.false.i.i114, label %if.then.i.i113.cgroup_css.exit.i_crit_edge

if.then.i.i113.cgroup_css.exit.i_crit_edge:       ; preds = %if.then.i.i113
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i

lor.lhs.false.i.i114:                             ; preds = %if.then.i.i113
  %call3.i.i = call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i.i)
  %tobool4.not.i.i = icmp eq i32 %call3.i.i, 0
  br i1 %tobool4.not.i.i, label %land.lhs.true.i.i115, label %lor.lhs.false.i.i114.cgroup_css.exit.i_crit_edge

lor.lhs.false.i.i114.cgroup_css.exit.i_crit_edge: ; preds = %lor.lhs.false.i.i114
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i

land.lhs.true.i.i115:                             ; preds = %lor.lhs.false.i.i114
  %call5.i.i = call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i.i)
  %tobool6.not.i.i = icmp eq i32 %call5.i.i, 0
  br i1 %tobool6.not.i.i, label %land.lhs.true.i.i115.cgroup_css.exit.i_crit_edge, label %land.lhs.true7.i.i

land.lhs.true.i.i115.cgroup_css.exit.i_crit_edge: ; preds = %land.lhs.true.i.i115
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i

land.lhs.true7.i.i:                               ; preds = %land.lhs.true.i.i115
  %.b15.i.i = load i1, ptr @cgroup_css.__warned, align 1
  br i1 %.b15.i.i, label %land.lhs.true7.i.i.cgroup_css.exit.i_crit_edge, label %if.then9.i.i

land.lhs.true7.i.i.cgroup_css.exit.i_crit_edge:   ; preds = %land.lhs.true7.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i

if.then9.i.i:                                     ; preds = %land.lhs.true7.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_css.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 486, ptr noundef nonnull @.str.22) #26
  br label %cgroup_css.exit.i

cgroup_css.exit.i:                                ; preds = %if.then9.i.i, %land.lhs.true7.i.i.cgroup_css.exit.i_crit_edge, %land.lhs.true.i.i115.cgroup_css.exit.i_crit_edge, %lor.lhs.false.i.i114.cgroup_css.exit.i_crit_edge, %if.then.i.i113.cgroup_css.exit.i_crit_edge, %if.then25.i.cgroup_css.exit.i_crit_edge
  %retval.0.i.i = phi ptr [ %74, %if.then9.i.i ], [ %74, %land.lhs.true7.i.i.cgroup_css.exit.i_crit_edge ], [ %74, %land.lhs.true.i.i115.cgroup_css.exit.i_crit_edge ], [ %74, %lor.lhs.false.i.i114.cgroup_css.exit.i_crit_edge ], [ %74, %if.then.i.i113.cgroup_css.exit.i_crit_edge ], [ %cgrp, %if.then25.i.cgroup_css.exit.i_crit_edge ]
  %75 = ptrtoint ptr %file_offset.i110 to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %file_offset.i110, align 4
  %add.ptr.i116 = getelementptr i8, ptr %retval.0.i.i, i32 %76
  call void @_raw_spin_lock_irq(ptr noundef nonnull @cgroup_file_kn_lock) #26
  %77 = ptrtoint ptr %add.ptr.i116 to i32
  call void @__asan_store4_noabort(i32 %77)
  store ptr null, ptr %add.ptr.i116, align 4
  call void @_raw_spin_unlock_irq(ptr noundef nonnull @cgroup_file_kn_lock) #26
  %notify_timer.i117 = getelementptr inbounds %struct.cgroup_file, ptr %add.ptr.i116, i32 0, i32 2
  %call28.i = call i32 @del_timer_sync(ptr noundef %notify_timer.i117) #26
  br label %if.end29.i

if.end29.i:                                       ; preds = %cgroup_css.exit.i, %if.end.i111.if.end29.i_crit_edge
  %78 = ptrtoint ptr %kn30.i to i32
  call void @__asan_load4_noabort(i32 %78)
  %79 = load ptr, ptr %kn30.i, align 8
  %ss1.i.i118 = getelementptr inbounds %struct.cftype, ptr %cft.0157, i32 0, i32 5
  %80 = ptrtoint ptr %ss1.i.i118 to i32
  call void @__asan_load4_noabort(i32 %80)
  %81 = load ptr, ptr %ss1.i.i118, align 4
  %tobool.not.i40.i = icmp eq ptr %81, null
  br i1 %tobool.not.i40.i, label %if.end29.i.if.else.i.i137_crit_edge, label %land.lhs.true.i41.i

if.end29.i.if.else.i.i137_crit_edge:              ; preds = %if.end29.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.else.i.i137

land.lhs.true.i41.i:                              ; preds = %if.end29.i
  %82 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %82)
  %83 = load i32, ptr %flags, align 4
  %and.i.i120 = and i32 %83, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i120)
  %tobool3.not.i.i121 = icmp eq i32 %and.i.i120, 0
  br i1 %tobool3.not.i.i121, label %land.lhs.true4.i.i126, label %land.lhs.true.i41.i.if.else.i.i137_crit_edge

land.lhs.true.i41.i.if.else.i.i137_crit_edge:     ; preds = %land.lhs.true.i41.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.else.i.i137

land.lhs.true4.i.i126:                            ; preds = %land.lhs.true.i41.i
  %84 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %84)
  %85 = load ptr, ptr %root.i, align 4
  %flags5.i.i123 = getelementptr inbounds %struct.cgroup_root, ptr %85, i32 0, i32 7
  %86 = ptrtoint ptr %flags5.i.i123 to i32
  call void @__asan_load4_noabort(i32 %86)
  %87 = load i32, ptr %flags5.i.i123, align 4
  %and6.i.i124 = and i32 %87, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and6.i.i124)
  %tobool7.not.i.i125 = icmp eq i32 %and6.i.i124, 0
  br i1 %tobool7.not.i.i125, label %if.then.i42.i, label %land.lhs.true4.i.i126.if.else.i.i137_crit_edge

land.lhs.true4.i.i126.if.else.i.i137_crit_edge:   ; preds = %land.lhs.true4.i.i126
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.else.i.i137

if.then.i42.i:                                    ; preds = %land.lhs.true4.i.i126
  call void @__sanitizer_cov_trace_pc() #28
  %and9.i.i127 = and i32 %83, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and9.i.i127)
  %tobool10.not.i.i128 = icmp eq i32 %and9.i.i127, 0
  %cond.i.i129 = select i1 %tobool10.not.i.i128, ptr @.str.26, ptr @.str.68
  %cmp.i.i.i130 = icmp eq ptr %85, @cgrp_dfl_root
  %name.i.i131 = getelementptr inbounds %struct.cgroup_subsys, ptr %81, i32 0, i32 20
  %legacy_name.i.i132 = getelementptr inbounds %struct.cgroup_subsys, ptr %81, i32 0, i32 21
  %cond11.in.i.i133 = select i1 %cmp.i.i.i130, ptr %name.i.i131, ptr %legacy_name.i.i132
  %88 = ptrtoint ptr %cond11.in.i.i133 to i32
  call void @__asan_load4_noabort(i32 %88)
  %cond11.i.i134 = load ptr, ptr %cond11.in.i.i133, align 4
  %call13.i.i135 = call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef nonnull %name.i108, i32 noundef 98, ptr noundef nonnull @.str.69, ptr noundef nonnull %cond.i.i129, ptr noundef %cond11.i.i134, ptr noundef %cft.0157) #26
  br label %cgroup_rm_file.exit

if.else.i.i137:                                   ; preds = %land.lhs.true4.i.i126.if.else.i.i137_crit_edge, %land.lhs.true.i41.i.if.else.i.i137_crit_edge, %if.end29.i.if.else.i.i137_crit_edge
  %call16.i.i136 = call i32 @strscpy(ptr noundef nonnull %name.i108, ptr noundef %cft.0157, i32 noundef 98) #26
  br label %cgroup_rm_file.exit

cgroup_rm_file.exit:                              ; preds = %if.else.i.i137, %if.then.i42.i
  %call.i43.i = call i32 @kernfs_remove_by_name_ns(ptr noundef %79, ptr noundef nonnull %name.i108, ptr noundef null) #26
  call void @llvm.lifetime.end.p0(i64 98, ptr nonnull %name.i108) #26
  br label %for.inc

for.inc:                                          ; preds = %cgroup_rm_file.exit, %cgroup_add_file.exit.thread, %land.lhs.true67.for.inc_crit_edge, %land.lhs.true59.for.inc_crit_edge, %land.lhs.true51.for.inc_crit_edge, %land.lhs.true43.for.inc_crit_edge, %land.lhs.true36.for.inc_crit_edge, %land.lhs.true.for.inc_crit_edge
  %ret.2 = phi i32 [ %ret.1152, %land.lhs.true43.for.inc_crit_edge ], [ %ret.1152, %land.lhs.true59.for.inc_crit_edge ], [ %ret.1152, %cgroup_rm_file.exit ], [ %ret.1152, %land.lhs.true67.for.inc_crit_edge ], [ %ret.1152, %land.lhs.true51.for.inc_crit_edge ], [ %ret.1152, %land.lhs.true36.for.inc_crit_edge ], [ %ret.1152, %land.lhs.true.for.inc_crit_edge ], [ 0, %cgroup_add_file.exit.thread ]
  %incdec.ptr = getelementptr %struct.cftype, ptr %cft.0157, i32 1
  %cmp24.not = icmp eq ptr %incdec.ptr, %cft_end.0165
  br i1 %cmp24.not, label %for.inc.for.end_crit_edge, label %for.inc.land.rhs25_crit_edge

for.inc.land.rhs25_crit_edge:                     ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs25

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %do.end78.for.end_crit_edge, %land.rhs25.for.end_crit_edge, %if.end.for.end_crit_edge
  %ret.1.lcssa = phi i32 [ 0, %if.end.for.end_crit_edge ], [ %ret.2, %for.inc.for.end_crit_edge ], [ %ret.1152, %land.rhs25.for.end_crit_edge ], [ %retval.0.i144, %do.end78.for.end_crit_edge ]
  ret i32 %ret.1.lcssa
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @__kernfs_create_file(ptr noundef, ptr noundef, i16 noundef zeroext, [1 x i32], [1 x i32], i64 noundef, ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kernfs_remove(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @init_timer_key(ptr noundef, ptr noundef, i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @cgroup_file_notify_timer(ptr noundef %timer) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %timer, i32 -8
  %call2.i = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @cgroup_file_kn_lock) #26
  %0 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %add.ptr, align 4
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %entry.cgroup_file_notify.exit_crit_edge, label %if.then.i

entry.cgroup_file_notify.exit_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_file_notify.exit

if.then.i:                                        ; preds = %entry
  %notified_at.i = getelementptr i8, ptr %timer, i32 -4
  %2 = ptrtoint ptr %notified_at.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %notified_at.i, align 4
  %add.i = add i32 %3, 1
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %4 = load volatile i32, ptr @jiffies, align 128
  %sub.i = sub i32 %4, %3
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub.i)
  %cmp5.i = icmp sgt i32 %sub.i, -1
  br i1 %cmp5.i, label %land.lhs.true.i, label %if.then.i.if.else.i_crit_edge

if.then.i.if.else.i_crit_edge:                    ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.else.i

land.lhs.true.i:                                  ; preds = %if.then.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %5 = load volatile i32, ptr @jiffies, align 128
  %sub7.i = sub i32 %add.i, %5
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %sub7.i)
  %cmp8.i = icmp sgt i32 %sub7.i, -1
  br i1 %cmp8.i, label %if.then10.i, label %land.lhs.true.i.if.else.i_crit_edge

land.lhs.true.i.if.else.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.else.i

if.then10.i:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  %call11.i = tail call i32 @timer_reduce(ptr noundef %timer, i32 noundef %add.i) #26
  br label %cgroup_file_notify.exit

if.else.i:                                        ; preds = %land.lhs.true.i.if.else.i_crit_edge, %if.then.i.if.else.i_crit_edge
  tail call void @kernfs_notify(ptr noundef nonnull %1) #26
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @jiffies to i32))
  %6 = load volatile i32, ptr @jiffies, align 128
  %7 = ptrtoint ptr %notified_at.i to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %notified_at.i, align 4
  br label %cgroup_file_notify.exit

cgroup_file_notify.exit:                          ; preds = %if.else.i, %if.then10.i, %entry.cgroup_file_notify.exit_crit_edge
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @cgroup_file_kn_lock, i32 noundef %call2.i) #26
  ret void
}

; Function Attrs: nofree nounwind null_pointer_is_valid
declare dso_local noundef i32 @snprintf(ptr noalias nocapture noundef writeonly, i32 noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #15

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @del_timer_sync(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kernfs_remove_by_name_ns(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcu_read_lock_sched_held() local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @cgroup1_check_for_release(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_cgroup_notify_populated(ptr noundef %cgrp, i32 noundef %val) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_notify_populated, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_cgroup_notify_populated, %do.body)) #26
          to label %if.end48 [label %do.body], !srcloc !657

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !636

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.71, i32 noundef 108, i32 noundef 9, ptr noundef null) #26
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i4 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i4
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !693
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_notify_populated, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %cgrp, ptr noundef nonnull @trace_cgroup_path, i32 noundef %val) #26
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !694
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !694
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i2.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i2.c to ptr
  %preempt_count.i.i3.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i3.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i3.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i3.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i5 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i5 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i6 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i6, label %if.end48.cpu_online.exit14_crit_edge, label %land.rhs.i.i.i.i8

if.end48.cpu_online.exit14_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit14

land.rhs.i.i.i.i8:                                ; preds = %if.end48
  %.b37.i.i.i.i7 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i7, label %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, label %if.then.i.i.i.i9, !prof !636

land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge:    ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit14

if.then.i.i.i.i9:                                 ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.71, i32 noundef 108, i32 noundef 9, ptr noundef null) #26
  br label %cpu_online.exit14

cpu_online.exit14:                                ; preds = %if.then.i.i.i.i9, %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, %if.end48.cpu_online.exit14_crit_edge
  %div3.i.i.i10 = lshr i32 %27, 5
  %arrayidx.i.i.i11 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i10
  %29 = ptrtoint ptr %arrayidx.i.i.i11 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i11, align 4
  %and.i.i.i12 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i12
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i13.not = icmp eq i32 %32, 0
  br i1 %tobool.i13.not, label %cpu_online.exit14.if.end69_crit_edge, label %if.then52

cpu_online.exit14.if.end69_crit_edge:             ; preds = %cpu_online.exit14
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit14
  %33 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !660
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_notify_populated, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b1 = load i1, ptr @trace_cgroup_notify_populated.__warned, align 1
  br i1 %.b1, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @trace_cgroup_notify_populated.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.70, i32 noundef 198, ptr noundef nonnull @.str.22) #26
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !661
  %38 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i15 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i15 to ptr
  %preempt_count.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i16, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i16, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit14.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__kasan_check_read(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idr_remove(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @cgroup_fs_context_free(ptr noundef %fc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_private.i = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 3
  %0 = ptrtoint ptr %fs_private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_private.i, align 4
  %name = getelementptr inbounds %struct.cgroup_fs_context, ptr %1, i32 0, i32 8
  %2 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %name, align 4
  tail call void @kfree(ptr noundef %3) #26
  %release_agent = getelementptr inbounds %struct.cgroup_fs_context, ptr %1, i32 0, i32 9
  %4 = ptrtoint ptr %release_agent to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %release_agent, align 4
  tail call void @kfree(ptr noundef %5) #26
  %ns = getelementptr inbounds %struct.cgroup_fs_context, ptr %1, i32 0, i32 2
  %6 = ptrtoint ptr %ns to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %ns, align 4
  %tobool.not.i = icmp eq ptr %7, null
  br i1 %tobool.not.i, label %entry.put_cgroup_ns.exit_crit_edge, label %land.lhs.true.i

entry.put_cgroup_ns.exit_crit_edge:               ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %put_cgroup_ns.exit

land.lhs.true.i:                                  ; preds = %entry
  %count.i = getelementptr inbounds %struct.ns_common, ptr %7, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #26
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !647
  tail call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #26
  %8 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #26, !srcloc !648
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %8, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.put_cgroup_ns.exit_crit_edge, label %if.then10.i.i.i.i, !prof !636

if.end5.i.i.i.i.put_cgroup_ns.exit_crit_edge:     ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %put_cgroup_ns.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @refcount_warn_saturate(ptr noundef %count.i, i32 noundef 3) #26
  br label %put_cgroup_ns.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !649
  tail call void @free_cgroup_ns(ptr noundef nonnull %7) #26
  br label %put_cgroup_ns.exit

put_cgroup_ns.exit:                               ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.put_cgroup_ns.exit_crit_edge, %entry.put_cgroup_ns.exit_crit_edge
  tail call void @kernfs_free_fs_context(ptr noundef %fc) #26
  tail call void @kfree(ptr noundef %1) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup2_parse_param(ptr noundef %fc, ptr noundef %param) #0 align 64 {
entry:
  %result = alloca %struct.fs_parse_result, align 8
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_private.i = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 3
  %0 = ptrtoint ptr %fs_private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_private.i, align 4
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %result) #26
  %2 = call ptr @memset(ptr %result, i32 255, i32 16)
  %log.i = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 9
  %call.i = call i32 @__fs_parse(ptr noundef %log.i, ptr noundef nonnull @cgroup2_fs_parameters, ptr noundef %param, ptr noundef nonnull %result) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp = icmp slt i32 %call.i, 0
  br i1 %cmp, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_const_cmp4(i32 3, i32 %call.i)
  %3 = icmp ult i32 %call.i, 3
  br i1 %3, label %switch.lookup, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

switch.lookup:                                    ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  %switch.gep = getelementptr inbounds [3 x i32], ptr @switch.table.cgroup2_parse_param, i32 0, i32 %call.i
  %4 = ptrtoint ptr %switch.gep to i32
  call void @__asan_load4_noabort(i32 %4)
  %switch.load = load i32, ptr %switch.gep, align 4
  %flags = getelementptr inbounds %struct.cgroup_fs_context, ptr %1, i32 0, i32 3
  %5 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %flags, align 4
  %or7 = or i32 %6, %switch.load
  store i32 %or7, ptr %flags, align 4
  br label %cleanup

cleanup:                                          ; preds = %switch.lookup, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call.i, %entry.cleanup_crit_edge ], [ -22, %if.end.cleanup_crit_edge ], [ 0, %switch.lookup ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %result) #26
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_get_tree(ptr noundef %fc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %fs_private.i = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 3
  %0 = ptrtoint ptr %fs_private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %fs_private.i, align 4
  store i1 true, ptr @cgrp_dfl_visible, align 1
  %2 = load i32, ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 3, i32 0, i32 7), align 4
  %and.i.i = and i32 %2, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %land.rhs.i, label %entry.if.end27.i_crit_edge

entry.if.end27.i_crit_edge:                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end27.i

land.rhs.i:                                       ; preds = %entry
  %.b38.i = load i1, ptr @cgroup_get_live.__already_done, align 1
  br i1 %.b38.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !636

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_get_live.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 615, i32 noundef 9, ptr noundef null) #26
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %entry.if.end27.i_crit_edge
  %3 = load i32, ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 3, i32 0, i32 7), align 4
  %and.i40.i = and i32 %3, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i40.i)
  %tobool.not.i41.i = icmp eq i32 %and.i40.i, 0
  br i1 %tobool.not.i41.i, label %if.then.i.i, label %if.end27.i.cgroup_get_live.exit_crit_edge

if.end27.i.cgroup_get_live.exit_crit_edge:        ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_get_live.exit

if.then.i.i:                                      ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call fastcc void @percpu_ref_get(ptr noundef getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 3, i32 0, i32 2)) #26
  br label %cgroup_get_live.exit

cgroup_get_live.exit:                             ; preds = %if.then.i.i, %if.end27.i.cgroup_get_live.exit_crit_edge
  %root = getelementptr inbounds %struct.cgroup_fs_context, ptr %1, i32 0, i32 1
  %4 = ptrtoint ptr %root to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @cgrp_dfl_root, ptr %root, align 4
  %call1 = tail call i32 @cgroup_do_get_tree(ptr noundef %fc)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.then, label %cgroup_get_live.exit.if.end_crit_edge

cgroup_get_live.exit.if.end_crit_edge:            ; preds = %cgroup_get_live.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.then:                                          ; preds = %cgroup_get_live.exit
  %5 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i5 = and i32 %5, -16384
  %6 = inttoptr i32 %and.i.i5 to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task.i, align 8
  %nsproxy.i = getelementptr inbounds %struct.task_struct, ptr %8, i32 0, i32 110
  %9 = ptrtoint ptr %nsproxy.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %nsproxy.i, align 4
  %cgroup_ns.i = getelementptr inbounds %struct.nsproxy, ptr %10, i32 0, i32 8
  %11 = ptrtoint ptr %cgroup_ns.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %cgroup_ns.i, align 4
  %cmp.i = icmp eq ptr %12, @init_cgroup_ns
  br i1 %cmp.i, label %if.then.i6, label %if.then.if.end_crit_edge

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.then.i6:                                       ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #28
  %flags = getelementptr inbounds %struct.cgroup_fs_context, ptr %1, i32 0, i32 3
  %13 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %flags, align 4
  %15 = load i32, ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 7), align 4
  %and2.i = and i32 %15, -105
  %storemerge20.i = and i32 %14, 104
  %or13.sink.i = or i32 %storemerge20.i, %and2.i
  store i32 %or13.sink.i, ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 7), align 4
  br label %if.end

if.end:                                           ; preds = %if.then.i6, %if.then.if.end_crit_edge, %cgroup_get_live.exit.if.end_crit_edge
  ret i32 %call1
}

; Function Attrs: mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @cgroup_reconfigure(ptr nocapture noundef readonly %fc) #22 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i.i to ptr
  %task.i = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %task.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %task.i, align 8
  %nsproxy.i = getelementptr inbounds %struct.task_struct, ptr %3, i32 0, i32 110
  %4 = ptrtoint ptr %nsproxy.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %nsproxy.i, align 4
  %cgroup_ns.i = getelementptr inbounds %struct.nsproxy, ptr %5, i32 0, i32 8
  %6 = ptrtoint ptr %cgroup_ns.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %cgroup_ns.i, align 4
  %cmp.i = icmp eq ptr %7, @init_cgroup_ns
  br i1 %cmp.i, label %if.then.i, label %entry.apply_cgroup_root_flags.exit_crit_edge

entry.apply_cgroup_root_flags.exit_crit_edge:     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %apply_cgroup_root_flags.exit

if.then.i:                                        ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %fs_private.i = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 3
  %8 = ptrtoint ptr %fs_private.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %fs_private.i, align 4
  %flags = getelementptr inbounds %struct.cgroup_fs_context, ptr %9, i32 0, i32 3
  %10 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags, align 4
  %12 = load i32, ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 7), align 4
  %and2.i = and i32 %12, -105
  %storemerge20.i = and i32 %11, 104
  %or13.sink.i = or i32 %storemerge20.i, %and2.i
  store i32 %or13.sink.i, ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 7), align 4
  br label %apply_cgroup_root_flags.exit

apply_cgroup_root_flags.exit:                     ; preds = %if.then.i, %entry.apply_cgroup_root_flags.exit_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @kernfs_free_fs_context(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @free_cgroup_ns(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__fs_parse(ptr noundef, ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @cgroup1_parse_param(ptr noundef, ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @cgroup1_get_tree(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @cgroup1_reconfigure(ptr noundef) #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_user_ns(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kernfs_root_from_sb(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @cgroup_bpf_offline(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @kernfs_kill_sb(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @percpu_ref_kill_and_confirm(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @refcount_dec_not_one(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @cgroup_freezer_migrate_task(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_irqrestore(ptr noundef, i32 noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strim(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @__put_task_struct(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cgroup_propagate_control(ptr noundef %cgrp) unnamed_addr #0 align 64 {
entry:
  %__ss_mask.i = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %entry.css_next_descendant_pre.exit_crit_edge

entry.css_next_descendant_pre.exit_crit_edge:     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit

land.lhs.true.i:                                  ; preds = %entry
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool2.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true3.i, label %land.lhs.true.i.css_next_descendant_pre.exit_crit_edge

land.lhs.true.i.css_next_descendant_pre.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i
  %call4.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %land.lhs.true3.i.css_next_descendant_pre.exit_crit_edge, label %land.lhs.true6.i

land.lhs.true3.i.css_next_descendant_pre.exit_crit_edge: ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit

land.lhs.true6.i:                                 ; preds = %land.lhs.true3.i
  %.b29.i = load i1, ptr @css_next_descendant_pre.__warned, align 1
  br i1 %.b29.i, label %land.lhs.true6.i.css_next_descendant_pre.exit_crit_edge, label %if.then.i

land.lhs.true6.i.css_next_descendant_pre.exit_crit_edge: ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit

if.then.i:                                        ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_next_descendant_pre.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 4385, ptr noundef nonnull @.str.14) #26
  br label %css_next_descendant_pre.exit

css_next_descendant_pre.exit:                     ; preds = %if.then.i, %land.lhs.true6.i.css_next_descendant_pre.exit_crit_edge, %land.lhs.true3.i.css_next_descendant_pre.exit_crit_edge, %land.lhs.true.i.css_next_descendant_pre.exit_crit_edge, %entry.css_next_descendant_pre.exit_crit_edge
  %tobool.not71 = icmp eq ptr %cgrp, null
  br i1 %tobool.not71, label %css_next_descendant_pre.exit.for.end_crit_edge, label %css_next_descendant_pre.exit.do.body_crit_edge

css_next_descendant_pre.exit.do.body_crit_edge:   ; preds = %css_next_descendant_pre.exit
  br label %do.body

css_next_descendant_pre.exit.for.end_crit_edge:   ; preds = %css_next_descendant_pre.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

do.body:                                          ; preds = %for.inc.do.body_crit_edge, %css_next_descendant_pre.exit.do.body_crit_edge
  %d_css.072 = phi ptr [ %call39, %for.inc.do.body_crit_edge ], [ %cgrp, %css_next_descendant_pre.exit.do.body_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool2.not = icmp eq i32 %0, 0
  br i1 %tobool2.not, label %do.body.if.end_crit_edge, label %land.rhs

do.body.if.end_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %do.body
  %call.i50 = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i50)
  %cmp.not = icmp eq i32 %call.i50, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 3056, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %do.body.if.end_crit_edge
  %1 = ptrtoint ptr %d_css.072 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %d_css.072, align 8
  %flags.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %2, i32 0, i32 7
  %3 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i51 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i51, label %if.end.for.inc_crit_edge, label %if.else

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

if.else:                                          ; preds = %if.end
  %parent.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %2, i32 0, i32 12
  %5 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %parent.i.i, align 8
  %root.i = getelementptr inbounds %struct.cgroup, ptr %2, i32 0, i32 19
  %7 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %root.i, align 4
  %subsys_mask.i = getelementptr inbounds %struct.cgroup_root, ptr %8, i32 0, i32 1
  %9 = ptrtoint ptr %subsys_mask.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %subsys_mask.i, align 4
  %tobool.not.i52 = icmp eq ptr %6, null
  br i1 %tobool.not.i52, label %if.end6.i, label %if.then.i53

if.then.i53:                                      ; preds = %if.else
  %subtree_control.i = getelementptr inbounds %struct.cgroup, ptr %6, i32 0, i32 14
  %11 = ptrtoint ptr %subtree_control.i to i32
  call void @__asan_load2_noabort(i32 %11)
  %12 = load i16, ptr %subtree_control.i, align 4
  %dom_cgrp.i.i = getelementptr inbounds %struct.cgroup, ptr %2, i32 0, i32 22
  %13 = ptrtoint ptr %dom_cgrp.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %dom_cgrp.i.i, align 8
  %cmp.i.not.i = icmp eq ptr %14, %2
  br i1 %cmp.i.not.i, label %if.then.i53.if.then.i58_crit_edge, label %if.then2.i

if.then.i53.if.then.i58_crit_edge:                ; preds = %if.then.i53
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then.i58

if.then2.i:                                       ; preds = %if.then.i53
  call void @__sanitizer_cov_trace_pc() #28
  %15 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %and23.i = and i16 %15, %12
  br label %if.then.i58

if.end6.i:                                        ; preds = %if.else
  %cmp.i24.i = icmp eq ptr %8, @cgrp_dfl_root
  br i1 %cmp.i24.i, label %if.then8.i, label %if.end6.i.if.end5.i_crit_edge

if.end6.i.if.end5.i_crit_edge:                    ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i

if.then8.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #28
  %16 = load i16, ptr @cgrp_dfl_inhibit_ss_mask, align 2
  %17 = load i16, ptr @cgrp_dfl_implicit_ss_mask, align 2
  %or22.i = or i16 %17, %16
  %or.i = zext i16 %or22.i to i32
  %neg.i = xor i32 %or.i, -1
  %and12.i = and i32 %10, %neg.i
  br label %if.end5.i

if.then.i58:                                      ; preds = %if.then2.i, %if.then.i53.if.then.i58_crit_edge
  %retval.0.i.ph = phi i16 [ %12, %if.then.i53.if.then.i58_crit_edge ], [ %and23.i, %if.then2.i ]
  %subtree_control67 = getelementptr inbounds %struct.cgroup, ptr %2, i32 0, i32 14
  %18 = ptrtoint ptr %subtree_control67 to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %subtree_control67, align 4
  %and4968 = and i16 %19, %retval.0.i.ph
  store i16 %and4968, ptr %subtree_control67, align 4
  %subtree_ss_mask.i = getelementptr inbounds %struct.cgroup, ptr %6, i32 0, i32 15
  %20 = ptrtoint ptr %subtree_ss_mask.i to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %subtree_ss_mask.i, align 2
  %22 = ptrtoint ptr %dom_cgrp.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %dom_cgrp.i.i, align 8
  %cmp.i.not.i57 = icmp eq ptr %23, %2
  br i1 %cmp.i.not.i57, label %if.then.i58.cgroup_ss_mask.exit_crit_edge, label %if.then2.i59

if.then.i58.cgroup_ss_mask.exit_crit_edge:        ; preds = %if.then.i58
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_ss_mask.exit

if.then2.i59:                                     ; preds = %if.then.i58
  call void @__sanitizer_cov_trace_pc() #28
  %24 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %and11.i = and i16 %24, %21
  br label %cgroup_ss_mask.exit

if.end5.i:                                        ; preds = %if.then8.i, %if.end6.i.if.end5.i_crit_edge
  %root_ss_mask.0.in.i = phi i32 [ %and12.i, %if.then8.i ], [ %10, %if.end6.i.if.end5.i_crit_edge ]
  %root_ss_mask.0.i = trunc i32 %root_ss_mask.0.in.i to i16
  %subtree_control = getelementptr inbounds %struct.cgroup, ptr %2, i32 0, i32 14
  %25 = ptrtoint ptr %subtree_control to i32
  call void @__asan_load2_noabort(i32 %25)
  %26 = load i16, ptr %subtree_control, align 4
  %and49 = and i16 %26, %root_ss_mask.0.i
  store i16 %and49, ptr %subtree_control, align 4
  %27 = ptrtoint ptr %subsys_mask.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %subsys_mask.i, align 4
  %conv6.i = trunc i32 %28 to i16
  br label %cgroup_ss_mask.exit

cgroup_ss_mask.exit:                              ; preds = %if.end5.i, %if.then2.i59, %if.then.i58.cgroup_ss_mask.exit_crit_edge
  %and4969 = phi i16 [ %and49, %if.end5.i ], [ %and4968, %if.then2.i59 ], [ %and4968, %if.then.i58.cgroup_ss_mask.exit_crit_edge ]
  %retval.0.i62 = phi i16 [ %conv6.i, %if.end5.i ], [ %and11.i, %if.then2.i59 ], [ %21, %if.then.i58.cgroup_ss_mask.exit_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %29 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.not.i63 = icmp eq i32 %29, 0
  br i1 %tobool.not.i63, label %cgroup_ss_mask.exit.if.end.i_crit_edge, label %land.rhs.i

cgroup_ss_mask.exit.if.end.i_crit_edge:           ; preds = %cgroup_ss_mask.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

land.rhs.i:                                       ; preds = %cgroup_ss_mask.exit
  %call.i.i64 = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i64)
  %cmp.not.i = icmp eq i32 %call.i.i64, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !637

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 1547, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %cgroup_ss_mask.exit.if.end.i_crit_edge
  %30 = load i16, ptr @cgrp_dfl_implicit_ss_mask, align 2
  %or59.i = or i16 %30, %and4969
  br label %while.cond.i

while.cond.i:                                     ; preds = %for.end.i.while.cond.i_crit_edge, %if.end.i
  %cur_ss_mask.0.i = phi i16 [ %or59.i, %if.end.i ], [ %and60.i, %for.end.i.while.cond.i_crit_edge ]
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__ss_mask.i) #26
  %conv27.i = zext i16 %cur_ss_mask.0.i to i32
  %31 = ptrtoint ptr %__ss_mask.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store i32 %conv27.i, ptr %__ss_mask.i, align 4
  %call28.i = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask.i, i32 noundef 14, i32 noundef 0) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %call28.i)
  %cmp2961.i = icmp slt i32 %call28.i, 14
  br i1 %cmp2961.i, label %while.cond.i.for.body.i_crit_edge, label %while.cond.i.for.end.i_crit_edge

while.cond.i.for.end.i_crit_edge:                 ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end.i

while.cond.i.for.body.i_crit_edge:                ; preds = %while.cond.i
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %while.cond.i.for.body.i_crit_edge
  %new_ss_mask.063.i = phi i16 [ %conv33.i, %for.body.i.for.body.i_crit_edge ], [ %cur_ss_mask.0.i, %while.cond.i.for.body.i_crit_edge ]
  %ssid.062.i = phi i32 [ %call34.i, %for.body.i.for.body.i_crit_edge ], [ %call28.i, %while.cond.i.for.body.i_crit_edge ]
  %arrayidx.i = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %ssid.062.i
  %32 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %arrayidx.i, align 4
  %depends_on.i = getelementptr inbounds %struct.cgroup_subsys, ptr %33, i32 0, i32 27
  %34 = ptrtoint ptr %depends_on.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load i32, ptr %depends_on.i, align 4
  %36 = trunc i32 %35 to i16
  %conv33.i = or i16 %new_ss_mask.063.i, %36
  %add.i = add nsw i32 %ssid.062.i, 1
  %call34.i = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask.i, i32 noundef 14, i32 noundef %add.i) #26
  %cmp29.i = icmp slt i32 %call34.i, 14
  br i1 %cmp29.i, label %for.body.i.for.body.i_crit_edge, label %for.body.i.for.end.i_crit_edge

for.body.i.for.end.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end.i

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body.i

for.end.i:                                        ; preds = %for.body.i.for.end.i_crit_edge, %while.cond.i.for.end.i_crit_edge
  %new_ss_mask.0.lcssa.i = phi i16 [ %cur_ss_mask.0.i, %while.cond.i.for.end.i_crit_edge ], [ %conv33.i, %for.body.i.for.end.i_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__ss_mask.i) #26
  %and60.i = and i16 %new_ss_mask.0.lcssa.i, %retval.0.i62
  %cmp42.i = icmp eq i16 %and60.i, %cur_ss_mask.0.i
  br i1 %cmp42.i, label %cgroup_calc_subtree_ss_mask.exit, label %for.end.i.while.cond.i_crit_edge

for.end.i.while.cond.i_crit_edge:                 ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.cond.i

cgroup_calc_subtree_ss_mask.exit:                 ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #28
  %subtree_ss_mask = getelementptr inbounds %struct.cgroup, ptr %2, i32 0, i32 15
  %37 = ptrtoint ptr %subtree_ss_mask to i32
  call void @__asan_store2_noabort(i32 %37)
  store i16 %cur_ss_mask.0.i, ptr %subtree_ss_mask, align 2
  br label %for.inc

for.inc:                                          ; preds = %cgroup_calc_subtree_ss_mask.exit, %if.end.for.inc_crit_edge
  %call39 = call ptr @css_next_descendant_pre(ptr noundef nonnull %d_css.072, ptr noundef nonnull %cgrp)
  %tobool.not = icmp eq ptr %call39, null
  br i1 %tobool.not, label %for.inc.for.end_crit_edge, label %for.inc.do.body_crit_edge

for.inc.do.body_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %css_next_descendant_pre.exit.for.end_crit_edge
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync)
define internal fastcc zeroext i16 @cgroup_control(ptr noundef readonly %cgrp) unnamed_addr #4 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %parent.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 12
  %0 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %parent.i, align 8
  %root = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 19
  %2 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %root, align 4
  %subsys_mask = getelementptr inbounds %struct.cgroup_root, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %subsys_mask to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %subsys_mask, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.end6, label %if.then

if.then:                                          ; preds = %entry
  %subtree_control = getelementptr inbounds %struct.cgroup, ptr %1, i32 0, i32 14
  %6 = ptrtoint ptr %subtree_control to i32
  call void @__asan_load2_noabort(i32 %6)
  %7 = load i16, ptr %subtree_control, align 4
  %dom_cgrp.i = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 22
  %8 = ptrtoint ptr %dom_cgrp.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dom_cgrp.i, align 8
  %cmp.i.not = icmp eq ptr %9, %cgrp
  br i1 %cmp.i.not, label %if.then.cleanup_crit_edge, label %if.then2

if.then.cleanup_crit_edge:                        ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then2:                                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #28
  %10 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %and23 = and i16 %10, %7
  br label %cleanup

if.end6:                                          ; preds = %entry
  %cmp.i24 = icmp eq ptr %3, @cgrp_dfl_root
  br i1 %cmp.i24, label %if.then8, label %if.end6.if.end14_crit_edge

if.end6.if.end14_crit_edge:                       ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end14

if.then8:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #28
  %11 = load i16, ptr @cgrp_dfl_inhibit_ss_mask, align 2
  %12 = load i16, ptr @cgrp_dfl_implicit_ss_mask, align 2
  %or22 = or i16 %12, %11
  %or = zext i16 %or22 to i32
  %neg = xor i32 %or, -1
  %and12 = and i32 %5, %neg
  br label %if.end14

if.end14:                                         ; preds = %if.then8, %if.end6.if.end14_crit_edge
  %root_ss_mask.0.in = phi i32 [ %and12, %if.then8 ], [ %5, %if.end6.if.end14_crit_edge ]
  %root_ss_mask.0 = trunc i32 %root_ss_mask.0.in to i16
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %if.then2, %if.then.cleanup_crit_edge
  %retval.0 = phi i16 [ %root_ss_mask.0, %if.end14 ], [ %and23, %if.then2 ], [ %7, %if.then.cleanup_crit_edge ]
  ret i16 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @kill_css(ptr noundef %css) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 5586, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %flags = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 7
  %1 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags, align 4
  %and = and i32 %2, 16
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool24.not = icmp eq i32 %and, 0
  br i1 %tobool24.not, label %if.end26, label %if.end.return_crit_edge

if.end.return_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %return

if.end26:                                         ; preds = %if.end
  %or = or i32 %2, 16
  %3 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %3)
  store i32 %or, ptr %flags, align 4
  %4 = ptrtoint ptr %css to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %css, align 8
  %and.i = and i32 %2, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.end26.css_clear_dir.exit_crit_edge, label %if.end.i

if.end26.css_clear_dir.exit_crit_edge:            ; preds = %if.end26
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_clear_dir.exit

if.end.i:                                         ; preds = %if.end26
  %and2.i = and i32 %or, -9
  %6 = ptrtoint ptr %flags to i32
  call void @__asan_store4_noabort(i32 %6)
  store i32 %and2.i, ptr %flags, align 4
  %ss.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 1
  %7 = ptrtoint ptr %ss.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %ss.i, align 4
  %tobool3.not.i = icmp eq ptr %8, null
  br i1 %tobool3.not.i, label %if.then4.i, label %if.else8.i

if.then4.i:                                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  %root.i.i = getelementptr inbounds %struct.cgroup, ptr %5, i32 0, i32 19
  %9 = ptrtoint ptr %root.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %root.i.i, align 4
  %cmp.i.i = icmp eq ptr %10, @cgrp_dfl_root
  %cgroup_base_files.cgroup1_base_files.i = select i1 %cmp.i.i, ptr @cgroup_base_files, ptr @cgroup1_base_files
  %call7.i = tail call fastcc i32 @cgroup_addrm_files(ptr noundef %css, ptr noundef %5, ptr noundef nonnull %cgroup_base_files.cgroup1_base_files.i, i1 noundef zeroext false) #26
  br label %css_clear_dir.exit

if.else8.i:                                       ; preds = %if.end.i
  %cfts10.i = getelementptr inbounds %struct.cgroup_subsys, ptr %8, i32 0, i32 24
  %11 = ptrtoint ptr %cfts10.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %.pn33.i = load ptr, ptr %cfts10.i, align 4
  %cmp.not35.i = icmp eq ptr %.pn33.i, %cfts10.i
  br i1 %cmp.not35.i, label %if.else8.i.css_clear_dir.exit_crit_edge, label %if.else8.i.for.body.i_crit_edge

if.else8.i.for.body.i_crit_edge:                  ; preds = %if.else8.i
  br label %for.body.i

if.else8.i.css_clear_dir.exit_crit_edge:          ; preds = %if.else8.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_clear_dir.exit

for.body.i:                                       ; preds = %for.body.i.for.body.i_crit_edge, %if.else8.i.for.body.i_crit_edge
  %.pn36.i = phi ptr [ %.pn.i, %for.body.i.for.body.i_crit_edge ], [ %.pn33.i, %if.else8.i.for.body.i_crit_edge ]
  %cfts.1.i = getelementptr i8, ptr %.pn36.i, i32 -84
  %call13.i = tail call fastcc i32 @cgroup_addrm_files(ptr noundef %css, ptr noundef %5, ptr noundef %cfts.1.i, i1 noundef zeroext false) #26
  %12 = ptrtoint ptr %.pn36.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %.pn.i = load ptr, ptr %.pn36.i, align 4
  %13 = ptrtoint ptr %ss.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %ss.i, align 4
  %cfts12.i = getelementptr inbounds %struct.cgroup_subsys, ptr %14, i32 0, i32 24
  %cmp.not.i = icmp eq ptr %.pn.i, %cfts12.i
  br i1 %cmp.not.i, label %for.body.i.css_clear_dir.exit_crit_edge, label %for.body.i.for.body.i_crit_edge

for.body.i.for.body.i_crit_edge:                  ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body.i

for.body.i.css_clear_dir.exit_crit_edge:          ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_clear_dir.exit

css_clear_dir.exit:                               ; preds = %for.body.i.css_clear_dir.exit_crit_edge, %if.else8.i.css_clear_dir.exit_crit_edge, %if.then4.i, %if.end26.css_clear_dir.exit_crit_edge
  %15 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %flags, align 4
  %and.i34 = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i34)
  %tobool.not.i35 = icmp eq i32 %and.i34, 0
  br i1 %tobool.not.i35, label %if.then.i, label %css_clear_dir.exit.css_get.exit_crit_edge

css_clear_dir.exit.css_get.exit_crit_edge:        ; preds = %css_clear_dir.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_get.exit

if.then.i:                                        ; preds = %css_clear_dir.exit
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 2
  tail call fastcc void @percpu_ref_get(ptr noundef %refcnt.i) #26
  br label %css_get.exit

css_get.exit:                                     ; preds = %if.then.i, %css_clear_dir.exit.css_get.exit_crit_edge
  %refcnt = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 2
  tail call void @percpu_ref_kill_and_confirm(ptr noundef %refcnt, ptr noundef nonnull @css_killed_ref_fn) #26
  br label %return

return:                                           ; preds = %css_get.exit, %if.end.return_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @css_killed_ref_fn(ptr noundef %ref) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %online_cnt = getelementptr i8, ptr %ref, i32 48
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %online_cnt, i32 noundef 4) #26
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !690
  tail call void @llvm.prefetch.p0(ptr %online_cnt, i32 1, i32 3, i32 1) #26
  %0 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %online_cnt, ptr %online_cnt, i32 1, ptr elementtype(i32) %online_cnt) #26, !srcloc !691
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %0, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !692
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i)
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i, label %do.body, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.body:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %destroy_work = getelementptr i8, ptr %ref, i32 52
  tail call void @__init_work(ptr noundef %destroy_work, i32 noundef 0) #26
  %1 = ptrtoint ptr %destroy_work to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 -64, ptr %destroy_work, align 4
  %lockdep_map = getelementptr i8, ptr %ref, i32 68
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.77, ptr noundef nonnull @css_killed_ref_fn.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #26
  %entry4 = getelementptr i8, ptr %ref, i32 56
  %2 = ptrtoint ptr %entry4 to i32
  call void @__asan_store4_noabort(i32 %2)
  store volatile ptr %entry4, ptr %entry4, align 4
  %prev.i = getelementptr i8, ptr %ref, i32 60
  %3 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %entry4, ptr %prev.i, align 4
  %func = getelementptr i8, ptr %ref, i32 64
  %4 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %4)
  store ptr @css_killed_work_fn, ptr %func, align 4
  %5 = load ptr, ptr @cgroup_destroy_wq, align 4
  %call.i = tail call zeroext i1 @queue_work_on(i32 noundef 4, ptr noundef %5, ptr noundef %destroy_work) #26
  br label %if.end

if.end:                                           ; preds = %do.body, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @css_killed_work_fn(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -60
  tail call void @mutex_lock_nested(ptr noundef nonnull @cgroup_mutex, i32 noundef 0) #26
  br label %do.body

do.body:                                          ; preds = %land.rhs.do.body_crit_edge, %entry
  %css.0 = phi ptr [ %add.ptr, %entry ], [ %18, %land.rhs.do.body_crit_edge ]
  %ss1.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css.0, i32 0, i32 1
  %0 = ptrtoint ptr %ss1.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ss1.i, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %do.body.if.end.i_crit_edge, label %land.rhs.i

do.body.if.end.i_crit_edge:                       ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

land.rhs.i:                                       ; preds = %do.body
  %call.i.i5 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i5)
  %cmp.not.i = icmp eq i32 %call.i.i5, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !637

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 5271, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %do.body.if.end.i_crit_edge
  %flags.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css.0, i32 0, i32 7
  %3 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool25.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool25.not.i, label %if.end.i.offline_css.exit_crit_edge, label %if.end27.i

if.end.i.offline_css.exit_crit_edge:              ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %offline_css.exit

if.end27.i:                                       ; preds = %if.end.i
  %css_offline.i = getelementptr inbounds %struct.cgroup_subsys, ptr %1, i32 0, i32 2
  %5 = ptrtoint ptr %css_offline.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %css_offline.i, align 4
  %tobool28.not.i = icmp eq ptr %6, null
  br i1 %tobool28.not.i, label %if.end27.i.if.end31.i_crit_edge, label %if.then29.i

if.end27.i.if.end31.i_crit_edge:                  ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end31.i

if.then29.i:                                      ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void %6(ptr noundef %css.0) #26
  br label %if.end31.i

if.end31.i:                                       ; preds = %if.then29.i, %if.end27.i.if.end31.i_crit_edge
  %7 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %flags.i, align 4
  %and33.i = and i32 %8, -3
  store i32 %and33.i, ptr %flags.i, align 4
  %9 = ptrtoint ptr %css.0 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %css.0, align 8
  %id.i = getelementptr inbounds %struct.cgroup_subsys, ptr %1, i32 0, i32 19
  %11 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %id.i, align 4
  %arrayidx.i = getelementptr %struct.cgroup, ptr %10, i32 0, i32 18, i32 %12
  %13 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store volatile ptr null, ptr %arrayidx.i, align 4
  %14 = load ptr, ptr %css.0, align 8
  %offline_waitq.i = getelementptr inbounds %struct.cgroup, ptr %14, i32 0, i32 31
  tail call void @__wake_up(ptr noundef %offline_waitq.i, i32 noundef 3, i32 noundef 0, ptr noundef null) #26
  br label %offline_css.exit

offline_css.exit:                                 ; preds = %if.end31.i, %if.end.i.offline_css.exit_crit_edge
  %15 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load i32, ptr %flags.i, align 4
  %and.i7 = and i32 %16, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i7)
  %tobool.not.i8 = icmp eq i32 %and.i7, 0
  br i1 %tobool.not.i8, label %if.then.i, label %offline_css.exit.css_put.exit_crit_edge

offline_css.exit.css_put.exit_crit_edge:          ; preds = %offline_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_put.exit

if.then.i:                                        ; preds = %offline_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css.0, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i) #26
  br label %css_put.exit

css_put.exit:                                     ; preds = %if.then.i, %offline_css.exit.css_put.exit_crit_edge
  %parent = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css.0, i32 0, i32 12
  %17 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %parent, align 8
  %tobool.not = icmp eq ptr %18, null
  br i1 %tobool.not, label %css_put.exit.do.end_crit_edge, label %land.rhs

css_put.exit.do.end_crit_edge:                    ; preds = %css_put.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

land.rhs:                                         ; preds = %css_put.exit
  %online_cnt = getelementptr inbounds %struct.cgroup_subsys_state, ptr %18, i32 0, i32 9
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %online_cnt, i32 noundef 4) #26
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !690
  tail call void @llvm.prefetch.p0(ptr %online_cnt, i32 1, i32 3, i32 1) #26
  %19 = tail call { i32, i32 } asm sideeffect "@ atomic_sub_return\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %online_cnt, ptr %online_cnt, i32 1, ptr elementtype(i32) %online_cnt) #26, !srcloc !691
  %asmresult.i.i.i.i.i = extractvalue { i32, i32 } %19, 0
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !692
  %cmp.i.i = icmp eq i32 %asmresult.i.i.i.i.i, 0
  br i1 %cmp.i.i, label %land.rhs.do.body_crit_edge, label %land.rhs.do.end_crit_edge

land.rhs.do.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end

land.rhs.do.body_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body

do.end:                                           ; preds = %land.rhs.do.end_crit_edge, %css_put.exit.do.end_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__wake_up(ptr noundef, i32 noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_work_on(i32 noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @cgroup_apply_cftypes(ptr noundef %cfts, i1 noundef zeroext %is_add) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %ss1 = getelementptr inbounds %struct.cftype, ptr %cfts, i32 0, i32 5
  %0 = ptrtoint ptr %ss1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ss1, align 4
  %root2 = getelementptr inbounds %struct.cgroup_subsys, ptr %1, i32 0, i32 22
  %2 = ptrtoint ptr %root2 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %root2, align 4
  %cgrp = getelementptr inbounds %struct.cgroup_root, ptr %3, i32 0, i32 3
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %4 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %4)
  %tobool.not = icmp eq i32 %4, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 4090, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %if.end.cgroup_css.exit_crit_edge, label %if.then.i

if.end.cgroup_css.exit_crit_edge:                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

if.then.i:                                        ; preds = %if.end
  %id.i = getelementptr inbounds %struct.cgroup_subsys, ptr %1, i32 0, i32 19
  %5 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %id.i, align 4
  %arrayidx.i = getelementptr %struct.cgroup_root, ptr %3, i32 0, i32 3, i32 18, i32 %6
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load volatile ptr, ptr %arrayidx.i, align 4
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool2.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool2.not.i, label %lor.lhs.false.i, label %if.then.i.cgroup_css.exit_crit_edge

if.then.i.cgroup_css.exit_crit_edge:              ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

lor.lhs.false.i:                                  ; preds = %if.then.i
  %call3.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %land.lhs.true.i, label %lor.lhs.false.i.cgroup_css.exit_crit_edge

lor.lhs.false.i.cgroup_css.exit_crit_edge:        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

land.lhs.true.i:                                  ; preds = %lor.lhs.false.i
  %call5.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %land.lhs.true.i.cgroup_css.exit_crit_edge, label %land.lhs.true7.i

land.lhs.true.i.cgroup_css.exit_crit_edge:        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i
  %.b15.i = load i1, ptr @cgroup_css.__warned, align 1
  br i1 %.b15.i, label %land.lhs.true7.i.cgroup_css.exit_crit_edge, label %if.then9.i

land.lhs.true7.i.cgroup_css.exit_crit_edge:       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

if.then9.i:                                       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_css.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 486, ptr noundef nonnull @.str.22) #26
  br label %cgroup_css.exit

cgroup_css.exit:                                  ; preds = %if.then9.i, %land.lhs.true7.i.cgroup_css.exit_crit_edge, %land.lhs.true.i.cgroup_css.exit_crit_edge, %lor.lhs.false.i.cgroup_css.exit_crit_edge, %if.then.i.cgroup_css.exit_crit_edge, %if.end.cgroup_css.exit_crit_edge
  %retval.0.i = phi ptr [ %8, %if.then9.i ], [ %8, %land.lhs.true7.i.cgroup_css.exit_crit_edge ], [ %8, %land.lhs.true.i.cgroup_css.exit_crit_edge ], [ %8, %lor.lhs.false.i.cgroup_css.exit_crit_edge ], [ %8, %if.then.i.cgroup_css.exit_crit_edge ], [ %cgrp, %if.end.cgroup_css.exit_crit_edge ]
  %call.i61 = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i61)
  %tobool.not.i62 = icmp eq i32 %call.i61, 0
  br i1 %tobool.not.i62, label %land.lhs.true.i65, label %cgroup_css.exit.css_next_descendant_pre.exit_crit_edge

cgroup_css.exit.css_next_descendant_pre.exit_crit_edge: ; preds = %cgroup_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit

land.lhs.true.i65:                                ; preds = %cgroup_css.exit
  %call.i.i63 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i63)
  %tobool2.not.i64 = icmp eq i32 %call.i.i63, 0
  br i1 %tobool2.not.i64, label %land.lhs.true3.i, label %land.lhs.true.i65.css_next_descendant_pre.exit_crit_edge

land.lhs.true.i65.css_next_descendant_pre.exit_crit_edge: ; preds = %land.lhs.true.i65
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i65
  %call4.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %land.lhs.true3.i.css_next_descendant_pre.exit_crit_edge, label %land.lhs.true6.i

land.lhs.true3.i.css_next_descendant_pre.exit_crit_edge: ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit

land.lhs.true6.i:                                 ; preds = %land.lhs.true3.i
  %.b29.i = load i1, ptr @css_next_descendant_pre.__warned, align 1
  br i1 %.b29.i, label %land.lhs.true6.i.css_next_descendant_pre.exit_crit_edge, label %if.then.i66

land.lhs.true6.i.css_next_descendant_pre.exit_crit_edge: ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit

if.then.i66:                                      ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_next_descendant_pre.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 4385, ptr noundef nonnull @.str.14) #26
  br label %css_next_descendant_pre.exit

css_next_descendant_pre.exit:                     ; preds = %if.then.i66, %land.lhs.true6.i.css_next_descendant_pre.exit_crit_edge, %land.lhs.true3.i.css_next_descendant_pre.exit_crit_edge, %land.lhs.true.i65.css_next_descendant_pre.exit_crit_edge, %cgroup_css.exit.css_next_descendant_pre.exit_crit_edge
  %tobool28.not90 = icmp eq ptr %retval.0.i, null
  br i1 %tobool28.not90, label %css_next_descendant_pre.exit.for.end_crit_edge, label %for.body.lr.ph

css_next_descendant_pre.exit.for.end_crit_edge:   ; preds = %css_next_descendant_pre.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.body.lr.ph:                                   ; preds = %css_next_descendant_pre.exit
  %id.i69 = getelementptr inbounds %struct.cgroup_subsys, ptr %1, i32 0, i32 19
  br label %for.body

for.body:                                         ; preds = %cgroup_css.exit84.for.body_crit_edge, %for.body.lr.ph
  %css.091 = phi ptr [ %retval.0.i, %for.body.lr.ph ], [ %call39, %cgroup_css.exit84.for.body_crit_edge ]
  %flags = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css.091, i32 0, i32 7
  %9 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %flags, align 4
  %and = and i32 %10, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool30.not = icmp eq i32 %and, 0
  br i1 %tobool30.not, label %for.body.for.inc_crit_edge, label %cleanup

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

cleanup:                                          ; preds = %for.body
  %11 = ptrtoint ptr %css.091 to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %css.091, align 8
  %call34 = tail call fastcc i32 @cgroup_addrm_files(ptr noundef nonnull %css.091, ptr noundef %12, ptr noundef %cfts, i1 noundef zeroext %is_add)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call34)
  %tobool35.not.not = icmp eq i32 %call34, 0
  br i1 %tobool35.not.not, label %cleanup.for.inc_crit_edge, label %cleanup.if.end43_crit_edge

cleanup.if.end43_crit_edge:                       ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end43

cleanup.for.inc_crit_edge:                        ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

for.inc:                                          ; preds = %cleanup.for.inc_crit_edge, %for.body.for.inc_crit_edge
  br i1 %tobool.not.i, label %for.inc.cgroup_css.exit84_crit_edge, label %if.then.i73

for.inc.cgroup_css.exit84_crit_edge:              ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit84

if.then.i73:                                      ; preds = %for.inc
  %13 = ptrtoint ptr %id.i69 to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %id.i69, align 4
  %arrayidx.i70 = getelementptr %struct.cgroup_root, ptr %3, i32 0, i32 3, i32 18, i32 %14
  %15 = ptrtoint ptr %arrayidx.i70 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load volatile ptr, ptr %arrayidx.i70, align 4
  %call.i.i71 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i71)
  %tobool2.not.i72 = icmp eq i32 %call.i.i71, 0
  br i1 %tobool2.not.i72, label %lor.lhs.false.i76, label %if.then.i73.cgroup_css.exit84_crit_edge

if.then.i73.cgroup_css.exit84_crit_edge:          ; preds = %if.then.i73
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit84

lor.lhs.false.i76:                                ; preds = %if.then.i73
  %call3.i74 = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i74)
  %tobool4.not.i75 = icmp eq i32 %call3.i74, 0
  br i1 %tobool4.not.i75, label %land.lhs.true.i79, label %lor.lhs.false.i76.cgroup_css.exit84_crit_edge

lor.lhs.false.i76.cgroup_css.exit84_crit_edge:    ; preds = %lor.lhs.false.i76
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit84

land.lhs.true.i79:                                ; preds = %lor.lhs.false.i76
  %call5.i77 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i77)
  %tobool6.not.i78 = icmp eq i32 %call5.i77, 0
  br i1 %tobool6.not.i78, label %land.lhs.true.i79.cgroup_css.exit84_crit_edge, label %land.lhs.true7.i81

land.lhs.true.i79.cgroup_css.exit84_crit_edge:    ; preds = %land.lhs.true.i79
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit84

land.lhs.true7.i81:                               ; preds = %land.lhs.true.i79
  %.b15.i80 = load i1, ptr @cgroup_css.__warned, align 1
  br i1 %.b15.i80, label %land.lhs.true7.i81.cgroup_css.exit84_crit_edge, label %if.then9.i82

land.lhs.true7.i81.cgroup_css.exit84_crit_edge:   ; preds = %land.lhs.true7.i81
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit84

if.then9.i82:                                     ; preds = %land.lhs.true7.i81
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_css.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 486, ptr noundef nonnull @.str.22) #26
  br label %cgroup_css.exit84

cgroup_css.exit84:                                ; preds = %if.then9.i82, %land.lhs.true7.i81.cgroup_css.exit84_crit_edge, %land.lhs.true.i79.cgroup_css.exit84_crit_edge, %lor.lhs.false.i76.cgroup_css.exit84_crit_edge, %if.then.i73.cgroup_css.exit84_crit_edge, %for.inc.cgroup_css.exit84_crit_edge
  %retval.0.i83 = phi ptr [ %16, %if.then9.i82 ], [ %16, %land.lhs.true7.i81.cgroup_css.exit84_crit_edge ], [ %16, %land.lhs.true.i79.cgroup_css.exit84_crit_edge ], [ %16, %lor.lhs.false.i76.cgroup_css.exit84_crit_edge ], [ %16, %if.then.i73.cgroup_css.exit84_crit_edge ], [ %cgrp, %for.inc.cgroup_css.exit84_crit_edge ]
  %call39 = tail call ptr @css_next_descendant_pre(ptr noundef nonnull %css.091, ptr noundef %retval.0.i83)
  %tobool28.not = icmp eq ptr %call39, null
  br i1 %tobool28.not, label %cgroup_css.exit84.for.end_crit_edge, label %cgroup_css.exit84.for.body_crit_edge

cgroup_css.exit84.for.body_crit_edge:             ; preds = %cgroup_css.exit84
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

cgroup_css.exit84.for.end_crit_edge:              ; preds = %cgroup_css.exit84
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.end:                                          ; preds = %cgroup_css.exit84.for.end_crit_edge, %css_next_descendant_pre.exit.for.end_crit_edge
  br i1 %is_add, label %if.then42, label %for.end.if.end43_crit_edge

for.end.if.end43_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end43

if.then42:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #28
  %kn = getelementptr inbounds %struct.cgroup_root, ptr %3, i32 0, i32 3, i32 11
  %17 = ptrtoint ptr %kn to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %kn, align 8
  tail call void @kernfs_activate(ptr noundef %18) #26
  br label %if.end43

if.end43:                                         ; preds = %if.then42, %for.end.if.end43_crit_edge, %cleanup.if.end43_crit_edge
  %ret.298 = phi i32 [ 0, %if.then42 ], [ 0, %for.end.if.end43_crit_edge ], [ %call34, %cleanup.if.end43_crit_edge ]
  ret i32 %ret.298
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @css_task_iter_advance_css_set(ptr noundef %it) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 4585, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %tcset_pos.i = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 4
  %tcset_head.i = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 5
  %cset_pos.i = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 2
  %cset_head.i = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 3
  %flags.i = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 1
  %cur_dcset.i = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 9
  br label %while.cond

while.cond:                                       ; preds = %if.else35.while.cond_crit_edge, %if.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %1 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %1)
  %tobool.not.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i, label %while.cond.if.end.i_crit_edge, label %land.rhs.i

while.cond.if.end.i_crit_edge:                    ; preds = %while.cond
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

land.rhs.i:                                       ; preds = %while.cond
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.spinlock, ptr @css_set_lock, i32 0, i32 0, i32 0, i32 4), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !637

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 4529, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %while.cond.if.end.i_crit_edge
  %2 = ptrtoint ptr %tcset_pos.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %tcset_pos.i, align 4
  %tobool24.not.i = icmp eq ptr %3, null
  br i1 %tobool24.not.i, label %if.end.i.if.end33.i_crit_edge, label %if.then25.i

if.end.i.if.end33.i_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end33.i

if.then25.i:                                      ; preds = %if.end.i
  %4 = ptrtoint ptr %3 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %3, align 4
  %6 = ptrtoint ptr %tcset_head.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %tcset_head.i, align 4
  %cmp27.not.i = icmp eq ptr %5, %7
  br i1 %cmp27.not.i, label %if.end31.i, label %if.then28.i

if.then28.i:                                      ; preds = %if.then25.i
  call void @__sanitizer_cov_trace_pc() #28
  %8 = ptrtoint ptr %tcset_pos.i to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %5, ptr %tcset_pos.i, align 4
  %add.ptr.i = getelementptr i8, ptr %5, i32 -224
  br label %css_task_iter_next_css_set.exit

if.end31.i:                                       ; preds = %if.then25.i
  call void @__sanitizer_cov_trace_pc() #28
  %9 = ptrtoint ptr %tcset_pos.i to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr null, ptr %tcset_pos.i, align 4
  br label %if.end33.i

if.end33.i:                                       ; preds = %if.end31.i, %if.end.i.if.end33.i_crit_edge
  %10 = ptrtoint ptr %cset_pos.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %cset_pos.i, align 4
  %12 = ptrtoint ptr %11 to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %11, align 4
  %14 = ptrtoint ptr %cset_head.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %cset_head.i, align 4
  %cmp35.i = icmp eq ptr %13, %15
  br i1 %cmp35.i, label %css_task_iter_next_css_set.exit.thread, label %if.end38.i

css_task_iter_next_css_set.exit.thread:           ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #28
  %16 = ptrtoint ptr %cset_pos.i to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr null, ptr %cset_pos.i, align 4
  br label %if.then45.critedge

if.end38.i:                                       ; preds = %if.end33.i
  %17 = ptrtoint ptr %it to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %it, align 4
  %tobool39.not.i = icmp eq ptr %18, null
  br i1 %tobool39.not.i, label %if.else.i, label %if.then40.i

if.then40.i:                                      ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #28
  %id.i = getelementptr inbounds %struct.cgroup_subsys, ptr %18, i32 0, i32 19
  %19 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %id.i, align 4
  %.neg.i = mul i32 %20, -8
  %idx.neg.i = add i32 %.neg.i, -104
  %add.ptr44.i = getelementptr i8, ptr %13, i32 %idx.neg.i
  br label %if.end49.i

if.else.i:                                        ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #28
  %cset48.i = getelementptr i8, ptr %13, i32 -4
  %21 = ptrtoint ptr %cset48.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %cset48.i, align 4
  br label %if.end49.i

if.end49.i:                                       ; preds = %if.else.i, %if.then40.i
  %cset.0.i = phi ptr [ %add.ptr44.i, %if.then40.i ], [ %22, %if.else.i ]
  %23 = ptrtoint ptr %cset_pos.i to i32
  call void @__asan_store4_noabort(i32 %23)
  store ptr %13, ptr %cset_pos.i, align 4
  %24 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %25, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool51.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool51.not.i, label %if.end49.i.css_task_iter_next_css_set.exit_crit_edge, label %if.then52.i

if.end49.i.css_task_iter_next_css_set.exit_crit_edge: ; preds = %if.end49.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_task_iter_next_css_set.exit

if.then52.i:                                      ; preds = %if.end49.i
  %26 = ptrtoint ptr %cur_dcset.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %cur_dcset.i, align 4
  %tobool53.not.i = icmp eq ptr %27, null
  br i1 %tobool53.not.i, label %if.then52.i.if.end56.i_crit_edge, label %if.then54.i

if.then52.i.if.end56.i_crit_edge:                 ; preds = %if.then52.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end56.i

if.then54.i:                                      ; preds = %if.then52.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @put_css_set_locked(ptr noundef nonnull %27) #26
  br label %if.end56.i

if.end56.i:                                       ; preds = %if.then54.i, %if.then52.i.if.end56.i_crit_edge
  %28 = ptrtoint ptr %cur_dcset.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store ptr %cset.0.i, ptr %cur_dcset.i, align 4
  %refcount.i.i = getelementptr inbounds %struct.css_set, ptr %cset.0.i, i32 0, i32 1
  %call.i.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i.i, i32 noundef 4) #26
  tail call void @llvm.prefetch.p0(ptr %refcount.i.i, i32 1, i32 3, i32 1) #26
  %29 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i.i, ptr %refcount.i.i, i32 1, ptr elementtype(i32) %refcount.i.i) #26, !srcloc !663
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %29, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i.i, label %if.end56.i.if.end15.sink.split.i.i.i.i.i_crit_edge, label %if.else.i.i.i.i.i, !prof !637

if.end56.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.end56.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i:                                ; preds = %if.end56.i
  %add.i.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i.i, 1
  %30 = or i32 %add.i.i.i.i.i, %asmresult.i.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %30)
  %.not.i.i.i.i.i = icmp sgt i32 %30, -1
  br i1 %.not.i.i.i.i.i, label %if.else.i.i.i.i.i.get_css_set.exit.i_crit_edge, label %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, !prof !636

if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i.i

if.else.i.i.i.i.i.get_css_set.exit.i_crit_edge:   ; preds = %if.else.i.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %get_css_set.exit.i

if.end15.sink.split.i.i.i.i.i:                    ; preds = %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge, %if.end56.i.if.end15.sink.split.i.i.i.i.i_crit_edge
  %.sink.i.i.i.i.i = phi i32 [ 2, %if.end56.i.if.end15.sink.split.i.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.i.if.end15.sink.split.i.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i.i, i32 noundef %.sink.i.i.i.i.i) #26
  br label %get_css_set.exit.i

get_css_set.exit.i:                               ; preds = %if.end15.sink.split.i.i.i.i.i, %if.else.i.i.i.i.i.get_css_set.exit.i_crit_edge
  %threaded_csets.i = getelementptr inbounds %struct.css_set, ptr %cset.0.i, i32 0, i32 10
  %31 = ptrtoint ptr %tcset_head.i to i32
  call void @__asan_store4_noabort(i32 %31)
  store ptr %threaded_csets.i, ptr %tcset_head.i, align 4
  %32 = ptrtoint ptr %tcset_pos.i to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %threaded_csets.i, ptr %tcset_pos.i, align 4
  br label %css_task_iter_next_css_set.exit

css_task_iter_next_css_set.exit:                  ; preds = %get_css_set.exit.i, %if.end49.i.css_task_iter_next_css_set.exit_crit_edge, %if.then28.i
  %retval.0.i = phi ptr [ %add.ptr.i, %if.then28.i ], [ %cset.0.i, %get_css_set.exit.i ], [ %cset.0.i, %if.end49.i.css_task_iter_next_css_set.exit_crit_edge ]
  %tobool25.not = icmp eq ptr %retval.0.i, null
  br i1 %tobool25.not, label %css_task_iter_next_css_set.exit.if.then45.critedge_crit_edge, label %while.body

css_task_iter_next_css_set.exit.if.then45.critedge_crit_edge: ; preds = %css_task_iter_next_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then45.critedge

while.body:                                       ; preds = %css_task_iter_next_css_set.exit
  %tasks = getelementptr inbounds %struct.css_set, ptr %retval.0.i, i32 0, i32 5
  %33 = ptrtoint ptr %tasks to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load volatile ptr, ptr %tasks, align 4
  %cmp.i.not = icmp eq ptr %34, %tasks
  br i1 %cmp.i.not, label %if.else, label %while.body.if.end46_crit_edge

while.body.if.end46_crit_edge:                    ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end46

if.else:                                          ; preds = %while.body
  %mg_tasks = getelementptr inbounds %struct.css_set, ptr %retval.0.i, i32 0, i32 6
  %35 = ptrtoint ptr %mg_tasks to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile ptr, ptr %mg_tasks, align 4
  %cmp.i78.not = icmp eq ptr %36, %mg_tasks
  br i1 %cmp.i78.not, label %if.else35, label %if.else.if.end46_crit_edge

if.else.if.end46_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end46

if.else35:                                        ; preds = %if.else
  %dying_tasks = getelementptr inbounds %struct.css_set, ptr %retval.0.i, i32 0, i32 7
  %37 = ptrtoint ptr %dying_tasks to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load volatile ptr, ptr %dying_tasks, align 4
  %cmp.i80.not = icmp eq ptr %38, %dying_tasks
  br i1 %cmp.i80.not, label %if.else35.while.cond_crit_edge, label %if.else35.if.end46_crit_edge

if.else35.if.end46_crit_edge:                     ; preds = %if.else35
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end46

if.else35.while.cond_crit_edge:                   ; preds = %if.else35
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.cond

if.then45.critedge:                               ; preds = %css_task_iter_next_css_set.exit.if.then45.critedge_crit_edge, %css_task_iter_next_css_set.exit.thread
  %task_pos = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 6
  %39 = ptrtoint ptr %task_pos to i32
  call void @__asan_store4_noabort(i32 %39)
  store ptr null, ptr %task_pos, align 4
  br label %cleanup

if.end46:                                         ; preds = %if.else35.if.end46_crit_edge, %if.else.if.end46_crit_edge, %while.body.if.end46_crit_edge
  %tasks.lcssa.sink = phi ptr [ %tasks, %while.body.if.end46_crit_edge ], [ %mg_tasks, %if.else.if.end46_crit_edge ], [ %dying_tasks, %if.else35.if.end46_crit_edge ]
  %cur_tasks_head = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 7
  %40 = ptrtoint ptr %cur_tasks_head to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr %tasks.lcssa.sink, ptr %cur_tasks_head, align 4
  %41 = ptrtoint ptr %tasks.lcssa.sink to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %tasks.lcssa.sink, align 4
  %task_pos48 = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 6
  %43 = ptrtoint ptr %task_pos48 to i32
  call void @__asan_store4_noabort(i32 %43)
  store ptr %42, ptr %task_pos48, align 4
  %cur_cset = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 8
  %44 = ptrtoint ptr %cur_cset to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %cur_cset, align 4
  %tobool49.not = icmp eq ptr %45, null
  br i1 %tobool49.not, label %if.end46.if.end52_crit_edge, label %if.then50

if.end46.if.end52_crit_edge:                      ; preds = %if.end46
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end52

if.then50:                                        ; preds = %if.end46
  %iters_node = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 11
  %call.i.i82 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %iters_node) #26
  br i1 %call.i.i82, label %if.end.i.i, label %if.then50.list_del.exit_crit_edge

if.then50.list_del.exit_crit_edge:                ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del.exit

if.end.i.i:                                       ; preds = %if.then50
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 11, i32 1
  %46 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %prev.i.i, align 4
  %48 = ptrtoint ptr %iters_node to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %iters_node, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %49, i32 0, i32 1
  %50 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %50)
  store ptr %47, ptr %prev1.i.i.i, align 4
  %51 = ptrtoint ptr %47 to i32
  call void @__asan_store4_noabort(i32 %51)
  store volatile ptr %49, ptr %47, align 4
  br label %list_del.exit

list_del.exit:                                    ; preds = %if.end.i.i, %if.then50.list_del.exit_crit_edge
  %52 = ptrtoint ptr %iters_node to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr inttoptr (i32 256 to ptr), ptr %iters_node, align 4
  %prev.i = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 11, i32 1
  %53 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %53)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %54 = ptrtoint ptr %cur_cset to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %cur_cset, align 4
  tail call void @put_css_set_locked(ptr noundef %55)
  br label %if.end52

if.end52:                                         ; preds = %list_del.exit, %if.end46.if.end52_crit_edge
  %refcount.i = getelementptr inbounds %struct.css_set, ptr %retval.0.i, i32 0, i32 1
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %refcount.i, i32 noundef 4) #26
  tail call void @llvm.prefetch.p0(ptr %refcount.i, i32 1, i32 3, i32 1) #26
  %56 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %refcount.i, ptr %refcount.i, i32 1, ptr elementtype(i32) %refcount.i) #26, !srcloc !663
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %56, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.end52.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !637

if.end52.if.end15.sink.split.i.i.i.i_crit_edge:   ; preds = %if.end52
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.end52
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %57 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %57)
  %.not.i.i.i.i = icmp sgt i32 %57, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.get_css_set.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !636

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.get_css_set.exit_crit_edge:       ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %get_css_set.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.end52.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.end52.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %refcount.i, i32 noundef %.sink.i.i.i.i) #26
  br label %get_css_set.exit

get_css_set.exit:                                 ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.get_css_set.exit_crit_edge
  %58 = ptrtoint ptr %cur_cset to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr %retval.0.i, ptr %cur_cset, align 4
  %iters_node54 = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 11
  %task_iters = getelementptr inbounds %struct.css_set, ptr %retval.0.i, i32 0, i32 8
  %59 = ptrtoint ptr %task_iters to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load ptr, ptr %task_iters, align 4
  %call.i.i83 = tail call zeroext i1 @__list_add_valid(ptr noundef %iters_node54, ptr noundef %task_iters, ptr noundef %60) #26
  br i1 %call.i.i83, label %if.end.i.i84, label %get_css_set.exit.cleanup_crit_edge

get_css_set.exit.cleanup_crit_edge:               ; preds = %get_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end.i.i84:                                     ; preds = %get_css_set.exit
  call void @__sanitizer_cov_trace_pc() #28
  %prev1.i.i = getelementptr inbounds %struct.list_head, ptr %60, i32 0, i32 1
  %61 = ptrtoint ptr %prev1.i.i to i32
  call void @__asan_store4_noabort(i32 %61)
  store ptr %iters_node54, ptr %prev1.i.i, align 4
  %62 = ptrtoint ptr %iters_node54 to i32
  call void @__asan_store4_noabort(i32 %62)
  store ptr %60, ptr %iters_node54, align 4
  %prev3.i.i = getelementptr inbounds %struct.css_task_iter, ptr %it, i32 0, i32 11, i32 1
  %63 = ptrtoint ptr %prev3.i.i to i32
  call void @__asan_store4_noabort(i32 %63)
  store ptr %task_iters, ptr %prev3.i.i, align 4
  %64 = ptrtoint ptr %task_iters to i32
  call void @__asan_store4_noabort(i32 %64)
  store volatile ptr %iters_node54, ptr %task_iters, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end.i.i84, %get_css_set.exit.cleanup_crit_edge, %if.then45.critedge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @css_release_work_fn(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -60
  %ss1 = getelementptr i8, ptr %work, i32 -56
  %0 = ptrtoint ptr %ss1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ss1, align 4
  %2 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %add.ptr, align 8
  tail call void @mutex_lock_nested(ptr noundef nonnull @cgroup_mutex, i32 noundef 0) #26
  %flags = getelementptr i8, ptr %work, i32 -16
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags, align 4
  %or = or i32 %5, 4
  store i32 %or, ptr %flags, align 4
  %sibling = getelementptr i8, ptr %work, i32 -44
  %call.i.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %sibling) #26
  br i1 %call.i.i, label %if.end.i.i, label %entry.list_del_rcu.exit_crit_edge

entry.list_del_rcu.exit_crit_edge:                ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del_rcu.exit

if.end.i.i:                                       ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i = getelementptr i8, ptr %work, i32 -40
  %6 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %prev.i.i, align 4
  %8 = ptrtoint ptr %sibling to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %sibling, align 4
  %prev1.i.i.i = getelementptr inbounds %struct.list_head, ptr %9, i32 0, i32 1
  %10 = ptrtoint ptr %prev1.i.i.i to i32
  call void @__asan_store4_noabort(i32 %10)
  store ptr %7, ptr %prev1.i.i.i, align 4
  %11 = ptrtoint ptr %7 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %9, ptr %7, align 4
  br label %list_del_rcu.exit

list_del_rcu.exit:                                ; preds = %if.end.i.i, %entry.list_del_rcu.exit_crit_edge
  %prev.i = getelementptr i8, ptr %work, i32 -40
  %12 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %12)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i, align 4
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %list_del_rcu.exit
  %rstat_css_node = getelementptr i8, ptr %work, i32 -28
  %13 = ptrtoint ptr %rstat_css_node to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load volatile ptr, ptr %rstat_css_node, align 4
  %cmp.i.not = icmp eq ptr %14, %rstat_css_node
  br i1 %cmp.i.not, label %if.then.if.end_crit_edge, label %if.then3

if.then.if.end_crit_edge:                         ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.then3:                                         ; preds = %if.then
  tail call void @cgroup_rstat_flush(ptr noundef %3) #26
  %call.i.i85 = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %rstat_css_node) #26
  br i1 %call.i.i85, label %if.end.i.i88, label %if.then3.list_del_rcu.exit90_crit_edge

if.then3.list_del_rcu.exit90_crit_edge:           ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del_rcu.exit90

if.end.i.i88:                                     ; preds = %if.then3
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i86 = getelementptr i8, ptr %work, i32 -24
  %15 = ptrtoint ptr %prev.i.i86 to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %prev.i.i86, align 4
  %17 = ptrtoint ptr %rstat_css_node to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %rstat_css_node, align 4
  %prev1.i.i.i87 = getelementptr inbounds %struct.list_head, ptr %18, i32 0, i32 1
  %19 = ptrtoint ptr %prev1.i.i.i87 to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %16, ptr %prev1.i.i.i87, align 4
  %20 = ptrtoint ptr %16 to i32
  call void @__asan_store4_noabort(i32 %20)
  store volatile ptr %18, ptr %16, align 4
  br label %list_del_rcu.exit90

list_del_rcu.exit90:                              ; preds = %if.end.i.i88, %if.then3.list_del_rcu.exit90_crit_edge
  %prev.i89 = getelementptr i8, ptr %work, i32 -24
  %21 = ptrtoint ptr %prev.i89 to i32
  call void @__asan_store4_noabort(i32 %21)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i89, align 4
  br label %if.end

if.end:                                           ; preds = %list_del_rcu.exit90, %if.then.if.end_crit_edge
  %css_idr = getelementptr inbounds %struct.cgroup_subsys, ptr %1, i32 0, i32 23
  %id = getelementptr i8, ptr %work, i32 -20
  %22 = ptrtoint ptr %id to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %id, align 8
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @cgroup_idr_lock) #26
  %call.i = tail call ptr @idr_replace(ptr noundef %css_idr, ptr noundef null, i32 noundef %23) #26
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @cgroup_idr_lock) #26
  %css_released = getelementptr inbounds %struct.cgroup_subsys, ptr %1, i32 0, i32 3
  %24 = ptrtoint ptr %css_released to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %css_released, align 4
  %tobool6.not = icmp eq ptr %25, null
  br i1 %tobool6.not, label %if.end.if.end43_crit_edge, label %if.then7

if.end.if.end43_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end43

if.then7:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  tail call void %25(ptr noundef %add.ptr) #26
  br label %if.end43

if.else:                                          ; preds = %list_del_rcu.exit
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_release, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@css_release_work_fn, %if.then11)) #26
          to label %do.end23 [label %if.then11], !srcloc !657

if.then11:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  %call17 = tail call i32 @_raw_spin_lock_irqsave(ptr noundef nonnull @trace_cgroup_path_lock) #26
  %kn.i = getelementptr inbounds %struct.cgroup, ptr %3, i32 0, i32 11
  %26 = ptrtoint ptr %kn.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %kn.i, align 8
  %call.i.i91 = tail call i32 @kernfs_path_from_node(ptr noundef %27, ptr noundef null, ptr noundef nonnull @trace_cgroup_path, i32 noundef 1024) #26
  tail call fastcc void @trace_cgroup_release(ptr noundef %3)
  tail call void @_raw_spin_unlock_irqrestore(ptr noundef nonnull @trace_cgroup_path_lock, i32 noundef %call17) #26
  br label %do.end23

do.end23:                                         ; preds = %if.then11, %if.else
  tail call void @cgroup_rstat_flush(ptr noundef %3) #26
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %tcgrp.0.in95 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %3, i32 0, i32 12
  %28 = ptrtoint ptr %tcgrp.0.in95 to i32
  call void @__asan_load4_noabort(i32 %28)
  %tcgrp.096 = load ptr, ptr %tcgrp.0.in95, align 8
  %tobool25.not97 = icmp eq ptr %tcgrp.096, null
  br i1 %tobool25.not97, label %do.end23.for.end_crit_edge, label %do.end23.for.body_crit_edge

do.end23.for.body_crit_edge:                      ; preds = %do.end23
  br label %for.body

do.end23.for.end_crit_edge:                       ; preds = %do.end23
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.body:                                         ; preds = %for.body.for.body_crit_edge, %do.end23.for.body_crit_edge
  %tcgrp.098 = phi ptr [ %tcgrp.0, %for.body.for.body_crit_edge ], [ %tcgrp.096, %do.end23.for.body_crit_edge ]
  %nr_dying_descendants = getelementptr inbounds %struct.cgroup, ptr %tcgrp.098, i32 0, i32 5
  %29 = ptrtoint ptr %nr_dying_descendants to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %nr_dying_descendants, align 8
  %dec = add i32 %30, -1
  store i32 %dec, ptr %nr_dying_descendants, align 8
  %tcgrp.0.in = getelementptr inbounds %struct.cgroup_subsys_state, ptr %tcgrp.098, i32 0, i32 12
  %31 = ptrtoint ptr %tcgrp.0.in to i32
  call void @__asan_load4_noabort(i32 %31)
  %tcgrp.0 = load ptr, ptr %tcgrp.0.in, align 8
  %tobool25.not = icmp eq ptr %tcgrp.0, null
  br i1 %tobool25.not, label %for.body.for.end_crit_edge, label %for.body.for.body_crit_edge

for.body.for.body_crit_edge:                      ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

for.body.for.end_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.end:                                          ; preds = %for.body.for.end_crit_edge, %do.end23.for.end_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  %kn = getelementptr inbounds %struct.cgroup, ptr %3, i32 0, i32 11
  %32 = ptrtoint ptr %kn to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %kn, align 8
  %tobool27.not = icmp eq ptr %33, null
  br i1 %tobool27.not, label %for.end.if.end43_crit_edge, label %do.body34

for.end.if.end43_crit_edge:                       ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end43

do.body34:                                        ; preds = %for.end
  call void @__sanitizer_cov_trace_pc() #28
  %priv = getelementptr inbounds %struct.kernfs_node, ptr %33, i32 0, i32 9
  %34 = ptrtoint ptr %priv to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr null, ptr %priv, align 8
  br label %if.end43

if.end43:                                         ; preds = %do.body34, %for.end.if.end43_crit_edge, %if.then7, %if.end.if.end43_crit_edge
  tail call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  %destroy_rwork = getelementptr i8, ptr %work, i32 44
  tail call void @__init_work(ptr noundef %destroy_rwork, i32 noundef 0) #26
  %35 = ptrtoint ptr %destroy_rwork to i32
  call void @__asan_store4_noabort(i32 %35)
  store i32 -64, ptr %destroy_rwork, align 8
  %lockdep_map = getelementptr i8, ptr %work, i32 60
  tail call void @lockdep_init_map_type(ptr noundef %lockdep_map, ptr noundef nonnull @.str.79, ptr noundef nonnull @css_release_work_fn.__key, i32 noundef 0, i8 noundef zeroext 0, i8 noundef zeroext 0, i8 noundef zeroext 0) #26
  %entry52 = getelementptr i8, ptr %work, i32 48
  %36 = ptrtoint ptr %entry52 to i32
  call void @__asan_store4_noabort(i32 %36)
  store volatile ptr %entry52, ptr %entry52, align 4
  %prev.i93 = getelementptr i8, ptr %work, i32 52
  %37 = ptrtoint ptr %prev.i93 to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %entry52, ptr %prev.i93, align 4
  %func = getelementptr i8, ptr %work, i32 56
  %38 = ptrtoint ptr %func to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr @css_free_rwork_fn, ptr %func, align 4
  %39 = load ptr, ptr @cgroup_destroy_wq, align 4
  %call58 = tail call zeroext i1 @queue_rcu_work(ptr noundef %39, ptr noundef %destroy_rwork) #26
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @cgroup_rstat_flush(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_cgroup_release(ptr noundef %cgrp) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_release, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_cgroup_release, %do.body)) #26
          to label %if.end48 [label %do.body], !srcloc !657

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !636

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.71, i32 noundef 108, i32 noundef 9, ptr noundef null) #26
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i4 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i4
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !695
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_release, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %cgrp, ptr noundef nonnull @trace_cgroup_path) #26
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !696
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !696
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i2.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i2.c to ptr
  %preempt_count.i.i3.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i3.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i3.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i3.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i5 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i5 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i6 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i6, label %if.end48.cpu_online.exit14_crit_edge, label %land.rhs.i.i.i.i8

if.end48.cpu_online.exit14_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit14

land.rhs.i.i.i.i8:                                ; preds = %if.end48
  %.b37.i.i.i.i7 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i7, label %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, label %if.then.i.i.i.i9, !prof !636

land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge:    ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit14

if.then.i.i.i.i9:                                 ; preds = %land.rhs.i.i.i.i8
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.71, i32 noundef 108, i32 noundef 9, ptr noundef null) #26
  br label %cpu_online.exit14

cpu_online.exit14:                                ; preds = %if.then.i.i.i.i9, %land.rhs.i.i.i.i8.cpu_online.exit14_crit_edge, %if.end48.cpu_online.exit14_crit_edge
  %div3.i.i.i10 = lshr i32 %27, 5
  %arrayidx.i.i.i11 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i10
  %29 = ptrtoint ptr %arrayidx.i.i.i11 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i11, align 4
  %and.i.i.i12 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i12
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i13.not = icmp eq i32 %32, 0
  br i1 %tobool.i13.not, label %cpu_online.exit14.if.end69_crit_edge, label %if.then52

cpu_online.exit14.if.end69_crit_edge:             ; preds = %cpu_online.exit14
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit14
  %33 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !660
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_release, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b1 = load i1, ptr @trace_cgroup_release.__warned, align 1
  br i1 %.b1, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @trace_cgroup_release.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.70, i32 noundef 97, ptr noundef nonnull @.str.22) #26
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !661
  %38 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i15 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i15 to ptr
  %preempt_count.i.i.i16 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i16 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i16, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i16, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit14.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @css_free_rwork_fn(ptr noundef %work) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %add.ptr = getelementptr i8, ptr %work, i32 -104
  %ss1 = getelementptr i8, ptr %work, i32 -100
  %0 = ptrtoint ptr %ss1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ss1, align 4
  %2 = ptrtoint ptr %add.ptr to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %add.ptr, align 8
  %refcnt = getelementptr i8, ptr %work, i32 -96
  tail call void @percpu_ref_exit(ptr noundef %refcnt) #26
  %tobool.not = icmp eq ptr %1, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %parent2 = getelementptr i8, ptr %work, i32 56
  %4 = ptrtoint ptr %parent2 to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent2, align 8
  %id3 = getelementptr i8, ptr %work, i32 -64
  %6 = ptrtoint ptr %id3 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %id3, align 8
  %css_free = getelementptr inbounds %struct.cgroup_subsys, ptr %1, i32 0, i32 4
  %8 = ptrtoint ptr %css_free to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %css_free, align 4
  tail call void %9(ptr noundef %add.ptr) #26
  %css_idr = getelementptr inbounds %struct.cgroup_subsys, ptr %1, i32 0, i32 23
  tail call void @_raw_spin_lock_bh(ptr noundef nonnull @cgroup_idr_lock) #26
  %call.i = tail call ptr @idr_remove(ptr noundef %css_idr, i32 noundef %7) #26
  tail call void @_raw_spin_unlock_bh(ptr noundef nonnull @cgroup_idr_lock) #26
  %flags.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %3, i32 0, i32 7
  %10 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %11, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.then.cgroup_put.exit_crit_edge

if.then.cgroup_put.exit_crit_edge:                ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_put.exit

if.then.i.i:                                      ; preds = %if.then
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %3, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i) #26
  br label %cgroup_put.exit

cgroup_put.exit:                                  ; preds = %if.then.i.i, %if.then.cgroup_put.exit_crit_edge
  %tobool4.not = icmp eq ptr %5, null
  br i1 %tobool4.not, label %cgroup_put.exit.if.end14_crit_edge, label %if.then5

cgroup_put.exit.if.end14_crit_edge:               ; preds = %cgroup_put.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end14

if.then5:                                         ; preds = %cgroup_put.exit
  %flags.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %5, i32 0, i32 7
  %12 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %13, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i, label %if.then.i, label %if.then5.if.end14_crit_edge

if.then5.if.end14_crit_edge:                      ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end14

if.then.i:                                        ; preds = %if.then5
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %5, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i) #26
  br label %if.end14

if.else:                                          ; preds = %entry
  %root = getelementptr inbounds %struct.cgroup, ptr %3, i32 0, i32 19
  %14 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %root, align 4
  %nr_cgrps = getelementptr inbounds %struct.cgroup_root, ptr %15, i32 0, i32 5
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %nr_cgrps, i32 noundef 4) #26
  tail call void @llvm.prefetch.p0(ptr %nr_cgrps, i32 1, i32 3, i32 1) #26
  %16 = tail call { i32, i32 } asm sideeffect "@ atomic_sub\0A1:\09ldrex\09$0, [$3]\0A\09sub\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %nr_cgrps, ptr %nr_cgrps, i32 1, ptr elementtype(i32) %nr_cgrps) #26, !srcloc !697
  tail call void @cgroup1_pidlist_destroy_all(ptr noundef %3) #26
  %release_agent_work = getelementptr inbounds %struct.cgroup, ptr %3, i32 0, i32 32
  %call6 = tail call zeroext i1 @cancel_work_sync(ptr noundef %release_agent_work) #26
  %parent.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %3, i32 0, i32 12
  %17 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %parent.i, align 8
  %tobool8.not = icmp eq ptr %18, null
  br i1 %tobool8.not, label %if.else11, label %if.then9

if.then9:                                         ; preds = %if.else
  %flags.i.i35 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %18, i32 0, i32 7
  %19 = ptrtoint ptr %flags.i.i35 to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load i32, ptr %flags.i.i35, align 4
  %and.i.i36 = and i32 %20, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i36)
  %tobool.not.i.i37 = icmp eq i32 %and.i.i36, 0
  br i1 %tobool.not.i.i37, label %if.then.i.i39, label %if.then9.cgroup_put.exit40_crit_edge

if.then9.cgroup_put.exit40_crit_edge:             ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_put.exit40

if.then.i.i39:                                    ; preds = %if.then9
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i38 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %18, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i38) #26
  br label %cgroup_put.exit40

cgroup_put.exit40:                                ; preds = %if.then.i.i39, %if.then9.cgroup_put.exit40_crit_edge
  %kn = getelementptr inbounds %struct.cgroup, ptr %3, i32 0, i32 11
  %21 = ptrtoint ptr %kn to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %kn, align 8
  tail call void @kernfs_put(ptr noundef %22) #26
  tail call void @psi_cgroup_free(ptr noundef %3) #26
  tail call void @cgroup_rstat_exit(ptr noundef %3) #26
  tail call void @kfree(ptr noundef %3) #26
  br label %if.end14

if.else11:                                        ; preds = %if.else
  %23 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %root, align 4
  tail call fastcc void @trace_cgroup_destroy_root(ptr noundef %24) #26
  tail call void @cgroup_lock_and_drain_offline(ptr noundef getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 3)) #26
  %nr_cgrps.i = getelementptr inbounds %struct.cgroup_root, ptr %24, i32 0, i32 5
  %call.i.i.i = tail call zeroext i1 @__kasan_check_read(ptr noundef %nr_cgrps.i, i32 noundef 4) #26
  %25 = ptrtoint ptr %nr_cgrps.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load volatile i32, ptr %nr_cgrps.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %26)
  %tobool.not.i41 = icmp eq i32 %26, 0
  br i1 %tobool.not.i41, label %do.body10.i, label %do.body4.i, !prof !636

do.body4.i:                                       ; preds = %if.else11
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1345, 0\0A.popsection", ""() #26, !srcloc !698
  unreachable

do.body10.i:                                      ; preds = %if.else11
  %children.i = getelementptr inbounds %struct.cgroup_root, ptr %24, i32 0, i32 3, i32 0, i32 4
  %27 = ptrtoint ptr %children.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile ptr, ptr %children.i, align 4
  %cmp.i.not.i = icmp eq ptr %28, %children.i
  br i1 %cmp.i.not.i, label %do.end30.i, label %do.body22.i, !prof !636

do.body22.i:                                      ; preds = %do.body10.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 1346, 0\0A.popsection", ""() #26, !srcloc !699
  unreachable

do.end30.i:                                       ; preds = %do.body10.i
  %subsys_mask.i = getelementptr inbounds %struct.cgroup_root, ptr %24, i32 0, i32 1
  %29 = ptrtoint ptr %subsys_mask.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %subsys_mask.i, align 4
  %conv.i = trunc i32 %30 to i16
  %call31.i = tail call i32 @rebind_subsystems(ptr noundef nonnull @cgrp_dfl_root, i16 noundef zeroext %conv.i) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call31.i)
  %tobool32.not.i = icmp eq i32 %call31.i, 0
  br i1 %tobool32.not.i, label %do.end30.i.if.end54.i_crit_edge, label %do.end48.i, !prof !636

do.end30.i.if.end54.i_crit_edge:                  ; preds = %do.end30.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end54.i

do.end48.i:                                       ; preds = %do.end30.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 1349, i32 noundef 9, ptr noundef null) #26
  br label %if.end54.i

if.end54.i:                                       ; preds = %do.end48.i, %do.end30.i.if.end54.i_crit_edge
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %cset_links.i = getelementptr inbounds %struct.cgroup_root, ptr %24, i32 0, i32 3, i32 20
  %31 = ptrtoint ptr %cset_links.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %cset_links.i, align 8
  %cmp.not116.i = icmp eq ptr %32, %cset_links.i
  br i1 %cmp.not116.i, label %if.end54.i.for.end.i_crit_edge, label %if.end54.i.for.body.i_crit_edge

if.end54.i.for.body.i_crit_edge:                  ; preds = %if.end54.i
  br label %for.body.i

if.end54.i.for.end.i_crit_edge:                   ; preds = %if.end54.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end.i

for.body.i:                                       ; preds = %list_del.exit106.i.for.body.i_crit_edge, %if.end54.i.for.body.i_crit_edge
  %.pn.in117.i = phi ptr [ %.pn.i, %list_del.exit106.i.for.body.i_crit_edge ], [ %32, %if.end54.i.for.body.i_crit_edge ]
  %link.0.i = getelementptr i8, ptr %.pn.in117.i, i32 -8
  %33 = ptrtoint ptr %.pn.in117.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %.pn.i = load ptr, ptr %.pn.in117.i, align 4
  %call.i.i100.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %.pn.in117.i) #26
  br i1 %call.i.i100.i, label %if.end.i.i.i, label %for.body.i.list_del.exit.i_crit_edge

for.body.i.list_del.exit.i_crit_edge:             ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del.exit.i

if.end.i.i.i:                                     ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in117.i, i32 0, i32 1
  %34 = ptrtoint ptr %prev.i.i.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %prev.i.i.i, align 4
  %36 = ptrtoint ptr %.pn.in117.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load ptr, ptr %.pn.in117.i, align 4
  %prev1.i.i.i.i = getelementptr inbounds %struct.list_head, ptr %37, i32 0, i32 1
  %38 = ptrtoint ptr %prev1.i.i.i.i to i32
  call void @__asan_store4_noabort(i32 %38)
  store ptr %35, ptr %prev1.i.i.i.i, align 4
  %39 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %39)
  store volatile ptr %37, ptr %35, align 4
  br label %list_del.exit.i

list_del.exit.i:                                  ; preds = %if.end.i.i.i, %for.body.i.list_del.exit.i_crit_edge
  %40 = ptrtoint ptr %.pn.in117.i to i32
  call void @__asan_store4_noabort(i32 %40)
  store ptr inttoptr (i32 256 to ptr), ptr %.pn.in117.i, align 4
  %prev.i.i = getelementptr inbounds %struct.list_head, ptr %.pn.in117.i, i32 0, i32 1
  %41 = ptrtoint ptr %prev.i.i to i32
  call void @__asan_store4_noabort(i32 %41)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i.i, align 4
  %cgrp_link.i = getelementptr i8, ptr %.pn.in117.i, i32 8
  %call.i.i101.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %cgrp_link.i) #26
  br i1 %call.i.i101.i, label %if.end.i.i104.i, label %list_del.exit.i.list_del.exit106.i_crit_edge

list_del.exit.i.list_del.exit106.i_crit_edge:     ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del.exit106.i

if.end.i.i104.i:                                  ; preds = %list_del.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i102.i = getelementptr i8, ptr %.pn.in117.i, i32 12
  %42 = ptrtoint ptr %prev.i.i102.i to i32
  call void @__asan_load4_noabort(i32 %42)
  %43 = load ptr, ptr %prev.i.i102.i, align 4
  %44 = ptrtoint ptr %cgrp_link.i to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %cgrp_link.i, align 4
  %prev1.i.i.i103.i = getelementptr inbounds %struct.list_head, ptr %45, i32 0, i32 1
  %46 = ptrtoint ptr %prev1.i.i.i103.i to i32
  call void @__asan_store4_noabort(i32 %46)
  store ptr %43, ptr %prev1.i.i.i103.i, align 4
  %47 = ptrtoint ptr %43 to i32
  call void @__asan_store4_noabort(i32 %47)
  store volatile ptr %45, ptr %43, align 4
  br label %list_del.exit106.i

list_del.exit106.i:                               ; preds = %if.end.i.i104.i, %list_del.exit.i.list_del.exit106.i_crit_edge
  %48 = ptrtoint ptr %cgrp_link.i to i32
  call void @__asan_store4_noabort(i32 %48)
  store ptr inttoptr (i32 256 to ptr), ptr %cgrp_link.i, align 4
  %prev.i105.i = getelementptr i8, ptr %.pn.in117.i, i32 12
  %49 = ptrtoint ptr %prev.i105.i to i32
  call void @__asan_store4_noabort(i32 %49)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i105.i, align 4
  tail call void @kfree(ptr noundef %link.0.i) #26
  %cmp.not.i = icmp eq ptr %.pn.i, %cset_links.i
  br i1 %cmp.not.i, label %list_del.exit106.i.for.end.i_crit_edge, label %list_del.exit106.i.for.body.i_crit_edge

list_del.exit106.i.for.body.i_crit_edge:          ; preds = %list_del.exit106.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body.i

list_del.exit106.i.for.end.i_crit_edge:           ; preds = %list_del.exit106.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end.i

for.end.i:                                        ; preds = %list_del.exit106.i.for.end.i_crit_edge, %if.end54.i.for.end.i_crit_edge
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  %root_list.i = getelementptr inbounds %struct.cgroup_root, ptr %24, i32 0, i32 6
  %50 = ptrtoint ptr %root_list.i to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load volatile ptr, ptr %root_list.i, align 4
  %cmp.i107.not.i = icmp eq ptr %51, %root_list.i
  br i1 %cmp.i107.not.i, label %for.end.i.if.end81.i_crit_edge, label %if.then79.i

for.end.i.if.end81.i_crit_edge:                   ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end81.i

if.then79.i:                                      ; preds = %for.end.i
  %call.i.i109.i = tail call zeroext i1 @__list_del_entry_valid(ptr noundef %root_list.i) #26
  br i1 %call.i.i109.i, label %if.end.i.i112.i, label %if.then79.i.list_del.exit114.i_crit_edge

if.then79.i.list_del.exit114.i_crit_edge:         ; preds = %if.then79.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %list_del.exit114.i

if.end.i.i112.i:                                  ; preds = %if.then79.i
  call void @__sanitizer_cov_trace_pc() #28
  %prev.i.i110.i = getelementptr inbounds %struct.cgroup_root, ptr %24, i32 0, i32 6, i32 1
  %52 = ptrtoint ptr %prev.i.i110.i to i32
  call void @__asan_load4_noabort(i32 %52)
  %53 = load ptr, ptr %prev.i.i110.i, align 4
  %54 = ptrtoint ptr %root_list.i to i32
  call void @__asan_load4_noabort(i32 %54)
  %55 = load ptr, ptr %root_list.i, align 4
  %prev1.i.i.i111.i = getelementptr inbounds %struct.list_head, ptr %55, i32 0, i32 1
  %56 = ptrtoint ptr %prev1.i.i.i111.i to i32
  call void @__asan_store4_noabort(i32 %56)
  store ptr %53, ptr %prev1.i.i.i111.i, align 4
  %57 = ptrtoint ptr %53 to i32
  call void @__asan_store4_noabort(i32 %57)
  store volatile ptr %55, ptr %53, align 4
  br label %list_del.exit114.i

list_del.exit114.i:                               ; preds = %if.end.i.i112.i, %if.then79.i.list_del.exit114.i_crit_edge
  %58 = ptrtoint ptr %root_list.i to i32
  call void @__asan_store4_noabort(i32 %58)
  store ptr inttoptr (i32 256 to ptr), ptr %root_list.i, align 4
  %prev.i113.i = getelementptr inbounds %struct.cgroup_root, ptr %24, i32 0, i32 6, i32 1
  %59 = ptrtoint ptr %prev.i113.i to i32
  call void @__asan_store4_noabort(i32 %59)
  store ptr inttoptr (i32 290 to ptr), ptr %prev.i113.i, align 4
  %60 = load i32, ptr @cgroup_root_count, align 4
  %dec.i = add i32 %60, -1
  store i32 %dec.i, ptr @cgroup_root_count, align 4
  br label %if.end81.i

if.end81.i:                                       ; preds = %list_del.exit114.i, %for.end.i.if.end81.i_crit_edge
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %61 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %61)
  %tobool.not.i.i42 = icmp eq i32 %61, 0
  br i1 %tobool.not.i.i42, label %if.end81.i.cgroup_destroy_root.exit_crit_edge, label %land.rhs.i.i

if.end81.i.cgroup_destroy_root.exit_crit_edge:    ; preds = %if.end81.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_destroy_root.exit

land.rhs.i.i:                                     ; preds = %if.end81.i
  %call.i.i115.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i115.i)
  %cmp.not.i.i = icmp eq i32 %call.i.i115.i, 0
  br i1 %cmp.not.i.i, label %do.end.i.i, label %land.rhs.i.i.cgroup_destroy_root.exit_crit_edge, !prof !637

land.rhs.i.i.cgroup_destroy_root.exit_crit_edge:  ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_destroy_root.exit

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 1326, i32 noundef 9, ptr noundef null) #26
  br label %cgroup_destroy_root.exit

cgroup_destroy_root.exit:                         ; preds = %do.end.i.i, %land.rhs.i.i.cgroup_destroy_root.exit_crit_edge, %if.end81.i.cgroup_destroy_root.exit_crit_edge
  %cgrp1.i = getelementptr inbounds %struct.cgroup_root, ptr %24, i32 0, i32 3
  %hierarchy_id.i.i = getelementptr inbounds %struct.cgroup_root, ptr %24, i32 0, i32 2
  %62 = ptrtoint ptr %hierarchy_id.i.i to i32
  call void @__asan_load4_noabort(i32 %62)
  %63 = load i32, ptr %hierarchy_id.i.i, align 8
  %call24.i.i = tail call ptr @idr_remove(ptr noundef nonnull @cgroup_hierarchy_idr, i32 noundef %63) #26
  tail call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  tail call void @cgroup_rstat_exit(ptr noundef %cgrp1.i) #26
  %64 = ptrtoint ptr %24 to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %24, align 8
  tail call void @kernfs_destroy_root(ptr noundef %65) #26
  tail call void @kfree(ptr noundef %24) #26
  br label %if.end14

if.end14:                                         ; preds = %cgroup_destroy_root.exit, %cgroup_put.exit40, %if.then.i, %if.then5.if.end14_crit_edge, %cgroup_put.exit.if.end14_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @queue_rcu_work(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @idr_replace(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock_bh(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @cgroup1_pidlist_destroy_all(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @cancel_work_sync(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @psi_cgroup_free(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @trace_cgroup_destroy_root(ptr noundef %root) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  callbr void asm sideeffect "1:\0A\09nop\0A\09.pushsection __jump_table,  \22aw\22\0A\09.word 1b, ${1:l}, ${0:c}\0A\09.popsection\0A\09", "i,i"(ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_destroy_root, i32 0, i32 1, i32 0, i32 0), ptr blockaddress(@trace_cgroup_destroy_root, %do.body)) #26
          to label %if.end48 [label %do.body], !srcloc !657

do.body:                                          ; preds = %entry
  %0 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i = and i32 %0, -16384
  %1 = inttoptr i32 %and.i to ptr
  %cpu = getelementptr inbounds %struct.thread_info, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %cpu to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %cpu, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %4 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %4, i32 %3)
  %cmp.not.i.i.i.i = icmp ugt i32 %4, %3
  br i1 %cmp.not.i.i.i.i, label %do.body.cpu_online.exit_crit_edge, label %land.rhs.i.i.i.i

do.body.cpu_online.exit_crit_edge:                ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit

land.rhs.i.i.i.i:                                 ; preds = %do.body
  %.b37.i.i.i.i = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i, label %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, label %if.then.i.i.i.i, !prof !636

land.rhs.i.i.i.i.cpu_online.exit_crit_edge:       ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit

if.then.i.i.i.i:                                  ; preds = %land.rhs.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.71, i32 noundef 108, i32 noundef 9, ptr noundef null) #26
  br label %cpu_online.exit

cpu_online.exit:                                  ; preds = %if.then.i.i.i.i, %land.rhs.i.i.i.i.cpu_online.exit_crit_edge, %do.body.cpu_online.exit_crit_edge
  %div3.i.i.i = lshr i32 %3, 5
  %arrayidx.i.i.i = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i
  %5 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load volatile i32, ptr %arrayidx.i.i.i, align 4
  %and.i.i.i75 = and i32 %3, 31
  %7 = shl nuw i32 1, %and.i.i.i75
  %8 = and i32 %6, %7
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %8)
  %tobool.i.not = icmp eq i32 %8, 0
  br i1 %tobool.i.not, label %cpu_online.exit.if.end69_crit_edge, label %if.end31

cpu_online.exit.if.end69_crit_edge:               ; preds = %cpu_online.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end69

if.end31:                                         ; preds = %cpu_online.exit
  %9 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i = and i32 %9, -16384
  %10 = inttoptr i32 %and.i.i.i to ptr
  %preempt_count.i.i = getelementptr inbounds %struct.thread_info, ptr %10, i32 0, i32 1
  %11 = ptrtoint ptr %preempt_count.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load volatile i32, ptr %preempt_count.i.i, align 4
  %add.i = add i32 %12, 1
  store volatile i32 %add.i, ptr %preempt_count.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !700
  %13 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_destroy_root, i32 0, i32 7), align 4
  %tobool.not.i = icmp eq ptr %13, null
  br i1 %tobool.not.i, label %if.end48.critedge, label %if.end31.do.body2.i_crit_edge

if.end31.do.body2.i_crit_edge:                    ; preds = %if.end31
  br label %do.body2.i

do.body2.i:                                       ; preds = %do.body2.i.do.body2.i_crit_edge, %if.end31.do.body2.i_crit_edge
  %it_func_ptr.0.i = phi ptr [ %incdec.ptr.i, %do.body2.i.do.body2.i_crit_edge ], [ %13, %if.end31.do.body2.i_crit_edge ]
  %14 = ptrtoint ptr %it_func_ptr.0.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %it_func_ptr.0.i, align 4
  %data.i = getelementptr inbounds %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 0, i32 1
  %16 = ptrtoint ptr %data.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %data.i, align 4
  tail call void %15(ptr noundef %17, ptr noundef %root) #26
  %incdec.ptr.i = getelementptr %struct.tracepoint_func, ptr %it_func_ptr.0.i, i32 1
  %18 = ptrtoint ptr %incdec.ptr.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %incdec.ptr.i, align 4
  %tobool9.not.i = icmp eq ptr %19, null
  br i1 %tobool9.not.i, label %cleanup, label %do.body2.i.do.body2.i_crit_edge

do.body2.i.do.body2.i_crit_edge:                  ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body2.i

cleanup:                                          ; preds = %do.body2.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !701
  br label %if.end48.sink.split

if.end48.critedge:                                ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !701
  br label %if.end48.sink.split

if.end48.sink.split:                              ; preds = %if.end48.critedge, %cleanup
  %20 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i73.c = and i32 %20, -16384
  %21 = inttoptr i32 %and.i.i.i73.c to ptr
  %preempt_count.i.i74.c = getelementptr inbounds %struct.thread_info, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %preempt_count.i.i74.c to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load volatile i32, ptr %preempt_count.i.i74.c, align 4
  %sub.i = add i32 %23, -1
  store volatile i32 %sub.i, ptr %preempt_count.i.i74.c, align 4
  br label %if.end48

if.end48:                                         ; preds = %if.end48.sink.split, %entry
  %24 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i76 = and i32 %24, -16384
  %25 = inttoptr i32 %and.i76 to ptr
  %cpu50 = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 3
  %26 = ptrtoint ptr %cpu50 to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %cpu50, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @nr_cpu_ids to i32))
  %28 = load i32, ptr @nr_cpu_ids, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %28, i32 %27)
  %cmp.not.i.i.i.i77 = icmp ugt i32 %28, %27
  br i1 %cmp.not.i.i.i.i77, label %if.end48.cpu_online.exit85_crit_edge, label %land.rhs.i.i.i.i79

if.end48.cpu_online.exit85_crit_edge:             ; preds = %if.end48
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit85

land.rhs.i.i.i.i79:                               ; preds = %if.end48
  %.b37.i.i.i.i78 = load i1, ptr @cpu_max_bits_warn.__already_done, align 1
  br i1 %.b37.i.i.i.i78, label %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, label %if.then.i.i.i.i80, !prof !636

land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge:   ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #28
  br label %cpu_online.exit85

if.then.i.i.i.i80:                                ; preds = %land.rhs.i.i.i.i79
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cpu_max_bits_warn.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.71, i32 noundef 108, i32 noundef 9, ptr noundef null) #26
  br label %cpu_online.exit85

cpu_online.exit85:                                ; preds = %if.then.i.i.i.i80, %land.rhs.i.i.i.i79.cpu_online.exit85_crit_edge, %if.end48.cpu_online.exit85_crit_edge
  %div3.i.i.i81 = lshr i32 %27, 5
  %arrayidx.i.i.i82 = getelementptr i32, ptr @__cpu_online_mask, i32 %div3.i.i.i81
  %29 = ptrtoint ptr %arrayidx.i.i.i82 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load volatile i32, ptr %arrayidx.i.i.i82, align 4
  %and.i.i.i83 = and i32 %27, 31
  %31 = shl nuw i32 1, %and.i.i.i83
  %32 = and i32 %30, %31
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %32)
  %tobool.i84.not = icmp eq i32 %32, 0
  br i1 %tobool.i84.not, label %cpu_online.exit85.if.end69_crit_edge, label %if.then52

cpu_online.exit85.if.end69_crit_edge:             ; preds = %cpu_online.exit85
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end69

if.then52:                                        ; preds = %cpu_online.exit85
  %33 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %36, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !660
  %37 = load volatile ptr, ptr getelementptr inbounds ({ ptr, { %struct.atomic_t, { ptr } }, ptr, ptr, ptr, ptr, ptr, ptr }, ptr @__tracepoint_cgroup_destroy_root, i32 0, i32 7), align 4
  %call58 = tail call i32 @rcu_read_lock_sched_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call58)
  %tobool59.not = icmp eq i32 %call58, 0
  br i1 %tobool59.not, label %land.lhs.true, label %if.then52.do.end67_crit_edge

if.then52.do.end67_crit_edge:                     ; preds = %if.then52
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

land.lhs.true:                                    ; preds = %if.then52
  %call60 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call60)
  %tobool61.not = icmp eq i32 %call60, 0
  br i1 %tobool61.not, label %land.lhs.true.do.end67_crit_edge, label %land.lhs.true62

land.lhs.true.do.end67_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

land.lhs.true62:                                  ; preds = %land.lhs.true
  %.b72 = load i1, ptr @trace_cgroup_destroy_root.__warned, align 1
  br i1 %.b72, label %land.lhs.true62.do.end67_crit_edge, label %if.then64

land.lhs.true62.do.end67_crit_edge:               ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end67

if.then64:                                        ; preds = %land.lhs.true62
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @trace_cgroup_destroy_root.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.70, i32 noundef 45, ptr noundef nonnull @.str.22) #26
  br label %do.end67

do.end67:                                         ; preds = %if.then64, %land.lhs.true62.do.end67_crit_edge, %land.lhs.true.do.end67_crit_edge, %if.then52.do.end67_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !661
  %38 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i86 = and i32 %38, -16384
  %39 = inttoptr i32 %and.i.i.i.i86 to ptr
  %preempt_count.i.i.i87 = getelementptr inbounds %struct.thread_info, ptr %39, i32 0, i32 1
  %40 = ptrtoint ptr %preempt_count.i.i.i87 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load volatile i32, ptr %preempt_count.i.i.i87, align 4
  %sub.i.i = add i32 %41, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i.i87, align 4
  br label %if.end69

if.end69:                                         ; preds = %do.end67, %cpu_online.exit85.if.end69_crit_edge, %cpu_online.exit.if.end69_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @psi_cgroup_alloc(ptr noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @list_add_tail_rcu(ptr noundef %new, ptr noundef %head) unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  %prev = getelementptr inbounds %struct.list_head, ptr %head, i32 0, i32 1
  %0 = ptrtoint ptr %prev to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %prev, align 4
  %call.i = tail call zeroext i1 @__list_add_valid(ptr noundef %new, ptr noundef %1, ptr noundef %head) #26
  br i1 %call.i, label %if.end.i, label %entry.__list_add_rcu.exit_crit_edge

entry.__list_add_rcu.exit_crit_edge:              ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %__list_add_rcu.exit

if.end.i:                                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %2 = ptrtoint ptr %new to i32
  call void @__asan_store4_noabort(i32 %2)
  store ptr %head, ptr %new, align 4
  %prev2.i = getelementptr inbounds %struct.list_head, ptr %new, i32 0, i32 1
  %3 = ptrtoint ptr %prev2.i to i32
  call void @__asan_store4_noabort(i32 %3)
  store ptr %1, ptr %prev2.i, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !652
  %4 = ptrtoint ptr %1 to i32
  call void @__asan_store4_noabort(i32 %4)
  store volatile ptr %new, ptr %1, align 4
  %5 = ptrtoint ptr %prev to i32
  call void @__asan_store4_noabort(i32 %5)
  store ptr %new, ptr %prev, align 4
  br label %__list_add_rcu.exit

__list_add_rcu.exit:                              ; preds = %if.end.i, %entry.__list_add_rcu.exit_crit_edge
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #23

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kernfs_create_dir_ns(ptr noundef, ptr noundef, i16 noundef zeroext, [1 x i32], [1 x i32], ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kernfs_setattr(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @init_and_link_css(ptr noundef %css, ptr noundef %ss, ptr noundef %cgrp) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 5220, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %flags.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 7
  %1 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %2, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %land.rhs.i, label %if.end.if.end27.i_crit_edge

if.end.if.end27.i_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end27.i

land.rhs.i:                                       ; preds = %if.end
  %.b38.i = load i1, ptr @cgroup_get_live.__already_done, align 1
  br i1 %.b38.i, label %land.rhs.i.if.end27.i_crit_edge, label %if.then.i, !prof !636

land.rhs.i.if.end27.i_crit_edge:                  ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end27.i

if.then.i:                                        ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_get_live.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 615, i32 noundef 9, ptr noundef null) #26
  br label %if.end27.i

if.end27.i:                                       ; preds = %if.then.i, %land.rhs.i.if.end27.i_crit_edge, %if.end.if.end27.i_crit_edge
  %3 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags.i.i, align 4
  %and.i40.i = and i32 %4, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i40.i)
  %tobool.not.i41.i = icmp eq i32 %and.i40.i, 0
  br i1 %tobool.not.i41.i, label %if.then.i.i, label %if.end27.i.cgroup_get_live.exit_crit_edge

if.end27.i.cgroup_get_live.exit_crit_edge:        ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_get_live.exit

if.then.i.i:                                      ; preds = %if.end27.i
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 2
  tail call fastcc void @percpu_ref_get(ptr noundef %refcnt.i.i) #26
  br label %cgroup_get_live.exit

cgroup_get_live.exit:                             ; preds = %if.then.i.i, %if.end27.i.cgroup_get_live.exit_crit_edge
  %5 = getelementptr inbounds i8, ptr %css, i32 8
  %6 = call ptr @memset(ptr %5, i32 0, i32 160)
  %7 = ptrtoint ptr %css to i32
  call void @__asan_store4_noabort(i32 %7)
  store ptr %cgrp, ptr %css, align 8
  %ss24 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 1
  %8 = ptrtoint ptr %ss24 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr %ss, ptr %ss24, align 4
  %id = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 6
  %9 = ptrtoint ptr %id to i32
  call void @__asan_store4_noabort(i32 %9)
  store i32 -1, ptr %id, align 8
  %sibling = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 3
  %10 = ptrtoint ptr %sibling to i32
  call void @__asan_store4_noabort(i32 %10)
  store volatile ptr %sibling, ptr %sibling, align 4
  %prev.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 3, i32 1
  %11 = ptrtoint ptr %prev.i to i32
  call void @__asan_store4_noabort(i32 %11)
  store ptr %sibling, ptr %prev.i, align 4
  %children = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 4
  %12 = ptrtoint ptr %children to i32
  call void @__asan_store4_noabort(i32 %12)
  store volatile ptr %children, ptr %children, align 4
  %prev.i75 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 4, i32 1
  %13 = ptrtoint ptr %prev.i75 to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %children, ptr %prev.i75, align 4
  %rstat_css_node = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 5
  %14 = ptrtoint ptr %rstat_css_node to i32
  call void @__asan_store4_noabort(i32 %14)
  store volatile ptr %rstat_css_node, ptr %rstat_css_node, align 4
  %prev.i76 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 5, i32 1
  %15 = ptrtoint ptr %prev.i76 to i32
  call void @__asan_store4_noabort(i32 %15)
  store ptr %rstat_css_node, ptr %prev.i76, align 4
  %16 = load i64, ptr @css_serial_nr_next, align 8
  %inc = add i64 %16, 1
  store i64 %inc, ptr @css_serial_nr_next, align 8
  %serial_nr = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 8
  %17 = ptrtoint ptr %serial_nr to i32
  call void @__asan_store8_noabort(i32 %17)
  store i64 %16, ptr %serial_nr, align 8
  %online_cnt = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 9
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %online_cnt, i32 noundef 4) #26
  %18 = ptrtoint ptr %online_cnt to i32
  call void @__asan_store4_noabort(i32 %18)
  store volatile i32 0, ptr %online_cnt, align 4
  %parent.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp, i32 0, i32 12
  %19 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %parent.i, align 8
  %tobool26.not = icmp eq ptr %20, null
  br i1 %tobool26.not, label %cgroup_get_live.exit.if.end31_crit_edge, label %if.then27

cgroup_get_live.exit.if.end31_crit_edge:          ; preds = %cgroup_get_live.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end31

if.then27:                                        ; preds = %cgroup_get_live.exit
  %tobool.not.i = icmp eq ptr %ss, null
  br i1 %tobool.not.i, label %if.then27.cgroup_css.exit_crit_edge, label %if.then.i79

if.then27.cgroup_css.exit_crit_edge:              ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

if.then.i79:                                      ; preds = %if.then27
  %id.i = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 19
  %21 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load i32, ptr %id.i, align 4
  %arrayidx.i = getelementptr %struct.cgroup, ptr %20, i32 0, i32 18, i32 %22
  %23 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile ptr, ptr %arrayidx.i, align 4
  %call.i.i78 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i78)
  %tobool2.not.i = icmp eq i32 %call.i.i78, 0
  br i1 %tobool2.not.i, label %lor.lhs.false.i, label %if.then.i79.cgroup_css.exit_crit_edge

if.then.i79.cgroup_css.exit_crit_edge:            ; preds = %if.then.i79
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

lor.lhs.false.i:                                  ; preds = %if.then.i79
  %call3.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %land.lhs.true.i, label %lor.lhs.false.i.cgroup_css.exit_crit_edge

lor.lhs.false.i.cgroup_css.exit_crit_edge:        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

land.lhs.true.i:                                  ; preds = %lor.lhs.false.i
  %call5.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %land.lhs.true.i.cgroup_css.exit_crit_edge, label %land.lhs.true7.i

land.lhs.true.i.cgroup_css.exit_crit_edge:        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i
  %.b15.i = load i1, ptr @cgroup_css.__warned, align 1
  br i1 %.b15.i, label %land.lhs.true7.i.cgroup_css.exit_crit_edge, label %if.then9.i

land.lhs.true7.i.cgroup_css.exit_crit_edge:       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

if.then9.i:                                       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_css.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 486, ptr noundef nonnull @.str.22) #26
  br label %cgroup_css.exit

cgroup_css.exit:                                  ; preds = %if.then9.i, %land.lhs.true7.i.cgroup_css.exit_crit_edge, %land.lhs.true.i.cgroup_css.exit_crit_edge, %lor.lhs.false.i.cgroup_css.exit_crit_edge, %if.then.i79.cgroup_css.exit_crit_edge, %if.then27.cgroup_css.exit_crit_edge
  %retval.0.i = phi ptr [ %24, %if.then9.i ], [ %24, %land.lhs.true7.i.cgroup_css.exit_crit_edge ], [ %24, %land.lhs.true.i.cgroup_css.exit_crit_edge ], [ %24, %lor.lhs.false.i.cgroup_css.exit_crit_edge ], [ %24, %if.then.i79.cgroup_css.exit_crit_edge ], [ %20, %if.then27.cgroup_css.exit_crit_edge ]
  %parent = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 12
  %25 = ptrtoint ptr %parent to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %retval.0.i, ptr %parent, align 8
  %flags.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %retval.0.i, i32 0, i32 7
  %26 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %27, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i80 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i80, label %if.then.i81, label %cgroup_css.exit.if.end31_crit_edge

cgroup_css.exit.if.end31_crit_edge:               ; preds = %cgroup_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end31

if.then.i81:                                      ; preds = %cgroup_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %retval.0.i, i32 0, i32 2
  tail call fastcc void @percpu_ref_get(ptr noundef %refcnt.i) #26
  br label %if.end31

if.end31:                                         ; preds = %if.then.i81, %cgroup_css.exit.if.end31_crit_edge, %cgroup_get_live.exit.if.end31_crit_edge
  %css_rstat_flush = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 6
  %28 = ptrtoint ptr %css_rstat_flush to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %css_rstat_flush, align 4
  %tobool32.not = icmp eq ptr %29, null
  br i1 %tobool32.not, label %if.end31.do.body36_crit_edge, label %if.then33

if.end31.do.body36_crit_edge:                     ; preds = %if.end31
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body36

if.then33:                                        ; preds = %if.end31
  %rstat_css_list = getelementptr inbounds %struct.cgroup, ptr %cgrp, i32 0, i32 25
  %30 = ptrtoint ptr %rstat_css_list to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load ptr, ptr %rstat_css_list, align 4
  %call.i.i82 = tail call zeroext i1 @__list_add_valid(ptr noundef %rstat_css_node, ptr noundef %rstat_css_list, ptr noundef %31) #26
  br i1 %call.i.i82, label %if.end.i.i, label %if.then33.do.body36_crit_edge

if.then33.do.body36_crit_edge:                    ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body36

if.end.i.i:                                       ; preds = %if.then33
  call void @__sanitizer_cov_trace_pc() #28
  %32 = ptrtoint ptr %rstat_css_node to i32
  call void @__asan_store4_noabort(i32 %32)
  store ptr %31, ptr %rstat_css_node, align 4
  %33 = ptrtoint ptr %prev.i76 to i32
  call void @__asan_store4_noabort(i32 %33)
  store ptr %rstat_css_list, ptr %prev.i76, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !652
  %34 = ptrtoint ptr %rstat_css_list to i32
  call void @__asan_store4_noabort(i32 %34)
  store volatile ptr %rstat_css_node, ptr %rstat_css_list, align 4
  %prev37.i.i = getelementptr inbounds %struct.list_head, ptr %31, i32 0, i32 1
  %35 = ptrtoint ptr %prev37.i.i to i32
  call void @__asan_store4_noabort(i32 %35)
  store ptr %rstat_css_node, ptr %prev37.i.i, align 4
  br label %do.body36

do.body36:                                        ; preds = %if.end.i.i, %if.then33.do.body36_crit_edge, %if.end31.do.body36_crit_edge
  %tobool.not.i83 = icmp eq ptr %ss, null
  br i1 %tobool.not.i83, label %do.body36.cgroup_css.exit99_crit_edge, label %if.then.i88

do.body36.cgroup_css.exit99_crit_edge:            ; preds = %do.body36
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit99

if.then.i88:                                      ; preds = %do.body36
  %id.i84 = getelementptr inbounds %struct.cgroup_subsys, ptr %ss, i32 0, i32 19
  %36 = ptrtoint ptr %id.i84 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %id.i84, align 4
  %arrayidx.i85 = getelementptr %struct.cgroup, ptr %cgrp, i32 0, i32 18, i32 %37
  %38 = ptrtoint ptr %arrayidx.i85 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load volatile ptr, ptr %arrayidx.i85, align 4
  %call.i.i86 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i86)
  %tobool2.not.i87 = icmp eq i32 %call.i.i86, 0
  br i1 %tobool2.not.i87, label %lor.lhs.false.i91, label %if.then.i88.cgroup_css.exit99_crit_edge

if.then.i88.cgroup_css.exit99_crit_edge:          ; preds = %if.then.i88
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit99

lor.lhs.false.i91:                                ; preds = %if.then.i88
  %call3.i89 = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i89)
  %tobool4.not.i90 = icmp eq i32 %call3.i89, 0
  br i1 %tobool4.not.i90, label %land.lhs.true.i94, label %lor.lhs.false.i91.cgroup_css.exit99_crit_edge

lor.lhs.false.i91.cgroup_css.exit99_crit_edge:    ; preds = %lor.lhs.false.i91
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit99

land.lhs.true.i94:                                ; preds = %lor.lhs.false.i91
  %call5.i92 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i92)
  %tobool6.not.i93 = icmp eq i32 %call5.i92, 0
  br i1 %tobool6.not.i93, label %land.lhs.true.i94.cgroup_css.exit99_crit_edge, label %land.lhs.true7.i96

land.lhs.true.i94.cgroup_css.exit99_crit_edge:    ; preds = %land.lhs.true.i94
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit99

land.lhs.true7.i96:                               ; preds = %land.lhs.true.i94
  %.b15.i95 = load i1, ptr @cgroup_css.__warned, align 1
  br i1 %.b15.i95, label %land.lhs.true7.i96.cgroup_css.exit99_crit_edge, label %if.then9.i97

land.lhs.true7.i96.cgroup_css.exit99_crit_edge:   ; preds = %land.lhs.true7.i96
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit99

if.then9.i97:                                     ; preds = %land.lhs.true7.i96
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_css.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 486, ptr noundef nonnull @.str.22) #26
  br label %cgroup_css.exit99

cgroup_css.exit99:                                ; preds = %if.then9.i97, %land.lhs.true7.i96.cgroup_css.exit99_crit_edge, %land.lhs.true.i94.cgroup_css.exit99_crit_edge, %lor.lhs.false.i91.cgroup_css.exit99_crit_edge, %if.then.i88.cgroup_css.exit99_crit_edge, %do.body36.cgroup_css.exit99_crit_edge
  %retval.0.i98 = phi ptr [ %39, %if.then9.i97 ], [ %39, %land.lhs.true7.i96.cgroup_css.exit99_crit_edge ], [ %39, %land.lhs.true.i94.cgroup_css.exit99_crit_edge ], [ %39, %lor.lhs.false.i91.cgroup_css.exit99_crit_edge ], [ %39, %if.then.i88.cgroup_css.exit99_crit_edge ], [ %cgrp, %do.body36.cgroup_css.exit99_crit_edge ]
  %tobool38.not = icmp eq ptr %retval.0.i98, null
  br i1 %tobool38.not, label %do.end54, label %do.body46, !prof !636

do.body46:                                        ; preds = %cgroup_css.exit99
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "1:\09.long ( (((0xe7f001f2) << 24) & 0xFF000000) | (((0xe7f001f2) << 8) & 0x00FF0000) | (((0xe7f001f2) >> 8) & 0x0000FF00) | (((0xe7f001f2) >> 24) & 0x000000FF) )\0A\09\0A.pushsection .rodata.str, \22aMS\22, %progbits, 1\0A2:\09.asciz \22kernel/cgroup/cgroup.c\22\0A.popsection\0A.pushsection __bug_table,\22aw\22\0A.align 2\0A3:\09.word 1b, 2b\0A\09.hword 5242, 0\0A.popsection", ""() #26, !srcloc !702
  unreachable

do.end54:                                         ; preds = %cgroup_css.exit99
  call void @__sanitizer_cov_trace_pc() #28
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @online_css(ptr noundef %css) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %ss1 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 1
  %0 = ptrtoint ptr %ss1 to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %ss1, align 4
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %2 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %2)
  %tobool.not = icmp eq i32 %2, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %land.rhs

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %entry
  %call.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %cmp.not = icmp eq i32 %call.i, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 5251, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %entry.if.end_crit_edge
  %css_online = getelementptr inbounds %struct.cgroup_subsys, ptr %1, i32 0, i32 1
  %3 = ptrtoint ptr %css_online to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %css_online, align 4
  %tobool25.not = icmp eq ptr %4, null
  br i1 %tobool25.not, label %if.end.if.then31_crit_edge, label %if.end29

if.end.if.then31_crit_edge:                       ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then31

if.end29:                                         ; preds = %if.end
  %call28 = tail call i32 %4(ptr noundef %css) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28)
  %tobool30.not = icmp eq i32 %call28, 0
  br i1 %tobool30.not, label %if.end29.if.then31_crit_edge, label %if.end29.if.end77_crit_edge

if.end29.if.end77_crit_edge:                      ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end77

if.end29.if.then31_crit_edge:                     ; preds = %if.end29
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then31

if.then31:                                        ; preds = %if.end29.if.then31_crit_edge, %if.end.if.then31_crit_edge
  %flags = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 7
  %5 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %flags, align 4
  %or = or i32 %6, 2
  store i32 %or, ptr %flags, align 4
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !703
  %7 = ptrtoint ptr %css to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %css, align 8
  %id59 = getelementptr inbounds %struct.cgroup_subsys, ptr %1, i32 0, i32 19
  %9 = ptrtoint ptr %id59 to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %id59, align 4
  %arrayidx60 = getelementptr %struct.cgroup, ptr %8, i32 0, i32 18, i32 %10
  %11 = ptrtoint ptr %arrayidx60 to i32
  call void @__asan_store4_noabort(i32 %11)
  store volatile ptr %css, ptr %arrayidx60, align 4
  %online_cnt = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 9
  %call.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %online_cnt, i32 noundef 4) #26
  tail call void @llvm.prefetch.p0(ptr %online_cnt, i32 1, i32 3, i32 1) #26
  %12 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %online_cnt, ptr %online_cnt, i32 1, ptr elementtype(i32) %online_cnt) #26, !srcloc !670
  %parent = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css, i32 0, i32 12
  %13 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %parent, align 8
  %tobool72.not = icmp eq ptr %14, null
  br i1 %tobool72.not, label %if.then31.if.end77_crit_edge, label %if.then73

if.then31.if.end77_crit_edge:                     ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end77

if.then73:                                        ; preds = %if.then31
  call void @__sanitizer_cov_trace_pc() #28
  %online_cnt75 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %14, i32 0, i32 9
  %call.i.i90 = tail call zeroext i1 @__kasan_check_write(ptr noundef %online_cnt75, i32 noundef 4) #26
  tail call void @llvm.prefetch.p0(ptr %online_cnt75, i32 1, i32 3, i32 1) #26
  %15 = tail call { i32, i32 } asm sideeffect "@ atomic_add\0A1:\09ldrex\09$0, [$3]\0A\09add\09$0, $0, $4\0A\09strex\09$1, $0, [$3]\0A\09teq\09$1, #0\0A\09bne\091b", "=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %online_cnt75, ptr %online_cnt75, i32 1, ptr elementtype(i32) %online_cnt75) #26, !srcloc !670
  br label %if.end77

if.end77:                                         ; preds = %if.then73, %if.then31.if.end77_crit_edge, %if.end29.if.end77_crit_edge
  %ret.093 = phi i32 [ 0, %if.then31.if.end77_crit_edge ], [ 0, %if.then73 ], [ %call28, %if.end29.if.end77_crit_edge ]
  ret i32 %ret.093
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_show_options(ptr noundef %seq, ptr nocapture noundef readnone %kf_root) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = load i32, ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 7), align 4
  %and = and i32 %0, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool.not = icmp eq i32 %and, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.82) #26
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %1 = load i32, ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 7), align 4
  %and1 = and i32 %1, 32
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and1)
  %tobool2.not = icmp eq i32 %and1, 0
  br i1 %tobool2.not, label %if.end.if.end4_crit_edge, label %if.then3

if.end.if.end4_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end4

if.then3:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.83) #26
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end.if.end4_crit_edge
  %2 = load i32, ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 7), align 4
  %and5 = and i32 %2, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and5)
  %tobool6.not = icmp eq i32 %and5, 0
  br i1 %tobool6.not, label %if.end4.if.end8_crit_edge, label %if.then7

if.end4.if.end8_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end8

if.then7:                                         ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.84) #26
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end4.if.end8_crit_edge
  ret i32 0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__dynamic_pr_debug(ptr noundef, ptr noundef, ...) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kmemdup(ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_file_open(ptr noundef %of) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of, align 4
  %priv.i = getelementptr inbounds %struct.kernfs_node, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %priv.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7) to i32))
  %4 = load ptr, ptr getelementptr inbounds ([4 x [14 x ptr]], ptr @kmalloc_caches, i32 0, i32 0, i32 7), align 4
  %call7.i.i = tail call noalias align 8 ptr @kmem_cache_alloc_trace(ptr noundef %4, i32 noundef 3520, i32 noundef 68) #32
  %tobool.not = icmp eq ptr %call7.i.i, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  %5 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i = and i32 %5, -16384
  %6 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %6, i32 0, i32 2
  %7 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %task, align 8
  %nsproxy = getelementptr inbounds %struct.task_struct, ptr %8, i32 0, i32 110
  %9 = ptrtoint ptr %nsproxy to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %nsproxy, align 4
  %cgroup_ns = getelementptr inbounds %struct.nsproxy, ptr %10, i32 0, i32 8
  %11 = ptrtoint ptr %cgroup_ns to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %cgroup_ns, align 4
  %13 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %12, ptr %call7.i.i, align 8
  %tobool.not.i = icmp eq ptr %12, null
  br i1 %tobool.not.i, label %if.end.get_cgroup_ns.exit_crit_edge, label %if.then.i

if.end.get_cgroup_ns.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %get_cgroup_ns.exit

if.then.i:                                        ; preds = %if.end
  %count.i = getelementptr inbounds %struct.ns_common, ptr %12, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #26
  tail call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #26
  %14 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_add\0A1:\09ldrex\09$0, [$4]\0A\09add\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #26, !srcloc !663
  %asmresult.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %14, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i)
  %tobool1.not.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i, 0
  br i1 %tobool1.not.i.i.i.i, label %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge, label %if.else.i.i.i.i, !prof !637

if.then.i.if.end15.sink.split.i.i.i.i_crit_edge:  ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i:                                  ; preds = %if.then.i
  %add.i.i.i.i = add i32 %asmresult.i.i.i.i.i.i, 1
  %15 = or i32 %add.i.i.i.i, %asmresult.i.i.i.i.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 -1, i32 %15)
  %.not.i.i.i.i = icmp sgt i32 %15, -1
  br i1 %.not.i.i.i.i, label %if.else.i.i.i.i.get_cgroup_ns.exit_crit_edge, label %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, !prof !636

if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge: ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end15.sink.split.i.i.i.i

if.else.i.i.i.i.get_cgroup_ns.exit_crit_edge:     ; preds = %if.else.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %get_cgroup_ns.exit

if.end15.sink.split.i.i.i.i:                      ; preds = %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge
  %.sink.i.i.i.i = phi i32 [ 2, %if.then.i.if.end15.sink.split.i.i.i.i_crit_edge ], [ 1, %if.else.i.i.i.i.if.end15.sink.split.i.i.i.i_crit_edge ]
  tail call void @refcount_warn_saturate(ptr noundef %count.i, i32 noundef %.sink.i.i.i.i) #26
  br label %get_cgroup_ns.exit

get_cgroup_ns.exit:                               ; preds = %if.end15.sink.split.i.i.i.i, %if.else.i.i.i.i.get_cgroup_ns.exit_crit_edge, %if.end.get_cgroup_ns.exit_crit_edge
  %priv = getelementptr inbounds %struct.kernfs_open_file, ptr %of, i32 0, i32 3
  %16 = ptrtoint ptr %priv to i32
  call void @__asan_store4_noabort(i32 %16)
  store ptr %call7.i.i, ptr %priv, align 4
  %open = getelementptr inbounds %struct.cftype, ptr %3, i32 0, i32 8
  %17 = ptrtoint ptr %open to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %open, align 4
  %tobool4.not = icmp eq ptr %18, null
  br i1 %tobool4.not, label %get_cgroup_ns.exit.cleanup_crit_edge, label %if.end6

get_cgroup_ns.exit.cleanup_crit_edge:             ; preds = %get_cgroup_ns.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end6:                                          ; preds = %get_cgroup_ns.exit
  %call8 = tail call i32 %18(ptr noundef %of) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call8)
  %tobool9.not = icmp eq i32 %call8, 0
  br i1 %tobool9.not, label %if.end6.cleanup_crit_edge, label %if.then10

if.end6.cleanup_crit_edge:                        ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then10:                                        ; preds = %if.end6
  %19 = ptrtoint ptr %call7.i.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %call7.i.i, align 8
  %tobool.not.i24 = icmp eq ptr %20, null
  br i1 %tobool.not.i24, label %if.then10.put_cgroup_ns.exit_crit_edge, label %land.lhs.true.i

if.then10.put_cgroup_ns.exit_crit_edge:           ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #28
  br label %put_cgroup_ns.exit

land.lhs.true.i:                                  ; preds = %if.then10
  %count.i25 = getelementptr inbounds %struct.ns_common, ptr %20, i32 0, i32 3
  %call.i.i.i.i.i.i26 = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i25, i32 noundef 4) #26
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !647
  tail call void @llvm.prefetch.p0(ptr %count.i25, i32 1, i32 3, i32 1) #26
  %21 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i25, ptr %count.i25, i32 1, ptr elementtype(i32) %count.i25) #26, !srcloc !648
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %21, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i28, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i27 = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i27, label %if.end5.i.i.i.i.put_cgroup_ns.exit_crit_edge, label %if.then10.i.i.i.i, !prof !636

if.end5.i.i.i.i.put_cgroup_ns.exit_crit_edge:     ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %put_cgroup_ns.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @refcount_warn_saturate(ptr noundef %count.i25, i32 noundef 3) #26
  br label %put_cgroup_ns.exit

if.then.i28:                                      ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !649
  tail call void @free_cgroup_ns(ptr noundef nonnull %20) #26
  br label %put_cgroup_ns.exit

put_cgroup_ns.exit:                               ; preds = %if.then.i28, %if.then10.i.i.i.i, %if.end5.i.i.i.i.put_cgroup_ns.exit_crit_edge, %if.then10.put_cgroup_ns.exit_crit_edge
  tail call void @kfree(ptr noundef nonnull %call7.i.i) #26
  br label %cleanup

cleanup:                                          ; preds = %put_cgroup_ns.exit, %if.end6.cleanup_crit_edge, %get_cgroup_ns.exit.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -12, %entry.cleanup_crit_edge ], [ 0, %get_cgroup_ns.exit.cleanup_crit_edge ], [ %call8, %put_cgroup_ns.exit ], [ 0, %if.end6.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @cgroup_file_release(ptr noundef %of) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of, align 4
  %priv.i = getelementptr inbounds %struct.kernfs_node, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %priv.i, align 8
  %priv = getelementptr inbounds %struct.kernfs_open_file, ptr %of, i32 0, i32 3
  %4 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %priv, align 4
  %release = getelementptr inbounds %struct.cftype, ptr %3, i32 0, i32 9
  %6 = ptrtoint ptr %release to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %release, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  tail call void %7(ptr noundef %of) #26
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %8 = ptrtoint ptr %5 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %5, align 4
  %tobool.not.i = icmp eq ptr %9, null
  br i1 %tobool.not.i, label %if.end.put_cgroup_ns.exit_crit_edge, label %land.lhs.true.i

if.end.put_cgroup_ns.exit_crit_edge:              ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %put_cgroup_ns.exit

land.lhs.true.i:                                  ; preds = %if.end
  %count.i = getelementptr inbounds %struct.ns_common, ptr %9, i32 0, i32 3
  %call.i.i.i.i.i.i = tail call zeroext i1 @__kasan_check_write(ptr noundef %count.i, i32 noundef 4) #26
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !647
  tail call void @llvm.prefetch.p0(ptr %count.i, i32 1, i32 3, i32 1) #26
  %10 = tail call { i32, i32, i32 } asm sideeffect "@ atomic_fetch_sub\0A1:\09ldrex\09$0, [$4]\0A\09sub\09$1, $0, $5\0A\09strex\09$2, $1, [$4]\0A\09teq\09$2, #0\0A\09bne\091b", "=&r,=&r,=&r,=*Qo,r,Ir,*Qo,~{cc}"(ptr elementtype(i32) %count.i, ptr %count.i, i32 1, ptr elementtype(i32) %count.i) #26, !srcloc !648
  %asmresult.i.i.i.i.i.i.i = extractvalue { i32, i32, i32 } %10, 0
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %asmresult.i.i.i.i.i.i.i)
  %cmp.i.i.i.i = icmp eq i32 %asmresult.i.i.i.i.i.i.i, 1
  br i1 %cmp.i.i.i.i, label %if.then.i, label %if.end5.i.i.i.i

if.end5.i.i.i.i:                                  ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %asmresult.i.i.i.i.i.i.i)
  %.not.i.i.i.i = icmp sgt i32 %asmresult.i.i.i.i.i.i.i, 0
  br i1 %.not.i.i.i.i, label %if.end5.i.i.i.i.put_cgroup_ns.exit_crit_edge, label %if.then10.i.i.i.i, !prof !636

if.end5.i.i.i.i.put_cgroup_ns.exit_crit_edge:     ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %put_cgroup_ns.exit

if.then10.i.i.i.i:                                ; preds = %if.end5.i.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @refcount_warn_saturate(ptr noundef %count.i, i32 noundef 3) #26
  br label %put_cgroup_ns.exit

if.then.i:                                        ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !649
  tail call void @free_cgroup_ns(ptr noundef nonnull %9) #26
  br label %put_cgroup_ns.exit

put_cgroup_ns.exit:                               ; preds = %if.then.i, %if.then10.i.i.i.i, %if.end5.i.i.i.i.put_cgroup_ns.exit_crit_edge, %if.end.put_cgroup_ns.exit_crit_edge
  tail call void @kfree(ptr noundef %5) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_seqfile_show(ptr noundef %m, ptr noundef %arg) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %private.i = getelementptr inbounds %struct.seq_file, ptr %m, i32 0, i32 11
  %0 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %priv.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %4 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %priv.i.i, align 8
  %parent.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 3
  %6 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %parent.i.i, align 4
  %priv.i.i31 = getelementptr inbounds %struct.kernfs_node, ptr %7, i32 0, i32 9
  %8 = ptrtoint ptr %priv.i.i31 to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %priv.i.i31, align 8
  %ss.i.i = getelementptr inbounds %struct.cftype, ptr %5, i32 0, i32 5
  %10 = ptrtoint ptr %ss.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ss.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %entry.seq_css.exit_crit_edge, label %if.then.i.i

entry.seq_css.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %seq_css.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %id.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %11, i32 0, i32 19
  %12 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %id.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.cgroup, ptr %9, i32 0, i32 18, i32 %13
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %arrayidx.i.i, align 4
  br label %seq_css.exit

seq_css.exit:                                     ; preds = %if.then.i.i, %entry.seq_css.exit_crit_edge
  %retval.0.i.i = phi ptr [ %15, %if.then.i.i ], [ %9, %entry.seq_css.exit_crit_edge ]
  %seq_show = getelementptr inbounds %struct.cftype, ptr %5, i32 0, i32 12
  %16 = ptrtoint ptr %seq_show to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %seq_show, align 4
  %tobool.not = icmp eq ptr %17, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %seq_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  %call3 = tail call i32 %17(ptr noundef %m, ptr noundef %arg) #26
  br label %cleanup

if.end:                                           ; preds = %seq_css.exit
  %read_u64 = getelementptr inbounds %struct.cftype, ptr %5, i32 0, i32 10
  %18 = ptrtoint ptr %read_u64 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %read_u64, align 4
  %tobool4.not = icmp eq ptr %19, null
  br i1 %tobool4.not, label %if.else, label %if.then5

if.then5:                                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  %call7 = tail call i64 %19(ptr noundef %retval.0.i.i, ptr noundef %5) #26
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.103, i64 noundef %call7) #26
  br label %cleanup

if.else:                                          ; preds = %if.end
  %read_s64 = getelementptr inbounds %struct.cftype, ptr %5, i32 0, i32 11
  %20 = ptrtoint ptr %read_s64 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %read_s64, align 4
  %tobool8.not = icmp eq ptr %21, null
  br i1 %tobool8.not, label %if.else.cleanup_crit_edge, label %if.then9

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then9:                                         ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  %call11 = tail call i64 %21(ptr noundef %retval.0.i.i, ptr noundef %5) #26
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %m, ptr noundef nonnull @.str.104, i64 noundef %call11) #26
  br label %cleanup

cleanup:                                          ; preds = %if.then9, %if.else.cleanup_crit_edge, %if.then5, %if.then
  %retval.0 = phi i32 [ %call3, %if.then ], [ -22, %if.else.cleanup_crit_edge ], [ 0, %if.then9 ], [ 0, %if.then5 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @cgroup_seqfile_start(ptr noundef %seq, ptr noundef %ppos) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %private.i = getelementptr inbounds %struct.seq_file, ptr %seq, i32 0, i32 11
  %0 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %priv.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %4 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %priv.i.i, align 8
  %seq_start = getelementptr inbounds %struct.cftype, ptr %5, i32 0, i32 13
  %6 = ptrtoint ptr %seq_start to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %seq_start, align 4
  %call1 = tail call ptr %7(ptr noundef %seq, ptr noundef %ppos) #26
  ret ptr %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @cgroup_seqfile_next(ptr noundef %seq, ptr noundef %v, ptr noundef %ppos) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %private.i = getelementptr inbounds %struct.seq_file, ptr %seq, i32 0, i32 11
  %0 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %priv.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %4 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %priv.i.i, align 8
  %seq_next = getelementptr inbounds %struct.cftype, ptr %5, i32 0, i32 14
  %6 = ptrtoint ptr %seq_next to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %seq_next, align 4
  %call1 = tail call ptr %7(ptr noundef %seq, ptr noundef %v, ptr noundef %ppos) #26
  ret ptr %call1
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @cgroup_seqfile_stop(ptr noundef %seq, ptr noundef %v) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %private.i = getelementptr inbounds %struct.seq_file, ptr %seq, i32 0, i32 11
  %0 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %priv.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %4 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %priv.i.i, align 8
  %seq_stop = getelementptr inbounds %struct.cftype, ptr %5, i32 0, i32 15
  %6 = ptrtoint ptr %seq_stop to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %seq_stop, align 4
  %tobool.not = icmp eq ptr %7, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  tail call void %7(ptr noundef %seq, ptr noundef %v) #26
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_file_write(ptr noundef %of, ptr noundef %buf, i32 noundef %nbytes, i64 noundef %off) #0 align 64 {
entry:
  %v = alloca i64, align 8
  %v28 = alloca i64, align 8
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.kernfs_open_file, ptr %of, i32 0, i32 3
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %2 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %of, align 4
  %parent = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %parent to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent, align 4
  %priv1 = getelementptr inbounds %struct.kernfs_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %priv1 to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %priv1, align 8
  %priv.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %8 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %priv.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %nbytes)
  %tobool.not = icmp eq i32 %nbytes, 0
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  %root = getelementptr inbounds %struct.cgroup, ptr %7, i32 0, i32 19
  %10 = ptrtoint ptr %root to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %root, align 4
  %flags = getelementptr inbounds %struct.cgroup_root, ptr %11, i32 0, i32 7
  %12 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %flags, align 4
  %and = and i32 %13, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and)
  %tobool2.not = icmp eq i32 %and, 0
  br i1 %tobool2.not, label %if.end.if.end11_crit_edge, label %land.lhs.true

if.end.if.end11_crit_edge:                        ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end11

land.lhs.true:                                    ; preds = %if.end
  %flags3 = getelementptr inbounds %struct.cftype, ptr %9, i32 0, i32 3
  %14 = ptrtoint ptr %flags3 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags3, align 4
  %and4 = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4)
  %tobool5.not = icmp eq i32 %and4, 0
  br i1 %tobool5.not, label %land.lhs.true6, label %land.lhs.true.if.end11_crit_edge

land.lhs.true.if.end11_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end11

land.lhs.true6:                                   ; preds = %land.lhs.true
  %16 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %1, align 4
  %cmp.not = icmp eq ptr %17, @init_cgroup_ns
  br i1 %cmp.not, label %land.lhs.true6.if.end11_crit_edge, label %land.lhs.true7

land.lhs.true6.if.end11_crit_edge:                ; preds = %land.lhs.true6
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end11

land.lhs.true7:                                   ; preds = %land.lhs.true6
  %root_cset = getelementptr inbounds %struct.cgroup_namespace, ptr %17, i32 0, i32 3
  %18 = ptrtoint ptr %root_cset to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %root_cset, align 4
  %dfl_cgrp = getelementptr inbounds %struct.css_set, ptr %19, i32 0, i32 3
  %20 = ptrtoint ptr %dfl_cgrp to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %dfl_cgrp, align 4
  %cmp9 = icmp eq ptr %21, %7
  br i1 %cmp9, label %land.lhs.true7.cleanup_crit_edge, label %land.lhs.true7.if.end11_crit_edge

land.lhs.true7.if.end11_crit_edge:                ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end11

land.lhs.true7.cleanup_crit_edge:                 ; preds = %land.lhs.true7
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end11:                                         ; preds = %land.lhs.true7.if.end11_crit_edge, %land.lhs.true6.if.end11_crit_edge, %land.lhs.true.if.end11_crit_edge, %if.end.if.end11_crit_edge
  %write = getelementptr inbounds %struct.cftype, ptr %9, i32 0, i32 18
  %22 = ptrtoint ptr %write to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %write, align 4
  %tobool12.not = icmp eq ptr %23, null
  br i1 %tobool12.not, label %if.end16, label %if.then13

if.then13:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #28
  %call15 = tail call i32 %23(ptr noundef %of, ptr noundef %buf, i32 noundef %nbytes, i64 noundef %off) #26
  br label %cleanup

if.end16:                                         ; preds = %if.end11
  %24 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i = and i32 %24, -16384
  %25 = inttoptr i32 %and.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %25, i32 0, i32 1
  %26 = ptrtoint ptr %preempt_count.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load volatile i32, ptr %preempt_count.i.i.i.i, align 4
  %add.i.i.i = add i32 %27, 1
  store volatile i32 %add.i.i.i, ptr %preempt_count.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !639
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #26
  %call.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i, label %if.end16.rcu_read_lock.exit_crit_edge, label %land.lhs.true.i

if.end16.rcu_read_lock.exit_crit_edge:            ; preds = %if.end16
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

land.lhs.true.i:                                  ; preds = %if.end16
  %call1.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i)
  %tobool.not.i = icmp eq i32 %call1.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i.rcu_read_lock.exit_crit_edge, label %land.lhs.true2.i

land.lhs.true.i.rcu_read_lock.exit_crit_edge:     ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

land.lhs.true2.i:                                 ; preds = %land.lhs.true.i
  %.b4.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i, label %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, label %if.then.i

land.lhs.true2.i.rcu_read_lock.exit_crit_edge:    ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit

if.then.i:                                        ; preds = %land.lhs.true2.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 696, ptr noundef nonnull @.str.55) #26
  br label %rcu_read_lock.exit

rcu_read_lock.exit:                               ; preds = %if.then.i, %land.lhs.true2.i.rcu_read_lock.exit_crit_edge, %land.lhs.true.i.rcu_read_lock.exit_crit_edge, %if.end16.rcu_read_lock.exit_crit_edge
  %ss = getelementptr inbounds %struct.cftype, ptr %9, i32 0, i32 5
  %28 = ptrtoint ptr %ss to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load ptr, ptr %ss, align 4
  %tobool.not.i66 = icmp eq ptr %29, null
  br i1 %tobool.not.i66, label %rcu_read_lock.exit.cgroup_css.exit_crit_edge, label %if.then.i67

rcu_read_lock.exit.cgroup_css.exit_crit_edge:     ; preds = %rcu_read_lock.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

if.then.i67:                                      ; preds = %rcu_read_lock.exit
  %id.i = getelementptr inbounds %struct.cgroup_subsys, ptr %29, i32 0, i32 19
  %30 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %id.i, align 4
  %arrayidx.i = getelementptr %struct.cgroup, ptr %7, i32 0, i32 18, i32 %31
  %32 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load volatile ptr, ptr %arrayidx.i, align 4
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool2.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool2.not.i, label %lor.lhs.false.i, label %if.then.i67.cgroup_css.exit_crit_edge

if.then.i67.cgroup_css.exit_crit_edge:            ; preds = %if.then.i67
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

lor.lhs.false.i:                                  ; preds = %if.then.i67
  %call3.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i)
  %tobool4.not.i = icmp eq i32 %call3.i, 0
  br i1 %tobool4.not.i, label %land.lhs.true.i68, label %lor.lhs.false.i.cgroup_css.exit_crit_edge

lor.lhs.false.i.cgroup_css.exit_crit_edge:        ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

land.lhs.true.i68:                                ; preds = %lor.lhs.false.i
  %call5.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i)
  %tobool6.not.i = icmp eq i32 %call5.i, 0
  br i1 %tobool6.not.i, label %land.lhs.true.i68.cgroup_css.exit_crit_edge, label %land.lhs.true7.i

land.lhs.true.i68.cgroup_css.exit_crit_edge:      ; preds = %land.lhs.true.i68
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i68
  %.b15.i = load i1, ptr @cgroup_css.__warned, align 1
  br i1 %.b15.i, label %land.lhs.true7.i.cgroup_css.exit_crit_edge, label %if.then9.i

land.lhs.true7.i.cgroup_css.exit_crit_edge:       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit

if.then9.i:                                       ; preds = %land.lhs.true7.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_css.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 486, ptr noundef nonnull @.str.22) #26
  br label %cgroup_css.exit

cgroup_css.exit:                                  ; preds = %if.then9.i, %land.lhs.true7.i.cgroup_css.exit_crit_edge, %land.lhs.true.i68.cgroup_css.exit_crit_edge, %lor.lhs.false.i.cgroup_css.exit_crit_edge, %if.then.i67.cgroup_css.exit_crit_edge, %rcu_read_lock.exit.cgroup_css.exit_crit_edge
  %retval.0.i = phi ptr [ %33, %if.then9.i ], [ %33, %land.lhs.true7.i.cgroup_css.exit_crit_edge ], [ %33, %land.lhs.true.i68.cgroup_css.exit_crit_edge ], [ %33, %lor.lhs.false.i.cgroup_css.exit_crit_edge ], [ %33, %if.then.i67.cgroup_css.exit_crit_edge ], [ %7, %rcu_read_lock.exit.cgroup_css.exit_crit_edge ]
  %call.i69 = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i69, label %cgroup_css.exit.rcu_read_unlock.exit_crit_edge, label %land.lhs.true.i72

cgroup_css.exit.rcu_read_unlock.exit_crit_edge:   ; preds = %cgroup_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true.i72:                                ; preds = %cgroup_css.exit
  %call1.i70 = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i70)
  %tobool.not.i71 = icmp eq i32 %call1.i70, 0
  br i1 %tobool.not.i71, label %land.lhs.true.i72.rcu_read_unlock.exit_crit_edge, label %land.lhs.true2.i74

land.lhs.true.i72.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true.i72
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

land.lhs.true2.i74:                               ; preds = %land.lhs.true.i72
  %.b4.i73 = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i73, label %land.lhs.true2.i74.rcu_read_unlock.exit_crit_edge, label %if.then.i75

land.lhs.true2.i74.rcu_read_unlock.exit_crit_edge: ; preds = %land.lhs.true2.i74
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_unlock.exit

if.then.i75:                                      ; preds = %land.lhs.true2.i74
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 724, ptr noundef nonnull @.str.57) #26
  br label %rcu_read_unlock.exit

rcu_read_unlock.exit:                             ; preds = %if.then.i75, %land.lhs.true2.i74.rcu_read_unlock.exit_crit_edge, %land.lhs.true.i72.rcu_read_unlock.exit_crit_edge, %cgroup_css.exit.rcu_read_unlock.exit_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !640
  %34 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i76 = and i32 %34, -16384
  %35 = inttoptr i32 %and.i.i.i.i.i76 to ptr
  %preempt_count.i.i.i.i77 = getelementptr inbounds %struct.thread_info, ptr %35, i32 0, i32 1
  %36 = ptrtoint ptr %preempt_count.i.i.i.i77 to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load volatile i32, ptr %preempt_count.i.i.i.i77, align 4
  %sub.i.i.i = add i32 %37, -1
  store volatile i32 %sub.i.i.i, ptr %preempt_count.i.i.i.i77, align 4
  tail call void @rcu_read_unlock_strict() #26
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #26
  %write_u64 = getelementptr inbounds %struct.cftype, ptr %9, i32 0, i32 16
  %38 = ptrtoint ptr %write_u64 to i32
  call void @__asan_load4_noabort(i32 %38)
  %39 = load ptr, ptr %write_u64, align 4
  %tobool18.not = icmp eq ptr %39, null
  br i1 %tobool18.not, label %if.else, label %if.then19

if.then19:                                        ; preds = %rcu_read_unlock.exit
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %v) #26
  %40 = ptrtoint ptr %v to i32
  call void @__asan_store8_noabort(i32 %40)
  store i64 -1, ptr %v, align 8, !annotation !638
  %call20 = call i32 @kstrtoull(ptr noundef %buf, i32 noundef 0, ptr noundef nonnull %v) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call20)
  %tobool21.not = icmp eq i32 %call20, 0
  br i1 %tobool21.not, label %if.then22, label %if.then19.if.end25_crit_edge

if.then19.if.end25_crit_edge:                     ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end25

if.then22:                                        ; preds = %if.then19
  call void @__sanitizer_cov_trace_pc() #28
  %41 = ptrtoint ptr %write_u64 to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %write_u64, align 4
  %43 = ptrtoint ptr %v to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %v, align 8
  %call24 = call i32 %42(ptr noundef %retval.0.i, ptr noundef %9, i64 noundef %44) #26
  br label %if.end25

if.end25:                                         ; preds = %if.then22, %if.then19.if.end25_crit_edge
  %ret.0 = phi i32 [ %call20, %if.then19.if.end25_crit_edge ], [ %call24, %if.then22 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %v) #26
  br label %if.end37

if.else:                                          ; preds = %rcu_read_unlock.exit
  %write_s64 = getelementptr inbounds %struct.cftype, ptr %9, i32 0, i32 17
  %45 = ptrtoint ptr %write_s64 to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %write_s64, align 4
  %tobool26.not = icmp eq ptr %46, null
  br i1 %tobool26.not, label %if.else.cleanup_crit_edge, label %if.then27

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then27:                                        ; preds = %if.else
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %v28) #26
  %47 = ptrtoint ptr %v28 to i32
  call void @__asan_store8_noabort(i32 %47)
  store i64 -1, ptr %v28, align 8, !annotation !638
  %call29 = call i32 @kstrtoll(ptr noundef %buf, i32 noundef 0, ptr noundef nonnull %v28) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call29)
  %tobool30.not = icmp eq i32 %call29, 0
  br i1 %tobool30.not, label %if.then31, label %if.then27.if.end34_crit_edge

if.then27.if.end34_crit_edge:                     ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end34

if.then31:                                        ; preds = %if.then27
  call void @__sanitizer_cov_trace_pc() #28
  %48 = ptrtoint ptr %write_s64 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load ptr, ptr %write_s64, align 4
  %50 = ptrtoint ptr %v28 to i32
  call void @__asan_load8_noabort(i32 %50)
  %51 = load i64, ptr %v28, align 8
  %call33 = call i32 %49(ptr noundef %retval.0.i, ptr noundef %9, i64 noundef %51) #26
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %if.then27.if.end34_crit_edge
  %ret.1 = phi i32 [ %call29, %if.then27.if.end34_crit_edge ], [ %call33, %if.then31 ]
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %v28) #26
  br label %if.end37

if.end37:                                         ; preds = %if.end34, %if.end25
  %ret.2 = phi i32 [ %ret.0, %if.end25 ], [ %ret.1, %if.end34 ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.2)
  %tobool38.not = icmp eq i32 %ret.2, 0
  %spec.select = select i1 %tobool38.not, i32 %nbytes, i32 %ret.2
  br label %cleanup

cleanup:                                          ; preds = %if.end37, %if.else.cleanup_crit_edge, %if.then13, %land.lhs.true7.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call15, %if.then13 ], [ 0, %entry.cleanup_crit_edge ], [ -1, %land.lhs.true7.cleanup_crit_edge ], [ -22, %if.else.cleanup_crit_edge ], [ %spec.select, %if.end37 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_file_poll(ptr noundef %of, ptr noundef %pt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of, align 4
  %priv.i = getelementptr inbounds %struct.kernfs_node, ptr %1, i32 0, i32 9
  %2 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %priv.i, align 8
  %poll = getelementptr inbounds %struct.cftype, ptr %3, i32 0, i32 19
  %4 = ptrtoint ptr %poll to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %poll, align 4
  %tobool.not = icmp eq ptr %5, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %call2 = tail call i32 %5(ptr noundef %of, ptr noundef %pt) #26
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %call3 = tail call i32 @kernfs_generic_poll(ptr noundef %of, ptr noundef %pt) #26
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %call2, %if.then ], [ %call3, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kstrtoull(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kstrtoll(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @kernfs_generic_poll(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_type_show(ptr noundef %seq, ptr nocapture noundef readnone %v) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %private.i = getelementptr inbounds %struct.seq_file, ptr %seq, i32 0, i32 11
  %0 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %parent.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i.i, align 4
  %priv.i.i = getelementptr inbounds %struct.kernfs_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %priv.i.i, align 8
  %priv.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %8 = ptrtoint ptr %priv.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %priv.i.i.i, align 8
  %ss.i.i = getelementptr inbounds %struct.cftype, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %ss.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ss.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %entry.seq_css.exit_crit_edge, label %if.then.i.i

entry.seq_css.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %seq_css.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %id.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %11, i32 0, i32 19
  %12 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %id.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.cgroup, ptr %7, i32 0, i32 18, i32 %13
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %arrayidx.i.i, align 4
  br label %seq_css.exit

seq_css.exit:                                     ; preds = %if.then.i.i, %entry.seq_css.exit_crit_edge
  %retval.0.i.i = phi ptr [ %15, %if.then.i.i ], [ %7, %entry.seq_css.exit_crit_edge ]
  %16 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %retval.0.i.i, align 8
  %dom_cgrp.i = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 22
  %18 = ptrtoint ptr %dom_cgrp.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %dom_cgrp.i, align 8
  %cmp.i.not = icmp eq ptr %19, %17
  br i1 %cmp.i.not, label %seq_css.exit.while.cond.i_crit_edge, label %seq_css.exit.if.end9_crit_edge

seq_css.exit.if.end9_crit_edge:                   ; preds = %seq_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end9

seq_css.exit.while.cond.i_crit_edge:              ; preds = %seq_css.exit
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.end5.i.while.cond.i_crit_edge, %seq_css.exit.while.cond.i_crit_edge
  %cgrp.addr.0.i = phi ptr [ %21, %if.end5.i.while.cond.i_crit_edge ], [ %17, %seq_css.exit.while.cond.i_crit_edge ]
  %parent.i.i16 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.addr.0.i, i32 0, i32 12
  %20 = ptrtoint ptr %parent.i.i16 to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %parent.i.i16, align 8
  %tobool.not.i = icmp eq ptr %21, null
  br i1 %tobool.not.i, label %if.end.i, label %while.body.i

while.body.i:                                     ; preds = %while.cond.i
  %parent.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %21, i32 0, i32 12
  %22 = ptrtoint ptr %parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %parent.i.i.i, align 8
  %tobool.not.i.i17 = icmp eq ptr %23, null
  br i1 %tobool.not.i.i17, label %while.body.i.if.end5.i_crit_edge, label %land.lhs.true.i

while.body.i.if.end5.i_crit_edge:                 ; preds = %while.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i

land.lhs.true.i:                                  ; preds = %while.body.i
  %dom_cgrp.i.i.i = getelementptr inbounds %struct.cgroup, ptr %21, i32 0, i32 22
  %24 = ptrtoint ptr %dom_cgrp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %dom_cgrp.i.i.i, align 8
  %cmp.i.not.i.i = icmp eq ptr %25, %21
  br i1 %cmp.i.not.i.i, label %if.end.i.i, label %land.lhs.true.i.if.end5.i_crit_edge

land.lhs.true.i.if.end5.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i

if.end.i.i:                                       ; preds = %land.lhs.true.i
  %nr_threaded_children.i.i = getelementptr inbounds %struct.cgroup, ptr %21, i32 0, i32 10
  %26 = ptrtoint ptr %nr_threaded_children.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %nr_threaded_children.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.not.i13.i = icmp eq i32 %27, 0
  br i1 %tobool.not.i13.i, label %if.end2.i.i, label %if.end.i.i.if.end9_crit_edge

if.end.i.i.if.end9_crit_edge:                     ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end9

if.end2.i.i:                                      ; preds = %if.end.i.i
  %nr_populated_csets.i.i.i = getelementptr inbounds %struct.cgroup, ptr %21, i32 0, i32 7
  %28 = ptrtoint ptr %nr_populated_csets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %nr_populated_csets.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.i.not.i.i = icmp eq i32 %29, 0
  br i1 %tobool.i.not.i.i, label %if.end2.i.i.if.end5.i_crit_edge, label %land.lhs.true.i.i

if.end2.i.i.if.end5.i_crit_edge:                  ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %subtree_control.i.i = getelementptr inbounds %struct.cgroup, ptr %21, i32 0, i32 14
  %30 = ptrtoint ptr %subtree_control.i.i to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %subtree_control.i.i, align 4
  %32 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %and11.i.i = and i16 %32, %31
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %and11.i.i)
  %tobool5.not.i.i = icmp eq i16 %and11.i.i, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true.i.i.if.end5.i_crit_edge, label %land.lhs.true.i.i.if.end9_crit_edge

land.lhs.true.i.i.if.end9_crit_edge:              ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end9

land.lhs.true.i.i.if.end5.i_crit_edge:            ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i

if.end5.i:                                        ; preds = %land.lhs.true.i.i.if.end5.i_crit_edge, %if.end2.i.i.if.end5.i_crit_edge, %land.lhs.true.i.if.end5.i_crit_edge, %while.body.i.if.end5.i_crit_edge
  %dom_cgrp.i14.i = getelementptr inbounds %struct.cgroup, ptr %21, i32 0, i32 22
  %33 = ptrtoint ptr %dom_cgrp.i14.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %dom_cgrp.i14.i, align 8
  %cmp.i15.not.i = icmp eq ptr %34, %21
  br i1 %cmp.i15.not.i, label %if.end5.i.while.cond.i_crit_edge, label %if.end5.i.if.end9_crit_edge

if.end5.i.if.end9_crit_edge:                      ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end9

if.end5.i.while.cond.i_crit_edge:                 ; preds = %if.end5.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.cond.i

if.end.i:                                         ; preds = %while.cond.i
  %nr_threaded_children.i = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 10
  %35 = ptrtoint ptr %nr_threaded_children.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %nr_threaded_children.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %36)
  %tobool.not.i20 = icmp eq i32 %36, 0
  br i1 %tobool.not.i20, label %if.end2.i, label %if.end.i.if.end9_crit_edge

if.end.i.if.end9_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end9

if.end2.i:                                        ; preds = %if.end.i
  %nr_populated_csets.i.i = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 7
  %37 = ptrtoint ptr %nr_populated_csets.i.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load i32, ptr %nr_populated_csets.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %38)
  %tobool.i.not.i = icmp eq i32 %38, 0
  br i1 %tobool.i.not.i, label %if.end2.i.if.else7_crit_edge, label %land.lhs.true.i21

if.end2.i.if.else7_crit_edge:                     ; preds = %if.end2.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.else7

land.lhs.true.i21:                                ; preds = %if.end2.i
  %subtree_control.i = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 14
  %39 = ptrtoint ptr %subtree_control.i to i32
  call void @__asan_load2_noabort(i32 %39)
  %40 = load i16, ptr %subtree_control.i, align 4
  %41 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %and11.i = and i16 %41, %40
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %and11.i)
  %tobool5.not.i = icmp eq i16 %and11.i, 0
  br i1 %tobool5.not.i, label %land.lhs.true.i21.if.else7_crit_edge, label %land.lhs.true.i21.if.end9_crit_edge

land.lhs.true.i21.if.end9_crit_edge:              ; preds = %land.lhs.true.i21
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end9

land.lhs.true.i21.if.else7_crit_edge:             ; preds = %land.lhs.true.i21
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.else7

if.else7:                                         ; preds = %land.lhs.true.i21.if.else7_crit_edge, %if.end2.i.if.else7_crit_edge
  br label %if.end9

if.end9:                                          ; preds = %if.else7, %land.lhs.true.i21.if.end9_crit_edge, %if.end.i.if.end9_crit_edge, %if.end5.i.if.end9_crit_edge, %land.lhs.true.i.i.if.end9_crit_edge, %if.end.i.i.if.end9_crit_edge, %seq_css.exit.if.end9_crit_edge
  %.str.106.sink = phi ptr [ @.str.108, %if.else7 ], [ @.str.105, %seq_css.exit.if.end9_crit_edge ], [ @.str.107, %if.end.i.if.end9_crit_edge ], [ @.str.107, %land.lhs.true.i21.if.end9_crit_edge ], [ @.str.106, %land.lhs.true.i.i.if.end9_crit_edge ], [ @.str.106, %if.end.i.i.if.end9_crit_edge ], [ @.str.106, %if.end5.i.if.end9_crit_edge ]
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull %.str.106.sink) #26
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_type_write(ptr nocapture noundef readonly %of, ptr noundef %buf, i32 noundef %nbytes, i64 noundef %off) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call ptr @strim(ptr noundef %buf) #26
  %call1 = tail call i32 @strcmp(ptr noundef %call.i, ptr noundef nonnull dereferenceable(9) @.str.109) #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  %0 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %of, align 4
  %call2 = tail call ptr @cgroup_kn_lock_live(ptr noundef %1, i1 noundef zeroext true)
  %tobool3.not = icmp eq ptr %call2, null
  br i1 %tobool3.not, label %if.end.cleanup_crit_edge, label %if.end5

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end5:                                          ; preds = %if.end
  %parent.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call2, i32 0, i32 12
  %2 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %parent.i.i, align 8
  %dom_cgrp1.i = getelementptr inbounds %struct.cgroup, ptr %3, i32 0, i32 22
  %4 = ptrtoint ptr %dom_cgrp1.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %dom_cgrp1.i, align 8
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %6 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool.not.i = icmp eq i32 %6, 0
  br i1 %tobool.not.i, label %if.end5.if.end.i_crit_edge, label %land.rhs.i

if.end5.if.end.i_crit_edge:                       ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

land.rhs.i:                                       ; preds = %if.end5
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !637

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 3392, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %if.end5.if.end.i_crit_edge
  %dom_cgrp.i.i = getelementptr inbounds %struct.cgroup, ptr %call2, i32 0, i32 22
  %7 = ptrtoint ptr %dom_cgrp.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %dom_cgrp.i.i, align 8
  %cmp.i.not.i = icmp eq ptr %8, %call2
  br i1 %cmp.i.not.i, label %if.end28.i, label %if.end.i.cgroup_enable_threaded.exit_crit_edge

if.end.i.cgroup_enable_threaded.exit_crit_edge:   ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_enable_threaded.exit

if.end28.i:                                       ; preds = %if.end.i
  %nr_populated_csets.i.i = getelementptr inbounds %struct.cgroup, ptr %call2, i32 0, i32 7
  %9 = ptrtoint ptr %nr_populated_csets.i.i to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load i32, ptr %nr_populated_csets.i.i, align 8
  %nr_populated_domain_children.i.i = getelementptr inbounds %struct.cgroup, ptr %call2, i32 0, i32 8
  %11 = ptrtoint ptr %nr_populated_domain_children.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load i32, ptr %nr_populated_domain_children.i.i, align 4
  %add.i.i = add i32 %12, %10
  %nr_populated_threaded_children.i.i = getelementptr inbounds %struct.cgroup, ptr %call2, i32 0, i32 9
  %13 = ptrtoint ptr %nr_populated_threaded_children.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %nr_populated_threaded_children.i.i, align 8
  %add1.i.i = sub i32 0, %14
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i.i, i32 %add1.i.i)
  %tobool.i.not.i = icmp eq i32 %add.i.i, %add1.i.i
  br i1 %tobool.i.not.i, label %lor.lhs.false.i, label %if.end28.i.cgroup_enable_threaded.exit_crit_edge

if.end28.i.cgroup_enable_threaded.exit_crit_edge: ; preds = %if.end28.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_enable_threaded.exit

lor.lhs.false.i:                                  ; preds = %if.end28.i
  %subtree_control.i = getelementptr inbounds %struct.cgroup, ptr %call2, i32 0, i32 14
  %15 = ptrtoint ptr %subtree_control.i to i32
  call void @__asan_load2_noabort(i32 %15)
  %16 = load i16, ptr %subtree_control.i, align 4
  %conv.i = zext i16 %16 to i32
  %17 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %conv30.i = zext i16 %17 to i32
  %neg.i = xor i32 %conv30.i, -1
  %and.i = and i32 %neg.i, %conv.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool31.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool31.not.i, label %if.end33.i, label %lor.lhs.false.i.cgroup_enable_threaded.exit_crit_edge

lor.lhs.false.i.cgroup_enable_threaded.exit_crit_edge: ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_enable_threaded.exit

if.end33.i:                                       ; preds = %lor.lhs.false.i
  %dom_cgrp.i.i.i = getelementptr inbounds %struct.cgroup, ptr %5, i32 0, i32 22
  %18 = ptrtoint ptr %dom_cgrp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %dom_cgrp.i.i.i, align 8
  %cmp.i.not.i.i = icmp eq ptr %19, %5
  br i1 %cmp.i.not.i.i, label %if.end33.i.while.cond.i.i_crit_edge, label %if.end33.i.cgroup_enable_threaded.exit_crit_edge

if.end33.i.cgroup_enable_threaded.exit_crit_edge: ; preds = %if.end33.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_enable_threaded.exit

if.end33.i.while.cond.i.i_crit_edge:              ; preds = %if.end33.i
  br label %while.cond.i.i

while.cond.i.i:                                   ; preds = %if.end5.i.i.while.cond.i.i_crit_edge, %if.end33.i.while.cond.i.i_crit_edge
  %cgrp.addr.0.i.i = phi ptr [ %21, %if.end5.i.i.while.cond.i.i_crit_edge ], [ %5, %if.end33.i.while.cond.i.i_crit_edge ]
  %parent.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.addr.0.i.i, i32 0, i32 12
  %20 = ptrtoint ptr %parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %parent.i.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %21, null
  br i1 %tobool.not.i.i, label %lor.lhs.false35.i, label %while.body.i.i

while.body.i.i:                                   ; preds = %while.cond.i.i
  %parent.i.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %21, i32 0, i32 12
  %22 = ptrtoint ptr %parent.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load ptr, ptr %parent.i.i.i.i, align 8
  %tobool.not.i.i.i = icmp eq ptr %23, null
  br i1 %tobool.not.i.i.i, label %while.body.i.i.if.end5.i.i_crit_edge, label %land.lhs.true.i.i

while.body.i.i.if.end5.i.i_crit_edge:             ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i.i

land.lhs.true.i.i:                                ; preds = %while.body.i.i
  %dom_cgrp.i.i.i.i = getelementptr inbounds %struct.cgroup, ptr %21, i32 0, i32 22
  %24 = ptrtoint ptr %dom_cgrp.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %dom_cgrp.i.i.i.i, align 8
  %cmp.i.not.i.i.i = icmp eq ptr %25, %21
  br i1 %cmp.i.not.i.i.i, label %if.end.i.i.i, label %land.lhs.true.i.i.if.end5.i.i_crit_edge

land.lhs.true.i.i.if.end5.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i
  %nr_threaded_children.i.i.i = getelementptr inbounds %struct.cgroup, ptr %21, i32 0, i32 10
  %26 = ptrtoint ptr %nr_threaded_children.i.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load i32, ptr %nr_threaded_children.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %27)
  %tobool.not.i13.i.i = icmp eq i32 %27, 0
  br i1 %tobool.not.i13.i.i, label %if.end2.i.i.i, label %if.end.i.i.i.cgroup_enable_threaded.exit_crit_edge

if.end.i.i.i.cgroup_enable_threaded.exit_crit_edge: ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_enable_threaded.exit

if.end2.i.i.i:                                    ; preds = %if.end.i.i.i
  %nr_populated_csets.i.i.i.i = getelementptr inbounds %struct.cgroup, ptr %21, i32 0, i32 7
  %28 = ptrtoint ptr %nr_populated_csets.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %nr_populated_csets.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %29)
  %tobool.i.not.i.i.i = icmp eq i32 %29, 0
  br i1 %tobool.i.not.i.i.i, label %if.end2.i.i.i.if.end5.i.i_crit_edge, label %land.lhs.true.i.i.i

if.end2.i.i.i.if.end5.i.i_crit_edge:              ; preds = %if.end2.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end2.i.i.i
  %subtree_control.i.i.i = getelementptr inbounds %struct.cgroup, ptr %21, i32 0, i32 14
  %30 = ptrtoint ptr %subtree_control.i.i.i to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %subtree_control.i.i.i, align 4
  %and11.i.i.i = and i16 %31, %17
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %and11.i.i.i)
  %tobool5.not.i.i.i = icmp eq i16 %and11.i.i.i, 0
  br i1 %tobool5.not.i.i.i, label %land.lhs.true.i.i.i.if.end5.i.i_crit_edge, label %land.lhs.true.i.i.i.cgroup_enable_threaded.exit_crit_edge

land.lhs.true.i.i.i.cgroup_enable_threaded.exit_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_enable_threaded.exit

land.lhs.true.i.i.i.if.end5.i.i_crit_edge:        ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %land.lhs.true.i.i.i.if.end5.i.i_crit_edge, %if.end2.i.i.i.if.end5.i.i_crit_edge, %land.lhs.true.i.i.if.end5.i.i_crit_edge, %while.body.i.i.if.end5.i.i_crit_edge
  %dom_cgrp.i14.i.i = getelementptr inbounds %struct.cgroup, ptr %21, i32 0, i32 22
  %32 = ptrtoint ptr %dom_cgrp.i14.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %dom_cgrp.i14.i.i, align 8
  %cmp.i15.not.i.i = icmp eq ptr %33, %21
  br i1 %cmp.i15.not.i.i, label %if.end5.i.i.while.cond.i.i_crit_edge, label %if.end5.i.i.cgroup_enable_threaded.exit_crit_edge

if.end5.i.i.cgroup_enable_threaded.exit_crit_edge: ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_enable_threaded.exit

if.end5.i.i.while.cond.i.i_crit_edge:             ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.cond.i.i

lor.lhs.false35.i:                                ; preds = %while.cond.i.i
  %parent.i.i.i127.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %5, i32 0, i32 12
  %34 = ptrtoint ptr %parent.i.i.i127.i to i32
  call void @__asan_load4_noabort(i32 %34)
  %35 = load ptr, ptr %parent.i.i.i127.i, align 8
  %tobool.not.i.i128.i = icmp eq ptr %35, null
  br i1 %tobool.not.i.i128.i, label %lor.lhs.false35.i.if.end38.i_crit_edge, label %if.end3.i.i

lor.lhs.false35.i.if.end38.i_crit_edge:           ; preds = %lor.lhs.false35.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end38.i

if.end3.i.i:                                      ; preds = %lor.lhs.false35.i
  %nr_populated_domain_children.i131.i = getelementptr inbounds %struct.cgroup, ptr %5, i32 0, i32 8
  %36 = ptrtoint ptr %nr_populated_domain_children.i131.i to i32
  call void @__asan_load4_noabort(i32 %36)
  %37 = load i32, ptr %nr_populated_domain_children.i131.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %37)
  %tobool.not.i132.i = icmp eq i32 %37, 0
  br i1 %tobool.not.i132.i, label %cgroup_can_be_thread_root.exit.i, label %if.end3.i.i.cgroup_enable_threaded.exit_crit_edge

if.end3.i.i.cgroup_enable_threaded.exit_crit_edge: ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_enable_threaded.exit

cgroup_can_be_thread_root.exit.i:                 ; preds = %if.end3.i.i
  %subtree_control.i.i = getelementptr inbounds %struct.cgroup, ptr %5, i32 0, i32 14
  %38 = ptrtoint ptr %subtree_control.i.i to i32
  call void @__asan_load2_noabort(i32 %38)
  %39 = load i16, ptr %subtree_control.i.i, align 4
  %conv.i.i = zext i16 %39 to i32
  %and.i.i = and i32 %conv.i.i, %neg.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool7.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool7.not.i.i, label %cgroup_can_be_thread_root.exit.i.if.end38.i_crit_edge, label %cgroup_can_be_thread_root.exit.i.cgroup_enable_threaded.exit_crit_edge

cgroup_can_be_thread_root.exit.i.cgroup_enable_threaded.exit_crit_edge: ; preds = %cgroup_can_be_thread_root.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_enable_threaded.exit

cgroup_can_be_thread_root.exit.i.if.end38.i_crit_edge: ; preds = %cgroup_can_be_thread_root.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end38.i

if.end38.i:                                       ; preds = %cgroup_can_be_thread_root.exit.i.if.end38.i_crit_edge, %lor.lhs.false35.i.if.end38.i_crit_edge
  tail call fastcc void @cgroup_save_control(ptr noundef nonnull %call2) #26
  %call.i136.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i136.i)
  %tobool.not.i137.i = icmp eq i32 %call.i136.i, 0
  br i1 %tobool.not.i137.i, label %land.lhs.true.i138.i, label %if.end38.i.do.body42.i.preheader_crit_edge

if.end38.i.do.body42.i.preheader_crit_edge:       ; preds = %if.end38.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body42.i.preheader

land.lhs.true.i138.i:                             ; preds = %if.end38.i
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool2.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true3.i.i, label %land.lhs.true.i138.i.do.body42.i.preheader_crit_edge

land.lhs.true.i138.i.do.body42.i.preheader_crit_edge: ; preds = %land.lhs.true.i138.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body42.i.preheader

land.lhs.true3.i.i:                               ; preds = %land.lhs.true.i138.i
  %call4.i.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true3.i.i.do.body42.i.preheader_crit_edge, label %land.lhs.true6.i.i

land.lhs.true3.i.i.do.body42.i.preheader_crit_edge: ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body42.i.preheader

land.lhs.true6.i.i:                               ; preds = %land.lhs.true3.i.i
  %.b29.i.i = load i1, ptr @css_next_descendant_pre.__warned, align 1
  br i1 %.b29.i.i, label %land.lhs.true6.i.i.do.body42.i.preheader_crit_edge, label %if.then.i.i

land.lhs.true6.i.i.do.body42.i.preheader_crit_edge: ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body42.i.preheader

if.then.i.i:                                      ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_next_descendant_pre.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 4385, ptr noundef nonnull @.str.14) #26
  br label %do.body42.i.preheader

do.body42.i.preheader:                            ; preds = %if.then.i.i, %land.lhs.true6.i.i.do.body42.i.preheader_crit_edge, %land.lhs.true3.i.i.do.body42.i.preheader_crit_edge, %land.lhs.true.i138.i.do.body42.i.preheader_crit_edge, %if.end38.i.do.body42.i.preheader_crit_edge
  br label %do.body42.i

do.body42.i:                                      ; preds = %for.inc.i.do.body42.i_crit_edge, %do.body42.i.preheader
  %d_css.0151.i = phi ptr [ %call97.i, %for.inc.i.do.body42.i_crit_edge ], [ %call2, %do.body42.i.preheader ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %40 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %40)
  %tobool44.not.i = icmp eq i32 %40, 0
  br i1 %tobool44.not.i, label %do.body42.i.if.end73.i_crit_edge, label %land.rhs45.i

do.body42.i.if.end73.i_crit_edge:                 ; preds = %do.body42.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end73.i

land.rhs45.i:                                     ; preds = %do.body42.i
  %call.i140.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i140.i)
  %cmp47.not.i = icmp eq i32 %call.i140.i, 0
  br i1 %cmp47.not.i, label %do.end67.i, label %land.rhs45.i.if.end73.i_crit_edge, !prof !637

land.rhs45.i.if.end73.i_crit_edge:                ; preds = %land.rhs45.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end73.i

do.end67.i:                                       ; preds = %land.rhs45.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 3419, i32 noundef 9, ptr noundef null) #26
  br label %if.end73.i

if.end73.i:                                       ; preds = %do.end67.i, %land.rhs45.i.if.end73.i_crit_edge, %do.body42.i.if.end73.i_crit_edge
  %41 = ptrtoint ptr %d_css.0151.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load ptr, ptr %d_css.0151.i, align 8
  %flags.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %42, i32 0, i32 7
  %43 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %flags.i.i, align 4
  %and.i141.i = and i32 %44, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i141.i)
  %tobool.not.i142.i = icmp eq i32 %and.i141.i, 0
  br i1 %tobool.not.i142.i, label %if.end73.i.for.inc.i_crit_edge, label %if.else.i

if.end73.i.for.inc.i_crit_edge:                   ; preds = %if.end73.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.i

if.else.i:                                        ; preds = %if.end73.i
  %cmp87.i = icmp eq ptr %42, %call2
  br i1 %cmp87.i, label %if.else.i.if.then92.i_crit_edge, label %lor.lhs.false89.i

if.else.i.if.then92.i_crit_edge:                  ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then92.i

lor.lhs.false89.i:                                ; preds = %if.else.i
  %dom_cgrp.i143.i = getelementptr inbounds %struct.cgroup, ptr %42, i32 0, i32 22
  %45 = ptrtoint ptr %dom_cgrp.i143.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %dom_cgrp.i143.i, align 8
  %cmp.i144.not.i = icmp eq ptr %46, %42
  br i1 %cmp.i144.not.i, label %lor.lhs.false89.i.for.inc.i_crit_edge, label %lor.lhs.false89.i.if.then92.i_crit_edge

lor.lhs.false89.i.if.then92.i_crit_edge:          ; preds = %lor.lhs.false89.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then92.i

lor.lhs.false89.i.for.inc.i_crit_edge:            ; preds = %lor.lhs.false89.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.i

if.then92.i:                                      ; preds = %lor.lhs.false89.i.if.then92.i_crit_edge, %if.else.i.if.then92.i_crit_edge
  %dom_cgrp93.i = getelementptr inbounds %struct.cgroup, ptr %42, i32 0, i32 22
  %47 = ptrtoint ptr %dom_cgrp93.i to i32
  call void @__asan_store4_noabort(i32 %47)
  store ptr %5, ptr %dom_cgrp93.i, align 8
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then92.i, %lor.lhs.false89.i.for.inc.i_crit_edge, %if.end73.i.for.inc.i_crit_edge
  %call97.i = tail call ptr @css_next_descendant_pre(ptr noundef nonnull %d_css.0151.i, ptr noundef nonnull %call2) #26
  %tobool41.not.i = icmp eq ptr %call97.i, null
  br i1 %tobool41.not.i, label %for.end.i, label %for.inc.i.do.body42.i_crit_edge

for.inc.i.do.body42.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body42.i

for.end.i:                                        ; preds = %for.inc.i
  %call98.i = tail call fastcc i32 @cgroup_apply_control(ptr noundef nonnull %call2) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call98.i)
  %tobool99.not.i = icmp eq i32 %call98.i, 0
  br i1 %tobool99.not.i, label %if.then100.i, label %for.end.i.if.end101.i_crit_edge

for.end.i.if.end101.i_crit_edge:                  ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end101.i

if.then100.i:                                     ; preds = %for.end.i
  call void @__sanitizer_cov_trace_pc() #28
  %nr_threaded_children.i = getelementptr inbounds %struct.cgroup, ptr %3, i32 0, i32 10
  %48 = ptrtoint ptr %nr_threaded_children.i to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %nr_threaded_children.i, align 4
  %inc.i = add i32 %49, 1
  store i32 %inc.i, ptr %nr_threaded_children.i, align 4
  br label %if.end101.i

if.end101.i:                                      ; preds = %if.then100.i, %for.end.i.if.end101.i_crit_edge
  tail call fastcc void @cgroup_finalize_control(ptr noundef nonnull %call2, i32 noundef %call98.i) #26
  br label %cgroup_enable_threaded.exit

cgroup_enable_threaded.exit:                      ; preds = %if.end101.i, %cgroup_can_be_thread_root.exit.i.cgroup_enable_threaded.exit_crit_edge, %if.end3.i.i.cgroup_enable_threaded.exit_crit_edge, %if.end5.i.i.cgroup_enable_threaded.exit_crit_edge, %land.lhs.true.i.i.i.cgroup_enable_threaded.exit_crit_edge, %if.end.i.i.i.cgroup_enable_threaded.exit_crit_edge, %if.end33.i.cgroup_enable_threaded.exit_crit_edge, %lor.lhs.false.i.cgroup_enable_threaded.exit_crit_edge, %if.end28.i.cgroup_enable_threaded.exit_crit_edge, %if.end.i.cgroup_enable_threaded.exit_crit_edge
  %retval.0.i = phi i32 [ %call98.i, %if.end101.i ], [ 0, %if.end.i.cgroup_enable_threaded.exit_crit_edge ], [ -95, %lor.lhs.false.i.cgroup_enable_threaded.exit_crit_edge ], [ -95, %if.end28.i.cgroup_enable_threaded.exit_crit_edge ], [ -95, %cgroup_can_be_thread_root.exit.i.cgroup_enable_threaded.exit_crit_edge ], [ -95, %if.end33.i.cgroup_enable_threaded.exit_crit_edge ], [ -95, %if.end3.i.i.cgroup_enable_threaded.exit_crit_edge ], [ -95, %if.end5.i.i.cgroup_enable_threaded.exit_crit_edge ], [ -95, %land.lhs.true.i.i.i.cgroup_enable_threaded.exit_crit_edge ], [ -95, %if.end.i.i.i.cgroup_enable_threaded.exit_crit_edge ]
  %50 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %50)
  %51 = load ptr, ptr %of, align 4
  %flags.i.i12 = getelementptr inbounds %struct.kernfs_node, ptr %51, i32 0, i32 11
  %52 = ptrtoint ptr %flags.i.i12 to i32
  call void @__asan_load2_noabort(i32 %52)
  %53 = load i16, ptr %flags.i.i12, align 8
  %54 = and i16 %53, 15
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %54)
  %cmp.i = icmp eq i16 %54, 1
  br i1 %cmp.i, label %cgroup_enable_threaded.exit.if.end.i15_crit_edge, label %if.else.i13

cgroup_enable_threaded.exit.if.end.i15_crit_edge: ; preds = %cgroup_enable_threaded.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i15

if.else.i13:                                      ; preds = %cgroup_enable_threaded.exit
  call void @__sanitizer_cov_trace_pc() #28
  %parent.i = getelementptr inbounds %struct.kernfs_node, ptr %51, i32 0, i32 3
  %55 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %parent.i, align 4
  br label %if.end.i15

if.end.i15:                                       ; preds = %if.else.i13, %cgroup_enable_threaded.exit.if.end.i15_crit_edge
  %kn.pn.i = phi ptr [ %56, %if.else.i13 ], [ %51, %cgroup_enable_threaded.exit.if.end.i15_crit_edge ]
  %cgrp.0.in.i = getelementptr inbounds %struct.kernfs_node, ptr %kn.pn.i, i32 0, i32 9
  %57 = ptrtoint ptr %cgrp.0.in.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %cgrp.0.i = load ptr, ptr %cgrp.0.in.i, align 8
  tail call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  tail call void @kernfs_unbreak_active_protection(ptr noundef %51) #26
  %flags.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 7
  %58 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %58)
  %59 = load i32, ptr %flags.i.i.i, align 4
  %and.i.i.i = and i32 %59, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i14 = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i14, label %if.then.i.i.i, label %if.end.i15.cgroup_kn_unlock.exit_crit_edge

if.end.i15.cgroup_kn_unlock.exit_crit_edge:       ; preds = %if.end.i15
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_kn_unlock.exit

if.then.i.i.i:                                    ; preds = %if.end.i15
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i.i) #26
  br label %cgroup_kn_unlock.exit

cgroup_kn_unlock.exit:                            ; preds = %if.then.i.i.i, %if.end.i15.cgroup_kn_unlock.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i)
  %tobool8.not = icmp eq i32 %retval.0.i, 0
  %spec.select = select i1 %tobool8.not, i32 %nbytes, i32 %retval.0.i
  br label %cleanup

cleanup:                                          ; preds = %cgroup_kn_unlock.exit, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %spec.select, %cgroup_kn_unlock.exit ], [ -22, %entry.cleanup_crit_edge ], [ -2, %if.end.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @cgroup_procs_release(ptr nocapture noundef readonly %of) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.kernfs_open_file, ptr %of, i32 0, i32 3
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %procs = getelementptr inbounds %struct.cgroup_file_ctx, ptr %1, i32 0, i32 2
  %2 = ptrtoint ptr %procs to i32
  call void @__asan_load1_noabort(i32 %2)
  %3 = load i8, ptr %procs, align 4, !range !654
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %3)
  %tobool.not = icmp eq i8 %3, 0
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %iter = getelementptr inbounds %struct.cgroup_file_ctx, ptr %1, i32 0, i32 2, i32 1
  tail call void @css_task_iter_end(ptr noundef %iter)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_procs_show(ptr noundef %s, ptr noundef %v) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @__task_pid_nr_ns(ptr noundef %v, i32 noundef 0, ptr noundef null) #26
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %s, ptr noundef nonnull @.str.110, i32 noundef %call.i) #26
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @cgroup_procs_start(ptr nocapture noundef readonly %s, ptr nocapture noundef readonly %pos) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %private.i = getelementptr inbounds %struct.seq_file, ptr %s, i32 0, i32 11
  %0 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %parent.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i.i, align 4
  %priv.i.i = getelementptr inbounds %struct.kernfs_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %priv.i.i, align 8
  %priv.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %8 = ptrtoint ptr %priv.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %priv.i.i.i, align 8
  %ss.i.i = getelementptr inbounds %struct.cftype, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %ss.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ss.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %entry.seq_css.exit_crit_edge, label %if.then.i.i

entry.seq_css.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %seq_css.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %id.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %11, i32 0, i32 19
  %12 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %id.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.cgroup, ptr %7, i32 0, i32 18, i32 %13
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %arrayidx.i.i, align 4
  br label %seq_css.exit

seq_css.exit:                                     ; preds = %if.then.i.i, %entry.seq_css.exit_crit_edge
  %retval.0.i.i = phi ptr [ %15, %if.then.i.i ], [ %7, %entry.seq_css.exit_crit_edge ]
  %16 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %retval.0.i.i, align 8
  %dom_cgrp.i = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 22
  %18 = ptrtoint ptr %dom_cgrp.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %dom_cgrp.i, align 8
  %cmp.i.not = icmp eq ptr %19, %17
  br i1 %cmp.i.not, label %if.end, label %seq_css.exit.cleanup_crit_edge

seq_css.exit.cleanup_crit_edge:                   ; preds = %seq_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %seq_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  %call3 = tail call fastcc ptr @__cgroup_procs_start(ptr noundef %s, ptr noundef %pos, i32 noundef 3)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %seq_css.exit.cleanup_crit_edge
  %retval.0 = phi ptr [ %call3, %if.end ], [ inttoptr (i32 -95 to ptr), %seq_css.exit.cleanup_crit_edge ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @cgroup_procs_next(ptr nocapture noundef readonly %s, ptr nocapture noundef readnone %v, ptr noundef %pos) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.seq_file, ptr %s, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 8
  %priv = getelementptr inbounds %struct.kernfs_open_file, ptr %1, i32 0, i32 3
  %2 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %priv, align 4
  %tobool.not = icmp eq ptr %pos, null
  br i1 %tobool.not, label %entry.if.end_crit_edge, label %if.then

entry.if.end_crit_edge:                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %4 = ptrtoint ptr %pos to i32
  call void @__asan_load8_noabort(i32 %4)
  %5 = load i64, ptr %pos, align 8
  %inc = add i64 %5, 1
  store i64 %inc, ptr %pos, align 8
  br label %if.end

if.end:                                           ; preds = %if.then, %entry.if.end_crit_edge
  %iter = getelementptr inbounds %struct.cgroup_file_ctx, ptr %3, i32 0, i32 2, i32 1
  %call = tail call ptr @css_task_iter_next(ptr noundef %iter)
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_procs_write(ptr nocapture noundef readonly %of, ptr noundef %buf, i32 noundef %nbytes, i64 noundef %off) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__cgroup_procs_write(ptr noundef %of, ptr noundef %buf, i1 noundef zeroext true)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  %spec.select = select i1 %tobool.not, i32 %nbytes, i32 %call
  ret i32 %spec.select
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal ptr @cgroup_threads_start(ptr nocapture noundef readonly %s, ptr nocapture noundef readonly %pos) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc ptr @__cgroup_procs_start(ptr noundef %s, ptr noundef %pos, i32 noundef 0)
  ret ptr %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_threads_write(ptr nocapture noundef readonly %of, ptr noundef %buf, i32 noundef %nbytes, i64 noundef %off) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @__cgroup_procs_write(ptr noundef %of, ptr noundef %buf, i1 noundef zeroext false)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call)
  %tobool.not = icmp eq i32 %call, 0
  %spec.select = select i1 %tobool.not, i32 %nbytes, i32 %call
  ret i32 %spec.select
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_controllers_show(ptr noundef %seq, ptr nocapture noundef readnone %v) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %private.i = getelementptr inbounds %struct.seq_file, ptr %seq, i32 0, i32 11
  %0 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %parent.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i.i, align 4
  %priv.i.i = getelementptr inbounds %struct.kernfs_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %priv.i.i, align 8
  %priv.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %8 = ptrtoint ptr %priv.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %priv.i.i.i, align 8
  %ss.i.i = getelementptr inbounds %struct.cftype, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %ss.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ss.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %entry.seq_css.exit_crit_edge, label %if.then.i.i

entry.seq_css.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %seq_css.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %id.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %11, i32 0, i32 19
  %12 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %id.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.cgroup, ptr %7, i32 0, i32 18, i32 %13
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %arrayidx.i.i, align 4
  br label %seq_css.exit

seq_css.exit:                                     ; preds = %if.then.i.i, %entry.seq_css.exit_crit_edge
  %retval.0.i.i = phi ptr [ %15, %if.then.i.i ], [ %7, %entry.seq_css.exit_crit_edge ]
  %16 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %retval.0.i.i, align 8
  %parent.i.i3 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %17, i32 0, i32 12
  %18 = ptrtoint ptr %parent.i.i3 to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %parent.i.i3, align 8
  %root.i = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 19
  %20 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %root.i, align 4
  %subsys_mask.i = getelementptr inbounds %struct.cgroup_root, ptr %21, i32 0, i32 1
  %22 = ptrtoint ptr %subsys_mask.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %subsys_mask.i, align 4
  %tobool.not.i = icmp eq ptr %19, null
  br i1 %tobool.not.i, label %if.end6.i, label %if.then.i

if.then.i:                                        ; preds = %seq_css.exit
  %subtree_control.i = getelementptr inbounds %struct.cgroup, ptr %19, i32 0, i32 14
  %24 = ptrtoint ptr %subtree_control.i to i32
  call void @__asan_load2_noabort(i32 %24)
  %25 = load i16, ptr %subtree_control.i, align 4
  %dom_cgrp.i.i = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 22
  %26 = ptrtoint ptr %dom_cgrp.i.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %dom_cgrp.i.i, align 8
  %cmp.i.not.i = icmp eq ptr %27, %17
  br i1 %cmp.i.not.i, label %if.then.i.cgroup_control.exit_crit_edge, label %if.then2.i

if.then.i.cgroup_control.exit_crit_edge:          ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_control.exit

if.then2.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #28
  %28 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %and23.i = and i16 %28, %25
  br label %cgroup_control.exit

if.end6.i:                                        ; preds = %seq_css.exit
  %cmp.i24.i = icmp eq ptr %21, @cgrp_dfl_root
  br i1 %cmp.i24.i, label %if.then8.i, label %if.end6.i.if.end14.i_crit_edge

if.end6.i.if.end14.i_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end14.i

if.then8.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #28
  %29 = load i16, ptr @cgrp_dfl_inhibit_ss_mask, align 2
  %30 = load i16, ptr @cgrp_dfl_implicit_ss_mask, align 2
  %or22.i = or i16 %30, %29
  %or.i = zext i16 %or22.i to i32
  %neg.i = xor i32 %or.i, -1
  %and12.i = and i32 %23, %neg.i
  br label %if.end14.i

if.end14.i:                                       ; preds = %if.then8.i, %if.end6.i.if.end14.i_crit_edge
  %root_ss_mask.0.in.i = phi i32 [ %and12.i, %if.then8.i ], [ %23, %if.end6.i.if.end14.i_crit_edge ]
  %root_ss_mask.0.i = trunc i32 %root_ss_mask.0.in.i to i16
  br label %cgroup_control.exit

cgroup_control.exit:                              ; preds = %if.end14.i, %if.then2.i, %if.then.i.cgroup_control.exit_crit_edge
  %retval.0.i = phi i16 [ %root_ss_mask.0.i, %if.end14.i ], [ %and23.i, %if.then2.i ], [ %25, %if.then.i.cgroup_control.exit_crit_edge ]
  tail call fastcc void @cgroup_print_ss_mask(ptr noundef %seq, i16 noundef zeroext %retval.0.i)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_subtree_control_show(ptr noundef %seq, ptr nocapture noundef readnone %v) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %private.i = getelementptr inbounds %struct.seq_file, ptr %seq, i32 0, i32 11
  %0 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %parent.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i.i, align 4
  %priv.i.i = getelementptr inbounds %struct.kernfs_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %priv.i.i, align 8
  %priv.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %8 = ptrtoint ptr %priv.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %priv.i.i.i, align 8
  %ss.i.i = getelementptr inbounds %struct.cftype, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %ss.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ss.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %entry.seq_css.exit_crit_edge, label %if.then.i.i

entry.seq_css.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %seq_css.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %id.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %11, i32 0, i32 19
  %12 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %id.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.cgroup, ptr %7, i32 0, i32 18, i32 %13
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %arrayidx.i.i, align 4
  br label %seq_css.exit

seq_css.exit:                                     ; preds = %if.then.i.i, %entry.seq_css.exit_crit_edge
  %retval.0.i.i = phi ptr [ %15, %if.then.i.i ], [ %7, %entry.seq_css.exit_crit_edge ]
  %16 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %retval.0.i.i, align 8
  %subtree_control = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 14
  %18 = ptrtoint ptr %subtree_control to i32
  call void @__asan_load2_noabort(i32 %18)
  %19 = load i16, ptr %subtree_control, align 4
  tail call fastcc void @cgroup_print_ss_mask(ptr noundef %seq, i16 noundef zeroext %19)
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_subtree_control_write(ptr nocapture noundef readonly %of, ptr noundef %buf, i32 noundef %nbytes, i64 noundef %off) #0 align 64 {
entry:
  %buf.addr = alloca ptr, align 4
  %__ss_mask = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call ptr @strim(ptr noundef %buf) #26
  %0 = ptrtoint ptr %buf.addr to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr %call.i, ptr %buf.addr, align 4
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %cleanup.while.cond.outer_crit_edge, %entry
  %disable.0.ph = phi i16 [ %disable.2, %cleanup.while.cond.outer_crit_edge ], [ 0, %entry ]
  %enable.0.ph = phi i16 [ %enable.2, %cleanup.while.cond.outer_crit_edge ], [ 0, %entry ]
  br label %while.cond

while.cond:                                       ; preds = %while.body.while.cond_crit_edge, %while.cond.outer
  %call1 = call ptr @strsep(ptr noundef nonnull %buf.addr, ptr noundef nonnull @.str.111) #26
  %tobool.not = icmp eq ptr %call1, null
  br i1 %tobool.not, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond
  %1 = ptrtoint ptr %call1 to i32
  call void @__asan_load1_noabort(i32 %1)
  %2 = load i8, ptr %call1, align 1
  %cmp = icmp eq i8 %2, 0
  br i1 %cmp, label %while.body.while.cond_crit_edge, label %do.body

while.body.while.cond_crit_edge:                  ; preds = %while.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.cond

do.body:                                          ; preds = %while.body
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__ss_mask) #26
  %3 = load i16, ptr @cgrp_dfl_inhibit_ss_mask, align 2
  %conv3 = zext i16 %3 to i32
  %neg = xor i32 %conv3, -1
  %4 = ptrtoint ptr %__ss_mask to i32
  call void @__asan_store4_noabort(i32 %4)
  store i32 %neg, ptr %__ss_mask, align 4
  %call4 = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask, i32 noundef 14, i32 noundef 0) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %call4)
  %cmp5285 = icmp slt i32 %call4, 14
  br i1 %cmp5285, label %for.body.lr.ph, label %do.body.cleanup_crit_edge

do.body.cleanup_crit_edge:                        ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

for.body.lr.ph:                                   ; preds = %do.body
  %add.ptr = getelementptr i8, ptr %call1, i32 1
  br label %for.body

for.body:                                         ; preds = %for.inc.for.body_crit_edge, %for.body.lr.ph
  %ssid.0286 = phi i32 [ %call4, %for.body.lr.ph ], [ %call39, %for.inc.for.body_crit_edge ]
  %arrayidx7 = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %ssid.0286
  %5 = ptrtoint ptr %arrayidx7 to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx7, align 4
  %arrayidx.i = getelementptr [14 x ptr], ptr @cgroup_subsys_enabled_key, i32 0, i32 %ssid.0286
  %7 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %arrayidx.i, align 4
  %call.i254 = call i32 @static_key_count(ptr noundef %8) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i254)
  %cmp.i = icmp sgt i32 %call.i254, 0
  br i1 %cmp.i, label %lor.lhs.false, label %for.body.for.inc_crit_edge

for.body.for.inc_crit_edge:                       ; preds = %for.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

lor.lhs.false:                                    ; preds = %for.body
  %name = getelementptr inbounds %struct.cgroup_subsys, ptr %6, i32 0, i32 20
  %9 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %9)
  %10 = load ptr, ptr %name, align 4
  %call9 = call i32 @strcmp(ptr noundef %add.ptr, ptr noundef %10) #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call9)
  %tobool10.not = icmp eq i32 %call9, 0
  br i1 %tobool10.not, label %if.end12, label %lor.lhs.false.for.inc_crit_edge

lor.lhs.false.for.inc_crit_edge:                  ; preds = %lor.lhs.false
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

if.end12:                                         ; preds = %lor.lhs.false
  %11 = ptrtoint ptr %call1 to i32
  call void @__asan_load1_noabort(i32 %11)
  %12 = load i8, ptr %call1, align 1
  %13 = zext i8 %12 to i64
  call void @__sanitizer_cov_trace_switch(i64 %13, ptr @__sancov_gen_cov_switch_values.141)
  switch i8 %12, label %cleanup.thread [
    i8 43, label %if.then16
    i8 45, label %if.then26
  ]

cleanup.thread:                                   ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__ss_mask) #26
  br label %cleanup190

if.then16:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #28
  %shl = shl nuw nsw i32 1, %ssid.0286
  %14 = trunc i32 %shl to i16
  %conv18 = or i16 %enable.0.ph, %14
  %15 = xor i16 %14, -1
  %conv22 = and i16 %disable.0.ph, %15
  br label %cleanup

if.then26:                                        ; preds = %if.end12
  call void @__sanitizer_cov_trace_pc() #28
  %shl27 = shl nuw nsw i32 1, %ssid.0286
  %16 = trunc i32 %shl27 to i16
  %conv30 = or i16 %disable.0.ph, %16
  %17 = xor i16 %16, -1
  %conv35 = and i16 %enable.0.ph, %17
  br label %cleanup

for.inc:                                          ; preds = %lor.lhs.false.for.inc_crit_edge, %for.body.for.inc_crit_edge
  %add = add nsw i32 %ssid.0286, 1
  %call39 = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask, i32 noundef 14, i32 noundef %add) #26
  %cmp5 = icmp slt i32 %call39, 14
  br i1 %cmp5, label %for.inc.for.body_crit_edge, label %for.inc.cleanup_crit_edge

for.inc.cleanup_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

for.inc.for.body_crit_edge:                       ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.body

cleanup:                                          ; preds = %for.inc.cleanup_crit_edge, %if.then26, %if.then16, %do.body.cleanup_crit_edge
  %ssid.0280 = phi i32 [ %ssid.0286, %if.then16 ], [ %ssid.0286, %if.then26 ], [ %call4, %do.body.cleanup_crit_edge ], [ %call39, %for.inc.cleanup_crit_edge ]
  %disable.2 = phi i16 [ %conv22, %if.then16 ], [ %conv30, %if.then26 ], [ %disable.0.ph, %do.body.cleanup_crit_edge ], [ %disable.0.ph, %for.inc.cleanup_crit_edge ]
  %enable.2 = phi i16 [ %conv18, %if.then16 ], [ %conv35, %if.then26 ], [ %enable.0.ph, %do.body.cleanup_crit_edge ], [ %enable.0.ph, %for.inc.cleanup_crit_edge ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__ss_mask) #26
  %cmp40 = icmp eq i32 %ssid.0280, 14
  br i1 %cmp40, label %cleanup.cleanup190_crit_edge, label %cleanup.while.cond.outer_crit_edge

cleanup.while.cond.outer_crit_edge:               ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.cond.outer

cleanup.cleanup190_crit_edge:                     ; preds = %cleanup
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup190

while.end:                                        ; preds = %while.cond
  %18 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %of, align 4
  %call44 = call ptr @cgroup_kn_lock_live(ptr noundef %19, i1 noundef zeroext true)
  %tobool45.not = icmp eq ptr %call44, null
  br i1 %tobool45.not, label %while.end.cleanup190_crit_edge, label %for.cond48.preheader

while.end.cleanup190_crit_edge:                   ; preds = %while.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup190

for.cond48.preheader:                             ; preds = %while.end
  %subtree_control = getelementptr inbounds %struct.cgroup, ptr %call44, i32 0, i32 14
  %parent.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call44, i32 0, i32 12
  %root.i = getelementptr inbounds %struct.cgroup, ptr %call44, i32 0, i32 19
  %dom_cgrp.i.i = getelementptr inbounds %struct.cgroup, ptr %call44, i32 0, i32 22
  %children = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call44, i32 0, i32 4
  br label %land.rhs

land.rhs:                                         ; preds = %for.inc162.land.rhs_crit_edge, %for.cond48.preheader
  %enable.3293 = phi i16 [ %enable.0.ph, %for.cond48.preheader ], [ %enable.4, %for.inc162.land.rhs_crit_edge ]
  %disable.3292 = phi i16 [ %disable.0.ph, %for.cond48.preheader ], [ %disable.4, %for.inc162.land.rhs_crit_edge ]
  %ssid.1291 = phi i32 [ 0, %for.cond48.preheader ], [ %inc, %for.inc162.land.rhs_crit_edge ]
  %conv54 = zext i16 %enable.3293 to i32
  %shl55 = shl nuw nsw i32 1, %ssid.1291
  %and56 = and i32 %shl55, %conv54
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and56)
  %tobool57.not = icmp eq i32 %and56, 0
  br i1 %tobool57.not, label %if.else77, label %if.then58

if.then58:                                        ; preds = %land.rhs
  %20 = ptrtoint ptr %subtree_control to i32
  call void @__asan_load2_noabort(i32 %20)
  %21 = load i16, ptr %subtree_control, align 4
  %conv59 = zext i16 %21 to i32
  %and61 = and i32 %shl55, %conv59
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and61)
  %tobool62.not = icmp eq i32 %and61, 0
  br i1 %tobool62.not, label %if.end69, label %if.then63

if.then63:                                        ; preds = %if.then58
  call void @__sanitizer_cov_trace_pc() #28
  %22 = trunc i32 %shl55 to i16
  %23 = xor i16 %22, -1
  %conv68 = and i16 %enable.3293, %23
  br label %for.inc162

if.end69:                                         ; preds = %if.then58
  %24 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load ptr, ptr %parent.i.i, align 8
  %26 = ptrtoint ptr %root.i to i32
  call void @__asan_load4_noabort(i32 %26)
  %27 = load ptr, ptr %root.i, align 4
  %subsys_mask.i = getelementptr inbounds %struct.cgroup_root, ptr %27, i32 0, i32 1
  %28 = ptrtoint ptr %subsys_mask.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %subsys_mask.i, align 4
  %tobool.not.i = icmp eq ptr %25, null
  br i1 %tobool.not.i, label %if.end6.i, label %if.then.i

if.then.i:                                        ; preds = %if.end69
  %subtree_control.i = getelementptr inbounds %struct.cgroup, ptr %25, i32 0, i32 14
  %30 = ptrtoint ptr %subtree_control.i to i32
  call void @__asan_load2_noabort(i32 %30)
  %31 = load i16, ptr %subtree_control.i, align 4
  %32 = ptrtoint ptr %dom_cgrp.i.i to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %dom_cgrp.i.i, align 8
  %cmp.i.not.i = icmp eq ptr %33, %call44
  br i1 %cmp.i.not.i, label %if.then.i.cgroup_control.exit_crit_edge, label %if.then2.i

if.then.i.cgroup_control.exit_crit_edge:          ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_control.exit

if.then2.i:                                       ; preds = %if.then.i
  call void @__sanitizer_cov_trace_pc() #28
  %34 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %and23.i = and i16 %34, %31
  br label %cgroup_control.exit

if.end6.i:                                        ; preds = %if.end69
  %cmp.i24.i = icmp eq ptr %27, @cgrp_dfl_root
  br i1 %cmp.i24.i, label %if.then8.i, label %if.end6.i.if.end14.i_crit_edge

if.end6.i.if.end14.i_crit_edge:                   ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end14.i

if.then8.i:                                       ; preds = %if.end6.i
  call void @__sanitizer_cov_trace_pc() #28
  %35 = load i16, ptr @cgrp_dfl_inhibit_ss_mask, align 2
  %36 = load i16, ptr @cgrp_dfl_implicit_ss_mask, align 2
  %or22.i = or i16 %36, %35
  %or.i = zext i16 %or22.i to i32
  %neg.i = xor i32 %or.i, -1
  %and12.i = and i32 %29, %neg.i
  br label %if.end14.i

if.end14.i:                                       ; preds = %if.then8.i, %if.end6.i.if.end14.i_crit_edge
  %root_ss_mask.0.in.i = phi i32 [ %and12.i, %if.then8.i ], [ %29, %if.end6.i.if.end14.i_crit_edge ]
  %root_ss_mask.0.i = trunc i32 %root_ss_mask.0.in.i to i16
  br label %cgroup_control.exit

cgroup_control.exit:                              ; preds = %if.end14.i, %if.then2.i, %if.then.i.cgroup_control.exit_crit_edge
  %retval.0.i = phi i16 [ %root_ss_mask.0.i, %if.end14.i ], [ %and23.i, %if.then2.i ], [ %31, %if.then.i.cgroup_control.exit_crit_edge ]
  %conv71 = zext i16 %retval.0.i to i32
  %and73 = and i32 %shl55, %conv71
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and73)
  %tobool74.not = icmp eq i32 %and73, 0
  br i1 %tobool74.not, label %cgroup_control.exit.out_unlock_crit_edge, label %cgroup_control.exit.for.inc162_crit_edge

cgroup_control.exit.for.inc162_crit_edge:         ; preds = %cgroup_control.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc162

cgroup_control.exit.out_unlock_crit_edge:         ; preds = %cgroup_control.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

if.else77:                                        ; preds = %land.rhs
  %conv78 = zext i16 %disable.3292 to i32
  %and80 = and i32 %shl55, %conv78
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and80)
  %tobool81.not = icmp eq i32 %and80, 0
  br i1 %tobool81.not, label %if.else77.for.inc162_crit_edge, label %if.then82

if.else77.for.inc162_crit_edge:                   ; preds = %if.else77
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc162

if.then82:                                        ; preds = %if.else77
  %37 = ptrtoint ptr %subtree_control to i32
  call void @__asan_load2_noabort(i32 %37)
  %38 = load i16, ptr %subtree_control, align 4
  %conv84 = zext i16 %38 to i32
  %and86 = and i32 %shl55, %conv84
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and86)
  %tobool87.not = icmp eq i32 %and86, 0
  br i1 %tobool87.not, label %if.then88, label %if.end94

if.then88:                                        ; preds = %if.then82
  call void @__sanitizer_cov_trace_pc() #28
  %39 = trunc i32 %shl55 to i16
  %40 = xor i16 %39, -1
  %conv93 = and i16 %disable.3292, %40
  br label %for.inc162

if.end94:                                         ; preds = %if.then82
  %41 = ptrtoint ptr %children to i32
  call void @__asan_load4_noabort(i32 %41)
  %.pn288 = load ptr, ptr %children, align 8
  %cmp100.not289 = icmp eq ptr %.pn288, %children
  br i1 %cmp100.not289, label %if.end94.for.inc162_crit_edge, label %if.end94.do.body103_crit_edge

if.end94.do.body103_crit_edge:                    ; preds = %if.end94
  br label %do.body103

if.end94.for.inc162_crit_edge:                    ; preds = %if.end94
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc162

do.body103:                                       ; preds = %for.inc152.do.body103_crit_edge, %if.end94.do.body103_crit_edge
  %.pn290 = phi ptr [ %.pn, %for.inc152.do.body103_crit_edge ], [ %.pn288, %if.end94.do.body103_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %42 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %42)
  %tobool104.not = icmp eq i32 %42, 0
  br i1 %tobool104.not, label %do.body103.if.end129_crit_edge, label %land.rhs105

do.body103.if.end129_crit_edge:                   ; preds = %do.body103
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end129

land.rhs105:                                      ; preds = %do.body103
  %call.i255 = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i255)
  %cmp107.not = icmp eq i32 %call.i255, 0
  br i1 %cmp107.not, label %do.end123, label %land.rhs105.if.end129_crit_edge, !prof !637

land.rhs105.if.end129_crit_edge:                  ; preds = %land.rhs105
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end129

do.end123:                                        ; preds = %land.rhs105
  call void @__sanitizer_cov_trace_pc() #28
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 3340, i32 noundef 9, ptr noundef null) #26
  br label %if.end129

if.end129:                                        ; preds = %do.end123, %land.rhs105.if.end129_crit_edge, %do.body103.if.end129_crit_edge
  %flags.i = getelementptr i8, ptr %.pn290, i32 28
  %43 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %43)
  %44 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %44, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i256 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i256, label %if.end129.for.inc152_crit_edge, label %if.else143

if.end129.for.inc152_crit_edge:                   ; preds = %if.end129
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc152

if.else143:                                       ; preds = %if.end129
  %subtree_control144 = getelementptr i8, ptr %.pn290, i32 308
  %45 = ptrtoint ptr %subtree_control144 to i32
  call void @__asan_load2_noabort(i32 %45)
  %46 = load i16, ptr %subtree_control144, align 4
  %conv145 = zext i16 %46 to i32
  %and147 = and i32 %shl55, %conv145
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and147)
  %tobool148.not = icmp eq i32 %and147, 0
  br i1 %tobool148.not, label %if.else143.for.inc152_crit_edge, label %if.else143.out_unlock_crit_edge

if.else143.out_unlock_crit_edge:                  ; preds = %if.else143
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

if.else143.for.inc152_crit_edge:                  ; preds = %if.else143
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc152

for.inc152:                                       ; preds = %if.else143.for.inc152_crit_edge, %if.end129.for.inc152_crit_edge
  %47 = ptrtoint ptr %.pn290 to i32
  call void @__asan_load4_noabort(i32 %47)
  %.pn = load ptr, ptr %.pn290, align 8
  %cmp100.not = icmp eq ptr %.pn, %children
  br i1 %cmp100.not, label %for.inc152.for.inc162_crit_edge, label %for.inc152.do.body103_crit_edge

for.inc152.do.body103_crit_edge:                  ; preds = %for.inc152
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body103

for.inc152.for.inc162_crit_edge:                  ; preds = %for.inc152
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc162

for.inc162:                                       ; preds = %for.inc152.for.inc162_crit_edge, %if.end94.for.inc162_crit_edge, %if.then88, %if.else77.for.inc162_crit_edge, %cgroup_control.exit.for.inc162_crit_edge, %if.then63
  %disable.4 = phi i16 [ %disable.3292, %if.then63 ], [ %disable.3292, %cgroup_control.exit.for.inc162_crit_edge ], [ %conv93, %if.then88 ], [ %disable.3292, %if.else77.for.inc162_crit_edge ], [ %disable.3292, %if.end94.for.inc162_crit_edge ], [ %disable.3292, %for.inc152.for.inc162_crit_edge ]
  %enable.4 = phi i16 [ %conv68, %if.then63 ], [ %enable.3293, %cgroup_control.exit.for.inc162_crit_edge ], [ %enable.3293, %if.then88 ], [ %enable.3293, %if.else77.for.inc162_crit_edge ], [ %enable.3293, %if.end94.for.inc162_crit_edge ], [ %enable.3293, %for.inc152.for.inc162_crit_edge ]
  %inc = add nuw nsw i32 %ssid.1291, 1
  %exitcond.not = icmp eq i32 %inc, 14
  br i1 %exitcond.not, label %for.end163, label %for.inc162.land.rhs_crit_edge

for.inc162.land.rhs_crit_edge:                    ; preds = %for.inc162
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs

for.end163:                                       ; preds = %for.inc162
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %enable.4)
  %tobool164.not = icmp eq i16 %enable.4, 0
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %disable.4)
  %tobool165.not = icmp eq i16 %disable.4, 0
  %or.cond = select i1 %tobool164.not, i1 %tobool165.not, i1 false
  br i1 %or.cond, label %for.end163.out_unlock_crit_edge, label %if.end167

for.end163.out_unlock_crit_edge:                  ; preds = %for.end163
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

if.end167:                                        ; preds = %for.end163
  %48 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %neg.i257 = xor i16 %48, -1
  %and.i258 = and i16 %enable.4, %neg.i257
  br i1 %tobool164.not, label %if.end167.if.end171_crit_edge, label %if.end.i

if.end167.if.end171_crit_edge:                    ; preds = %if.end167
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end171

if.end.i:                                         ; preds = %if.end167
  %49 = ptrtoint ptr %dom_cgrp.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %dom_cgrp.i.i, align 8
  %dom_cgrp.i.i.i = getelementptr inbounds %struct.cgroup, ptr %50, i32 0, i32 22
  %51 = ptrtoint ptr %dom_cgrp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %dom_cgrp.i.i.i, align 8
  %cmp.i.not.i.i = icmp eq ptr %52, %50
  br i1 %cmp.i.not.i.i, label %if.end.i.while.cond.i.i_crit_edge, label %if.end.i.out_unlock_crit_edge

if.end.i.out_unlock_crit_edge:                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

if.end.i.while.cond.i.i_crit_edge:                ; preds = %if.end.i
  br label %while.cond.i.i

while.cond.i.i:                                   ; preds = %if.end5.i.i.while.cond.i.i_crit_edge, %if.end.i.while.cond.i.i_crit_edge
  %cgrp.addr.0.i.i = phi ptr [ %54, %if.end5.i.i.while.cond.i.i_crit_edge ], [ %50, %if.end.i.while.cond.i.i_crit_edge ]
  %parent.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.addr.0.i.i, i32 0, i32 12
  %53 = ptrtoint ptr %parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %parent.i.i.i, align 8
  %tobool.not.i.i = icmp eq ptr %54, null
  br i1 %tobool.not.i.i, label %if.end4.i, label %while.body.i.i

while.body.i.i:                                   ; preds = %while.cond.i.i
  %parent.i.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %54, i32 0, i32 12
  %55 = ptrtoint ptr %parent.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %parent.i.i.i.i, align 8
  %tobool.not.i.i.i = icmp eq ptr %56, null
  br i1 %tobool.not.i.i.i, label %while.body.i.i.if.end5.i.i_crit_edge, label %land.lhs.true.i.i

while.body.i.i.if.end5.i.i_crit_edge:             ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i.i

land.lhs.true.i.i:                                ; preds = %while.body.i.i
  %dom_cgrp.i.i.i.i = getelementptr inbounds %struct.cgroup, ptr %54, i32 0, i32 22
  %57 = ptrtoint ptr %dom_cgrp.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %dom_cgrp.i.i.i.i, align 8
  %cmp.i.not.i.i.i = icmp eq ptr %58, %54
  br i1 %cmp.i.not.i.i.i, label %if.end.i.i.i, label %land.lhs.true.i.i.if.end5.i.i_crit_edge

land.lhs.true.i.i.if.end5.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i
  %nr_threaded_children.i.i.i = getelementptr inbounds %struct.cgroup, ptr %54, i32 0, i32 10
  %59 = ptrtoint ptr %nr_threaded_children.i.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %nr_threaded_children.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %tobool.not.i13.i.i = icmp eq i32 %60, 0
  br i1 %tobool.not.i13.i.i, label %if.end2.i.i.i, label %if.end.i.i.i.out_unlock_crit_edge

if.end.i.i.i.out_unlock_crit_edge:                ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

if.end2.i.i.i:                                    ; preds = %if.end.i.i.i
  %nr_populated_csets.i.i.i.i = getelementptr inbounds %struct.cgroup, ptr %54, i32 0, i32 7
  %61 = ptrtoint ptr %nr_populated_csets.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %61)
  %62 = load i32, ptr %nr_populated_csets.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %62)
  %tobool.i.not.i.i.i = icmp eq i32 %62, 0
  br i1 %tobool.i.not.i.i.i, label %if.end2.i.i.i.if.end5.i.i_crit_edge, label %land.lhs.true.i.i.i

if.end2.i.i.i.if.end5.i.i_crit_edge:              ; preds = %if.end2.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end2.i.i.i
  %subtree_control.i.i.i = getelementptr inbounds %struct.cgroup, ptr %54, i32 0, i32 14
  %63 = ptrtoint ptr %subtree_control.i.i.i to i32
  call void @__asan_load2_noabort(i32 %63)
  %64 = load i16, ptr %subtree_control.i.i.i, align 4
  %and11.i.i.i = and i16 %64, %48
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %and11.i.i.i)
  %tobool5.not.i.i.i = icmp eq i16 %and11.i.i.i, 0
  br i1 %tobool5.not.i.i.i, label %land.lhs.true.i.i.i.if.end5.i.i_crit_edge, label %land.lhs.true.i.i.i.out_unlock_crit_edge

land.lhs.true.i.i.i.out_unlock_crit_edge:         ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

land.lhs.true.i.i.i.if.end5.i.i_crit_edge:        ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %land.lhs.true.i.i.i.if.end5.i.i_crit_edge, %if.end2.i.i.i.if.end5.i.i_crit_edge, %land.lhs.true.i.i.if.end5.i.i_crit_edge, %while.body.i.i.if.end5.i.i_crit_edge
  %dom_cgrp.i14.i.i = getelementptr inbounds %struct.cgroup, ptr %54, i32 0, i32 22
  %65 = ptrtoint ptr %dom_cgrp.i14.i.i to i32
  call void @__asan_load4_noabort(i32 %65)
  %66 = load ptr, ptr %dom_cgrp.i14.i.i, align 8
  %cmp.i15.not.i.i = icmp eq ptr %66, %54
  br i1 %cmp.i15.not.i.i, label %if.end5.i.i.while.cond.i.i_crit_edge, label %if.end5.i.i.out_unlock_crit_edge

if.end5.i.i.out_unlock_crit_edge:                 ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

if.end5.i.i.while.cond.i.i_crit_edge:             ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.cond.i.i

if.end4.i:                                        ; preds = %while.cond.i.i
  %67 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %67)
  %68 = load ptr, ptr %parent.i.i, align 8
  %tobool.not.i35.i = icmp eq ptr %68, null
  br i1 %tobool.not.i35.i, label %if.end4.i.if.end171_crit_edge, label %if.end7.i

if.end4.i.if.end171_crit_edge:                    ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end171

if.end7.i:                                        ; preds = %if.end4.i
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %and.i258)
  %tobool8.not.i = icmp eq i16 %and.i258, 0
  %cmp.i.not.i44.i = icmp eq ptr %50, %call44
  br i1 %tobool8.not.i, label %if.end.i45.i, label %if.then9.i

if.then9.i:                                       ; preds = %if.end7.i
  br i1 %cmp.i.not.i44.i, label %if.end.i.i, label %if.then9.i.out_unlock_crit_edge

if.then9.i.out_unlock_crit_edge:                  ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

if.end.i.i:                                       ; preds = %if.then9.i
  %nr_threaded_children.i.i = getelementptr inbounds %struct.cgroup, ptr %call44, i32 0, i32 10
  %69 = ptrtoint ptr %nr_threaded_children.i.i to i32
  call void @__asan_load4_noabort(i32 %69)
  %70 = load i32, ptr %nr_threaded_children.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %70)
  %tobool.not.i38.i = icmp eq i32 %70, 0
  br i1 %tobool.not.i38.i, label %if.end2.i.i, label %if.end.i.i.out_unlock_crit_edge

if.end.i.i.out_unlock_crit_edge:                  ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

if.end2.i.i:                                      ; preds = %if.end.i.i
  %nr_populated_csets.i.i.i = getelementptr inbounds %struct.cgroup, ptr %call44, i32 0, i32 7
  %71 = ptrtoint ptr %nr_populated_csets.i.i.i to i32
  call void @__asan_load4_noabort(i32 %71)
  %72 = load i32, ptr %nr_populated_csets.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %72)
  %tobool.i.not.i.i = icmp eq i32 %72, 0
  br i1 %tobool.i.not.i.i, label %if.end2.i.i.if.end23.i_crit_edge, label %land.lhs.true.i39.i

if.end2.i.i.if.end23.i_crit_edge:                 ; preds = %if.end2.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end23.i

land.lhs.true.i39.i:                              ; preds = %if.end2.i.i
  %73 = ptrtoint ptr %subtree_control to i32
  call void @__asan_load2_noabort(i32 %73)
  %74 = load i16, ptr %subtree_control, align 4
  %and11.i.i = and i16 %74, %48
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %and11.i.i)
  %tobool5.not.i.not.i = icmp eq i16 %and11.i.i, 0
  br i1 %tobool5.not.i.not.i, label %land.lhs.true.i39.i.if.end23.i_crit_edge, label %land.lhs.true.i39.i.out_unlock_crit_edge

land.lhs.true.i39.i.out_unlock_crit_edge:         ; preds = %land.lhs.true.i39.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

land.lhs.true.i39.i.if.end23.i_crit_edge:         ; preds = %land.lhs.true.i39.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end23.i

if.end.i45.i:                                     ; preds = %if.end7.i
  br i1 %cmp.i.not.i44.i, label %if.end3.i.i, label %if.end.i45.i.if.end171_crit_edge

if.end.i45.i.if.end171_crit_edge:                 ; preds = %if.end.i45.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end171

if.end3.i.i:                                      ; preds = %if.end.i45.i
  %nr_populated_domain_children.i.i = getelementptr inbounds %struct.cgroup, ptr %call44, i32 0, i32 8
  %75 = ptrtoint ptr %nr_populated_domain_children.i.i to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load i32, ptr %nr_populated_domain_children.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %76)
  %tobool.not.i46.i = icmp eq i32 %76, 0
  br i1 %tobool.not.i46.i, label %cgroup_can_be_thread_root.exit.i, label %if.end3.i.i.if.end23.i_crit_edge

if.end3.i.i.if.end23.i_crit_edge:                 ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end23.i

cgroup_can_be_thread_root.exit.i:                 ; preds = %if.end3.i.i
  %77 = ptrtoint ptr %subtree_control to i32
  call void @__asan_load2_noabort(i32 %77)
  %78 = load i16, ptr %subtree_control, align 4
  %conv.i.i = zext i16 %78 to i32
  %conv6.i.i = zext i16 %48 to i32
  %neg.i.i = xor i32 %conv6.i.i, -1
  %and.i.i = and i32 %conv.i.i, %neg.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool7.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool7.not.i.i, label %cgroup_can_be_thread_root.exit.i.if.end171_crit_edge, label %cgroup_can_be_thread_root.exit.i.if.end23.i_crit_edge

cgroup_can_be_thread_root.exit.i.if.end23.i_crit_edge: ; preds = %cgroup_can_be_thread_root.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end23.i

cgroup_can_be_thread_root.exit.i.if.end171_crit_edge: ; preds = %cgroup_can_be_thread_root.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end171

if.end23.i:                                       ; preds = %cgroup_can_be_thread_root.exit.i.if.end23.i_crit_edge, %if.end3.i.i.if.end23.i_crit_edge, %land.lhs.true.i39.i.if.end23.i_crit_edge, %if.end2.i.i.if.end23.i_crit_edge
  %nr_populated_csets.i.i = getelementptr inbounds %struct.cgroup, ptr %call44, i32 0, i32 7
  %79 = ptrtoint ptr %nr_populated_csets.i.i to i32
  call void @__asan_load4_noabort(i32 %79)
  %80 = load i32, ptr %nr_populated_csets.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %80)
  %tobool.i.not.i = icmp eq i32 %80, 0
  br i1 %tobool.i.not.i, label %if.end23.i.if.end171_crit_edge, label %if.end23.i.out_unlock_crit_edge

if.end23.i.out_unlock_crit_edge:                  ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

if.end23.i.if.end171_crit_edge:                   ; preds = %if.end23.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end171

if.end171:                                        ; preds = %if.end23.i.if.end171_crit_edge, %cgroup_can_be_thread_root.exit.i.if.end171_crit_edge, %if.end.i45.i.if.end171_crit_edge, %if.end4.i.if.end171_crit_edge, %if.end167.if.end171_crit_edge
  call fastcc void @cgroup_save_control(ptr noundef nonnull %call44)
  %81 = ptrtoint ptr %subtree_control to i32
  call void @__asan_load2_noabort(i32 %81)
  %82 = load i16, ptr %subtree_control, align 4
  %or175252 = or i16 %82, %enable.4
  %neg178 = xor i16 %disable.4, -1
  %and181 = and i16 %or175252, %neg178
  store i16 %and181, ptr %subtree_control, align 4
  %call183 = call fastcc i32 @cgroup_apply_control(ptr noundef nonnull %call44)
  call fastcc void @cgroup_finalize_control(ptr noundef nonnull %call44, i32 noundef %call183)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call183)
  %tobool184.not = icmp eq i32 %call183, 0
  br i1 %tobool184.not, label %if.end186, label %if.end171.out_unlock_crit_edge

if.end171.out_unlock_crit_edge:                   ; preds = %if.end171
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

if.end186:                                        ; preds = %if.end171
  call void @__sanitizer_cov_trace_pc() #28
  %kn187 = getelementptr inbounds %struct.cgroup, ptr %call44, i32 0, i32 11
  %83 = ptrtoint ptr %kn187 to i32
  call void @__asan_load4_noabort(i32 %83)
  %84 = load ptr, ptr %kn187, align 8
  call void @kernfs_activate(ptr noundef %84) #26
  br label %out_unlock

out_unlock:                                       ; preds = %if.end186, %if.end171.out_unlock_crit_edge, %if.end23.i.out_unlock_crit_edge, %land.lhs.true.i39.i.out_unlock_crit_edge, %if.end.i.i.out_unlock_crit_edge, %if.then9.i.out_unlock_crit_edge, %if.end5.i.i.out_unlock_crit_edge, %land.lhs.true.i.i.i.out_unlock_crit_edge, %if.end.i.i.i.out_unlock_crit_edge, %if.end.i.out_unlock_crit_edge, %for.end163.out_unlock_crit_edge, %if.else143.out_unlock_crit_edge, %cgroup_control.exit.out_unlock_crit_edge
  %ret.0 = phi i32 [ %call183, %if.end171.out_unlock_crit_edge ], [ 0, %if.end186 ], [ 0, %for.end163.out_unlock_crit_edge ], [ -95, %if.then9.i.out_unlock_crit_edge ], [ -95, %land.lhs.true.i39.i.out_unlock_crit_edge ], [ -95, %if.end.i.i.out_unlock_crit_edge ], [ -95, %if.end.i.out_unlock_crit_edge ], [ -16, %if.end23.i.out_unlock_crit_edge ], [ -95, %land.lhs.true.i.i.i.out_unlock_crit_edge ], [ -95, %if.end.i.i.i.out_unlock_crit_edge ], [ -95, %if.end5.i.i.out_unlock_crit_edge ], [ -16, %if.else143.out_unlock_crit_edge ], [ -2, %cgroup_control.exit.out_unlock_crit_edge ]
  %85 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %85)
  %86 = load ptr, ptr %of, align 4
  %flags.i.i = getelementptr inbounds %struct.kernfs_node, ptr %86, i32 0, i32 11
  %87 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load2_noabort(i32 %87)
  %88 = load i16, ptr %flags.i.i, align 8
  %89 = and i16 %88, 15
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %89)
  %cmp.i261 = icmp eq i16 %89, 1
  br i1 %cmp.i261, label %out_unlock.if.end.i263_crit_edge, label %if.else.i

out_unlock.if.end.i263_crit_edge:                 ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i263

if.else.i:                                        ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #28
  %parent.i = getelementptr inbounds %struct.kernfs_node, ptr %86, i32 0, i32 3
  %90 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %90)
  %91 = load ptr, ptr %parent.i, align 4
  br label %if.end.i263

if.end.i263:                                      ; preds = %if.else.i, %out_unlock.if.end.i263_crit_edge
  %kn.pn.i = phi ptr [ %91, %if.else.i ], [ %86, %out_unlock.if.end.i263_crit_edge ]
  %cgrp.0.in.i = getelementptr inbounds %struct.kernfs_node, ptr %kn.pn.i, i32 0, i32 9
  %92 = ptrtoint ptr %cgrp.0.in.i to i32
  call void @__asan_load4_noabort(i32 %92)
  %cgrp.0.i = load ptr, ptr %cgrp.0.in.i, align 8
  call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  call void @kernfs_unbreak_active_protection(ptr noundef %86) #26
  %flags.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 7
  %93 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %93)
  %94 = load i32, ptr %flags.i.i.i, align 4
  %and.i.i.i = and i32 %94, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i262 = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i262, label %if.then.i.i.i, label %if.end.i263.cgroup_kn_unlock.exit_crit_edge

if.end.i263.cgroup_kn_unlock.exit_crit_edge:      ; preds = %if.end.i263
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_kn_unlock.exit

if.then.i.i.i:                                    ; preds = %if.end.i263
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 2
  call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i.i) #26
  br label %cgroup_kn_unlock.exit

cgroup_kn_unlock.exit:                            ; preds = %if.then.i.i.i, %if.end.i263.cgroup_kn_unlock.exit_crit_edge
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %ret.0)
  %tobool189.not = icmp eq i32 %ret.0, 0
  %spec.select = select i1 %tobool189.not, i32 %nbytes, i32 %ret.0
  br label %cleanup190

cleanup190:                                       ; preds = %cgroup_kn_unlock.exit, %while.end.cleanup190_crit_edge, %cleanup.cleanup190_crit_edge, %cleanup.thread
  %retval.2 = phi i32 [ %spec.select, %cgroup_kn_unlock.exit ], [ -19, %while.end.cleanup190_crit_edge ], [ -22, %cleanup.thread ], [ -22, %cleanup.cleanup190_crit_edge ]
  ret i32 %retval.2
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_events_show(ptr noundef %seq, ptr nocapture noundef readnone %v) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %private.i = getelementptr inbounds %struct.seq_file, ptr %seq, i32 0, i32 11
  %0 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %parent.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i.i, align 4
  %priv.i.i = getelementptr inbounds %struct.kernfs_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %priv.i.i, align 8
  %priv.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %8 = ptrtoint ptr %priv.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %priv.i.i.i, align 8
  %ss.i.i = getelementptr inbounds %struct.cftype, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %ss.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ss.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %entry.seq_css.exit_crit_edge, label %if.then.i.i

entry.seq_css.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %seq_css.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %id.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %11, i32 0, i32 19
  %12 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %id.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.cgroup, ptr %7, i32 0, i32 18, i32 %13
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %arrayidx.i.i, align 4
  br label %seq_css.exit

seq_css.exit:                                     ; preds = %if.then.i.i, %entry.seq_css.exit_crit_edge
  %retval.0.i.i = phi ptr [ %15, %if.then.i.i ], [ %7, %entry.seq_css.exit_crit_edge ]
  %16 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %retval.0.i.i, align 8
  %nr_populated_csets.i = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 7
  %18 = ptrtoint ptr %nr_populated_csets.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %nr_populated_csets.i, align 8
  %nr_populated_domain_children.i = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 8
  %20 = ptrtoint ptr %nr_populated_domain_children.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %nr_populated_domain_children.i, align 4
  %add.i = add i32 %21, %19
  %nr_populated_threaded_children.i = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 9
  %22 = ptrtoint ptr %nr_populated_threaded_children.i to i32
  call void @__asan_load4_noabort(i32 %22)
  %23 = load i32, ptr %nr_populated_threaded_children.i, align 8
  %add1.i = sub i32 0, %23
  call void @__sanitizer_cov_trace_cmp4(i32 %add.i, i32 %add1.i)
  %tobool.i = icmp ne i32 %add.i, %add1.i
  %conv = zext i1 %tobool.i to i32
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.112, i32 noundef %conv) #26
  %flags = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 1
  %24 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load volatile i32, ptr %flags, align 4
  %shr.i = lshr i32 %25, 3
  %and1.i = and i32 %shr.i, 1
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.113, i32 noundef %and1.i) #26
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_max_descendants_show(ptr noundef %seq, ptr nocapture noundef readnone %v) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %private.i = getelementptr inbounds %struct.seq_file, ptr %seq, i32 0, i32 11
  %0 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %parent.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i.i, align 4
  %priv.i.i = getelementptr inbounds %struct.kernfs_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %priv.i.i, align 8
  %priv.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %8 = ptrtoint ptr %priv.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %priv.i.i.i, align 8
  %ss.i.i = getelementptr inbounds %struct.cftype, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %ss.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ss.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %entry.seq_css.exit_crit_edge, label %if.then.i.i

entry.seq_css.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %seq_css.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %id.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %11, i32 0, i32 19
  %12 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %id.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.cgroup, ptr %7, i32 0, i32 18, i32 %13
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %arrayidx.i.i, align 4
  br label %seq_css.exit

seq_css.exit:                                     ; preds = %if.then.i.i, %entry.seq_css.exit_crit_edge
  %retval.0.i.i = phi ptr [ %15, %if.then.i.i ], [ %7, %entry.seq_css.exit_crit_edge ]
  %16 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %retval.0.i.i, align 8
  %max_descendants = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 6
  %18 = ptrtoint ptr %max_descendants to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %max_descendants, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 2147483647, i32 %19)
  %cmp = icmp eq i32 %19, 2147483647
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %seq_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.114) #26
  br label %if.end

if.else:                                          ; preds = %seq_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.110, i32 noundef %19) #26
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_max_descendants_write(ptr nocapture noundef readonly %of, ptr noundef %buf, i32 noundef %nbytes, i64 noundef %off) #0 align 64 {
entry:
  %descendants = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %descendants) #26
  %0 = ptrtoint ptr %descendants to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %descendants, align 4, !annotation !638
  %call.i = tail call ptr @strim(ptr noundef %buf) #26
  %call1 = tail call i32 @strcmp(ptr noundef %call.i, ptr noundef nonnull dereferenceable(4) @.str.115) #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end5.thread, label %if.else

if.end5.thread:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %1 = ptrtoint ptr %descendants to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 2147483647, ptr %descendants, align 4
  br label %if.end7

if.else:                                          ; preds = %entry
  %call2 = call i32 @kstrtoint(ptr noundef %call.i, i32 noundef 0, ptr noundef nonnull %descendants) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.end5, label %if.else.cleanup_crit_edge

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end5:                                          ; preds = %if.else
  %2 = ptrtoint ptr %descendants to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pr = load i32, ptr %descendants, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %cmp = icmp slt i32 %.pr, 0
  br i1 %cmp, label %if.end5.cleanup_crit_edge, label %if.end5.if.end7_crit_edge

if.end5.if.end7_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end7

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end7:                                          ; preds = %if.end5.if.end7_crit_edge, %if.end5.thread
  %3 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %of, align 4
  %call8 = call ptr @cgroup_kn_lock_live(ptr noundef %4, i1 noundef zeroext false)
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup_crit_edge, label %if.end11

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end11:                                         ; preds = %if.end7
  %5 = ptrtoint ptr %descendants to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %descendants, align 4
  %max_descendants = getelementptr inbounds %struct.cgroup, ptr %call8, i32 0, i32 6
  %7 = ptrtoint ptr %max_descendants to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %max_descendants, align 4
  %8 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %of, align 4
  %flags.i.i = getelementptr inbounds %struct.kernfs_node, ptr %9, i32 0, i32 11
  %10 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %flags.i.i, align 8
  %12 = and i16 %11, 15
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %12)
  %cmp.i = icmp eq i16 %12, 1
  br i1 %cmp.i, label %if.end11.if.end.i_crit_edge, label %if.else.i

if.end11.if.end.i_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

if.else.i:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #28
  %parent.i = getelementptr inbounds %struct.kernfs_node, ptr %9, i32 0, i32 3
  %13 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %parent.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.end11.if.end.i_crit_edge
  %kn.pn.i = phi ptr [ %14, %if.else.i ], [ %9, %if.end11.if.end.i_crit_edge ]
  %cgrp.0.in.i = getelementptr inbounds %struct.kernfs_node, ptr %kn.pn.i, i32 0, i32 9
  %15 = ptrtoint ptr %cgrp.0.in.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %cgrp.0.i = load ptr, ptr %cgrp.0.in.i, align 8
  call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  call void @kernfs_unbreak_active_protection(ptr noundef %9) #26
  %flags.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 7
  %16 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags.i.i.i, align 4
  %and.i.i.i = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then.i.i.i:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 2
  call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i.i) #26
  br label %cleanup

cleanup:                                          ; preds = %if.then.i.i.i, %if.end.i.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %if.end5.cleanup_crit_edge, %if.else.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.else.cleanup_crit_edge ], [ -34, %if.end5.cleanup_crit_edge ], [ -2, %if.end7.cleanup_crit_edge ], [ %nbytes, %if.end.i.cleanup_crit_edge ], [ %nbytes, %if.then.i.i.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %descendants) #26
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_max_depth_show(ptr noundef %seq, ptr nocapture noundef readnone %v) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %private.i = getelementptr inbounds %struct.seq_file, ptr %seq, i32 0, i32 11
  %0 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %parent.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i.i, align 4
  %priv.i.i = getelementptr inbounds %struct.kernfs_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %priv.i.i, align 8
  %priv.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %8 = ptrtoint ptr %priv.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %priv.i.i.i, align 8
  %ss.i.i = getelementptr inbounds %struct.cftype, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %ss.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ss.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %entry.seq_css.exit_crit_edge, label %if.then.i.i

entry.seq_css.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %seq_css.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %id.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %11, i32 0, i32 19
  %12 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %id.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.cgroup, ptr %7, i32 0, i32 18, i32 %13
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %arrayidx.i.i, align 4
  br label %seq_css.exit

seq_css.exit:                                     ; preds = %if.then.i.i, %entry.seq_css.exit_crit_edge
  %retval.0.i.i = phi ptr [ %15, %if.then.i.i ], [ %7, %entry.seq_css.exit_crit_edge ]
  %16 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %retval.0.i.i, align 8
  %max_depth = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 3
  %18 = ptrtoint ptr %max_depth to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load volatile i32, ptr %max_depth, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 2147483647, i32 %19)
  %cmp = icmp eq i32 %19, 2147483647
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %seq_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @seq_puts(ptr noundef %seq, ptr noundef nonnull @.str.114) #26
  br label %if.end

if.else:                                          ; preds = %seq_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.110, i32 noundef %19) #26
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_max_depth_write(ptr nocapture noundef readonly %of, ptr noundef %buf, i32 noundef %nbytes, i64 noundef %off) #0 align 64 {
entry:
  %depth = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %depth) #26
  %0 = ptrtoint ptr %depth to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %depth, align 4, !annotation !638
  %call.i = tail call ptr @strim(ptr noundef %buf) #26
  %call1 = tail call i32 @strcmp(ptr noundef %call.i, ptr noundef nonnull dereferenceable(4) @.str.115) #30
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end5.thread, label %if.else

if.end5.thread:                                   ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %1 = ptrtoint ptr %depth to i32
  call void @__asan_store4_noabort(i32 %1)
  store i32 2147483647, ptr %depth, align 4
  br label %if.end7

if.else:                                          ; preds = %entry
  %call2 = call i32 @kstrtoint(ptr noundef %call.i, i32 noundef 0, ptr noundef nonnull %depth) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call2)
  %tobool3.not = icmp eq i32 %call2, 0
  br i1 %tobool3.not, label %if.end5, label %if.else.cleanup_crit_edge

if.else.cleanup_crit_edge:                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end5:                                          ; preds = %if.else
  %2 = ptrtoint ptr %depth to i32
  call void @__asan_load4_noabort(i32 %2)
  %.pr = load i32, ptr %depth, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %.pr)
  %cmp = icmp slt i32 %.pr, 0
  br i1 %cmp, label %if.end5.cleanup_crit_edge, label %if.end5.if.end7_crit_edge

if.end5.if.end7_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end7

if.end5.cleanup_crit_edge:                        ; preds = %if.end5
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end7:                                          ; preds = %if.end5.if.end7_crit_edge, %if.end5.thread
  %3 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %of, align 4
  %call8 = call ptr @cgroup_kn_lock_live(ptr noundef %4, i1 noundef zeroext false)
  %tobool9.not = icmp eq ptr %call8, null
  br i1 %tobool9.not, label %if.end7.cleanup_crit_edge, label %if.end11

if.end7.cleanup_crit_edge:                        ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end11:                                         ; preds = %if.end7
  %5 = ptrtoint ptr %depth to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %depth, align 4
  %max_depth = getelementptr inbounds %struct.cgroup, ptr %call8, i32 0, i32 3
  %7 = ptrtoint ptr %max_depth to i32
  call void @__asan_store4_noabort(i32 %7)
  store i32 %6, ptr %max_depth, align 8
  %8 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %of, align 4
  %flags.i.i = getelementptr inbounds %struct.kernfs_node, ptr %9, i32 0, i32 11
  %10 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %flags.i.i, align 8
  %12 = and i16 %11, 15
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %12)
  %cmp.i = icmp eq i16 %12, 1
  br i1 %cmp.i, label %if.end11.if.end.i_crit_edge, label %if.else.i

if.end11.if.end.i_crit_edge:                      ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

if.else.i:                                        ; preds = %if.end11
  call void @__sanitizer_cov_trace_pc() #28
  %parent.i = getelementptr inbounds %struct.kernfs_node, ptr %9, i32 0, i32 3
  %13 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %parent.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.end11.if.end.i_crit_edge
  %kn.pn.i = phi ptr [ %14, %if.else.i ], [ %9, %if.end11.if.end.i_crit_edge ]
  %cgrp.0.in.i = getelementptr inbounds %struct.kernfs_node, ptr %kn.pn.i, i32 0, i32 9
  %15 = ptrtoint ptr %cgrp.0.in.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %cgrp.0.i = load ptr, ptr %cgrp.0.in.i, align 8
  call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  call void @kernfs_unbreak_active_protection(ptr noundef %9) #26
  %flags.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 7
  %16 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags.i.i.i, align 4
  %and.i.i.i = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then.i.i.i:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 2
  call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i.i) #26
  br label %cleanup

cleanup:                                          ; preds = %if.then.i.i.i, %if.end.i.cleanup_crit_edge, %if.end7.cleanup_crit_edge, %if.end5.cleanup_crit_edge, %if.else.cleanup_crit_edge
  %retval.0 = phi i32 [ %call2, %if.else.cleanup_crit_edge ], [ -34, %if.end5.cleanup_crit_edge ], [ -2, %if.end7.cleanup_crit_edge ], [ %nbytes, %if.end.i.cleanup_crit_edge ], [ %nbytes, %if.then.i.i.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %depth) #26
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_stat_show(ptr noundef %seq, ptr nocapture noundef readnone %v) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %private.i = getelementptr inbounds %struct.seq_file, ptr %seq, i32 0, i32 11
  %0 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %parent.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i.i, align 4
  %priv.i.i = getelementptr inbounds %struct.kernfs_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %priv.i.i, align 8
  %priv.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %8 = ptrtoint ptr %priv.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %priv.i.i.i, align 8
  %ss.i.i = getelementptr inbounds %struct.cftype, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %ss.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ss.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %entry.seq_css.exit_crit_edge, label %if.then.i.i

entry.seq_css.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %seq_css.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %id.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %11, i32 0, i32 19
  %12 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %id.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.cgroup, ptr %7, i32 0, i32 18, i32 %13
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %arrayidx.i.i, align 4
  br label %seq_css.exit

seq_css.exit:                                     ; preds = %if.then.i.i, %entry.seq_css.exit_crit_edge
  %retval.0.i.i = phi ptr [ %15, %if.then.i.i ], [ %7, %entry.seq_css.exit_crit_edge ]
  %16 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %retval.0.i.i, align 8
  %nr_descendants = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 4
  %18 = ptrtoint ptr %nr_descendants to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %nr_descendants, align 4
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.116, i32 noundef %19) #26
  %nr_dying_descendants = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 5
  %20 = ptrtoint ptr %nr_dying_descendants to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load i32, ptr %nr_dying_descendants, align 8
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.117, i32 noundef %21) #26
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_freeze_show(ptr noundef %seq, ptr nocapture noundef readnone %v) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %private.i = getelementptr inbounds %struct.seq_file, ptr %seq, i32 0, i32 11
  %0 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %parent.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i.i, align 4
  %priv.i.i = getelementptr inbounds %struct.kernfs_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %priv.i.i, align 8
  %priv.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %8 = ptrtoint ptr %priv.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %priv.i.i.i, align 8
  %ss.i.i = getelementptr inbounds %struct.cftype, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %ss.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ss.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %entry.seq_css.exit_crit_edge, label %if.then.i.i

entry.seq_css.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %seq_css.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %id.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %11, i32 0, i32 19
  %12 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %id.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.cgroup, ptr %7, i32 0, i32 18, i32 %13
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %arrayidx.i.i, align 4
  br label %seq_css.exit

seq_css.exit:                                     ; preds = %if.then.i.i, %entry.seq_css.exit_crit_edge
  %retval.0.i.i = phi ptr [ %15, %if.then.i.i ], [ %7, %entry.seq_css.exit_crit_edge ]
  %16 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %retval.0.i.i, align 8
  %freezer = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 36
  %18 = ptrtoint ptr %freezer to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %freezer, align 4, !range !654
  %20 = zext i8 %19 to i32
  tail call void (ptr, ptr, ...) @seq_printf(ptr noundef %seq, ptr noundef nonnull @.str.110, i32 noundef %20) #26
  ret i32 0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_freeze_write(ptr nocapture noundef readonly %of, ptr noundef %buf, i32 noundef %nbytes, i64 noundef %off) #0 align 64 {
entry:
  %freeze = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %freeze) #26
  %0 = ptrtoint ptr %freeze to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %freeze, align 4, !annotation !638
  %call.i = tail call ptr @strim(ptr noundef %buf) #26
  %call1 = call i32 @kstrtoint(ptr noundef %call.i, i32 noundef 0, ptr noundef nonnull %freeze) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = ptrtoint ptr %freeze to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %freeze, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %2)
  %3 = icmp ugt i32 %2, 1
  br i1 %3, label %if.end.cleanup_crit_edge, label %if.end4

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %4 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %of, align 4
  %call5 = call ptr @cgroup_kn_lock_live(ptr noundef %5, i1 noundef zeroext false)
  %tobool6.not = icmp eq ptr %call5, null
  br i1 %tobool6.not, label %if.end4.cleanup_crit_edge, label %if.end8

if.end4.cleanup_crit_edge:                        ; preds = %if.end4
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end8:                                          ; preds = %if.end4
  %6 = ptrtoint ptr %freeze to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load i32, ptr %freeze, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool9 = icmp ne i32 %7, 0
  call void @cgroup_freeze(ptr noundef nonnull %call5, i1 noundef zeroext %tobool9) #26
  %8 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %of, align 4
  %flags.i.i = getelementptr inbounds %struct.kernfs_node, ptr %9, i32 0, i32 11
  %10 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load2_noabort(i32 %10)
  %11 = load i16, ptr %flags.i.i, align 8
  %12 = and i16 %11, 15
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %12)
  %cmp.i = icmp eq i16 %12, 1
  br i1 %cmp.i, label %if.end8.if.end.i_crit_edge, label %if.else.i

if.end8.if.end.i_crit_edge:                       ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

if.else.i:                                        ; preds = %if.end8
  call void @__sanitizer_cov_trace_pc() #28
  %parent.i = getelementptr inbounds %struct.kernfs_node, ptr %9, i32 0, i32 3
  %13 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load ptr, ptr %parent.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %if.end8.if.end.i_crit_edge
  %kn.pn.i = phi ptr [ %14, %if.else.i ], [ %9, %if.end8.if.end.i_crit_edge ]
  %cgrp.0.in.i = getelementptr inbounds %struct.kernfs_node, ptr %kn.pn.i, i32 0, i32 9
  %15 = ptrtoint ptr %cgrp.0.in.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %cgrp.0.i = load ptr, ptr %cgrp.0.in.i, align 8
  call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  call void @kernfs_unbreak_active_protection(ptr noundef %9) #26
  %flags.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 7
  %16 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load i32, ptr %flags.i.i.i, align 4
  %and.i.i.i = and i32 %17, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then.i.i.i:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 2
  call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i.i) #26
  br label %cleanup

cleanup:                                          ; preds = %if.then.i.i.i, %if.end.i.cleanup_crit_edge, %if.end4.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %entry.cleanup_crit_edge ], [ -34, %if.end.cleanup_crit_edge ], [ -2, %if.end4.cleanup_crit_edge ], [ %nbytes, %if.end.i.cleanup_crit_edge ], [ %nbytes, %if.then.i.i.i ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %freeze) #26
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_kill_write(ptr nocapture noundef readonly %of, ptr noundef %buf, i32 noundef %nbytes, i64 noundef %off) #0 align 64 {
entry:
  %it.i.i = alloca %struct.css_task_iter, align 4
  %kill = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %kill) #26
  %0 = ptrtoint ptr %kill to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 -1, ptr %kill, align 4, !annotation !638
  %call.i = tail call ptr @strim(ptr noundef %buf) #26
  %call1 = call i32 @kstrtoint(ptr noundef %call.i, i32 noundef 0, ptr noundef nonnull %kill) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %entry.cleanup_crit_edge

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  %1 = ptrtoint ptr %kill to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load i32, ptr %kill, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %2)
  %cmp.not = icmp eq i32 %2, 1
  br i1 %cmp.not, label %if.end3, label %if.end.cleanup_crit_edge

if.end.cleanup_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end3:                                          ; preds = %if.end
  %3 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %of, align 4
  %call4 = call ptr @cgroup_kn_lock_live(ptr noundef %4, i1 noundef zeroext false)
  %tobool5.not = icmp eq ptr %call4, null
  br i1 %tobool5.not, label %if.end3.cleanup_crit_edge, label %if.end7

if.end3.cleanup_crit_edge:                        ; preds = %if.end3
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end7:                                          ; preds = %if.end3
  %dom_cgrp.i = getelementptr inbounds %struct.cgroup, ptr %call4, i32 0, i32 22
  %5 = ptrtoint ptr %dom_cgrp.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %dom_cgrp.i, align 8
  %cmp.i.not = icmp eq ptr %6, %call4
  br i1 %cmp.i.not, label %if.else, label %if.end7.if.end10_crit_edge

if.end7.if.end10_crit_edge:                       ; preds = %if.end7
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end10

if.else:                                          ; preds = %if.end7
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %7 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool.not.i = icmp eq i32 %7, 0
  br i1 %tobool.not.i, label %if.else.if.end.i_crit_edge, label %land.rhs.i

if.else.if.end.i_crit_edge:                       ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

land.rhs.i:                                       ; preds = %if.else
  %call.i.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !637

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 3783, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %if.else.if.end.i_crit_edge
  %call.i80.i = call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i80.i)
  %tobool.not.i.i = icmp eq i32 %call.i80.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %if.end.i.do.body27.lr.ph.i_crit_edge

if.end.i.do.body27.lr.ph.i_crit_edge:             ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body27.lr.ph.i

land.lhs.true.i.i:                                ; preds = %if.end.i
  %call.i.i.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %tobool2.not.i.i = icmp eq i32 %call.i.i.i, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true3.i.i, label %land.lhs.true.i.i.do.body27.lr.ph.i_crit_edge

land.lhs.true.i.i.do.body27.lr.ph.i_crit_edge:    ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body27.lr.ph.i

land.lhs.true3.i.i:                               ; preds = %land.lhs.true.i.i
  %call4.i.i = call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i.i)
  %tobool5.not.i.i = icmp eq i32 %call4.i.i, 0
  br i1 %tobool5.not.i.i, label %land.lhs.true3.i.i.do.body27.lr.ph.i_crit_edge, label %land.lhs.true6.i.i

land.lhs.true3.i.i.do.body27.lr.ph.i_crit_edge:   ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body27.lr.ph.i

land.lhs.true6.i.i:                               ; preds = %land.lhs.true3.i.i
  %.b29.i.i = load i1, ptr @css_next_descendant_pre.__warned, align 1
  br i1 %.b29.i.i, label %land.lhs.true6.i.i.do.body27.lr.ph.i_crit_edge, label %if.then.i.i

land.lhs.true6.i.i.do.body27.lr.ph.i_crit_edge:   ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body27.lr.ph.i

if.then.i.i:                                      ; preds = %land.lhs.true6.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_next_descendant_pre.__warned, align 1
  call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 4385, ptr noundef nonnull @.str.14) #26
  br label %do.body27.lr.ph.i

do.body27.lr.ph.i:                                ; preds = %if.then.i.i, %land.lhs.true6.i.i.do.body27.lr.ph.i_crit_edge, %land.lhs.true3.i.i.do.body27.lr.ph.i_crit_edge, %land.lhs.true.i.i.do.body27.lr.ph.i_crit_edge, %if.end.i.do.body27.lr.ph.i_crit_edge
  %8 = getelementptr inbounds i8, ptr %it.i.i, i32 16
  %flags2.i.i.i = getelementptr inbounds %struct.css_task_iter, ptr %it.i.i, i32 0, i32 1
  %9 = getelementptr inbounds %struct.css_task_iter, ptr %it.i.i, i32 0, i32 2
  %cset_head.i.i.i = getelementptr inbounds %struct.css_task_iter, ptr %it.i.i, i32 0, i32 3
  br label %do.body27.i

do.body27.i:                                      ; preds = %for.inc.i.do.body27.i_crit_edge, %do.body27.lr.ph.i
  %css.088.i = phi ptr [ %call4, %do.body27.lr.ph.i ], [ %call73.i, %for.inc.i.do.body27.i_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %10 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %10)
  %tobool29.not.i = icmp eq i32 %10, 0
  br i1 %tobool29.not.i, label %do.body27.i.if.end57.i_crit_edge, label %land.rhs30.i

do.body27.i.if.end57.i_crit_edge:                 ; preds = %do.body27.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end57.i

land.rhs30.i:                                     ; preds = %do.body27.i
  %call.i81.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i81.i)
  %cmp32.not.i = icmp eq i32 %call.i81.i, 0
  br i1 %cmp32.not.i, label %do.end51.i, label %land.rhs30.i.if.end57.i_crit_edge, !prof !637

land.rhs30.i.if.end57.i_crit_edge:                ; preds = %land.rhs30.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end57.i

do.end51.i:                                       ; preds = %land.rhs30.i
  call void @__sanitizer_cov_trace_pc() #28
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 3785, i32 noundef 9, ptr noundef null) #26
  br label %if.end57.i

if.end57.i:                                       ; preds = %do.end51.i, %land.rhs30.i.if.end57.i_crit_edge, %do.body27.i.if.end57.i_crit_edge
  %11 = ptrtoint ptr %css.088.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %css.088.i, align 8
  %flags.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %12, i32 0, i32 7
  %13 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %14 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %14, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i82.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i82.i, label %if.end57.i.for.inc.i_crit_edge, label %if.else.i

if.end57.i.for.inc.i_crit_edge:                   ; preds = %if.end57.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.i

if.else.i:                                        ; preds = %if.end57.i
  call void @llvm.lifetime.start.p0(i64 52, ptr nonnull %it.i.i) #26
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %15 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %15)
  %tobool.not.i83.i = icmp eq i32 %15, 0
  br i1 %tobool.not.i83.i, label %if.else.i.if.end.i.i_crit_edge, label %land.rhs.i.i

if.else.i.if.end.i.i_crit_edge:                   ; preds = %if.else.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i.i

land.rhs.i.i:                                     ; preds = %if.else.i
  %call.i.i84.i = call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i84.i)
  %cmp.not.i.i = icmp eq i32 %call.i.i84.i, 0
  br i1 %cmp.not.i.i, label %do.end.i.i, label %land.rhs.i.i.if.end.i.i_crit_edge, !prof !637

land.rhs.i.i.if.end.i.i_crit_edge:                ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #28
  call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 3753, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %do.end.i.i, %land.rhs.i.i.if.end.i.i_crit_edge, %if.else.i.if.end.i.i_crit_edge
  call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %flags.i85.i = getelementptr inbounds %struct.cgroup, ptr %12, i32 0, i32 1
  call void @_set_bit(i32 noundef 4, ptr noundef %flags.i85.i) #26
  call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  %16 = call ptr @memset(ptr %8, i32 0, i32 36)
  call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %ss.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %12, i32 0, i32 1
  %17 = ptrtoint ptr %ss.i.i.i to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load ptr, ptr %ss.i.i.i, align 4
  %19 = ptrtoint ptr %it.i.i to i32
  call void @__asan_store4_noabort(i32 %19)
  store ptr %18, ptr %it.i.i, align 4
  %20 = ptrtoint ptr %flags2.i.i.i to i32
  call void @__asan_store4_noabort(i32 %20)
  store i32 3, ptr %flags2.i.i.i, align 4
  %tobool.not.i.i.i = icmp eq ptr %18, null
  %21 = ptrtoint ptr %12 to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %12, align 8
  br i1 %tobool.not.i.i.i, label %if.else.i.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %id.i.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %18, i32 0, i32 19
  %23 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load i32, ptr %id.i.i.i, align 4
  %arrayidx.i.i.i = getelementptr %struct.cgroup, ptr %22, i32 0, i32 21, i32 %24
  br label %css_task_iter_start.exit.i.i

if.else.i.i.i:                                    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %cset_links.i.i.i = getelementptr inbounds %struct.cgroup, ptr %22, i32 0, i32 20
  br label %css_task_iter_start.exit.i.i

css_task_iter_start.exit.i.i:                     ; preds = %if.else.i.i.i, %if.then.i.i.i
  %arrayidx.sink.i.i.i = phi ptr [ %cset_links.i.i.i, %if.else.i.i.i ], [ %arrayidx.i.i.i, %if.then.i.i.i ]
  %25 = ptrtoint ptr %9 to i32
  call void @__asan_store4_noabort(i32 %25)
  store ptr %arrayidx.sink.i.i.i, ptr %9, align 4
  %26 = ptrtoint ptr %cset_head.i.i.i to i32
  call void @__asan_store4_noabort(i32 %26)
  store ptr %arrayidx.sink.i.i.i, ptr %cset_head.i.i.i, align 4
  call fastcc void @css_task_iter_advance(ptr noundef nonnull %it.i.i) #26
  call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  %call2441.i.i = call ptr @css_task_iter_next(ptr noundef nonnull %it.i.i) #26
  %tobool25.not42.i.i = icmp eq ptr %call2441.i.i, null
  br i1 %tobool25.not42.i.i, label %css_task_iter_start.exit.i.i.__cgroup_kill.exit.i_crit_edge, label %css_task_iter_start.exit.i.i.while.body.i.i_crit_edge

css_task_iter_start.exit.i.i.while.body.i.i_crit_edge: ; preds = %css_task_iter_start.exit.i.i
  br label %while.body.i.i

css_task_iter_start.exit.i.i.__cgroup_kill.exit.i_crit_edge: ; preds = %css_task_iter_start.exit.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %__cgroup_kill.exit.i

while.body.i.i:                                   ; preds = %while.cond.backedge.i.i.while.body.i.i_crit_edge, %css_task_iter_start.exit.i.i.while.body.i.i_crit_edge
  %call2443.i.i = phi ptr [ %call24.i.i, %while.cond.backedge.i.i.while.body.i.i_crit_edge ], [ %call2441.i.i, %css_task_iter_start.exit.i.i.while.body.i.i_crit_edge ]
  %flags26.i.i = getelementptr inbounds %struct.task_struct, ptr %call2443.i.i, i32 0, i32 3
  %27 = ptrtoint ptr %flags26.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %flags26.i.i, align 4
  %and.i86.i = and i32 %28, 2097152
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i86.i)
  %tobool27.not.i.i = icmp eq i32 %and.i86.i, 0
  br i1 %tobool27.not.i.i, label %if.end29.i.i, label %while.body.i.i.while.cond.backedge.i.i_crit_edge

while.body.i.i.while.cond.backedge.i.i_crit_edge: ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.cond.backedge.i.i

if.end29.i.i:                                     ; preds = %while.body.i.i
  %signal.i.i.i = getelementptr inbounds %struct.task_struct, ptr %call2443.i.i, i32 0, i32 116, i32 1
  %29 = ptrtoint ptr %signal.i.i.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %signal.i.i.i, align 4
  %31 = and i32 %30, 256
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %31)
  %tobool31.not.i.i = icmp eq i32 %31, 0
  br i1 %tobool31.not.i.i, label %if.end33.i.i, label %if.end29.i.i.while.cond.backedge.i.i_crit_edge

if.end29.i.i.while.cond.backedge.i.i_crit_edge:   ; preds = %if.end29.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.cond.backedge.i.i

if.end33.i.i:                                     ; preds = %if.end29.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %call34.i.i = call i32 @send_sig(i32 noundef 9, ptr noundef nonnull %call2443.i.i, i32 noundef 0) #26
  br label %while.cond.backedge.i.i

while.cond.backedge.i.i:                          ; preds = %if.end33.i.i, %if.end29.i.i.while.cond.backedge.i.i_crit_edge, %while.body.i.i.while.cond.backedge.i.i_crit_edge
  %call24.i.i = call ptr @css_task_iter_next(ptr noundef nonnull %it.i.i) #26
  %tobool25.not.i.i = icmp eq ptr %call24.i.i, null
  br i1 %tobool25.not.i.i, label %while.cond.backedge.i.i.__cgroup_kill.exit.i_crit_edge, label %while.cond.backedge.i.i.while.body.i.i_crit_edge

while.cond.backedge.i.i.while.body.i.i_crit_edge: ; preds = %while.cond.backedge.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.body.i.i

while.cond.backedge.i.i.__cgroup_kill.exit.i_crit_edge: ; preds = %while.cond.backedge.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %__cgroup_kill.exit.i

__cgroup_kill.exit.i:                             ; preds = %while.cond.backedge.i.i.__cgroup_kill.exit.i_crit_edge, %css_task_iter_start.exit.i.i.__cgroup_kill.exit.i_crit_edge
  call void @css_task_iter_end(ptr noundef nonnull %it.i.i) #26
  call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  call void @_clear_bit(i32 noundef 4, ptr noundef %flags.i85.i) #26
  call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  call void @llvm.lifetime.end.p0(i64 52, ptr nonnull %it.i.i) #26
  br label %for.inc.i

for.inc.i:                                        ; preds = %__cgroup_kill.exit.i, %if.end57.i.for.inc.i_crit_edge
  %call73.i = call ptr @css_next_descendant_pre(ptr noundef nonnull %css.088.i, ptr noundef nonnull %call4) #26
  %tobool26.not.i = icmp eq ptr %call73.i, null
  br i1 %tobool26.not.i, label %for.inc.i.if.end10_crit_edge, label %for.inc.i.do.body27.i_crit_edge

for.inc.i.do.body27.i_crit_edge:                  ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body27.i

for.inc.i.if.end10_crit_edge:                     ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end10

if.end10:                                         ; preds = %for.inc.i.if.end10_crit_edge, %if.end7.if.end10_crit_edge
  %spec.select = phi i32 [ -95, %if.end7.if.end10_crit_edge ], [ %nbytes, %for.inc.i.if.end10_crit_edge ]
  %32 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %32)
  %33 = load ptr, ptr %of, align 4
  %flags.i.i20 = getelementptr inbounds %struct.kernfs_node, ptr %33, i32 0, i32 11
  %34 = ptrtoint ptr %flags.i.i20 to i32
  call void @__asan_load2_noabort(i32 %34)
  %35 = load i16, ptr %flags.i.i20, align 8
  %36 = and i16 %35, 15
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %36)
  %cmp.i21 = icmp eq i16 %36, 1
  br i1 %cmp.i21, label %if.end10.if.end.i24_crit_edge, label %if.else.i22

if.end10.if.end.i24_crit_edge:                    ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i24

if.else.i22:                                      ; preds = %if.end10
  call void @__sanitizer_cov_trace_pc() #28
  %parent.i = getelementptr inbounds %struct.kernfs_node, ptr %33, i32 0, i32 3
  %37 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %37)
  %38 = load ptr, ptr %parent.i, align 4
  br label %if.end.i24

if.end.i24:                                       ; preds = %if.else.i22, %if.end10.if.end.i24_crit_edge
  %kn.pn.i = phi ptr [ %38, %if.else.i22 ], [ %33, %if.end10.if.end.i24_crit_edge ]
  %cgrp.0.in.i = getelementptr inbounds %struct.kernfs_node, ptr %kn.pn.i, i32 0, i32 9
  %39 = ptrtoint ptr %cgrp.0.in.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %cgrp.0.i = load ptr, ptr %cgrp.0.in.i, align 8
  call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  call void @kernfs_unbreak_active_protection(ptr noundef %33) #26
  %flags.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 7
  %40 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load i32, ptr %flags.i.i.i, align 4
  %and.i.i.i = and i32 %41, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i23 = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i23, label %if.then.i.i.i25, label %if.end.i24.cleanup_crit_edge

if.end.i24.cleanup_crit_edge:                     ; preds = %if.end.i24
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then.i.i.i25:                                  ; preds = %if.end.i24
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 2
  call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i.i) #26
  br label %cleanup

cleanup:                                          ; preds = %if.then.i.i.i25, %if.end.i24.cleanup_crit_edge, %if.end3.cleanup_crit_edge, %if.end.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %call1, %entry.cleanup_crit_edge ], [ -34, %if.end.cleanup_crit_edge ], [ -2, %if.end3.cleanup_crit_edge ], [ %spec.select, %if.end.i24.cleanup_crit_edge ], [ %spec.select, %if.then.i.i.i25 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %kill) #26
  ret i32 %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cpu_stat_show(ptr noundef %seq, ptr nocapture noundef readnone %v) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %private.i = getelementptr inbounds %struct.seq_file, ptr %seq, i32 0, i32 11
  %0 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %parent.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i.i, align 4
  %priv.i.i = getelementptr inbounds %struct.kernfs_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %priv.i.i, align 8
  %priv.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %8 = ptrtoint ptr %priv.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %priv.i.i.i, align 8
  %ss.i.i = getelementptr inbounds %struct.cftype, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %ss.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ss.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %entry.seq_css.exit_crit_edge, label %if.then.i.i

entry.seq_css.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %seq_css.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %id.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %11, i32 0, i32 19
  %12 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %id.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.cgroup, ptr %7, i32 0, i32 18, i32 %13
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %arrayidx.i.i, align 4
  br label %seq_css.exit

seq_css.exit:                                     ; preds = %if.then.i.i, %entry.seq_css.exit_crit_edge
  %retval.0.i.i = phi ptr [ %15, %if.then.i.i ], [ %7, %entry.seq_css.exit_crit_edge ]
  %16 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %retval.0.i.i, align 8
  tail call void @cgroup_base_stat_cputime_show(ptr noundef %seq) #26
  %18 = load ptr, ptr getelementptr inbounds ([14 x ptr], ptr @cgroup_subsys, i32 0, i32 1), align 4
  %css_extra_stat_show.i = getelementptr inbounds %struct.cgroup_subsys, ptr %18, i32 0, i32 7
  %19 = ptrtoint ptr %css_extra_stat_show.i to i32
  call void @__asan_load4_noabort(i32 %19)
  %20 = load ptr, ptr %css_extra_stat_show.i, align 4
  %tobool.not.i = icmp eq ptr %20, null
  br i1 %tobool.not.i, label %seq_css.exit.cgroup_extra_stat_show.exit_crit_edge, label %if.end.i

seq_css.exit.cgroup_extra_stat_show.exit_crit_edge: ; preds = %seq_css.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_extra_stat_show.exit

if.end.i:                                         ; preds = %seq_css.exit
  %21 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i.i.i = and i32 %21, -16384
  %22 = inttoptr i32 %and.i.i.i.i.i.i.i to ptr
  %preempt_count.i.i.i.i.i.i = getelementptr inbounds %struct.thread_info, ptr %22, i32 0, i32 1
  %23 = ptrtoint ptr %preempt_count.i.i.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load volatile i32, ptr %preempt_count.i.i.i.i.i.i, align 4
  %add.i.i.i.i.i = add i32 %24, 1
  store volatile i32 %add.i.i.i.i.i, ptr %preempt_count.i.i.i.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !639
  tail call fastcc void @rcu_lock_acquire(ptr noundef nonnull @rcu_lock_map) #26
  %call.i.i.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i.i.i, label %if.end.i.rcu_read_lock.exit.i.i_crit_edge, label %land.lhs.true.i.i.i

if.end.i.rcu_read_lock.exit.i.i_crit_edge:        ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end.i
  %call1.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %call1.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge, label %land.lhs.true2.i.i.i

land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge: ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit.i.i

land.lhs.true2.i.i.i:                             ; preds = %land.lhs.true.i.i.i
  %.b4.i.i.i = load i1, ptr @rcu_read_lock.__warned, align 1
  br i1 %.b4.i.i.i, label %land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge, label %if.then.i.i.i

land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge: ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_read_lock.exit.i.i

if.then.i.i.i:                                    ; preds = %land.lhs.true2.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_lock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 696, ptr noundef nonnull @.str.55) #26
  br label %rcu_read_lock.exit.i.i

rcu_read_lock.exit.i.i:                           ; preds = %if.then.i.i.i, %land.lhs.true2.i.i.i.rcu_read_lock.exit.i.i_crit_edge, %land.lhs.true.i.i.i.rcu_read_lock.exit.i.i_crit_edge, %if.end.i.rcu_read_lock.exit.i.i_crit_edge
  %tobool.not.i4.i.i = icmp eq ptr %18, null
  br i1 %tobool.not.i4.i.i, label %rcu_read_lock.exit.i.i.cgroup_css.exit.i.i_crit_edge, label %if.then.i5.i.i

rcu_read_lock.exit.i.i.cgroup_css.exit.i.i_crit_edge: ; preds = %rcu_read_lock.exit.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i.i

if.then.i5.i.i:                                   ; preds = %rcu_read_lock.exit.i.i
  %id.i.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %18, i32 0, i32 19
  %25 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %id.i.i.i, align 4
  %arrayidx.i.i.i = getelementptr %struct.cgroup, ptr %17, i32 0, i32 18, i32 %26
  %27 = ptrtoint ptr %arrayidx.i.i.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load volatile ptr, ptr %arrayidx.i.i.i, align 4
  %call.i.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i.i)
  %tobool2.not.i.i.i = icmp eq i32 %call.i.i.i.i, 0
  br i1 %tobool2.not.i.i.i, label %lor.lhs.false.i.i.i, label %if.then.i5.i.i.cgroup_css.exit.i.i_crit_edge

if.then.i5.i.i.cgroup_css.exit.i.i_crit_edge:     ; preds = %if.then.i5.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i.i

lor.lhs.false.i.i.i:                              ; preds = %if.then.i5.i.i
  %call3.i.i.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3.i.i.i)
  %tobool4.not.i.i.i = icmp eq i32 %call3.i.i.i, 0
  br i1 %tobool4.not.i.i.i, label %land.lhs.true.i6.i.i, label %lor.lhs.false.i.i.i.cgroup_css.exit.i.i_crit_edge

lor.lhs.false.i.i.i.cgroup_css.exit.i.i_crit_edge: ; preds = %lor.lhs.false.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i.i

land.lhs.true.i6.i.i:                             ; preds = %lor.lhs.false.i.i.i
  %call5.i.i.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call5.i.i.i)
  %tobool6.not.i.i.i = icmp eq i32 %call5.i.i.i, 0
  br i1 %tobool6.not.i.i.i, label %land.lhs.true.i6.i.i.cgroup_css.exit.i.i_crit_edge, label %land.lhs.true7.i.i.i

land.lhs.true.i6.i.i.cgroup_css.exit.i.i_crit_edge: ; preds = %land.lhs.true.i6.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i.i

land.lhs.true7.i.i.i:                             ; preds = %land.lhs.true.i6.i.i
  %.b15.i.i.i = load i1, ptr @cgroup_css.__warned, align 1
  br i1 %.b15.i.i.i, label %land.lhs.true7.i.i.i.cgroup_css.exit.i.i_crit_edge, label %if.then9.i.i.i

land.lhs.true7.i.i.i.cgroup_css.exit.i.i_crit_edge: ; preds = %land.lhs.true7.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_css.exit.i.i

if.then9.i.i.i:                                   ; preds = %land.lhs.true7.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @cgroup_css.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 486, ptr noundef nonnull @.str.22) #26
  br label %cgroup_css.exit.i.i

cgroup_css.exit.i.i:                              ; preds = %if.then9.i.i.i, %land.lhs.true7.i.i.i.cgroup_css.exit.i.i_crit_edge, %land.lhs.true.i6.i.i.cgroup_css.exit.i.i_crit_edge, %lor.lhs.false.i.i.i.cgroup_css.exit.i.i_crit_edge, %if.then.i5.i.i.cgroup_css.exit.i.i_crit_edge, %rcu_read_lock.exit.i.i.cgroup_css.exit.i.i_crit_edge
  %retval.0.i.i.i = phi ptr [ %28, %if.then9.i.i.i ], [ %28, %land.lhs.true7.i.i.i.cgroup_css.exit.i.i_crit_edge ], [ %28, %land.lhs.true.i6.i.i.cgroup_css.exit.i.i_crit_edge ], [ %28, %lor.lhs.false.i.i.i.cgroup_css.exit.i.i_crit_edge ], [ %28, %if.then.i5.i.i.cgroup_css.exit.i.i_crit_edge ], [ %17, %rcu_read_lock.exit.i.i.cgroup_css.exit.i.i_crit_edge ]
  %tobool.not.i.i4 = icmp eq ptr %retval.0.i.i.i, null
  br i1 %tobool.not.i.i4, label %cgroup_css.exit.i.i.if.end.i.i_crit_edge, label %land.lhs.true.i.i

cgroup_css.exit.i.i.if.end.i.i_crit_edge:         ; preds = %cgroup_css.exit.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i.i

land.lhs.true.i.i:                                ; preds = %cgroup_css.exit.i.i
  call void @__sanitizer_cov_trace_pc() #28
  %call1.i.i = tail call fastcc zeroext i1 @css_tryget_online(ptr noundef nonnull %retval.0.i.i.i) #26
  %spec.select.i.i = select i1 %call1.i.i, ptr %retval.0.i.i.i, ptr null
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %land.lhs.true.i.i, %cgroup_css.exit.i.i.if.end.i.i_crit_edge
  %css.0.i.i = phi ptr [ null, %cgroup_css.exit.i.i.if.end.i.i_crit_edge ], [ %spec.select.i.i, %land.lhs.true.i.i ]
  %call.i7.i.i = tail call zeroext i1 @rcu_is_watching() #26
  br i1 %call.i7.i.i, label %if.end.i.i.cgroup_tryget_css.exit.i_crit_edge, label %land.lhs.true.i10.i.i

if.end.i.i.cgroup_tryget_css.exit.i_crit_edge:    ; preds = %if.end.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_tryget_css.exit.i

land.lhs.true.i10.i.i:                            ; preds = %if.end.i.i
  %call1.i8.i.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i8.i.i)
  %tobool.not.i9.i.i = icmp eq i32 %call1.i8.i.i, 0
  br i1 %tobool.not.i9.i.i, label %land.lhs.true.i10.i.i.cgroup_tryget_css.exit.i_crit_edge, label %land.lhs.true2.i12.i.i

land.lhs.true.i10.i.i.cgroup_tryget_css.exit.i_crit_edge: ; preds = %land.lhs.true.i10.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_tryget_css.exit.i

land.lhs.true2.i12.i.i:                           ; preds = %land.lhs.true.i10.i.i
  %.b4.i11.i.i = load i1, ptr @rcu_read_unlock.__warned, align 1
  br i1 %.b4.i11.i.i, label %land.lhs.true2.i12.i.i.cgroup_tryget_css.exit.i_crit_edge, label %if.then.i13.i.i

land.lhs.true2.i12.i.i.cgroup_tryget_css.exit.i_crit_edge: ; preds = %land.lhs.true2.i12.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_tryget_css.exit.i

if.then.i13.i.i:                                  ; preds = %land.lhs.true2.i12.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_read_unlock.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.54, i32 noundef 724, ptr noundef nonnull @.str.57) #26
  br label %cgroup_tryget_css.exit.i

cgroup_tryget_css.exit.i:                         ; preds = %if.then.i13.i.i, %land.lhs.true2.i12.i.i.cgroup_tryget_css.exit.i_crit_edge, %land.lhs.true.i10.i.i.cgroup_tryget_css.exit.i_crit_edge, %if.end.i.i.cgroup_tryget_css.exit.i_crit_edge
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !640
  %29 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i.i14.i.i = and i32 %29, -16384
  %30 = inttoptr i32 %and.i.i.i.i.i14.i.i to ptr
  %preempt_count.i.i.i.i15.i.i = getelementptr inbounds %struct.thread_info, ptr %30, i32 0, i32 1
  %31 = ptrtoint ptr %preempt_count.i.i.i.i15.i.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load volatile i32, ptr %preempt_count.i.i.i.i15.i.i, align 4
  %sub.i.i.i.i.i = add i32 %32, -1
  store volatile i32 %sub.i.i.i.i.i, ptr %preempt_count.i.i.i.i15.i.i, align 4
  tail call void @rcu_read_unlock_strict() #26
  tail call fastcc void @rcu_lock_release(ptr noundef nonnull @rcu_lock_map) #26
  %tobool1.not.i = icmp eq ptr %css.0.i.i, null
  br i1 %tobool1.not.i, label %cgroup_tryget_css.exit.i.cgroup_extra_stat_show.exit_crit_edge, label %if.end3.i

cgroup_tryget_css.exit.i.cgroup_extra_stat_show.exit_crit_edge: ; preds = %cgroup_tryget_css.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_extra_stat_show.exit

if.end3.i:                                        ; preds = %cgroup_tryget_css.exit.i
  %33 = ptrtoint ptr %css_extra_stat_show.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load ptr, ptr %css_extra_stat_show.i, align 4
  %call5.i = tail call i32 %34(ptr noundef %seq, ptr noundef nonnull %css.0.i.i) #26
  %flags.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css.0.i.i, i32 0, i32 7
  %35 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %36, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i1.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i1.i, label %if.then.i.i5, label %if.end3.i.cgroup_extra_stat_show.exit_crit_edge

if.end3.i.cgroup_extra_stat_show.exit_crit_edge:  ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_extra_stat_show.exit

if.then.i.i5:                                     ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %css.0.i.i, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i) #26
  br label %cgroup_extra_stat_show.exit

cgroup_extra_stat_show.exit:                      ; preds = %if.then.i.i5, %if.end3.i.cgroup_extra_stat_show.exit_crit_edge, %cgroup_tryget_css.exit.i.cgroup_extra_stat_show.exit_crit_edge, %seq_css.exit.cgroup_extra_stat_show.exit_crit_edge
  %retval.0.i = phi i32 [ 0, %seq_css.exit.cgroup_extra_stat_show.exit_crit_edge ], [ 0, %cgroup_tryget_css.exit.i.cgroup_extra_stat_show.exit_crit_edge ], [ %call5.i, %if.end3.i.cgroup_extra_stat_show.exit_crit_edge ], [ %call5.i, %if.then.i.i5 ]
  ret i32 %retval.0.i
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal void @cgroup_pressure_release(ptr nocapture noundef readonly %of) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.kernfs_open_file, ptr %of, i32 0, i32 3
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %psi = getelementptr inbounds %struct.cgroup_file_ctx, ptr %1, i32 0, i32 1
  %2 = ptrtoint ptr %psi to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %psi, align 4
  tail call void @psi_trigger_destroy(ptr noundef %3) #26
  ret void
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_io_pressure_show(ptr noundef %seq, ptr nocapture noundef readnone %v) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %private.i = getelementptr inbounds %struct.seq_file, ptr %seq, i32 0, i32 11
  %0 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %parent.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i.i, align 4
  %priv.i.i = getelementptr inbounds %struct.kernfs_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %priv.i.i, align 8
  %priv.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %8 = ptrtoint ptr %priv.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %priv.i.i.i, align 8
  %ss.i.i = getelementptr inbounds %struct.cftype, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %ss.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ss.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %entry.seq_css.exit_crit_edge, label %if.then.i.i

entry.seq_css.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %seq_css.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %id.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %11, i32 0, i32 19
  %12 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %id.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.cgroup, ptr %7, i32 0, i32 18, i32 %13
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %arrayidx.i.i, align 4
  br label %seq_css.exit

seq_css.exit:                                     ; preds = %if.then.i.i, %entry.seq_css.exit_crit_edge
  %retval.0.i.i = phi ptr [ %15, %if.then.i.i ], [ %7, %entry.seq_css.exit_crit_edge ]
  %16 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %retval.0.i.i, align 8
  %kn.i = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 11
  %18 = ptrtoint ptr %kn.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %kn.i, align 8
  %id.i.i6 = getelementptr inbounds %struct.kernfs_node, ptr %19, i32 0, i32 10
  %20 = ptrtoint ptr %id.i.i6 to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %id.i.i6, align 8
  %conv.i.i.i = trunc i64 %21 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %conv.i.i.i)
  %cmp = icmp eq i32 %conv.i.i.i, 1
  %psi2 = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 33
  %spec.select = select i1 %cmp, ptr @psi_system, ptr %psi2
  %call3 = tail call i32 @psi_show(ptr noundef %seq, ptr noundef %spec.select, i32 noundef 0) #26
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_io_pressure_write(ptr nocapture noundef readonly %of, ptr noundef %buf, i32 noundef %nbytes, i64 noundef %off) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @cgroup_pressure_write(ptr noundef %of, ptr noundef %buf, i32 noundef %nbytes, i32 noundef 0)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_pressure_poll(ptr nocapture noundef readonly %of, ptr noundef %pt) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.kernfs_open_file, ptr %of, i32 0, i32 3
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %psi = getelementptr inbounds %struct.cgroup_file_ctx, ptr %1, i32 0, i32 1
  %file = getelementptr inbounds %struct.kernfs_open_file, ptr %of, i32 0, i32 1
  %2 = ptrtoint ptr %file to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %file, align 4
  %call = tail call i32 @psi_trigger_poll(ptr noundef %psi, ptr noundef %3, ptr noundef %pt) #26
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_memory_pressure_show(ptr noundef %seq, ptr nocapture noundef readnone %v) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %private.i = getelementptr inbounds %struct.seq_file, ptr %seq, i32 0, i32 11
  %0 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %parent.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i.i, align 4
  %priv.i.i = getelementptr inbounds %struct.kernfs_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %priv.i.i, align 8
  %priv.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %8 = ptrtoint ptr %priv.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %priv.i.i.i, align 8
  %ss.i.i = getelementptr inbounds %struct.cftype, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %ss.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ss.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %entry.seq_css.exit_crit_edge, label %if.then.i.i

entry.seq_css.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %seq_css.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %id.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %11, i32 0, i32 19
  %12 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %id.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.cgroup, ptr %7, i32 0, i32 18, i32 %13
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %arrayidx.i.i, align 4
  br label %seq_css.exit

seq_css.exit:                                     ; preds = %if.then.i.i, %entry.seq_css.exit_crit_edge
  %retval.0.i.i = phi ptr [ %15, %if.then.i.i ], [ %7, %entry.seq_css.exit_crit_edge ]
  %16 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %retval.0.i.i, align 8
  %kn.i = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 11
  %18 = ptrtoint ptr %kn.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %kn.i, align 8
  %id.i.i6 = getelementptr inbounds %struct.kernfs_node, ptr %19, i32 0, i32 10
  %20 = ptrtoint ptr %id.i.i6 to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %id.i.i6, align 8
  %conv.i.i.i = trunc i64 %21 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %conv.i.i.i)
  %cmp = icmp eq i32 %conv.i.i.i, 1
  %psi2 = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 33
  %spec.select = select i1 %cmp, ptr @psi_system, ptr %psi2
  %call3 = tail call i32 @psi_show(ptr noundef %seq, ptr noundef %spec.select, i32 noundef 1) #26
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_memory_pressure_write(ptr nocapture noundef readonly %of, ptr noundef %buf, i32 noundef %nbytes, i64 noundef %off) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @cgroup_pressure_write(ptr noundef %of, ptr noundef %buf, i32 noundef %nbytes, i32 noundef 1)
  ret i32 %call
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_cpu_pressure_show(ptr noundef %seq, ptr nocapture noundef readnone %v) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %private.i = getelementptr inbounds %struct.seq_file, ptr %seq, i32 0, i32 11
  %0 = ptrtoint ptr %private.i to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private.i, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %parent.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i.i, align 4
  %priv.i.i = getelementptr inbounds %struct.kernfs_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %priv.i.i, align 8
  %priv.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %8 = ptrtoint ptr %priv.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %priv.i.i.i, align 8
  %ss.i.i = getelementptr inbounds %struct.cftype, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %ss.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ss.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %entry.seq_css.exit_crit_edge, label %if.then.i.i

entry.seq_css.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %seq_css.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %id.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %11, i32 0, i32 19
  %12 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %id.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.cgroup, ptr %7, i32 0, i32 18, i32 %13
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %arrayidx.i.i, align 4
  br label %seq_css.exit

seq_css.exit:                                     ; preds = %if.then.i.i, %entry.seq_css.exit_crit_edge
  %retval.0.i.i = phi ptr [ %15, %if.then.i.i ], [ %7, %entry.seq_css.exit_crit_edge ]
  %16 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %retval.0.i.i, align 8
  %kn.i = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 11
  %18 = ptrtoint ptr %kn.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %kn.i, align 8
  %id.i.i6 = getelementptr inbounds %struct.kernfs_node, ptr %19, i32 0, i32 10
  %20 = ptrtoint ptr %id.i.i6 to i32
  call void @__asan_load8_noabort(i32 %20)
  %21 = load i64, ptr %id.i.i6, align 8
  %conv.i.i.i = trunc i64 %21 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %conv.i.i.i)
  %cmp = icmp eq i32 %conv.i.i.i, 1
  %psi2 = getelementptr inbounds %struct.cgroup, ptr %17, i32 0, i32 33
  %spec.select = select i1 %cmp, ptr @psi_system, ptr %psi2
  %call3 = tail call i32 @psi_show(ptr noundef %seq, ptr noundef %spec.select, i32 noundef 2) #26
  ret i32 %call3
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cgroup_cpu_pressure_write(ptr nocapture noundef readonly %of, ptr noundef %buf, i32 noundef %nbytes, i64 noundef %off) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call fastcc i32 @cgroup_pressure_write(ptr noundef %of, ptr noundef %buf, i32 noundef %nbytes, i32 noundef 2)
  ret i32 %call
}

; Function Attrs: argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn
declare dso_local i32 @strcmp(ptr nocapture noundef, ptr nocapture noundef) local_unnamed_addr #11

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cgroup_save_control(ptr noundef %cgrp) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call.i = tail call i32 @rcu_read_lock_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i)
  %tobool.not.i = icmp eq i32 %call.i, 0
  br i1 %tobool.not.i, label %land.lhs.true.i, label %entry.css_next_descendant_pre.exit_crit_edge

entry.css_next_descendant_pre.exit_crit_edge:     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit

land.lhs.true.i:                                  ; preds = %entry
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool2.not.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool2.not.i, label %land.lhs.true3.i, label %land.lhs.true.i.css_next_descendant_pre.exit_crit_edge

land.lhs.true.i.css_next_descendant_pre.exit_crit_edge: ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit

land.lhs.true3.i:                                 ; preds = %land.lhs.true.i
  %call4.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call4.i)
  %tobool5.not.i = icmp eq i32 %call4.i, 0
  br i1 %tobool5.not.i, label %land.lhs.true3.i.css_next_descendant_pre.exit_crit_edge, label %land.lhs.true6.i

land.lhs.true3.i.css_next_descendant_pre.exit_crit_edge: ; preds = %land.lhs.true3.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit

land.lhs.true6.i:                                 ; preds = %land.lhs.true3.i
  %.b29.i = load i1, ptr @css_next_descendant_pre.__warned, align 1
  br i1 %.b29.i, label %land.lhs.true6.i.css_next_descendant_pre.exit_crit_edge, label %if.then.i

land.lhs.true6.i.css_next_descendant_pre.exit_crit_edge: ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %css_next_descendant_pre.exit

if.then.i:                                        ; preds = %land.lhs.true6.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @css_next_descendant_pre.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.7, i32 noundef 4385, ptr noundef nonnull @.str.14) #26
  br label %css_next_descendant_pre.exit

css_next_descendant_pre.exit:                     ; preds = %if.then.i, %land.lhs.true6.i.css_next_descendant_pre.exit_crit_edge, %land.lhs.true3.i.css_next_descendant_pre.exit_crit_edge, %land.lhs.true.i.css_next_descendant_pre.exit_crit_edge, %entry.css_next_descendant_pre.exit_crit_edge
  %tobool.not46 = icmp eq ptr %cgrp, null
  br i1 %tobool.not46, label %css_next_descendant_pre.exit.for.end_crit_edge, label %css_next_descendant_pre.exit.do.body_crit_edge

css_next_descendant_pre.exit.do.body_crit_edge:   ; preds = %css_next_descendant_pre.exit
  br label %do.body

css_next_descendant_pre.exit.for.end_crit_edge:   ; preds = %css_next_descendant_pre.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

do.body:                                          ; preds = %for.inc.do.body_crit_edge, %css_next_descendant_pre.exit.do.body_crit_edge
  %d_css.047 = phi ptr [ %call33, %for.inc.do.body_crit_edge ], [ %cgrp, %css_next_descendant_pre.exit.do.body_crit_edge ]
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool2.not = icmp eq i32 %0, 0
  br i1 %tobool2.not, label %do.body.if.end_crit_edge, label %land.rhs

do.body.if.end_crit_edge:                         ; preds = %do.body
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.rhs:                                         ; preds = %do.body
  %call.i44 = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i44)
  %cmp.not = icmp eq i32 %call.i44, 0
  br i1 %cmp.not, label %do.end, label %land.rhs.if.end_crit_edge, !prof !637

land.rhs.if.end_crit_edge:                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

do.end:                                           ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 3036, i32 noundef 9, ptr noundef null) #26
  br label %if.end

if.end:                                           ; preds = %do.end, %land.rhs.if.end_crit_edge, %do.body.if.end_crit_edge
  %1 = ptrtoint ptr %d_css.047 to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %d_css.047, align 8
  %flags.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %2, i32 0, i32 7
  %3 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %4, 2
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool.not.i45 = icmp eq i32 %and.i, 0
  br i1 %tobool.not.i45, label %if.end.for.inc_crit_edge, label %if.else

if.end.for.inc_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc

if.else:                                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  %subtree_control = getelementptr inbounds %struct.cgroup, ptr %2, i32 0, i32 14
  %5 = ptrtoint ptr %subtree_control to i32
  call void @__asan_load2_noabort(i32 %5)
  %6 = load i16, ptr %subtree_control, align 4
  %old_subtree_control = getelementptr inbounds %struct.cgroup, ptr %2, i32 0, i32 16
  %7 = ptrtoint ptr %old_subtree_control to i32
  call void @__asan_store2_noabort(i32 %7)
  store i16 %6, ptr %old_subtree_control, align 8
  %subtree_ss_mask = getelementptr inbounds %struct.cgroup, ptr %2, i32 0, i32 15
  %8 = ptrtoint ptr %subtree_ss_mask to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %subtree_ss_mask, align 2
  %old_subtree_ss_mask = getelementptr inbounds %struct.cgroup, ptr %2, i32 0, i32 17
  %10 = ptrtoint ptr %old_subtree_ss_mask to i32
  call void @__asan_store2_noabort(i32 %10)
  store i16 %9, ptr %old_subtree_ss_mask, align 2
  %dom_cgrp = getelementptr inbounds %struct.cgroup, ptr %2, i32 0, i32 22
  %11 = ptrtoint ptr %dom_cgrp to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %dom_cgrp, align 8
  %old_dom_cgrp = getelementptr inbounds %struct.cgroup, ptr %2, i32 0, i32 23
  %13 = ptrtoint ptr %old_dom_cgrp to i32
  call void @__asan_store4_noabort(i32 %13)
  store ptr %12, ptr %old_dom_cgrp, align 4
  br label %for.inc

for.inc:                                          ; preds = %if.else, %if.end.for.inc_crit_edge
  %call33 = tail call ptr @css_next_descendant_pre(ptr noundef nonnull %d_css.047, ptr noundef nonnull %cgrp)
  %tobool.not = icmp eq ptr %call33, null
  br i1 %tobool.not, label %for.inc.for.end_crit_edge, label %for.inc.do.body_crit_edge

for.inc.do.body_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.body

for.inc.for.end_crit_edge:                        ; preds = %for.inc
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

for.end:                                          ; preds = %for.inc.for.end_crit_edge, %css_next_descendant_pre.exit.for.end_crit_edge
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @__task_pid_nr_ns(ptr noundef, i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc ptr @__cgroup_procs_start(ptr nocapture noundef readonly %s, ptr nocapture noundef readonly %pos, i32 noundef %iter_flags) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %private = getelementptr inbounds %struct.seq_file, ptr %s, i32 0, i32 11
  %0 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %private, align 8
  %2 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %1, align 4
  %parent.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 3
  %4 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load ptr, ptr %parent.i.i, align 4
  %priv.i.i = getelementptr inbounds %struct.kernfs_node, ptr %5, i32 0, i32 9
  %6 = ptrtoint ptr %priv.i.i to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %priv.i.i, align 8
  %priv.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %3, i32 0, i32 9
  %8 = ptrtoint ptr %priv.i.i.i to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %priv.i.i.i, align 8
  %ss.i.i = getelementptr inbounds %struct.cftype, ptr %9, i32 0, i32 5
  %10 = ptrtoint ptr %ss.i.i to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %ss.i.i, align 4
  %tobool.not.i.i = icmp eq ptr %11, null
  br i1 %tobool.not.i.i, label %entry.seq_css.exit_crit_edge, label %if.then.i.i

entry.seq_css.exit_crit_edge:                     ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %seq_css.exit

if.then.i.i:                                      ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %id.i.i = getelementptr inbounds %struct.cgroup_subsys, ptr %11, i32 0, i32 19
  %12 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %id.i.i, align 4
  %arrayidx.i.i = getelementptr %struct.cgroup, ptr %7, i32 0, i32 18, i32 %13
  %14 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load volatile ptr, ptr %arrayidx.i.i, align 4
  br label %seq_css.exit

seq_css.exit:                                     ; preds = %if.then.i.i, %entry.seq_css.exit_crit_edge
  %retval.0.i.i = phi ptr [ %15, %if.then.i.i ], [ %7, %entry.seq_css.exit_crit_edge ]
  %16 = ptrtoint ptr %retval.0.i.i to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %retval.0.i.i, align 8
  %priv = getelementptr inbounds %struct.kernfs_open_file, ptr %1, i32 0, i32 3
  %18 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %priv, align 4
  %procs = getelementptr inbounds %struct.cgroup_file_ctx, ptr %19, i32 0, i32 2
  %iter = getelementptr inbounds %struct.cgroup_file_ctx, ptr %19, i32 0, i32 2, i32 1
  %20 = ptrtoint ptr %procs to i32
  call void @__asan_load1_noabort(i32 %20)
  %21 = load i8, ptr %procs, align 4, !range !654
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %21)
  %tobool.not = icmp eq i8 %21, 0
  %22 = ptrtoint ptr %pos to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %pos, align 8
  call void @__sanitizer_cov_trace_const_cmp8(i64 0, i64 %23)
  %tobool2.not = icmp eq i64 %23, 0
  br i1 %tobool.not, label %if.then, label %if.else

if.then:                                          ; preds = %seq_css.exit
  br i1 %tobool2.not, label %if.end42, label %land.rhs

land.rhs:                                         ; preds = %if.then
  %.b67 = load i1, ptr @__cgroup_procs_start.__already_done, align 1
  br i1 %.b67, label %land.rhs.cleanup_crit_edge, label %if.then10, !prof !636

land.rhs.cleanup_crit_edge:                       ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then10:                                        ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @__cgroup_procs_start.__already_done, align 1
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 4814, i32 noundef 9, ptr noundef null) #26
  br label %cleanup

if.end42:                                         ; preds = %if.then
  %24 = call ptr @memset(ptr %iter, i32 0, i32 52)
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %ss.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %17, i32 0, i32 1
  %25 = ptrtoint ptr %ss.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %ss.i, align 4
  %27 = ptrtoint ptr %iter to i32
  call void @__asan_store4_noabort(i32 %27)
  store ptr %26, ptr %iter, align 4
  %flags2.i = getelementptr inbounds %struct.cgroup_file_ctx, ptr %19, i32 0, i32 2, i32 1, i32 1
  %28 = ptrtoint ptr %flags2.i to i32
  call void @__asan_store4_noabort(i32 %28)
  store i32 %iter_flags, ptr %flags2.i, align 4
  %tobool.not.i = icmp eq ptr %26, null
  %29 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load ptr, ptr %17, align 8
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #28
  %31 = ptrtoint ptr %ss.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load ptr, ptr %ss.i, align 4
  %id.i = getelementptr inbounds %struct.cgroup_subsys, ptr %32, i32 0, i32 19
  %33 = ptrtoint ptr %id.i to i32
  call void @__asan_load4_noabort(i32 %33)
  %34 = load i32, ptr %id.i, align 4
  %arrayidx.i = getelementptr %struct.cgroup, ptr %30, i32 0, i32 21, i32 %34
  br label %css_task_iter_start.exit

if.else.i:                                        ; preds = %if.end42
  call void @__sanitizer_cov_trace_pc() #28
  %cset_links.i = getelementptr inbounds %struct.cgroup, ptr %30, i32 0, i32 20
  br label %css_task_iter_start.exit

css_task_iter_start.exit:                         ; preds = %if.else.i, %if.then.i
  %arrayidx.sink.i = phi ptr [ %cset_links.i, %if.else.i ], [ %arrayidx.i, %if.then.i ]
  %35 = getelementptr inbounds %struct.cgroup_file_ctx, ptr %19, i32 0, i32 2, i32 1, i32 2
  %36 = ptrtoint ptr %35 to i32
  call void @__asan_store4_noabort(i32 %36)
  store ptr %arrayidx.sink.i, ptr %35, align 4
  %cset_head.i = getelementptr inbounds %struct.cgroup_file_ctx, ptr %19, i32 0, i32 2, i32 1, i32 3
  %37 = ptrtoint ptr %cset_head.i to i32
  call void @__asan_store4_noabort(i32 %37)
  store ptr %arrayidx.sink.i, ptr %cset_head.i, align 4
  tail call fastcc void @css_task_iter_advance(ptr noundef %iter) #26
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  %38 = ptrtoint ptr %procs to i32
  call void @__asan_store1_noabort(i32 %38)
  store i8 1, ptr %procs, align 4
  br label %if.end50

if.else:                                          ; preds = %seq_css.exit
  br i1 %tobool2.not, label %if.then46, label %if.else48

if.then46:                                        ; preds = %if.else
  tail call void @css_task_iter_end(ptr noundef %iter)
  %39 = call ptr @memset(ptr %iter, i32 0, i32 52)
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %ss.i69 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %17, i32 0, i32 1
  %40 = ptrtoint ptr %ss.i69 to i32
  call void @__asan_load4_noabort(i32 %40)
  %41 = load ptr, ptr %ss.i69, align 4
  %42 = ptrtoint ptr %iter to i32
  call void @__asan_store4_noabort(i32 %42)
  store ptr %41, ptr %iter, align 4
  %flags2.i70 = getelementptr inbounds %struct.cgroup_file_ctx, ptr %19, i32 0, i32 2, i32 1, i32 1
  %43 = ptrtoint ptr %flags2.i70 to i32
  call void @__asan_store4_noabort(i32 %43)
  store i32 %iter_flags, ptr %flags2.i70, align 4
  %tobool.not.i71 = icmp eq ptr %41, null
  %44 = ptrtoint ptr %17 to i32
  call void @__asan_load4_noabort(i32 %44)
  %45 = load ptr, ptr %17, align 8
  br i1 %tobool.not.i71, label %if.else.i76, label %if.then.i74

if.then.i74:                                      ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #28
  %46 = ptrtoint ptr %ss.i69 to i32
  call void @__asan_load4_noabort(i32 %46)
  %47 = load ptr, ptr %ss.i69, align 4
  %id.i72 = getelementptr inbounds %struct.cgroup_subsys, ptr %47, i32 0, i32 19
  %48 = ptrtoint ptr %id.i72 to i32
  call void @__asan_load4_noabort(i32 %48)
  %49 = load i32, ptr %id.i72, align 4
  %arrayidx.i73 = getelementptr %struct.cgroup, ptr %45, i32 0, i32 21, i32 %49
  br label %css_task_iter_start.exit79

if.else.i76:                                      ; preds = %if.then46
  call void @__sanitizer_cov_trace_pc() #28
  %cset_links.i75 = getelementptr inbounds %struct.cgroup, ptr %45, i32 0, i32 20
  br label %css_task_iter_start.exit79

css_task_iter_start.exit79:                       ; preds = %if.else.i76, %if.then.i74
  %arrayidx.sink.i77 = phi ptr [ %cset_links.i75, %if.else.i76 ], [ %arrayidx.i73, %if.then.i74 ]
  %50 = getelementptr inbounds %struct.cgroup_file_ctx, ptr %19, i32 0, i32 2, i32 1, i32 2
  %51 = ptrtoint ptr %50 to i32
  call void @__asan_store4_noabort(i32 %51)
  store ptr %arrayidx.sink.i77, ptr %50, align 4
  %cset_head.i78 = getelementptr inbounds %struct.cgroup_file_ctx, ptr %19, i32 0, i32 2, i32 1, i32 3
  %52 = ptrtoint ptr %cset_head.i78 to i32
  call void @__asan_store4_noabort(i32 %52)
  store ptr %arrayidx.sink.i77, ptr %cset_head.i78, align 4
  tail call fastcc void @css_task_iter_advance(ptr noundef %iter) #26
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  br label %if.end50

if.else48:                                        ; preds = %if.else
  call void @__sanitizer_cov_trace_pc() #28
  %cur_task = getelementptr inbounds %struct.cgroup_file_ctx, ptr %19, i32 0, i32 2, i32 1, i32 10
  %53 = ptrtoint ptr %cur_task to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %cur_task, align 4
  br label %cleanup

if.end50:                                         ; preds = %css_task_iter_start.exit79, %css_task_iter_start.exit
  %55 = ptrtoint ptr %private to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %private, align 8
  %priv.i = getelementptr inbounds %struct.kernfs_open_file, ptr %56, i32 0, i32 3
  %57 = ptrtoint ptr %priv.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load ptr, ptr %priv.i, align 4
  %iter.i = getelementptr inbounds %struct.cgroup_file_ctx, ptr %58, i32 0, i32 2, i32 1
  %call.i = tail call ptr @css_task_iter_next(ptr noundef %iter.i) #26
  br label %cleanup

cleanup:                                          ; preds = %if.end50, %if.else48, %if.then10, %land.rhs.cleanup_crit_edge
  %retval.0 = phi ptr [ %54, %if.else48 ], [ %call.i, %if.end50 ], [ inttoptr (i32 -22 to ptr), %land.rhs.cleanup_crit_edge ], [ inttoptr (i32 -22 to ptr), %if.then10 ]
  ret ptr %retval.0
}

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @__cgroup_procs_write(ptr nocapture noundef readonly %of, ptr noundef %buf, i1 noundef zeroext %threadgroup) unnamed_addr #0 align 64 {
entry:
  %locked = alloca i8, align 1
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.kernfs_open_file, ptr %of, i32 0, i32 3
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  call void @llvm.lifetime.start.p0(i64 1, ptr nonnull %locked) #26
  %2 = ptrtoint ptr %locked to i32
  call void @__asan_store1_noabort(i32 %2)
  store i8 -1, ptr %locked, align 1, !annotation !638
  %3 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %of, align 4
  %call = tail call ptr @cgroup_kn_lock_live(ptr noundef %4, i1 noundef zeroext false)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  %call2 = call ptr @cgroup_procs_write_start(ptr noundef %buf, i1 noundef zeroext %threadgroup, ptr noundef nonnull %locked)
  %cmp.i.i.not = icmp ugt ptr %call2, inttoptr (i32 -4096 to ptr)
  %5 = ptrtoint ptr %call2 to i32
  br i1 %cmp.i.i.not, label %if.end.out_unlock_crit_edge, label %if.end6

if.end.out_unlock_crit_edge:                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_unlock

if.end6:                                          ; preds = %if.end
  tail call void @_raw_spin_lock_irq(ptr noundef nonnull @css_set_lock) #26
  %call7 = tail call ptr @task_cgroup_from_root(ptr noundef %call2, ptr noundef nonnull @cgrp_dfl_root)
  tail call void @_raw_spin_unlock_irq(ptr noundef nonnull @css_set_lock) #26
  %file = getelementptr inbounds %struct.kernfs_open_file, ptr %of, i32 0, i32 1
  %6 = ptrtoint ptr %file to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %file, align 4
  %f_cred = getelementptr inbounds %struct.file, ptr %7, i32 0, i32 12
  %8 = ptrtoint ptr %f_cred to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %f_cred, align 8
  %call8 = tail call ptr @override_creds(ptr noundef %9) #26
  %10 = ptrtoint ptr %file to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %file, align 4
  %dentry = getelementptr inbounds %struct.file, ptr %11, i32 0, i32 1, i32 1
  %12 = ptrtoint ptr %dentry to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load ptr, ptr %dentry, align 4
  %d_sb = getelementptr inbounds %struct.dentry, ptr %13, i32 0, i32 9
  %14 = ptrtoint ptr %d_sb to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load ptr, ptr %d_sb, align 4
  %16 = ptrtoint ptr %1 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %1, align 4
  %call11 = tail call fastcc i32 @cgroup_attach_permissions(ptr noundef %call7, ptr noundef nonnull %call, ptr noundef %15, i1 noundef zeroext %threadgroup, ptr noundef %17)
  tail call void @revert_creds(ptr noundef %call8) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call11)
  %tobool12.not = icmp eq i32 %call11, 0
  br i1 %tobool12.not, label %if.end14, label %if.end6.out_finish_crit_edge

if.end6.out_finish_crit_edge:                     ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #28
  br label %out_finish

if.end14:                                         ; preds = %if.end6
  call void @__sanitizer_cov_trace_pc() #28
  %call16 = tail call i32 @cgroup_attach_task(ptr noundef nonnull %call, ptr noundef %call2, i1 noundef zeroext %threadgroup)
  br label %out_finish

out_finish:                                       ; preds = %if.end14, %if.end6.out_finish_crit_edge
  %ret.0 = phi i32 [ %call11, %if.end6.out_finish_crit_edge ], [ %call16, %if.end14 ]
  %18 = ptrtoint ptr %locked to i32
  call void @__asan_load1_noabort(i32 %18)
  %19 = load i8, ptr %locked, align 1, !range !654
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %19)
  %tobool17 = icmp ne i8 %19, 0
  tail call void @cgroup_procs_write_finish(ptr noundef %call2, i1 noundef zeroext %tobool17)
  br label %out_unlock

out_unlock:                                       ; preds = %out_finish, %if.end.out_unlock_crit_edge
  %ret.1 = phi i32 [ %5, %if.end.out_unlock_crit_edge ], [ %ret.0, %out_finish ]
  %20 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %of, align 4
  %flags.i.i = getelementptr inbounds %struct.kernfs_node, ptr %21, i32 0, i32 11
  %22 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load2_noabort(i32 %22)
  %23 = load i16, ptr %flags.i.i, align 8
  %24 = and i16 %23, 15
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %24)
  %cmp.i = icmp eq i16 %24, 1
  br i1 %cmp.i, label %out_unlock.if.end.i_crit_edge, label %if.else.i

out_unlock.if.end.i_crit_edge:                    ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

if.else.i:                                        ; preds = %out_unlock
  call void @__sanitizer_cov_trace_pc() #28
  %parent.i = getelementptr inbounds %struct.kernfs_node, ptr %21, i32 0, i32 3
  %25 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %parent.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %out_unlock.if.end.i_crit_edge
  %kn.pn.i = phi ptr [ %26, %if.else.i ], [ %21, %out_unlock.if.end.i_crit_edge ]
  %cgrp.0.in.i = getelementptr inbounds %struct.kernfs_node, ptr %kn.pn.i, i32 0, i32 9
  %27 = ptrtoint ptr %cgrp.0.in.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %cgrp.0.i = load ptr, ptr %cgrp.0.in.i, align 8
  tail call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  tail call void @kernfs_unbreak_active_protection(ptr noundef %21) #26
  %flags.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 7
  %28 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %flags.i.i.i, align 4
  %and.i.i.i = and i32 %29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end.i.cleanup_crit_edge

if.end.i.cleanup_crit_edge:                       ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then.i.i.i:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i.i) #26
  br label %cleanup

cleanup:                                          ; preds = %if.then.i.i.i, %if.end.i.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ -19, %entry.cleanup_crit_edge ], [ %ret.1, %if.end.i.cleanup_crit_edge ], [ %ret.1, %if.then.i.i.i ]
  call void @llvm.lifetime.end.p0(i64 1, ptr nonnull %locked) #26
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @override_creds(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @cgroup_attach_permissions(ptr nocapture noundef readonly %src_cgrp, ptr noundef readonly %dst_cgrp, ptr noundef %sb, i1 noundef zeroext %threadgroup, ptr nocapture noundef readonly %ns) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %0 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i, label %entry.if.end.i_crit_edge, label %land.rhs.i

entry.if.end.i_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

land.rhs.i:                                       ; preds = %entry
  %call.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %cmp.not.i = icmp eq i32 %call.i.i, 0
  br i1 %cmp.not.i, label %do.end.i, label %land.rhs.i.if.end.i_crit_edge, !prof !637

land.rhs.i.if.end.i_crit_edge:                    ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

do.end.i:                                         ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 4874, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i

if.end.i:                                         ; preds = %do.end.i, %land.rhs.i.if.end.i_crit_edge, %entry.if.end.i_crit_edge
  %root.i.i = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 19
  %1 = ptrtoint ptr %root.i.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %root.i.i, align 4
  %level.i.i = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 2
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i, %if.end.i
  %com_cgrp.0.i = phi ptr [ %src_cgrp, %if.end.i ], [ %16, %while.body.i ]
  %root1.i.i = getelementptr inbounds %struct.cgroup, ptr %com_cgrp.0.i, i32 0, i32 19
  %3 = ptrtoint ptr %root1.i.i to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %root1.i.i, align 4
  %cmp.not.i.i = icmp eq ptr %2, %4
  br i1 %cmp.not.i.i, label %lor.lhs.false.i.i, label %while.cond.i.while.body.i_crit_edge

while.cond.i.while.body.i_crit_edge:              ; preds = %while.cond.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.body.i

lor.lhs.false.i.i:                                ; preds = %while.cond.i
  %5 = ptrtoint ptr %level.i.i to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load i32, ptr %level.i.i, align 4
  %level2.i.i = getelementptr inbounds %struct.cgroup, ptr %com_cgrp.0.i, i32 0, i32 2
  %7 = ptrtoint ptr %level2.i.i to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load i32, ptr %level2.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %6, i32 %8)
  %cmp3.i.i = icmp slt i32 %6, %8
  br i1 %cmp3.i.i, label %lor.lhs.false.i.i.while.body.i_crit_edge, label %cgroup_is_descendant.exit.i

lor.lhs.false.i.i.while.body.i_crit_edge:         ; preds = %lor.lhs.false.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.body.i

cgroup_is_descendant.exit.i:                      ; preds = %lor.lhs.false.i.i
  %arrayidx.i.i = getelementptr %struct.cgroup, ptr %dst_cgrp, i32 0, i32 37, i32 %8
  %9 = ptrtoint ptr %arrayidx.i.i to i32
  call void @__asan_load8_noabort(i32 %9)
  %10 = load i64, ptr %arrayidx.i.i, align 8
  %kn.i.i.i = getelementptr inbounds %struct.cgroup, ptr %com_cgrp.0.i, i32 0, i32 11
  %11 = ptrtoint ptr %kn.i.i.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %kn.i.i.i, align 8
  %id.i.i.i = getelementptr inbounds %struct.kernfs_node, ptr %12, i32 0, i32 10
  %13 = ptrtoint ptr %id.i.i.i to i32
  call void @__asan_load8_noabort(i32 %13)
  %14 = load i64, ptr %id.i.i.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %10, i64 %14)
  %cmp5.i.i = icmp eq i64 %10, %14
  br i1 %cmp5.i.i, label %while.end.i, label %cgroup_is_descendant.exit.i.while.body.i_crit_edge

cgroup_is_descendant.exit.i.while.body.i_crit_edge: ; preds = %cgroup_is_descendant.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.body.i

while.body.i:                                     ; preds = %cgroup_is_descendant.exit.i.while.body.i_crit_edge, %lor.lhs.false.i.i.while.body.i_crit_edge, %while.cond.i.while.body.i_crit_edge
  %parent.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %com_cgrp.0.i, i32 0, i32 12
  %15 = ptrtoint ptr %parent.i.i to i32
  call void @__asan_load4_noabort(i32 %15)
  %16 = load ptr, ptr %parent.i.i, align 8
  br label %while.cond.i

while.end.i:                                      ; preds = %cgroup_is_descendant.exit.i
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks to i32))
  %17 = load i32, ptr @debug_locks, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %17)
  %tobool.not.i.i = icmp eq i32 %17, 0
  br i1 %tobool.not.i.i, label %while.end.i.if.end.i48.i_crit_edge, label %land.rhs.i.i

while.end.i.if.end.i48.i_crit_edge:               ; preds = %while.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i48.i

land.rhs.i.i:                                     ; preds = %while.end.i
  %call.i.i.i = tail call i32 @lock_is_held_type(ptr noundef getelementptr inbounds (%struct.mutex, ptr @cgroup_mutex, i32 0, i32 5), i32 noundef -1) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i.i)
  %cmp.not.i47.i = icmp eq i32 %call.i.i.i, 0
  br i1 %cmp.not.i47.i, label %do.end.i.i, label %land.rhs.i.i.if.end.i48.i_crit_edge, !prof !637

land.rhs.i.i.if.end.i48.i_crit_edge:              ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i48.i

do.end.i.i:                                       ; preds = %land.rhs.i.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 4855, i32 noundef 9, ptr noundef null) #26
  br label %if.end.i48.i

if.end.i48.i:                                     ; preds = %do.end.i.i, %land.rhs.i.i.if.end.i48.i_crit_edge, %while.end.i.if.end.i48.i_crit_edge
  %procs_file.i.i = getelementptr inbounds %struct.cgroup, ptr %com_cgrp.0.i, i32 0, i32 12
  %18 = ptrtoint ptr %procs_file.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load ptr, ptr %procs_file.i.i, align 4
  %call24.i.i = tail call ptr @kernfs_get_inode(ptr noundef %sb, ptr noundef %19) #26
  %tobool25.not.i.i = icmp eq ptr %call24.i.i, null
  br i1 %tobool25.not.i.i, label %if.end.i48.i.cleanup_crit_edge, label %cgroup_may_write.exit.i

if.end.i48.i.cleanup_crit_edge:                   ; preds = %if.end.i48.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

cgroup_may_write.exit.i:                          ; preds = %if.end.i48.i
  %call28.i.i = tail call i32 @inode_permission(ptr noundef nonnull @init_user_ns, ptr noundef nonnull %call24.i.i, i32 noundef 2) #26
  tail call void @iput(ptr noundef nonnull %call24.i.i) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call28.i.i)
  %tobool29.not.i = icmp eq i32 %call28.i.i, 0
  br i1 %tobool29.not.i, label %if.end31.i, label %cgroup_may_write.exit.i.cleanup_crit_edge

cgroup_may_write.exit.i.cleanup_crit_edge:        ; preds = %cgroup_may_write.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end31.i:                                       ; preds = %cgroup_may_write.exit.i
  %20 = load i32, ptr getelementptr inbounds (%struct.cgroup_root, ptr @cgrp_dfl_root, i32 0, i32 7), align 4
  %and.i = and i32 %20, 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool32.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool32.not.i, label %if.end31.i.if.end_crit_edge, label %land.lhs.true.i

if.end31.i.if.end_crit_edge:                      ; preds = %if.end31.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

land.lhs.true.i:                                  ; preds = %if.end31.i
  %root_cset.i = getelementptr inbounds %struct.cgroup_namespace, ptr %ns, i32 0, i32 3
  %21 = ptrtoint ptr %root_cset.i to i32
  call void @__asan_load4_noabort(i32 %21)
  %22 = load ptr, ptr %root_cset.i, align 4
  %dfl_cgrp.i = getelementptr inbounds %struct.css_set, ptr %22, i32 0, i32 3
  %23 = ptrtoint ptr %dfl_cgrp.i to i32
  call void @__asan_load4_noabort(i32 %23)
  %24 = load ptr, ptr %dfl_cgrp.i, align 4
  %root.i50.i = getelementptr inbounds %struct.cgroup, ptr %src_cgrp, i32 0, i32 19
  %25 = ptrtoint ptr %root.i50.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load ptr, ptr %root.i50.i, align 4
  %root1.i51.i = getelementptr inbounds %struct.cgroup, ptr %24, i32 0, i32 19
  %27 = ptrtoint ptr %root1.i51.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load ptr, ptr %root1.i51.i, align 4
  %cmp.not.i52.i = icmp eq ptr %26, %28
  br i1 %cmp.not.i52.i, label %lor.lhs.false.i56.i, label %land.lhs.true.i.cleanup_crit_edge

land.lhs.true.i.cleanup_crit_edge:                ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

lor.lhs.false.i56.i:                              ; preds = %land.lhs.true.i
  %level.i53.i = getelementptr inbounds %struct.cgroup, ptr %src_cgrp, i32 0, i32 2
  %29 = ptrtoint ptr %level.i53.i to i32
  call void @__asan_load4_noabort(i32 %29)
  %30 = load i32, ptr %level.i53.i, align 4
  %level2.i54.i = getelementptr inbounds %struct.cgroup, ptr %24, i32 0, i32 2
  %31 = ptrtoint ptr %level2.i54.i to i32
  call void @__asan_load4_noabort(i32 %31)
  %32 = load i32, ptr %level2.i54.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %30, i32 %32)
  %cmp3.i55.i = icmp slt i32 %30, %32
  br i1 %cmp3.i55.i, label %lor.lhs.false.i56.i.cleanup_crit_edge, label %cgroup_is_descendant.exit63.i

lor.lhs.false.i56.i.cleanup_crit_edge:            ; preds = %lor.lhs.false.i56.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

cgroup_is_descendant.exit63.i:                    ; preds = %lor.lhs.false.i56.i
  %arrayidx.i57.i = getelementptr %struct.cgroup, ptr %src_cgrp, i32 0, i32 37, i32 %32
  %33 = ptrtoint ptr %arrayidx.i57.i to i32
  call void @__asan_load8_noabort(i32 %33)
  %34 = load i64, ptr %arrayidx.i57.i, align 8
  %kn.i.i58.i = getelementptr inbounds %struct.cgroup, ptr %24, i32 0, i32 11
  %35 = ptrtoint ptr %kn.i.i58.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load ptr, ptr %kn.i.i58.i, align 8
  %id.i.i59.i = getelementptr inbounds %struct.kernfs_node, ptr %36, i32 0, i32 10
  %37 = ptrtoint ptr %id.i.i59.i to i32
  call void @__asan_load8_noabort(i32 %37)
  %38 = load i64, ptr %id.i.i59.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %34, i64 %38)
  %cmp5.i60.i = icmp eq i64 %34, %38
  br i1 %cmp5.i60.i, label %lor.lhs.false.i, label %cgroup_is_descendant.exit63.i.cleanup_crit_edge

cgroup_is_descendant.exit63.i.cleanup_crit_edge:  ; preds = %cgroup_is_descendant.exit63.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

lor.lhs.false.i:                                  ; preds = %cgroup_is_descendant.exit63.i
  %39 = ptrtoint ptr %root.i.i to i32
  call void @__asan_load4_noabort(i32 %39)
  %40 = load ptr, ptr %root.i.i, align 4
  %cmp.not.i66.i = icmp eq ptr %40, %26
  br i1 %cmp.not.i66.i, label %lor.lhs.false.i70.i, label %lor.lhs.false.i.cleanup_crit_edge

lor.lhs.false.i.cleanup_crit_edge:                ; preds = %lor.lhs.false.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

lor.lhs.false.i70.i:                              ; preds = %lor.lhs.false.i
  %41 = ptrtoint ptr %level.i.i to i32
  call void @__asan_load4_noabort(i32 %41)
  %42 = load i32, ptr %level.i.i, align 4
  call void @__sanitizer_cov_trace_cmp4(i32 %42, i32 %32)
  %cmp3.i69.i = icmp slt i32 %42, %32
  br i1 %cmp3.i69.i, label %lor.lhs.false.i70.i.cleanup_crit_edge, label %cgroup_is_descendant.exit77.i

lor.lhs.false.i70.i.cleanup_crit_edge:            ; preds = %lor.lhs.false.i70.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

cgroup_is_descendant.exit77.i:                    ; preds = %lor.lhs.false.i70.i
  %arrayidx.i71.i = getelementptr %struct.cgroup, ptr %dst_cgrp, i32 0, i32 37, i32 %32
  %43 = ptrtoint ptr %arrayidx.i71.i to i32
  call void @__asan_load8_noabort(i32 %43)
  %44 = load i64, ptr %arrayidx.i71.i, align 8
  call void @__sanitizer_cov_trace_cmp8(i64 %44, i64 %34)
  %cmp5.i74.i = icmp eq i64 %44, %34
  br i1 %cmp5.i74.i, label %cgroup_is_descendant.exit77.i.if.end_crit_edge, label %cgroup_is_descendant.exit77.i.cleanup_crit_edge

cgroup_is_descendant.exit77.i.cleanup_crit_edge:  ; preds = %cgroup_is_descendant.exit77.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

cgroup_is_descendant.exit77.i.if.end_crit_edge:   ; preds = %cgroup_is_descendant.exit77.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

if.end:                                           ; preds = %cgroup_is_descendant.exit77.i.if.end_crit_edge, %if.end31.i.if.end_crit_edge
  %45 = ptrtoint ptr %root.i.i to i32
  call void @__asan_load4_noabort(i32 %45)
  %46 = load ptr, ptr %root.i.i, align 4
  %cmp.i.i = icmp eq ptr %46, @cgrp_dfl_root
  br i1 %cmp.i.i, label %if.end.i17, label %if.end.cgroup_migrate_vet_dst.exit_crit_edge

if.end.cgroup_migrate_vet_dst.exit_crit_edge:     ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_migrate_vet_dst.exit

if.end.i17:                                       ; preds = %if.end
  %dom_cgrp.i = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 22
  %47 = ptrtoint ptr %dom_cgrp.i to i32
  call void @__asan_load4_noabort(i32 %47)
  %48 = load ptr, ptr %dom_cgrp.i, align 8
  %dom_cgrp.i.i.i = getelementptr inbounds %struct.cgroup, ptr %48, i32 0, i32 22
  %49 = ptrtoint ptr %dom_cgrp.i.i.i to i32
  call void @__asan_load4_noabort(i32 %49)
  %50 = load ptr, ptr %dom_cgrp.i.i.i, align 8
  %cmp.i.not.i.i = icmp eq ptr %50, %48
  br i1 %cmp.i.not.i.i, label %if.end.i17.while.cond.i.i_crit_edge, label %if.end.i17.cleanup_crit_edge

if.end.i17.cleanup_crit_edge:                     ; preds = %if.end.i17
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end.i17.while.cond.i.i_crit_edge:              ; preds = %if.end.i17
  br label %while.cond.i.i

while.cond.i.i:                                   ; preds = %if.end5.i.i.while.cond.i.i_crit_edge, %if.end.i17.while.cond.i.i_crit_edge
  %cgrp.addr.0.i.i = phi ptr [ %52, %if.end5.i.i.while.cond.i.i_crit_edge ], [ %48, %if.end.i17.while.cond.i.i_crit_edge ]
  %parent.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.addr.0.i.i, i32 0, i32 12
  %51 = ptrtoint ptr %parent.i.i.i to i32
  call void @__asan_load4_noabort(i32 %51)
  %52 = load ptr, ptr %parent.i.i.i, align 8
  %tobool.not.i.i18 = icmp eq ptr %52, null
  br i1 %tobool.not.i.i18, label %if.end3.i, label %while.body.i.i

while.body.i.i:                                   ; preds = %while.cond.i.i
  %parent.i.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %52, i32 0, i32 12
  %53 = ptrtoint ptr %parent.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %53)
  %54 = load ptr, ptr %parent.i.i.i.i, align 8
  %tobool.not.i.i.i = icmp eq ptr %54, null
  br i1 %tobool.not.i.i.i, label %while.body.i.i.if.end5.i.i_crit_edge, label %land.lhs.true.i.i

while.body.i.i.if.end5.i.i_crit_edge:             ; preds = %while.body.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i.i

land.lhs.true.i.i:                                ; preds = %while.body.i.i
  %dom_cgrp.i.i.i.i = getelementptr inbounds %struct.cgroup, ptr %52, i32 0, i32 22
  %55 = ptrtoint ptr %dom_cgrp.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %55)
  %56 = load ptr, ptr %dom_cgrp.i.i.i.i, align 8
  %cmp.i.not.i.i.i = icmp eq ptr %56, %52
  br i1 %cmp.i.not.i.i.i, label %if.end.i.i.i, label %land.lhs.true.i.i.if.end5.i.i_crit_edge

land.lhs.true.i.i.if.end5.i.i_crit_edge:          ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i.i

if.end.i.i.i:                                     ; preds = %land.lhs.true.i.i
  %nr_threaded_children.i.i.i = getelementptr inbounds %struct.cgroup, ptr %52, i32 0, i32 10
  %57 = ptrtoint ptr %nr_threaded_children.i.i.i to i32
  call void @__asan_load4_noabort(i32 %57)
  %58 = load i32, ptr %nr_threaded_children.i.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %58)
  %tobool.not.i13.i.i = icmp eq i32 %58, 0
  br i1 %tobool.not.i13.i.i, label %if.end2.i.i.i, label %if.end.i.i.i.cleanup_crit_edge

if.end.i.i.i.cleanup_crit_edge:                   ; preds = %if.end.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end2.i.i.i:                                    ; preds = %if.end.i.i.i
  %nr_populated_csets.i.i.i.i = getelementptr inbounds %struct.cgroup, ptr %52, i32 0, i32 7
  %59 = ptrtoint ptr %nr_populated_csets.i.i.i.i to i32
  call void @__asan_load4_noabort(i32 %59)
  %60 = load i32, ptr %nr_populated_csets.i.i.i.i, align 8
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %60)
  %tobool.i.not.i.i.i = icmp eq i32 %60, 0
  br i1 %tobool.i.not.i.i.i, label %if.end2.i.i.i.if.end5.i.i_crit_edge, label %land.lhs.true.i.i.i

if.end2.i.i.i.if.end5.i.i_crit_edge:              ; preds = %if.end2.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i.i

land.lhs.true.i.i.i:                              ; preds = %if.end2.i.i.i
  %subtree_control.i.i.i = getelementptr inbounds %struct.cgroup, ptr %52, i32 0, i32 14
  %61 = ptrtoint ptr %subtree_control.i.i.i to i32
  call void @__asan_load2_noabort(i32 %61)
  %62 = load i16, ptr %subtree_control.i.i.i, align 4
  %63 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %and11.i.i.i = and i16 %63, %62
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %and11.i.i.i)
  %tobool5.not.i.i.i = icmp eq i16 %and11.i.i.i, 0
  br i1 %tobool5.not.i.i.i, label %land.lhs.true.i.i.i.if.end5.i.i_crit_edge, label %land.lhs.true.i.i.i.cleanup_crit_edge

land.lhs.true.i.i.i.cleanup_crit_edge:            ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

land.lhs.true.i.i.i.if.end5.i.i_crit_edge:        ; preds = %land.lhs.true.i.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end5.i.i

if.end5.i.i:                                      ; preds = %land.lhs.true.i.i.i.if.end5.i.i_crit_edge, %if.end2.i.i.i.if.end5.i.i_crit_edge, %land.lhs.true.i.i.if.end5.i.i_crit_edge, %while.body.i.i.if.end5.i.i_crit_edge
  %dom_cgrp.i14.i.i = getelementptr inbounds %struct.cgroup, ptr %52, i32 0, i32 22
  %64 = ptrtoint ptr %dom_cgrp.i14.i.i to i32
  call void @__asan_load4_noabort(i32 %64)
  %65 = load ptr, ptr %dom_cgrp.i14.i.i, align 8
  %cmp.i15.not.i.i = icmp eq ptr %65, %52
  br i1 %cmp.i15.not.i.i, label %if.end5.i.i.while.cond.i.i_crit_edge, label %if.end5.i.i.cleanup_crit_edge

if.end5.i.i.cleanup_crit_edge:                    ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end5.i.i.while.cond.i.i_crit_edge:             ; preds = %if.end5.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %while.cond.i.i

if.end3.i:                                        ; preds = %while.cond.i.i
  %parent.i.i18.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %dst_cgrp, i32 0, i32 12
  %66 = ptrtoint ptr %parent.i.i18.i to i32
  call void @__asan_load4_noabort(i32 %66)
  %67 = load ptr, ptr %parent.i.i18.i, align 8
  %tobool.not.i19.i = icmp ne ptr %67, null
  %cmp.i.not.i23.i = icmp eq ptr %48, %dst_cgrp
  %or.cond.i = select i1 %tobool.not.i19.i, i1 %cmp.i.not.i23.i, i1 false
  br i1 %or.cond.i, label %if.end3.i.i, label %if.end3.i.cgroup_migrate_vet_dst.exit_crit_edge

if.end3.i.cgroup_migrate_vet_dst.exit_crit_edge:  ; preds = %if.end3.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_migrate_vet_dst.exit

if.end3.i.i:                                      ; preds = %if.end3.i
  %nr_populated_domain_children.i.i = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 8
  %68 = ptrtoint ptr %nr_populated_domain_children.i.i to i32
  call void @__asan_load4_noabort(i32 %68)
  %69 = load i32, ptr %nr_populated_domain_children.i.i, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %69)
  %tobool.not.i24.i = icmp eq i32 %69, 0
  br i1 %tobool.not.i24.i, label %cgroup_can_be_thread_root.exit.i, label %if.end3.i.i.if.end10.i_crit_edge

if.end3.i.i.if.end10.i_crit_edge:                 ; preds = %if.end3.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end10.i

cgroup_can_be_thread_root.exit.i:                 ; preds = %if.end3.i.i
  %subtree_control.i.i = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 14
  %70 = ptrtoint ptr %subtree_control.i.i to i32
  call void @__asan_load2_noabort(i32 %70)
  %71 = load i16, ptr %subtree_control.i.i, align 4
  %conv.i.i = zext i16 %71 to i32
  %72 = load i16, ptr @cgrp_dfl_threaded_ss_mask, align 2
  %conv6.i.i = zext i16 %72 to i32
  %neg.i.i = xor i32 %conv6.i.i, -1
  %and.i.i = and i32 %neg.i.i, %conv.i.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool7.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool7.not.i.i, label %cgroup_can_be_thread_root.exit.i.cgroup_migrate_vet_dst.exit_crit_edge, label %cgroup_can_be_thread_root.exit.i.if.end10.i_crit_edge

cgroup_can_be_thread_root.exit.i.if.end10.i_crit_edge: ; preds = %cgroup_can_be_thread_root.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end10.i

cgroup_can_be_thread_root.exit.i.cgroup_migrate_vet_dst.exit_crit_edge: ; preds = %cgroup_can_be_thread_root.exit.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_migrate_vet_dst.exit

if.end10.i:                                       ; preds = %cgroup_can_be_thread_root.exit.i.if.end10.i_crit_edge, %if.end3.i.i.if.end10.i_crit_edge
  %subtree_control.i = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 14
  %73 = ptrtoint ptr %subtree_control.i to i32
  call void @__asan_load2_noabort(i32 %73)
  %74 = load i16, ptr %subtree_control.i, align 4
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %74)
  %tobool.not.i19 = icmp eq i16 %74, 0
  %..i = select i1 %tobool.not.i19, i32 0, i32 -16
  br label %cgroup_migrate_vet_dst.exit

cgroup_migrate_vet_dst.exit:                      ; preds = %if.end10.i, %cgroup_can_be_thread_root.exit.i.cgroup_migrate_vet_dst.exit_crit_edge, %if.end3.i.cgroup_migrate_vet_dst.exit_crit_edge, %if.end.cgroup_migrate_vet_dst.exit_crit_edge
  %retval.0.i20 = phi i32 [ 0, %if.end.cgroup_migrate_vet_dst.exit_crit_edge ], [ 0, %if.end3.i.cgroup_migrate_vet_dst.exit_crit_edge ], [ 0, %cgroup_can_be_thread_root.exit.i.cgroup_migrate_vet_dst.exit_crit_edge ], [ %..i, %if.end10.i ]
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %retval.0.i20)
  %tobool2.not = icmp ne i32 %retval.0.i20, 0
  %brmerge = or i1 %tobool2.not, %threadgroup
  br i1 %brmerge, label %cgroup_migrate_vet_dst.exit.cleanup_crit_edge, label %land.lhs.true

cgroup_migrate_vet_dst.exit.cleanup_crit_edge:    ; preds = %cgroup_migrate_vet_dst.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

land.lhs.true:                                    ; preds = %cgroup_migrate_vet_dst.exit
  call void @__sanitizer_cov_trace_pc() #28
  %dom_cgrp = getelementptr inbounds %struct.cgroup, ptr %src_cgrp, i32 0, i32 22
  %75 = ptrtoint ptr %dom_cgrp to i32
  call void @__asan_load4_noabort(i32 %75)
  %76 = load ptr, ptr %dom_cgrp, align 8
  %dom_cgrp6 = getelementptr inbounds %struct.cgroup, ptr %dst_cgrp, i32 0, i32 22
  %77 = ptrtoint ptr %dom_cgrp6 to i32
  call void @__asan_load4_noabort(i32 %77)
  %78 = load ptr, ptr %dom_cgrp6, align 8
  %cmp.not = icmp eq ptr %76, %78
  %spec.select = select i1 %cmp.not, i32 0, i32 -95
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true, %cgroup_migrate_vet_dst.exit.cleanup_crit_edge, %if.end5.i.i.cleanup_crit_edge, %land.lhs.true.i.i.i.cleanup_crit_edge, %if.end.i.i.i.cleanup_crit_edge, %if.end.i17.cleanup_crit_edge, %cgroup_is_descendant.exit77.i.cleanup_crit_edge, %lor.lhs.false.i70.i.cleanup_crit_edge, %lor.lhs.false.i.cleanup_crit_edge, %cgroup_is_descendant.exit63.i.cleanup_crit_edge, %lor.lhs.false.i56.i.cleanup_crit_edge, %land.lhs.true.i.cleanup_crit_edge, %cgroup_may_write.exit.i.cleanup_crit_edge, %if.end.i48.i.cleanup_crit_edge
  %retval.0 = phi i32 [ %retval.0.i20, %cgroup_migrate_vet_dst.exit.cleanup_crit_edge ], [ %spec.select, %land.lhs.true ], [ -2, %lor.lhs.false.i.cleanup_crit_edge ], [ -2, %lor.lhs.false.i70.i.cleanup_crit_edge ], [ -2, %land.lhs.true.i.cleanup_crit_edge ], [ -2, %lor.lhs.false.i56.i.cleanup_crit_edge ], [ -12, %if.end.i48.i.cleanup_crit_edge ], [ -2, %cgroup_is_descendant.exit63.i.cleanup_crit_edge ], [ -2, %cgroup_is_descendant.exit77.i.cleanup_crit_edge ], [ %call28.i.i, %cgroup_may_write.exit.i.cleanup_crit_edge ], [ -95, %if.end.i17.cleanup_crit_edge ], [ -95, %land.lhs.true.i.i.i.cleanup_crit_edge ], [ -95, %if.end.i.i.i.cleanup_crit_edge ], [ -95, %if.end5.i.i.cleanup_crit_edge ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @revert_creds(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kernfs_get_inode(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @inode_permission(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @iput(ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cgroup_print_ss_mask(ptr noundef %seq, i16 noundef zeroext %ss_mask) unnamed_addr #0 align 64 {
entry:
  %__ss_mask = alloca i32, align 4
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %__ss_mask) #26
  %conv = zext i16 %ss_mask to i32
  %0 = ptrtoint ptr %__ss_mask to i32
  call void @__asan_store4_noabort(i32 %0)
  store i32 %conv, ptr %__ss_mask, align 4
  %call = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask, i32 noundef 14, i32 noundef 0) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %call)
  %cmp11 = icmp slt i32 %call, 14
  br i1 %cmp11, label %if.end.peel, label %if.end5.critedge

if.end.peel:                                      ; preds = %entry
  %arrayidx.peel = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %call
  %1 = ptrtoint ptr %arrayidx.peel to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %arrayidx.peel, align 4
  %name.peel = getelementptr inbounds %struct.cgroup_subsys, ptr %2, i32 0, i32 20
  %3 = ptrtoint ptr %name.peel to i32
  call void @__asan_load4_noabort(i32 %3)
  %4 = load ptr, ptr %name.peel, align 4
  call void @seq_puts(ptr noundef %seq, ptr noundef %4) #26
  %add.peel = add nsw i32 %call, 1
  %call2.peel = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask, i32 noundef 14, i32 noundef %add.peel) #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 14, i32 %call2.peel)
  %cmp.peel = icmp slt i32 %call2.peel, 14
  br i1 %cmp.peel, label %if.end.peel.if.end_crit_edge, label %if.end.peel.for.end_crit_edge

if.end.peel.for.end_crit_edge:                    ; preds = %if.end.peel
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

if.end.peel.if.end_crit_edge:                     ; preds = %if.end.peel
  br label %if.end

if.end:                                           ; preds = %if.end.if.end_crit_edge, %if.end.peel.if.end_crit_edge
  %ssid.013 = phi i32 [ %call2, %if.end.if.end_crit_edge ], [ %call2.peel, %if.end.peel.if.end_crit_edge ]
  %arrayidx = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %ssid.013
  %5 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %arrayidx, align 4
  call void @seq_putc(ptr noundef %seq, i8 noundef zeroext 32) #26
  %name = getelementptr inbounds %struct.cgroup_subsys, ptr %6, i32 0, i32 20
  %7 = ptrtoint ptr %name to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %name, align 4
  call void @seq_puts(ptr noundef %seq, ptr noundef %8) #26
  %add = add nsw i32 %ssid.013, 1
  %call2 = call i32 @_find_next_bit_be(ptr noundef nonnull %__ss_mask, i32 noundef 14, i32 noundef %add) #26
  %cmp = icmp slt i32 %call2, 14
  br i1 %cmp, label %if.end.if.end_crit_edge, label %if.end.for.end_crit_edge, !llvm.loop !704

if.end.for.end_crit_edge:                         ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.end

if.end.if.end_crit_edge:                          ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end

for.end:                                          ; preds = %if.end.for.end_crit_edge, %if.end.peel.for.end_crit_edge
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__ss_mask) #26
  call void @seq_putc(ptr noundef %seq, i8 noundef zeroext 10) #26
  br label %if.end5

if.end5.critedge:                                 ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %__ss_mask) #26
  br label %if.end5

if.end5:                                          ; preds = %if.end5.critedge, %for.end
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @strsep(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @cgroup_freeze(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @send_sig(i32 noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_clear_bit(i32 noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @cgroup_base_stat_cputime_show(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @psi_trigger_destroy(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @psi_show(ptr noundef, ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc i32 @cgroup_pressure_write(ptr nocapture noundef readonly %of, ptr noundef %buf, i32 noundef %nbytes, i32 noundef %res) unnamed_addr #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %priv = getelementptr inbounds %struct.kernfs_open_file, ptr %of, i32 0, i32 3
  %0 = ptrtoint ptr %priv to i32
  call void @__asan_load4_noabort(i32 %0)
  %1 = load ptr, ptr %priv, align 4
  %2 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load ptr, ptr %of, align 4
  %call = tail call ptr @cgroup_kn_lock_live(ptr noundef %3, i1 noundef zeroext false)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %entry.cleanup_crit_edge, label %if.end

entry.cleanup_crit_edge:                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.end:                                           ; preds = %entry
  %flags.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call, i32 0, i32 7
  %4 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags.i.i, align 4
  %and.i.i = and i32 %5, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i)
  %tobool.not.i.i = icmp eq i32 %and.i.i, 0
  br i1 %tobool.not.i.i, label %if.then.i.i, label %if.end.cgroup_get.exit_crit_edge

if.end.cgroup_get.exit_crit_edge:                 ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_get.exit

if.then.i.i:                                      ; preds = %if.end
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call, i32 0, i32 2
  tail call fastcc void @percpu_ref_get(ptr noundef %refcnt.i.i) #26
  br label %cgroup_get.exit

cgroup_get.exit:                                  ; preds = %if.then.i.i, %if.end.cgroup_get.exit_crit_edge
  %6 = ptrtoint ptr %of to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %of, align 4
  %flags.i.i48 = getelementptr inbounds %struct.kernfs_node, ptr %7, i32 0, i32 11
  %8 = ptrtoint ptr %flags.i.i48 to i32
  call void @__asan_load2_noabort(i32 %8)
  %9 = load i16, ptr %flags.i.i48, align 8
  %10 = and i16 %9, 15
  call void @__sanitizer_cov_trace_const_cmp2(i16 1, i16 %10)
  %cmp.i = icmp eq i16 %10, 1
  br i1 %cmp.i, label %cgroup_get.exit.if.end.i_crit_edge, label %if.else.i

cgroup_get.exit.if.end.i_crit_edge:               ; preds = %cgroup_get.exit
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end.i

if.else.i:                                        ; preds = %cgroup_get.exit
  call void @__sanitizer_cov_trace_pc() #28
  %parent.i = getelementptr inbounds %struct.kernfs_node, ptr %7, i32 0, i32 3
  %11 = ptrtoint ptr %parent.i to i32
  call void @__asan_load4_noabort(i32 %11)
  %12 = load ptr, ptr %parent.i, align 4
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %cgroup_get.exit.if.end.i_crit_edge
  %kn.pn.i = phi ptr [ %12, %if.else.i ], [ %7, %cgroup_get.exit.if.end.i_crit_edge ]
  %cgrp.0.in.i = getelementptr inbounds %struct.kernfs_node, ptr %kn.pn.i, i32 0, i32 9
  %13 = ptrtoint ptr %cgrp.0.in.i to i32
  call void @__asan_load4_noabort(i32 %13)
  %cgrp.0.i = load ptr, ptr %cgrp.0.in.i, align 8
  tail call void @mutex_unlock(ptr noundef nonnull @cgroup_mutex) #26
  tail call void @kernfs_unbreak_active_protection(ptr noundef %7) #26
  %flags.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 7
  %14 = ptrtoint ptr %flags.i.i.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags.i.i.i, align 4
  %and.i.i.i = and i32 %15, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool.not.i.i.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool.not.i.i.i, label %if.then.i.i.i, label %if.end.i.cgroup_kn_unlock.exit_crit_edge

if.end.i.cgroup_kn_unlock.exit_crit_edge:         ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_kn_unlock.exit

if.then.i.i.i:                                    ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i.i = getelementptr inbounds %struct.cgroup_subsys_state, ptr %cgrp.0.i, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i.i) #26
  br label %cgroup_kn_unlock.exit

cgroup_kn_unlock.exit:                            ; preds = %if.then.i.i.i, %if.end.i.cgroup_kn_unlock.exit_crit_edge
  %psi2 = getelementptr inbounds %struct.cgroup_file_ctx, ptr %1, i32 0, i32 1
  %16 = ptrtoint ptr %psi2 to i32
  call void @__asan_load4_noabort(i32 %16)
  %17 = load ptr, ptr %psi2, align 4
  %tobool3.not = icmp eq ptr %17, null
  br i1 %tobool3.not, label %if.end5, label %if.then4

if.then4:                                         ; preds = %cgroup_kn_unlock.exit
  %18 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %18)
  %19 = load i32, ptr %flags.i.i, align 4
  %and.i.i50 = and i32 %19, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i50)
  %tobool.not.i.i51 = icmp eq i32 %and.i.i50, 0
  br i1 %tobool.not.i.i51, label %if.then.i.i53, label %if.then4.cleanup_crit_edge

if.then4.cleanup_crit_edge:                       ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then.i.i53:                                    ; preds = %if.then4
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i52 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i52) #26
  br label %cleanup

if.end5:                                          ; preds = %cgroup_kn_unlock.exit
  %kn.i = getelementptr inbounds %struct.cgroup, ptr %call, i32 0, i32 11
  %20 = ptrtoint ptr %kn.i to i32
  call void @__asan_load4_noabort(i32 %20)
  %21 = load ptr, ptr %kn.i, align 8
  %id.i.i = getelementptr inbounds %struct.kernfs_node, ptr %21, i32 0, i32 10
  %22 = ptrtoint ptr %id.i.i to i32
  call void @__asan_load8_noabort(i32 %22)
  %23 = load i64, ptr %id.i.i, align 8
  %conv.i.i.i = trunc i64 %23 to i32
  call void @__sanitizer_cov_trace_const_cmp4(i32 1, i32 %conv.i.i.i)
  %cmp = icmp eq i32 %conv.i.i.i, 1
  %psi7 = getelementptr inbounds %struct.cgroup, ptr %call, i32 0, i32 33
  %spec.select = select i1 %cmp, ptr @psi_system, ptr %psi7
  %call8 = tail call ptr @psi_trigger_create(ptr noundef %spec.select, ptr noundef %buf, i32 noundef %nbytes, i32 noundef %res) #26
  %cmp.i54 = icmp ugt ptr %call8, inttoptr (i32 -4096 to ptr)
  br i1 %cmp.i54, label %if.then10, label %do.end17

if.then10:                                        ; preds = %if.end5
  %24 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %24)
  %25 = load i32, ptr %flags.i.i, align 4
  %and.i.i56 = and i32 %25, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i56)
  %tobool.not.i.i57 = icmp eq i32 %and.i.i56, 0
  br i1 %tobool.not.i.i57, label %if.then.i.i59, label %if.then10.cgroup_put.exit60_crit_edge

if.then10.cgroup_put.exit60_crit_edge:            ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #28
  br label %cgroup_put.exit60

if.then.i.i59:                                    ; preds = %if.then10
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i58 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i58) #26
  br label %cgroup_put.exit60

cgroup_put.exit60:                                ; preds = %if.then.i.i59, %if.then10.cgroup_put.exit60_crit_edge
  %26 = ptrtoint ptr %call8 to i32
  br label %cleanup

do.end17:                                         ; preds = %if.end5
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !706
  %27 = ptrtoint ptr %psi2 to i32
  call void @__asan_store4_noabort(i32 %27)
  store volatile ptr %call8, ptr %psi2, align 4
  %28 = ptrtoint ptr %flags.i.i to i32
  call void @__asan_load4_noabort(i32 %28)
  %29 = load i32, ptr %flags.i.i, align 4
  %and.i.i62 = and i32 %29, 1
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i62)
  %tobool.not.i.i63 = icmp eq i32 %and.i.i62, 0
  br i1 %tobool.not.i.i63, label %if.then.i.i65, label %do.end17.cleanup_crit_edge

do.end17.cleanup_crit_edge:                       ; preds = %do.end17
  call void @__sanitizer_cov_trace_pc() #28
  br label %cleanup

if.then.i.i65:                                    ; preds = %do.end17
  call void @__sanitizer_cov_trace_pc() #28
  %refcnt.i.i64 = getelementptr inbounds %struct.cgroup_subsys_state, ptr %call, i32 0, i32 2
  tail call fastcc void @percpu_ref_put(ptr noundef %refcnt.i.i64) #26
  br label %cleanup

cleanup:                                          ; preds = %if.then.i.i65, %do.end17.cleanup_crit_edge, %cgroup_put.exit60, %if.then.i.i53, %if.then4.cleanup_crit_edge, %entry.cleanup_crit_edge
  %retval.0 = phi i32 [ %26, %cgroup_put.exit60 ], [ -19, %entry.cleanup_crit_edge ], [ -16, %if.then4.cleanup_crit_edge ], [ -16, %if.then.i.i53 ], [ %nbytes, %do.end17.cleanup_crit_edge ], [ %nbytes, %if.then.i.i65 ]
  ret i32 %retval.0
}

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @psi_trigger_create(ptr noundef, ptr noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @psi_trigger_poll(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @idr_preload(i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @idr_alloc(ptr noundef, ptr noundef, i32 noundef, i32 noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @local_lock_release(ptr noundef %l) #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @oops_in_progress to i32))
  %0 = load i32, ptr @oops_in_progress, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %0)
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %land.lhs.true, label %entry.if.end35_crit_edge

entry.if.end35_crit_edge:                         ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end35

land.lhs.true:                                    ; preds = %entry
  %owner = getelementptr inbounds %struct.local_lock_t, ptr %l, i32 0, i32 1
  %1 = ptrtoint ptr %owner to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %owner, align 4
  %3 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i = and i32 %3, -16384
  %4 = inttoptr i32 %and.i to ptr
  %task = getelementptr inbounds %struct.thread_info, ptr %4, i32 0, i32 2
  %5 = ptrtoint ptr %task to i32
  call void @__asan_load4_noabort(i32 %5)
  %6 = load ptr, ptr %task, align 8
  %cmp.not = icmp eq ptr %2, %6
  br i1 %cmp.not, label %land.lhs.true.if.end35_crit_edge, label %do.end, !prof !636

land.lhs.true.if.end35_crit_edge:                 ; preds = %land.lhs.true
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end35

do.end:                                           ; preds = %land.lhs.true
  %call3 = tail call i32 @debug_locks_off() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call3)
  %tobool4.not = icmp eq i32 %call3, 0
  br i1 %tobool4.not, label %do.end.if.end35_crit_edge, label %land.lhs.true5

do.end.if.end35_crit_edge:                        ; preds = %do.end
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end35

land.lhs.true5:                                   ; preds = %do.end
  call void @__asan_load4_noabort(i32 ptrtoint (ptr @debug_locks_silent to i32))
  %7 = load i32, ptr @debug_locks_silent, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %7)
  %tobool6.not = icmp eq i32 %7, 0
  br i1 %tobool6.not, label %do.end19, label %land.lhs.true5.if.end35_crit_edge

land.lhs.true5.if.end35_crit_edge:                ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end35

do.end19:                                         ; preds = %land.lhs.true5
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.118, i32 noundef 36, i32 noundef 9, ptr noundef nonnull @.str.119, ptr noundef nonnull @.str.120) #26
  br label %if.end35

if.end35:                                         ; preds = %do.end19, %land.lhs.true5.if.end35_crit_edge, %do.end.if.end35_crit_edge, %land.lhs.true.if.end35_crit_edge, %entry.if.end35_crit_edge
  %owner37 = getelementptr inbounds %struct.local_lock_t, ptr %l, i32 0, i32 1
  %8 = ptrtoint ptr %owner37 to i32
  call void @__asan_store4_noabort(i32 %8)
  store ptr null, ptr %owner37, align 4
  br label %__here

__here:                                           ; preds = %if.end35
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @lock_release(ptr noundef %l, i32 noundef ptrtoint (ptr blockaddress(@local_lock_release, %__here) to i32)) #26
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @debug_locks_off() local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @cpuset_init_fs_context(ptr nocapture noundef %fc) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %call = tail call noalias ptr @kstrdup(ptr noundef nonnull @.str.121, i32 noundef 1051840) #26
  %call1 = tail call i32 @cgroup_init_fs_context(ptr noundef %fc)
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1)
  %tobool.not = icmp eq i32 %call1, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @kfree(ptr noundef %call) #26
  br label %cleanup

if.end:                                           ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  %0 = ptrtoint ptr %fc to i32
  call void @__asan_store4_noabort(i32 %0)
  store ptr @cpuset_fs_context_ops, ptr %fc, align 4
  %fs_private.i = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 3
  %1 = ptrtoint ptr %fs_private.i to i32
  call void @__asan_load4_noabort(i32 %1)
  %2 = load ptr, ptr %fs_private.i, align 4
  %subsys_mask = getelementptr inbounds %struct.cgroup_fs_context, ptr %2, i32 0, i32 7
  %3 = ptrtoint ptr %subsys_mask to i32
  call void @__asan_store2_noabort(i32 %3)
  store i16 1, ptr %subsys_mask, align 4
  %flags = getelementptr inbounds %struct.cgroup_fs_context, ptr %2, i32 0, i32 3
  %4 = ptrtoint ptr %flags to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load i32, ptr %flags, align 4
  %or = or i32 %5, 2
  store i32 %or, ptr %flags, align 4
  %release_agent = getelementptr inbounds %struct.cgroup_fs_context, ptr %2, i32 0, i32 9
  %6 = ptrtoint ptr %release_agent to i32
  call void @__asan_store4_noabort(i32 %6)
  store ptr %call, ptr %release_agent, align 4
  %call3 = tail call ptr @get_filesystem(ptr noundef nonnull @cgroup_fs_type) #26
  %fs_type = getelementptr inbounds %struct.fs_context, ptr %fc, i32 0, i32 2
  %7 = ptrtoint ptr %fs_type to i32
  call void @__asan_load4_noabort(i32 %7)
  %8 = load ptr, ptr %fs_type, align 4
  tail call void @put_filesystem(ptr noundef %8) #26
  %9 = ptrtoint ptr %fs_type to i32
  call void @__asan_store4_noabort(i32 %9)
  store ptr @cgroup_fs_type, ptr %fs_type, align 4
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  ret i32 %call1
}

; Function Attrs: null_pointer_is_valid
declare dso_local noalias ptr @kstrdup(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @get_filesystem(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @put_filesystem(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @alloc_workqueue(ptr noundef, i32 noundef, i32 noundef, ...) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal fastcc void @cgroup_threadgroup_change_end() unnamed_addr #5 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  %0 = tail call ptr @llvm.returnaddress(i32 0) #26
  %1 = ptrtoint ptr %0 to i32
  tail call void @lock_release(ptr noundef getelementptr inbounds (%struct.percpu_rw_semaphore, ptr @cgroup_threadgroup_rwsem, i32 0, i32 5), i32 noundef %1) #26
  %2 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i.i = and i32 %2, -16384
  %3 = inttoptr i32 %and.i.i.i.i to ptr
  %preempt_count.i.i.i = getelementptr inbounds %struct.thread_info, ptr %3, i32 0, i32 1
  %4 = ptrtoint ptr %preempt_count.i.i.i to i32
  call void @__asan_load4_noabort(i32 %4)
  %5 = load volatile i32, ptr %preempt_count.i.i.i, align 4
  %add.i.i = add i32 %5, 1
  store volatile i32 %add.i.i, ptr %preempt_count.i.i.i, align 4
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !707
  %call.i.i = tail call i32 @rcu_read_lock_any_held() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call.i.i)
  %tobool.not.i.i = icmp eq i32 %call.i.i, 0
  br i1 %tobool.not.i.i, label %land.lhs.true.i.i, label %entry.rcu_sync_is_idle.exit.i_crit_edge

entry.rcu_sync_is_idle.exit.i_crit_edge:          ; preds = %entry
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_sync_is_idle.exit.i

land.lhs.true.i.i:                                ; preds = %entry
  %call1.i.i = tail call i32 @debug_lockdep_rcu_enabled() #26
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %call1.i.i)
  %tobool2.not.i.i = icmp eq i32 %call1.i.i, 0
  br i1 %tobool2.not.i.i, label %land.lhs.true.i.i.rcu_sync_is_idle.exit.i_crit_edge, label %land.lhs.true3.i.i

land.lhs.true.i.i.rcu_sync_is_idle.exit.i_crit_edge: ; preds = %land.lhs.true.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_sync_is_idle.exit.i

land.lhs.true3.i.i:                               ; preds = %land.lhs.true.i.i
  %.b1.i.i = load i1, ptr @rcu_sync_is_idle.__warned, align 1
  br i1 %.b1.i.i, label %land.lhs.true3.i.i.rcu_sync_is_idle.exit.i_crit_edge, label %if.then.i.i

land.lhs.true3.i.i.rcu_sync_is_idle.exit.i_crit_edge: ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %rcu_sync_is_idle.exit.i

if.then.i.i:                                      ; preds = %land.lhs.true3.i.i
  call void @__sanitizer_cov_trace_pc() #28
  store i1 true, ptr @rcu_sync_is_idle.__warned, align 1
  tail call void @lockdep_rcu_suspicious(ptr noundef nonnull @.str.124, i32 noundef 35, ptr noundef nonnull @.str.125) #26
  br label %rcu_sync_is_idle.exit.i

rcu_sync_is_idle.exit.i:                          ; preds = %if.then.i.i, %land.lhs.true3.i.i.rcu_sync_is_idle.exit.i_crit_edge, %land.lhs.true.i.i.rcu_sync_is_idle.exit.i_crit_edge, %entry.rcu_sync_is_idle.exit.i_crit_edge
  %6 = load volatile i32, ptr @cgroup_threadgroup_rwsem, align 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %6)
  %tobool7.not.i.i = icmp eq i32 %6, 0
  br i1 %tobool7.not.i.i, label %do.body3.i, label %do.end49.i, !prof !636

do.body3.i:                                       ; preds = %rcu_sync_is_idle.exit.i
  %7 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #26, !srcloc !641
  %8 = load ptr, ptr getelementptr inbounds (%struct.percpu_rw_semaphore, ptr @cgroup_threadgroup_rwsem, i32 0, i32 1), align 4
  %9 = ptrtoint ptr %8 to i32
  %10 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i = and i32 %10, -16384
  %11 = inttoptr i32 %and.i.i to ptr
  %cpu.i = getelementptr inbounds %struct.thread_info, ptr %11, i32 0, i32 3
  %12 = ptrtoint ptr %cpu.i to i32
  call void @__asan_load4_noabort(i32 %12)
  %13 = load i32, ptr %cpu.i, align 4
  %arrayidx.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %13
  %14 = ptrtoint ptr %arrayidx.i to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %arrayidx.i, align 4
  %add.i = add i32 %15, %9
  %16 = inttoptr i32 %add.i to ptr
  %17 = ptrtoint ptr %16 to i32
  call void @__asan_load4_noabort(i32 %17)
  %18 = load i32, ptr %16, align 4
  %add17.i = add i32 %18, -1
  store i32 %add17.i, ptr %16, align 4
  %19 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #26, !srcloc !642
  %and.i.i.i = and i32 %19, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i.i)
  %tobool28.not.i = icmp eq i32 %and.i.i.i, 0
  br i1 %tobool28.not.i, label %if.then37.i, label %do.body3.i.do.end39.i_crit_edge, !prof !637

do.body3.i.do.end39.i_crit_edge:                  ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end39.i

if.then37.i:                                      ; preds = %do.body3.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @warn_bogus_irq_restore() #26
  br label %do.end39.i

do.end39.i:                                       ; preds = %if.then37.i, %do.body3.i.do.end39.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %7) #26, !srcloc !643
  br label %percpu_up_read.exit

do.end49.i:                                       ; preds = %rcu_sync_is_idle.exit.i
  tail call void asm sideeffect "mcr p15, 0, $0, c7, c10, 5", "r,~{memory}"(i32 0) #26, !srcloc !708
  %20 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ arch_local_irq_save\0A\09cpsid\09i", "=r,~{memory},~{cc}"() #26, !srcloc !641
  %21 = load ptr, ptr getelementptr inbounds (%struct.percpu_rw_semaphore, ptr @cgroup_threadgroup_rwsem, i32 0, i32 1), align 4
  %22 = ptrtoint ptr %21 to i32
  %23 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i3.i = and i32 %23, -16384
  %24 = inttoptr i32 %and.i3.i to ptr
  %cpu78.i = getelementptr inbounds %struct.thread_info, ptr %24, i32 0, i32 3
  %25 = ptrtoint ptr %cpu78.i to i32
  call void @__asan_load4_noabort(i32 %25)
  %26 = load i32, ptr %cpu78.i, align 4
  %arrayidx79.i = getelementptr [4 x i32], ptr @__per_cpu_offset, i32 0, i32 %26
  %27 = ptrtoint ptr %arrayidx79.i to i32
  call void @__asan_load4_noabort(i32 %27)
  %28 = load i32, ptr %arrayidx79.i, align 4
  %add80.i = add i32 %28, %22
  %29 = inttoptr i32 %add80.i to ptr
  %30 = ptrtoint ptr %29 to i32
  call void @__asan_load4_noabort(i32 %30)
  %31 = load i32, ptr %29, align 4
  %add81.i = add i32 %31, -1
  store i32 %add81.i, ptr %29, align 4
  %32 = tail call i32 asm sideeffect "\09mrs\09$0, cpsr\09@ local_save_flags", "=r,~{memory},~{cc}"() #26, !srcloc !642
  %and.i.i4.i = and i32 %32, 128
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i.i4.i)
  %tobool92.not.i = icmp eq i32 %and.i.i4.i, 0
  br i1 %tobool92.not.i, label %if.then101.i, label %do.end49.i.do.end104.i_crit_edge, !prof !637

do.end49.i.do.end104.i_crit_edge:                 ; preds = %do.end49.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %do.end104.i

if.then101.i:                                     ; preds = %do.end49.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void @warn_bogus_irq_restore() #26
  br label %do.end104.i

do.end104.i:                                      ; preds = %if.then101.i, %do.end49.i.do.end104.i_crit_edge
  tail call void asm sideeffect "\09msr\09cpsr_c, $0\09@ local_irq_restore", "r,~{memory},~{cc}"(i32 %20) #26, !srcloc !643
  %call111.i = tail call i32 @rcuwait_wake_up(ptr noundef getelementptr inbounds (%struct.percpu_rw_semaphore, ptr @cgroup_threadgroup_rwsem, i32 0, i32 2)) #26
  br label %percpu_up_read.exit

percpu_up_read.exit:                              ; preds = %do.end104.i, %do.end39.i
  tail call void asm sideeffect "", "~{memory}"() #26, !srcloc !709
  %33 = tail call i32 @llvm.read_register.i32(metadata !626) #26
  %and.i.i.i1.i = and i32 %33, -16384
  %34 = inttoptr i32 %and.i.i.i1.i to ptr
  %preempt_count.i.i2.i = getelementptr inbounds %struct.thread_info, ptr %34, i32 0, i32 1
  %35 = ptrtoint ptr %preempt_count.i.i2.i to i32
  call void @__asan_load4_noabort(i32 %35)
  %36 = load volatile i32, ptr %preempt_count.i.i2.i, align 4
  %sub.i.i = add i32 %36, -1
  store volatile i32 %sub.i.i, ptr %preempt_count.i.i2.i, align 4
  ret void
}

; Function Attrs: null_pointer_is_valid
declare dso_local void @__might_sleep(ptr noundef, i32 noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local zeroext i1 @__percpu_down_read(ptr noundef, i1 noundef zeroext) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @rcuwait_wake_up(ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @cgroup_move_task(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_lock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local void @_raw_spin_unlock(ptr noundef) local_unnamed_addr #2 section ".spinlock.text"

; Function Attrs: null_pointer_is_valid
declare dso_local ptr @kernfs_walk_and_get_ns(ptr noundef, ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: null_pointer_is_valid
declare dso_local i32 @sysfs_create_group(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync)
define internal i32 @delegate_show(ptr nocapture noundef readnone %kobj, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #0 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  br label %land.rhs.i

land.rhs.i:                                       ; preds = %for.inc.i.land.rhs.i_crit_edge, %entry
  %cft.064.i = phi ptr [ @cgroup_base_files, %entry ], [ %incdec.ptr.i, %for.inc.i.land.rhs.i_crit_edge ]
  %ret.062.i = phi i32 [ 0, %entry ], [ %ret.2.i, %for.inc.i.land.rhs.i_crit_edge ]
  %0 = ptrtoint ptr %cft.064.i to i32
  call void @__asan_load1_noabort(i32 %0)
  %1 = load i8, ptr %cft.064.i, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %1)
  %cmp.not.i = icmp eq i8 %1, 0
  br i1 %cmp.not.i, label %land.rhs.i.land.rhs.preheader_crit_edge, label %for.body.i

land.rhs.i.land.rhs.preheader_crit_edge:          ; preds = %land.rhs.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs.preheader

for.body.i:                                       ; preds = %land.rhs.i
  %flags.i = getelementptr inbounds %struct.cftype, ptr %cft.064.i, i32 0, i32 3
  %2 = ptrtoint ptr %flags.i to i32
  call void @__asan_load4_noabort(i32 %2)
  %3 = load i32, ptr %flags.i, align 4
  %and.i = and i32 %3, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i)
  %tobool2.not.i = icmp eq i32 %and.i, 0
  br i1 %tobool2.not.i, label %for.body.i.for.inc.i_crit_edge, label %if.end.i

for.body.i.for.inc.i_crit_edge:                   ; preds = %for.body.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.i

if.end.i:                                         ; preds = %for.body.i
  %and4.i = and i32 %3, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i)
  %tobool5.not.i = icmp eq i32 %and4.i, 0
  br i1 %tobool5.not.i, label %if.end.i.if.end7.i_crit_edge, label %land.lhs.true.i

if.end.i.if.end7.i_crit_edge:                     ; preds = %if.end.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end7.i

land.lhs.true.i:                                  ; preds = %if.end.i
  %4 = load i16, ptr @cgroup_feature_disable_mask, align 2
  %5 = and i16 %4, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %5)
  %cmp.i.i = icmp eq i16 %5, 0
  br i1 %cmp.i.i, label %land.lhs.true.i.if.end7.i_crit_edge, label %land.lhs.true.i.for.inc.i_crit_edge

land.lhs.true.i.for.inc.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.i

land.lhs.true.i.if.end7.i_crit_edge:              ; preds = %land.lhs.true.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.end7.i

if.end7.i:                                        ; preds = %land.lhs.true.i.if.end7.i_crit_edge, %if.end.i.if.end7.i_crit_edge
  %add.ptr12.i = getelementptr i8, ptr %buf, i32 %ret.062.i
  %sub13.i = sub i32 4096, %ret.062.i
  %call15.i = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %add.ptr12.i, i32 noundef %sub13.i, ptr noundef nonnull @.str.136, ptr noundef nonnull %cft.064.i) #26
  %add16.i = add i32 %call15.i, %ret.062.i
  call void @__sanitizer_cov_trace_const_cmp4(i32 4096, i32 %add16.i)
  %cmp17.not.i = icmp slt i32 %add16.i, 4096
  br i1 %cmp17.not.i, label %if.end7.i.for.inc.i_crit_edge, label %do.end.i, !prof !636

if.end7.i.for.inc.i_crit_edge:                    ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.i

do.end.i:                                         ; preds = %if.end7.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 6729, i32 noundef 9, ptr noundef null) #26
  br label %land.rhs.preheader

for.inc.i:                                        ; preds = %if.end7.i.for.inc.i_crit_edge, %land.lhs.true.i.for.inc.i_crit_edge, %for.body.i.for.inc.i_crit_edge
  %ret.2.i = phi i32 [ %ret.062.i, %land.lhs.true.i.for.inc.i_crit_edge ], [ %ret.062.i, %for.body.i.for.inc.i_crit_edge ], [ %add16.i, %if.end7.i.for.inc.i_crit_edge ]
  %incdec.ptr.i = getelementptr %struct.cftype, ptr %cft.064.i, i32 1
  %tobool.not.i = icmp eq ptr %incdec.ptr.i, null
  br i1 %tobool.not.i, label %for.inc.i.land.rhs.preheader_crit_edge, label %for.inc.i.land.rhs.i_crit_edge

for.inc.i.land.rhs.i_crit_edge:                   ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs.i

for.inc.i.land.rhs.preheader_crit_edge:           ; preds = %for.inc.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs.preheader

land.rhs.preheader:                               ; preds = %for.inc.i.land.rhs.preheader_crit_edge, %do.end.i, %land.rhs.i.land.rhs.preheader_crit_edge
  %ret.039.ph = phi i32 [ %add16.i, %do.end.i ], [ %ret.062.i, %land.rhs.i.land.rhs.preheader_crit_edge ], [ %ret.2.i, %for.inc.i.land.rhs.preheader_crit_edge ]
  br label %land.rhs

land.rhs:                                         ; preds = %show_delegatable_files.exit37.land.rhs_crit_edge, %land.rhs.preheader
  %ret.039 = phi i32 [ %add, %show_delegatable_files.exit37.land.rhs_crit_edge ], [ %ret.039.ph, %land.rhs.preheader ]
  %ssid.038 = phi i32 [ %inc, %show_delegatable_files.exit37.land.rhs_crit_edge ], [ 0, %land.rhs.preheader ]
  %arrayidx = getelementptr [14 x ptr], ptr @cgroup_subsys, i32 0, i32 %ssid.038
  %6 = ptrtoint ptr %arrayidx to i32
  call void @__asan_load4_noabort(i32 %6)
  %7 = load ptr, ptr %arrayidx, align 4
  %dfl_cftypes = getelementptr inbounds %struct.cgroup_subsys, ptr %7, i32 0, i32 25
  %8 = ptrtoint ptr %dfl_cftypes to i32
  call void @__asan_load4_noabort(i32 %8)
  %9 = load ptr, ptr %dfl_cftypes, align 4
  %add.ptr = getelementptr i8, ptr %buf, i32 %ret.039
  %sub1 = sub i32 4096, %ret.039
  %arrayidx2 = getelementptr [14 x ptr], ptr @cgroup_subsys_name, i32 0, i32 %ssid.038
  %10 = ptrtoint ptr %arrayidx2 to i32
  call void @__asan_load4_noabort(i32 %10)
  %11 = load ptr, ptr %arrayidx2, align 4
  %tobool.not61.i = icmp eq ptr %9, null
  br i1 %tobool.not61.i, label %land.rhs.show_delegatable_files.exit37_crit_edge, label %land.rhs.land.rhs.i15_crit_edge

land.rhs.land.rhs.i15_crit_edge:                  ; preds = %land.rhs
  br label %land.rhs.i15

land.rhs.show_delegatable_files.exit37_crit_edge: ; preds = %land.rhs
  call void @__sanitizer_cov_trace_pc() #28
  br label %show_delegatable_files.exit37

land.rhs.i15:                                     ; preds = %for.inc.i35.land.rhs.i15_crit_edge, %land.rhs.land.rhs.i15_crit_edge
  %cft.064.i12 = phi ptr [ %incdec.ptr.i33, %for.inc.i35.land.rhs.i15_crit_edge ], [ %9, %land.rhs.land.rhs.i15_crit_edge ]
  %ret.062.i13 = phi i32 [ %ret.2.i32, %for.inc.i35.land.rhs.i15_crit_edge ], [ 0, %land.rhs.land.rhs.i15_crit_edge ]
  %12 = ptrtoint ptr %cft.064.i12 to i32
  call void @__asan_load1_noabort(i32 %12)
  %13 = load i8, ptr %cft.064.i12, align 4
  call void @__sanitizer_cov_trace_const_cmp1(i8 0, i8 %13)
  %cmp.not.i14 = icmp eq i8 %13, 0
  br i1 %cmp.not.i14, label %land.rhs.i15.show_delegatable_files.exit37_crit_edge, label %for.body.i19

land.rhs.i15.show_delegatable_files.exit37_crit_edge: ; preds = %land.rhs.i15
  call void @__sanitizer_cov_trace_pc() #28
  br label %show_delegatable_files.exit37

for.body.i19:                                     ; preds = %land.rhs.i15
  %flags.i16 = getelementptr inbounds %struct.cftype, ptr %cft.064.i12, i32 0, i32 3
  %14 = ptrtoint ptr %flags.i16 to i32
  call void @__asan_load4_noabort(i32 %14)
  %15 = load i32, ptr %flags.i16, align 4
  %and.i17 = and i32 %15, 4
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and.i17)
  %tobool2.not.i18 = icmp eq i32 %and.i17, 0
  br i1 %tobool2.not.i18, label %for.body.i19.for.inc.i35_crit_edge, label %if.end.i22

for.body.i19.for.inc.i35_crit_edge:               ; preds = %for.body.i19
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.i35

if.end.i22:                                       ; preds = %for.body.i19
  %and4.i20 = and i32 %15, 64
  call void @__sanitizer_cov_trace_const_cmp4(i32 0, i32 %and4.i20)
  %tobool5.not.i21 = icmp eq i32 %and4.i20, 0
  br i1 %tobool5.not.i21, label %if.end.i22.if.then9.i_crit_edge, label %land.lhs.true.i24

if.end.i22.if.then9.i_crit_edge:                  ; preds = %if.end.i22
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then9.i

land.lhs.true.i24:                                ; preds = %if.end.i22
  %16 = load i16, ptr @cgroup_feature_disable_mask, align 2
  %17 = and i16 %16, 1
  call void @__sanitizer_cov_trace_const_cmp2(i16 0, i16 %17)
  %cmp.i.i23 = icmp eq i16 %17, 0
  br i1 %cmp.i.i23, label %land.lhs.true.i24.if.then9.i_crit_edge, label %land.lhs.true.i24.for.inc.i35_crit_edge

land.lhs.true.i24.for.inc.i35_crit_edge:          ; preds = %land.lhs.true.i24
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.i35

land.lhs.true.i24.if.then9.i_crit_edge:           ; preds = %land.lhs.true.i24
  call void @__sanitizer_cov_trace_pc() #28
  br label %if.then9.i

if.then9.i:                                       ; preds = %land.lhs.true.i24.if.then9.i_crit_edge, %if.end.i22.if.then9.i_crit_edge
  %add.ptr.i = getelementptr i8, ptr %add.ptr, i32 %ret.062.i13
  %sub.i = sub i32 %sub1, %ret.062.i13
  %call10.i = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %add.ptr.i, i32 noundef %sub.i, ptr noundef nonnull @.str.135, ptr noundef nonnull %11) #26
  %add.i = add i32 %call10.i, %ret.062.i13
  %add.ptr12.i26 = getelementptr i8, ptr %add.ptr, i32 %add.i
  %sub13.i27 = sub i32 %sub1, %add.i
  %call15.i28 = tail call i32 (ptr, i32, ptr, ...) @snprintf(ptr noundef %add.ptr12.i26, i32 noundef %sub13.i27, ptr noundef nonnull @.str.136, ptr noundef nonnull %cft.064.i12) #26
  %add16.i29 = add i32 %call15.i28, %add.i
  call void @__sanitizer_cov_trace_cmp4(i32 %add16.i29, i32 %sub1)
  %cmp17.not.i30 = icmp slt i32 %add16.i29, %sub1
  br i1 %cmp17.not.i30, label %if.then9.i.for.inc.i35_crit_edge, label %do.end.i31, !prof !636

if.then9.i.for.inc.i35_crit_edge:                 ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #28
  br label %for.inc.i35

do.end.i31:                                       ; preds = %if.then9.i
  call void @__sanitizer_cov_trace_pc() #28
  tail call void (ptr, i32, i32, ptr, ...) @warn_slowpath_fmt(ptr noundef nonnull @.str.7, i32 noundef 6729, i32 noundef 9, ptr noundef null) #26
  br label %show_delegatable_files.exit37

for.inc.i35:                                      ; preds = %if.then9.i.for.inc.i35_crit_edge, %land.lhs.true.i24.for.inc.i35_crit_edge, %for.body.i19.for.inc.i35_crit_edge
  %ret.2.i32 = phi i32 [ %ret.062.i13, %land.lhs.true.i24.for.inc.i35_crit_edge ], [ %ret.062.i13, %for.body.i19.for.inc.i35_crit_edge ], [ %add16.i29, %if.then9.i.for.inc.i35_crit_edge ]
  %incdec.ptr.i33 = getelementptr %struct.cftype, ptr %cft.064.i12, i32 1
  %tobool.not.i34 = icmp eq ptr %incdec.ptr.i33, null
  br i1 %tobool.not.i34, label %for.inc.i35.show_delegatable_files.exit37_crit_edge, label %for.inc.i35.land.rhs.i15_crit_edge

for.inc.i35.land.rhs.i15_crit_edge:               ; preds = %for.inc.i35
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs.i15

for.inc.i35.show_delegatable_files.exit37_crit_edge: ; preds = %for.inc.i35
  call void @__sanitizer_cov_trace_pc() #28
  br label %show_delegatable_files.exit37

show_delegatable_files.exit37:                    ; preds = %for.inc.i35.show_delegatable_files.exit37_crit_edge, %do.end.i31, %land.rhs.i15.show_delegatable_files.exit37_crit_edge, %land.rhs.show_delegatable_files.exit37_crit_edge
  %ret.3.i36 = phi i32 [ %add16.i29, %do.end.i31 ], [ 0, %land.rhs.show_delegatable_files.exit37_crit_edge ], [ %ret.2.i32, %for.inc.i35.show_delegatable_files.exit37_crit_edge ], [ %ret.062.i13, %land.rhs.i15.show_delegatable_files.exit37_crit_edge ]
  %add = add i32 %ret.3.i36, %ret.039
  %inc = add nuw nsw i32 %ssid.038, 1
  %exitcond.not = icmp eq i32 %inc, 14
  br i1 %exitcond.not, label %for.end, label %show_delegatable_files.exit37.land.rhs_crit_edge

show_delegatable_files.exit37.land.rhs_crit_edge: ; preds = %show_delegatable_files.exit37
  call void @__sanitizer_cov_trace_pc() #28
  br label %land.rhs

for.end:                                          ; preds = %show_delegatable_files.exit37
  call void @__sanitizer_cov_trace_pc() #28
  ret i32 %add
}

; Function Attrs: argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync)
define internal i32 @features_show(ptr nocapture noundef readnone %kobj, ptr nocapture noundef readnone %attr, ptr nocapture noundef writeonly %buf) #24 align 64 {
entry:
  call void @__sanitizer_cov_trace_pc() #28
  call void @llvm.arm.gnu.eabi.mcount()
  %0 = call ptr @memcpy(ptr %buf, ptr @.str.138, i32 52)
  ret i32 51
}

; Function Attrs: argmemonly nofree nounwind readonly willreturn
declare i32 @bcmp(ptr nocapture, ptr nocapture, i32) local_unnamed_addr #25

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.uadd.sat.i32(i32, i32) #23

; Function Attrs: nounwind
declare void @llvm.arm.gnu.eabi.mcount() #26

declare void @__sanitizer_cov_trace_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_const_cmp1(i8 zeroext, i8 zeroext)

declare void @__sanitizer_cov_trace_const_cmp2(i16 zeroext, i16 zeroext)

declare void @__sanitizer_cov_trace_const_cmp4(i32 zeroext, i32 zeroext)

declare void @__sanitizer_cov_trace_const_cmp8(i64, i64)

declare void @__sanitizer_cov_trace_switch(i64, ptr)

declare void @__sanitizer_cov_trace_pc()

declare void @__asan_load1_noabort(i32)

declare void @__asan_load2_noabort(i32)

declare void @__asan_load4_noabort(i32)

declare void @__asan_load8_noabort(i32)

declare void @__asan_store1_noabort(i32)

declare void @__asan_store2_noabort(i32)

declare void @__asan_store4_noabort(i32)

declare void @__asan_store8_noabort(i32)

declare ptr @memcpy(ptr, ptr, i32)

declare ptr @memset(ptr, i32, i32)

declare void @__asan_register_globals(i32, i32)

declare void @__asan_unregister_globals(i32, i32)

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_ctor() #27 {
  call void @__asan_register_globals(i32 ptrtoint (ptr @0 to i32), i32 238)
  ret void
}

; Function Attrs: nounwind uwtable(sync)
define internal void @asan.module_dtor() #27 {
  call void @__asan_unregister_globals(i32 ptrtoint (ptr @0 to i32), i32 238)
  ret void
}

attributes #0 = { nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #1 = { argmemonly nocallback nofree nosync nounwind willreturn }
attributes #2 = { null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #3 = { argmemonly mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #4 = { mustprogress nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #5 = { inlinehint nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #6 = { mustprogress nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #7 = { cold null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #8 = { nofree null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #9 = { nofree norecurse nosync nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #10 = { nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #11 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid readonly willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #12 = { cold nounwind null_pointer_is_valid optsize sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #13 = { argmemonly nofree norecurse nosync nounwind null_pointer_is_valid readonly sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #14 = { argmemonly nofree norecurse nounwind null_pointer_is_valid sanitize_address sspstrong uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #15 = { nofree nounwind null_pointer_is_valid "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #16 = { argmemonly mustprogress nofree nounwind null_pointer_is_valid willreturn "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #17 = { nocallback nofree nosync nounwind readnone willreturn }
attributes #18 = { nounwind readonly }
attributes #19 = { inaccessiblemem_or_argmemonly nocallback nofree nosync nounwind willreturn }
attributes #20 = { null_pointer_is_valid allocsize(2) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #21 = { null_pointer_is_valid allocsize(0) "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" }
attributes #22 = { mustprogress nofree nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #23 = { nocallback nofree nosync nounwind readnone speculatable willreturn }
attributes #24 = { argmemonly mustprogress nofree nosync nounwind null_pointer_is_valid sanitize_address sspstrong willreturn uwtable(sync) "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="mpcore" "target-features"="+armv6k,+dsp,+soft-float,+strict-align,-aes,-bf16,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-mve,-mve.fp,-neon,-sha2,-thumb-mode,-vfp2,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "use-soft-float"="true" "warn-stack-size"="1024" }
attributes #25 = { argmemonly nofree nounwind readonly willreturn }
attributes #26 = { nounwind }
attributes #27 = { nounwind uwtable(sync) "frame-pointer"="all" }
attributes #28 = { nomerge }
attributes #29 = { nobuiltin nounwind }
attributes #30 = { nobuiltin }
attributes #31 = { cold nounwind }
attributes #32 = { nounwind allocsize(2) }
attributes #33 = { nounwind allocsize(0) }
attributes #34 = { cold }
attributes #35 = { nounwind readnone }

!llvm.asan.globals = !{!0, !2, !3, !4, !6, !7, !8, !10, !11, !12, !14, !15, !16, !18, !19, !20, !22, !23, !24, !26, !27, !28, !30, !31, !32, !34, !35, !36, !38, !39, !40, !42, !43, !44, !46, !47, !48, !50, !51, !52, !54, !55, !56, !57, !58, !59, !60, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !76, !77, !78, !79, !80, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !101, !102, !103, !105, !106, !108, !110, !112, !113, !115, !116, !117, !118, !120, !122, !123, !124, !125, !127, !128, !129, !130, !132, !133, !134, !135, !137, !138, !139, !140, !142, !143, !144, !145, !147, !148, !149, !150, !152, !153, !154, !155, !157, !158, !159, !160, !162, !163, !164, !165, !167, !168, !169, !170, !172, !173, !174, !175, !177, !178, !179, !180, !182, !183, !184, !185, !187, !188, !189, !190, !192, !194, !196, !198, !200, !202, !204, !206, !208, !210, !211, !212, !213, !215, !217, !219, !221, !223, !225, !227, !229, !231, !233, !234, !236, !237, !239, !241, !243, !245, !247, !249, !251, !253, !254, !255, !256, !258, !260, !262, !263, !265, !267, !269, !271, !273, !275, !277, !279, !281, !283, !285, !287, !289, !291, !293, !295, !297, !299, !301, !303, !305, !307, !308, !309, !311, !312, !314, !316, !318, !320, !322, !324, !326, !328, !330, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !383, !385, !387, !388, !389, !391, !392, !394, !395, !397, !399, !400, !402, !404, !406, !407, !409, !410, !412, !413, !415, !416, !418, !419, !420, !421, !423, !424, !426, !428, !429, !430, !431, !433, !434, !435, !436, !438, !440, !442, !444, !446, !448, !450, !452, !454, !455, !457, !458, !459, !461, !463, !465, !466, !468, !470, !471, !473, !475, !476, !478, !479, !480, !481, !482, !483, !485, !487, !489, !491, !493, !494, !495, !497, !498, !499, !501, !503, !505, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !523, !525, !526, !527, !528, !530, !531, !533, !535, !537, !539, !541, !543, !545, !547, !549, !551, !553, !555, !557, !559, !561, !563, !565, !567, !569, !571, !572, !573, !575, !577, !579, !581, !583, !585, !586, !587, !589, !591, !593, !594, !596, !597, !598, !599, !601, !602, !603, !605, !607, !608, !610, !612, !614, !616, !618, !620, !622, !624}
!llvm.named.register.sp = !{!626}
!llvm.module.flags = !{!627, !628, !629, !630, !631, !632, !633, !634}
!llvm.ident = !{!635}

!0 = !{ptr @__tracepoint_cgroup_setup_root, !1, !"__tracepoint_cgroup_setup_root", i1 false, i1 false}
!1 = !{!"../include/trace/events/cgroup.h", i32 33, i32 1}
!2 = !{ptr @__tracepoint_ptr_cgroup_setup_root, !1, !"__tracepoint_ptr_cgroup_setup_root", i1 false, i1 false}
!3 = !{ptr @__SCK__tp_func_cgroup_setup_root, !1, !"__SCK__tp_func_cgroup_setup_root", i1 false, i1 false}
!4 = !{ptr @__tracepoint_cgroup_destroy_root, !5, !"__tracepoint_cgroup_destroy_root", i1 false, i1 false}
!5 = !{!"../include/trace/events/cgroup.h", i32 40, i32 1}
!6 = !{ptr @__tracepoint_ptr_cgroup_destroy_root, !5, !"__tracepoint_ptr_cgroup_destroy_root", i1 false, i1 false}
!7 = !{ptr @__SCK__tp_func_cgroup_destroy_root, !5, !"__SCK__tp_func_cgroup_destroy_root", i1 false, i1 false}
!8 = !{ptr @__tracepoint_cgroup_remount, !9, !"__tracepoint_cgroup_remount", i1 false, i1 false}
!9 = !{!"../include/trace/events/cgroup.h", i32 47, i32 1}
!10 = !{ptr @__tracepoint_ptr_cgroup_remount, !9, !"__tracepoint_ptr_cgroup_remount", i1 false, i1 false}
!11 = !{ptr @__SCK__tp_func_cgroup_remount, !9, !"__SCK__tp_func_cgroup_remount", i1 false, i1 false}
!12 = !{ptr @__tracepoint_cgroup_mkdir, !13, !"__tracepoint_cgroup_mkdir", i1 false, i1 false}
!13 = !{!"../include/trace/events/cgroup.h", i32 78, i32 1}
!14 = !{ptr @__tracepoint_ptr_cgroup_mkdir, !13, !"__tracepoint_ptr_cgroup_mkdir", i1 false, i1 false}
!15 = !{ptr @__SCK__tp_func_cgroup_mkdir, !13, !"__SCK__tp_func_cgroup_mkdir", i1 false, i1 false}
!16 = !{ptr @__tracepoint_cgroup_rmdir, !17, !"__tracepoint_cgroup_rmdir", i1 false, i1 false}
!17 = !{!"../include/trace/events/cgroup.h", i32 85, i32 1}
!18 = !{ptr @__tracepoint_ptr_cgroup_rmdir, !17, !"__tracepoint_ptr_cgroup_rmdir", i1 false, i1 false}
!19 = !{ptr @__SCK__tp_func_cgroup_rmdir, !17, !"__SCK__tp_func_cgroup_rmdir", i1 false, i1 false}
!20 = !{ptr @__tracepoint_cgroup_release, !21, !"__tracepoint_cgroup_release", i1 false, i1 false}
!21 = !{!"../include/trace/events/cgroup.h", i32 92, i32 1}
!22 = !{ptr @__tracepoint_ptr_cgroup_release, !21, !"__tracepoint_ptr_cgroup_release", i1 false, i1 false}
!23 = !{ptr @__SCK__tp_func_cgroup_release, !21, !"__SCK__tp_func_cgroup_release", i1 false, i1 false}
!24 = !{ptr @__tracepoint_cgroup_rename, !25, !"__tracepoint_cgroup_rename", i1 false, i1 false}
!25 = !{!"../include/trace/events/cgroup.h", i32 99, i32 1}
!26 = !{ptr @__tracepoint_ptr_cgroup_rename, !25, !"__tracepoint_ptr_cgroup_rename", i1 false, i1 false}
!27 = !{ptr @__SCK__tp_func_cgroup_rename, !25, !"__SCK__tp_func_cgroup_rename", i1 false, i1 false}
!28 = !{ptr @__tracepoint_cgroup_freeze, !29, !"__tracepoint_cgroup_freeze", i1 false, i1 false}
!29 = !{!"../include/trace/events/cgroup.h", i32 106, i32 1}
!30 = !{ptr @__tracepoint_ptr_cgroup_freeze, !29, !"__tracepoint_ptr_cgroup_freeze", i1 false, i1 false}
!31 = !{ptr @__SCK__tp_func_cgroup_freeze, !29, !"__SCK__tp_func_cgroup_freeze", i1 false, i1 false}
!32 = !{ptr @__tracepoint_cgroup_unfreeze, !33, !"__tracepoint_cgroup_unfreeze", i1 false, i1 false}
!33 = !{!"../include/trace/events/cgroup.h", i32 113, i32 1}
!34 = !{ptr @__tracepoint_ptr_cgroup_unfreeze, !33, !"__tracepoint_ptr_cgroup_unfreeze", i1 false, i1 false}
!35 = !{ptr @__SCK__tp_func_cgroup_unfreeze, !33, !"__SCK__tp_func_cgroup_unfreeze", i1 false, i1 false}
!36 = !{ptr @__tracepoint_cgroup_attach_task, !37, !"__tracepoint_cgroup_attach_task", i1 false, i1 false}
!37 = !{!"../include/trace/events/cgroup.h", i32 150, i32 1}
!38 = !{ptr @__tracepoint_ptr_cgroup_attach_task, !37, !"__tracepoint_ptr_cgroup_attach_task", i1 false, i1 false}
!39 = !{ptr @__SCK__tp_func_cgroup_attach_task, !37, !"__SCK__tp_func_cgroup_attach_task", i1 false, i1 false}
!40 = !{ptr @__tracepoint_cgroup_transfer_tasks, !41, !"__tracepoint_cgroup_transfer_tasks", i1 false, i1 false}
!41 = !{!"../include/trace/events/cgroup.h", i32 158, i32 1}
!42 = !{ptr @__tracepoint_ptr_cgroup_transfer_tasks, !41, !"__tracepoint_ptr_cgroup_transfer_tasks", i1 false, i1 false}
!43 = !{ptr @__SCK__tp_func_cgroup_transfer_tasks, !41, !"__SCK__tp_func_cgroup_transfer_tasks", i1 false, i1 false}
!44 = !{ptr @__tracepoint_cgroup_notify_populated, !45, !"__tracepoint_cgroup_notify_populated", i1 false, i1 false}
!45 = !{!"../include/trace/events/cgroup.h", i32 193, i32 1}
!46 = !{ptr @__tracepoint_ptr_cgroup_notify_populated, !45, !"__tracepoint_ptr_cgroup_notify_populated", i1 false, i1 false}
!47 = !{ptr @__SCK__tp_func_cgroup_notify_populated, !45, !"__SCK__tp_func_cgroup_notify_populated", i1 false, i1 false}
!48 = !{ptr @__tracepoint_cgroup_notify_frozen, !49, !"__tracepoint_cgroup_notify_frozen", i1 false, i1 false}
!49 = !{!"../include/trace/events/cgroup.h", i32 200, i32 1}
!50 = !{ptr @__tracepoint_ptr_cgroup_notify_frozen, !49, !"__tracepoint_ptr_cgroup_notify_frozen", i1 false, i1 false}
!51 = !{ptr @__SCK__tp_func_cgroup_notify_frozen, !49, !"__SCK__tp_func_cgroup_notify_frozen", i1 false, i1 false}
!52 = !{ptr @event_class_cgroup_root, !53, !"event_class_cgroup_root", i1 false, i1 false}
!53 = !{!"../include/trace/events/cgroup.h", i32 11, i32 1}
!54 = !{ptr @event_cgroup_setup_root, !1, !"event_cgroup_setup_root", i1 false, i1 false}
!55 = !{ptr @__event_cgroup_setup_root, !1, !"__event_cgroup_setup_root", i1 false, i1 false}
!56 = !{ptr @event_cgroup_destroy_root, !5, !"event_cgroup_destroy_root", i1 false, i1 false}
!57 = !{ptr @__event_cgroup_destroy_root, !5, !"__event_cgroup_destroy_root", i1 false, i1 false}
!58 = !{ptr @event_cgroup_remount, !9, !"event_cgroup_remount", i1 false, i1 false}
!59 = !{ptr @__event_cgroup_remount, !9, !"__event_cgroup_remount", i1 false, i1 false}
!60 = !{ptr @event_class_cgroup, !61, !"event_class_cgroup", i1 false, i1 false}
!61 = !{!"../include/trace/events/cgroup.h", i32 54, i32 1}
!62 = !{ptr @event_cgroup_mkdir, !13, !"event_cgroup_mkdir", i1 false, i1 false}
!63 = !{ptr @__event_cgroup_mkdir, !13, !"__event_cgroup_mkdir", i1 false, i1 false}
!64 = !{ptr @event_cgroup_rmdir, !17, !"event_cgroup_rmdir", i1 false, i1 false}
!65 = !{ptr @__event_cgroup_rmdir, !17, !"__event_cgroup_rmdir", i1 false, i1 false}
!66 = !{ptr @event_cgroup_release, !21, !"event_cgroup_release", i1 false, i1 false}
!67 = !{ptr @__event_cgroup_release, !21, !"__event_cgroup_release", i1 false, i1 false}
!68 = !{ptr @event_cgroup_rename, !25, !"event_cgroup_rename", i1 false, i1 false}
!69 = !{ptr @__event_cgroup_rename, !25, !"__event_cgroup_rename", i1 false, i1 false}
!70 = !{ptr @event_cgroup_freeze, !29, !"event_cgroup_freeze", i1 false, i1 false}
!71 = !{ptr @__event_cgroup_freeze, !29, !"__event_cgroup_freeze", i1 false, i1 false}
!72 = !{ptr @event_cgroup_unfreeze, !33, !"event_cgroup_unfreeze", i1 false, i1 false}
!73 = !{ptr @__event_cgroup_unfreeze, !33, !"__event_cgroup_unfreeze", i1 false, i1 false}
!74 = !{ptr @event_class_cgroup_migrate, !75, !"event_class_cgroup_migrate", i1 false, i1 false}
!75 = !{!"../include/trace/events/cgroup.h", i32 120, i32 1}
!76 = !{ptr @event_cgroup_attach_task, !37, !"event_cgroup_attach_task", i1 false, i1 false}
!77 = !{ptr @__event_cgroup_attach_task, !37, !"__event_cgroup_attach_task", i1 false, i1 false}
!78 = !{ptr @event_cgroup_transfer_tasks, !41, !"event_cgroup_transfer_tasks", i1 false, i1 false}
!79 = !{ptr @__event_cgroup_transfer_tasks, !41, !"__event_cgroup_transfer_tasks", i1 false, i1 false}
!80 = !{ptr @event_class_cgroup_event, !81, !"event_class_cgroup_event", i1 false, i1 false}
!81 = !{!"../include/trace/events/cgroup.h", i32 166, i32 1}
!82 = !{ptr @event_cgroup_notify_populated, !45, !"event_cgroup_notify_populated", i1 false, i1 false}
!83 = !{ptr @__event_cgroup_notify_populated, !45, !"__event_cgroup_notify_populated", i1 false, i1 false}
!84 = !{ptr @event_cgroup_notify_frozen, !49, !"event_cgroup_notify_frozen", i1 false, i1 false}
!85 = !{ptr @__event_cgroup_notify_frozen, !49, !"__event_cgroup_notify_frozen", i1 false, i1 false}
!86 = !{ptr @__bpf_trace_tp_map_cgroup_setup_root, !1, !"__bpf_trace_tp_map_cgroup_setup_root", i1 false, i1 false}
!87 = !{ptr @__bpf_trace_tp_map_cgroup_destroy_root, !5, !"__bpf_trace_tp_map_cgroup_destroy_root", i1 false, i1 false}
!88 = !{ptr @__bpf_trace_tp_map_cgroup_remount, !9, !"__bpf_trace_tp_map_cgroup_remount", i1 false, i1 false}
!89 = !{ptr @__bpf_trace_tp_map_cgroup_mkdir, !13, !"__bpf_trace_tp_map_cgroup_mkdir", i1 false, i1 false}
!90 = !{ptr @__bpf_trace_tp_map_cgroup_rmdir, !17, !"__bpf_trace_tp_map_cgroup_rmdir", i1 false, i1 false}
!91 = !{ptr @__bpf_trace_tp_map_cgroup_release, !21, !"__bpf_trace_tp_map_cgroup_release", i1 false, i1 false}
!92 = !{ptr @__bpf_trace_tp_map_cgroup_rename, !25, !"__bpf_trace_tp_map_cgroup_rename", i1 false, i1 false}
!93 = !{ptr @__bpf_trace_tp_map_cgroup_freeze, !29, !"__bpf_trace_tp_map_cgroup_freeze", i1 false, i1 false}
!94 = !{ptr @__bpf_trace_tp_map_cgroup_unfreeze, !33, !"__bpf_trace_tp_map_cgroup_unfreeze", i1 false, i1 false}
!95 = !{ptr @__bpf_trace_tp_map_cgroup_attach_task, !37, !"__bpf_trace_tp_map_cgroup_attach_task", i1 false, i1 false}
!96 = !{ptr @__bpf_trace_tp_map_cgroup_transfer_tasks, !41, !"__bpf_trace_tp_map_cgroup_transfer_tasks", i1 false, i1 false}
!97 = !{ptr @__bpf_trace_tp_map_cgroup_notify_populated, !45, !"__bpf_trace_tp_map_cgroup_notify_populated", i1 false, i1 false}
!98 = !{ptr @__bpf_trace_tp_map_cgroup_notify_frozen, !49, !"__bpf_trace_tp_map_cgroup_notify_frozen", i1 false, i1 false}
!99 = !{ptr @.str, !100, !"<string literal>", i1 false, i1 false}
!100 = !{!"../kernel/cgroup/cgroup.c", i32 89, i32 1}
!101 = !{ptr @.str.1, !100, !"<string literal>", i1 false, i1 false}
!102 = !{ptr @cgroup_mutex, !100, !"cgroup_mutex", i1 false, i1 false}
!103 = !{ptr @.str.2, !104, !"<string literal>", i1 false, i1 false}
!104 = !{!"../kernel/cgroup/cgroup.c", i32 90, i32 1}
!105 = !{ptr @css_set_lock, !104, !"css_set_lock", i1 false, i1 false}
!106 = !{ptr @__ksymtab_cgroup_mutex, !107, !"__ksymtab_cgroup_mutex", i1 false, i1 false}
!107 = !{!"../kernel/cgroup/cgroup.c", i32 93, i32 1}
!108 = !{ptr @__ksymtab_css_set_lock, !109, !"__ksymtab_css_set_lock", i1 false, i1 false}
!109 = !{!"../kernel/cgroup/cgroup.c", i32 94, i32 1}
!110 = !{ptr @.str.3, !111, !"<string literal>", i1 false, i1 false}
!111 = !{!"../kernel/cgroup/cgroup.c", i32 97, i32 1}
!112 = !{ptr @trace_cgroup_path_lock, !111, !"trace_cgroup_path_lock", i1 false, i1 false}
!113 = !{ptr @.str.4, !114, !"<string literal>", i1 false, i1 false}
!114 = !{!"../kernel/cgroup/cgroup.c", i32 113, i32 1}
!115 = !{ptr @.str.5, !114, !"<string literal>", i1 false, i1 false}
!116 = !{ptr @.str.6, !114, !"<string literal>", i1 false, i1 false}
!117 = !{ptr @cgroup_threadgroup_rwsem, !114, !"cgroup_threadgroup_rwsem", i1 false, i1 false}
!118 = !{ptr @cgroup_subsys, !119, !"cgroup_subsys", i1 false, i1 false}
!119 = !{!"../kernel/cgroup/cgroup.c", i32 130, i32 23}
!120 = !{ptr @cpuset_cgrp_subsys_enabled_key, !121, !"cpuset_cgrp_subsys_enabled_key", i1 false, i1 false}
!121 = !{!"../include/linux/cgroup_subsys.h", i32 13, i32 1}
!122 = !{ptr @cpuset_cgrp_subsys_on_dfl_key, !121, !"cpuset_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!123 = !{ptr @__ksymtab_cpuset_cgrp_subsys_enabled_key, !121, !"__ksymtab_cpuset_cgrp_subsys_enabled_key", i1 false, i1 false}
!124 = !{ptr @__ksymtab_cpuset_cgrp_subsys_on_dfl_key, !121, !"__ksymtab_cpuset_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!125 = !{ptr @cpu_cgrp_subsys_enabled_key, !126, !"cpu_cgrp_subsys_enabled_key", i1 false, i1 false}
!126 = !{!"../include/linux/cgroup_subsys.h", i32 17, i32 1}
!127 = !{ptr @cpu_cgrp_subsys_on_dfl_key, !126, !"cpu_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!128 = !{ptr @__ksymtab_cpu_cgrp_subsys_enabled_key, !126, !"__ksymtab_cpu_cgrp_subsys_enabled_key", i1 false, i1 false}
!129 = !{ptr @__ksymtab_cpu_cgrp_subsys_on_dfl_key, !126, !"__ksymtab_cpu_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!130 = !{ptr @cpuacct_cgrp_subsys_enabled_key, !131, !"cpuacct_cgrp_subsys_enabled_key", i1 false, i1 false}
!131 = !{!"../include/linux/cgroup_subsys.h", i32 21, i32 1}
!132 = !{ptr @cpuacct_cgrp_subsys_on_dfl_key, !131, !"cpuacct_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!133 = !{ptr @__ksymtab_cpuacct_cgrp_subsys_enabled_key, !131, !"__ksymtab_cpuacct_cgrp_subsys_enabled_key", i1 false, i1 false}
!134 = !{ptr @__ksymtab_cpuacct_cgrp_subsys_on_dfl_key, !131, !"__ksymtab_cpuacct_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!135 = !{ptr @io_cgrp_subsys_enabled_key, !136, !"io_cgrp_subsys_enabled_key", i1 false, i1 false}
!136 = !{!"../include/linux/cgroup_subsys.h", i32 25, i32 1}
!137 = !{ptr @io_cgrp_subsys_on_dfl_key, !136, !"io_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!138 = !{ptr @__ksymtab_io_cgrp_subsys_enabled_key, !136, !"__ksymtab_io_cgrp_subsys_enabled_key", i1 false, i1 false}
!139 = !{ptr @__ksymtab_io_cgrp_subsys_on_dfl_key, !136, !"__ksymtab_io_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!140 = !{ptr @memory_cgrp_subsys_enabled_key, !141, !"memory_cgrp_subsys_enabled_key", i1 false, i1 false}
!141 = !{!"../include/linux/cgroup_subsys.h", i32 29, i32 1}
!142 = !{ptr @memory_cgrp_subsys_on_dfl_key, !141, !"memory_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!143 = !{ptr @__ksymtab_memory_cgrp_subsys_enabled_key, !141, !"__ksymtab_memory_cgrp_subsys_enabled_key", i1 false, i1 false}
!144 = !{ptr @__ksymtab_memory_cgrp_subsys_on_dfl_key, !141, !"__ksymtab_memory_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!145 = !{ptr @devices_cgrp_subsys_enabled_key, !146, !"devices_cgrp_subsys_enabled_key", i1 false, i1 false}
!146 = !{!"../include/linux/cgroup_subsys.h", i32 33, i32 1}
!147 = !{ptr @devices_cgrp_subsys_on_dfl_key, !146, !"devices_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!148 = !{ptr @__ksymtab_devices_cgrp_subsys_enabled_key, !146, !"__ksymtab_devices_cgrp_subsys_enabled_key", i1 false, i1 false}
!149 = !{ptr @__ksymtab_devices_cgrp_subsys_on_dfl_key, !146, !"__ksymtab_devices_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!150 = !{ptr @freezer_cgrp_subsys_enabled_key, !151, !"freezer_cgrp_subsys_enabled_key", i1 false, i1 false}
!151 = !{!"../include/linux/cgroup_subsys.h", i32 37, i32 1}
!152 = !{ptr @freezer_cgrp_subsys_on_dfl_key, !151, !"freezer_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!153 = !{ptr @__ksymtab_freezer_cgrp_subsys_enabled_key, !151, !"__ksymtab_freezer_cgrp_subsys_enabled_key", i1 false, i1 false}
!154 = !{ptr @__ksymtab_freezer_cgrp_subsys_on_dfl_key, !151, !"__ksymtab_freezer_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!155 = !{ptr @net_cls_cgrp_subsys_enabled_key, !156, !"net_cls_cgrp_subsys_enabled_key", i1 false, i1 false}
!156 = !{!"../include/linux/cgroup_subsys.h", i32 41, i32 1}
!157 = !{ptr @net_cls_cgrp_subsys_on_dfl_key, !156, !"net_cls_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!158 = !{ptr @__ksymtab_net_cls_cgrp_subsys_enabled_key, !156, !"__ksymtab_net_cls_cgrp_subsys_enabled_key", i1 false, i1 false}
!159 = !{ptr @__ksymtab_net_cls_cgrp_subsys_on_dfl_key, !156, !"__ksymtab_net_cls_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!160 = !{ptr @perf_event_cgrp_subsys_enabled_key, !161, !"perf_event_cgrp_subsys_enabled_key", i1 false, i1 false}
!161 = !{!"../include/linux/cgroup_subsys.h", i32 45, i32 1}
!162 = !{ptr @perf_event_cgrp_subsys_on_dfl_key, !161, !"perf_event_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!163 = !{ptr @__ksymtab_perf_event_cgrp_subsys_enabled_key, !161, !"__ksymtab_perf_event_cgrp_subsys_enabled_key", i1 false, i1 false}
!164 = !{ptr @__ksymtab_perf_event_cgrp_subsys_on_dfl_key, !161, !"__ksymtab_perf_event_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!165 = !{ptr @net_prio_cgrp_subsys_enabled_key, !166, !"net_prio_cgrp_subsys_enabled_key", i1 false, i1 false}
!166 = !{!"../include/linux/cgroup_subsys.h", i32 49, i32 1}
!167 = !{ptr @net_prio_cgrp_subsys_on_dfl_key, !166, !"net_prio_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!168 = !{ptr @__ksymtab_net_prio_cgrp_subsys_enabled_key, !166, !"__ksymtab_net_prio_cgrp_subsys_enabled_key", i1 false, i1 false}
!169 = !{ptr @__ksymtab_net_prio_cgrp_subsys_on_dfl_key, !166, !"__ksymtab_net_prio_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!170 = !{ptr @pids_cgrp_subsys_enabled_key, !171, !"pids_cgrp_subsys_enabled_key", i1 false, i1 false}
!171 = !{!"../include/linux/cgroup_subsys.h", i32 57, i32 1}
!172 = !{ptr @pids_cgrp_subsys_on_dfl_key, !171, !"pids_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!173 = !{ptr @__ksymtab_pids_cgrp_subsys_enabled_key, !171, !"__ksymtab_pids_cgrp_subsys_enabled_key", i1 false, i1 false}
!174 = !{ptr @__ksymtab_pids_cgrp_subsys_on_dfl_key, !171, !"__ksymtab_pids_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!175 = !{ptr @rdma_cgrp_subsys_enabled_key, !176, !"rdma_cgrp_subsys_enabled_key", i1 false, i1 false}
!176 = !{!"../include/linux/cgroup_subsys.h", i32 61, i32 1}
!177 = !{ptr @rdma_cgrp_subsys_on_dfl_key, !176, !"rdma_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!178 = !{ptr @__ksymtab_rdma_cgrp_subsys_enabled_key, !176, !"__ksymtab_rdma_cgrp_subsys_enabled_key", i1 false, i1 false}
!179 = !{ptr @__ksymtab_rdma_cgrp_subsys_on_dfl_key, !176, !"__ksymtab_rdma_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!180 = !{ptr @misc_cgrp_subsys_enabled_key, !181, !"misc_cgrp_subsys_enabled_key", i1 false, i1 false}
!181 = !{!"../include/linux/cgroup_subsys.h", i32 65, i32 1}
!182 = !{ptr @misc_cgrp_subsys_on_dfl_key, !181, !"misc_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!183 = !{ptr @__ksymtab_misc_cgrp_subsys_enabled_key, !181, !"__ksymtab_misc_cgrp_subsys_enabled_key", i1 false, i1 false}
!184 = !{ptr @__ksymtab_misc_cgrp_subsys_on_dfl_key, !181, !"__ksymtab_misc_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!185 = !{ptr @debug_cgrp_subsys_enabled_key, !186, !"debug_cgrp_subsys_enabled_key", i1 false, i1 false}
!186 = !{!"../include/linux/cgroup_subsys.h", i32 72, i32 1}
!187 = !{ptr @debug_cgrp_subsys_on_dfl_key, !186, !"debug_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!188 = !{ptr @__ksymtab_debug_cgrp_subsys_enabled_key, !186, !"__ksymtab_debug_cgrp_subsys_enabled_key", i1 false, i1 false}
!189 = !{ptr @__ksymtab_debug_cgrp_subsys_on_dfl_key, !186, !"__ksymtab_debug_cgrp_subsys_on_dfl_key", i1 false, i1 false}
!190 = !{ptr @cgrp_dfl_root, !191, !"cgrp_dfl_root", i1 false, i1 false}
!191 = !{!"../kernel/cgroup/cgroup.c", i32 166, i32 20}
!192 = !{ptr @__ksymtab_cgrp_dfl_root, !193, !"__ksymtab_cgrp_dfl_root", i1 false, i1 false}
!193 = !{!"../kernel/cgroup/cgroup.c", i32 167, i32 1}
!194 = !{ptr @cgroup_roots, !195, !"cgroup_roots", i1 false, i1 false}
!195 = !{!"../kernel/cgroup/cgroup.c", i32 185, i32 1}
!196 = !{ptr @init_cgroup_ns, !197, !"init_cgroup_ns", i1 false, i1 false}
!197 = !{!"../kernel/cgroup/cgroup.c", i32 210, i32 25}
!198 = !{ptr @__ksymtab_cgroup_get_e_css, !199, !"__ksymtab_cgroup_get_e_css", i1 false, i1 false}
!199 = !{!"../kernel/cgroup/cgroup.c", i32 611, i32 1}
!200 = !{ptr @.str.7, !201, !"<string literal>", i1 false, i1 false}
!201 = !{!"../kernel/cgroup/cgroup.c", i32 629, i32 2}
!202 = !{ptr @__ksymtab_of_css, !203, !"__ksymtab_of_css", i1 false, i1 false}
!203 = !{!"../kernel/cgroup/cgroup.c", i32 670, i32 1}
!204 = !{ptr @init_css_set, !205, !"init_css_set", i1 false, i1 false}
!205 = !{!"../kernel/cgroup/cgroup.c", i32 759, i32 16}
!206 = distinct !{null, !207, !"__already_done", i1 false, i1 false}
!207 = !{!"../kernel/cgroup/cgroup.c", i32 966, i32 2}
!208 = !{ptr @.str.8, !209, !"<string literal>", i1 false, i1 false}
!209 = !{!"../kernel/cgroup/cgroup.c", i32 1827, i32 4}
!210 = !{ptr @.str.9, !209, !"<string literal>", i1 false, i1 false}
!211 = !{ptr @rebind_subsystems._entry, !209, !"_entry", i1 false, i1 false}
!212 = !{ptr @rebind_subsystems._entry_ptr, !209, !"_entry_ptr", i1 false, i1 false}
!213 = !{ptr @.str.10, !214, !"<string literal>", i1 false, i1 false}
!214 = !{!"../kernel/cgroup/cgroup.c", i32 1858, i32 23}
!215 = distinct !{null, !216, !"__already_done", i1 false, i1 false}
!216 = !{!"../kernel/cgroup/cgroup.c", i32 2029, i32 2}
!217 = distinct !{null, !218, !"__already_done", i1 false, i1 false}
!218 = !{!"../kernel/cgroup/cgroup.c", i32 2045, i32 2}
!219 = !{ptr @.str.12, !220, !"<string literal>", i1 false, i1 false}
!220 = !{!"../kernel/cgroup/cgroup.c", i32 2223, i32 12}
!221 = !{ptr @cgroup_fs_type, !222, !"cgroup_fs_type", i1 false, i1 false}
!222 = !{!"../kernel/cgroup/cgroup.c", i32 2222, i32 25}
!223 = !{ptr @__ksymtab_cgroup_path_ns, !224, !"__ksymtab_cgroup_path_ns", i1 false, i1 false}
!224 = !{!"../kernel/cgroup/cgroup.c", i32 2305, i32 1}
!225 = !{ptr @.str.13, !226, !"<string literal>", i1 false, i1 false}
!226 = !{!"../kernel/cgroup/cgroup.c", i32 2337, i32 22}
!227 = !{ptr @__ksymtab_task_cgroup_path, !228, !"__ksymtab_task_cgroup_path", i1 false, i1 false}
!228 = !{!"../kernel/cgroup/cgroup.c", i32 2344, i32 1}
!229 = distinct !{null, !230, !"__already_done", i1 false, i1 false}
!230 = !{!"../kernel/cgroup/cgroup.c", i32 2701, i32 3}
!231 = distinct !{null, !232, !"__warned", i1 false, i1 false}
!232 = !{!"../kernel/cgroup/cgroup.c", i32 4316, i32 2}
!233 = !{ptr @.str.14, !232, !"<string literal>", i1 false, i1 false}
!234 = distinct !{null, !235, !"__warned", i1 false, i1 false}
!235 = !{!"../kernel/cgroup/cgroup.c", i32 4343, i32 3}
!236 = !{ptr @.str.16, !235, !"<string literal>", i1 false, i1 false}
!237 = distinct !{null, !238, !"__warned", i1 false, i1 false}
!238 = !{!"../kernel/cgroup/cgroup.c", i32 4385, i32 2}
!239 = !{ptr @__ksymtab_css_next_descendant_pre, !240, !"__ksymtab_css_next_descendant_pre", i1 false, i1 false}
!240 = !{!"../kernel/cgroup/cgroup.c", i32 4406, i32 1}
!241 = distinct !{null, !242, !"__warned", i1 false, i1 false}
!242 = !{!"../kernel/cgroup/cgroup.c", i32 4426, i32 2}
!243 = distinct !{null, !244, !"__warned", i1 false, i1 false}
!244 = !{!"../kernel/cgroup/cgroup.c", i32 4480, i32 2}
!245 = !{ptr @cgroup_init_early.ctx, !246, !"ctx", i1 false, i1 false}
!246 = !{!"../kernel/cgroup/cgroup.c", i32 5799, i32 45}
!247 = !{ptr @.str.17, !248, !"<string literal>", i1 false, i1 false}
!248 = !{!"../kernel/cgroup/cgroup.c", i32 5810, i32 3}
!249 = !{ptr @.str.18, !250, !"<string literal>", i1 false, i1 false}
!250 = !{!"../kernel/cgroup/cgroup.c", i32 5814, i32 3}
!251 = !{ptr @.str.19, !252, !"<string literal>", i1 false, i1 false}
!252 = !{!"../kernel/cgroup/cgroup.c", i32 5890, i32 4}
!253 = !{ptr @.str.20, !252, !"<string literal>", i1 false, i1 false}
!254 = !{ptr @cgroup_init._entry, !252, !"_entry", i1 false, i1 false}
!255 = !{ptr @cgroup_init._entry_ptr, !252, !"_entry_ptr", i1 false, i1 false}
!256 = !{ptr @.str.21, !257, !"<string literal>", i1 false, i1 false}
!257 = !{!"../kernel/cgroup/cgroup.c", i32 5929, i32 2}
!258 = !{ptr @__initcall__kmod_cgroup__580_5951_cgroup_wq_init1, !259, !"__initcall__kmod_cgroup__580_5951_cgroup_wq_init1", i1 false, i1 false}
!259 = !{!"../kernel/cgroup/cgroup.c", i32 5951, i32 1}
!260 = distinct !{null, !261, !"__warned", i1 false, i1 false}
!261 = !{!"../kernel/cgroup/cgroup.c", i32 5980, i32 9}
!262 = !{ptr @.str.22, !261, !"<string literal>", i1 false, i1 false}
!263 = !{ptr @__ksymtab_cgroup_get_from_id, !264, !"__ksymtab_cgroup_get_from_id", i1 false, i1 false}
!264 = !{!"../kernel/cgroup/cgroup.c", i32 5990, i32 1}
!265 = !{ptr @.str.23, !266, !"<string literal>", i1 false, i1 false}
!266 = !{!"../kernel/cgroup/cgroup.c", i32 6020, i32 17}
!267 = !{ptr @.str.24, !268, !"<string literal>", i1 false, i1 false}
!268 = !{!"../kernel/cgroup/cgroup.c", i32 6024, i32 20}
!269 = !{ptr @.str.25, !270, !"<string literal>", i1 false, i1 false}
!270 = !{!"../kernel/cgroup/cgroup.c", i32 6024, i32 38}
!271 = !{ptr @.str.26, !272, !"<string literal>", i1 false, i1 false}
!272 = !{!"../kernel/cgroup/cgroup.c", i32 6024, i32 44}
!273 = !{ptr @.str.27, !274, !"<string literal>", i1 false, i1 false}
!274 = !{!"../kernel/cgroup/cgroup.c", i32 6027, i32 18}
!275 = !{ptr @.str.28, !276, !"<string literal>", i1 false, i1 false}
!276 = !{!"../kernel/cgroup/cgroup.c", i32 6056, i32 16}
!277 = distinct !{null, !278, !"__already_done", i1 false, i1 false}
!278 = !{!"../kernel/cgroup/cgroup.c", i32 6334, i32 3}
!279 = distinct !{null, !280, !"__already_done", i1 false, i1 false}
!280 = !{!"../kernel/cgroup/cgroup.c", i32 6350, i32 4}
!281 = distinct !{null, !282, !"__already_done", i1 false, i1 false}
!282 = !{!"../kernel/cgroup/cgroup.c", i32 6412, i32 2}
!283 = distinct !{null, !284, !"__already_done", i1 false, i1 false}
!284 = !{!"../kernel/cgroup/cgroup.c", i32 6418, i32 2}
!285 = !{ptr @__setup_cgroup_disable, !286, !"__setup_cgroup_disable", i1 false, i1 false}
!286 = !{!"../kernel/cgroup/cgroup.c", i32 6483, i32 1}
!287 = !{ptr @__setup_enable_cgroup_debug, !288, !"__setup_enable_cgroup_debug", i1 false, i1 false}
!288 = !{!"../kernel/cgroup/cgroup.c", i32 6493, i32 1}
!289 = distinct !{null, !290, !"__warned", i1 false, i1 false}
!290 = !{!"../kernel/cgroup/cgroup.c", i32 6524, i32 9}
!291 = distinct !{null, !292, !"__already_done", i1 false, i1 false}
!292 = !{!"../kernel/cgroup/cgroup.c", i32 6545, i32 2}
!293 = distinct !{null, !294, !"__warned", i1 false, i1 false}
!294 = !{!"../kernel/cgroup/cgroup.c", i32 6574, i32 9}
!295 = !{ptr @__ksymtab_cgroup_get_from_path, !296, !"__ksymtab_cgroup_get_from_path", i1 false, i1 false}
!296 = !{!"../kernel/cgroup/cgroup.c", i32 6585, i32 1}
!297 = !{ptr @__ksymtab_cgroup_get_from_fd, !298, !"__ksymtab_cgroup_get_from_fd", i1 false, i1 false}
!298 = !{!"../kernel/cgroup/cgroup.c", i32 6609, i32 1}
!299 = !{ptr @.str.31, !300, !"<string literal>", i1 false, i1 false}
!300 = !{!"../kernel/cgroup/cgroup.c", i32 6638, i32 21}
!301 = !{ptr @__initcall__kmod_cgroup__588_6780_cgroup_sysfs_init4, !302, !"__initcall__kmod_cgroup__588_6780_cgroup_sysfs_init4", i1 false, i1 false}
!302 = !{!"../kernel/cgroup/cgroup.c", i32 6780, i32 1}
!303 = !{ptr @trace_cgroup_path, !304, !"trace_cgroup_path", i1 false, i1 false}
!304 = !{!"../kernel/cgroup/cgroup.c", i32 98, i32 6}
!305 = !{ptr @cgroup_debug, !306, !"cgroup_debug", i1 false, i1 false}
!306 = !{!"../kernel/cgroup/cgroup.c", i32 99, i32 6}
!307 = !{ptr @__pcpu_unique___percpu_rwsem_rc_cgroup_threadgroup_rwsem, !114, !"__pcpu_unique___percpu_rwsem_rc_cgroup_threadgroup_rwsem", i1 false, i1 false}
!308 = !{ptr @__percpu_rwsem_rc_cgroup_threadgroup_rwsem, !114, !"__percpu_rwsem_rc_cgroup_threadgroup_rwsem", i1 false, i1 false}
!309 = !{ptr @__pcpu_unique_cgrp_dfl_root_rstat_cpu, !310, !"__pcpu_unique_cgrp_dfl_root_rstat_cpu", i1 false, i1 false}
!310 = !{!"../kernel/cgroup/cgroup.c", i32 163, i32 8}
!311 = !{ptr @cgrp_dfl_root_rstat_cpu, !310, !"cgrp_dfl_root_rstat_cpu", i1 false, i1 false}
!312 = distinct !{null, !313, !"cgrp_dfl_visible", i1 false, i1 false}
!313 = !{!"../kernel/cgroup/cgroup.c", i32 173, i32 13}
!314 = !{ptr @cgrp_dfl_inhibit_ss_mask, !315, !"cgrp_dfl_inhibit_ss_mask", i1 false, i1 false}
!315 = !{!"../kernel/cgroup/cgroup.c", i32 176, i32 12}
!316 = !{ptr @cgrp_dfl_implicit_ss_mask, !317, !"cgrp_dfl_implicit_ss_mask", i1 false, i1 false}
!317 = !{!"../kernel/cgroup/cgroup.c", i32 179, i32 12}
!318 = !{ptr @cgrp_dfl_threaded_ss_mask, !319, !"cgrp_dfl_threaded_ss_mask", i1 false, i1 false}
!319 = !{!"../kernel/cgroup/cgroup.c", i32 182, i32 12}
!320 = !{ptr @cgroup_root_count, !321, !"cgroup_root_count", i1 false, i1 false}
!321 = !{!"../kernel/cgroup/cgroup.c", i32 186, i32 12}
!322 = !{ptr @have_fork_callback, !323, !"have_fork_callback", i1 false, i1 false}
!323 = !{!"../kernel/cgroup/cgroup.c", i32 204, i32 12}
!324 = !{ptr @have_exit_callback, !325, !"have_exit_callback", i1 false, i1 false}
!325 = !{!"../kernel/cgroup/cgroup.c", i32 205, i32 12}
!326 = !{ptr @have_release_callback, !327, !"have_release_callback", i1 false, i1 false}
!327 = !{!"../kernel/cgroup/cgroup.c", i32 206, i32 12}
!328 = !{ptr @have_canfork_callback, !329, !"have_canfork_callback", i1 false, i1 false}
!329 = !{!"../kernel/cgroup/cgroup.c", i32 207, i32 12}
!330 = !{ptr @cgroup_feature_disable_mask, !331, !"cgroup_feature_disable_mask", i1 false, i1 false}
!331 = !{!"../kernel/cgroup/cgroup.c", i32 235, i32 12}
!332 = !{ptr @__tpstrtab_cgroup_setup_root, !1, !"__tpstrtab_cgroup_setup_root", i1 false, i1 false}
!333 = !{ptr @__tpstrtab_cgroup_destroy_root, !5, !"__tpstrtab_cgroup_destroy_root", i1 false, i1 false}
!334 = !{ptr @__tpstrtab_cgroup_remount, !9, !"__tpstrtab_cgroup_remount", i1 false, i1 false}
!335 = !{ptr @__tpstrtab_cgroup_mkdir, !13, !"__tpstrtab_cgroup_mkdir", i1 false, i1 false}
!336 = !{ptr @__tpstrtab_cgroup_rmdir, !17, !"__tpstrtab_cgroup_rmdir", i1 false, i1 false}
!337 = !{ptr @__tpstrtab_cgroup_release, !21, !"__tpstrtab_cgroup_release", i1 false, i1 false}
!338 = !{ptr @__tpstrtab_cgroup_rename, !25, !"__tpstrtab_cgroup_rename", i1 false, i1 false}
!339 = !{ptr @__tpstrtab_cgroup_freeze, !29, !"__tpstrtab_cgroup_freeze", i1 false, i1 false}
!340 = !{ptr @__tpstrtab_cgroup_unfreeze, !33, !"__tpstrtab_cgroup_unfreeze", i1 false, i1 false}
!341 = !{ptr @__tpstrtab_cgroup_attach_task, !37, !"__tpstrtab_cgroup_attach_task", i1 false, i1 false}
!342 = !{ptr @__tpstrtab_cgroup_transfer_tasks, !41, !"__tpstrtab_cgroup_transfer_tasks", i1 false, i1 false}
!343 = !{ptr @__tpstrtab_cgroup_notify_populated, !45, !"__tpstrtab_cgroup_notify_populated", i1 false, i1 false}
!344 = !{ptr @__tpstrtab_cgroup_notify_frozen, !49, !"__tpstrtab_cgroup_notify_frozen", i1 false, i1 false}
!345 = !{ptr @str__cgroup__trace_system_name, !346, !"str__cgroup__trace_system_name", i1 false, i1 false}
!346 = !{!"../include/trace/trace_events.h", i32 36, i32 1}
!347 = !{ptr @.str.32, !53, !"<string literal>", i1 false, i1 false}
!348 = !{ptr @.str.33, !53, !"<string literal>", i1 false, i1 false}
!349 = !{ptr @.str.34, !53, !"<string literal>", i1 false, i1 false}
!350 = !{ptr @.str.35, !53, !"<string literal>", i1 false, i1 false}
!351 = !{ptr @.str.36, !53, !"<string literal>", i1 false, i1 false}
!352 = !{ptr @.str.37, !53, !"<string literal>", i1 false, i1 false}
!353 = !{ptr @.str.38, !53, !"<string literal>", i1 false, i1 false}
!354 = !{ptr @trace_event_fields_cgroup_root, !53, !"trace_event_fields_cgroup_root", i1 false, i1 false}
!355 = !{ptr @trace_event_type_funcs_cgroup_root, !53, !"trace_event_type_funcs_cgroup_root", i1 false, i1 false}
!356 = !{ptr @.str.39, !53, !"<string literal>", i1 false, i1 false}
!357 = !{ptr @print_fmt_cgroup_root, !53, !"print_fmt_cgroup_root", i1 false, i1 false}
!358 = !{ptr @.str.40, !61, !"<string literal>", i1 false, i1 false}
!359 = !{ptr @.str.41, !61, !"<string literal>", i1 false, i1 false}
!360 = !{ptr @.str.42, !61, !"<string literal>", i1 false, i1 false}
!361 = !{ptr @.str.43, !61, !"<string literal>", i1 false, i1 false}
!362 = !{ptr @trace_event_fields_cgroup, !61, !"trace_event_fields_cgroup", i1 false, i1 false}
!363 = !{ptr @trace_event_type_funcs_cgroup, !61, !"trace_event_type_funcs_cgroup", i1 false, i1 false}
!364 = !{ptr @.str.44, !61, !"<string literal>", i1 false, i1 false}
!365 = !{ptr @print_fmt_cgroup, !61, !"print_fmt_cgroup", i1 false, i1 false}
!366 = !{ptr @.str.45, !75, !"<string literal>", i1 false, i1 false}
!367 = !{ptr @.str.46, !75, !"<string literal>", i1 false, i1 false}
!368 = !{ptr @.str.47, !75, !"<string literal>", i1 false, i1 false}
!369 = !{ptr @.str.48, !75, !"<string literal>", i1 false, i1 false}
!370 = !{ptr @.str.49, !75, !"<string literal>", i1 false, i1 false}
!371 = !{ptr @.str.50, !75, !"<string literal>", i1 false, i1 false}
!372 = !{ptr @trace_event_fields_cgroup_migrate, !75, !"trace_event_fields_cgroup_migrate", i1 false, i1 false}
!373 = !{ptr @trace_event_type_funcs_cgroup_migrate, !75, !"trace_event_type_funcs_cgroup_migrate", i1 false, i1 false}
!374 = !{ptr @.str.51, !75, !"<string literal>", i1 false, i1 false}
!375 = !{ptr @print_fmt_cgroup_migrate, !75, !"print_fmt_cgroup_migrate", i1 false, i1 false}
!376 = !{ptr @.str.52, !81, !"<string literal>", i1 false, i1 false}
!377 = !{ptr @trace_event_fields_cgroup_event, !81, !"trace_event_fields_cgroup_event", i1 false, i1 false}
!378 = !{ptr @trace_event_type_funcs_cgroup_event, !81, !"trace_event_type_funcs_cgroup_event", i1 false, i1 false}
!379 = !{ptr @.str.53, !81, !"<string literal>", i1 false, i1 false}
!380 = !{ptr @print_fmt_cgroup_event, !81, !"print_fmt_cgroup_event", i1 false, i1 false}
!381 = !{ptr @cgroup_subsys_enabled_key, !382, !"cgroup_subsys_enabled_key", i1 false, i1 false}
!382 = !{!"../kernel/cgroup/cgroup.c", i32 152, i32 32}
!383 = distinct !{null, !384, !"__warned", i1 false, i1 false}
!384 = !{!"../kernel/cgroup/cgroup.c", i32 485, i32 10}
!385 = distinct !{null, !386, !"__warned", i1 false, i1 false}
!386 = !{!"../include/linux/rcupdate.h", i32 695, i32 2}
!387 = !{ptr @.str.54, !386, !"<string literal>", i1 false, i1 false}
!388 = !{ptr @.str.55, !386, !"<string literal>", i1 false, i1 false}
!389 = distinct !{null, !390, !"__already_done", i1 false, i1 false}
!390 = !{!"../include/linux/percpu-refcount.h", i32 280, i32 2}
!391 = !{ptr @.str.56, !390, !"<string literal>", i1 false, i1 false}
!392 = distinct !{null, !393, !"__warned", i1 false, i1 false}
!393 = !{!"../include/linux/rcupdate.h", i32 723, i32 2}
!394 = !{ptr @.str.57, !393, !"<string literal>", i1 false, i1 false}
!395 = !{ptr @css_set_count, !396, !"css_set_count", i1 false, i1 false}
!396 = !{!"../kernel/cgroup/cgroup.c", i32 780, i32 12}
!397 = distinct !{null, !398, !"__warned", i1 false, i1 false}
!398 = !{!"../include/linux/cgroup.h", i32 481, i32 9}
!399 = !{ptr @.str.58, !398, !"<string literal>", i1 false, i1 false}
!400 = !{ptr @css_set_table, !401, !"css_set_table", i1 false, i1 false}
!401 = !{!"../kernel/cgroup/cgroup.c", i32 940, i32 8}
!402 = !{ptr @cgroup_subsys_on_dfl_key, !403, !"cgroup_subsys_on_dfl_key", i1 false, i1 false}
!403 = !{!"../kernel/cgroup/cgroup.c", i32 158, i32 32}
!404 = !{ptr @init_cgroup_housekeeping.__key, !405, !"__key", i1 false, i1 false}
!405 = !{!"../kernel/cgroup/cgroup.c", i32 1951, i32 2}
!406 = !{ptr @.str.59, !405, !"<string literal>", i1 false, i1 false}
!407 = !{ptr @init_cgroup_housekeeping.__key.60, !408, !"__key", i1 false, i1 false}
!408 = !{!"../kernel/cgroup/cgroup.c", i32 1963, i32 2}
!409 = !{ptr @.str.61, !408, !"<string literal>", i1 false, i1 false}
!410 = !{ptr @init_cgroup_housekeeping.__key.62, !411, !"__key", i1 false, i1 false}
!411 = !{!"../kernel/cgroup/cgroup.c", i32 1964, i32 2}
!412 = !{ptr @.str.63, !411, !"<string literal>", i1 false, i1 false}
!413 = !{ptr @prev_cputime_init.__key, !414, !"__key", i1 false, i1 false}
!414 = !{!"../include/linux/sched/cputime.h", i32 185, i32 2}
!415 = !{ptr @.str.64, !414, !"<string literal>", i1 false, i1 false}
!416 = !{ptr @.str.65, !417, !"<string literal>", i1 false, i1 false}
!417 = !{!"../kernel/cgroup/cgroup.c", i32 4070, i32 5}
!418 = !{ptr @.str.66, !417, !"<string literal>", i1 false, i1 false}
!419 = !{ptr @cgroup_addrm_files._entry, !417, !"_entry", i1 false, i1 false}
!420 = !{ptr @cgroup_addrm_files._entry_ptr, !417, !"_entry_ptr", i1 false, i1 false}
!421 = !{ptr @cgroup_add_file.__key, !422, !"__key", i1 false, i1 false}
!422 = !{!"../kernel/cgroup/cgroup.c", i32 4023, i32 3}
!423 = !{ptr @.str.67, !422, !"<string literal>", i1 false, i1 false}
!424 = !{ptr @.str.68, !425, !"<string literal>", i1 false, i1 false}
!425 = !{!"../kernel/cgroup/cgroup.c", i32 1495, i32 51}
!426 = !{ptr @.str.69, !427, !"<string literal>", i1 false, i1 false}
!427 = !{!"../kernel/cgroup/cgroup.c", i32 1497, i32 39}
!428 = distinct !{null, !1, !"__already_done", i1 false, i1 false}
!429 = !{ptr @.str.70, !1, !"<string literal>", i1 false, i1 false}
!430 = distinct !{null, !1, !"__warned", i1 false, i1 false}
!431 = distinct !{null, !432, !"__already_done", i1 false, i1 false}
!432 = !{!"../include/linux/cpumask.h", i32 108, i32 2}
!433 = !{ptr @.str.71, !432, !"<string literal>", i1 false, i1 false}
!434 = distinct !{null, !45, !"__already_done", i1 false, i1 false}
!435 = distinct !{null, !45, !"__warned", i1 false, i1 false}
!436 = !{ptr @cgroup_fs_context_ops, !437, !"cgroup_fs_context_ops", i1 false, i1 false}
!437 = !{!"../kernel/cgroup/cgroup.c", i32 2163, i32 43}
!438 = !{ptr @.str.72, !439, !"<string literal>", i1 false, i1 false}
!439 = !{!"../kernel/cgroup/cgroup.c", i32 1873, i32 2}
!440 = !{ptr @.str.73, !441, !"<string literal>", i1 false, i1 false}
!441 = !{!"../kernel/cgroup/cgroup.c", i32 1874, i32 2}
!442 = !{ptr @.str.74, !443, !"<string literal>", i1 false, i1 false}
!443 = !{!"../kernel/cgroup/cgroup.c", i32 1875, i32 2}
!444 = !{ptr @cgroup2_fs_parameters, !445, !"cgroup2_fs_parameters", i1 false, i1 false}
!445 = !{!"../kernel/cgroup/cgroup.c", i32 1872, i32 39}
!446 = !{ptr @cgroup1_fs_context_ops, !447, !"cgroup1_fs_context_ops", i1 false, i1 false}
!447 = !{!"../kernel/cgroup/cgroup.c", i32 2170, i32 43}
!448 = !{ptr @.str.75, !449, !"<string literal>", i1 false, i1 false}
!449 = !{!"../kernel/cgroup/cgroup.c", i32 2231, i32 12}
!450 = !{ptr @cgroup2_fs_type, !451, !"cgroup2_fs_type", i1 false, i1 false}
!451 = !{!"../kernel/cgroup/cgroup.c", i32 2230, i32 32}
!452 = !{ptr @.str.76, !453, !"<string literal>", i1 false, i1 false}
!453 = !{!"../kernel/cgroup/cgroup.c", i32 189, i32 8}
!454 = !{ptr @cgroup_hierarchy_idr, !453, !"cgroup_hierarchy_idr", i1 false, i1 false}
!455 = distinct !{null, !456, !"__already_done", i1 false, i1 false}
!456 = !{!"../kernel/cgroup/cgroup.c", i32 2368, i32 2}
!457 = distinct !{null, !37, !"__already_done", i1 false, i1 false}
!458 = distinct !{null, !37, !"__warned", i1 false, i1 false}
!459 = distinct !{null, !460, !"__already_done", i1 false, i1 false}
!460 = !{!"../kernel/cgroup/cgroup.c", i32 615, i32 2}
!461 = distinct !{null, !462, !"__already_done", i1 false, i1 false}
!462 = !{!"../kernel/cgroup/cgroup.c", i32 3169, i32 4}
!463 = !{ptr @css_killed_ref_fn.__key, !464, !"__key", i1 false, i1 false}
!464 = !{!"../kernel/cgroup/cgroup.c", i32 5570, i32 3}
!465 = !{ptr @.str.77, !464, !"<string literal>", i1 false, i1 false}
!466 = !{ptr @cgroup_destroy_wq, !467, !"cgroup_destroy_wq", i1 false, i1 false}
!467 = !{!"../kernel/cgroup/cgroup.c", i32 126, i32 33}
!468 = !{ptr @.str.78, !469, !"<string literal>", i1 false, i1 false}
!469 = !{!"../kernel/cgroup/cgroup.c", i32 111, i32 8}
!470 = !{ptr @cgroup_file_kn_lock, !469, !"cgroup_file_kn_lock", i1 false, i1 false}
!471 = !{ptr @css_release.__key, !472, !"__key", i1 false, i1 false}
!472 = !{!"../kernel/cgroup/cgroup.c", i32 5213, i32 2}
!473 = !{ptr @css_release_work_fn.__key, !474, !"__key", i1 false, i1 false}
!474 = !{!"../kernel/cgroup/cgroup.c", i32 5204, i32 2}
!475 = !{ptr @.str.79, !474, !"<string literal>", i1 false, i1 false}
!476 = !{ptr @.str.80, !477, !"<string literal>", i1 false, i1 false}
!477 = !{!"../kernel/cgroup/cgroup.c", i32 105, i32 8}
!478 = !{ptr @cgroup_idr_lock, !477, !"cgroup_idr_lock", i1 false, i1 false}
!479 = distinct !{null, !21, !"__already_done", i1 false, i1 false}
!480 = distinct !{null, !21, !"__warned", i1 false, i1 false}
!481 = distinct !{null, !5, !"__already_done", i1 false, i1 false}
!482 = distinct !{null, !5, !"__warned", i1 false, i1 false}
!483 = !{ptr @css_serial_nr_next, !484, !"css_serial_nr_next", i1 false, i1 false}
!484 = !{!"../kernel/cgroup/cgroup.c", i32 198, i32 12}
!485 = distinct !{null, !486, !"__warned", i1 false, i1 false}
!486 = !{!"../kernel/cgroup/cgroup.c", i32 3979, i32 21}
!487 = distinct !{null, !488, !"__warned", i1 false, i1 false}
!488 = !{!"../kernel/cgroup/cgroup.c", i32 3980, i32 21}
!489 = distinct !{null, !490, !"__already_done", i1 false, i1 false}
!490 = !{!"../kernel/cgroup/cgroup.c", i32 3129, i32 4}
!491 = !{ptr @css_create.__key, !492, !"__key", i1 false, i1 false}
!492 = !{!"../kernel/cgroup/cgroup.c", i32 5335, i32 2}
!493 = distinct !{null, !13, !"__already_done", i1 false, i1 false}
!494 = distinct !{null, !13, !"__warned", i1 false, i1 false}
!495 = distinct !{null, !496, !"__warned", i1 false, i1 false}
!496 = !{!"../kernel/cgroup/cgroup.c", i32 5681, i32 2}
!497 = distinct !{null, !17, !"__already_done", i1 false, i1 false}
!498 = distinct !{null, !17, !"__warned", i1 false, i1 false}
!499 = !{ptr @cgroup_kf_syscall_ops, !500, !"cgroup_kf_syscall_ops", i1 false, i1 false}
!500 = !{!"../kernel/cgroup/cgroup.c", i32 5731, i32 34}
!501 = !{ptr @.str.82, !502, !"<string literal>", i1 false, i1 false}
!502 = !{!"../kernel/cgroup/cgroup.c", i32 1926, i32 17}
!503 = !{ptr @.str.83, !504, !"<string literal>", i1 false, i1 false}
!504 = !{!"../kernel/cgroup/cgroup.c", i32 1928, i32 17}
!505 = !{ptr @.str.84, !506, !"<string literal>", i1 false, i1 false}
!506 = !{!"../kernel/cgroup/cgroup.c", i32 1930, i32 17}
!507 = !{ptr @.str.85, !121, !"<string literal>", i1 false, i1 false}
!508 = !{ptr @.str.86, !126, !"<string literal>", i1 false, i1 false}
!509 = !{ptr @.str.87, !131, !"<string literal>", i1 false, i1 false}
!510 = !{ptr @.str.88, !136, !"<string literal>", i1 false, i1 false}
!511 = !{ptr @.str.89, !141, !"<string literal>", i1 false, i1 false}
!512 = !{ptr @.str.90, !146, !"<string literal>", i1 false, i1 false}
!513 = !{ptr @.str.91, !151, !"<string literal>", i1 false, i1 false}
!514 = !{ptr @.str.92, !156, !"<string literal>", i1 false, i1 false}
!515 = !{ptr @.str.93, !161, !"<string literal>", i1 false, i1 false}
!516 = !{ptr @.str.94, !166, !"<string literal>", i1 false, i1 false}
!517 = !{ptr @.str.95, !171, !"<string literal>", i1 false, i1 false}
!518 = !{ptr @.str.96, !176, !"<string literal>", i1 false, i1 false}
!519 = !{ptr @.str.97, !181, !"<string literal>", i1 false, i1 false}
!520 = !{ptr @.str.98, !186, !"<string literal>", i1 false, i1 false}
!521 = !{ptr @cgroup_subsys_name, !522, !"cgroup_subsys_name", i1 false, i1 false}
!522 = !{!"../kernel/cgroup/cgroup.c", i32 137, i32 20}
!523 = !{ptr @.str.99, !524, !"<string literal>", i1 false, i1 false}
!524 = !{!"../kernel/cgroup/cgroup.c", i32 5742, i32 2}
!525 = !{ptr @.str.100, !524, !"<string literal>", i1 false, i1 false}
!526 = !{ptr @cgroup_init_subsys.__UNIQUE_ID_ddebug577, !524, !"__UNIQUE_ID_ddebug577", i1 false, i1 false}
!527 = !{ptr @.str.101, !524, !"<string literal>", i1 false, i1 false}
!528 = !{ptr @xa_init_flags.__key, !529, !"__key", i1 false, i1 false}
!529 = !{!"../include/linux/xarray.h", i32 378, i32 2}
!530 = !{ptr @.str.102, !529, !"<string literal>", i1 false, i1 false}
!531 = !{ptr @cgroup_kf_ops, !532, !"cgroup_kf_ops", i1 false, i1 false}
!532 = !{!"../kernel/cgroup/cgroup.c", i32 3963, i32 26}
!533 = !{ptr @.str.103, !534, !"<string literal>", i1 false, i1 false}
!534 = !{!"../kernel/cgroup/cgroup.c", i32 3946, i32 17}
!535 = !{ptr @.str.104, !536, !"<string literal>", i1 false, i1 false}
!536 = !{!"../kernel/cgroup/cgroup.c", i32 3948, i32 17}
!537 = !{ptr @cgroup_kf_single_ops, !538, !"cgroup_kf_single_ops", i1 false, i1 false}
!538 = !{!"../kernel/cgroup/cgroup.c", i32 3954, i32 26}
!539 = !{ptr @cgroup_base_files, !540, !"cgroup_base_files", i1 false, i1 false}
!540 = !{!"../kernel/cgroup/cgroup.c", i32 4983, i32 22}
!541 = !{ptr @.str.105, !542, !"<string literal>", i1 false, i1 false}
!542 = !{!"../kernel/cgroup/cgroup.c", i32 3436, i32 17}
!543 = !{ptr @.str.106, !544, !"<string literal>", i1 false, i1 false}
!544 = !{!"../kernel/cgroup/cgroup.c", i32 3438, i32 17}
!545 = !{ptr @.str.107, !546, !"<string literal>", i1 false, i1 false}
!546 = !{!"../kernel/cgroup/cgroup.c", i32 3440, i32 17}
!547 = !{ptr @.str.108, !548, !"<string literal>", i1 false, i1 false}
!548 = !{!"../kernel/cgroup/cgroup.c", i32 3442, i32 17}
!549 = !{ptr @.str.109, !550, !"<string literal>", i1 false, i1 false}
!550 = !{!"../kernel/cgroup/cgroup.c", i32 3454, i32 28}
!551 = !{ptr @.str.110, !552, !"<string literal>", i1 false, i1 false}
!552 = !{!"../kernel/cgroup/cgroup.c", i32 4846, i32 16}
!553 = distinct !{null, !554, !"__already_done", i1 false, i1 false}
!554 = !{!"../kernel/cgroup/cgroup.c", i32 4814, i32 7}
!555 = !{ptr @.str.111, !556, !"<string literal>", i1 false, i1 false}
!556 = !{!"../kernel/cgroup/cgroup.c", i32 3295, i32 29}
!557 = !{ptr @.str.112, !558, !"<string literal>", i1 false, i1 false}
!558 = !{!"../kernel/cgroup/cgroup.c", i32 3559, i32 18}
!559 = !{ptr @.str.113, !560, !"<string literal>", i1 false, i1 false}
!560 = !{!"../kernel/cgroup/cgroup.c", i32 3560, i32 18}
!561 = !{ptr @.str.114, !562, !"<string literal>", i1 false, i1 false}
!562 = !{!"../kernel/cgroup/cgroup.c", i32 3475, i32 17}
!563 = !{ptr @.str.115, !564, !"<string literal>", i1 false, i1 false}
!564 = !{!"../kernel/cgroup/cgroup.c", i32 3490, i32 19}
!565 = !{ptr @.str.116, !566, !"<string literal>", i1 false, i1 false}
!566 = !{!"../kernel/cgroup/cgroup.c", i32 3569, i32 18}
!567 = !{ptr @.str.117, !568, !"<string literal>", i1 false, i1 false}
!568 = !{!"../kernel/cgroup/cgroup.c", i32 3571, i32 18}
!569 = !{ptr @.str.118, !570, !"<string literal>", i1 false, i1 false}
!570 = !{!"../include/linux/local_lock_internal.h", i32 36, i32 2}
!571 = !{ptr @.str.119, !570, !"<string literal>", i1 false, i1 false}
!572 = !{ptr @.str.120, !570, !"<string literal>", i1 false, i1 false}
!573 = !{ptr @cpuset_fs_type, !574, !"cpuset_fs_type", i1 false, i1 false}
!574 = !{!"../kernel/cgroup/cgroup.c", i32 2275, i32 32}
!575 = !{ptr @.str.121, !576, !"<string literal>", i1 false, i1 false}
!576 = !{!"../kernel/cgroup/cgroup.c", i32 2251, i32 24}
!577 = !{ptr @cpuset_fs_context_ops, !578, !"cpuset_fs_context_ops", i1 false, i1 false}
!578 = !{!"../kernel/cgroup/cgroup.c", i32 2239, i32 43}
!579 = !{ptr @.str.122, !580, !"<string literal>", i1 false, i1 false}
!580 = !{!"../kernel/cgroup/cgroup.c", i32 5947, i32 38}
!581 = !{ptr @.str.123, !582, !"<string literal>", i1 false, i1 false}
!582 = !{!"../include/linux/percpu-rwsem.h", i32 49, i32 2}
!583 = distinct !{null, !584, !"__warned", i1 false, i1 false}
!584 = !{!"../include/linux/rcu_sync.h", i32 34, i32 2}
!585 = !{ptr @.str.124, !584, !"<string literal>", i1 false, i1 false}
!586 = !{ptr @.str.125, !584, !"<string literal>", i1 false, i1 false}
!587 = distinct !{null, !588, !"__already_done", i1 false, i1 false}
!588 = !{!"../kernel/cgroup/cgroup.c", i32 910, i32 3}
!589 = distinct !{null, !590, !"__already_done", i1 false, i1 false}
!590 = !{!"../kernel/cgroup/cgroup.c", i32 917, i32 3}
!591 = distinct !{null, !592, !"__already_done", i1 false, i1 false}
!592 = !{!"../kernel/cgroup/cgroup.c", i32 926, i32 3}
!593 = !{ptr @__setup_str_cgroup_disable, !286, !"__setup_str_cgroup_disable", i1 false, i1 false}
!594 = !{ptr @.str.128, !595, !"<string literal>", i1 false, i1 false}
!595 = !{!"../kernel/cgroup/cgroup.c", i32 6468, i32 4}
!596 = !{ptr @.str.129, !595, !"<string literal>", i1 false, i1 false}
!597 = !{ptr @cgroup_disable._entry, !595, !"_entry", i1 false, i1 false}
!598 = !{ptr @cgroup_disable._entry_ptr, !595, !"_entry_ptr", i1 false, i1 false}
!599 = !{ptr @.str.131, !600, !"<string literal>", i1 false, i1 false}
!600 = !{!"../kernel/cgroup/cgroup.c", i32 6476, i32 4}
!601 = !{ptr @cgroup_disable._entry.130, !600, !"_entry", i1 false, i1 false}
!602 = !{ptr @cgroup_disable._entry_ptr.132, !600, !"_entry_ptr", i1 false, i1 false}
!603 = !{ptr @.str.133, !604, !"<string literal>", i1 false, i1 false}
!604 = !{!"../kernel/cgroup/cgroup.c", i32 231, i32 2}
!605 = distinct !{null, !606, !"cgroup_opt_feature_names", i1 false, i1 false}
!606 = !{!"../kernel/cgroup/cgroup.c", i32 229, i32 20}
!607 = !{ptr @__setup_str_enable_cgroup_debug, !288, !"__setup_str_enable_cgroup_debug", i1 false, i1 false}
!608 = !{ptr @cgroup_sysfs_attr_group, !609, !"cgroup_sysfs_attr_group", i1 false, i1 false}
!609 = !{!"../kernel/cgroup/cgroup.c", i32 6771, i32 37}
!610 = !{ptr @cgroup_sysfs_attrs, !611, !"cgroup_sysfs_attrs", i1 false, i1 false}
!611 = !{!"../kernel/cgroup/cgroup.c", i32 6765, i32 26}
!612 = !{ptr @.str.134, !613, !"<string literal>", i1 false, i1 false}
!613 = !{!"../kernel/cgroup/cgroup.c", i32 6753, i32 53}
!614 = !{ptr @cgroup_delegate_attr, !615, !"cgroup_delegate_attr", i1 false, i1 false}
!615 = !{!"../kernel/cgroup/cgroup.c", i32 6753, i32 30}
!616 = !{ptr @.str.135, !617, !"<string literal>", i1 false, i1 false}
!617 = !{!"../kernel/cgroup/cgroup.c", i32 6725, i32 43}
!618 = !{ptr @.str.136, !619, !"<string literal>", i1 false, i1 false}
!619 = !{!"../kernel/cgroup/cgroup.c", i32 6727, i32 42}
!620 = !{ptr @.str.137, !621, !"<string literal>", i1 false, i1 false}
!621 = !{!"../kernel/cgroup/cgroup.c", i32 6763, i32 53}
!622 = !{ptr @cgroup_features_attr, !623, !"cgroup_features_attr", i1 false, i1 false}
!623 = !{!"../kernel/cgroup/cgroup.c", i32 6763, i32 30}
!624 = !{ptr @.str.138, !625, !"<string literal>", i1 false, i1 false}
!625 = !{!"../kernel/cgroup/cgroup.c", i32 6759, i32 4}
!626 = !{!"sp"}
!627 = !{i32 1, !"wchar_size", i32 2}
!628 = !{i32 1, !"min_enum_size", i32 4}
!629 = !{i32 8, !"branch-target-enforcement", i32 0}
!630 = !{i32 8, !"sign-return-address", i32 0}
!631 = !{i32 8, !"sign-return-address-all", i32 0}
!632 = !{i32 8, !"sign-return-address-with-bkey", i32 0}
!633 = !{i32 7, !"uwtable", i32 1}
!634 = !{i32 7, !"frame-pointer", i32 2}
!635 = !{!"clang version 15.0.0 (git@github.com:linkeLi0421/llvm-project15-IRDumperPass.git 23ab625cb005cd08da083f9b643a7feed9af8abe)"}
!636 = !{!"branch_weights", i32 2000, i32 1}
!637 = !{!"branch_weights", i32 1, i32 2000}
!638 = !{!"auto-init"}
!639 = !{i64 2149462999}
!640 = !{i64 2149463265}
!641 = !{i64 1029743, i64 1029804}
!642 = !{i64 1032475}
!643 = !{i64 1032760}
!644 = !{i64 2148634904}
!645 = !{i64 1121504, i64 1121529, i64 1121551, i64 1121567, i64 1121579, i64 1121599, i64 1121623, i64 1121639, i64 1121651}
!646 = !{i64 2148635092}
!647 = !{i64 2148725016}
!648 = !{i64 2148639480, i64 2148639512, i64 2148639541, i64 2148639575, i64 2148639606, i64 2148639629}
!649 = !{i64 2149770986}
!650 = !{i64 2159294395, i64 2159294883, i64 2159294432, i64 2159294488, i64 2159294522, i64 2159294546, i64 2159294587, i64 2159294608, i64 2159294636, i64 2159294670}
!651 = !{i64 2159319853}
!652 = !{i64 2149488391}
!653 = !{i64 2159283713, i64 2159288262, i64 2159283750, i64 2159283806, i64 2159283840, i64 2159283864, i64 2159283905, i64 2159283926, i64 2159283954, i64 2159283988}
!654 = !{i8 0, i8 2}
!655 = !{i64 2159337951, i64 2159338439, i64 2159337988, i64 2159338044, i64 2159338078, i64 2159338102, i64 2159338143, i64 2159338164, i64 2159338192, i64 2159338226}
!656 = !{i64 2159339585, i64 2159340073, i64 2159339622, i64 2159339678, i64 2159339712, i64 2159339736, i64 2159339777, i64 2159339798, i64 2159339826, i64 2159339860}
!657 = !{i64 2148448878, i64 2148448883, i64 2148448896, i64 2148448940, i64 2148448974, i64 2148448995}
!658 = !{i64 2157965237}
!659 = !{i64 2157965442}
!660 = !{i64 2149471558}
!661 = !{i64 2149472594}
!662 = !{i64 2159253151, i64 2159253639, i64 2159253188, i64 2159253244, i64 2159253278, i64 2159253302, i64 2159253343, i64 2159253364, i64 2159253392, i64 2159253426}
!663 = !{i64 2148637015, i64 2148637047, i64 2148637076, i64 2148637110, i64 2148637141, i64 2148637164}
!664 = !{i64 2159222879, i64 2159223367, i64 2159222916, i64 2159222972, i64 2159223006, i64 2159223030, i64 2159223071, i64 2159223092, i64 2159223120, i64 2159223154}
!665 = !{i64 2159224501, i64 2159224989, i64 2159224538, i64 2159224594, i64 2159224628, i64 2159224652, i64 2159224693, i64 2159224714, i64 2159224742, i64 2159224776}
!666 = !{i64 2159228677, i64 2159229165, i64 2159228714, i64 2159228770, i64 2159228804, i64 2159228828, i64 2159228869, i64 2159228890, i64 2159228918, i64 2159228952}
!667 = !{i64 2159260856, i64 2159261344, i64 2159260893, i64 2159260949, i64 2159260983, i64 2159261007, i64 2159261048, i64 2159261069, i64 2159261097, i64 2159261131}
!668 = !{i64 2158120628}
!669 = !{i64 2158120893}
!670 = !{i64 2148635485, i64 2148635511, i64 2148635540, i64 2148635574, i64 2148635605, i64 2148635628}
!671 = !{i64 2152822796}
!672 = !{i64 2158018056}
!673 = !{i64 2158018263}
!674 = !{i64 2158034174}
!675 = !{i64 2158034381}
!676 = !{i64 2159595863, i64 2159596351, i64 2159595900, i64 2159595956, i64 2159595990, i64 2159596014, i64 2159596055, i64 2159596076, i64 2159596104, i64 2159596138}
!677 = !{i64 2159597634, i64 2159598122, i64 2159597671, i64 2159597727, i64 2159597761, i64 2159597785, i64 2159597826, i64 2159597847, i64 2159597875, i64 2159597909}
!678 = !{i64 2159599260, i64 2159599748, i64 2159599297, i64 2159599353, i64 2159599387, i64 2159599411, i64 2159599452, i64 2159599473, i64 2159599501, i64 2159599535}
!679 = !{i64 2159600858, i64 2159601346, i64 2159600895, i64 2159600951, i64 2159600985, i64 2159601009, i64 2159601050, i64 2159601071, i64 2159601099, i64 2159601133}
!680 = !{i64 2159608283, i64 2159608771, i64 2159608320, i64 2159608376, i64 2159608410, i64 2159608434, i64 2159608475, i64 2159608496, i64 2159608524, i64 2159608558}
!681 = !{i64 2159609971, i64 2159610459, i64 2159610008, i64 2159610064, i64 2159610098, i64 2159610122, i64 2159610163, i64 2159610184, i64 2159610212, i64 2159610246}
!682 = !{i64 2159617827, i64 2159618315, i64 2159617864, i64 2159617920, i64 2159617954, i64 2159617978, i64 2159618019, i64 2159618040, i64 2159618068, i64 2159618102}
!683 = !{i64 2159619729, i64 2159620217, i64 2159619766, i64 2159619822, i64 2159619856, i64 2159619880, i64 2159619921, i64 2159619942, i64 2159619970, i64 2159620004}
!684 = !{i64 2159634251, i64 2159634739, i64 2159634288, i64 2159634344, i64 2159634378, i64 2159634402, i64 2159634443, i64 2159634464, i64 2159634492, i64 2159634526}
!685 = !{i64 2152561330}
!686 = !{i64 2152570180}
!687 = !{i64 2148474065, i64 2148474345, i64 2148474679, i64 2148475013}
!688 = !{i64 2159688507}
!689 = !{i64 2159688349}
!690 = !{i64 2148723937}
!691 = !{i64 2148638670, i64 2148638702, i64 2148638731, i64 2148638765, i64 2148638796, i64 2148638819}
!692 = !{i64 2148724166}
!693 = !{i64 2158160165}
!694 = !{i64 2158160404}
!695 = !{i64 2158050368}
!696 = !{i64 2158050579}
!697 = !{i64 2148637950, i64 2148637976, i64 2148638005, i64 2148638039, i64 2148638070, i64 2148638093}
!698 = !{i64 2159270360, i64 2159270848, i64 2159270397, i64 2159270453, i64 2159270487, i64 2159270511, i64 2159270552, i64 2159270573, i64 2159270601, i64 2159270635}
!699 = !{i64 2159271994, i64 2159272482, i64 2159272031, i64 2159272087, i64 2159272121, i64 2159272145, i64 2159272186, i64 2159272207, i64 2159272235, i64 2159272269}
!700 = !{i64 2157981581}
!701 = !{i64 2157981790}
!702 = !{i64 2159555239, i64 2159555727, i64 2159555276, i64 2159555332, i64 2159555366, i64 2159555390, i64 2159555431, i64 2159555452, i64 2159555480, i64 2159555514}
!703 = !{i64 2159563216}
!704 = distinct !{!704, !705}
!705 = !{!"llvm.loop.peeled.count", i32 1}
!706 = !{i64 2159439553}
!707 = !{i64 2152580134}
!708 = !{i64 2152589629}
!709 = !{i64 2152599106}
